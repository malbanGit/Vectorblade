BANK 2
EQU $01 QUAD_BANK
EQU $02 CURRENT_BANK
EQU $00 TESTING
COMMENT_LABEL $00 switch between usiong TEST/Debug values (defined below)
EQU $00 TIMER_LEVEL
COMMENT_LABEL $00 if defined there is a time trialmodus, but implementaion not finished.
EQU $01 DO_DYING_BONUS
COMMENT_LABEL $01 on death sprawl up to 5 bonus items, whoch might be lost upon a death
EQU $01 ERRATIC_STARTING_WITH_HARD
COMMENT_LABEL $01 else startng with NORMAL
EQU $01 REDUCED_OBJECT_SIZE
COMMENT_LABEL $01 TODO: ram object use only 1 byte to encode the following object (not finished)
EQU $00 USE_BIG_STACK
COMMENT_LABEL $00 this reduces bonus on screen from 6 to 4 gives 16 bytes more stack
EQU $00 NMI_HANDLER
COMMENT_LABEL $00 NMI handler is not faulty resistent!
EQU $00 RECORD_GAME_DATA
COMMENT_LABEL $00 if enabled game and gameplay will be saved each level to "gamesave" location ($a000)
EQU $00 INCLUDE_NMI_TIMING
COMMENT_LABEL $00 NMI handler also displays T1 / T2 (after NMI is entered)
EQU $01 DRAW_FIGHTER_IN_BANK0
COMMENT_LABEL $01 than different "evolving" fighters are drawn (each shot) ... tiny bit slower than in bank 3
EQU $00 IS_VIA_FAULTY_RESISTENT
COMMENT_LABEL $00 no DEC, INC on VIA_Port_b, no BIOS calls - there are 1 or 2 "new" instances, where this is not correctly handled!
LABEL $CBFC MY_STACK
COMMENT_LABEL $CBFC overall stack frame start, uses (obviously) also interrupt vectors etc
EQU $01 SCOOPY_HIT_LARGE_OBJECT
COMMENT_LABEL $01 if defined, "center" hits on large enemies, also devour scoopy hits automatically
EQU $00 TEST_ALL_SHOTS
COMMENT_LABEL $00 makes all sorts of trouble with different enemy/size types ; if one, than from a certain enemy count all shots are tested, if not defined than always test with two saelected shots
EQU $03 ENEMY_THRESHOLD
COMMENT_LABEL $03 or less enemies are tested with ALL shots, more enemies are only tested with 2 selected shots
EQU $00 USE_NEW_SHOTS
COMMENT_LABEL $00 use vertical shots instead of horizontal shots -> slightly faster but way more ugly!
EQU $00 BIOS_WR
COMMENT_LABEL $00 use BIOS WR in main loop, slower but more easy to measure!
EQU $01 ENABLE_STAR_TACSCAN
COMMENT_LABEL $01 if joytick moves - star move opposite
EQU $01 TEST_VOX
COMMENT_LABEL $01 if enabled Vec Vox is used in game
EQU $00 CORRECT_START_LEVEL
COMMENT_LABEL $00 if 1, than level 25 == level 25, not boss!
EQU $00 VECFEVER
EQU $01 ALLOW_SAVING
EQU $00 EASY
EQU $01 NORMAL
EQU $02 HARD
EQU $03 IMPOSSIBLE
EQU $04 SUPER_IMPOSSIBLE
EQU -$01 HARDCORE
EQU $7F DRUNKEN_TIME
COMMENT_LABEL $7F positive - or code for "countdown display must be changed! (bank 0 Fighter Prep)
EQU $00 DEFAULT_DIFFICULTY
EQU $01 SHORT_INVULNERABILITY
LABEL $00DC WARP_FAILURE_BORDER
EQU $00 IMMUNITY_START
EQU $00 LOCK_START
EQU $00 START_LEVEL
EQU $02 START_SHOT_NUMBER
COMMENT_LABEL $02 2
EQU $01 START_SHOT_WIDTH
COMMENT_LABEL $01 1-4 normal shots, 5 triangle shot, 6 lazer
LABEL $01F4 START_FIGHTER_SPEED
LABEL $01F4 START_SHOT_SPEED
EQU $19 SPEED_DELTA
COMMENT_LABEL $19 both shot and player
LABEL $01F4 START_TIMER_MAX
COMMENT_LABEL $01F4 10 seconds
LABEL $012C MEGAFIEND_HP
LABEL $012C MONEYSUCKER_HP
EQU $00 DEAFULT_START_MONEY
EQU $03 PLAYER_START_LIVES
EQU $00 START_POWER
EQU $00 INGAMESECRETS
EQU $32 SUPER_DIAMOND_BORDER
EQU $01 UP
EQU $03 RIGHT
EQU $05 DOWN
EQU $07 LEFT
EQU $00 NONE
EQU $00 START_BANK
EQU $19 EXPLOSION_MAX_SCALE
EQU $06 MAX_BULLET_POWER_ADJUST
EQU $00 SHOT_RADIUS0
EQU $09 SHOT_RADIUS1
COMMENT_LABEL $09 all Radius must be different
EQU $0E SHOT_RADIUS2
COMMENT_LABEL $0E the radius is also used to determine the current shot type!
EQU $12 SHOT_RADIUS3
EQU $18 SHOT_RADIUS4
COMMENT_LABEL $18 maximum, otherwise col detect fucks up!
EQU $0A SHOT_RADIUS5
COMMENT_LABEL $0A all Radius must be different
EQU $08 SHOT_RADIUS6
COMMENT_LABEL $08 all Radius must be different
EQU $01 COLLECTED_RANK1
EQU $02 COLLECTED_RANK2
EQU $04 COLLECTED_RANK3
EQU $08 COLLECTED_RANK4
EQU $10 COLLECTED_RANK5
EQU $20 COLLECTED_RANK6
EQU $40 COLLECTED_RANK_NEGATIVE
COMMENT_LABEL $40 not implemented
EQU $0A SAUCER_START_DELAY
COMMENT_LABEL $0A seconds
LABEL $00D0 SUCKER_YPOS
EQU $0A MONEY_SUCK_WAIT
COMMENT_LABEL $0A rounds = 1/5 second
EQU $23 MAX_PLAYER_EXPLOSION_SIZE
EQU $00 MESSAGE_STATE_STAY
EQU $01 MESSAGE_STATE_SCROLL_NORMAL_OUT
EQU $02 MESSAGE_STATE_SCROLL_MESSAGE_IN
EQU $03 MESSAGE_STATE_STAY_TIMED
EQU $04 MESSAGE_STATE_SCROLL_MESSAGE_OUT
EQU $05 MESSAGE_STATE_SCROLL_NORMAL_IN
LABEL $0080 PLAYER_YPOS
LABEL $03E8 MAX_PLAYER_SPEED
LABEL $00C8 MIN_PLAYER_SPEED
LABEL $03E8 MAX_SHOT_SPEED
LABEL $00C8 MIN_SHOT_SPEED
EQU $32 DELAY_TO_REAPEAR
COMMENT_LABEL $32 1 s - how long the enemies "disappear" after their initial attack phase
EQU $07 OBJECT_SCALE
COMMENT_LABEL $07 9
EQU $19 STRING_SCALE
EQU $03 ANIMATION_DELAY
COMMENT_LABEL $03 for ALL animation in game
EQU $3F DEFAULT_ENEMY_INTENSITY
EQU $02 ATTACK_PATTERN_PROBABILITY
EQU $05 HIT_FLASH_LENGTH
COMMENT_LABEL $05 should be smaller than smallest P_START_DELAY_OF_PATTERN
EQU $32 VB_SPRITE_SCALE50
EQU $32 BOSS_SPRITE_SCALE
EQU $01 LEVEL_TYPE_NORMAL
EQU $02 LEVEL_TYPE_KAMIKAZE
EQU $03 LEVEL_TYPE_BIGGY
EQU $04 LEVEL_TYPE_BONUS
COMMENT_LABEL $04 akill all to get special bonus, enemies don't shoot
EQU $05 LEVEL_TYPE_BOSS1
EQU $06 LEVEL_TYPE_BOSS2
EQU $07 LEVEL_TYPE_BOSS3
EQU $08 LEVEL_TYPE_BOSS4
EQU $09 LEVEL_TYPE_FAILURE
LABEL $0080 LEVEL_TYPE_SHOP_AFTER
EQU $40 LEVEL_TYPE_WARP_AFTER
EQU $20 LEVEL_TYPE_DONT_SHOOT_WHILE_WAITING
EQU $10 LEVEL_APPEAR_AT_WAITING
EQU $0C CLONE_MAX_ENEMY_DISPLAYED
COMMENT_LABEL $0C only allow cloning when maximum 12 enemies are visible!
EQU $00 TYPE_NONE
EQU $01 TYPE_DIRECT_WAIT
COMMENT_LABEL $01 they don't delay after attack pattern in "off" but move directly to their waiting position
EQU $02 TYPE_DONT_SHOOT
COMMENT_LABEL $02 they never shhot
EQU $04 TYPE_DONT_ATTACK
COMMENT_LABEL $04 they never enter an attack pattern
EQU $08 TYPE_DONT_WAIT
COMMENT_LABEL $08 kamikaze type attackers which do never wait
EQU $10 _UNUSED_TYPE_SINGLE_ANIMATION
COMMENT_LABEL $10 this enemy has no "angle" it always animates the "same" (not implemented
EQU $20 TYPE_CAN_CLONE
COMMENT_LABEL $20 while starting an attack pattern, enemy can clone itself
EQU $40 TYPE_DEBRIS_BOMBER
COMMENT_LABEL $40 does not explode while dying, but drops a "debris" bomb :-)
LABEL $0080 TYPE_SHIELD
COMMENT_LABEL $0080 can not be destroyed, doesn't count as "level finsih enemy", they don't wobble while waiting
EQU $00 SINGLE_ATTACK_RELATIVE_PATTERN
COMMENT_LABEL $00 relative means - it uses the current position of the enemy as start
EQU $01 SINGLE_ATTACK_TARGET_ENEMY_PATTERN
COMMENT_LABEL $01 TARGET - uses somehow the players coordinate as coordinate info
EQU $02 SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LABEL $02 moves from current position to an absolut screen position
EQU $03 SINGLE_ATTACK_JUMP
COMMENT_LABEL $03 init another pattern , position int speed, subposition = to 0
EQU $64 BOSS2_HITPOINTS
COMMENT_LABEL $64 Insect Queen
LABEL $00C8 BOSS1_HITPOINTS
COMMENT_LABEL $00C8 Mecha
LABEL $017C BOSS3_HITPOINTS
COMMENT_LABEL $017C Sinistar
LABEL $00C8 BOSS4_HITPOINTS
COMMENT_LABEL $00C8 Death star
EQU -$20 SWARM_MIN_X
COMMENT_LABEL -$20 rectangle where the swarm will move in (or is headed to)
EQU $20 SWARM_MAX_X
EQU -$40 SWARM_MIN_Y
EQU -$10 SWARM_MAX_Y
EQU $01 SWARM_HP
COMMENT_LABEL $01 hit points of a single swarm member
EQU -$40 TRIBBLE_MIN_X
COMMENT_LABEL -$40 rectangle where the tribbles will move in (or is headed to)
EQU $40 TRIBBLE_MAX_X
EQU -$40 TRIBBLE_MIN_Y
EQU $40 TRIBBLE_MAX_Y
EQU $00 A_SNIPER_RANK3
EQU $02 A_SNIPER_RANK2
EQU $04 A_SNIPER_RANK1
EQU $06 A_SCORE_RANK5
EQU $08 A_SCORE_RANK4
EQU $0A A_SCORE_RANK3
EQU $0C A_SCORE_RANK2
EQU $0E A_SCORE_RANK1
EQU $10 A_MONEY_RANK5
EQU $12 A_MONEY_RANK4
EQU $14 A_MONEY_RANK3
EQU $16 A_MONEY_RANK2
EQU $18 A_MONEY_RANK1
EQU $1A A_GREEDY
EQU $1C A_9LIVES
EQU $1E A_ALL
EQU $20 A_BLADEMASTER_RANK_5
EQU $22 A_BLADEMASTER_RANK_4
EQU $24 A_BLADEMASTER_RANK_3
EQU $26 A_BLADEMASTER_RANK_2
EQU $28 A_BLADEMASTER_RANK_1
EQU $2A A_TRIPPLE
EQU $2C A_QUADRO
EQU $2E A_LASER
EQU $30 A_OFFICER_RANK4
EQU $32 A_OFFICER_RANK3
EQU $34 A_OFFICER_RANK2
EQU $36 A_OFFICER_RANK1
EQU $38 A_SPY_RANK4
EQU $3A A_SPY_RANK3
EQU $3C A_SPY_RANK2
EQU $3E A_SPY_RANK1
EQU $40 A_BONUS_RANK4
EQU $42 A_BONUS_RANK3
EQU $44 A_BONUS_RANK2
EQU $46 A_BONUS_RANK1
EQU $48 A_LOSS
EQU $4A A_FALCON
EQU $4C A_DRUNKEN
EQU $01 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3
COMMENT_LABEL $01 checked at the end of each game
EQU $02 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2
EQU $04 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1
EQU $08 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5
COMMENT_LABEL $08 checked at the end of each game
EQU $10 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4
EQU $20 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3
EQU $40 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2
LABEL $0080 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1
EQU $01 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5
COMMENT_LABEL $01 checked at the start of each shop
EQU $02 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4
EQU $04 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3
EQU $08 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2
EQU $10 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1
EQU $20 ACHIEVEMENT_FLAG_BYTE2_GREEDY
COMMENT_LABEL $20 check when collected / bought
EQU $40 ACHIEVEMENT_FLAG_BYTE2_9LIVES
COMMENT_LABEL $40 checked when a live is bought
LABEL $0080 ACHIEVEMENT_FLAG_BYTE2_ALL
COMMENT_LABEL $0080 checked at the end of each game
EQU $01 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK5
COMMENT_LABEL $01 checked each roll over
EQU $02 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK4
EQU $04 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK3
EQU $08 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK2
EQU $10 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK1
EQU $20 ACHIEVEMENT_FLAG_BYTE3_TRIPPLE
COMMENT_LABEL $20 checked on EXTRA / level finish
EQU $40 ACHIEVEMENT_FLAG_BYTE3_QUADRO
LABEL $0080 ACHIEVEMENT_FLAG_BYTE3_LASER
EQU $01 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4
COMMENT_LABEL $01 checked on officer level up! (after shop)
EQU $02 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK3
EQU $04 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2
EQU $08 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1
EQU $10 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4
COMMENT_LABEL $10 check when secret is discovered / end of game
EQU $20 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3
EQU $40 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK2
LABEL $0080 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1
EQU $01 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE1
COMMENT_LABEL $01 bit "number" 0-7
EQU $02 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE2
COMMENT_LABEL $02 up that "secret message" was read already!
EQU $04 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE3
EQU $08 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4
COMMENT_LABEL $08 check after challenge
EQU $10 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3
EQU $20 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2
EQU $40 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1
LABEL $0080 ACHIEVEMENT_FLAG_BYTE5_BIGGEST_LOSS
COMMENT_LABEL $0080 check on shot on collect
EQU $01 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_FALCON
COMMENT_LABEL $01 checked at the end of each minestorm
EQU $02 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_DRUNKEN
EQU $17 SCOOP_RIGHT_PLAYER_XOFFSET
EQU -$17 SCOOP_LEFT_PLAYER_XOFFSET
LABEL $0082 SCOOP_PLAYER_YPOS
EQU -$02 BONUS_MONEY_200
EQU $00 BONUS_E
EQU $02 BONUS_X
EQU $04 BONUS_T
EQU $06 BONUS_R
EQU $08 BONUS_A
EQU $0A BONUS_SHOTPLUS
EQU $0C BONUS_FASTER
EQU $0E BONUS_FASTER_SHOT
EQU $10 BONUS_SLOWER
EQU $12 BONUS_SHOTMINUS
EQU $14 BONUS_MONEY_5
EQU $16 BONUS_MONEY_20
EQU $18 BONUS_MONEY_50
EQU $1A BONUS_ARMOR
EQU $1C BONUS_SHIELD
EQU $1E BONUS_SCOOP
EQU $20 BONUS_SHOT1
EQU $22 BONUS_SHOT2
EQU $24 BONUS_SHOT3
EQU $26 BONUS_SHOT4
EQU $28 BONUS_MINESTORM
EQU $2A BONUS_MULT2
EQU $2C BONUS_MULT5
EQU $2E BONUS_BOMB_CASH
EQU $30 BONUS_BOMB_DIAMOND
EQU $32 BONUS_TIMER
EQU $34 BONUS_SLOWER_SHOT
EQU $36 BONUS_CASH_DOUBLER
EQU $38 BONUS_SHOT_POWERUP
EQU $3A BONUS_EXTRA_LIFE
EQU $3C BONUS_DRUNKEN
EQU $3E BONUS_AUTOFIRE
LABEL $C800 Vec_Snd_Shadow
COMMENT_LABEL $C800 Shadow of sound chip registers (15 bytes)
LABEL $C80F Vec_Btn_State
COMMENT_LABEL $C80F Current state of all joystick buttons
LABEL $C810 Vec_Prev_Btns
COMMENT_LABEL $C810 Previous state of all joystick buttons
LABEL $C811 Vec_Buttons
COMMENT_LABEL $C811 Current toggle state of all buttons
LABEL $C812 Vec_Button_1_1
COMMENT_LABEL $C812 Current toggle state of stick 1 button 1
LABEL $C813 Vec_Button_1_2
COMMENT_LABEL $C813 Current toggle state of stick 1 button 2
LABEL $C814 Vec_Button_1_3
COMMENT_LABEL $C814 Current toggle state of stick 1 button 3
LABEL $C815 Vec_Button_1_4
COMMENT_LABEL $C815 Current toggle state of stick 1 button 4
LABEL $C816 Vec_Button_2_1
COMMENT_LABEL $C816 Current toggle state of stick 2 button 1
LABEL $C817 Vec_Button_2_2
COMMENT_LABEL $C817 Current toggle state of stick 2 button 2
LABEL $C818 Vec_Button_2_3
COMMENT_LABEL $C818 Current toggle state of stick 2 button 3
LABEL $C819 Vec_Button_2_4
COMMENT_LABEL $C819 Current toggle state of stick 2 button 4
LABEL $C81A Vec_Joy_Resltn
COMMENT_LABEL $C81A Joystick A/D resolution ($80=min $00=max)
LABEL $C81B Vec_Joy_1_X
COMMENT_LABEL $C81B Joystick 1 left/right
LABEL $C81C Vec_Joy_1_Y
COMMENT_LABEL $C81C Joystick 1 up/down
LABEL $C81D Vec_Joy_2_X
COMMENT_LABEL $C81D Joystick 2 left/right
LABEL $C81E Vec_Joy_2_Y
COMMENT_LABEL $C81E Joystick 2 up/down
LABEL $C81F Vec_Joy_Mux
COMMENT_LABEL $C81F Joystick enable/mux flags (4 bytes)
LABEL $C81F Vec_Joy_Mux_1_X
COMMENT_LABEL $C81F Joystick 1 X enable/mux flag (=1)
LABEL $C820 Vec_Joy_Mux_1_Y
COMMENT_LABEL $C820 Joystick 1 Y enable/mux flag (=3)
LABEL $C821 Vec_Joy_Mux_2_X
COMMENT_LABEL $C821 Joystick 2 X enable/mux flag (=5)
LABEL $C822 Vec_Joy_Mux_2_Y
COMMENT_LABEL $C822 Joystick 2 Y enable/mux flag (=7)
LABEL $C823 Vec_Misc_Count
COMMENT_LABEL $C823 Misc counter/flag byte, zero when not in use
LABEL $C824 Vec_0Ref_Enable
COMMENT_LABEL $C824 Check0Ref enable flag
LABEL $C825 Vec_Loop_Count
COMMENT_LABEL $C825 Loop counter word (incremented in Wait_Recal)
LABEL $C827 Vec_Brightness
COMMENT_LABEL $C827 Default brightness
LABEL $C828 Vec_Dot_Dwell
COMMENT_LABEL $C828 Dot dwell time?
LABEL $C829 Vec_Pattern
COMMENT_LABEL $C829 Dot pattern (bits)
LABEL $C82A Vec_Text_HW
COMMENT_LABEL $C82A Default text height and width
LABEL $C82A Vec_Text_Height
COMMENT_LABEL $C82A Default text height
LABEL $C82B Vec_Text_Width
COMMENT_LABEL $C82B Default text width
LABEL $C82C _Vec_Str_Ptr
COMMENT_LABEL $C82C Temporary string pointer for Print_Str
LABEL $C82E Vec_Counters
COMMENT_LABEL $C82E Six bytes of counters
LABEL $C82E Vec_Counter_1
COMMENT_LABEL $C82E First counter byte
LABEL $C82F Vec_Counter_2
COMMENT_LABEL $C82F Second counter byte
LABEL $C830 Vec_Counter_3
COMMENT_LABEL $C830 Third counter byte
LABEL $C831 Vec_Counter_4
COMMENT_LABEL $C831 Fourth counter byte
LABEL $C832 Vec_Counter_5
COMMENT_LABEL $C832 Fifth counter byte
LABEL $C833 Vec_Counter_6
COMMENT_LABEL $C833 Sixth counter byte
LABEL $C834 Vec_RiseRun_Tmp
COMMENT_LABEL $C834 Temp storage word for rise/run
LABEL $C836 Vec_Angle
COMMENT_LABEL $C836 Angle for rise/run and rotation calculations
LABEL $C837 Vec_Run_Index
COMMENT_LABEL $C837 Index pair for run
LABEL $C839 Vec_Rise_Index
COMMENT_LABEL $C839 Index pair for rise
LABEL $C83B Vec_RiseRun_Len
COMMENT_LABEL $C83B length for rise/run
LABEL $C83D Vec_Rfrsh
COMMENT_LABEL $C83D Refresh time (divided by 1.5MHz)
LABEL $C83D Vec_Rfrsh_lo
COMMENT_LABEL $C83D Refresh time low byte
LABEL $C83E Vec_Rfrsh_hi
COMMENT_LABEL $C83E Refresh time high byte
LABEL $C83F Vec_Music_Work
COMMENT_LABEL $C83F 13 Music work buffer (14 bytes, backwards?)
LABEL $C842 Vec_Music_Wk_A
COMMENT_LABEL $C842 register 10
LABEL $C845 Vec_Music_Wk_7
COMMENT_LABEL $C845 register 7
LABEL $C846 Vec_Music_Wk_6
COMMENT_LABEL $C846 register 6
LABEL $C847 Vec_Music_Wk_5
COMMENT_LABEL $C847 register 5
LABEL $C84B Vec_Music_Wk_1
COMMENT_LABEL $C84B register 1
LABEL $C84D Vec_Freq_Table
COMMENT_LABEL $C84D Pointer to note-to-frequency table (normally $FC8D)
LABEL $C84F Vec_Max_Players
COMMENT_LABEL $C84F Maximum number of players for Select_Game
LABEL $C850 Vec_Max_Games
COMMENT_LABEL $C850 Maximum number of games for Select_Game
LABEL $C84F Vec_ADSR_Table
COMMENT_LABEL $C84F Storage for first music header word (ADSR table)
LABEL $C851 Vec_Twang_Table
COMMENT_LABEL $C851 Storage for second music header word ('twang' table)
LABEL $C853 Vec_Music_Ptr
COMMENT_LABEL $C853 Music data pointer
LABEL $C853 Vec_Expl_ChanA
COMMENT_LABEL $C853 Used by Explosion_Snd - bit for first channel used?
LABEL $C854 Vec_Expl_Chans
COMMENT_LABEL $C854 Used by Explosion_Snd - bits for all channels used?
LABEL $C855 Vec_Music_Chan
COMMENT_LABEL $C855 Current sound channel number for Init_Music
LABEL $C856 Vec_Music_Flag
COMMENT_LABEL $C856 Music active flag ($00=off $01=start $80=on)
LABEL $C857 Vec_Duration
COMMENT_LABEL $C857 Duration counter for Init_Music
LABEL $C858 Vec_Music_Twang
COMMENT_LABEL $C858 3 word 'twang' table used by Init_Music
LABEL $C858 Vec_Expl_1
COMMENT_LABEL $C858 Four bytes copied from Explosion_Snd's U-reg parameters
LABEL $C859 Vec_Expl_2
LABEL $C85A Vec_Expl_3
LABEL $C85B Vec_Expl_4
LABEL $C85C Vec_Expl_Chan
COMMENT_LABEL $C85C Used by Explosion_Snd - channel number in use?
LABEL $C85D Vec_Expl_ChanB
COMMENT_LABEL $C85D Used by Explosion_Snd - bit for second channel used?
LABEL $C85E Vec_ADSR_Timers
COMMENT_LABEL $C85E ADSR timers for each sound channel (3 bytes)
LABEL $C861 Vec_Music_Freq
COMMENT_LABEL $C861 Storage for base frequency of each channel (3 words)
LABEL $C867 Vec_Expl_Flag
COMMENT_LABEL $C867 Explosion_Snd initialization flag?
LABEL $C877 Vec_Expl_Timer
COMMENT_LABEL $C877 Used by Explosion_Snd
LABEL $C879 Vec_Num_Players
COMMENT_LABEL $C879 Number of players selected in Select_Game
LABEL $C87A Vec_Num_Game
COMMENT_LABEL $C87A Game number selected in Select_Game
LABEL $C87B Vec_Seed_Ptr
COMMENT_LABEL $C87B Pointer to 3-byte random number seed (=$C87D)
LABEL $C87D Vec_Random_Seed
COMMENT_LABEL $C87D Default 3-byte random number seed
LABEL $CBEA Vec_Default_Stk
COMMENT_LABEL $CBEA Default top-of-stack
LABEL $CBEB Vec_High_Score
COMMENT_LABEL $CBEB High score storage (7 bytes)
LABEL $CBF2 Vec_SWI3_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF2 Vec_SWI2_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF5 Vec_FIRQ_Vector
COMMENT_LABEL $CBF5 FIRQ interrupt vector (3 bytes)
LABEL $CBF8 Vec_IRQ_Vector
COMMENT_LABEL $CBF8 IRQ interrupt vector (3 bytes)
LABEL $CBFB Vec_SWI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFB Vec_NMI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFE Vec_Cold_Flag
COMMENT_LABEL $CBFE Cold start flag (warm start if = $7321)
LABEL $D000 VIA_port_b
COMMENT_LABEL $D000 VIA port B data I/O register
LABEL $D001 VIA_port_a
COMMENT_LABEL $D001 VIA port A data I/O register (handshaking)
LABEL $D002 VIA_DDR_b
COMMENT_LABEL $D002 VIA port B data direction register (0=input 1=output)
LABEL $D003 VIA_DDR_a
COMMENT_LABEL $D003 VIA port A data direction register (0=input 1=output)
LABEL $D004 VIA_t1_cnt_lo
COMMENT_LABEL $D004 VIA timer 1 count register lo (scale factor)
LABEL $D005 VIA_t1_cnt_hi
COMMENT_LABEL $D005 VIA timer 1 count register hi
LABEL $D006 VIA_t1_lch_lo
COMMENT_LABEL $D006 VIA timer 1 latch register lo
LABEL $D007 VIA_t1_lch_hi
COMMENT_LABEL $D007 VIA timer 1 latch register hi
LABEL $D008 VIA_t2_lo
COMMENT_LABEL $D008 VIA timer 2 count/latch register lo (refresh)
LABEL $D009 VIA_t2_hi
COMMENT_LABEL $D009 VIA timer 2 count/latch register hi
LABEL $D00A VIA_shift_reg
COMMENT_LABEL $D00A VIA shift register
LABEL $D00B VIA_aux_cntl
COMMENT_LABEL $D00B VIA auxiliary control register
LABEL $D00C VIA_cntl
COMMENT_LABEL $D00C VIA control register
LABEL $D00D VIA_int_flags
COMMENT_LABEL $D00D VIA interrupt flags register
LABEL $D00E VIA_int_enable
COMMENT_LABEL $D00E VIA interrupt enable register
LABEL $D00F VIA_port_a_nohs
COMMENT_LABEL $D00F VIA port A data I/O register (no handshaking)
LABEL $F000 Cold_Start
LABEL $F06C Warm_Start
LABEL $F14C Init_VIA
LABEL $F164 Init_OS_RAM
LABEL $F18B Init_OS
LABEL $F1A2 Set_Refresh
LABEL $F1AA DP_to_D0
LABEL $F1AF DP_to_C8
LABEL $F1B4 Read_Btns_Mask
LABEL $F1BA Read_Btns
LABEL $F256 Sound_Byte
LABEL $F259 Sound_Byte_x
LABEL $F25B Sound_Byte_raw
LABEL $F272 _Clear_Sound
LABEL $F27D Sound_Bytes
LABEL $F284 Sound_Bytes_x
LABEL $F289 Do_Sound
LABEL $F28C Do_Sound_x
LABEL $F29D Intensity_1F
LABEL $F2A1 Intensity_3F
LABEL $F2A5 Intensity_5F
LABEL $F2A9 Intensity_7F
LABEL $F2AB Intensity_a
LABEL $F2BE Dot_ix_b
LABEL $F2C1 Dot_ix
LABEL $F2C3 Dot_d
LABEL $F2C5 Dot_here
LABEL $F2D5 Dot_List
LABEL $F2DE Dot_List_Reset
LABEL $F34A Reset0Ref_D0
LABEL $F34F Check0Ref
LABEL $F354 Reset0Ref
LABEL $F35B Reset_Pen
LABEL $F36B Reset0Int
LABEL $F511 Random_3
LABEL $F517 Random
LABEL $F533 Init_Music_Buf
LABEL $F53F Clear_x_b
LABEL $F542 Clear_C8_RAM
COMMENT_LABEL $F542 never used by GCE carts?
LABEL $F545 Clear_x_256
LABEL $F548 Clear_x_d
LABEL $F550 Clear_x_b_80
LABEL $F552 Clear_x_b_a
LABEL $F55A Dec_3_Counters
LABEL $F55E Dec_6_Counters
LABEL $F563 Dec_Counters
LABEL $F56D Delay_3
COMMENT_LABEL $F56D 30 cycles
LABEL $F571 Delay_2
COMMENT_LABEL $F571 25 cycles
LABEL $F575 Delay_1
COMMENT_LABEL $F575 20 cycles
LABEL $F579 Delay_0
COMMENT_LABEL $F579 12 cycles
LABEL $F57A Delay_b
COMMENT_LABEL $F57A 5*B + 10 cycles
LABEL $F57D Delay_RTS
COMMENT_LABEL $F57D 5 cycles
LABEL $F57E Bitmask_a
LABEL $F584 Abs_a_b
LABEL $F58B Abs_b
LABEL $F593 Rise_Run_Angle
LABEL $F5D9 Get_Rise_Idx
LABEL $F5DB Get_Run_Idx
LABEL $F5EF Get_Rise_Run
LABEL $F5FF Rise_Run_X
LABEL $F601 Rise_Run_Y
LABEL $F603 Rise_Run_Len
LABEL $F610 Rot_VL_ab
LABEL $F616 Rot_VL
LABEL $F61F Rot_VL_Mode
LABEL $F62B Rot_VL_M_dft
LABEL $F65B Xform_Run_a
LABEL $F65D Xform_Run
LABEL $F661 Xform_Rise_a
LABEL $F663 Xform_Rise
LABEL $F67F Move_Mem_a_1
LABEL $F683 Move_Mem_a
LABEL $F687 Init_Music_chk
LABEL $F68D Init_Music
LABEL $F692 Init_Music_x
LABEL $F7A9 Select_Game
LABEL $F84F Clear_Score
LABEL $F85E Add_Score_a
LABEL $F87C Add_Score_d
LABEL $F8B7 Strip_Zeros
LABEL $F8C7 Compare_Score
LABEL $F8D8 New_High_Score
LABEL $F8E5 Obj_Will_Hit_u
LABEL $F8F3 Obj_Will_Hit
LABEL $F8FF Obj_Hit
LABEL $F92E Explosion_Snd
LABEL $FF9F Draw_Grid_VL
LABEL $FD0D music1
LABEL $FD1D music2
LABEL $FD81 music3
LABEL $FDD3 music4
LABEL $FE38 music5
LABEL $FE76 music6
LABEL $FEC6 music7
LABEL $FEF8 music8
LABEL $FF26 music9
LABEL $FF44 musica
LABEL $FF62 musicb
LABEL $FF7A musicc
LABEL $FF8F musicd
LABEL $F9F4 Char_Table
LABEL $FBD4 Char_Table_End
LABEL $F192 Wait_Recal
LABEL $F1F5 Joy_Analog
LABEL $F1F8 Joy_Digital
LABEL $F2E6 Recalibrate
LABEL $F2F2 Moveto_x_7F
LABEL $F2FC Moveto_d_7F
LABEL $F308 Moveto_ix_FF
LABEL $F30C Moveto_ix_7F
LABEL $F30E Moveto_ix_b
LABEL $F310 Moveto_ix
LABEL $F312 Moveto_d
LABEL $F373 Print_Str_hwyx
LABEL $F378 Print_Str_yx
LABEL $F37A Print_Str_d
LABEL $F385 Print_List_hw
LABEL $F38A Print_List
LABEL $F38C Print_List_chk
LABEL $F391 Print_Ships_x
LABEL $F393 Print_Ships
LABEL $F3AD Mov_Draw_VLc_a
COMMENT_LABEL $F3AD count y x y x ...
LABEL $F3B1 Mov_Draw_VL_b
COMMENT_LABEL $F3B1 y x y x ...
LABEL $F3B5 Mov_Draw_VLcs
COMMENT_LABEL $F3B5 count scale y x y x ...
LABEL $F3B7 Mov_Draw_VL_ab
COMMENT_LABEL $F3B7 y x y x ...
LABEL $F3B9 Mov_Draw_VL_a
COMMENT_LABEL $F3B9 y x y x ...
LABEL $F3BC Mov_Draw_VL
COMMENT_LABEL $F3BC y x y x ...
LABEL $F3BE Mov_Draw_VL_d
COMMENT_LABEL $F3BE y x y x ...
LABEL $F3CE Draw_VLc
COMMENT_LABEL $F3CE count y x y x ...
LABEL $F3D2 Draw_VL_b
COMMENT_LABEL $F3D2 y x y x ...
LABEL $F3D6 Draw_VLcs
COMMENT_LABEL $F3D6 count scale y x y x ...
LABEL $F3D8 Draw_VL_ab
COMMENT_LABEL $F3D8 y x y x ...
LABEL $F3DA Draw_VL_a
COMMENT_LABEL $F3DA y x y x ...
LABEL $F3DD Draw_VL
COMMENT_LABEL $F3DD y x y x ...
LABEL $F3DF Draw_Line_d
COMMENT_LABEL $F3DF y x y x ...
LABEL $F404 Draw_VLp_FF
COMMENT_LABEL $F404 pattern y x pattern y x ... $01
LABEL $F408 Draw_VLp_7F
COMMENT_LABEL $F408 pattern y x pattern y x ... $01
LABEL $F40C Draw_VLp_scale
COMMENT_LABEL $F40C scale pattern y x pattern y x ... $01
LABEL $F40E Draw_VLp_b
COMMENT_LABEL $F40E pattern y x pattern y x ... $01
LABEL $F410 Draw_VLp
COMMENT_LABEL $F410 pattern y x pattern y x ... $01
LABEL $F434 Draw_Pat_VL_a
COMMENT_LABEL $F434 y x y x ...
LABEL $F437 Draw_Pat_VL
COMMENT_LABEL $F437 y x y x ...
LABEL $F439 Draw_Pat_VL_d
COMMENT_LABEL $F439 y x y x ...
LABEL $F46E Draw_VL_mode
COMMENT_LABEL $F46E mode y x mode y x ... $01
LABEL $F495 Print_Str
COMMENT_LABEL $F495 endif
EQU $0A UNIVERSAL_PLAYER_SHOT_RADIUS
EQU $06 SCOOP_INTERVALL_ADD
COMMENT_LABEL $06 7
EQU $0A CORRECTION
EQU $0A SwarmEnemy
EQU $00 Y_POS
EQU $01 X_POS
EQU $02 BEHAVIOUR
COMMENT_LABEL $02 PC
EQU $04 NEXT_ENEMY_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 SWARM_ALL_PURPOSE
COMMENT_LABEL $06 flash length when hit (might be bits) 3 bits max
EQU $07 SWARM_MOVEMENT_INFO
EQU $08 SWARM_ANIM_POS
EQU $09 SWARM_HIT_POINTS
EQU $0A ExplodingEnemySwarm
LABEL $C8FE filler
COMMENT_LABEL $C8FE #noDoubleWarn
EQU $08 SWARM_EXPLOSION_INTENSITY
COMMENT_LABEL $08 #noDoubleWarn
EQU $09 SWARM_EXPLOSION_SCALE
COMMENT_LABEL $09 #noDoubleWarn
EQU $0B TribbleEnemyStruct
EQU $06 TRIBBLE_ALL_PURPOSE
COMMENT_LABEL $06 flash length when hit (might be bits) 3 bits max
EQU $07 TRIBBLE_MOVEMENT_INFO
EQU $08 TRIBBLE_ANIM_POS
EQU $09 TRIBBLE_HIT_POINTS
EQU $0A TRIBBLE_LIFE_TIME
EQU $15 EnemyStruct
EQU $00 RELATIVE_HI_Y
EQU $01 RELATIVE_HI_X
EQU $06 RELATIVE_LO_Y
EQU $07 RELATIVE_LO_X
EQU $06 Y_POS16
EQU $08 TARGET_RELATIVE_Y
EQU $09 TARGET_RELATIVE_X
EQU $08 X_POS16
EQU $0A TARGET_ABSOLUT_Y
COMMENT_LABEL $0A if attack pattern is absolut - than here go the target coordinates
EQU $0A SUB_PATTERN
COMMENT_LABEL $0A is 2 bytes, but shares second byte with ANIM count
EQU $0B TARGET_ABSOLUT_X
EQU $0C BUG_SHOT_DELAY
EQU $0C INVERSE_INTRO_PATTERN
EQU $0C ANGLE_HOMEFLIGHT
COMMENT_LABEL $0C in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
EQU $0D BUG_ADDS_YX
EQU $0D MY_PATTERN
EQU $0F ANIM_POSITION
COMMENT_LABEL $0F current position in animation table of vectorlists
EQU $0F SUB_PATTERN_POSITION
COMMENT_LABEL $0F lower nibble when attack pattern
EQU $0F PATTERN_POSITION
COMMENT_LABEL $0F where in the current pattern are we?
EQU $10 BUG_APPEARING_INTENSITY
EQU $10 BUG_MOVEMENT_DOUBLER
EQU $10 POSITION
COMMENT_LABEL $10 UID of curretn enemies -> defines position in waiting state
EQU $11 ALL_PURPOSE
COMMENT_LABEL $11 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
EQU $12 HITPOINTS
COMMENT_LABEL $12 hit points = upper 5 bits
EQU $12 BUG_ENEMY_HITPOINTS
COMMENT_LABEL $12 all 8 bits
EQU $12 BIT_MASK
COMMENT_LABEL $12 shot delay = lower 3 bits
EQU $13 ENEMY_STRUCT
COMMENT_LABEL $13 this can be reduced to one byte!
EQU $15 ExplodingEnemyStruct
EQU $06 SMARTLIST_ORG
EQU $10 EXPLOSION_INTENSITY
COMMENT_LABEL $10 #noDoubleWarn
EQU $12 EXPLOSION_SCALE
COMMENT_LABEL $12 #noDoubleWarn
EQU $15 EnemyStructRepell
EQU $0A XPOS_LOCKED
COMMENT_LABEL $0A #
EQU $0B WAS_ANIM_COUNT
COMMENT_LABEL $0B count down to next animation sequence
EQU $0C ANGLE_REPELL
EQU $0D Y_ADD16
EQU $0F X_ADD16
EQU $15 SaucerStruct
EQU $06 BIG_HP
COMMENT_LABEL $06 D current position for calculation only , Y is pos, y low is addy
EQU $08 STAY_HERE_LOOP_COUNTER
COMMENT_LABEL $08 1 byte ; D current position for calculation only
EQU $09 LASER_X
COMMENT_LABEL $09 1 byte ; D current position for calculation only
EQU $0A MONEY_SUCK_TIMER
COMMENT_LABEL $0A is 2 bytes, but shares second byte with ANIM count
EQU $0B BACK_OR_FORTH
EQU $0C ShotStruct
EQU $00 Y_POS_NOW16
EQU $04 NEXT_SHOT_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $0A SHOT_SPEED
EQU $0A X_POS_NOW16
EQU $0C MissileShotStruct
EQU $06 DIRECTION_CHANGE_COUNTER
EQU $07 MISSILE_X_ADD
EQU $0B fillerMissile
EQU $08 BonusStruct
EQU $04 NEXT_BONUS_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 TYPE
EQU $07 BONUS_ANIM_POSITION
COMMENT_LABEL $07 low 6 bit - anim, hi 2 bit speed
EQU $0D StarStruct
EQU $00 Y1_POS
COMMENT_LABEL $00 D current position
EQU $01 X1_POS
COMMENT_LABEL $01 D
EQU $04 NEXT_STAR_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 RADIUS
EQU $06 TWINKLE
EQU $07 Y2_POS
EQU $08 X2_POS
EQU $09 Y3_POS
EQU $0A X3_POS
EQU $0B Y4_POS
EQU $0C X4_POS
EQU $0A PlayerShotStruct
EQU $00 Y_POS_REL
EQU $01 X_POS_REL
EQU $04 NEXT_PLAYERSHOT_OBJECT
EQU $08 SHOT_RADIUS
EQU $09 SCOOP_SHOTS
COMMENT_LABEL $09 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
EQU $0A PlayerLazerShotStruct
EQU $06 LAZER_WOBBLE
COMMENT_LABEL $06 alternating 0 and != 0, left or right slope starting
EQU $07 LAZER_TIMER
EQU $10 LevelDefinition
EQU $00 LEVEL_ENEMY_COUNT
COMMENT_LABEL $00 or in case of direct appearence the number of enemies!
EQU $00 LEVEL_INTRO_PATTERN
COMMENT_LABEL $00 or in case of direct appearence the number of enemies!
EQU $02 LEVEL_WAITING_PATTERN
EQU $04 LEVEL_ATTACK_PATTERN
COMMENT_LABEL $04 pointer to attack pattern list - pointer to 4 pointers to attack patterns
EQU $06 LEVEL_ENEMY_DEFINITION
EQU $08 LEVEL_MAX_ITEMS
COMMENT_LABEL $08 high nibble max shots, low nibble max attack patterns
EQU $09 LEVEL_TYPE
EQU $0A LEVEL_BULLET_BORDER
COMMENT_LABEL $0A how probable is it that enemies shoots
EQU $0B LEVEL_BONUS_BORDER
COMMENT_LABEL $0B how probable is it that bonus drops
EQU $0C LEVEL_BUG_DEFINITION
EQU $0E LEVEL_BUG_COUNT
EQU $0F LEVEL_SHOT_DELAY_BUG
EQU $04 IntroLine
EQU $00 LINE_PATTERN_DEF
EQU $02 LINE_PATTERN_INVERS
EQU $03 LINE_PATTERN_ENEMY_COUNT
EQU $08 PatternLine
EQU $00 P_YPOS
EQU $01 P_XPOS
EQU $02 P_YADD
EQU $04 P_XADD
EQU $06 P_ANGLE
EQU $07 P_PATTERN_TARGET_RADIUS
COMMENT_LABEL $07 depending on speed
EQU $07 P_PAD
COMMENT_LABEL $07 this is now SPEED offset for compare!
EQU $02 IntroPattern
EQU $00 P_DELAY_BETWEEN_ENEMIES
EQU $01 P_START_DELAY_OF_PATTERN
EQU $02 P_PATTERN_PATTERN_START
EQU $04 SingleAttackPatternLine
EQU $00 SINGLE_ATTACK_PATTERN_NEXT_NO
EQU $00 SINGLE_ATTACK_SPEED
EQU $01 SINGLE_ATTACK_PATTERN_TYPE
EQU $02 SINGLE_ATTACK_PATTERN_POINTER
COMMENT_LABEL $02 when pointer = 0, than end of list
EQU $08 EnemyDefinition
EQU $00 ANGLE8_TABLE
COMMENT_LABEL $00 if zero -> BigBug
EQU $02 BUG_ENEMY_HP
EQU $02 ENEMY_STRENGTH
COMMENT_LABEL $02 see above
EQU $03 WAIT_ANIM_TABLE
EQU $05 ENEMY_DEBRIS_SPEED
EQU $05 ENEMY_BULLET_SPEED
COMMENT_LABEL $05 bug only (for now), lower nibble speed, uppernibble
EQU $06 ADDITIONAL_TYPE_INFO
EQU $07 CLONE_INFO
COMMENT_LABEL $07 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
EQU $0E RocketEmitter
EQU $00 FW_Y_POS
EQU $02 FW_BEHAVIOUR
EQU $04 FW_NEXT_OBJECT
EQU $06 FW_X_POS
EQU $08 FW_Y_VEL
EQU $0A FW_X_VEL
EQU $0C FW_AGE
EQU $0D FW_ZERO_RGAL
EQU $0E VelocityParticle
EQU $0D FW_ZERO
EQU -$04 u_offset1
COMMENT_LABEL -$04 behaviour offset is determined by next structure element
EQU $08 HighScoreEntry
EQU $00 HS_NAME
EQU $03 HS_BCD_SCORE
EQU $07 HS_LEVEL
EQU $0E FlameParameter
EQU $00 POS
EQU $02 Y_UPDATE
EQU $03 Y_OFFSET
EQU $04 X_OFFSET
EQU $05 X_WAITER
EQU $06 Y_WAITER
EQU $07 X_RESET
EQU $08 Y_RESET
EQU $09 SCALE_POS
EQU $0A FLAME_INT_MAX
EQU $0B COUNTER
EQU $0C VALUES
EQU $03 XWAIT
EQU $04 YWAIT
LABEL $C80E diamondCount
LABEL $C80F isBugShot
LABEL $C810 nextBugEnemyCount
LABEL $C811 lastJoyMove
LABEL $C811 enemyMINY
LABEL $C812 bonusHitCount
LABEL $C813 bonusSpawnCount
LABEL $C814 lastCollectedBonus
LABEL $C815 globalPatternWobble
LABEL $C816 globalPatternWobbleDirection
LABEL $C817 levelBulletBorder
LABEL $C818 levelBonusBorder
LABEL $C819 attackPatternCount
LABEL $C81A attackPatternInitiated
LABEL $C81B Vec_Joy_1_X_
LABEL $C81C Vec_Joy_1_Y_
LABEL $C81D sfx_pointer_1
LABEL $C81F sfx_pointer_2
LABEL $C821 t2_rest
LABEL $C822 tacScan
LABEL $C823 levelCount
LABEL $C824 random_seed2
LABEL $C825 _Vec_Loop_Count
LABEL $C827 introWaveEnemyCount
LABEL $C828 suckerAddress
LABEL $C82C levelTimer
LABEL $C82E tmp_div1
LABEL $C82E bonusSpawnPosition
LABEL $C830 STARS_DONE_A
LABEL $C832 ENEMY_DONE_A
LABEL $C834 SHOTS_DONE_A
LABEL $C836 BONUS_DONE_A
LABEL $C838 PLAYERSHOTS_DONE_A
LABEL $C82E STARS_DONE
LABEL $C830 ENEMY_DONE
LABEL $C832 SHOTS_DONE
LABEL $C836 PLAYERSHOTS_DONE
LABEL $C834 BONUS_DONE
LABEL $C830 FW_PARTICLES_DONE
LABEL $C832 FW_PARTICLES_DONE_A
LABEL $C83A OBJECT_LIST_COMPARE_ADDRESS
LABEL $C83A warpSpeed
LABEL $C83A bonusAnimCount
LABEL $C83A lightningOn
LABEL $C83B shotYRadius
LABEL $C83C levelEnemyCountUID
LABEL $C83D _Vec_Rfrsh
LABEL $C84D allowBossShots
LABEL $C84D introWaveEnemyDelayCount
LABEL $C84E superDiamondAnimCounter
LABEL $C84E levelEnemyCount
LABEL $C84F superDiamondPosition
LABEL $C84F introWaveCurrentPattern
LABEL $C851 superDiamondAnimCounter2
LABEL $C851 introWaveCurrentPatternCount
LABEL $C852 scoopEnemy1
LABEL $C854 current_button_state
LABEL $C855 last_button_state
LABEL $C856 playerAnim
LABEL $C857 playAnimDelayCounter
LABEL $C858 player_score
LABEL $C858 player_score_6
LABEL $C859 player_score_5
LABEL $C85A player_score_4
LABEL $C85B player_score_3
LABEL $C85C player_score_2
LABEL $C85D player_score_1
LABEL $C85E player_score_0
LABEL $C85F player_score_80
LABEL $C860 scoreExtraBuffer
LABEL $C862 playerCashW
LABEL $0080 BITFIELD_ARMOR
EQU $40 BITFIELD_SHIELD
EQU $20 BITFIELD_SCOOP
LABEL $00DF BITFIELD_NOT_SCOOP
LABEL $C864 playerBonusActive
LABEL $C865 colorCycleCount
LABEL $C866 animDelayCounter
LABEL $C867 patternDelayCounter
LABEL $C868 scoopEnemy2
LABEL $C86A bugsSpawnedInLevel
LABEL $C86B random_seed
LABEL $C86C bonusCollect
LABEL $C86D bulletSpawnAt
LABEL $C86F sfx_pointer_3
LABEL $C871 playerShotCountW
LABEL $C873 playerHitCountW
LABEL $C875 playerXpos
LABEL $C877 playerSpeed
LABEL $C879 playerMaxShotInAir
LABEL $C87A playerNumberOfBulletsPerShot
LABEL $C87B playerShotSpeed
LABEL $C87D playerWasHitFor
LABEL $C87E selected
LABEL $C87E tmp1
LABEL $C87F calibButton
LABEL $C87F shotSpeed
LABEL $C880 warpLen
LABEL $C880 explosionSound
LABEL $C881 starlist_empty_head
LABEL $C883 starlist_objects_head
LABEL $C885 starCount
LABEL $C886 enemylist_empty_head
LABEL $C888 enemylist_objects_head
LABEL $C88A enemyCount
LABEL $C886 fwlist_empty_head
LABEL $C888 fwlist_objects_head
LABEL $C88B playershotlist_empty_head
LABEL $C88D playershotlist_objects_head
LABEL $C88F playerShotCount
LABEL $C890 shotlist_empty_head
LABEL $C892 shotlist_objects_head
LABEL $C894 shotCount
LABEL $C895 bonuslist_empty_head
LABEL $C897 bonuslist_objects_head
LABEL $C899 bonusCount
LABEL $C8B1 tmp_debug
LABEL $C89A joystickDir
LABEL $C89A in_moveFlag
LABEL $C89B tmp2_tmp_unique
EQU $01 FLASH_AVAILABLE_BIT
EQU $02 SAVEGAME_AVAILABLE_BIT
EQU $04 SAVEGAME_IS_ACTIVE_BIT
LABEL $C89C flashAvailable
LABEL $0080 BIT_FLAG_PLAY_YM
EQU $40 BIT_FLAG_PLAY_FORCE_SFX
COMMENT_LABEL $40 -> three voices sfx (e.g. secret chime)
EQU $01 BIT_FLAG_AUTOFIRE
EQU $0E BIT_FLAG_IS_BOSSFIGHT_ANY
EQU $10 BIT_BIG_ENEMY_IN_PLAY
EQU $20 BIT_FLAG_CASH_ROLLOVER
LABEL $C89D playSoundFlags
LABEL $C89D diverseFlags
EQU $01 SHOP_TRIPPLE_WEAPON
EQU $02 SHOP_QUAD_WEAPON
EQU $04 SHOP_SUPER_WEAPON
EQU $08 SHOP_LASER_WEAPON
EQU $10 SHOP_LOCK
EQU $20 SHOP_SUPER_BOMB_L
EQU $40 SHOP_RANK
LABEL $0080 SHOP_IMMUN1
LABEL $C89E Ram_Options_Start
LABEL $C89E calibrationValue6
LABEL $C89F calibrationValue7
LABEL $C8A0 calibrationValue16
LABEL $C8A1 calibrationValueString
LABEL $C8A2 calibrationValue50
LABEL $C8A3 gameScale
LABEL $C8A4 shopAllowFlags
EQU $02 BIT_RAN_CALIBRATION
EQU $01 BIT_BUZZ_NOBUZZ
LABEL $0080 BIT_TITLE_SEEN
EQU $20 BIT_VOX_FULL
COMMENT_LABEL $20 if zero -> vox full
LABEL $C8A5 additionalFlags
LABEL $C8A6 achievements
LABEL $C8AC secretFlags
LABEL $C8AD maxLevelReached
LABEL $C8AE Ram_Options_End
EQU $01 IMUNITY_1_BIT
EQU $02 IMUNITY_2_BIT
EQU $01 IMUNITY_1
EQU $02 IMUNITY_2
EQU $03 IMUNITY_BITS
LABEL $00FC MULTIPLYER_BITS
COMMENT_LABEL $00FC Max 63
EQU $03 NON_MULTIPLYER_BITS
EQU $03 MULTIPLY_0_AND
EQU $07 MULTIPLY_1_AND
EQU $0B MULTIPLY_2_AND
EQU $17 MULTIPLY_5_AND
EQU $04 MULTIPLY_1_OR
EQU $08 MULTIPLY_2_OR
EQU $14 MULTIPLY_5_OR
EQU $1C MULTIPLY_5_ALL_AND
LABEL $C8AE multiplyer
LABEL $C8AE downgradeImmunity
LABEL $C8AF currentFlashROMStart
EQU $10 OptionStruct
EQU $00 O_CALIB_SWARM
EQU $01 O_CALIB_VECTOR
EQU $02 O_CALIB_MH
EQU $03 O_CALIB_TEXT
EQU $04 O_CALIB_BOSS
EQU $05 O_GAMESCALE
EQU $06 O_SHOP_ALLOW
EQU $07 O_ADDITIONAL_FLAGS
EQU $08 O_ACHIEVEMENTS
EQU $0E O_SECRETS
EQU $0F O_MAX_LEVEL
EQU $50 FlashBlock
EQU $00 OPTION_BLOCK
COMMENT_LABEL $00 OptionStruct
EQU $10 HIGHSCORE_BLOCK
COMMENT_LABEL $10 or more
EQU $30 HARDCORE_BLOCK
COMMENT_LABEL $30 or more
LABEL $C8B1 tmp16_tmp
LABEL $C8B3 tmp16_tmp2
COMMENT_LABEL $C8B3 end of game count only
LABEL $C8B7 bonusDisplay
LABEL $C8B3 playerLivesString
COMMENT_LABEL $C8B3 ds 4
LABEL $C8B5 playerLives
LABEL $C8B8 messageState
LABEL $C8B9 messageTimer
LABEL $C8BA messagePointer
LABEL $C8BC playerBonusCounter
EQU $03 PlayerExplosion
EQU $00 EX_MAX_SIZE
EQU $01 EX_START_SIZE
EQU $02 EX_STEP
EQU $05 BossExplosion
EQU $03 EXPLOSION_POS
LABEL $C8BE playerExplosionSpace
LABEL $C8BE StringOutputBuffer
LABEL $C8BE StringOutputBuffer_6
LABEL $C8BF StringOutputBuffer_5
LABEL $C8C0 levelConversionString
LABEL $C8C0 laserTag
LABEL $C8C0 StringOutputBuffer_4
LABEL $C8C1 laserTmp
LABEL $C8C1 _tmpY
LABEL $C8C1 tmp1_tmp
LABEL $C8C1 StringOutputBuffer_3
LABEL $C8C2 _tmpX
LABEL $C8C2 tmp2_tmp
LABEL $C8C2 StringOutputBuffer_2
LABEL $C8C3 tmp3_tmp
LABEL $C8C3 vox_tmp1
LABEL $C8C3 StringOutputBuffer_1
LABEL $C8C4 tmp_count
LABEL $C8C4 tmp_isSupershot
LABEL $C8C4 tmp4_tmp
LABEL $C8C4 vox_tmp2
LABEL $C8C4 StringOutputBuffer_0
LABEL $C8C5 laserTmp2
LABEL $C8C5 vox_tmp3
LABEL $C8C5 StringOutputBuffer_80
EQU $07 TestShot
EQU $00 SHOT_ORG
EQU $02 T_YPOS
EQU $03 T_XPOS0_MINUS_1_RADIUS
EQU $04 T_XPOS0_PLUS_1_RADIUS
EQU $05 T_XPOS0_MINUS_3_RADIUS
EQU $06 T_XPOS0_PLUS_3_RADIUS
LABEL $C8C6 testShot
LABEL $C8CD test2Shot
LABEL $C8D4 Vec_Str_Ptr
LABEL $C8D4 tmp4
LABEL $C8D4 stringScale
LABEL $C8D4 backJump
LABEL $C8D6 inversePatttern
LABEL $C8D7 patternEnemyCount
LABEL $C8D7 tmp8_tmp
COMMENT_LABEL $C8D7 tmp 8 is only used in failure behaviour - no collision with pattern
LABEL $C8DB laserLowestYLeft
LABEL $C8DA laserLowestY
LABEL $C8D8 laserEnemyPointer
LABEL $C8DC laserEnemyPointerLeft
LABEL $C8D9 currentLetterDirection
LABEL $C8D8 currentLetterPos
LABEL $C8DA selectedOption
LABEL $C8DB currentPrintedOption
LABEL $C8DC optionDir
LABEL $C8DE laserLowestYRight
LABEL $C8DF laserEnemyPointerRight
LABEL $C8E1 difficulty
LABEL $C8E2 levelMaxAttackPatterns
LABEL $C8E3 levelMaxEnemyShots
LABEL $C8E4 bulletDamage
LABEL $C8E5 shiftBulletDamage
LABEL $C8E6 shiftDoubleBulletDamage
LABEL $C8E7 bonusTimerLength
LABEL $C8E9 currentLevelPointer
LABEL $C8EB multTimer
LABEL $0080 GAMEPHASE_INTRO
COMMENT_LABEL $0080 level attack wave phase
EQU $40 ENEMY_DESTRUCTED_FLAG
LABEL $C8ED lockPurchased
LABEL $C8EE smartBombsAvailable
LABEL $C8EF saucerCount
LABEL $C8EF bossIntroStage
LABEL $C8F0 levelMaxEnemy
LABEL $C8F1 rankDrop
LABEL $C8F2 rankCollected
LABEL $C8F3 officerRankTmp
LABEL $C8F4 doWarpFailure
LABEL $C8F5 bulletDamageAdjust
EQU $01 SECRET_3_SPEED_SUCKERS
EQU $02 SECRET_RATE_SUCKERS
EQU $04 SECRET_3_BULLET_SUCKERS
EQU $08 SECRET_3_RATE_SUCKERS
EQU $10 SECRET_ORDERED_EXTRA
EQU $20 SECRET_3_FIFTY
EQU $40 SECRET_ORDERED_RANKS
LABEL $0080 BIGGEST_LOSS_FLAG
LABEL $C8F6 inGameSecrets
LABEL $C8F7 perfectBonus
LABEL $C8F8 secretBonusCounter
LABEL $C8F9 levelsPlayed
LABEL $C8FB drunkTimer
LABEL $C8FC vox_addr
LABEL $C8FE end_static_ram
LABEL $CBFD chosenStartLevel
LABEL $CBFE isDemoMode
LABEL $CBFF realEnemyCount
EQU $13 MAX_SHOT_OBJECTS_BOSS
COMMENT_LABEL $13 shots are extended over stars and bonus during boss fight!
EQU $0A MAX_SHOT_OBJECTS
LABEL $C8FE shotobject_list
LABEL $C976 shotobject_list_end
LABEL $C9E2 shotobject_list_end19
LABEL $C8FE shotobject1
LABEL $C90A shotobject2
LABEL $C916 shotobject3
LABEL $C922 shotobject4
LABEL $C92E shotobject5
LABEL $C93A shotobject6
LABEL $C946 shotobject7
LABEL $C952 shotobject8
LABEL $C95E shotobject9
LABEL $C96A shotobject10
EQU $06 MAX_BONUS_OBJECTS
LABEL $C976 bonusobject_list
LABEL $C9A6 bonusobject_list_end
LABEL $C976 bonusobject1
LABEL $C97E bonusobject2
LABEL $C986 bonusobject3
LABEL $C98E bonusobject4
LABEL $C996 bonusobject5
LABEL $C99E bonusobject6
EQU $13 MAX_STAR_OBJECTS_WARP
COMMENT_LABEL $13 20 ; stars are expanded in warp into the enemy region
EQU $05 MAX_STAR_OBJECTS
LABEL $C9A6 starobject_list
LABEL $C9E7 starobject_list_end
LABEL $C9A6 starobject1
LABEL $C9B3 starobject2
LABEL $C9C0 starobject3
LABEL $C9CD starobject4
LABEL $C9DA starobject5
EQU $0F MAX_ENEMY_OBJECTS_BOSS3
EQU $05 MAX_ENEMY_OBJECTS_BOSS4
EQU $14 MAX_ENEMY_OBJECTS
LABEL $C9E7 enemyobject_list
LABEL $CB8B enemyobject_list_end
LABEL $C9E7 enemyobject1
LABEL $C9FC enemyobject2
LABEL $CA11 enemyobject3
LABEL $CA26 enemyobject4
LABEL $CA3B enemyobject5
LABEL $CA50 enemyobject6
LABEL $CA65 enemyobject7
LABEL $CA7A enemyobject8
LABEL $CA8F enemyobject9
LABEL $CAA4 enemyobjecta
LABEL $CAB9 enemyobjectb
LABEL $CACE enemyobjectc
LABEL $CAE3 enemyobjectd
LABEL $CAF8 enemyobjecte
LABEL $CB0D enemyobjectf
LABEL $CB22 enemyobjectg
LABEL $CB37 enemyobjecth
LABEL $CB4C enemyobjecti
LABEL $CB61 enemyobjectj
LABEL $CB76 enemyobjectk
EQU $0A MAX_PLAYERSHOT_OBJECTS
LABEL $CB8B playershotobject_list
LABEL $CBEF playershotobject_list_end
LABEL $CB8B playerShotobject1
LABEL $CB95 playerShotobject2
LABEL $CB9F playerShotobject3
LABEL $CBA9 playerShotobject4
LABEL $CBB3 playerShotobject5
LABEL $CBBD playerShotobject6
LABEL $CBC7 playerShotobject7
LABEL $CBD1 playerShotobject8
LABEL $CBDB playerShotobject9
LABEL $CBE5 playerShotobjecta
EQU $1E FIREWOKRS_PARTICLE_COUNT
LABEL $C9E7 fwobject_list
LABEL $CB8B fwobject_list_end
EQU $1E MAX_SWARM_OBJECTS
COMMENT_LABEL $1E 7
LABEL $C976 swarmobject_list
LABEL $CCB7 swarmobject_list_end
LABEL $CBBD candle1
LABEL $CBB3 ccounter
LABEL $CBB4 cDisplayCounter
LABEL $CBB5 baseLight
LABEL $CBB6 waiterVal
LABEL $CBB7 BIGGESTX
COMMENT_LABEL $CBB7 = 10
LABEL $CBB8 LOWESTX
COMMENT_LABEL $CBB8 = -10
LABEL $CBB9 BIGGESTY
COMMENT_LABEL $CBB9 = 10
LABEL $CBBA LOWESTY
COMMENT_LABEL $CBBA = 0 ;-5 -10
LABEL $CBBB phase
LABEL $CBBD smoke
LABEL $C83F PLY_PSGREGISTERSARRAY
COMMENT_LABEL $C83F #isfunction
LABEL $C83F PLY_PSGREG0
LABEL $C840 PLY_PSGREG1
LABEL $C841 PLY_PSGREG2
LABEL $C842 PLY_PSGREG3
LABEL $C843 PLY_PSGREG4
LABEL $C844 PLY_PSGREG5
LABEL $C845 PLY_PSGREG6
LABEL $C847 PLY_PSGREG8
LABEL $C848 PLY_PSGREG9
LABEL $C849 PLY_PSGREG10
LABEL $C84A PLY_PSGREG11
LABEL $C84B PLY_PSGREG12
LABEL $C84D PLY_PSGREGISTERSARRAY_END
LABEL $C8FE hs_place_edit
LABEL $C8FF hs_blink_count
LABEL $C900 hs_blink_state
LABEL $C901 hs_place_got
LABEL $C902 tmp_count2
LABEL $C903 last_joy_x
LABEL $C904 last_joy_y
LABEL $C905 buttonWait
EQU $0A MAX_ENEMY_OBJECTS_TITLE
LABEL $C906 enemyobject_list_title
LABEL $C9D8 enemyobject_list_title_end
LABEL $C9D8 ramfunction
LABEL $C9D8 arkosPlayerMemStart
LABEL $C9D8 songLoop
LABEL $C9D9 tmp_track_param
LABEL $C9DA tmp_track_instrument
LABEL $C9DB tmp_instrument_second_byte
LABEL $C9DC PLY_HEIGHT
LABEL $C9DD PLY_SPEED
LABEL $C9DE PLY_SPEEDCPT
LABEL $C9DF PLY_HEIGHTCPT
LABEL $C9E0 PLY_TRACK_INSTRUMENTSTABLEPT
LABEL $C9E2 PLY_LINKER_PT
LABEL $C9E4 PLY_PSGREG13_RETRIG
LABEL $C9E5 PLY_SAVESPECIALTRACK
LABEL $C9E7 PLY_SPECIALTRACK_PT
LABEL $C9E9 PLY_SPECIALTRACK_WAITCOUNTER
EQU $11 ArkosChannel
EQU $00 PLY_TRANSPOSITION
EQU $01 PLY_TRACK_SAVEPTINSTRUMENT
EQU $03 PLY_TRACK_INSTRUMENT
EQU $05 PLY_TRACK_INSTRUMENTSPEED
EQU $06 PLY_TRACK_INSTRUMENTSPEEDCPT
EQU $07 PLY_TRACK_PT
EQU $09 PLY_TRACK_WAITCOUNTER
EQU $0A PLY_TRACK_NOTE
EQU $0B PLY_TRACK_VOLUME
EQU $0C PLY_TRACK_PITCH
EQU $0E PLY_TRACK_PITCHADD
EQU $10 PLY_TRACK_REG_7
LABEL $C9EA Channel1Data
LABEL $C9FB Channel2Data
LABEL $CA0C Channel3Data
LABEL $CA1D ChannelDataEnd
LABEL $CA1D PLY_PSGREG13
LABEL $CA1E PLY_VOL_REG
LABEL $CA20 PLY_FREQ_REG
LABEL $CA22 songOver
LABEL $CA23 arkosPlayerMemEnd
EQU $04 CompareTile
EQU $02 TILE_POINTER
COMMENT_LABEL $02 pointer to the actual MAP tile in the map (the Macro)
LABEL $CA23 compareUp
LABEL $CA27 compareDown
LABEL $CA2B highScorePosition
LABEL $CA2B compareLeftBottom
LABEL $CA2F compareRightBottom
LABEL $CA33 compareLeftTop
LABEL $CA37 compareRightTop
LABEL $CA3B intensityTile
LABEL $CA3C yCoarse
LABEL $CA3D xCoarse
LABEL $CA3E xCoarseCheck
LABEL $CA3F yFine
LABEL $CA40 xFine
LABEL $CA41 currentLevel
LABEL $CA43 levelLineStart
LABEL $CA45 levelYSize
LABEL $CA46 levelXSize
LABEL $CA47 displayPosY
LABEL $CA48 displayPosX
LABEL $CA49 skipDrawFlag
EQU $04 MAXTILES_COLLECTABLE
LABEL $CA4A tilesCollected
LABEL $CA4E speedy
LABEL $CA4F speedx
LABEL $CA50 anay
LABEL $CA51 anax
LABEL $CA52 counter0
LABEL $CA53 counter1
LABEL $CA54 counter2
LABEL $CA55 counter3
LABEL $CA56 counter4
LABEL $CA57 counter5
LABEL $CA58 counter6
LABEL $CA59 counter7
LABEL $CA5A animationDelay
LABEL $CA5B nextDisplayPos
LABEL $CA5B nextDisplayPosY
LABEL $CA5C nextDisplayPosX
LABEL $CA5D endVerticalcompare
LABEL $CA5E divide_tmp
LABEL $CA60 v0
LABEL $CA60 y0
LABEL $CA61 x0
LABEL $CA62 v1
LABEL $CA62 y1
LABEL $CA63 x1
LABEL $CA64 v2
LABEL $CA64 y2
LABEL $CA65 x2
EQU $06 CLIP_VECTORS
EQU $00 _pat1
EQU $01 _y1
EQU $02 _x1
EQU $03 _pat2
EQU $04 _y2
EQU $05 _x2
LABEL $CA66 scrollReset
LABEL $CA67 neggi
LABEL $CA68 clip_test
LABEL $CA6A clip_line_counter
LABEL $CA6B clip_counter
LABEL $CA6D clip_pattern
LABEL $CA6F firstVector
LABEL $CA70 BORDER
LABEL $CA72 is_first_letter
LABEL $CA73 do_another_letter
LABEL $CA74 topclip
LABEL $CA74 bottomclip
LABEL $CA76 rightclip
LABEL $CA76 leftclip
LABEL $CA78 current_type
LABEL $CA79 verticalBuffer
LABEL $CA7A horizontalLeftBuffer
LABEL $CA7B horizontalRightBuffer
LABEL $CA7C clipped_vector_vertical_type
LABEL $CA7D clipped_vector_vertical
LABEL $CAD7 clipped_vector_left
LABEL $CB31 clipped_vector_final
LABEL $CB31 clipped_vector_right
LABEL $CB8B xFineObject
LABEL $CB8C yFineObject
LABEL $CB8D clip_end
EQU $7F VERTICAL_MAX
EQU -$7F VERTICAL_MIN
EQU $7F HORIZONTAL_MAX
EQU -$7F HORIZONTAL_MIN
EQU $7B SCALE_MOVE
COMMENT_LABEL $7B 93
EQU $10 SCALE_VLIST
COMMENT_LABEL $10 16; 11
EQU $0C FULL_TILES_HORIZONTAL
EQU $0C FULL_TILES_VERTICAL
LABEL $00FE GRID_HEIGHT
LABEL $00FE GRID_WIDTH
EQU $0E ALL_TILES_HORIZONTAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $0E ALL_TILES_VERTICAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $12 TILE_WIDTH
EQU $12 TILE_HEIGHT
EQU $07 STEP_HORIZONTAL_TILE_IN_PIXEL
EQU $07 STEP_VERTICAL_TILE_IN_PIXEL
EQU $6C START_POS_VERTICAL
EQU -$6C START_POS_HORIZONTAL
LABEL $6C94 START_POS
EQU $05 FULL_TILES_VERTICAL_END_CHANGED
COMMENT_LABEL $05 FULL_TILES_VERTICAL;
EQU $0C FULL_TILES_VERTICAL_END_CHANGED_BIG
COMMENT_LABEL $0C FULL_TILES_VERTICAL;
EQU -$6C END_POS_VERTICAL_BIG
EQU $12 END_POS_VERTICAL
LABEL $0132 SECOND_END_POS_VERTICAL_BIG
EQU $6C END_POS_HORIZONTAL
EQU $5A SECOND_END_POS_HORIZONTAL
EQU $00 END_POS_VERTICAL_TEST
EQU $7E END_POS_HORIZONTAL_TEST
EQU $12 FINE_MAX_VERTICAL
EQU $12 FINE_MAX_HORIZONTAL
EQU $00 TYPE_SIMPLE
COMMENT_LABEL $00 can do simple clipping
EQU $01 TYPE_EXPONENTIAL
COMMENT_LABEL $01 no easy clipping
EQU -$01 TYPE_EXACT
COMMENT_LABEL -$01 can do simple clipping
EQU $02 TYPE_CONTINUE_RESET
COMMENT_LABEL $02 if = continue is possible after this tile, position is = to next start point
EQU $04 TYPE_CONTINUE_HERE
COMMENT_LABEL $04 if = continue is possible, leaving at some arbitrary point
EQU $08 TYPE_DOUBLE_SCALE
COMMENT_LABEL $08 if = continue is possible, leaving at some arbitrary point
EQU $10 TYPE_QUAD_SCALE
COMMENT_LABEL $10 if = continue is possible, leaving at some arbitrary point
LABEL $CB8D tiler_END_POS_VERTICAL
LABEL $CB8E mh_playerAnimList
LABEL $CB90 mh_playerAnimCounter
LABEL $CB91 mh_playerAnimDelayCounter
LABEL $CB92 mh_playerTouchesGround
LABEL $CB93 mh_playerXSpeed
LABEL $CB94 mh_playerYSpeed
LABEL $CB95 mh_playerWantDir
LABEL $CB96 mh_lastPlayerWantDir
LABEL $CB97 mh_currentPossibleDirections
EQU $01 PLAYER_WANTS_RIGHT
EQU $02 PLAYER_WANTS_LEFT
EQU $04 PLAYER_WANTS_DOWN
EQU $08 PLAYER_WANTS_UP
EQU $01 PLAYER_CAN_RIGHT
EQU $02 PLAYER_CAN_LEFT
EQU $04 PLAYER_CAN_DOWN
EQU $08 PLAYER_CAN_UP
EQU $01 COL_RIGHT
EQU $02 COL_LEFT
EQU $04 COL_DOWN
EQU $08 COL_UP
EQU $10 COL_COLLECT
COMMENT_LABEL $10 tile can be collected!
EQU $0E TileMOB
EQU $00 T_SCREEN_Y
EQU $01 T_SCREEN_X
EQU $02 T_BEHAVIOUR
COMMENT_LABEL $02 PC
EQU $04 T_NEXT_TILE_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 T_YCOARSE
EQU $07 T_XCOARSE
EQU $08 T_YFINE
EQU $09 T_XFINE
EQU $0A T_ANIM
EQU $0B T_ANIM_COUNTER
EQU $0C T_DEFINITION_POINTER
LABEL $C830 TILE_OBJECT_DONE_A
LABEL $C82E TILE_OBJECT
EQU $0A COUNT_TILE_MOBS
LABEL $C906 tileobject_list
LABEL $C992 tileobject_list_end
LABEL $C881 tileobject_empty_head
LABEL $C883 tileobject_objects_head
LABEL $C885 tileobjectCount
LABEL $CA7D highScoreBlock
LABEL $CA7D Ram_HighScore_Start
LABEL $CA7D highScoreTable
LABEL $CA9D Ram_HighScore_End
LABEL $CA9D Ram_HardcoreScore_Start
LABEL $CA9D HardcoreScoreTable
LABEL $CABD Ram_HardcoreScore_End
LABEL $CABD highScoreTableEnd
LABEL $CABD tmpHiStart
LABEL $CABF tmpHiMode
LABEL $CAC0 tmpButtonMode
LABEL $CABD flashUserRAM
EQU $10 MAX_DODGE_OBJECTS
COMMENT_LABEL $10 must be smaller ENEMY OBJECT
LABEL $C9CD dodgeObject_list
LABEL $CB1D dodgeObject_list_end
LABEL $CB1D oldString
LABEL $CB20 bonusCollectSave
LABEL $CB21 levelCountSave
LABEL $CB22 dodgerGotKilled
LABEL $CB23 isDiamondRun
LABEL $CB24 textIntensity
LABEL $CB24 dodgerAngle1
LABEL $CB25 textFadeDirection
LABEL $CB25 dodgerAngle2
LABEL $CB26 landingbayPos
LABEL $CB26 fighterPos
LABEL $CB26 textPointer
LABEL $CB26 dodgerAngle3
LABEL $CB27 dodgerAngle4
LABEL $CB28 textDisplayDone
LABEL $CB28 dodgerAccel
LABEL $CB27 dodgeResult
LABEL $CB2A dodgerProgress
LABEL $CB2C dodgerFinishedIndicator
LABEL $CB2D rotateBuf
LABEL $CB2D landingFighterXSpeed16
LABEL $CB2D ROT_MINE1
COMMENT_LABEL $CB2D 'DUMB' MINE
LABEL $CB43 ROT_MINE2
COMMENT_LABEL $CB43 'MAGNETIC' MINE
LABEL $CB5F ROT_MINE3
COMMENT_LABEL $CB5F 'DUMB FIRE-BALL' MINE
LABEL $CB7E ROT_MINE4
COMMENT_LABEL $CB7E 'MAGNETIC FIRE-BALL' MINE
LABEL $CB63 bossfightStart
COMMENT_LABEL $CB63 enemyobject_list+ 10 *MAX_ENEMY_OBJECTS
LABEL $CB63 bossPosY
LABEL $CB64 bossPosX
LABEL $CB63 introBossX
LABEL $CB64 introPlayerX
LABEL $CB65 bossMoveDir
LABEL $CB66 bossTimer
LABEL $CB68 explosionCount
LABEL $CB68 bossHP
LABEL $CB6A bossExtroPointer
LABEL $CB6A bossWasHit
LABEL $CB6B tmp3
LABEL $CB6C bossfightStart_second
LABEL $C9A6 bossExplosionSpace1
COMMENT_LABEL $C9A6 ??? bossMoveDir
LABEL $C9AB bossExplosionSpace2
LABEL $C9B0 bossExplosionSpace3
LABEL $CB61 boss3Xpos16
LABEL $CB6C leftSmallGunAnimDelayCounter
LABEL $CB6D eyeLeftAnimDelayCounter
LABEL $CB6E eyeLeftAnimCounter
LABEL $CB6F leftSmallGunAnimCounter
LABEL $CB70 leftSmallGunAnimStart
LABEL $CB71 rightSmallGunAnimDelayCounter
LABEL $CB72 rightSmallGunAnimCounter
LABEL $CB73 rightSmallGunAnimStart
LABEL $CB74 leftBigGunAnimDelayCounter
LABEL $CB75 leftBigGunAnimCounter
LABEL $CB76 leftBigGunAnimStart
LABEL $CB77 rightBigGunAnimDelayCounter
LABEL $CB78 rightBigGunAnimCounter
LABEL $CB79 rightBigGunAnimStart
LABEL $CB7A calibrationStage
LABEL $CB6C swarmCounter
LABEL $CB6D intensityBoss2Intro
LABEL $CB6E antennaDelayCounter
LABEL $CB6F antennaAnimCounter
LABEL $CB70 boss2Scale
LABEL $CB71 boss2Direction
LABEL $CB72 maxSwarmAttacker
LABEL $CB6C boss3MouthAnimCounter
LABEL $CB6D boss3AttachmentScale
LABEL $CB6E boss3LetterCannonPointer
LABEL $CB70 boss3LetterCannonWait
LABEL $CB71 boss3ShieldCount
LABEL $CB72 boss3HPCompare
LABEL $CB74 boss3MovementPointer
LABEL $CB76 boss3YposNow16
LABEL $CB78 boss3XposNow16
LABEL $CB5F boss3Ypos16
LABEL $CB61 boss1Scale
LABEL $CAB9 boss4WeaponAnimCounter
LABEL $CABA boss4WeaponActive
LABEL $CABB boss4ShotStage
LABEL $CABC boss4ShotStageDelayCounter
LABEL $CABD boss4ShotLineCounter
LABEL $CABE boss4LaserStartTmp
LABEL $CAC0 boss4LaserTargetTmp
LABEL $CAC2 maxYSum
LABEL $CAC3 lukeX
LABEL $CAC4 displayExplosions
EQU $03 BOSS4_LASER_COUNT
EQU $04 Boss4LaserBeam
EQU $00 boss4LaserTarget
EQU $02 boss4shotMax
EQU $03 boss4shotMin
EQU $04 Boss4GroundExplosion
EQU $00 ExPosy
EQU $01 ExPosx
EQU $02 ExSizeCounter
EQU $03 ExSize
LABEL $CAC5 signFlag
LABEL $CAC6 b4_divide_tmp
LABEL $CAC7 b4_tmp1
LABEL $CAC9 b4_tmp2
LABEL $CACA boss4laserData
LABEL $CAD6 boss4explosionData
EQU $1D version
EQU $2E zeroPointer
LABEL $02DA main
EQU $32 jmpBankIRQ0T1
LABEL $0049 jsrBank1_fromBank2_T1
EQU $76 jsrBank0_fromBank3_T1
LABEL $009E jsrBank0_fromBank3_Shift
LABEL $00C9 jsrBank0_fromBank2_T1
LABEL $00E1 jsrBank0_fromBank2_Shift
LABEL $00FC jmpBankIRQ0Shift
LABEL $010E doShiftIRQ
LABEL $0106 jmpBankIRQ1Shift
LABEL $0120 jmpBankIRQ2X
LABEL $0132 jmpBankIRQ3X
LABEL $0147 jsrBank2_fromShift_0
LABEL $0147 jsrBank3_fromShift_1
LABEL $0162 jsrBank1_fromBank3_T1
LABEL $017A jsrBank1_fromBank0_T1
LABEL $018D jsrBank2_fromT1_1
LABEL $01B5 jsrBank2_from1_SHIFT
LABEL $01E0 jsrBank3_from0_SHIFT
LABEL $020B jmpBank2_from1
LABEL $021D jmpBank2_from0
LABEL $021D jmpBank3_from1
LABEL $0227 jsrBank0X
LABEL $0236 jmpBank0X
LABEL $0240 jsrBank1X
LABEL $024F jmpBank1X
LABEL $0255 jsrBank1X_d
LABEL $0269 jmpBackBonusChallenge
LABEL $0270 jmpBack1BonusIngame
LABEL $0277 jmpBack3BonusDying
LABEL $027E doMainBank0
LABEL $1358 gameLoopPart0
COMMENT_LABEL $1358 #isfunction
LABEL $0289 doMainBank0_m
LABEL $10A5 gameLoopPart0_m
COMMENT_LABEL $10A5 #isfunction
EQU $01 DRAW_VLP_BANK
LABEL $0294 Draw_Vlp0_0
LABEL $029E LF33D4848
LABEL $02A2 Draw_VLp_letter
LABEL $02B7 LF425_letter
LABEL $02DA optionsMenu
LABEL $02E7 afterDifficult
LABEL $030C afterSecrets
EQU $00 OPTION_DIFFICULTY
EQU $01 OPTION_MODE
EQU $02 OPTION_CALIBRATE
EQU $03 OPTION_RESET
EQU $04 OPTION_SECRETS
EQU $05 OPTION_BACK
EQU $05 MAX_OPTION
LABEL $034A dif_hc
LABEL $0317 difficultyStrings2
LABEL $0321 dif_e
LABEL $0328 dif_n
LABEL $0331 dif_h
LABEL $0338 dif_i
LABEL $0341 dif_s
LABEL $0355 main_0_0
COMMENT_LABEL $0355 #isfunction
LABEL $0355 main00
LABEL $0358 REPLACE_1_2_voxInit_varFromIRQ0_1
LABEL $037C REPLACE_1_2_checkFlash_varFromIRQ0_1
LABEL $038F doFlashInit
LABEL $0389 REPLACE_1_2_displayFlashError_varFromIRQ0_12
LABEL $038F REPLACE_1_2_initFlash_varFromIRQ0_1
LABEL $0398 fromGameOver
LABEL $03AC againB1
LABEL $0716 main01
LABEL $03BF REPLACE_1_2_showFirstHelp_varFromIRQ0_1
LABEL $03C5 LoadDisk
LABEL $3A77 SMVB_continue_single
COMMENT_LABEL $3A77 #isfunction
LABEL $3BDF SMVB_startDraw_single
COMMENT_LABEL $3BDF #isfunction
LABEL $3A61 SMVB_continue3_single
COMMENT_LABEL $3A61 #isfunction
LABEL $3B58 SMVB_startMove_double
COMMENT_LABEL $3B58 #isfunction
LABEL $3B66 SMVB_startDraw_double
COMMENT_LABEL $3B66 #isfunction
LABEL $3B09 SMVB_continue_double
COMMENT_LABEL $3B09 #isfunction
LABEL $3B2C SMVB_startMove_single
COMMENT_LABEL $3B2C #isfunction
LABEL $3A6C SMVB_continue2_single
COMMENT_LABEL $3A6C #isfunction
LABEL $3C60 SMVB_lastDraw_rts
COMMENT_LABEL $3C60 #isfunction
LABEL $041F beQuiet
LABEL $0435 exitOptions
LABEL $0441 notHardcore
LABEL $0444 doOptions
EQU $00 MAX_LEVEL_SELECT_ALLOWED
LABEL $0458 optionsLoop
LABEL $0484 noJoy
LABEL $0484 noLevelChange
LABEL $0479 levelDec
LABEL $0466 levelInc
LABEL $0537 noButtonPressedOptions
LABEL $0498 noOptionHelp
LABEL $0492 REPLACE_1_2_showOptionHelp_varFromIRQ0_1
LABEL $04A2 noMH
LABEL $0728 displayTitlePic1
LABEL $2419 doReset
LABEL $241F doSecrets
LABEL $0710 doCalib0
LABEL $0558 doMode
LABEL $0537 notDifficultOption
LABEL $04DD diffOc
LABEL $0537 difOk
LABEL $04F0 notSuperImpossible
LABEL $0503 notImpossible
LABEL $0516 notHard
LABEL $0529 notNormal
LABEL $0537 notEasy
LABEL $07E7 JoyDigitalHorizontal00
COMMENT_LABEL $07E7 #isfunction
LABEL $080E JoyDigitalVertical00
COMMENT_LABEL $080E #isfunction
LABEL $059E noChangeSelPos
LABEL $056B selPosAdvance
LABEL $05A1 noChangeSelPos2
LABEL $0564 selectHardcore
LABEL $055F stroeDif2
LABEL $0583 saveGameCheck
LABEL $058C REPLACE_1_2_showLoadMessage_varFromIRQ0_54
LABEL $059E doNotLoadAfterAll
LABEL $0598 REPLACE_1_2_loadGameFromFlash_varFromIRQ0_123
LABEL $05C3 buzzVectrex16
LABEL $05D0 calibDone16
LABEL $05DE printVectorStringList7
LABEL $05DE modeCheckDone
LABEL $05E9 notSelected1
LABEL $0681 printOneVectorString_D
LABEL $0602 notSelected2
LABEL $0609 optionPrintDone
LABEL $061D notHardcoreMode
LABEL $0CBE wordToDecString
LABEL $0D1F leadingZeroToSpace
LABEL $3A2C SMVB_drawSmart
COMMENT_LABEL $3A2C #isfunction
LABEL $A52A Alphabet
LABEL $069E LF33D5555
LABEL $06A9 nextLetter2_72_2
LABEL $06C2 shiftOn56
LABEL $06B0 shiftOff56
LABEL $06DE macroEnd56
LABEL $06E2 donePrintVectorString3_72
LABEL $06E3 my_wait_recal
LABEL $06F2 LF19E57
LABEL $0710 REPLACE_1_2_initCalibration1_varFromIRQ0_1
COMMENT_LABEL $0710 bank 1 replace
LABEL $0D38 initTitleRAM
COMMENT_LABEL $0D38 #isfunction
LABEL $072E noTitleTitle
EQU $00 SKIP_TITLE_SCREEN
LABEL $0728 REPLACE_1_2_displayTitlePicture_varFromIRQ1_1
COMMENT_LABEL $0728 bank 1 replace
LABEL $0733 REPLACE_1_2_titleMusic_varFromIRQ1_1
LABEL $0736 REPLACE_1_2_PLYINIT_varFromIRQ1_1
LABEL $073C REPLACE_1_2_initAllTitle_varFromIRQ0_1
LABEL $0742 Titleloop1
LABEL $0742 title_0_0
COMMENT_LABEL $0742 #isfunction
LABEL $074A noEOR58
LABEL $0755 noEOR59
LABEL $0761 bwok
LABEL $0766 REPLACE_1_2_playAKSMusic_varFromIRQ1_1
LABEL $07AF doNotStartGame
LABEL $0796 doNotStartGame2
LABEL $1A5A doAchiements
LABEL $07A3 doStartGame
LABEL $1A60 HighScoreTest_Start
LABEL $079D REPLACE_1_2_showTitleHelp_varFromIRQ0_1
LABEL $07A3 REPLACE_1_2_readyPlayerOne_varFromIRQ0_1
COMMENT_LABEL $07A3 bank 1 replace
LABEL $07A9 REPLACE_1_2_main11_varFrom1_1
COMMENT_LABEL $07A9 bank 1 replace
LABEL $07AF REPLACE_1_2_oneVBTitleStep_varFromIRQ0_1
LABEL $07B7 getButtonState
COMMENT_LABEL $07B7 #isfunction
LABEL $07E1 noButtonPressed
LABEL $07E7 Joy_Digital_horizontal_0_0
LABEL $07E7 queryHW60
EQU $08 DIGITAL_JOYTICK_LOOP_MIN
LABEL $07F0 waitLoopH60
LABEL $0808 xReadDone60
LABEL $080D noxmove60
LABEL $080E Joy_Digital_vertical_0_0
LABEL $080E queryHW61
LABEL $0817 waitLoopH61
LABEL $082F xReadDone61
LABEL $0834 noxmove61
LABEL $0835 adjustShotDamage
LABEL $0835 ReturnFromRankCheck
LABEL $0842 superShot62
LABEL $0857 standardShot62
LABEL $083E laserShot62
LABEL $0865 adjustDone62
LABEL $0855 easy462
LABEL $0853 normal462
LABEL $0852 hard462
LABEL $0851 impossible462
LABEL $0865 easy362
LABEL $0864 normal362
LABEL $0863 impossible362
LABEL $0863 hard362
LABEL $086F noBulletAdjust62
LABEL $087D okdamage62
LABEL $0881 msRating
LABEL $088D DodgerResultListSnail
LABEL $08B1 DodgerResultListTurtle
LABEL $08D6 DodgerResultListNormal
LABEL $08FB DodgerResultListRABBIT
LABEL $0921 DodgerResultListFalcon
LABEL $0948 DodgerResultDiamond
LABEL $0973 DodgerResultListBad
LABEL $0994 dodgeResultStringPointer
LABEL $09A0 displayMinestormResult00
COMMENT_LABEL $09A0 #isfunction
LABEL $09A0 displayMinestormResult_0_0
LABEL $09B5 dodgerNotKilledDisplay
LABEL $09D0 nextDodgerResultString
LABEL $A8F7 printVectorStringList
LABEL $09CE isDiamondRunNoMoney
LABEL $09D0 notHardcoreMine
LABEL $09D3 displaySuperDiamondsExtro
LABEL $09E1 DiamondsExtroStrings
LABEL $09F3 displaySuperDiamondsIntro
COMMENT_LABEL $09F3 #isfunction
LABEL $0A01 DiamondsIntoStrings
LABEL $0A14 calibTest
LABEL $0A36 displayCalibrationText
LABEL $0A44 challengeResultGood
LABEL $0A59 challengeResultBad
LABEL $0A74 bossResult
LABEL $0A9A s1
LABEL $0A9F s2
LABEL $0AA4 s3
LABEL $0AA9 s4
LABEL $0AAE s5
LABEL $0AB4 s6
LABEL $0ABA s7
LABEL $0AC0 s8
LABEL $0AC7 s9
LABEL $0ACE perfectStringList
LABEL $0AE0 displayChallengeResult00
COMMENT_LABEL $0AE0 #isfunction
LABEL $0AE0 displayChallengeResult_0_0
COMMENT_LABEL $0AE0 #isfunction
LABEL $0B76 notPerfectChallengeResult
LABEL $0AF5 perfectChallengeResult
LABEL $A997 printVectorString
LABEL $0B70 nothingNew
LABEL $B4A8 newFWObject
COMMENT_LABEL $B4A8 #isfunction
LABEL $0B70 noRLNewEmitter
LABEL $B4F4 rocketEmitterBehaviour
COMMENT_LABEL $B4F4 #isfunction
LABEL $0B4A noEOR64
LABEL $0B59 noEOR65
LABEL $0B67 noEOR66
LABEL $0B75 backFromFireWorks
LABEL $0D2D leadingAddu
LABEL $0BB8 displayBossResult00
COMMENT_LABEL $0BB8 #isfunction
LABEL $0BC9 drawMinestormString00
LABEL $0BC9 drawMinestormString_0_0
LABEL $0BFD MineStorm_String
LABEL $0BDF noDiamondRunDisplay
LABEL $0BF5 DiamondStorm_String
LABEL $0C03 Storm_String
LABEL $0C0A drawWarpFailure
COMMENT_LABEL $0C0A #isfunction
LABEL $0C33 warpFailure_string1
LABEL $0C39 warpFailure_string2
LABEL $0C41 drawLevelString00
LABEL $0C41 drawLevelString_0_0
COMMENT_LABEL $0C41 #isfunction
LABEL $0C5F level_string
LABEL $2467 fillLevelString
COMMENT_LABEL $2467 #isfunction
LABEL $0C5E doRTS
LABEL $0C66 drawExtra
COMMENT_LABEL $0C66 #isfunction
LABEL $0C7A extraString
LABEL $0C81 drawBonusString_0_0
COMMENT_LABEL $0C81 #isfunction
LABEL $0C81 drawBonusString00
COMMENT_LABEL $0C81 #isfunction
LABEL $0C99 Bonus_string
LABEL $0C84 drawString_0_0
LABEL $0CA3 drawKamikazeString00
COMMENT_LABEL $0CA3 #isfunction
LABEL $0CA3 drawKamikazeString_0_0
COMMENT_LABEL $0CA3 #isfunction
LABEL $0CA8 Kamikaze_string
LABEL $0CB2 drawBossString00
COMMENT_LABEL $0CB2 #isfunction
LABEL $0CB2 drawBossString_0_0
COMMENT_LABEL $0CB2 #isfunction
LABEL $0CB7 boss_string
LABEL $0CC8 test10000Again
LABEL $0CD5 notOver10000
LABEL $0CD5 test1000Again
LABEL $0CE2 notOver1000
LABEL $0CE2 test100Again
LABEL $0CEF notOver100
LABEL $0CEF test10Again
LABEL $0CFC notOver10
LABEL $0D1E outHerelsp
LABEL $0D20 againlsz1
LABEL $0D2D againlsz2
LABEL $0D44 next_list_entry_ig
LABEL $0D5C csa_to_bcd
COMMENT_LABEL $0D5C #isfunction
LABEL $0D6C doOnly7_cb
LABEL $0D62 next_byte_c_b
LABEL $0D78 bcd_to_csa
COMMENT_LABEL $0D78 #isfunction
LABEL $0D84 doOnly7_bc
LABEL $0D7C next_byte_b_c
LABEL $0D8E compare_csa
COMMENT_LABEL $0D8E #isfunction
LABEL $0D90 next_compare_cc
LABEL $0DA1 return_u_greater_x
LABEL $0D9E return_u_smaller_x
LABEL $0D9B return_u_equal_x
LABEL $0DA4 compare_csa_bcd
COMMENT_LABEL $0DA4 #isfunction
LABEL $0DB2 highScoreSeekDone
LABEL $0DBB done_hsd
LABEL $0DBC test_highscore
COMMENT_LABEL $0DBC #isfunction
LABEL $0DCC testNext_highscore_th
LABEL $0DD9 newHighscore
LABEL $0DF4 only_new_score_copy
LABEL $0E0D playerScoreRemoveAscii
LABEL $0E12 againasciicon
LABEL $0E1C gameOver00
COMMENT_LABEL $0E1C #isfunction
LABEL $0E1C gameOver0_0
COMMENT_LABEL $0E1C #isfunction
LABEL $0E1F REPLACE_1_2_titleMusic_varFromIRQ1_2
LABEL $0E22 REPLACE_1_2_PLYINIT_varFromIRQ1_2
LABEL $0E28 REPLACE_1_2_readHighscore_varFromIRQ0_223
LABEL $0E98 no_hs_acchieved
LABEL $0E46 nexthsa
LABEL $0E51 donehsa
LABEL $0E56 nexthsa2
LABEL $0E65 donehsa2
LABEL $0E65 REPLACE_1_2_HighScoreTest_varFromIRQ1_2
LABEL $0E6B backFromHighScoreEdit
LABEL $0E6B REPLACE_1_2_editPlayerInitials_varFromIRQ1_2
LABEL $0E7C notHardcore_hs
LABEL $0E89 REPLACE_1_2_saveBlockOnChange_varFromIRQ0_4
LABEL $0E8F REPLACE_1_2_showHighscore_varFromIRQ1_2
LABEL $0E98 REPLACE_1_2_saveBlockOnChange_varFromIRQ0_5
LABEL $0EA1 gameOverLoop
LABEL $0EA7 REPLACE_1_2_playAKSMusic_varFromIRQ1_2
LABEL $3C94 calibrationZero7
COMMENT_LABEL $3C94 #isfunction
LABEL $2E13 pauseString
LABEL $1537 Print5Strd
LABEL $0ED3 suckRandomMoney
COMMENT_LABEL $0ED3 #isfunction
LABEL $0F21 dontsuckitup
LABEL $0EDC suckitup
LABEL $54DF spawnBonus
COMMENT_LABEL $54DF #isfunction
LABEL $0F21 resetBonusSpawm_2_ab
LABEL $0EF9 noEOR71
LABEL $0F01 okrand_a
LABEL $0F16 reduceDone
LABEL $A4E7 BonusDecided
LABEL $6114 bonusSuckedBehaviour
COMMENT_LABEL $6114 #isfunction
LABEL $0F28 spawnRandomMoney
COMMENT_LABEL $0F28 #isfunction
LABEL $0F2F doSpawnBonusAgain
LABEL $0F37 noEOR72
LABEL $0F46 noEOR73
LABEL $0F76 resetBonusSpawm_2_a
LABEL $0F66 noEOR74
LABEL $0F6E okrand
LABEL $0F7F spawnMoney200
COMMENT_LABEL $0F7F #isfunction
LABEL $0F86 doSpawnBonusAgain22
LABEL $0F8E noEOR75
LABEL $0F9D noEOR76
LABEL $0FC3 resetBonusSpawm_2
LABEL $0FBE spawn200MoneyOk
LABEL $0FCC doSpawnBonus0_0
COMMENT_LABEL $0FCC #isfunction
LABEL $0FE3 noRankDrop
LABEL $1003 resetBonusSpawm
LABEL $A4FE initRank
COMMENT_LABEL $A4FE #isfunction
LABEL $0FEB noEOR77
LABEL $A350 initBonus
COMMENT_LABEL $A350 #isfunction
LABEL $100A bossDisplayHead
COMMENT_LABEL $100A #isfunction
LABEL $1026 noOddRound0_b1
LABEL $1024 notDrunken_bd
LABEL $106D oddEvenDoneMain0_b1
LABEL $1067 noNewPlayerShot0_b1
LABEL $1040 normalFireBoss
LABEL $104B doAutoFireBoss
LABEL $105B doNormalFireBoss
LABEL $AA51 spawnPlayerShot
COMMENT_LABEL $AA51 #isfunction
LABEL $1067 REPLACE_1_2_voxSpeak_varFromIRQ0_2
LABEL $106D REPLACE_1_2_doymsound100_varFromIRQ1_2
LABEL $10A4 noExplosionSoundTodo_b1
LABEL $108B explosionSoundDo_b1
LABEL $107C enemyHitSoundDo_b1
LABEL $1098 doTheSound_b1
LABEL $1083 REPLACE_1_2_spawnXData_varFromIRQ1_2
LABEL $1092 REPLACE_1_2_explosion1Data_varFromIRQ1_2
LABEL $10BD playerShotsDoneMain
LABEL $1122 noDemo
LABEL $10E4 noDemoMessage
LABEL $10D8 REPLACE_1_2_DemoString_varFrom1_1
COMMENT_LABEL $10D8 bank 1 replace
LABEL $1101 noDirChangeDemo
LABEL $10F0 noEOR82
LABEL $10FC demoLeft
LABEL $10F5 demoRight
LABEL $111B noAdjustTacScan_dem
LABEL $1118 adjustTacScanDone_dem
LABEL $1172 doAutoFire
LABEL $114D noOddRound_m0
LABEL $113C notDrunken_nd
LABEL $114B noAdjustTacScan
LABEL $1148 adjustTacScanDone
LABEL $1194 oddEvenDoneMain0_m
LABEL $2567 pause_0_0
COMMENT_LABEL $2567 #isfunction
LABEL $1252 executeSmartBomb
COMMENT_LABEL $1252 #isfunction
LABEL $1167 normalFire
LABEL $118E noNewPlayerShot_m
LABEL $1182 doNormalFire
LABEL $118E backFromPause
LABEL $118E REPLACE_1_2_voxSpeak_varFromIRQ0_1
LABEL $1194 smartBombReturn
LABEL $1194 REPLACE_1_2_doymsound100_varFromIRQ1_4
LABEL $11A2 noBonusSpwan_m
LABEL $11D6 noExplosionSoundTodo_m
LABEL $11BD explosionSoundDo_m
LABEL $11AE enemyHitSoundDo_m
LABEL $11CA doTheSound_m
LABEL $11B5 REPLACE_1_2_spawnXData_varFromIRQ1_4
LABEL $11C4 REPLACE_1_2_explosion1Data_varFromIRQ1_4
LABEL $11D6 playerShotsDoneM
LABEL $11E9 CircleList1
LABEL $1229 doBoss1Explosion
LABEL $1235 loopy1_1
LABEL $1251 outhere_1
EQU $00 UNLIMITED_BOMBS
LABEL $127B next_list_entry_ig2bb
LABEL $129C handleEnemiesLoop_SB
LABEL $133C nextEnemy_SB
LABEL $12AD REPLACE_1_2_enemyPlayerControlledRightBehaviour_varFrom1_31
COMMENT_LABEL $12AD bank 1 replace
LABEL $12B4 REPLACE_1_2_enemyPlayerControlledLeftBehaviour_varFrom1_31
COMMENT_LABEL $12B4 bank 1 replace
LABEL $12BB REPLACE_1_2_enemyDelayBehaviour_varFrom1_1
COMMENT_LABEL $12BB bank 1 replace
LABEL $12C3 REPLACE_1_2_enemy3Definition_varFrom1_41
COMMENT_LABEL $12C3 bank 1 replace
LABEL $12C8 REPLACE_1_2_enemySW3DefinitionShield_varFrom1_41
COMMENT_LABEL $12C8 bank 1 replace
LABEL $12CF REPLACE_1_2_moneySuckerBehaviour_varFrom1_41
COMMENT_LABEL $12CF bank 1 replace
LABEL $12E4 noMoneySuckerSB
LABEL $12D4 isMegaFiend
LABEL $1300 wasNotAttacker_SB
LABEL $12E4 REPLACE_1_2_megaFiendBehaviour_varFrom1_42
COMMENT_LABEL $12E4 bank 1 replace
LABEL $12E9 bugEnemy_SB
LABEL $12F3 REPLACE_1_2_enemySingleAttackAbsolutBehaviour_varFrom1_41
COMMENT_LABEL $12F3 bank 1 replace
LABEL $12FD wasAttacker_SB
LABEL $12F8 REPLACE_1_2_enemySingleAttackRelativeBehaviour_varFrom1_41
COMMENT_LABEL $12F8 bank 1 replace
LABEL $1302 REPLACE_1_2_enemyTribble_varFrom1_1
COMMENT_LABEL $1302 bank 1 replace
LABEL $1319 back88
LABEL $3316 addScore_b
COMMENT_LABEL $3316 #isfunction
LABEL $131B REPLACE_1_2_lastNormalEnemyAddress_varFrom1_2
COMMENT_LABEL $131B bank 1 replace
LABEL $1326 normalEnemy_SB
LABEL $1326 REPLACE_1_2_enemyExplosionBehaviour_varFrom1_52
COMMENT_LABEL $1326 bank 1 replace
LABEL $132D REPLACE_1_2_Enemy1Right_varFrom1_1
COMMENT_LABEL $132D bank 1 replace
LABEL $1341 allEnemiesHandled_SB
LABEL $1344 PrintBonusHere
LABEL $1355 backFromBonusPrintShop
LABEL $1358 REPLACE_1_2_voxSpeak_varFromIRQ0_21
LABEL $135E REPLACE_1_2_doymsound100_varFromIRQ1_5
LABEL $1364 no1SoundHere
LABEL $1370 font_5_data_shift_0
LABEL $1370 font5a_line1
LABEL $13CB font5a_line2
EQU $05 FONT_HEIGHT
EQU $5B FONT_LENGTH
LABEL $1350 FONT_START_A
COMMENT_LABEL $1350 // space is 1
LABEL $14BC FONT_END
LABEL $1537 Print5_Str_d
LABEL $1547 Print5_Str_d_inMove
LABEL $154F LF33D9090
LABEL $1553 Print5_Str_Here
LABEL $155A LF4A5_5
LABEL $157B LF4CB_5
LABEL $1577 LF4C7_5
LABEL $15BA LF50A_5
LABEL $159B LF4EB_5
LABEL $15C0 achievmentMessages
LABEL $160E stringSniperRank3
LABEL $161D stringSniperRank2
LABEL $162C stringSniperRank1
LABEL $163B stringScoreRank5
LABEL $164A stringScoreRank4
LABEL $1659 stringScoreRank3
LABEL $1668 stringScoreRank2
LABEL $1677 stringScoreRank1
LABEL $1686 stringCollectorRank5
LABEL $1694 stringCollectorRank4
LABEL $16A2 stringCollectorRank3
LABEL $16B0 stringCollectorRank2
LABEL $16BE stringCollectorRank1
LABEL $16CC stringGreedy
LABEL $16D4 string9Lives
LABEL $16DC stringAll
LABEL $16E1 stringBladeMasterRank5
LABEL $16EF stringBladeMasterRank4
LABEL $16FD stringBladeMasterRank3
LABEL $170B stringBladeMasterRank2
LABEL $1719 stringBladeMasterRank1
LABEL $1727 stringTripple
LABEL $172F stringQuadro
LABEL $1737 stringLaser
LABEL $173E stringOfficerRank4
LABEL $174D stringOfficerRank3
LABEL $175C stringOfficerRank2
LABEL $176B stringOfficerRank1
LABEL $177A stringSpyRank4
LABEL $1786 stringSpyRank3
LABEL $1792 stringSpyRank2
LABEL $179E stringSpyRank1
LABEL $17AA stringChallengeRank4
LABEL $17B7 stringChallengeRank3
LABEL $17C4 stringChallengeRank2
LABEL $17D1 stringChallengeRank1
LABEL $17DE stringLoss
LABEL $17EC stringFalcon
LABEL $17F9 stringDrunken
LABEL $1807 stringAchievement
LABEL $1814 printAchievement
COMMENT_LABEL $1814 #isfunction
LABEL $1834 scoopie1Done91
LABEL $CBD4 SAVE1_ENEMY_ADDRESS
COMMENT_LABEL $CBD4 playershotobject_list +15
LABEL $182B Move_Mem_a92
LABEL $1827 Move_Mem_a_192
LABEL $184D scoopie2Done91
LABEL $CBBF SAVE2_ENEMY_ADDRESS
COMMENT_LABEL $CBBF playershotobject_list + EnemyStruct +15
LABEL $1844 Move_Mem_a93
LABEL $1840 Move_Mem_a_193
LABEL $190E backFromFireWorks2
LABEL $185F fw_next_list_exentry_1_2
LABEL $C8D8 achievementCounter
LABEL $1877 achievmentLoop
LABEL $187D REPLACE_1_2_doymsound100_varFromIRQ1_100
LABEL $A8CC calibrateString
LABEL $1909 nothingNew_Ach
LABEL $1909 noRLNewEmitter_Ach
LABEL $18E3 noEOR96
LABEL $18F2 noEOR97
LABEL $1900 noEOR98
LABEL $1927 next_list_entry_igb2
LABEL $19CB scoopieEnsure1Done99
LABEL $194B tryNextEO100
LABEL $19A9 cs_done_no100
LABEL $1961 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_81100
LABEL $1987 noLefty100
LABEL $196D REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_81100
LABEL $197B leftyIsRight100
LABEL $19A9 macroEnd100
LABEL $1987 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_82100
LABEL $19A1 noRighty100
LABEL $1993 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_82100
LABEL $19B9 Move_Mem_a101
LABEL $19B5 Move_Mem_a_1101
LABEL $19BF noScoopy1Move99
LABEL $1A58 scoopieEnsure2Done99
LABEL $19D8 tryNextEO102
LABEL $1A36 cs_done_no102
LABEL $19EE REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_81102
LABEL $1A14 noLefty102
LABEL $19FA REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_81102
LABEL $1A08 leftyIsRight102
LABEL $1A36 macroEnd102
LABEL $1A14 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_82102
LABEL $1A2E noRighty102
LABEL $1A20 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_82102
LABEL $1A46 Move_Mem_a103
LABEL $1A42 Move_Mem_a_1103
LABEL $1A5A REPLACE_1_2_doAchiements1_varFromIRQ1_1
LABEL $1A65 REPLACE_1_2_showHighscoreMusic_varFromIRQ1_1
EQU $3F TWINKLE_AND
EQU $0F TWINKLE_OR
COMMENT_LABEL $0F lowest twinkle brightness
LABEL $1A6E simpleStarBehaviour2Bank2
COMMENT_LABEL $1A6E #isfunction
LABEL $1A99 addyeah
LABEL $1B10 constar2
LABEL $1AAD noEOR107
LABEL $1ABA noEOR109
LABEL $1AC7 noEOR111
LABEL $1AD4 noEOR113
LABEL $1AE1 noEOR115
LABEL $1AEE noEOR117
LABEL $1AFB noEOR119
LABEL $1B08 noEOR121
LABEL $1D7F endit
LABEL $1B12 LF33D122122
LABEL $1B6C firstStars_a
LABEL $1B6C noPlayerMovement125
LABEL $1B5D leftPlayerMovement125
LABEL $1B4C rightPlayerMovement125
LABEL $1B6C playerMovementDone125
LABEL $1B6E LF33D126126
LABEL $1C4C firstStars_b
LABEL $1BC2 startFresh129
LABEL $1BC5 nextShotTestLoaded129
LABEL $1BB1 enemyOutOfBounds129
LABEL $1BD3 godShotHere130
LABEL $1C4C endm130
EQU $02 shot_y_radius_corrdction
LABEL $1BE5 shotIsAlive1130
LABEL $1C05 not6Shot130
LABEL $1BED not4Shot130
LABEL $1C07 shotdone130
LABEL $1BF5 not3Shot130
LABEL $1BFD not2Shot130
LABEL $1C1F ok1130
LABEL $1C35 ok2130
LABEL $1C49 okok130
LABEL $1C4E LF33D131131
LABEL $1D56 firstStars_c
EQU $00 NO_2SHOT_TEST
LABEL $1C8E loadNextShot2134
LABEL $1C9C startFresh2134
LABEL $1C94 loadNextShot3134
LABEL $1CAD nextShotTestLoaded2134
LABEL $1CBC nextShotTestLoadedreally134
LABEL $1D51 noSameShots134
LABEL $1CD8 godShotHere135
LABEL $1D51 endm135
LABEL $1CEA shotIsAlive1135
LABEL $1D0A not6Shot135
LABEL $1CF2 not4Shot135
LABEL $1D0C shotdone135
LABEL $1CFA not3Shot135
LABEL $1D02 not2Shot135
LABEL $1D24 ok1135
LABEL $1D3A ok2135
LABEL $1D4E okok135
LABEL $1D58 LF33D136136
LABEL $1D79 REPLACE_1_2_backToStarBehaviour_varFrom1_1
LABEL $1D81 LF33D138138
LABEL $1D93 REPLACE_1_2_backToStarBehaviour_varFrom1_2
LABEL $1D99 simpleStarBehaviourHSBank2
COMMENT_LABEL $1D99 #isfunction
LABEL $1DA3 intOk
LABEL $1DCB addyeahHS
LABEL $1E4D constar2HS
LABEL $1DDB noEOR143
LABEL $1DEA noEOR145
LABEL $1DF7 noEOR147
LABEL $1E04 noEOR149
LABEL $1E11 noEOR151
LABEL $1E1E noEOR153
LABEL $1E2B noEOR155
LABEL $1E38 noEOR157
LABEL $1E45 noEOR159
LABEL $1ED8 enditHS
LABEL $1E4F LF33D160160
LABEL $1E72 firstStars_aHS
LABEL $1E74 LF33D163163
LABEL $1E97 firstStars_bHS
LABEL $1E99 LF33D166166
LABEL $1EBF firstStars_cHS
LABEL $1EC1 LF33D169169
LABEL $1ED2 REPLACE_1_2_backToStarBehaviourHS_varFrom1_1
LABEL $1EDA LF33D171171
LABEL $1EEC REPLACE_1_2_backToStarBehaviourHS_varFrom1_2
LABEL $1EF2 endOfGameAchievementTest
COMMENT_LABEL $1EF2 #isfunction
LABEL $1EF4 checkScore5
LABEL $1F18 checkScore4
LABEL $1F0B displayScoreAchievementRank5
LABEL $1F96 scoreCheckDone
LABEL $2372 displayAchievement
COMMENT_LABEL $2372 #isfunction
LABEL $1F3A checkScore3
LABEL $1F2D displayScoreAchievementRank4
LABEL $1F55 checkScore2
LABEL $1F48 displayScoreAchievementRank3
LABEL $1F7B checkScore1
LABEL $1F6E displayScoreAchievementRank2
LABEL $1F89 displayScoreAchievementRank1
LABEL $1FF6 sniperCheckDone
LABEL $1F9F REPLACE_1_2_calcHitPercentage_varFromIRQ0_1
LABEL $1FC0 checkSniper2
LABEL $1FB3 displaySniperAchievementRank3
LABEL $1FDB checkSniper1
LABEL $1FCE displaySniperAchievementRank2
LABEL $1FE9 displaySniperAchievementRank1
LABEL $1FF6 checkOfficer4
LABEL $2011 Officer4CheckDone
LABEL $2062 OfficerCheckDone
LABEL $2004 displayOfficerAchievementRank4
LABEL $2011 checkOfficer3
LABEL $202C Officer3CheckDone
LABEL $201F displayOfficerAchievementRank3
LABEL $202C checkOfficer2
LABEL $2047 Officer2CheckDone
LABEL $203A displayOfficerAchievementRank2
LABEL $2047 checkOfficer1
LABEL $2062 Officer1CheckDone
LABEL $2055 displayOfficerAchievementRank1
LABEL $2062 REPLACE_1_2_getSecretCount_varFromIRQ0_1
LABEL $C88A secretCount
LABEL $2068 checkSpy4
LABEL $2083 Spy4CheckDone
LABEL $20D1 SpyCheckDone
LABEL $2073 displaySpyAchievementRank4
LABEL $2083 checkSpy3
LABEL $209E Spy3CheckDone
LABEL $208E displaySpyAchievementRank3
LABEL $209E checkSpy2
LABEL $20B9 Spy2CheckDone
LABEL $20A9 displaySpyAchievementRank2
LABEL $20B9 checkSpy1
LABEL $20D1 Spy1CheckDone
LABEL $20C4 displaySpyAchievementRank1
LABEL $20D1 checkAll
LABEL $210A notAll
LABEL $20FD displayAllAchievements
LABEL $210A REPLACE_1_2_backFromEndOfGameAchievementTest_varFromIRQ1_2
LABEL $2110 afterChallengeAchievementTest
COMMENT_LABEL $2110 #isfunction
LABEL $2188 BonusCheckDone
LABEL $211C checkBonusRank4
LABEL $2137 Bonus4CheckDone
LABEL $212A displayBonusAchievementRank4
LABEL $2137 checkBonusRank3
LABEL $2152 Bonus3CheckDone
LABEL $2145 displayBonusAchievementRank3
LABEL $2152 checkBonusRank2
LABEL $216D Bonus2CheckDone
LABEL $2160 displayBonusAchievementRank2
LABEL $216D checkBonusRank1
LABEL $2188 Bonus1CheckDone
LABEL $217B displayBonusAchievementRank1
LABEL $2188 REPLACE_1_2_backFromChallengeAchievementTest_varFrom1_1
LABEL $218E leaveDodgerAchievementTest
COMMENT_LABEL $218E #isfunction
LABEL $21D0 dodgerAchievementGoBack
LABEL $21D0 drunkenCheckDone
LABEL $219C checkFalcon
LABEL $21B7 checkDrunken
LABEL $21B7 falconCheckDone
LABEL $21D0 REPLACE_1_2_dodgerAchievementBack_varFrom1_1
LABEL $21D6 enterShopAchievementTest
COMMENT_LABEL $21D6 #isfunction
LABEL $2276 shopAchievementsBack
LABEL $21DF checkMoney5
LABEL $21FC checkMoney4
LABEL $2253 moneyCheckDone
LABEL $21EF displayMoneyAchievementRank5
LABEL $2219 checkMoney3
LABEL $220C displayMoneyAchievementRank4
LABEL $2236 checkMoney2
LABEL $2229 displayMoneyAchievementRank3
LABEL $2253 checkMoney1
LABEL $2246 displayMoneyAchievementRank2
LABEL $226E moneyCheckDone2
LABEL $2261 displayMoneyAchievementRank1
LABEL $2276 REPLACE_1_2_backFromenterShopAchievementTest_varFromIRQ1_2
LABEL $227C exitshopAchievementTest
COMMENT_LABEL $227C #isfunction
LABEL $22CB livesIs9Done
LABEL $2283 greedyTest
LABEL $22B0 greedyDone
LABEL $22A3 displayGreedyAchievement
LABEL $22B0 livesIs9Test
LABEL $22BE displayLive9Achievement
LABEL $22CB REPLACE_1_2_backFromexitshopAchievementTest_varFromIRQ1_2
LABEL $22D1 levelDoneAchievementTest
COMMENT_LABEL $22D1 #isfunction
LABEL $236C aLossDone
LABEL $22EE notLaserAllow_1
LABEL $22FE storeAllowed_1
LABEL $22F6 notBlasterAllow_1
LABEL $22FE notFourAllow_1
LABEL $231E aTrippleDone
LABEL $2312 displayTrippleAchievement
LABEL $2338 aQuadroDone
LABEL $232C displayQuadroAchievement
LABEL $2352 aLaserDone
LABEL $2346 displayLserAchievement
LABEL $2360 displayLossAchievement
LABEL $236C REPLACE_1_2_backFromlevelDoneAchievementTest_varFrom1_1
LABEL $2382 REPLACE_1_2_achievementChannel1_varFromIRQ1_173
LABEL $2388 REPLACE_1_2_achievementChannel2_varFromIRQ1_173
LABEL $238E REPLACE_1_2_achievementChannel3_varFromIRQ1_173
LABEL $2397 optCalibText
LABEL $23AC printCalibrationOptionText
LABEL $23D5 LF33D175175
LABEL $23D9 nextLetter2_7_c
LABEL $2414 donePrintVectorString3_7_c
LABEL $23F6 shiftOn176
LABEL $23E4 shiftOff176
LABEL $2412 macroEnd176
LABEL $2419 REPLACE_1_2_doReset_varFromIRQ0_11
LABEL $2423 secretLoop
LABEL $2442 noSecretsYet
LABEL $243D secretLoopDone
LABEL $244A secretMessagePointer2
LABEL $2442 REPLACE_1_2_showSecretMessageNone_varFromIRQ0_11
LABEL $244A REPLACE_0_2_showSecretMessage1_varFromIRQ0_11
LABEL $244C REPLACE_0_2_showSecretMessage2_varFromIRQ0_11
LABEL $244E REPLACE_0_2_showSecretMessage3_varFromIRQ0_11
LABEL $2450 REPLACE_0_2_showSecretMessage4_varFromIRQ0_11
LABEL $2452 REPLACE_0_2_showSecretMessage5_varFromIRQ0_11
LABEL $2454 REPLACE_0_2_showSecretMessage6_varFromIRQ0_11
LABEL $2456 REPLACE_0_2_showSecretMessage7_varFromIRQ0_11
LABEL $2458 printOneRank
LABEL $300F rankPointer
LABEL $314C syncPrintStrd
LABEL $C8DE pauseLineStart
LABEL $C8DB pauseLineCount
LABEL $C8DF pauseLinePos
LABEL $C8DA lastPauseDir
LABEL $C8DC pauseScrollOffsertY
EQU $28 PAUSE_SCROLL_OFFSET
LABEL $247A flsCont
LABEL $247A fillLevelStringB
LABEL $2487 pstartLines
LABEL $265E line14
LABEL $26A9 line0_
LABEL $26D1 line0
LABEL $2702 line2
LABEL $2730 line1
LABEL $276C line3
LABEL $27A3 line4
LABEL $27DA line19_4
LABEL $2803 line5
LABEL $2851 line6
LABEL $2889 line7
LABEL $28C0 line9
LABEL $28F8 line8
LABEL $292F line19_3
LABEL $29B3 line19_5
LABEL $29F3 line19_6
LABEL $2A21 line9b
LABEL $2A4D line10
LABEL $2A79 line11
LABEL $2AA7 line12
LABEL $2AF9 line13
LABEL $2B25 line19_1
LABEL $2B75 line19_2
LABEL $2BC5 line19a
LABEL $2BF1 line20
LABEL $2C1D line21
LABEL $2C49 line22
LABEL $2C75 line23
LABEL $2CA1 line24
LABEL $2CCD line25
LABEL $24C5 DrunkString1
LABEL $24CF DrunkString2
LABEL $24E7 DrunkString3
LABEL $24FA DrunkString4
LABEL $2504 drunkenPause
LABEL $251C drunkPauseCont
LABEL $2516 REPLACE_1_2_main12_varFrom1_2
COMMENT_LABEL $2516 bank 1 replace
LABEL $2579 pauseLoop
LABEL $2567 pause00
COMMENT_LABEL $2567 #isfunction
LABEL $256A REPLACE_1_2_copySoundRegs_varFromIRQ1_5
LABEL $2579 PSloop1
LABEL $258E doNothingOffsetty
LABEL $2588 decreaseOffsetPause
LABEL $2601 clearPuaseChange
LABEL $2604 noJoyPauseChange
LABEL $25E1 pauseDirDown
LABEL $25BD pauseDirUp
LABEL $25C2 scrollOnUp
LABEL $25D7 doPageScrollUp
LABEL $312E askSaveGame
LABEL $25ED scrollOnDown
LABEL $25F7 doPageScrollDown
LABEL $2611 noPauseHelp
LABEL $260B REPLACE_1_2_showPSHelp_varFromIRQ0_1
LABEL $2618 pauseCont
LABEL $2618 REPLACE_1_2_displayScore_varFrom1_1
COMMENT_LABEL $2618 bank 1 replace
LABEL $266A line15
LABEL $2EAC pEasyString
LABEL $268A difDone
LABEL $2673 line16
LABEL $2EB1 pnormaString
LABEL $267C line17
LABEL $2EB8 phardString
LABEL $2685 line18
LABEL $2EBD pimpossibleString
LABEL $2EC4 psuperimpossibleString
LABEL $2CF9 pauseWritingDone
LABEL $2E19 currentLeveString
LABEL $2E48 LivesString
LABEL $2756 noChashDisplay
LABEL $2E43 cashString
LABEL $2E1F shotsFiredString
LABEL $2E31 enemiesHitString
LABEL $2ECB Weapons
LABEL $2E2B timerString2
LABEL $2E4E powerString
LABEL $2E54 shipSpeedString
LABEL $2E5F bulletsString
LABEL $2E5A rateString
LABEL $2F68 rankMarkerString
LABEL $294B rank1Collected
LABEL $294D rank1BuildDone
LABEL $2957 rank2Collected
LABEL $2959 rank2BuildDone
LABEL $2963 rank3Collected
LABEL $2965 rank3BuildDone
LABEL $296F rank4Collected
LABEL $2971 rank4BuildDone
LABEL $297B rank5Collected
LABEL $297D rank5BuildDone
LABEL $2987 rank6Collected
LABEL $2989 rank6BuildDone
LABEL $29BF notArmor
LABEL $2F2B armorPauseString
LABEL $29D4 print19_5
LABEL $29C8 notShield
LABEL $2F38 shieldPauseString
LABEL $29D1 notScoop
LABEL $2F46 scoopPauseString
LABEL $300B secretUNKOWN2
LABEL $29FF line20_6
LABEL $2F53 autofirePauseString
LABEL $2A02 line20_6a
LABEL $2F5C noautofirePauseString
LABEL $3007 secretUNKOWN
LABEL $2A2E line9b_1
LABEL $2E9E pScoopShieldString
LABEL $2A5A line10_unkown
LABEL $2E67 immunity1String
LABEL $2A88 line11_unkown
LABEL $2E72 immunity2String_
LABEL $2AD7 line12_unkown
LABEL $2E7D wlockString
LABEL $2AE0 line13_a
LABEL $2B06 line13_unkown
LABEL $2E89 slockString
LABEL $2B53 line19_1_unkown
LABEL $2F73 superBombsAvailable
LABEL $2B5C line19_2a
LABEL $2BA3 line19_2_unkown
LABEL $2F7E superDiamondsCollected
LABEL $2BAC line19a_a
LABEL $2BD2 line19a_unkown
LABEL $2F87 secretSuperBomb
LABEL $2BFE line20_unkown
LABEL $2F99 secretLaser
LABEL $2C2A line21_unkown
LABEL $2FAB secretshield
LABEL $2C56 line22_unkown
LABEL $2FC0 secretStatus
LABEL $2C82 line23_unkown
LABEL $2FD3 secretDodger2
LABEL $2CAE line24_unkown
LABEL $2FE5 secretDodger5
LABEL $2CDA line25_unkown
LABEL $2FF7 secretPayback
LABEL $2CF9 line26
LABEL $2D31 noPageDown
LABEL $2D1A noHiIntDown
LABEL $2D91 arrowDoubleDown
LABEL $2D6C updiskDraw
LABEL $2D4C noHiIntUp
LABEL $2D59 passedHiINt
LABEL $2DA5 arrowDoubleUp
LABEL $2DB9 UpDisk
LABEL $2D91 arrowDown
LABEL $3A79 SMVB_continue_newY_eq_oldX_single
COMMENT_LABEL $3A79 #isfunction
LABEL $2DA5 arrowUp
LABEL $3BFE SMVB_startDraw_yEqx_single
COMMENT_LABEL $3BFE #isfunction
LABEL $2E3D ratioString
LABEL $2E95 pAutofireString
LABEL $2ED7 Weapon1
LABEL $2EE5 Weapon2
LABEL $2EF3 Weapon3
LABEL $2F01 Weapon4
LABEL $2F0F Weapon5
LABEL $2F1E Weapon6
LABEL $302D rankString0
LABEL $3034 rankString1
LABEL $303F rankString2
LABEL $3049 rankString3
LABEL $3051 rankString4
LABEL $3059 rankString5
LABEL $306F rankString6
LABEL $3086 rankString7
LABEL $309D rankString8
LABEL $30B3 rankString9
LABEL $30CA rankString10
LABEL $30E1 rankString11
LABEL $30F5 rankString12
LABEL $310A rankString13
LABEL $311F rankString14
LABEL $3137 REPLACE_1_2_showSaveMessage_varFromIRQ0_1
LABEL $3149 doNotSaveAfterAll
LABEL $3143 REPLACE_1_2_saveGameToFlash_varFromIRQ0_423
EQU $02 ZERO_DELAY_P2
COMMENT_LABEL $02 2 ; delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $314C sync_Print_Str_d
LABEL $315A zeroLoop_a_2
LABEL $3183 LF33D309309
LABEL $3187 printsyncAgain
LABEL $318C zeroLoop_a310
LABEL $31AF LF33D312312
LABEL $31C1 LF4C7_a310
LABEL $31C5 LF4CB_a310
LABEL $31D4 zeroLoop_a313
LABEL $31F7 LF33D315315
LABEL $3209 LF4C7_a313
LABEL $320D LF4CB_a313
LABEL $321C zeroLoop_a316
LABEL $323F LF33D318318
LABEL $3251 LF4C7_a316
LABEL $3255 LF4CB_a316
LABEL $3264 zeroLoop_a319
LABEL $3287 LF33D321321
LABEL $3299 LF4C7_a319
LABEL $329D LF4CB_a319
LABEL $32AC zeroLoop_a
LABEL $32CD LF33D323323
LABEL $32DF LF4C7_a
LABEL $32E3 LF4CB_a
LABEL $32F0 addScore_d
COMMENT_LABEL $32F0 #isfunction
LABEL $32F3 LF861_1x_d
LABEL $3302 LF861_1x_dd
LABEL $3319 LF861_1x
LABEL $3311 checkScore
LABEL $3332 compareScore_in
LABEL $3325 LF86D_1x
LABEL $3330 LF878_1x
LABEL $3340 score0_ok
LABEL $3354 score1_ok
LABEL $3364 score2_ok
LABEL $3386 score3_ok
LABEL $3388 compare10000
LABEL $3394 compare100000
LABEL $33B1 score_restok
LABEL $33B3 displayBoss1
LABEL $33B3 displayBoss1_0_0
COMMENT_LABEL $33B3 #isfunction
LABEL $33CA playerShotsDoneBoss01
LABEL $33D8 boss1NotHit
LABEL $33DB intDoneBoss1
LABEL $33DE displayBoss1L
LABEL $418F calibrationZero50
COMMENT_LABEL $418F #isfunction
LABEL $349E drawSkullOnly
LABEL $41BE Boss1StaticLeft
LABEL $3418 LF33D326326
LABEL $3CC3 SMVB50_drawSmart
COMMENT_LABEL $3CC3 #isfunction
LABEL $4254 Boss1StaticRight
LABEL $343C LF33D328328
LABEL $42E2 Boss1StaticInnerLeft
LABEL $3460 LF33D330330
LABEL $4332 Boss1StaticInnerRight
LABEL $3484 LF33D332332
LABEL $4382 Boss1StaticSkull
LABEL $34A8 LF33D334334
LABEL $34DD boss1EyeAnimStays
LABEL $44D4 Boss1EyeAnim
LABEL $34DD boss1EyeAnimOk
LABEL $440D Boss1EyeLeft
LABEL $34E7 LF33D336336
LABEL $4438 Boss1EyeRight
LABEL $3517 LF33D338338
LABEL $3673 finishDrawEarlyBoss1
LABEL $3546 LeftSmallGunDrawBoss1_d_again
LABEL $4594 Boss1GunLeftSmall_0
LABEL $3574 LeftSmallGunDrawBoss1
LABEL $356B LeftSmallGunDrawBoss1_d
LABEL $458A Boss1GunLeftSmall_Anim
LABEL $357B LF33D340340
LABEL $3595 RightSmallGunDrawBoss1_d_again
LABEL $4652 Boss1GunRightSmall_0
LABEL $35C3 RightSmallGunDrawBoss1
LABEL $35BA RightSmallGunDrawBoss1_d
LABEL $4648 Boss1GunRightSmall_Anim
LABEL $35CA LF33D342342
LABEL $35E4 RightBigGunDrawBoss1_d_again
LABEL $47CB Boss1GunRightBig_0
LABEL $3612 RightBigGunDrawBoss1
LABEL $3609 RightBigGunDrawBoss1_d
LABEL $47C1 Boss1GunRightBig_Anim
LABEL $3619 LF33D344344
LABEL $4715 Boss1GunLeftBig_0
LABEL $363D LF33D346346
LABEL $4463 Boss1FumeLeft
LABEL $3664 noOddRoundBoss1
LABEL $449D Boss1FumeRight
LABEL $366B LF33D348348
LABEL $3672 drawBosss1Done
LABEL $3675 LF33D349349
LABEL $367B displayBoss2
LABEL $367B displayBoss2_0_0
COMMENT_LABEL $367B #isfunction
LABEL $3695 playerShotsDoneBoss02
LABEL $36A3 boss2NotHit
LABEL $36AE intDoneBoss2
LABEL $36B1 displayQueenHeadOnly
LABEL $36EE normalMoveBoss2
LABEL $36DF normalMoveBoss23
LABEL $370E antennaBoss2Stay_b2
LABEL $487D QueenAnim
LABEL $371E boss2QueenOk_b2
LABEL $3725 LF33D352352
LABEL $3765 normalHeadBoss2
LABEL $3752 mouthClosedQueen
LABEL $49B6 QueenHead2
LABEL $3768 displayQueen
LABEL $3760 playerNotHitBoss2
LABEL $4A3D QueenHead3
LABEL $492F QueenHead
LABEL $376A LF33D354354
LABEL $3771 displayFullSinistar
LABEL $4AC4 SinistarMain
LABEL $3789 nextBoss3Part_a
LABEL $37A1 headDoneBoss3
LABEL $4AD2 SinistarAttachments
LABEL $37B3 nodecBoss3
LABEL $37B3 nextBoss3Part_b
LABEL $37D9 attachmentsDoneBoss3
LABEL $37D0 noAttachmentFlying
LABEL $4ACA SinistarMouthAnim
LABEL $37FB notAnimNextBoss3
LABEL $3809 displayBoss3
LABEL $3809 displayBoss3_0_0
COMMENT_LABEL $3809 #isfunction
LABEL $3820 playerShotsDoneBoss03
LABEL $382E boss3NotHit
LABEL $3831 intDoneBoss3
LABEL $3834 displayBoss3001
COMMENT_LABEL $3834 #isfunction
LABEL $3834 displayBoss3_0_0_1
COMMENT_LABEL $3834 #isfunction
LABEL $3855 displayBoss4
LABEL $3855 displayBoss4_0_0
COMMENT_LABEL $3855 #isfunction
LABEL $386F playerShotsDoneBoss04
LABEL $387D boss4NotHit
LABEL $3880 intDoneBoss4
LABEL $3891 displayFullDeathstar
LABEL $4DAB deathStarSceneData
LABEL $389B nextBoss4Part_a
LABEL $38B3 headDoneBoss4
LABEL $38F4 noWeaponAtall4
LABEL $4FA4 deathStarWeaponAnim
LABEL $38E4 noBoss4Anim
LABEL $38D9 fastestBoss4Weapon
LABEL $38E7 notAnimNextBoss4
LABEL $38DC notIncingBoss4Weapon
LABEL $38FE handleBossExplosions
COMMENT_LABEL $38FE #isfunction
LABEL $38F9 noEplisionsBoss4
LABEL $394D trySecondExplosion
LABEL $3920 noNegpb4
LABEL $392E notHItpv4
LABEL $39F1 removeFirstExplosion
LABEL $39F9 circleHalf
LABEL $3995 tryThirdExplosion
LABEL $396A noNegpb4_2
LABEL $3978 notHItpv4_2
LABEL $39EA removeSecondExplosion
LABEL $39B4 noNegpb4_3
LABEL $39C2 notHItpv4_3
LABEL $39E2 removeThirdExplosion
LABEL $3D68 SMVB50_continue_single
COMMENT_LABEL $3D68 #isfunction
LABEL $404C SMVB50_startDraw_single
COMMENT_LABEL $404C #isfunction
LABEL $3CD8 SMVB50_continue7_single
COMMENT_LABEL $3CD8 #isfunction
LABEL $3D38 SMVB50_continue3_single
COMMENT_LABEL $3D38 #isfunction
LABEL $415B SMVB50_lastDraw_rts
COMMENT_LABEL $415B #isfunction
EQU $01 SHITREG_POKE_VALUE
EQU $07 VB_SPRITE_SCALE
LABEL $3A2A SMVBdrawSmart70
COMMENT_LABEL $3A2A #isfunction
LABEL $3A2F SMVB_continue_yd4_yStays_single
COMMENT_LABEL $3A2F #isfunction
LABEL $3A2F SMVB_continue_yStays_single
COMMENT_LABEL $3A2F #isfunction
LABEL $3A35 SMVB_continue7_single
COMMENT_LABEL $3A35 #isfunction
LABEL $3A40 SMVB_continue6_single
COMMENT_LABEL $3A40 #isfunction
LABEL $3A4B SMVB_continue5_single
COMMENT_LABEL $3A4B #isfunction
LABEL $3A56 SMVB_continue4_single
COMMENT_LABEL $3A56 #isfunction
LABEL $3A82 SMVB_continue_yd4_single
COMMENT_LABEL $3A82 #isfunction
LABEL $3A84 SMVB_continue_yd4_newY_eq_oldX_single
COMMENT_LABEL $3A84 #isfunction
LABEL $3A8E SMVB_continue_yd6_single
COMMENT_LABEL $3A8E #isfunction
LABEL $3A9A SMVB_continue_single_sj
COMMENT_LABEL $3A9A #isfunction
LABEL $3A9C SMVB_continue_newY_eq_oldX_single_sj
COMMENT_LABEL $3A9C #isfunction
LABEL $3AA8 SMVB_continue_yd4_yEqx_single
COMMENT_LABEL $3AA8 #isfunction
LABEL $3AB3 SMVB_continue_yEqx_single
COMMENT_LABEL $3AB3 #isfunction
LABEL $3ABD SMVB_continue_tripple
COMMENT_LABEL $3ABD #isfunction
LABEL $3AFB cont2
LABEL $3AC8 SMVB_continue_hex
COMMENT_LABEL $3AC8 #isfunction
LABEL $3AE3 cont5
LABEL $3AD3 SMVB_continue_octo
COMMENT_LABEL $3AD3 #isfunction
LABEL $3AD3 cont7
LABEL $3ADB cont6
LABEL $3AEB cont4
LABEL $3AF3 cont3
LABEL $3B03 SMVB_repeat_same
COMMENT_LABEL $3B03 #isfunction
LABEL $3B14 SMVB_continue_yd4_double
COMMENT_LABEL $3B14 #isfunction
LABEL $3B20 SMVB_continue_yd6_double
COMMENT_LABEL $3B20 #isfunction
LABEL $3B2C SMVB_startMove_yd4_single
COMMENT_LABEL $3B2C #isfunction
LABEL $3B3A SMVB_startMove_single_sj_yd4
COMMENT_LABEL $3B3A #isfunction
LABEL $3B3A SMVB_startMove_single_sj
COMMENT_LABEL $3B3A #isfunction
LABEL $3B49 SMVB_startMove_yd4_single_sj
COMMENT_LABEL $3B49 #isfunction
LABEL $3B58 SMVB_startMove_yd4_double
COMMENT_LABEL $3B58 #isfunction
LABEL $3BA0 SM_repeat_same2
COMMENT_LABEL $3BA0 #isfunction
LABEL $3B74 SMVB_startMove_tripple
COMMENT_LABEL $3B74 #isfunction
LABEL $3B98 move2
LABEL $3B82 SMVB_startMove_quadro
COMMENT_LABEL $3B82 #isfunction
LABEL $3B90 move3
LABEL $3BA6 SMVB_startMove_double_sj
COMMENT_LABEL $3BA6 #isfunction
LABEL $3BBA SMVB_startMove_yStays_single
COMMENT_LABEL $3BBA #isfunction
LABEL $3BC6 SMVB_startMove_yStays_single_sj
LABEL $3BD1 SMVB_startDraw_yStays_single
COMMENT_LABEL $3BD1 #isfunction
LABEL $3BD9 SMVB_startDraw_xyStays_single
COMMENT_LABEL $3BD9 #isfunction
LABEL $3BDF SMVB_startDraw_yd4_single
COMMENT_LABEL $3BDF #isfunction
LABEL $3BED SMVB_startDraw_single_sj
LABEL $3BFE SMVB_startDraw_yd4_yEqx_single
COMMENT_LABEL $3BFE #isfunction
LABEL $3C0C SMVB_startMove_yEqx_single
COMMENT_LABEL $3C0C #isfunction
LABEL $3C18 SMVB_startMove_yd4_yEqx_single
COMMENT_LABEL $3C18 #isfunction
LABEL $3C25 SMVB_startMove_xyStays_single
COMMENT_LABEL $3C25 #isfunction
LABEL $3C2B SMVB_startMove_yEqx_single_sj
COMMENT_LABEL $3C2B #isfunction
LABEL $3C3B SMVB_startMove_newY_eq_oldX_single
COMMENT_LABEL $3C3B #isfunction
LABEL $3C47 SMVB_startMove_newY_eq_oldX_single_sj
COMMENT_LABEL $3C47 #isfunction
LABEL $3C54 SMVB_startDraw_newY_eq_oldX_single
COMMENT_LABEL $3C54 #isfunction
LABEL $3C60 SMVB_FlagWait
LABEL $3C66 SMVB_rts
COMMENT_LABEL $3C66 #isfunction
LABEL $3C72 SMVB_lastDraw_rts_stay
COMMENT_LABEL $3C72 #isfunction
LABEL $3C72 SMVB_FlagWait3
COMMENT_LABEL $3C72 #isfunction
LABEL $3C7B SMVB_lastMove_rts_stay
COMMENT_LABEL $3C7B #isfunction
LABEL $3C7D SMVB_FlagWait3_2
LABEL $3C82 SMVB_lastDraw_rts2
COMMENT_LABEL $3C82 #isfunction
LABEL $3C8A SMVB_rts2
COMMENT_LABEL $3C8A #isfunction
LABEL $3CB5 buzzVectrex7
LABEL $3CC6 SMVB50_continue_yStays_single
COMMENT_LABEL $3CC6 #isfunction
LABEL $3CF0 SMVB50_continue6_single
COMMENT_LABEL $3CF0 #isfunction
LABEL $3D08 SMVB50_continue5_single
COMMENT_LABEL $3D08 #isfunction
LABEL $3D20 SMVB50_continue4_single
COMMENT_LABEL $3D20 #isfunction
LABEL $3D50 SMVB50_continue2_single
COMMENT_LABEL $3D50 #isfunction
LABEL $3D68 SMVB50_continue_zero_single
COMMENT_LABEL $3D68 #isfunction
LABEL $3D6A SMVB50_continue_newY_eq_oldX_single
COMMENT_LABEL $3D6A #isfunction
LABEL $3D80 SMVB50_continue_yd4_single
COMMENT_LABEL $3D80 #isfunction
LABEL $3D99 SMVB50_continue_single_sj
COMMENT_LABEL $3D99 #isfunction
LABEL $3D9B SMVB50_continue_newY_eq_oldX_single_sj
COMMENT_LABEL $3D9B #isfunction
LABEL $3DB2 SMVB50_continue_yEqx_single
COMMENT_LABEL $3DB2 #isfunction
LABEL $3DC9 SMVB50_continue_hex
COMMENT_LABEL $3DC9 #isfunction
LABEL $3E21 cont5_50
LABEL $3DE1 SMVB50_continue_octo
COMMENT_LABEL $3DE1 #isfunction
LABEL $3DF9 cont7_50
LABEL $3E0D cont6_50
LABEL $3E35 cont4_50
LABEL $3E49 cont3_50
LABEL $3E5D cont2_50
LABEL $3EA1 SMVB50_repeat_same
COMMENT_LABEL $3EA1 #isfunction
LABEL $3E71 SMVB50_continue_quadro
COMMENT_LABEL $3E71 #isfunction
LABEL $3E89 SMVB50_continue_tripple
COMMENT_LABEL $3E89 #isfunction
LABEL $3EB3 SMVB50_startDraw_tripple
LABEL $3ECD SMVB50_continue_double
COMMENT_LABEL $3ECD #isfunction
LABEL $3EE5 SMVB50_startMove_single
COMMENT_LABEL $3EE5 #isfunction
LABEL $3EFF SMVB50_startMove_single_sj
COMMENT_LABEL $3EFF #isfunction
LABEL $3F18 SMVB50_startMove_double
COMMENT_LABEL $3F18 #isfunction
LABEL $3F4C SMVB50_repeat_same2
COMMENT_LABEL $3F4C #isfunction
LABEL $3F32 SMVB50_startDraw_double
LABEL $3F5E move3_50
LABEL $3F72 move2_50
LABEL $3F86 SMVB50_startMove_quadro
LABEL $3FA0 SMVB50_startMove_tripple
LABEL $3FBA SMVB50_startMove_double_sj
COMMENT_LABEL $3FBA #isfunction
LABEL $3FE6 SMVB50_startMove_yStays_single
COMMENT_LABEL $3FE6 #isfunction
LABEL $3FFC SMVB50_startMove_yStays_single_sj
LABEL $4011 SMVB50_startDraw_yStays_single
COMMENT_LABEL $4011 #isfunction
LABEL $4025 SMVB50_startDraw_xyStays_single
COMMENT_LABEL $4025 #isfunction
LABEL $4037 SMVB50_startDraw_yStays_single_sj
COMMENT_LABEL $4037 #isfunction
LABEL $404C SMVB50_startDraw_yd4_single
COMMENT_LABEL $404C #isfunction
LABEL $4066 SMVB50_startDraw_single_sj
LABEL $4081 SMVB50_startDraw_yEqx_single_sj
COMMENT_LABEL $4081 #isfunction
LABEL $409C SMVB50_startDraw_yEqx_single
COMMENT_LABEL $409C #isfunction
LABEL $40B6 SMVB50_startMove_yEqx_single
COMMENT_LABEL $40B6 #isfunction
LABEL $40CF SMVB50_startMove_xyStays_single
COMMENT_LABEL $40CF #isfunction
LABEL $40E1 SMVB50_startMove_yEqx_single_sj
COMMENT_LABEL $40E1 #isfunction
LABEL $40FB SMVB50_startMove_newY_eq_oldX_single
COMMENT_LABEL $40FB #isfunction
LABEL $4113 SMVB50_startMove_newY_eq_oldX_single_sj
COMMENT_LABEL $4113 #isfunction
LABEL $412A SMVB50_startDraw_newY_eq_oldX_single
COMMENT_LABEL $412A #isfunction
LABEL $4142 SMVB50_startDraw_newY_eq_oldX_single_sj
COMMENT_LABEL $4142 #isfunction
LABEL $415B SMVB50_FlagWait
LABEL $4161 SMVB50_rts
COMMENT_LABEL $4161 #isfunction
LABEL $416D SMVB50_lastDraw_rts_stay
COMMENT_LABEL $416D #isfunction
LABEL $416D SMVB50_FlagWait3
COMMENT_LABEL $416D #isfunction
LABEL $4176 SMVB50_lastMove_rts_stay
COMMENT_LABEL $4176 #isfunction
LABEL $4178 SMVB50_FlagWait3_2
LABEL $417D SMVB50_lastDraw_rts2
COMMENT_LABEL $417D #isfunction
LABEL $4185 SMVB50_rts2
COMMENT_LABEL $4185 #isfunction
LABEL $41B0 buzzVectrex50
LABEL $44F4 Boss1EyeAnim_0
LABEL $44FE Boss1EyeAnim_1
LABEL $4508 Boss1EyeAnim_2
LABEL $4512 Boss1EyeAnim_3
LABEL $451C Boss1EyeAnim_4
LABEL $4526 Boss1EyeAnim_5
LABEL $4530 Boss1EyeAnim_6
LABEL $453A Boss1EyeAnim_7
LABEL $4544 Boss1EyeAnim_8
LABEL $454E Boss1EyeAnim_9
LABEL $4558 Boss1EyeAnim_10
LABEL $4562 Boss1EyeAnim_11
LABEL $456C Boss1EyeAnim_12
LABEL $4576 Boss1EyeAnim_13
LABEL $4580 Boss1EyeAnim_14
LABEL $45C1 Boss1GunLeftSmall_1
LABEL $45EE Boss1GunLeftSmall_2
LABEL $461B Boss1GunLeftSmall_3
LABEL $467F Boss1GunRightSmall_1
LABEL $46AC Boss1GunRightSmall_2
LABEL $46DE Boss1GunRightSmall_3
LABEL $470B Boss1GunLeftBig_Anim
LABEL $4740 Boss1GunLeftBig_1
LABEL $476B Boss1GunLeftBig_2
LABEL $4796 Boss1GunLeftBig_3
LABEL $47F6 Boss1GunRightBig_1
LABEL $4821 Boss1GunRightBig_2
LABEL $484C Boss1GunRightBig_3
LABEL $4877 queenDefinition
LABEL $488B QueenTentacle_0
LABEL $48B4 QueenTentacle_1
LABEL $48DD QueenTentacle_2
LABEL $4906 QueenTentacle_3
LABEL $4AE8 Sinistar_0
LABEL $4B72 Sinistar_1
LABEL $4D0E Sinistar_Mouth_0
LABEL $4D45 Sinistar_Mouth_1
LABEL $4D78 Sinistar_Mouth_2
LABEL $4C05 Sinistar_2
LABEL $4C1C Sinistar_3
LABEL $4C44 Sinistar_4
LABEL $4C62 Sinistar_5
LABEL $4C76 Sinistar_6
LABEL $4C8D Sinistar_7
LABEL $4CA4 Sinistar_8
LABEL $4CB8 Sinistar_9
LABEL $4CCC Sinistar_10
LABEL $4CF4 Sinistar_11
LABEL $4DB3 ds_0
LABEL $4E52 ds_1
LABEL $4F13 ds_2
LABEL $4FB6 dsWeapon_0
LABEL $504B dsWeapon_1
LABEL $50E0 dsWeapon_2
LABEL $5175 dsWeapon_3
LABEL $520A dsWeapon_4
LABEL $529F dsWeapon_5
LABEL $5334 dsWeapon_6
LABEL $53C9 dsWeapon_7
EQU $0F BONUS_PLAYER_X_RANGE
LABEL $0094 BONUS_PLAYER_Y_TEST_MIN
LABEL $545E risingBonusBehaviourXn2
LABEL $547B risingBonusBehaviour
COMMENT_LABEL $547B #isfunction
LABEL $5464 risingBonusBehaviourXn1
LABEL $546A risingBonusBehaviourXp2
LABEL $5470 risingBonusBehaviourXp1
LABEL $5476 risingBonusBehaviourX0
LABEL $A30E BonusList
LABEL $54AE noAnimChange2
LABEL $54B5 displayBonus2
LABEL $54BE LF33D11601160
LABEL $54C5 newBonusObject
COMMENT_LABEL $54C5 #isfunction
LABEL $54DE cs_done_nob
LABEL $54EE spawnBonus_end2
LABEL $54EF simpleBonusBehaviour
COMMENT_LABEL $54EF #isfunction
LABEL $54EE spawnBonus_end
LABEL $6EE3 BonusE_Anim_0
LABEL $550B LF33D11621162
LABEL $5512 fallingRankBehaviour
COMMENT_LABEL $5512 #isfunction
LABEL $5528 testPositive_xRank
LABEL $5534 notHit_Rank
LABEL $56B4 playerCaughtRank
COMMENT_LABEL $56B4 #isfunction
LABEL $5534 displayContinueRank
LABEL $97FA RankMarkerCircle_Anim
LABEL $554B displayRank
LABEL $5546 noAnimChangeRank
LABEL $6031 removeBonus
COMMENT_LABEL $6031 #isfunction
LABEL $5573 noSpeedp
LABEL $5599 RankList
LABEL $5586 LF33D11641164
LABEL $969F RankMarker1
LABEL $96C0 RankMarker2
LABEL $96FA RankMarker3
LABEL $9725 RankMarker4
LABEL $976B RankMarker5
LABEL $979E RankMarker6
LABEL $55A5 fallingBonusBehaviour
COMMENT_LABEL $55A5 #isfunction
LABEL $55B5 continnueWithFallin
LABEL $55BB testPositive_xBonus
LABEL $55C7 notHit_bonus
LABEL $56A3 playerCaughtBonus
COMMENT_LABEL $56A3 #isfunction
LABEL $55C7 displayContinueBonus
LABEL $55EA noAnimChange
LABEL $55F1 displayBonus
LABEL $55F9 nodoublespeedBonus
LABEL $5606 LF33D11661166
LABEL $5D6B BonusMoney200Caught
LABEL $560F bonusHandleJumper
LABEL $5E4C BonusECaught
LABEL $5E73 BonusXCaught
LABEL $5E92 BonusTCaught
LABEL $5EB1 BonusRCaught
LABEL $5ED0 BonusACaught
LABEL $5A91 BonusShotPlusCaught
LABEL $5AA3 BonusFasterCaught
LABEL $5ABA BonusFasterShotCaught
LABEL $5C8C BonusSlowerCaught
LABEL $5D04 BonusShotMinusCaught
LABEL $5D8D BonusMoney5Caught
LABEL $5DAF BonusMoney20Caught
LABEL $5DD1 BonusMoney50Caught
LABEL $5BF3 BonusArmorCaught
LABEL $5C06 BonusShieldCaught
LABEL $5C1A BonusSwoopCaught
LABEL $5ADF BonusShot1Caught
LABEL $5B4D BonusShot2Caught
LABEL $5BBE BonusShot3Caught
LABEL $5BF3 BonusShot4Caught
LABEL $5BA7 BonusMinestormCaught
LABEL $5A70 BonusMult2Caught
LABEL $5A4F BonusMult5Caught
LABEL $5838 BonusBombCashCaught
LABEL $57D7 BonusBombDiamondCaught
LABEL $5899 BonusTimerCaught
LABEL $58AD BonusSlowerShotCaught
LABEL $598F BonusCashDoublerCaught
LABEL $5A2D BonusShotPowerupCaught
LABEL $59AE BonusLifeCaught
LABEL $59C1 BonusDrunkenCaught
LABEL $5A1F BonusAutofireCaught
LABEL $5651 RankHandleJumper
LABEL $56C1 rank1Caught
LABEL $56E3 rank2Caught
LABEL $56FD rank3Caught
LABEL $5717 rank4Caught
LABEL $5730 rank5Caught
LABEL $5749 rank6Caught
LABEL $57AB rankNegative
LABEL $5663 voxData
LABEL $5663 REPLACE_0_2_voxExtraLetter_varFromIRQ0_1
LABEL $5665 REPLACE_0_2_voxExtraLetter_varFromIRQ0_2
LABEL $5667 REPLACE_0_2_voxExtraLetter_varFromIRQ0_3
LABEL $5669 REPLACE_0_2_voxExtraLetter_varFromIRQ0_4
LABEL $566B REPLACE_0_2_voxExtraLetter_varFromIRQ0_5
LABEL $566D REPLACE_0_2_voxExtraBullet_varFromIRQ0_1
LABEL $566F REPLACE_0_2_voxFighterSpeed_varFromIRQ0_1
LABEL $5671 REPLACE_0_2_voxShotSpeed_varFromIRQ0_1
LABEL $5673 REPLACE_0_2_voxSucker_varFromIRQ0_1
LABEL $5675 REPLACE_0_2_voxSucker_varFromIRQ0_2
LABEL $567D REPLACE_0_2_voxArmor_varFromIRQ0_1
LABEL $567F REPLACE_0_2_voxShield_varFromIRQ0_1
LABEL $5681 REPLACE_0_2_voxScoop_varFromIRQ0_1
LABEL $5683 REPLACE_0_2_voSingleShot_varFromIRQ0_1
LABEL $5685 REPLACE_0_2_voxDoubleShot_varFromIRQ0_1
LABEL $5687 REPLACE_0_2_voxTrippleShot_varFromIRQ0_1
LABEL $5689 REPLACE_0_2_voxBonus_varFromIRQ0_6
LABEL $568B REPLACE_0_2_voxMinestorm_varFromIRQ0_1
LABEL $568D REPLACE_0_2_voxMultiply_varFromIRQ0_1
LABEL $568F REPLACE_0_2_voxMultiply_varFromIRQ0_2
LABEL $5691 REPLACE_0_2_voxCashBomb_varFromIRQ0_1
LABEL $5693 REPLACE_0_2_voxDiamondBomb_varFromIRQ0_1
LABEL $5695 REPLACE_0_2_voxTime_varFromIRQ0_1
LABEL $5697 REPLACE_0_2_voxSucker_varFromIRQ0_3
LABEL $5699 REPLACE_0_2_voxDoubleCash_varFromIRQ0_1
LABEL $569B REPLACE_0_2_voxShotPower_varFromIRQ0_1
LABEL $569D REPLACE_0_2_voxExtraLife_varFromIRQ0_1
LABEL $569F REPLACE_0_2_voxDrunken_varFromIRQ0_1
LABEL $56A1 REPLACE_0_2_voxAutofire_varFromIRQ0_1
LABEL $56AF noNewVoxData
LABEL $56B4 REPLACE_1_2_voxRankMarker_varFromIRQ0_1
LABEL $56D0 destroyRankOrder1
LABEL $56D8 contRank1
LABEL $57AD rankCaughtEnd
LABEL $56F2 contRank2
LABEL $570C contRank3
LABEL $5726 contRank4
LABEL $573F contRank5
LABEL $5799 destoryRanksSecret
LABEL $57A1 contRank6
LABEL $5770 REPLACE_1_2_secretChannel1_varFromIRQ1_1167
LABEL $5776 REPLACE_1_2_secretChannel2_varFromIRQ1_1167
LABEL $577C REPLACE_1_2_secretChannel3_varFromIRQ1_1167
LABEL $578A REPLACE_1_2_SecretString_varFrom1_7
COMMENT_LABEL $578A bank 1 replace
LABEL $57D4 rankbonusCaughtEnd2
LABEL $57BB rankNotFull
LABEL $57B6 REPLACE_1_2_rankAllString_varFrom1_1
COMMENT_LABEL $57B6 bank 1 replace
LABEL $57BE rankCaught2End
LABEL $57BB REPLACE_1_2_rankString_varFrom1_1
COMMENT_LABEL $57BB bank 1 replace
LABEL $57CE REPLACE_1_2_rankData_varFromIRQ1_2
LABEL $5832 allEnemiesHandled
LABEL $57E1 handleEnemiesLoop
LABEL $582E nextEnemy
LABEL $57EE REPLACE_1_2_enemyPlayerControlledRightBehaviour_varFrom1_1
COMMENT_LABEL $57EE bank 1 replace
LABEL $57F3 REPLACE_1_2_enemyPlayerControlledLeftBehaviour_varFrom1_1
COMMENT_LABEL $57F3 bank 1 replace
LABEL $57FB REPLACE_1_2_enemy3Definition_varFrom1_43
COMMENT_LABEL $57FB bank 1 replace
LABEL $5800 REPLACE_1_2_enemySW3DefinitionShield_varFrom1_43
COMMENT_LABEL $5800 bank 1 replace
LABEL $580F REPLACE_1_2_enemySingleAttackAbsolutBehaviour_varFrom1_1
COMMENT_LABEL $580F bank 1 replace
LABEL $5819 wasAttacker_b1
LABEL $5814 REPLACE_1_2_enemySingleAttackRelativeBehaviour_varFrom1_1
COMMENT_LABEL $5814 bank 1 replace
LABEL $581C wasNotAttacker_b1
LABEL $581C REPLACE_1_2_lastNormalEnemyAddress_varFrom1_1
COMMENT_LABEL $581C bank 1 replace
LABEL $5827 normalEnemy_b1
LABEL $5827 REPLACE_1_2_fallDiamondBehaviour_varFrom1_1
COMMENT_LABEL $5827 bank 1 replace
LABEL $5832 REPLACE_1_2_diamonbombString_varFrom1_1
COMMENT_LABEL $5832 bank 1 replace
LABEL $5FE6 bonusCaughtEndSound
LABEL $5893 allEnemiesHandled_C
LABEL $5842 handleEnemiesLoop_C
LABEL $588F nextEnemy_C
LABEL $584F REPLACE_1_2_enemyPlayerControlledRightBehaviour_varFrom1_3
COMMENT_LABEL $584F bank 1 replace
LABEL $5854 REPLACE_1_2_enemyPlayerControlledLeftBehaviour_varFrom1_3
COMMENT_LABEL $5854 bank 1 replace
LABEL $585C REPLACE_1_2_enemy3Definition_varFrom1_42
COMMENT_LABEL $585C bank 1 replace
LABEL $5861 REPLACE_1_2_enemySW3DefinitionShield_varFrom1_42
COMMENT_LABEL $5861 bank 1 replace
LABEL $5870 REPLACE_1_2_enemySingleAttackAbsolutBehaviour_varFrom1_4
COMMENT_LABEL $5870 bank 1 replace
LABEL $587A wasAttacker_b1_C
LABEL $5875 REPLACE_1_2_enemySingleAttackRelativeBehaviour_varFrom1_4
COMMENT_LABEL $5875 bank 1 replace
LABEL $587D wasNotAttacker_b1_C
LABEL $587D REPLACE_1_2_lastNormalEnemyAddress_varFrom1_22
COMMENT_LABEL $587D bank 1 replace
LABEL $5888 normalEnemy_b1_C
LABEL $5888 REPLACE_1_2_fallCashBehaviour_varFrom1_2
COMMENT_LABEL $5888 bank 1 replace
LABEL $5893 REPLACE_1_2_cashbombString_varFrom1_1
COMMENT_LABEL $5893 bank 1 replace
LABEL $58A4 timeOk
LABEL $58A7 REPLACE_1_2_timerString_varFrom1_31
COMMENT_LABEL $58A7 bank 1 replace
LABEL $6003 bonusCaughtEnd_bonusComplete
LABEL $58C6 noMul1170
LABEL $58DE notFirst3Bullets
LABEL $592D continueLessRateNormal
LABEL $58EC secretFirst3RateLessFound
LABEL $5915 REPLACE_1_2_secretChannel1_varFromIRQ1_1171
LABEL $591B REPLACE_1_2_secretChannel2_varFromIRQ1_1171
LABEL $5921 REPLACE_1_2_secretChannel3_varFromIRQ1_1171
LABEL $5927 REPLACE_1_2_SecretString_varFrom1_3
COMMENT_LABEL $5927 bank 1 replace
LABEL $5FE9 bonusCaughtEnd
LABEL $5A49 nosm
LABEL $5989 secretKnown1
LABEL $5971 REPLACE_1_2_secretChannel1_varFromIRQ1_1172
LABEL $5977 REPLACE_1_2_secretChannel2_varFromIRQ1_1172
LABEL $597D REPLACE_1_2_secretChannel3_varFromIRQ1_1172
LABEL $5983 REPLACE_1_2_SecretString_varFrom1_1
COMMENT_LABEL $5983 bank 1 replace
LABEL $5989 REPLACE_1_2_smartBombAdded_varFrom1_1
COMMENT_LABEL $5989 bank 1 replace
LABEL $5FDC malusCaughtEnd
LABEL $59A8 noRollOver_1
LABEL $59A8 REPLACE_1_2_cashDouble_varFrom1_1
COMMENT_LABEL $59A8 bank 1 replace
LABEL $59BB noExtraLife
LABEL $59BB REPLACE_1_2_extraLifeString_varFrom1_1
COMMENT_LABEL $59BB bank 1 replace
LABEL $59DA noRollOver_11173
LABEL $59DD back1173
LABEL $5A09 secretDrunkenFound
LABEL $59FB notFirstDrunkenBonus
LABEL $5A19 continueDrunkenNormal
LABEL $5A13 REPLACE_1_2_DrunkenMasterString_varFrom1_2
COMMENT_LABEL $5A13 bank 1 replace
LABEL $5A19 REPLACE_1_2_drunkenString_varFrom1_1
COMMENT_LABEL $5A19 bank 1 replace
LABEL $5A27 REPLACE_1_2_autofireString_varFrom1_1
COMMENT_LABEL $5A27 bank 1 replace
LABEL $5A3C shotDamageOk
LABEL $5A43 REPLACE_1_2_damagePlus_varFrom1_1
COMMENT_LABEL $5A43 bank 1 replace
LABEL $61A5 adjustAndJumpY
LABEL $5A49 REPLACE_1_2_slowerGunSpeed_varFrom1_1
COMMENT_LABEL $5A49 bank 1 replace
LABEL $5A6A REPLACE_1_2_multi5String_varFrom1_1
COMMENT_LABEL $5A6A bank 1 replace
LABEL $5A8B REPLACE_1_2_multi2String_varFrom1_1
COMMENT_LABEL $5A8B bank 1 replace
LABEL $5A9D REPLACE_1_2_extraBullet_varFrom1_1
COMMENT_LABEL $5A9D bank 1 replace
LABEL $5AB4 REPLACE_1_2_extraSpeed_varFrom1_1
COMMENT_LABEL $5AB4 bank 1 replace
LABEL $5AD3 noMul1174
LABEL $5AD9 REPLACE_1_2_extraGunSpeed_varFrom1_1
COMMENT_LABEL $5AD9 bank 1 replace
LABEL $5AE9 notShotInc1
LABEL $5AF7 noDowngradeCheck1
LABEL $5B3E noDowngrade1
LABEL $5B0D noBigLoss
LABEL $5B29 thisIsADowngrade
LABEL $5B23 REPLACE_1_2_extraShot1_varFrom1_1
COMMENT_LABEL $5B23 bank 1 replace
LABEL $5B38 REPLACE_1_2_extraShot1_varFrom1_2
COMMENT_LABEL $5B38 bank 1 replace
LABEL $5FB6 downgradeCaughtEndSound
LABEL $5B3E immunity2String
LABEL $5B3E REPLACE_1_2_immunity1String_varFrom1_1
COMMENT_LABEL $5B3E bank 1 replace
LABEL $5FFC bonusCaughtEnd2
LABEL $5B57 notShotInc2
LABEL $5B67 noDowngradeCheck2
LABEL $5B98 noDowngrade2
LABEL $5B83 moDowngrade
LABEL $5B7D REPLACE_1_2_extraShot2_varFrom1_1
COMMENT_LABEL $5B7D bank 3 replace
LABEL $5B92 REPLACE_1_2_extraShot2_varFrom1_2
COMMENT_LABEL $5B92 bank 3 replace
LABEL $5B98 REPLACE_1_2_immunity2String_varFrom1_1
COMMENT_LABEL $5B98 bank 3 replace
LABEL $5BAC REPLACE_1_2_MineDisplayString_varFrom1_1
COMMENT_LABEL $5BAC bank 3 replace
LABEL $5BB8 REPLACE_1_2_startDodger1_varFrom1_1
COMMENT_LABEL $5BB8 bank 3 replace
LABEL $5BDE noDowngrade_3
LABEL $5BD8 REPLACE_1_2_extraShot3_varFrom1_1
COMMENT_LABEL $5BD8 bank 3 replace
LABEL $5BED REPLACE_1_2_extraShot3_varFrom1_2
COMMENT_LABEL $5BED bank 3 replace
LABEL $5C00 REPLACE_1_2_extraArmor_varFrom1_1
COMMENT_LABEL $5C00 bank 1 replace
LABEL $5C14 REPLACE_1_2_extraShield_varFrom1_1
COMMENT_LABEL $5C14 bank 1 replace
LABEL $5C3F notFirstScoopBonus
LABEL $5C86 continueScoopNormal
LABEL $5C4D secretScoopFound
LABEL $5C6E REPLACE_1_2_secretChannel1_varFromIRQ1_1178
LABEL $5C74 REPLACE_1_2_secretChannel2_varFromIRQ1_1178
LABEL $5C7A REPLACE_1_2_secretChannel3_varFromIRQ1_1178
LABEL $5C80 REPLACE_1_2_SecretString_varFrom1_75
COMMENT_LABEL $5C80 bank 1 replace
LABEL $5C86 REPLACE_1_2_extraScoop_varFrom1_1
COMMENT_LABEL $5C86 bank 1 replace
LABEL $5CAF notFirstSlowerBonus
LABEL $5CFE continueSlowerNormal
LABEL $5CBD secretslowerFound
LABEL $5CE6 REPLACE_1_2_secretChannel1_varFromIRQ1_1179
LABEL $5CEC REPLACE_1_2_secretChannel2_varFromIRQ1_1179
LABEL $5CF2 REPLACE_1_2_secretChannel3_varFromIRQ1_1179
LABEL $5CF8 REPLACE_1_2_SecretString_varFrom1_2
COMMENT_LABEL $5CF8 bank 1 replace
LABEL $5CFE secretKnown2
LABEL $5CFE REPLACE_1_2_extraSlow_varFrom1_1
COMMENT_LABEL $5CFE bank 1 replace
LABEL $5D0C shotCountOk
LABEL $5D1E notFirstLessBullets
LABEL $5D65 continueLessBulletsNormal
LABEL $5D2C secretFirstLessBulletsFound
LABEL $5D4D REPLACE_1_2_secretChannel1_varFromIRQ1_1180
LABEL $5D53 REPLACE_1_2_secretChannel2_varFromIRQ1_1180
LABEL $5D59 REPLACE_1_2_secretChannel3_varFromIRQ1_1180
LABEL $5D5F REPLACE_1_2_SecretString_varFrom1_4
COMMENT_LABEL $5D5F bank 1 replace
LABEL $5D65 REPLACE_1_2_extraBulletMiss_varFrom1_1
COMMENT_LABEL $5D65 bank 1 replace
LABEL $5D84 noRollOver_11181
LABEL $5D87 back1181
LABEL $5D87 REPLACE_1_2_cash200_varFrom1_1
COMMENT_LABEL $5D87 bank 1 replace
LABEL $5FE1 moneyCaughtEnd
LABEL $5DA6 noRollOver_11182
LABEL $5DA9 back1182
LABEL $5DA9 REPLACE_1_2_cash5_varFrom1_1
COMMENT_LABEL $5DA9 bank 1 replace
LABEL $5DC8 noRollOver_11183
LABEL $5DCB back1183
LABEL $5DCB REPLACE_1_2_cash20_varFrom1_1
COMMENT_LABEL $5DCB bank 1 replace
LABEL $5DEA noRollOver_11184
LABEL $5DED back1184
LABEL $5DFF notFirst50Cash
LABEL $5E46 continue50Normal
LABEL $5E0D secretFirst50CashFound
LABEL $5E2E REPLACE_1_2_secretChannel1_varFromIRQ1_1185
LABEL $5E34 REPLACE_1_2_secretChannel2_varFromIRQ1_1185
LABEL $5E3A REPLACE_1_2_secretChannel3_varFromIRQ1_1185
LABEL $5E40 REPLACE_1_2_SecretString_varFrom1_6
COMMENT_LABEL $5E40 bank 1 replace
LABEL $5E46 REPLACE_1_2_cash50_varFrom1_1
COMMENT_LABEL $5E46 bank 1 replace
LABEL $6017 removeBonus_double_letter
LABEL $5E64 destroyExtraOrderE
LABEL $5E6C contExtraE
LABEL $5EED checkExtraAndGoHome
LABEL $5E8B contExtraX
LABEL $5EAA contExtraT
LABEL $5EC9 contExtraR
LABEL $5EE8 contExtraA
LABEL $5FA1 notAllYet1186
LABEL $5F06 noExtraSound1186
LABEL $5F00 REPLACE_1_2_EXTRACollectedData_varFromIRQ1_3
LABEL $5F32 notFullYet1186
LABEL $5F19 addAgainBonus1186
COMMENT_LABEL $5F19 add 20000 points
LABEL $5F22 scoreBack11186
LABEL $5F2B scoreBack21186
LABEL $5F81 noLaserDiscovered1186
LABEL $5F74 secretKnown21186
LABEL $5F56 REPLACE_1_2_secretChannel1_varFromIRQ1_1187
LABEL $5F5C REPLACE_1_2_secretChannel2_varFromIRQ1_1187
LABEL $5F62 REPLACE_1_2_secretChannel3_varFromIRQ1_1187
LABEL $5F68 REPLACE_1_2_SecretString_varFrom1_11186
COMMENT_LABEL $5F68 bank 1 replace
LABEL $5F74 REPLACE_1_2_bandit_varFromIRQ1_132
LABEL $5F7A backFromBandit
LABEL $5F7A adjustAndRemove
LABEL $5F93 noAdditionalShotEither1186
LABEL $5F9E toManyShoot1186
LABEL $5FAE noExtraSound221186
LABEL $5FA8 REPLACE_1_2_letterData_varFromIRQ1_3
LABEL $5FAE goHomeInit
LABEL $6078 goHomeBonusBehaviour
COMMENT_LABEL $6078 #isfunction
LABEL $5FB6 REPLACE_1_2_downgradeData_varFromIRQ1_2
LABEL $5FD5 bonusCaughtEnd22
LABEL $5FDC REPLACE_1_2_malusData_varFromIRQ1_2
LABEL $5FE1 REPLACE_1_2_moneyData_varFromIRQ1_2
LABEL $5FE6 REPLACE_1_2_bonusData_varFromIRQ1_2
LABEL $6015 back1191
LABEL $6031 back1192
LABEL $6044 was_not_first_bonus
COMMENT_LABEL $6044 find previous, go thru all objects from first and look where "I" am the next...
LABEL $603B was_first_bonus
LABEL $6055 exitRemoveBonus
LABEL $6048 try_next_bonus
LABEL $6051 found_next_switch_bonus
LABEL $6062 bonusHandleDoneRemoved
LABEL $606D LF33D11941194
LABEL $60A5 noAnimChange_ghb
LABEL $60AA displayBonus_ghb
LABEL $A302 BonusHomeCoordinates
COMMENT_LABEL $A302 E X T R A
LABEL $60BB yIsCorrect
LABEL $60BD continueTestXBonus
LABEL $60C7 mustReduceCoordinate
LABEL $60C1 mustIncreaseCoordinate
LABEL $60CB XcoordChangeDone
LABEL $60D6 difIsPositive
LABEL $60E0 XNotReachedYet
LABEL $60F5 targetreached
LABEL $60E9 displayContinueBonus2
LABEL $60EE LF33D11961196
LABEL $610B doneBonusReached
LABEL $613F doNotConvertToFalling
LABEL $613C simpleDeath
LABEL $6144 testPositive_xBonus_up
LABEL $6150 notHit_bonus_up
LABEL $615C noyaddBo
LABEL $6163 noCh
LABEL $617B moveDoneHere
LABEL $6175 doAddX
LABEL $6194 noAnimChange_up
LABEL $6199 displayBonus_up
LABEL $619E LF33D11981198
LABEL $61B2 superShot1199
LABEL $61C7 standardShot1199
LABEL $61AE laserShot1199
LABEL $61D5 adjustDone1199
LABEL $61C5 easy41199
LABEL $61C3 normal41199
LABEL $61C2 hard41199
LABEL $61C1 impossible41199
LABEL $61D5 easy31199
LABEL $61D4 normal31199
LABEL $61D3 impossible31199
LABEL $61D3 hard31199
LABEL $61DF noBulletAdjust1199
LABEL $61ED okdamage1199
LABEL $61F2 LetterOuter3d_0
LABEL $621B LetterOuter3d_1
LABEL $624D LetterOuter3d_2
LABEL $6277 LetterOuter3d_3
LABEL $62A1 LetterOuter3d_4
LABEL $62C9 LetterOuter3d_5
LABEL $62F3 LetterOuter3d_6
LABEL $631D LetterOuter3d_7
LABEL $6347 LetterOuter3d_8
LABEL $636C RectangleOuter_0
LABEL $6381 RectangleOuter_1
LABEL $6396 RectangleOuter_2
LABEL $63AB RectangleOuter_3
LABEL $63C0 RectangleOuter_4
LABEL $63D5 RectangleOuter_5
LABEL $63EA RectangleOuter_6
LABEL $63FF RectangleOuter_7
LABEL $6414 RectangleOuter_8
LABEL $6429 RectangleOuter_9
LABEL $643E RectangleOuter_10
LABEL $6453 RectangleOuter_11
LABEL $646C RectangleOuter_12
LABEL $6485 RectangleOuter_13
LABEL $649E RectangleOuter_14
LABEL $64B3 RectangleOuter_15
LABEL $64C8 BonusCircle_0
LABEL $64E9 BonusCircle_1
LABEL $650A BonusCircle_2
LABEL $652B BonusCircle_3
LABEL $654C BonusCircle_4
LABEL $656D BonusCircle_5
LABEL $658E BonusCircle_6
LABEL $65AF BonusCircle_7
LABEL $65D0 BonusCircle_8
LABEL $65F1 TriangleOuter_0
LABEL $6605 TriangleOuter_1
LABEL $6619 TriangleOuter_2
LABEL $662D TriangleOuter_3
LABEL $6641 TriangleOuter_4
LABEL $6650 TriangleOuter_5
LABEL $6664 TriangleOuter_6
LABEL $6678 TriangleOuter_7
LABEL $668C TriangleOuter_8
LABEL $66A0 BonusBlasterAnim
LABEL $66A0 BonusBlaster_Anim
LABEL $66A4 BlasterBonus
LABEL $66BD BonusLaserAnim
LABEL $66BD BonusLaser_Anim
LABEL $66C1 LaserBonus
LABEL $66E1 BonusAutofireAnim
LABEL $66E1 BonusAutofire_Anim
LABEL $66E5 AutofireBonus
LABEL $670A BonusLife
LABEL $670D BonusLifeAnim
LABEL $670D BonusLife_Anim
LABEL $672F LifeBonus0
LABEL $675A LifeBonus1
LABEL $6785 LifeBonus2
LABEL $67B0 LifeBonus3
LABEL $67DB LifeBonus4
LABEL $6806 LifeBonus5
LABEL $6831 LifeBonus6
LABEL $685C LifeBonus7
LABEL $6887 LifeBonus8
LABEL $672F LifeBonus
LABEL $68B2 BonusSecretAnim
LABEL $68B6 BonusSecret
LABEL $68DA BonusLockAnim
LABEL $68DA BonusLock_Anim
LABEL $68DE BonusLock
LABEL $6930 SuperBombAnim
LABEL $6934 SuperBomb_0
LABEL $6961 RankMarkerShopAnim
LABEL $6965 RankMarkerShop
LABEL $69E6 Shot1ImmuneAnim
LABEL $69EA Shot1Immune
EQU $00 SHOT_REDUCTION
LABEL $6A35 BonusE
LABEL $6EC1 BonusE_Anim
LABEL $6A38 BonusX
LABEL $6DAC BonusX_Anim
LABEL $6A3B BonusT
LABEL $6C9C BonusT_Anim
LABEL $6A3E BonusR
LABEL $6B81 BonusR_Anim
LABEL $6A41 BonusA
LABEL $6A44 BonusA_Anim
LABEL $6A66 BonusA_Anim_0
LABEL $6A86 BonusA_Anim_1
LABEL $6AA6 BonusA_Anim_2
LABEL $6AC6 BonusA_Anim_3
LABEL $6AE6 BonusA_Anim_4
LABEL $6B01 BonusA_Anim_5
LABEL $6B21 BonusA_Anim_6
LABEL $6B41 BonusA_Anim_7
LABEL $6B61 BonusA_Anim_8
LABEL $6BA3 BonusR_Anim_0
LABEL $6BBF BonusR_Anim_1
LABEL $6BDB BonusR_Anim_2
LABEL $6BF7 BonusR_Anim_3
LABEL $6C13 BonusR_Anim_4
LABEL $6C2C BonusR_Anim_5
LABEL $6C48 BonusR_Anim_6
LABEL $6C64 BonusR_Anim_7
LABEL $6C80 BonusR_Anim_8
LABEL $6CBE BonusT_Anim_0
LABEL $6CD9 BonusT_Anim_1
LABEL $6CF4 BonusT_Anim_2
LABEL $6D0F BonusT_Anim_3
LABEL $6D2A BonusT_Anim_4
LABEL $6D40 BonusT_Anim_5
LABEL $6D5B BonusT_Anim_6
LABEL $6D76 BonusT_Anim_7
LABEL $6D91 BonusT_Anim_8
LABEL $6DCE BonusX_Anim_0
LABEL $6DE9 BonusX_Anim_1
LABEL $6E04 BonusX_Anim_2
LABEL $6E1F BonusX_Anim_3
LABEL $6E3A BonusX_Anim_4
LABEL $6E55 BonusX_Anim_5
LABEL $6E70 BonusX_Anim_6
LABEL $6E8B BonusX_Anim_7
LABEL $6EA6 BonusX_Anim_8
LABEL $6F06 BonusE_Anim_1
LABEL $6F29 BonusE_Anim_2
LABEL $6F4C BonusE_Anim_3
LABEL $6F6F BonusE_Anim_4
LABEL $6F8F BonusE_Anim_5
LABEL $6FB2 BonusE_Anim_6
LABEL $6FD5 BonusE_Anim_7
LABEL $6FF8 BonusE_Anim_8
LABEL $701B Money_5
LABEL $7027 Money_5_Anim
LABEL $701E Money_20
LABEL $7493 Money_20_Anim
LABEL $7021 Money_50
LABEL $7131 Money_50_Anim
LABEL $7024 Money_200
LABEL $77F5 Money200_Anim
LABEL $7039 Money_5_0
LABEL $7058 Money_5_1
LABEL $7077 Money_5_2
LABEL $7096 Money_5_3
LABEL $70B5 Money_5_4
LABEL $70D4 Money_5_5
LABEL $70F3 Money_5_6
LABEL $7112 Money_5_7
LABEL $7153 Money_50_0
LABEL $7187 Money_50_1
LABEL $71BB Money_50_2
LABEL $71EF Money_50_3
LABEL $7223 Money_50_4
LABEL $7257 Money_50_5
LABEL $728B Money_50_6
LABEL $72BF Money_50_7
LABEL $72F3 Money_50_8
LABEL $7327 Money_50_9
LABEL $735B Money_50_10
LABEL $738F Money_50_11
LABEL $73C3 Money_50_12
LABEL $73F7 Money_50_13
LABEL $742B Money_50_14
LABEL $745F Money_50_15
LABEL $74B5 Money_20_0
LABEL $74E9 Money_20_1
LABEL $751D Money_20_2
LABEL $7551 Money_20_3
LABEL $7585 Money_20_4
LABEL $75B9 Money_20_5
LABEL $75ED Money_20_6
LABEL $7621 Money_20_7
LABEL $7655 Money_20_8
LABEL $7689 Money_20_9
LABEL $76BD Money_20_10
LABEL $76F1 Money_20_11
LABEL $7725 Money_20_12
LABEL $7759 Money_20_13
LABEL $778D Money_20_14
LABEL $77C1 Money_20_15
LABEL $7817 Money_200_0
LABEL $7860 Money_200_1
LABEL $78A9 Money_200_2
LABEL $78F2 Money_200_3
LABEL $793B Money_200_4
LABEL $7984 Money_200_5
LABEL $79CD Money_200_6
LABEL $7A16 Money_200_7
LABEL $7A5F Money_200_8
LABEL $7AA8 Money_200_9
LABEL $7AF1 Money_200_10
LABEL $7B3A Money_200_11
LABEL $7B83 Money_200_12
LABEL $7BCC Money_200_13
LABEL $7C15 Money_200_14
LABEL $7C5E Money_200_15
LABEL $7CA7 BonusFaster
LABEL $7CAD BonusFaster_Anim
LABEL $7CAA MalusSlower
LABEL $7DE6 MalusSpeedAnim
LABEL $7CAD BonusFasterAnim
LABEL $7CCF BonusFasterInner0
LABEL $7CEE BonusFasterInner1
LABEL $7D0D BonusFasterInner2
LABEL $7D2C BonusFasterInner3
LABEL $7D4B BonusFasterInner4
LABEL $7D6A BonusFasterInner5
LABEL $7D89 BonusFasterInner6
LABEL $7DA8 BonusFasterInner7
LABEL $7DC7 BonusFasterInner8
LABEL $7DE6 MalusSpeed_Anim
LABEL $7E08 MalusSpeed0
LABEL $7E31 MalusSpeed1
LABEL $7E5A MalusSpeed2
LABEL $7E83 MalusSpeed3
LABEL $7EAC MalusSpeed4
LABEL $7ED1 MalusSpeed5
LABEL $7EFA MalusSpeed6
LABEL $7F23 MalusSpeed7
LABEL $7F4C MalusSpeed8
LABEL $7F75 BonusFasterShot
LABEL $7F7B BonusFasterShot_Anim
LABEL $7F78 BonusSlowerShot
LABEL $80EA BonusSlowerShotAnim
LABEL $7F7B BonusFasterShotAnim
LABEL $7F9D BonusFasterShotInner0
LABEL $7FC2 BonusFasterShotInner1
LABEL $7FE7 BonusFasterShotInner2
LABEL $800C BonusFasterShotInner3
LABEL $8031 BonusFasterShotInner4
LABEL $8056 BonusFasterShotInner5
LABEL $807B BonusFasterShotInner6
LABEL $80A0 BonusFasterShotInner7
LABEL $80C5 BonusFasterShotInner8
LABEL $80EA BonusSlowerShot_Anim
LABEL $810C BonusSlowerShot0
LABEL $8136 BonusSlowerShot1
LABEL $8160 BonusSlowerShot2
LABEL $818A BonusSlowerShot3
LABEL $81B4 BonusSlowerShot4
LABEL $81DE BonusSlowerShot5
LABEL $8208 BonusSlowerShot6
LABEL $8232 BonusSlowerShot7
LABEL $825C BonusSlowerShot8
LABEL $8286 BonusShotsplus
LABEL $828C BonusShotsplus_Anim
LABEL $8289 MalusShot
LABEL $83E9 MalusShotAnim
LABEL $828C BonusShotsplusAnim
LABEL $82AE BonusExtraBulletInner0
LABEL $82D1 BonusExtraBulletInner1
LABEL $82F4 BonusExtraBulletInner2
LABEL $8317 BonusExtraBulletInner3
LABEL $833A BonusExtraBulletInner4
LABEL $835D BonusExtraBulletInner5
LABEL $8380 BonusExtraBulletInner6
LABEL $83A3 BonusExtraBulletInner7
LABEL $83C6 BonusExtraBulletInner8
LABEL $840B MalusShot0
LABEL $8434 MalusShot1
LABEL $845D MalusShot2
LABEL $8486 MalusShot3
LABEL $84AF MalusShot4
LABEL $84CD MalusShot5
LABEL $84F6 MalusShot6
LABEL $851F MalusShot7
LABEL $8548 MalusShot8
LABEL $8571 BonusScoop
LABEL $8574 BonusScoop_Anim
LABEL $8596 BonusScoopInner0
LABEL $85C5 BonusScoopInner1
LABEL $85F4 BonusScoopInner2
LABEL $8623 BonusScoopInner3
LABEL $8652 BonusScoopInner4
LABEL $8681 BonusScoopInner5
LABEL $86B0 BonusScoopInner6
LABEL $86DF BonusScoopInner7
LABEL $870E BonusScoopInner8
LABEL $873D BonusShield
LABEL $8740 BonusShield_Anim
LABEL $8762 BonusShieldInner0
LABEL $8781 BonusShieldInner1
LABEL $87A0 BonusShieldInner2
LABEL $87BF BonusShieldInner3
LABEL $87DE BonusShieldInner4
LABEL $87FD BonusShieldInner5
LABEL $881C BonusShieldInner6
LABEL $883B BonusShieldInner7
LABEL $885A BonusShieldInner8
LABEL $8879 BonusArmor
LABEL $887C BonusArmor_Anim
LABEL $887C BonusArmorAnim
LABEL $889E BonusArmorInner0
LABEL $88C0 BonusArmorInner1
LABEL $88E2 BonusArmorInner2
LABEL $8904 BonusArmorInner3
LABEL $8926 BonusArmorInner4
LABEL $8948 BonusArmorInner5
LABEL $896A BonusArmorInner6
LABEL $898C BonusArmorInner7
LABEL $89AE BonusArmorInner8
LABEL $89D0 BonusShot1
LABEL $89DC BonusShot1_Anim
LABEL $89D3 BonusShot2
LABEL $8A97 BonusShot2_Anim
LABEL $89D6 BonusShot3
LABEL $8BAC BonusShot3_Anim
LABEL $89D9 BonusShot4
LABEL $8D1B BonusShot4_Anim
LABEL $89DC BonusShot1Anim
LABEL $89FE BonusShot1Inner0
LABEL $8A0F BonusShot1Inner1
LABEL $8A20 BonusShot1Inner2
LABEL $8A31 BonusShot1Inner3
LABEL $8A42 BonusShot1Inner4
LABEL $8A53 BonusShot1Inner5
LABEL $8A64 BonusShot1Inner6
LABEL $8A75 BonusShot1Inner7
LABEL $8A86 BonusShot1Inner8
LABEL $8A97 BonusShot2Anim
LABEL $8AB9 BonusShot2Inner0
LABEL $8AD4 BonusShot2Inner1
LABEL $8AEF BonusShot2Inner2
LABEL $8B0A BonusShot2Inner3
LABEL $8B25 BonusShot2Inner4
LABEL $8B40 BonusShot2Inner5
LABEL $8B5B BonusShot2Inner6
LABEL $8B76 BonusShot2Inner7
LABEL $8B91 BonusShot2Inner8
LABEL $8BAC BonusShot3Anim
LABEL $8BCE BonusShot3_0
LABEL $8BF3 BonusShot3_1
LABEL $8C18 BonusShot3_2
LABEL $8C3D BonusShot3_3
LABEL $8C62 BonusShot3_4
LABEL $8C87 BonusShot3_5
LABEL $8CAC BonusShot3_6
LABEL $8CD1 BonusShot3_7
LABEL $8CF6 BonusShot3_8
LABEL $8D1B BonusShot4Anim
LABEL $8D1F BonusShot4_Impl
LABEL $8D4E BonusMinestorm
LABEL $8D51 BonusMineStormAnim
LABEL $8D73 MineStorm0
LABEL $8DA2 MineStorm1
LABEL $8DD1 MineStorm2
LABEL $8E00 MineStorm3
LABEL $8E2F MineStorm4
LABEL $8E5E MineStorm5
LABEL $8E8D MineStorm6
LABEL $8EBC MineStorm7
LABEL $8EEB MineStorm8
LABEL $8F1A BonusMult2
LABEL $8F20 BonusMult2Anim
LABEL $8F1D BonusMult5
LABEL $90E9 BonusMult5Anim
LABEL $8F42 BonusMult20
LABEL $8F71 BonusMult21
LABEL $8FA0 BonusMult22
LABEL $8FCF BonusMult23
LABEL $8FFE BonusMult24
LABEL $902D BonusMult25
LABEL $905C BonusMult26
LABEL $908B BonusMult27
LABEL $90BA BonusMult28
LABEL $910B BonusMult50
LABEL $9135 BonusMult51
LABEL $915F BonusMult52
LABEL $9189 BonusMult53
LABEL $91B3 BonusMult54
LABEL $91DD BonusMult55
LABEL $9207 BonusMult56
LABEL $9231 BonusMult57
LABEL $925B BonusMult58
LABEL $9285 BonusBombCash
LABEL $928B BonusBombCashAnim
LABEL $9288 BonusBombDiamond
LABEL $9478 BonusBombDiamondAnim
LABEL $92AD BonusBombCash0
LABEL $92E0 BonusBombCash1
LABEL $9313 BonusBombCash2
LABEL $9346 BonusBombCash3
LABEL $9379 BonusBombCash4
LABEL $93AC BonusBombCash5
LABEL $93DF BonusBombCash6
LABEL $9412 BonusBombCash7
LABEL $9445 BonusBombCash8
LABEL $949A BonusBombDiamond0
LABEL $94B9 BonusBombDiamond1
LABEL $94D8 BonusBombDiamond2
LABEL $94F7 BonusBombDiamond3
LABEL $9516 BonusBombDiamond4
LABEL $9535 BonusBombDiamond5
LABEL $9554 BonusBombDiamond6
LABEL $9573 BonusBombDiamond7
LABEL $9592 BonusBombDiamond8
LABEL $95B1 BonusTimer
LABEL $95B4 BonusTimerAnim
LABEL $95D6 BonusTimer0
LABEL $95EC BonusTimer1
LABEL $9602 BonusTimer2
LABEL $9618 BonusTimer3
LABEL $962E BonusTimer4
LABEL $9644 BonusTimer5
LABEL $965A BonusTimer6
LABEL $9670 BonusTimer7
LABEL $9686 BonusTimer8
LABEL $969C Rank1
LABEL $9814 RankMarkerCircle_0
LABEL $9862 RankMarkerCircle_1
LABEL $98B0 RankMarkerCircle_2
LABEL $98FE RankMarkerCircle_3
LABEL $994C RankMarkerCircle_4
LABEL $999A RankMarkerCircle_5
LABEL $99E8 RankMarkerCircle_6
LABEL $99F7 BonusCashDoubler
LABEL $99FA BonusCashDoublerAnim
LABEL $9A1C BonusCashDoubler0
LABEL $9A3E BonusCashDoubler1
LABEL $9A60 BonusCashDoubler2
LABEL $9A82 BonusCashDoubler3
LABEL $9AA4 BonusCashDoubler4
LABEL $9AC6 BonusCashDoubler5
LABEL $9AE8 BonusCashDoubler6
LABEL $9B0A BonusCashDoubler7
LABEL $9B2C BonusCashDoubler8
LABEL $9B4E BonusShotPowerup
LABEL $9B51 BonusShotPowerupAnim
LABEL $9B73 BonusShotPowerup0
LABEL $9B95 BonusShotPowerup1
LABEL $9BB7 BonusShotPowerup2
LABEL $9BD9 BonusShotPowerup3
LABEL $9BFB BonusShotPowerup4
LABEL $9C1D BonusShotPowerup5
LABEL $9C3F BonusShotPowerup6
LABEL $9C61 BonusShotPowerup7
LABEL $9C83 BonusShotPowerup8
LABEL $9CA5 BonusDrunken
LABEL $9CA8 BonusDrunken_Anim
LABEL $9CC6 BonusDrunken_0
LABEL $9D33 BonusDrunken_1
LABEL $9DA0 BonusDrunken_2
LABEL $9E0D BonusDrunken_3
LABEL $9E66 BonusDrunken_4
LABEL $9EBF BonusDrunken_5
LABEL $9F04 BonusDrunken_6
LABEL $9F49 BonusDrunken_7
LABEL $9F7A BonusDrunken_8
LABEL $9FBF BonusDrunken_9
LABEL $A004 BonusDrunken_10
LABEL $A05D BonusDrunken_11
LABEL $A0B6 BonusDrunken_12
LABEL $A123 BonusDrunken_13
LABEL $A190 BonusAutofire
LABEL $A193 BonusAutofireAnim2
LABEL $A1B5 Autofire0
LABEL $A1DA Autofire1
LABEL $A1FF Autofire2
LABEL $A224 Autofire3
LABEL $A249 Autofire4
LABEL $A26E Autofire5
LABEL $A293 Autofire6
LABEL $A2B8 Autofire7
LABEL $A2DD Autofire8
EQU $05 BONUS_E_RANGE
EQU $05 BONUS_X_RANGE
EQU $05 BONUS_T_RANGE
EQU $05 BONUS_R_RANGE
EQU $05 BONUS_A_RANGE
EQU $0A BONUS_SLOWER_RANGE
EQU $0A BONUS_SHOTMINUS_RANGE
EQU $0A BONUS_SHOTPLUS_RANGE
EQU $04 BONUS_FASTER_SHOT_RANGE
EQU $0A BONUS_FASTER_RANGE
EQU $03 BONUS_ARMOR_RANGE
EQU $03 BONUS_SHIELD_RANGE
EQU $08 BONUS_SCOOP_RANGE
EQU $0F BONUS_SHOT1_RANGE
EQU $10 BONUS_SHOT2_RANGE
EQU $04 BONUS_SHOT3_RANGE
EQU $02 BONUS_MINESTORM_RANGE
EQU $08 BONUS_MULT2_RANGE
EQU $02 BONUS_MULT5_RANGE
EQU $02 BONUS_BOMB_CASH_RANGE
EQU $02 BONUS_BOMB_DIAMOND_RANGE
EQU $02 BONUS_TIMER_RANGE
EQU $0A BONUS_SLOWER_SHOT_RANGE
EQU $1E BONUS_MONEY_20_RANGE
EQU $05 BONUS_MONEY_50_RANGE
EQU $01 BONUS_CASH_DOUBLER_RANGE
EQU $01 BONUS_SHOT_POWERUP_RANGE
COMMENT_LABEL $01 0.5 in reality
EQU $01 BONUS_LIFE_RANGE
EQU $02 BONUS_DRUNKEN_RANGE
EQU $01 BONUS_AUTOFIRE_RANGE
EQU $00 BONUS_COMPARE_BASE
EQU $05 BONUS_E_COMPARE
EQU $0A BONUS_X_COMPARE
EQU $0F BONUS_T_COMPARE
EQU $14 BONUS_R_COMPARE
EQU $19 BONUS_A_COMPARE
EQU $23 BONUS_SLOWER_COMPARE
EQU $2D BONUS_SHOTMINUS_COMPARE
EQU $37 BONUS_SHOTPLUS_COMPARE
EQU $3B BONUS_FASTER_SHOT_COMPARE
EQU $45 BONUS_FASTER_COMPARE
EQU $48 BONUS_ARMOR_COMPARE
EQU $4B BONUS_SHIELD_COMPARE
EQU $53 BONUS_SCOOP_COMPARE
EQU $62 BONUS_SHOT1_COMPARE
EQU $72 BONUS_SHOT2_COMPARE
EQU $76 BONUS_SHOT3_COMPARE
EQU $78 BONUS_MINESTORM_COMPARE
LABEL $0080 BONUS_MULT2_COMPARE
LABEL $0082 BONUS_MULT5_COMPARE
LABEL $0084 BONUS_BOMB_CASH_COMPARE
LABEL $0086 BONUS_BOMB_DIAMOND_COMPARE
LABEL $0088 BONUS_TIMER_COMPARE
LABEL $0092 BONUS_SLOWER_SHOT_COMPARE
LABEL $00B0 BONUS_MONEY_20_COMPARE
LABEL $00B5 BONUS_MONEY_50_COMPARE
LABEL $00B6 BONUS_CASH_DOUBLER_COMPARE
LABEL $00B7 BONUS_SHOT_POWERUP_COMPARE
LABEL $00B8 BONUS_LIFE_COMPARE
LABEL $00BA BONUS_DRUNKEN_COMPARE
LABEL $00BB BONUS_AUTOFIRE_COMPARE
LABEL $A358 noEOR1200
LABEL $A364 nextB1
LABEL $A36D nextB2
LABEL $A376 nextB3
LABEL $A37F nextB4
LABEL $A388 nextB5
LABEL $A391 nextB6
LABEL $A39A nextB7a
LABEL $A3A3 nextB7
LABEL $A3AC nextB8a
LABEL $A3B5 nextBA
LABEL $A3BE nextBB
LABEL $A3C7 nextBC
LABEL $A3D0 nextBD
LABEL $A3D9 nextBE
LABEL $A3E2 nextBE2
LABEL $A3DD shot2AfterAll
LABEL $A3F2 nextBF
LABEL $A3FB nextBF2
LABEL $A404 nextBM2
LABEL $A40D nextBM5
LABEL $A41D nextBCash
LABEL $A434 nextBDiamond
LABEL $A42F getDiamondBomb
LABEL $A44A gainTwentyCash
LABEL $A43D nextBTimer
LABEL $A446 nextBI_ss
LABEL $A456 nextOver20
LABEL $A466 nextOver50
LABEL $A461 gainFiftyCash
LABEL $A47E nextnoCash
LABEL $A46A do50instead
LABEL $A47A getCashDouble
LABEL $A49C nextnoPowerUp
LABEL $A4B0 nextNoExtraLife
LABEL $A491 noEOR1201
LABEL $A4C6 nextNoDrunken
LABEL $A4C2 getDrunken
LABEL $A4DE nextNoAutofire
LABEL $A4DA getAutofire
LABEL $A4F1 noEOR1202
LABEL $A51A rankInitDone
EQU $08 BLOWUPABC
LABEL $A7EE Alphabet27
LABEL $A7F2 Alphabet28
LABEL $A7DE Alphabet26
LABEL $A54A NumberList
LABEL $A8BC Alphabet38
LABEL $A80B Alphabet29
LABEL $A818 Alphabet30
LABEL $A82E Alphabet31
LABEL $A84D Alphabet32
LABEL $A860 Alphabet33
LABEL $A873 Alphabet34
LABEL $A889 Alphabet35
LABEL $A893 Alphabet36
LABEL $A8A9 Alphabet37
LABEL $A56C abc
LABEL $A5A8 Alphabet0
LABEL $A5C1 Alphabet1
LABEL $A5DA Alphabet2
LABEL $A5F6 Alphabet3
LABEL $A60C Alphabet4
LABEL $A625 Alphabet5
LABEL $A638 Alphabet6
LABEL $A65A Alphabet7
LABEL $A66D Alphabet8
LABEL $A680 Alphabet9
LABEL $A696 Alphabet10
LABEL $A6A9 Alphabet11
LABEL $A6B6 Alphabet12
LABEL $A6C6 Alphabet13
LABEL $A6D3 Alphabet14
LABEL $A6F2 Alphabet15
LABEL $A708 Alphabet16
LABEL $A72D Alphabet17
LABEL $A746 Alphabet18
LABEL $A768 Alphabet19
LABEL $A778 Alphabet20
LABEL $A78E Alphabet21
LABEL $A79B Alphabet22
LABEL $A7AE Alphabet23
LABEL $A7BB Alphabet24
LABEL $A7CE Alphabet25
LABEL $A8E9 buzzVectrexString21
LABEL $A8FB printVectorStringListNonZero
LABEL $A91A buzzVectrexString
LABEL $A927 doneCalibrateString
LABEL $A945 LF33D12051205
LABEL $A94F endOfStringPrinting
LABEL $A950 printVectorStringList2
LABEL $A973 buzzVectrexString2
LABEL $A980 doneCalibrateString2
LABEL $A9E8 printVectorString2
LABEL $A995 donePrintVectorString2
LABEL $A996 donePrintVectorString
LABEL $A99B nextLetter
LABEL $A9B9 LF425_lg_11207
LABEL $A9E3 macroEnd1207
LABEL $A9C2 Draw_VLp_lessGap_11207
LABEL $A9DA LF425_lg1207
LABEL $A9E7 donePrintVectorString3
LABEL $A9EC nextLetter2
LABEL $A9F6 shiftOff1208
LABEL $AA08 LF425_lg_11208
LABEL $AA33 macroEnd1208
LABEL $AA13 Draw_VLp_lessGap_11208
LABEL $AA17 shiftOn1208
EQU $01 SHIT
COMMENT_LABEL $01 shit are the New 4 shots :-)
LABEL $009A SHOT_START_POSITION_Y
COMMENT_LABEL $009A must not be $80
EQU $0A SCALE_PLAYER_SHOT
EQU $06 SCALE_SCOOPIE_SHOT
EQU $5A PLAYER_SHOT_LENGTH
COMMENT_LABEL $5A 100 ;116
EQU $2D PLAYER_SHOT_LENGTH_5
EQU $0A _4_SCALE_PLAYER_SHOT
EQU $06 _4_SCALE_SCOOPIE_SHOT
EQU $23 _4_PLAYER_SHOT_ONE_THIRD
COMMENT_LABEL $23 42 cranky
EQU $46 _4_PLAYER_SHOT_LENGTH
EQU $69 _4_PLAYER_SHOT_LENGTH_32
LABEL $AA37 newPlayerShotObject
COMMENT_LABEL $AA37 #isfunction
LABEL $AA50 cs_done_nops
LABEL $AB55 toManyShotsInAir
LABEL $AA67 noLazerShot
LABEL $AB55 spawnPlayerShot_end
LABEL $AA80 nosfx8
LABEL $AA7A REPLACE_1_2_BomberShotData_varFromIRQ1_41
LABEL $AACA oneBullet
LABEL $AAF5 twoBullet
LABEL $AB20 threeBullet
LABEL $AB56 fiveBullet
LABEL $AB81 lazerShot
LABEL $AAAF noScoop1_4
EQU $00 SCOOPY_TEST
LABEL $AAA7 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_0
LABEL $AABF noScoop2_4
LABEL $AAB7 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_0
LABEL $AC16 fourPlayerShotBehaviour
COMMENT_LABEL $AC16 #isfunction
LABEL $AB49 chosenDone
LABEL $AADA noScoop1_1
LABEL $AAD2 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_1
LABEL $AAEA noScoop2_1
LABEL $AAE2 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_1
LABEL $B15C onePlayerShotBehaviour
COMMENT_LABEL $B15C #isfunction
LABEL $AB05 noScoop1_2
LABEL $AAFD REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_2
LABEL $AB15 noScoop2_2
LABEL $AB0D REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_2
LABEL $B0EA twoPlayerShotBehaviour
COMMENT_LABEL $B0EA #isfunction
LABEL $AB30 noScoop1_3
LABEL $AB28 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_3
LABEL $AB40 noScoop2_3
LABEL $AB38 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_3
LABEL $B05F threePlayerShotBehaviour
COMMENT_LABEL $B05F #isfunction
LABEL $AB66 noScoop1_5
LABEL $AB5E REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_4
LABEL $AB76 noScoop2_5
LABEL $AB6E REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_4
LABEL $B1D6 fivePlayerShotBehaviour
COMMENT_LABEL $B1D6 #isfunction
LABEL $AB91 noScoop1_6
LABEL $AB89 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_5
LABEL $ABA1 noScoop2_6
LABEL $AB99 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_5
LABEL $B2F9 lazerPlayerShotBehaviour
COMMENT_LABEL $B2F9 #isfunction
LABEL $ABBA removeLazerShot
LABEL $ABBA removeThisPlayerShotInMove
COMMENT_LABEL $ABBA #isfunction
LABEL $ABD8 was_not_first_re
COMMENT_LABEL $ABD8 find previous, go thru all objects from first and look where "I" am the next...
LABEL $ABCF was_first_re
LABEL $ABEB lazerRemoveEnd
LABEL $ABDC try_next_re
LABEL $ABE5 found_next_switch_re
LABEL $AC03 wasNottestShot1209
LABEL $AC0E wasNottestShot21209
LABEL $AC10 LF33D12101210
LABEL $AC2D shot1Ok_4_n
LABEL $AC31 shot1PosDone_4_n
LABEL $AC38 LF33D12131213
LABEL $ACBA entryOtherShotsContinue
LABEL $AEC4 noScoop1Shot4
LABEL $AD6C noFourShot4_1
EQU $00 BLINKING_SCOOPY_FIRE
LABEL $AD69 noRightDraw1234
LABEL $AEC4 scoop1Shot4Done
LABEL $ADFD noThreeShot4_1
LABEL $AE76 noTwoShot4_1
LABEL $B04C noScoop2Shot4
LABEL $AF4A noFourShot4_2
LABEL $AF47 noLeftDraw1323
LABEL $B04C scoop2Shot4Done
LABEL $AFBD noThreeShot4_2
LABEL $B01A noTwoShot4_2
LABEL $B04F scoop2Shot4DSLoadDone
LABEL $B078 shot1Ok_3_n
LABEL $B07C shot1PosDone_3_n
LABEL $B083 LF33D13941394
LABEL $B103 shot1Ok_2_n
LABEL $B107 shot1PosDone_2_n
LABEL $B10E LF33D14131413
LABEL $B175 shot1Ok_1_n
LABEL $B179 shot1PosDone_1_n
LABEL $B180 LF33D14281428
LABEL $B1A1 zeroPlayerShotBehaviour
COMMENT_LABEL $B1A1 #isfunction
LABEL $B1BA shot1Ok_0_n
LABEL $B1BE shot1PosDone_0_n
LABEL $B1CE LF33D14371437
LABEL $B1EF shot1Ok_5_n
LABEL $B1F3 shot1PosDone_5_n
LABEL $B203 doDrawShaot5
LABEL $B1FD LF33D14391439
LABEL $B242 doDrawShaot5Done
LABEL $B20D LF33D14411441
LABEL $B2A9 scoop1Shot5Done
LABEL $B2F6 scoop2Shot5Done
LABEL $B32A doTimerReduce
LABEL $B330 contNoTimeReduce
EQU $02 LAZER_WOBBLE_STRENGTH
LABEL $B33D t1SeemsOk
LABEL $B348 lazerSpreadsmall
LABEL $B34C LF33D14551455
LABEL $B368 waitNotDoneLazer1
LABEL $B36C waitDoneLazer1
LABEL $B40D scoop1Shot6Done
LABEL $B38C scoop1Shot6Ok
LABEL $B3B6 LF33D14591459
LABEL $B3DD t1SeemsOk_sr
LABEL $B3F0 fullLaser1458
LABEL $B3F2 contLaser1458
LABEL $B403 waitNotDoneLazer11458
LABEL $B427 scoop2Shot6Ok
LABEL $B451 LF33D14661466
LABEL $B475 t1SeemsOk_sl
LABEL $B488 fullLaser1465
LABEL $B48A contLaser1465
LABEL $B49B waitNotDoneLazer11465
LABEL $B4A5 scoop2Shot6Done
EQU $09 PARTICLES_PER_FIRE
LABEL $B4BE fw_cs_done_no
LABEL $B4BF fwdestroyPObject
COMMENT_LABEL $B4BF #isfunction
LABEL $B4CD fwwas_not_first_enem
COMMENT_LABEL $B4CD find previous, go thru all objects from first and look where "I" am the next...
LABEL $B4C6 fwwas_first_enem
LABEL $B4DE fwpRemoveDone
LABEL $B4D1 fwtry_next_enem
LABEL $B4DA fwfound_next_switch_enem
LABEL $B4EE LF33D14731473
LABEL $B550 explodeRocket
LABEL $B524 LF33D14751475
LABEL $B538 LF2CC_2_rl
LABEL $B557 REPLACE_1_2_FW2Data_varFromIRQ1_2
LABEL $B55D noNewFWSound
LABEL $B564 contEmit_er
LABEL $B5B2 noNewParticle3_fr
LABEL $B581 noEOR1479
LABEL $B58E noEOR1480
LABEL $B5A0 noEOR1481
LABEL $B5B7 velocityPositiveXParticleParticleBehaviour
COMMENT_LABEL $B5B7 #isfunction
EQU $04 GRAVITY_Y
EQU $01 GRAVITY_X
LABEL $B5D2 xStays
LABEL $B639 fwshiftValues
LABEL $B62A LF33D14841484
LABEL $B64D ensureScoopiesSafety
COMMENT_LABEL $B64D #isfunction
LABEL $B666 scoopie1Done1485
LABEL $B65D Move_Mem_a1486
LABEL $B659 Move_Mem_a_11486
LABEL $B67F scoopie2Done1485
LABEL $B676 Move_Mem_a1487
LABEL $B672 Move_Mem_a_11487
LABEL $B680 ensureScoopiesLoaded
COMMENT_LABEL $B680 #isfunction
LABEL $B70D scoopieEnsure1Done1488
LABEL $B68D tryNextEO1489
LABEL $B6EB cs_done_no1489
LABEL $B6A3 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_811489
LABEL $B6C9 noLefty1489
LABEL $B6AF REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_811489
LABEL $B6BD leftyIsRight1489
LABEL $B6EB macroEnd1489
LABEL $B6C9 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_821489
LABEL $B6E3 noRighty1489
LABEL $B6D5 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_821489
LABEL $B6FB Move_Mem_a1490
LABEL $B6F7 Move_Mem_a_11490
LABEL $B701 noScoopy1Move1488
LABEL $B79A scoopieEnsure2Done1488
LABEL $B71A tryNextEO1491
LABEL $B778 cs_done_no1491
LABEL $B730 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_811491
LABEL $B756 noLefty1491
LABEL $B73C REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_811491
LABEL $B74A leftyIsRight1491
LABEL $B778 macroEnd1491
LABEL $B756 REPLACE_2_2_enemyPlayerControlledRightBehaviour_varFrom1_821491
LABEL $B770 noRighty1491
LABEL $B762 REPLACE_2_2_enemyPlayerControlledLeftBehaviour_varFrom1_821491
LABEL $B788 Move_Mem_a1492
LABEL $B784 Move_Mem_a_11492
LABEL $B79B waitButtonRelease
LABEL $B7A5 MoveToD
LABEL $B7B8 LF33D14941494
LABEL $B7BD wheelcircleData
EQU $05 DELAY_RESET
LABEL $C9A6 extraStage
LABEL $C9A7 stackSave
LABEL $C9A9 spinSpeed
LABEL $C9AB spinSpeedAdder
LABEL $C9AD stackSafe
LABEL $C9AF rewardStringSelected
LABEL $C9B1 save1
LABEL $C9B3 save2
LABEL $C9B5 save3
LABEL $C9B7 angle
LABEL $C9B9 angleUse
LABEL $C9BB wheelIntoStage
LABEL $C9BC wheelIntroSize
LABEL $C9BD spinTemp
LABEL $C9BE wheelStage
LABEL $C9BF ySpinOffset
LABEL $C9C0 delayCounter
LABEL $C9C1 diskLineCount
LABEL $C9C3 imageStart
LABEL $C9C5 lastLatch
LABEL $C9C6 yLatch
LABEL $C9C7 isPressed
LABEL $C9C8 nextXCoord
LABEL $C9C9 linePrinting
LABEL $C9CA cheeseCounter
LABEL $C9CB wheelStarted
LABEL $C9CC wheelTmp
LABEL $C9CE angleTmp
EQU $08 MAX_STEP_WIDTH
EQU $02 STEP_WIDTH
EQU $01 STEP_WIDTH1
EQU $02 INC_ANGLE
LABEL $B9BD bandit2
EQU $32 SPINTIME
LABEL $B9F5 extraLoop
LABEL $B9F8 REPLACE_1_2_doymsound100_varFromIRQ1_201
LABEL $BA23 d_is_ok
LABEL $BA29 stageSelect
LABEL $BACA spinThatWheel
LABEL $BC0B doWheel
LABEL $BA6A displayWinning
LABEL $BA40 displayExtra
LABEL $BA4D noDoubleInc
LABEL $BA54 noTrippleInc
LABEL $BA5D extraLoopDone
LABEL $BA65 wheelResult
LABEL $BBB6 noButtonPressedSpin
EQU $00 REWARD_LASER
EQU $02 REWARD_MONEY
EQU $04 REWARD_SECRET
EQU $06 REWARD_EQUIP
EQU $08 REWARD_LIVES
EQU $0A REWARD_POWER
EQU $0C REWARD_LOCK
EQU $0E REWARD_IMMUNE
EQU $10 REWARD_SCORE
EQU $12 REWARD_TIME
EQU $14 REWARD_BOMBS
LABEL $BA91 REPLACE_1_2_rewardTable_varFromIRQ0_12
LABEL $BA96 REPLACE_1_2_doWheelReward_varFromIRQ0_1
LABEL $BA9C goBackBandint
LABEL $BAAE REPLACE_1_2_initStars_varFrom1_201
LABEL $BAB4 REPLACE_1_2_spawnStar_varFrom1_202
LABEL $BAC4 REPLACE_1_2_backFromBandit_varFrom0_3
LABEL $BAEB doSpin
LABEL $BB00 doSpinThe
LABEL $BB28 doSpinTheWheel
LABEL $BB5B doPressButtons
LABEL $BAE2 initWheel
LABEL $BBB9 nextSpinner
LABEL $BBC4 spinString
LABEL $BE9A displayCenterRotatedString
LABEL $BBCC theString
LABEL $BBD4 wheelString
LABEL $BBDC wheelMessage1
LABEL $BBEC wheelMessage2
LABEL $BBF6 initWheelSpin
LABEL $BC1B noButtonPressedWheel
LABEL $BC3C contWheel
LABEL $BC31 doStartWheel
LABEL $BC5D noBreaks
LABEL $BC5A storeBreaks
LABEL $BC6D noLastLatch
LABEL $BC67 REPLACE_1_2_noiseOnlyDeAccelData_varFromIRQ1_201
LABEL $BDC9 drawLineD
LABEL $BC8D nextCheese
LABEL $BE02 bandit_Strings_normalMode
LABEL $BC98 noHardcore
LABEL $BE22 bandit_Strings_hardcoreMode
LABEL $BCB1 notToHigh
LABEL $BCBC notOk
LABEL $BCC2 notNeg
LABEL $BD0F displayCheese
LABEL $BCDF allOk
LABEL $BCF5 noLatch
LABEL $BD04 angleOk
EQU $50 FONT_LENGTH_BIOS
LABEL $F9D4 FONT_START_BIOS
COMMENT_LABEL $F9D4 // space is 1
LABEL $FBB4 FONT_END_BIOS
LABEL $BD2A nextCheeseStringLine
LABEL $BD4A startShift2
LABEL $BD46 nextChar2
LABEL $BD78 cheeseStringDone
LABEL $BDE0 drawLineDLater
LABEL $BDDB cheeseLine1
LABEL $BDF9 cheeseLine2
LABEL $BE42 _banditLaser
LABEL $BE5A _banditEquip
LABEL $BE4A _banditMoney
LABEL $BE62 _banditLives
LABEL $BE52 _banditSecret
LABEL $BE6A _banditPower
LABEL $BE72 _banditLock
LABEL $BE7A _banditImmune
LABEL $BE92 _banditBombs
LABEL $BE8A _banditTime
LABEL $BE82 _banditScore
LABEL $BE42 _banditStrings
EQU -$06 OFFSET_TO_CENTER_STRING
LABEL $BEAC nextRotateStringLine
LABEL $BF6E printAngleOffsets
LABEL $BEE2 movetoWaitLoopstwOffset
LABEL $BF1F movetoWaitLoopstw
LABEL $BF4D startShift3
LABEL $BF49 nextChar3
LABEL $BF69 stringRotatePrintDone
LABEL $C12C *
COMMENT_LINE $0000 ; hey dissi "watch $circleHalf 2 0"
COMMENT_LINE $0000 following is needed for VIDE
COMMENT_LINE $0000 to replace "vars" in this bank with values from the other bank
COMMENT_LINE $0000 #genVarlist# varFrom0
COMMENT_LINE $0000 TODO:
COMMENT_LINE $0000 und zwar ist mir bei mir und in bildern/videos anderer aufgefallen, dass das bild leicht nach links verschoben ist,
COMMENT_LINE $0000 zumindest aber das quadrat in der kalibration
COMMENT_LINE $0000 DB       "VERSION 1.00"              ; Cartridges 1-30
COMMENT_LINE $0000 DB       "VERSION 1.01"              ; Cartridges 1-31 - "all" fixed: Immunity 2 games by wheel, was ovewritten bei level rollover
COMMENT_LINE $0000 DB       "VERSION 1.02"              ; fixed: Immunity setting could overwrite multiplyer, that caused the mulitplyer to
COMMENT_LINE $0000 be "0" whiech effectively was 256 -> huge scores!
COMMENT_LINE $0000 DB       "VERSION 1.03"              ; fixed: bug in boss 4, gamescale positive -> endless loop
COMMENT_LINE $0000 fixed: pause mode glitch, shots can go thru shields
COMMENT_LINE $0000 fixed:in dodger was potential to get the multiplyers mixed up
COMMENT_LINE $0000 added version number to title
COMMENT_LINE $0000 todo: no warp, difficulty up, some more powerm no achievements, different high score, no warp
COMMENT_LINE $0000 Enemies have one bullet less (need RAM)
COMMENT_LINE $0000 song: introMusic is replaced with title music (one song less), needed ROM space
COMMENT_LINE $0000 so if "nmi" testing is done, STACK this must be changed
COMMENT_LINE $0000 but beware!!! if lower than $CBFC
COMMENT_LINE $0000 Stack underflow will occur at some stage!!! - unless precaution is taken!
COMMENT_LINE $0000 no save game possible
COMMENT_LINE $0000 not enabled with VecFever
COMMENT_LINE $0000 if enabled "normal" save game is disabled!
COMMENT_LINE $0000 less stars
COMMENT_LINE $0000 1 less player shot
COMMENT_LINE $0000 wheel does not show, and gives random results
COMMENT_LINE $0000 ................
COMMENT_LINE $0000 . VecFever Start
COMMENT_LINE $0000 ................
COMMENT_LINE $0000 if  VecFever = 1
COMMENT_LINE $0000 Vectorblade ASSUMES a VecFever is present!
COMMENT_LINE $0000 no Further testing is done, VecFever facilities are used without questions... or answers!
COMMENT_LINE $0000 Also VecFever with a IRQ (address-)line and Firmware >= 1.21 is assumed.
COMMENT_LINE $0000 In that case options and highscores are saved using the
COMMENT_LINE $0000 ShadowRAM and copy to ROM feature (upper 16k)
COMMENT_LINE $0000 The V4E structure lies in Bank 1 ($8030) - followed by options and the highscore table(s).
COMMENT_LINE $0000 VECFEVER_FAKE = 1 ; don't execute any RAM/ROM copy for persistency
COMMENT_LINE $0000 COLOR LED not working due to timing issues in VecFever
COMMENT_LINE $0000 Thomas disabled LED with IRQ-rom access (V4E type 10)
COMMENT_LINE $0000 ...............
COMMENT_LINE $0000 . VecFever End
COMMENT_LINE $0000 ...............
COMMENT_LINE $0000 defines for game difficulties
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . Test values Start
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . REAL values Start
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 LEVEL_SELECT        =        1 ; enable select difficulty levek (by adding achievements
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . REAL values End
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 directions
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 all banks start with this!
COMMENT_LINE $0000 this file is part of Vectorblade, written by Malban in 2018-2020
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 DEFINE SECTION
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 load vectrex bios routine definitions
COMMENT $C800 RAM and defines
COMMENT_LINE $C800 all banks
COMMENT_LINE $C800 this file is part of Vectorblade, written by Malban in 2018-2020
COMMENT $C800 if = 0, than old "INIT_SHOT_TEST" must be used!
COMMENT_LINE $C800 ;;;;
COMMENT_LINE $C800 enemy behaviour defines
COMMENT_LINE $C800 Single attack pattern
COMMENT_LINE $C800 TYPE of pattern, pattern address/data
COMMENT_LINE $C800 can not drop randomly - only frommoney mothership!
COMMENT_LINE $C800 random drops
COMMENT_LINE $C800 load vectrex bios routine definitions
COMMENT $C800 vectrex function includes
COMMENT_LINE $C800 commented out, all functions that are hurtfull to cranky VIA
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C800 this file contains includes for vectrex BIOS functions and variables      ;
COMMENT_LINE $C800 it was written by Bruce Tomlin, slighte changed by Malban                 ;
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C800 $C839                             ;Pointer to copyright string during startup
COMMENT_LINE $C800 $C83B                             ;High score cold-start flag (=0 if valid)
COMMENT_LINE $C800 $C83C                             ;temp byte
COMMENT_LINE $C800 $C840                             ;        register 12
COMMENT_LINE $C800 $C841                             ;        register 11
COMMENT_LINE $C800 $C843                             ;        register 9
COMMENT_LINE $C800 $C844                             ;        register 8
COMMENT_LINE $C800 $C848                             ;        register 4
COMMENT_LINE $C800 $C849                             ;        register 3
COMMENT_LINE $C800 $C84A                             ;        register 2
COMMENT_LINE $C800 $C84C                             ;        register 0
COMMENT_LINE $C800 $C85E                             ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $C800 $C868...$C876                             ;Unused?
COMMENT_LINE $C800 $C878                             ;Unused?
COMMENT_LINE $C800 $C880 - $CBEA is user RAM                            ;
COMMENT_LINE $C800 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $C800 1 mux sel 0
COMMENT_LINE $C800 2 mux sel 1
COMMENT_LINE $C800 3 sound BC1
COMMENT_LINE $C800 4 sound BDIR
COMMENT_LINE $C800 5 comparator input
COMMENT_LINE $C800 6 external device (slot pin 35) initialized to input
COMMENT_LINE $C800 7 /RAMP
COMMENT_LINE $C800 0 PA latch enable
COMMENT_LINE $C800 1 PB latch enable
COMMENT_LINE $C800 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $C800 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $C800 4 /
COMMENT_LINE $C800 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $C800 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $C800 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $C800 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $C800 1 \
COMMENT_LINE $C800 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $C800 3 /
COMMENT_LINE $C800 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $C800 5 \
COMMENT_LINE $C800 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $C800 7 /
COMMENT_LINE $C800 bit                             cleared by
COMMENT_LINE $C800 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $C800 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $C800 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $C800 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $C800 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $C800 0 CA2 interrupt enable
COMMENT_LINE $C800 1 CA1 interrupt enable
COMMENT_LINE $C800 2 shift register interrupt enable
COMMENT_LINE $C800 3 CB2 interrupt enable
COMMENT_LINE $C800 4 CB1 interrupt enable
COMMENT_LINE $C800 5 timer 2 interrupt enable
COMMENT_LINE $C800 6 timer 1 interrupt enable
COMMENT_LINE $C800 7 IER set/clear control
COMMENT_LINE $C800 Rot_VL_dft      EQU     $F637   ;
COMMENT_LINE $C800 Rot_VL_ab       EQU     $F610   ;
COMMENT_LINE $C800 Rot_VL          EQU     $F616   ;
COMMENT_LINE $C800 Rot_VL_Mode_a   EQU     $F61F   ;
COMMENT_LINE $C800 Rot_VL_Mode     EQU     $F62B   ;
COMMENT_LINE $C800 Rot_VL_dft      EQU     $F637   ;
COMMENT $C800 vectrex macro includes
COMMENT_LINE $C800 all banks
COMMENT_LINE $C800 PC not usable :-)
COMMENT_LINE $C800 cmpx #4
COMMENT_LINE $C800 pshs d,y,x,pc,u,cc;16
COMMENT_LINE $C800 puls d,y,x,pc,u,cc; 16
COMMENT_LINE $C800 pshs y,x,pc,u,d;15
COMMENT_LINE $C800 puls y,x,pc,u,d; 15
COMMENT_LINE $C800 pshs y,x,pc,u,cc;14
COMMENT_LINE $C800 puls y,x,pc,u,cc; 14
COMMENT_LINE $C800 pshs a,x,pc,u,cc;13
COMMENT_LINE $C800 puls a,x,pc,u,cc;13
COMMENT_LINE $C800 pshs x,pc,u,cc;12
COMMENT_LINE $C800 puls x,pc,u,cc;12
COMMENT_LINE $C800 pshs pc,u,d;11
COMMENT_LINE $C800 puls pc,u,d;11
COMMENT_LINE $C800 pshs pc,u,cc;10
COMMENT_LINE $C800 puls pc,u,cc;10
COMMENT_LINE $C800 pshs u,d;9
COMMENT_LINE $C800 puls u,d;9
COMMENT_LINE $C800 pshs u,cc;8
COMMENT_LINE $C800 puls u,cc;8
COMMENT_LINE $C800 pshs u;7
COMMENT_LINE $C800 puls u;7
COMMENT_LINE $C800 pshs cc;6
COMMENT_LINE $C800 puls cc;6
COMMENT_LINE $C800 tfr a,a; 6
COMMENT_LINE $C800 brn 0; 3
COMMENT_LINE $C800 NOP ; 2
COMMENT_LINE $C800 for usigae in vectorblade
COMMENT_LINE $C800 the "massive" stack usage is forbidden -> since stack is rare and
COMMENT_LINE $C800 can overwrite data
COMMENT_LINE $C800 max 3 byte PUSH!
COMMENT $0000 wait 2 cycles
COMMENT $0000 wait 3 cycles
COMMENT $0000 wait 6 cycles
COMMENT $0000 wait 12 cycles
COMMENT $0000 wait 14 cycles
COMMENT $0000 wait 16 cycles
COMMENT $0000 wait 18 cycles
COMMENT $0000 wait 20 cycles
COMMENT $0000 wait 22 cycles
COMMENT $0000 wait 24 cycles
COMMENT $0000 wait 26 cycles
COMMENT $0000 wait 28 cycles
COMMENT_LINE $0000 nop      (SPRITE_SCALE-8)/2
COMMENT $0000 1 secpnd
COMMENT_LINE $0000 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 a = $18, b = $83 disable RAMP, muxsel=false, channel 1 (integrators offsets)
COMMENT $0000 Clear D/A output
COMMENT $0000 set mux to channel 1, leave mux disabled
COMMENT $0000 enable mux, reset integrator offset values
COMMENT_LINE $0000 nop 4
COMMENT $0000 /BLANK high and /ZERO low
COMMENT $0000 Disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 scale for placing first point
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 move to time 1 lo, this means scaling
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 recal counter, about 21 Minutes befor roll over
COMMENT $0000 Wait for timer t2
COMMENT $0000 Store refresh value
COMMENT $0000 into timer t2
COMMENT $0000 blank low and zero low
COMMENT $0000 clear shift register
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D *2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D /2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 "random" Galois LFSR
COMMENT $0000 27, 28 is different is still same
COMMENT_LINE $0000 hey dissi "pri nt a = #a"
COMMENT_LINE $0000 hey dissi "pri nt a = #a"
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 expect DP = d0
COMMENT_LINE $0000 playes one piece of music, that is given as param
COMMENT $0000 this piece of music
COMMENT $0000 NOW
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 y must be set more than xx cycles on some vectrex
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT_LINE $0000 nop
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT_LINE $0000 uses x and d
COMMENT_LINE $0000 prints the numbers in a and b at a location given
COMMENT_LINE $0000 prints in hex
COMMENT_LINE $0000 need 6 bytes RAM starting with tmp_debug
COMMENT $0000 save the numbers
COMMENT $0000 save the numbers
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 DIGITAL_JOYTICK_LOOP_MIN  EQU  $08
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT $0000 mux disabled, mux sel = 01 (vertical pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive y)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value y was pushed UP
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved up
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved down
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 beq noymove\?
COMMENT_LINE $0000 bra noxmove\? ; if y moved I assume no X move
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $C800 ***************************************************************************
COMMENT_LINE $C800 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 this whole block does the player movement according to current joystick data
COMMENT_LINE $0000 the testing whether the end of the screen is reached seems dumb - can I do that better?
COMMENT $0000 half a pixel per "move"
COMMENT $0000 half a pixel per "move"
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 this whole block does the player movement according to current joystick data
COMMENT_LINE $0000 the testing whether the end of the screen is reached seems dumb - can I do that better?
COMMENT $0000 half a pixel per "move"
COMMENT $0000 half a pixel per "move"
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 do the "wobbling" of enemies in waiting position
COMMENT $0000 was tst
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 reg u can be used!
COMMENT $0000 bank 1 replace
COMMENT $0000 enemyTribble
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 times 8 == 1600 points a biggy, times 5 = 8000 points max
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 following is "old shot"
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 if last time something was hit and
COMMENT_LINE $0000 the bullet is still active
COMMENT_LINE $0000 do not switch - we probably will hit again!
COMMENT $0000 was tst
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 use next shot that "fits
COMMENT $0000 was tst
COMMENT_LINE $0000 new
COMMENT_LINE $0000 new end
COMMENT $0000 was tst
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 always use testShot + 5 for testShot 2
COMMENT $0000 was tst
COMMENT_LINE $0000 new
COMMENT_LINE $0000 new end
COMMENT $0000 was tst
COMMENT_LINE $0000 veryify that testShot is not the same
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 loop count
COMMENT $0000 scale width
COMMENT $0000 go ++ to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 -CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go left
COMMENT_LINE $0000 draw
COMMENT $0000 switch to y int, enable mux
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 go +- to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 +CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go right
COMMENT_LINE $0000 draw
COMMENT $0000 Store Y in D/A register
COMMENT $0000 switch to y int, enable mux
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 draws the fighter (anim) and all that goes with it (armor, shield or scoop)
COMMENT_LINE $0000 only one addition at any given time at once
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT $0000 dec playerBonusCounter
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT_LINE $0000 draw cleanup
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 position
COMMENT $0000 position
COMMENT $0000 start at 0
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte?
COMMENT $0000 Advance to next point in list
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 brn 0 ; max ten scale
COMMENT_LINE $0000 NOP                     ;Wait a moment more
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 *******
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 LDA      #$40                         ;B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT_LINE $0000 LF425_lg\?
COMMENT_LINE $0000 BITA     >VIA_int_flags               ;Wait for T1 to time out
COMMENT_LINE $0000 BEQ      LF425_lg\?
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next coordinate pair
COMMENT_LINE $0000 LDA      ,X                           ;Get next pattern byte
COMMENT_LINE $0000 BLE      Draw_VLp_lessGap_1\?           ;Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 tst ,x+
COMMENT $0000 faster than tst?
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 there are never to 0 after another
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 nop
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 tst ,x+
COMMENT $0000 faster than tst?
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 there are never to 0 after another
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 position to explosion
COMMENT $0000 * If the scale factor for the explosion
COMMENT $0000 * has not surpassed the max value, then
COMMENT $0000 max 63
COMMENT_LINE $0000 get position of dot and move there
COMMENT $0000 DRAW_VLP
COMMENT_LINE $0000 ldb EX_START_SIZE+u_offset1,u    ;
COMMENT_LINE $0000 return to center of explosion
COMMENT $0000 max 63
COMMENT_LINE $0000 complete explosion done
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 easy
COMMENT $0000 5
COMMENT $0000 6
COMMENT $0000 7
COMMENT_LINE $0000 bullet 0 - 4 = standard damage
COMMENT $0000 easy
COMMENT $0000 1
COMMENT $0000 2
COMMENT_LINE $0000 with damage adjust no negative weapon damage allowed anymore!
COMMENT_LINE $0000 (negative was damage each second round only)
COMMENT_LINE $0000 boss fight must be hard! They don't resprect extra damage!
COMMENT $0000 max non negative damage
COMMENT_LINE $0000 im warp failure non working on impossible
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 +10 new since, enemies now start at the bottom
COMMENT $0000 y wise a fixed compare is used, since y wise all shots are equal
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 one time macro
COMMENT_LINE $0000 biggies only above level 25
COMMENT_LINE $0000 bra noMoneyStealer\?
COMMENT_LINE $0000 here possibly a special BIGGY spawn
COMMENT_LINE $0000 lbne isIntroNoBug ; statistically 1/255 = every 2.5 seconds -> to many!
COMMENT $0000 statistically each about *25 = 60 seconds .. lets try that
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** CASH STEALER *****************
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 init money stealer
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** BIG FIEND ********************
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 init super alien
COMMENT_LINE $0000 -------
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 -------
COMMENT $0000 one time macro
COMMENT $0000 no saucer in the first five level
COMMENT $0000 bonusTimerLength
COMMENT_LINE $0000 timer saucer!
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** TIME OUT - SAUCER ************
COMMENT_LINE $0000 *********************************
COMMENT $0000 start at upper right (for now)
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** TIME OUT - MOTHERSHIP ********
COMMENT_LINE $0000 *********************************
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 ;; saucer init done
COMMENT_LINE $0000 -------
COMMENT $0000 one time macro
COMMENT $0000 was tst
COMMENT_LINE $0000 init bug
COMMENT_LINE $0000 big bugs only appear if a reduced count of normal enemies are on screen
COMMENT_LINE $0000 each bug with (atm) 4 enemies less (actually 3 - since the bug counts too)
COMMENT $0000 allow more than 4 bugs *shudder*
COMMENT_LINE $0000 lsra
COMMENT $0000 all 8 bits
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 ;; bug init done
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 do not allow playing of any other "sfx" till this is over
COMMENT $0000 secretChannel1
COMMENT $0000 secretChannel2
COMMENT $0000 secretChannel3
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 do not allow playing of any other "sfx" till this is over
COMMENT $0000 achievementChannel1
COMMENT $0000 achievementChannel2
COMMENT $0000 achievementChannel3
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 a = 0, and stays 0
COMMENT $0000 Copy the byte
COMMENT $0000 Decrement the count
COMMENT $0000 Go back until finished
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 copy block
COMMENT $0000 jsr Move_Mem_a
COMMENT_LINE $0000 copy block end
COMMENT_LINE $0000 copy block
COMMENT $0000 jsr Move_Mem_a
COMMENT_LINE $0000 copy block end
COMMENT_LINE $0000 all "linkage" and enemy list stuff is done after warp!
COMMENT_LINE $0000 .....................................................
COMMENT $0000 and remember that we created a new object
COMMENT_LINE $0000 set the new empty head
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 head of our empty list
COMMENT_LINE $0000 load last of current object list
COMMENT_LINE $0000 the old head is always our next
COMMENT $0000 enemyPlayerControlledLeftBehaviour
COMMENT $0000 enemyPlayerControlledRightBehaviour
COMMENT $0000 enemyPlayerControlledRightBehaviour
COMMENT $0000 enemyPlayerControlledLeftBehaviour
COMMENT_LINE $0000 newobject is always head
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 ensure scoopy1 is lower scoopy 2
COMMENT $0000 jsr newEnemyObject
COMMENT $0000 this is no enemy - in the level sense!
COMMENT_LINE $0000 object struct in u
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr Move_Mem_a
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr newEnemyObject
COMMENT $0000 this is no enemy - in the level sense!
COMMENT_LINE $0000 object struct in u
COMMENT_LINE $0000 x dest
COMMENT_LINE $0000 us source
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr Move_Mem_a
COMMENT $0000 the next in out empty list will be the new
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 used in COL_DETECT_ALL
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 ldd ,u
COMMENT_LINE $0000 cmpd #lazerPlayerShotBehaviour
COMMENT_LINE $0000 bne normalShot\?
COMMENT_LINE $0000 ldd #-1
COMMENT_LINE $0000 std testBase
COMMENT_LINE $0000 bra      endm\?
COMMENT_LINE $0000 normalShot\?
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 used in TEST_ALL_SHOTS
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 ldd ,u
COMMENT_LINE $0000 cmpd #lazerPlayerShotBehaviour
COMMENT_LINE $0000 bne normalShot\?
COMMENT_LINE $0000 ldd #-1
COMMENT_LINE $0000 std testBase
COMMENT_LINE $0000 bra      endm\?
COMMENT_LINE $0000 normalShot\?
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 definition of bank switch macros
COMMENT $0000 Prepare DDR Registers % 1101 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT $0000 Prepare DDR Registers % 1001 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT $0000 interrupt DISABLED - clear ALL interrupts to ensure other bank
COMMENT $0000 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
COMMENT_LINE $0000 ensure shift is "normal"
COMMENT $0000 0 = shift,
COMMENT $0000 interrupt ENABLED
COMMENT_LINE $0000 todo
COMMENT_LINE $0000 ensure T1 setup correctly
COMMENT_LINE $0000 - it usually is
COMMENT $0000 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
COMMENT_LINE $0000 and now "trigger a interrupt
COMMENT $0000 a VERY short T1 timer
COMMENT $0000 start timer
COMMENT $0000 Peer Test
COMMENT_LINE $0000 by the time, the macros "leaves" the interrupt is set!
COMMENT $0000 interrupt ENABLED
COMMENT $0000 ensure that shift can generate interrupt
COMMENT_LINE $0000 for some reason or another, VIA doesn't like a
COMMENT_LINE $0000 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0000 (only on a real vectrex, not Vide)
COMMENT $0000 and write 0 to shift (a) and $98 to aux (shift out enable)
COMMENT $0000 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
COMMENT_LINE $0000 wait 20 cycles till store of aux (these are 23)
COMMENT $0000 12
COMMENT $0000 3
COMMENT_LINE $0000 nop      10
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 ********************** STRUCTRUES *********************************
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 10 bytes
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 flash length when hit (might be bits) 3 bits max
COMMENT_LINE $C801 SWARM_ALL_PURPOSE
COMMENT_LINE $C801 high bits have movemnt info
COMMENT_LINE $C801 vvhh xfff
COMMENT_LINE $C801 f = flash counter
COMMENT_LINE $C801 vertical
COMMENT_LINE $C801 v0 0 = no vertical movement
COMMENT_LINE $C801 11 = up
COMMENT_LINE $C801 01 = down
COMMENT_LINE $C801 00 = not used
COMMENT_LINE $C801 horizontal
COMMENT_LINE $C801 h0 0 = no horzontal movement
COMMENT_LINE $C801 11 = left
COMMENT_LINE $C801 01 = right
COMMENT_LINE $C801 00 = not used
COMMENT_LINE $C801 SWARM_MOVEMENT_INFO = -1 go to startpos
COMMENT_LINE $C801 sxxx cccc = counter till movement changes
COMMENT_LINE $C801 s = 1 -> start -> move to startposition
COMMENT_LINE $C801 x = not used
COMMENT_LINE $C800 10 bytes
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 SWARM_ALL_PURPOSE,1 ; #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 11 bytes - "like" swarm
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 flash length when hit (might be bits) 3 bits max
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 21 byte
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 D current position for calculation only
COMMENT $C800 if attack pattern is absolut - than here go the target coordinates
COMMENT $C800 is 2 bytes, but shares second byte with ANIM count
COMMENT $C800 in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
COMMENT $C800 current position in animation table of vectorlists
COMMENT $C800 lower nibble when attack pattern
COMMENT $C800 where in the current pattern are we?
COMMENT_LINE $C801 uper nibble, when attack pattern
COMMENT_LINE $C801 which pattern "trail" to follow
COMMENT $C800 UID of curretn enemies -> defines position in waiting state
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT_LINE $C801 speed of falling debris
COMMENT $C800 hit points = upper 5 bits
COMMENT $C800 all 8 bits
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT $C800 #noDoubleWarn
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 D current position for calculation only
COMMENT $C800 #
COMMENT $C800 count down to next animation sequence
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 1 byte ; D current position for calculation only
COMMENT $C800 1 byte ; D current position for calculation only
COMMENT $C800 is 2 bytes, but shares second byte with ANIM count
COMMENT $C800 in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
COMMENT $C800 where in the current pattern are we?
COMMENT_LINE $C801 uper nibble, when attack pattern
COMMENT_LINE $C801 which pattern "trail" to follow
COMMENT $C800 UID of curretn enemies -> defines position in waiting state
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT_LINE $C801 speed of falling debris
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 only missile and "normal"
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 #noDoubleWarn
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 low 6 bit - anim, hi 2 bit speed
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 13 for 4 stars
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 10 bytes
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 alternating 0 and != 0, left or right slope starting
COMMENT $C800 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 or in case of direct appearence the number of enemies!
COMMENT $C800 or in case of direct appearence the number of enemies!
COMMENT $C800 pointer to attack pattern list - pointer to 4 pointers to attack patterns
COMMENT $C800 high nibble max shots, low nibble max attack patterns
COMMENT_LINE $C801 ds       LEVEL_MAX_SHOTS_IN_AIR, 1
COMMENT_LINE $C801 ds       LEVEL_MAX_ATTACK_PATTERNS, 1
COMMENT $C800 how probable is it that enemies shoots
COMMENT $C800 how probable is it that bonus drops
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 when flight pattern definition
COMMENT_LINE $C800 how enemies enter the level
COMMENT_LINE $C800 calcs are done in an Excel sheet
COMMENT $C800 depending on speed
COMMENT $C800 this is now SPEED offset for compare!
COMMENT_LINE $C800 arbitraty number of PatternLine, end with both y and xadder = 0
COMMENT $C800 when pointer = 0, than end of list
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 if zero -> BigBug
COMMENT $C800 see above
COMMENT $C800 bug only (for now), lower nibble speed, uppernibble
COMMENT_LINE $C801 #mt3n, m= 1 can fire missiles, t = 1 can fire target shots, 3 = 1 can fire tripples
COMMENT_LINE $C801 if m = 1 than always missile
COMMENT_LINE $C801 if 3 = 1 than always tripple (if not missile)
COMMENT_LINE $C801 t else
COMMENT_LINE $C801 if debris - than ALSO speed of falling debris
COMMENT $C800 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT_LINE $C800 ;;;;
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 RAM that is "always" the same
COMMENT_LINE $C800 CBFC as TOP Stack is as yet unused RAM!
COMMENT_LINE $C800 still possible RAM savings!
COMMENT_LINE $C800 flashAvailable     only 1 bit needed!
COMMENT_LINE $C800 I don't really want to touch those:
COMMENT_LINE $C800 tacScan             ds       1 ; only two values +1/-1
COMMENT_LINE $C800 difficulty          ds       1 ; really only the lowest 4 bits
COMMENT_LINE $C800 SAVE2_ENEMY_ADDRESS = cbc0
COMMENT_LINE $C800 SAVE1_ENEMY_ADDRESS = cbd5
COMMENT $C80F speed of bugshot, and "flag" if bugshot
COMMENT $C811 only used in shop
COMMENT_LINE $C814 GAMEPHASE_INTRO     =        0                            ; level attack wave phase
COMMENT_LINE $C814 GAMEPHASE_INGAME    =        1                            ; in game phase (not attack waves)
COMMENT_LINE $C814 game_phase          ds       1
COMMENT $C815 offset of enemies in "waiting" position -16 - + 16
COMMENT $C816 direction of wobble movemnt positive = add, negative = sub
COMMENT $C81A BIT FLAG only one attack pattern initiated per round
COMMENT_LINE $C81B Vec Joys should not be moved
COMMENT_LINE $C81B lastJoyMove         ds       0
COMMENT $C81B EQU $C81B ;Joystick 1 left/right; #noDoubleWarn
COMMENT $C81C EQU $C81C ;Joystick 1 up/down; #noDoubleWarn
COMMENT $C81D sfx player used
COMMENT $C81F sfx player used
COMMENT $C821 how much time is left in level
COMMENT $C822 only two values +1/-1
COMMENT_LINE $C825 0 bytes left! next is Vec_Loop_Count -> which I use
COMMENT $C825 $c825 / $c826 Vec_Loop_Count
COMMENT $C827 for the current intro pattern the # of spawned, enemies, ; VecBightness
COMMENT $C828 Vec_Dot_Dwell, Vec_Pattern
COMMENT_LINE $C82A after that some "String stuff" I use wihtin print sync String
COMMENT_LINE $C82A ;;;;;;;;;;
COMMENT $C82A Vec_Counters ; $c82e 17 byte
COMMENT_LINE $C830 following 5 definitions are the jmp (on stack) addresses back to the main game loop
COMMENT_LINE $C830 from the 5 different linked lists
COMMENT_LINE $C830 these can be = in RAM, since lists can be reused in different game sections
COMMENT $C838 #handle_after
COMMENT_LINE $C83A reuse!
COMMENT $C83A compare value to above 5 addresses - these must be greater than above addreses,
COMMENT_LINE $C83A compare is used to decide whether list is empty or not
COMMENT $C83A BIT FLAG when an enemy is hit by bullet - but not destroyed - the enemy "flashes", this indicates a current flash (reset by next normal colored enemy)
COMMENT $C83B is allways negated value -> easier/faster compare!
COMMENT $C83C during level intro - each "permanent" enemy receives a UID, this is the counter for that
COMMENT $C83D $C83d / $C83e when using Wait Recal -> than this is Vec_Rfrsh -> not to be overwritten!
COMMENT_LINE $C83F than follows the Vec_Music double buffer
COMMENT_LINE $C83F I use that also to optimize PSG writing
COMMENT_LINE $C83F ;;;;;;;;;;
COMMENT $C84D 1 = allow, 0, = no allow
COMMENT $C84D delay countdown between appearance of enemies in current intro pattern
COMMENT_LINE $C84E IntroPattern->P_DELAY_BETWEEN_ENEMIES
COMMENT $C84E UID counter for each enemy per level, used only during intro to position each spawned enemy
COMMENT $C84F pointer to current active intro pattern
COMMENT $C851 number of current pattern in level structure (from 0 terminated list)
COMMENT $C852 right
COMMENT $C854 state of joystick button only bit 0 for current and bit 1 for last, ANY button
COMMENT $C855 for convenience - a copy of above for the last gameround
COMMENT $C858 7 digit score
COMMENT_LINE $C864 still only one Fighter direct bonus active at any one given time
COMMENT_LINE $C864 newer bonus trumps older bonus
COMMENT $C864 bitfield for SHIELD, SUCKER ...
COMMENT_LINE $C865 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C865 ;;; Game vars
COMMENT_LINE $C865 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $C865 messenger
COMMENT $C867 count down value to when the next intro pattern starts (value defined in pattern)
COMMENT $C868 left
COMMENT $C86A if zero, than no bugs, otherwise count of bugs yet to spawn
COMMENT $C86C the current "letter" bonus are remembered here per "bit"
COMMENT $C86D one enemy is allowed to shoot per round, the one and only allowed shots start coordinates (0 - no shot)
COMMENT $C86F sfx player used
COMMENT $C871 statistics
COMMENT $C875 16 bit current x position of player - hi byte is used to position
COMMENT $C877 16 bit left/right speed of player 255 = 1 "pixel"
COMMENT $C879 maximum number of shots player is currently allowed to have in the air
COMMENT $C87A current number of bullets per shot (1-4)
COMMENT $C87B speed of shots fired by player (16 bit)
COMMENT $C87E Vec_Music_Flag - used in pasue! ; used in objectEnemy for sign checks of coordinates
COMMENT_LINE $C87F used as size in level intro display!; used as scale and counter...
COMMENT_LINE $C87F ;;;;;;;
COMMENT_LINE $C880 0 bytes left?
COMMENT_LINE $C880 ;;;;;;;;;;
COMMENT_LINE $C880 this is $c880                    ORG      $c880                        ; start of our ram space
COMMENT $C880 each round = to 0, when an enemy is hit during round this is "inc"ed. And a sound played in next round
COMMENT_LINE $C881 all kinds of object list, partly reused
COMMENT $C881 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C883 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C886 Four different "stack" linked lists for Objects
COMMENT_LINE $C886 1) all enemies (and explosions)
COMMENT $C886 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C888 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C88B reuse
COMMENT_LINE $C88B 2) all Player shots
COMMENT $C88B if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C88D if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C890 3) all Enemy shots
COMMENT $C890 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C892 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C895 4) all Bonus "things"
COMMENT $C895 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C897 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C89A ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C89A following two can be used in game
COMMENT_LINE $C89A before usage they must be reinit however!
COMMENT $C89A only used in desktop/title ; also stores on easy the destroyed warp enemy count
COMMENT $C89A indicates this is the first batch of start to be displayed -> does in move macro stuff
COMMENT $C89C bit: 1 yes, 0 no
COMMENT_LINE $C89D use this as bitfiled for sound (and other things)
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ********************************************************************
COMMENT_LINE $C89E save to eEprom Starts here!
COMMENT_LINE $C89E one "direct" copy of current OptionStruct from flash
COMMENT $C89E swarm
COMMENT $C89F Calibration ZeroRef value (Kristof Tuts) stored here
COMMENT $C8A0 major havoc
COMMENT $C8A1 text -> STRING_SCALE
COMMENT $C8A2 boss
COMMENT $C8A4 can be calculated from achievements and in game secrets!
COMMENT_LINE $C8A5 saved bits
COMMENT_LINE $C8A5 lowest 4 bits are saved
COMMENT_LINE $C8A5 highest 4 bits are erased with load
COMMENT_LINE $C8A5 variable bits (only used per game - not saved)
COMMENT $C8A5 %00000001 = 1 No Buzz, 0 = buzz
COMMENT $C8A6 40 bitflags
COMMENT $C8AD saved - but not shown (yet?)
COMMENT_LINE $C8AE is BITSAVE
COMMENT_LINE $C8AE MMMM MMII
COMMENT_LINE $C8AE II = 1 imunity to 1 shot, = 2 imunity to 1 and 2 shot
COMMENT_LINE $C8AE M = Multiplyer bits, max 63
COMMENT $C8AE current multiply factor (1 = default)
COMMENT $C8AE only 1 or 2 can also be calculated
COMMENT $C8AF located in old HS block
COMMENT $C8B1 OptionStruct
COMMENT $C8B1 or more
COMMENT $C8B1 or more
COMMENT $C8B1 bug behaviour internal ; end of game word
COMMENT $C8B1 attation before dumping -> resued below
COMMENT $C8B7 the current "letter" bonus are remembered here per "bit" for DISPLAY
COMMENT_LINE $C8B8 MUST not be reused!
COMMENT_LINE $C8B8 ;;
COMMENT $C8BC countdown each 2 round, thus 255 about 10s
COMMENT $C8C0 needed between start of enemy objects and laser test
COMMENT $C8C1 really only temporary not accross round
COMMENT $C8C2 really only temporary not accross round, used by boss2 to indicate boss hit in shot tests
COMMENT $C8C3 really only temporary not accross round ; 3 is "INNER" of 1 and 2
COMMENT $C8C4 really only temporary not accross round
COMMENT_LINE $C8C6 per game round only two of the player shots are tested
COMMENT_LINE $C8C6 agains the enemies
COMMENT_LINE $C8C6 the current to be tested shot is pointer stored in "testShot"
COMMENT $C8D4 ATTENTION!!!
COMMENT $C8D4 bossfight stores DS (bank 0), while player shots are displayed
COMMENT $C8D4 used while printing string with vectors
COMMENT $C8D6 only used during intro patterns
COMMENT_LINE $C8D8 9 bytes of RAM for the damned restricted laser
COMMENT $C8E1 really only the lowest 4 bits , highest bit hardcore = 1, not hardcore = 0
COMMENT $C8E4 damage one bullet does, if negative than only damage in even rounds (laser) (not supported any longer!)
COMMENT $C8E5 same as above, shifted to upper 5 bits for fast usage
COMMENT $C8E6 same as above, doubled and shifted
COMMENT $C8E7 time a bonus lasts
COMMENT $C8E9 pointer to current level structure
COMMENT $C8EB timer for score multiplyer
COMMENT_LINE $C8ED enemyDestructed     ds       1                            ;
COMMENT_LINE $C8ED lock handling is BITSAVE
COMMENT_LINE $C8ED not GAMEPHASE_INTRO     ; in game phase (not attack waves)
COMMENT $C8ED lower nibble is lock count, upper nibble is IDSW -
COMMENT_LINE $C8EE I - if set than INTRO phase of game!
COMMENT_LINE $C8EE D - enemyDestructed -a flag, indicates, that there are NO live enemies (boss/warp)
COMMENT_LINE $C8EE W = 1 keep scoopies in warp,
COMMENT_LINE $C8EE W = 0 lose scoopies in Warp,
COMMENT_LINE $C8EE S = 0 scoopies can be killed,
COMMENT_LINE $C8EE S = 1 scoopies are shielded,
COMMENT $C8F1 xpos
COMMENT $C8F4 0-3 ; negative hs stars
COMMENT_LINE $C8F6 hidden Secret 3 Scoops!
COMMENT $C8F7 doublings
COMMENT $C8F8 ERD0rrbb
COMMENT_LINE $C8F9 rr rate counter "overall",
COMMENT_LINE $C8F9 bb counter of consecutive same bonus
COMMENT_LINE $C8F9 E=1 extra still in order,
COMMENT_LINE $C8F9 R=1 rank still in order
COMMENT_LINE $C8F9 D=1 drunken master
COMMENT $C8FE 1 for continues save ; #noDoubleWarn
COMMENT_LINE $C8FE RAM for "in game"
COMMENT_LINE $C8FE ***************************************************************************
COMMENT_LINE $C8FE Variable / RAM SECTION
COMMENT_LINE $C8FE ***************************************************************************
COMMENT_LINE $C8FE insert your variables (RAM usage) in the BSS section
COMMENT_LINE $C8FE user RAM starts at $c880
COMMENT_LINE $C8FE ;;;;;;;;;
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE ;;; Game vars
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE followed by the storage area for abve defined lists
COMMENT_LINE $C8FE less shots with NMI to
COMMENT_LINE $C8FE prevent stack overflow!
COMMENT_LINE $C976 only to identify objects in RAM
COMMENT_LINE $C9A6 only to identify objects in RAM
COMMENT_LINE $C9E7 only to identify objects in RAM
COMMENT_LINE $CB8B only to identify objects in RAM
COMMENT_LINE $CBEF only to identify objects in RAM
COMMENT_LINE $CBEF reuse
COMMENT_LINE $CBEF must be smaller than  playershotobject_list_end  - (EnemyStruct*2)
COMMENT_LINE $CBEF game over candle
COMMENT_LINE $CBEF -----
COMMENT_LINE $CBEF here after comes directly the STACK
COMMENT_LINE $CBEF on occasion stack overwrite the last player shot,
COMMENT_LINE $CBEF but SUPPOSEDLY only when no player shots are active.
COMMENT_LINE $CBEF Known:
COMMENT_LINE $CBEF - Achievement display
COMMENT_LINE $CBEF - VecVox on level intro display
COMMENT_LINE $CBEF - playing music pieces (e.g. intro to boss)
COMMENT_LINE $CBEF - boss kills player (shots are not drawn anymore)
COMMENT_LINE $CBEF RAM used in title screen
COMMENT_LINE $C83F simple redefines for source compatability
COMMENT_LINE $C8FE ;;;;;;;;;
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE ;;; Game vars
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C906 followed by the storage area for abve defined lists
COMMENT_LINE $C9D8 space where VecFever functions can be executed
COMMENT_LINE $C9D8 this can be moved on RAM shortage to "object" definition space
COMMENT_LINE $C9D8 no RAM function should be necessary while in game
COMMENT_LINE $C9D8 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9D8 ;;; Arkos vars
COMMENT_LINE $C9D8 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9D8 if no in game music -> this can be moved on RAM shortage to "object" definition space
COMMENT_LINE $C9D8 start of some RAM Vars for Arkos Tracker
COMMENT_LINE $C9D8 below RAM usuage is 74 byte (without psh shadow/work registers, which are = to
COMMENT_LINE $C9D8 vectrex default RAM locations)
COMMENT $C9D8 $c9d9
COMMENT_LINE $C9DC following are player vars which are channel independend
COMMENT $C9DC height of pattern
COMMENT $C9DD speed of pattern
COMMENT $C9DE current speed position (count down to 0)
COMMENT $C9DF current height position (count down to 0)
COMMENT $C9E0 address of instrument table
COMMENT $C9E2 current linker position
COMMENT $C9E4 retrigger "flag" - if same as PLY_PSGREG13, than not retriggered, otherewise - yes
COMMENT $C9E5 start position of current special track
COMMENT $C9E7 current position in special track
COMMENT $C9E9 wait counter for special track (count down to 0)
COMMENT_LINE $C9EA in general in below player, y reg points to the start of
COMMENT_LINE $C9EA following structure (one for each channel)
COMMENT $CA1D special - this is used for retrigger activities
COMMENT $CA1E these two are used to stay "channel" independend
COMMENT $CA20 they are loaded befor the "work" routines with the corresponding regs of the current channel
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 VBTitle
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 Defines
COMMENT $CA23 pointer to the actual MAP tile in the map (the Macro)
COMMENT_LINE $CA2B top and bottom
COMMENT_LINE $CA2B since the sprite is taller than one tile high
COMMENT_LINE $CA2B we take a top and bottom tile collision
COMMENT_LINE $CA2B if both are clean - than no collision
COMMENT_LINE $CA2B if one is "not clean" than collision
COMMENT_LINE $CA3C last_joy_y          ds       1                            ; and Y, for checking, we don't want an autorun feature...
COMMENT_LINE $CA3C last_joy_x          ds       1                            ; last joystick position X,
COMMENT $CA3C position in level, that is the upper left corner
COMMENT $CA3D position in level, that is the upper left corner
COMMENT $CA3F fine "pixel" for scrolling
COMMENT $CA40 size depends on tile map definition
COMMENT $CA47 position where the next tile is printed at
COMMENT_LINE $CA4A tiles collected are stored with the x position
COMMENT_LINE $CA4A that means all collectable tiles must have a
COMMENT_LINE $CA4A different X position!
COMMENT_LINE $CA4E tmp_debug           ds       6
COMMENT_LINE $CA52 at max 8 different animation counters!
COMMENT_LINE $CA5B lookaHead buffers
COMMENT $CA5B position where the next tile is printed at, used by look ahead
COMMENT_LINE $CA5E clipping
COMMENT_LINE $CA60 tmp1 ds 2
COMMENT $CA66 "round" counter of scroll text -> if 1 (or higher) the scrolltext has been fully shown
COMMENT $CA7D maximum 20 vectors to clip - also used as buffer
COMMENT $CAD7 maximum 20 vectors to clip - also used as buffer
COMMENT $CB31 maximum 20 vectors to clip - also used as buffer
COMMENT $CB8D about $cbc2
COMMENT_LINE $CB8D the following values determine the "strength" of the
COMMENT_LINE $CB8D maximum move for the grid to be build
COMMENT_LINE $CB8D the size of the grid should always be chosen with maximum strength and manipulated via scale
COMMENT_LINE $CB8D max strength in anything is ALWAYS preferable to larger scale!
COMMENT_LINE $CB8D determines the number of tiles on screen
COMMENT_LINE $CB8D size of tiles in "pixel", size here means in relation to position in grid
COMMENT_LINE $CB8D a "pixel" is a 1 step move in the "SCALE_MOVE" scale
COMMENT_LINE $CB8D the "hardware" size of a tile is determinded by the scale "SCALE_VLIST", which should be much much smaller than
COMMENT_LINE $CB8D the move scale.
COMMENT_LINE $CB8D The relation between the two is experimentally determined!
COMMENT_LINE $CB8D e.g. 254 / 12 = 21 => tile width in scales
COMMENT_LINE $CB8D these are the values added by a single tile to the position
COMMENT_LINE $CB8D exact should be whats commented out
COMMENT_LINE $CB8D 16 for easier calc
COMMENT_LINE $CB8D start pos of draw is uper left corner
COMMENT_LINE $CB8D in cartesian minX, maxY
COMMENT_LINE $CB8D only 5 rows displayed!
COMMENT_LINE $CB8D END_POS_VERTICAL = START_POS_VERTICAL - (FULL_TILES_VERTICAL*TILE_HEIGHT)
COMMENT_LINE $CB8D following not done!
COMMENT $CB95 %0000UDLR
COMMENT $CB96 %0000UDLR
COMMENT_LINE $CB98 is when no more vars are added, and max 30 vectors in tile clipping zone!
COMMENT_LINE $CB98 THIS MUST END BEFORE SCOOPY SAVE POSITION!
COMMENT_LINE $CB98 --------------------------------------------------------------------------------
COMMENT_LINE $CB98 object structures and vars for tile mobs
COMMENT_LINE $CB98 reuses RAM
COMMENT $C906 PC
COMMENT $C906 positive = end of list
COMMENT_LINE $C992 --------------------------------------------------------------------------------
COMMENT_LINE $C992 RAM highscore
COMMENT $CA7D 8*4 = 32 byte
COMMENT $CA9D 8*4 = 32 byte
COMMENT $CABD 2 only when displaying hs
COMMENT_LINE $CB21 RAM used in dodger
COMMENT_LINE $C9CD ***************************************************************************
COMMENT_LINE $C9CD Variable / RAM SECTION
COMMENT_LINE $C9CD ***************************************************************************
COMMENT_LINE $C9CD insert your variables (RAM usage) in the BSS section
COMMENT_LINE $C9CD user RAM starts at $c880
COMMENT_LINE $C9CD ;;;;;;;;;
COMMENT_LINE $C9CD ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9CD ;;; Game vars
COMMENT_LINE $C9CD ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9CD followed by the storage area for abve defined lists
COMMENT $CB26 word 3 byte! x = word
COMMENT $CB26 word
COMMENT $CB26 word
COMMENT_LINE $CB9D RAM used in boss fights
COMMENT_LINE $CB63 23 byte following
COMMENT_LINE $CB6C BOSS 1
COMMENT_LINE $CB7A BOSS 2
COMMENT $CB71 1 = grow; 0 = shrink
COMMENT $CB72 1 = grow; 0 = shrink
COMMENT_LINE $CB73 BOSS 3
COMMENT_LINE $CB5F four to much!
COMMENT_LINE $CB63 BOSS 4
COMMENT_LINE $CAC5 org bossfightStart -4- BOSS4_LASER_COUNT*(Boss4LaserBeam+Boss4GroundExplosion)
COMMENT_LINE $CAE2 ***************************************************************************
COMMENT_LINE $CAE2 HEADER SECTION
COMMENT_LINE $CAE2 ***************************************************************************
COMMENT_LINE $CAE2 The cartridge ROM starts at address 0
COMMENT_LINE $0000 for dissi compatability I leave the header in for now!
COMMENT_LINE $0000 the first few bytes are mandatory, otherwise the BIOS will not load
COMMENT_LINE $0000 the ROM file, and will start MineStorm instead
COMMENT $0000 'g' is copyright sign
COMMENT $000B music from the rom
COMMENT $000D hight, width, rel y, rel x (from 0,0)
COMMENT $0011 some game information, ending with $80
COMMENT $001D hight, width, rel y, rel x (from 0,0)
COMMENT $0021 some game information
COMMENT_LINE $002E if  VECFEVER = 1
COMMENT_LINE $002E DB       $F8, $50, -$00, -$50           ; hight, width, rel y, rel x (from 0,0)
COMMENT_LINE $002E DB       "GOLD 5 (VF)", $80            ; some game information, ending with $80
COMMENT_LINE $002E else
COMMENT_LINE $002E DB       $F8, $50, -$00, -$30           ; hight, width, rel y, rel x (from 0,0)
COMMENT_LINE $002E DB       "GOLD 5", $80                 ; some game information, ending with $80
COMMENT_LINE $002E endif
COMMENT $002E end of game header
COMMENT_LINE $002F ***************************************************************************
COMMENT_LINE $002F CODE SECTION
COMMENT_LINE $002F ***************************************************************************
FORCE_SYMBOL $002F main
COMMENT_LINE $0032 .....................................................
COMMENT_LINE $0032 todo
COMMENT_LINE $0032 ensure T1 setup correctly
COMMENT_LINE $0032 - it usually is
COMMENT $0032 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0032
FORCE_SYMBOL $0034 VIA_int_enable
COMMENT_LINE $0036 and now "trigger a interrupt
COMMENT $0036 a VERY short T1 timer
FORCE_NO_SYMBOL $0036
FORCE_SYMBOL $0038 VIA_t1_cnt_lo
COMMENT $003B start timer
FORCE_SYMBOL $003B VIA_t1_cnt_hi
COMMENT $003D Peer Test
COMMENT_LINE $003F by the time, the macros "leaves" the interrupt is set!
COMMENT $003F Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $003F
COMMENT $0041 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0041 VIA_DDR_b
COMMENT $0043 A = $01, B = 0
FORCE_NO_SYMBOL $0043
COMMENT $0045 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0045 VIA_port_b
FORCE_NO_SYMBOL $0047
COMMENT_LINE $0049 PB6 1
COMMENT_LINE $0049 todo
COMMENT_LINE $0049 ensure T1 setup correctly
COMMENT_LINE $0049 - it usually is
COMMENT $0049 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0049
FORCE_SYMBOL $004B VIA_int_enable
COMMENT_LINE $004D and now "trigger a interrupt
COMMENT $004D a VERY short T1 timer
FORCE_NO_SYMBOL $004D
FORCE_SYMBOL $004F VIA_t1_cnt_lo
COMMENT $0052 start timer
FORCE_SYMBOL $0052 VIA_t1_cnt_hi
COMMENT $0054 Peer Test
COMMENT_LINE $0056 by the time, the macros "leaves" the interrupt is set!
COMMENT $0056 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0056
COMMENT $0058 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0058 VIA_DDR_b
COMMENT $005A A = $01, B = 0
FORCE_NO_SYMBOL $005A
COMMENT $005C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $005C VIA_port_b
FORCE_NO_SYMBOL $005E
COMMENT $0060 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0060
COMMENT $0062 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0062 VIA_DDR_b
COMMENT $0064 A = $01, B = 0
FORCE_NO_SYMBOL $0064
COMMENT $0066 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0066 VIA_port_b
COMMENT $0068 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0068
FORCE_SYMBOL $006A VIA_int_enable
COMMENT_LINE $006C ensure shift is "normal"
COMMENT $006C 0 = shift,
FORCE_NO_SYMBOL $006C
FORCE_SYMBOL $006E VIA_aux_cntl
FORCE_SYMBOL $0070 gameScale
FORCE_SYMBOL $0073 VIA_t1_cnt_lo
COMMENT_LINE $0076 todo
COMMENT_LINE $0076 ensure T1 setup correctly
COMMENT_LINE $0076 - it usually is
COMMENT $0076 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0076
FORCE_SYMBOL $0078 VIA_int_enable
COMMENT_LINE $007A and now "trigger a interrupt
COMMENT $007A a VERY short T1 timer
FORCE_NO_SYMBOL $007A
FORCE_SYMBOL $007C VIA_t1_cnt_lo
COMMENT $007F start timer
FORCE_SYMBOL $007F VIA_t1_cnt_hi
COMMENT $0081 Peer Test
COMMENT_LINE $0083 by the time, the macros "leaves" the interrupt is set!
COMMENT $0083 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0083
COMMENT $0085 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0085 VIA_DDR_b
COMMENT $0087 A = $01, B = 0
FORCE_NO_SYMBOL $0087
COMMENT $0089 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0089 VIA_port_b
FORCE_NO_SYMBOL $008B
COMMENT $008D Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $008D
COMMENT $008F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $008F VIA_DDR_b
COMMENT $0091 A = $01, B = 0
FORCE_NO_SYMBOL $0091
COMMENT $0093 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0093 VIA_port_b
COMMENT $0095 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0095
FORCE_SYMBOL $0097 VIA_int_enable
COMMENT_LINE $0099 ensure shift is "normal"
COMMENT $0099 0 = shift,
FORCE_NO_SYMBOL $0099
FORCE_SYMBOL $009B VIA_aux_cntl
COMMENT $009E ensure that shift can generate interrupt
FORCE_NO_SYMBOL $009E
COMMENT_LINE $00A1 for some reason or another, VIA doesn't like a
COMMENT_LINE $00A1 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00A1 (only on a real vectrex, not Vide)
FORCE_SYMBOL $00A1 VIA_aux_cntl
COMMENT $00A3 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00A3 VIA_shift_reg
COMMENT $00A5 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00A5
FORCE_SYMBOL $00A7 VIA_int_enable
COMMENT_LINE $00A9 wait 20 cycles till store of aux (these are 23)
COMMENT $00A9 12
COMMENT $00AA 3
FORCE_NO_SYMBOL $00AA
COMMENT_LINE $00AC nop      10
FORCE_SYMBOL $00AC VIA_aux_cntl
COMMENT $00AE Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00AE
COMMENT $00B0 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00B0 VIA_DDR_b
COMMENT $00B2 A = $01, B = 0
FORCE_NO_SYMBOL $00B2
COMMENT $00B4 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00B4 VIA_port_b
FORCE_NO_SYMBOL $00B6
COMMENT $00B8 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $00B8
COMMENT $00BA all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00BA VIA_DDR_b
COMMENT $00BC A = $01, B = 0
FORCE_NO_SYMBOL $00BC
COMMENT $00BE ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00BE VIA_port_b
COMMENT $00C0 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C0
FORCE_SYMBOL $00C2 VIA_int_enable
COMMENT_LINE $00C4 ensure shift is "normal"
COMMENT $00C4 0 = shift,
FORCE_NO_SYMBOL $00C4
FORCE_SYMBOL $00C6 VIA_aux_cntl
COMMENT_LINE $00C9 PB6 stays
COMMENT_LINE $00C9 todo
COMMENT_LINE $00C9 ensure T1 setup correctly
COMMENT_LINE $00C9 - it usually is
COMMENT $00C9 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C9
FORCE_SYMBOL $00CB VIA_int_enable
COMMENT_LINE $00CD and now "trigger a interrupt
COMMENT $00CD a VERY short T1 timer
FORCE_NO_SYMBOL $00CD
FORCE_SYMBOL $00CF VIA_t1_cnt_lo
COMMENT $00D2 start timer
FORCE_SYMBOL $00D2 VIA_t1_cnt_hi
COMMENT $00D4 Peer Test
COMMENT_LINE $00D6 by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $00D6
COMMENT $00D8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00D8
FORCE_SYMBOL $00DA VIA_int_enable
COMMENT_LINE $00DC ensure shift is "normal"
COMMENT $00DC 0 = shift,
FORCE_NO_SYMBOL $00DC
FORCE_SYMBOL $00DE VIA_aux_cntl
COMMENT_LINE $00E1 PB6 stays
COMMENT $00E1 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $00E1
COMMENT_LINE $00E4 for some reason or another, VIA doesn't like a
COMMENT_LINE $00E4 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00E4 (only on a real vectrex, not Vide)
FORCE_SYMBOL $00E4 VIA_aux_cntl
COMMENT $00E6 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00E6 VIA_shift_reg
COMMENT $00E8 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00E8
FORCE_SYMBOL $00EA VIA_int_enable
COMMENT_LINE $00EC wait 20 cycles till store of aux (these are 23)
COMMENT $00EC 12
COMMENT $00ED 3
FORCE_NO_SYMBOL $00ED
COMMENT_LINE $00EF nop      10
FORCE_SYMBOL $00EF VIA_aux_cntl
FORCE_NO_SYMBOL $00F1
COMMENT $00F3 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00F3
FORCE_SYMBOL $00F5 VIA_int_enable
COMMENT_LINE $00F7 ensure shift is "normal"
COMMENT $00F7 0 = shift,
FORCE_NO_SYMBOL $00F7
FORCE_SYMBOL $00F9 VIA_aux_cntl
COMMENT_LINE $00FC for now only changes IRQ and y reg
COMMENT_LINE $00FC ...........
COMMENT $00FC Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00FC
COMMENT $00FE all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00FE VIA_DDR_b
COMMENT $0100 A = $01, B = 0
FORCE_NO_SYMBOL $0100
COMMENT $0102 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0102 VIA_port_b
COMMENT_LINE $0106 ...........
COMMENT $0106 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0106
COMMENT $0108 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0108 VIA_DDR_b
COMMENT $010A A = $01, B = 0
FORCE_NO_SYMBOL $010A
COMMENT $010C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $010C VIA_port_b
COMMENT $010E ensure that shift can generate interrupt
FORCE_NO_SYMBOL $010E
COMMENT_LINE $0111 for some reason or another, VIA doesn't like a
COMMENT_LINE $0111 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0111 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0111 VIA_aux_cntl
COMMENT $0113 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0113 VIA_shift_reg
COMMENT $0115 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0115
FORCE_SYMBOL $0117 VIA_int_enable
COMMENT_LINE $0119 wait 20 cycles till store of aux (these are 23)
COMMENT $0119 12
COMMENT $011A 3
FORCE_NO_SYMBOL $011A
COMMENT_LINE $011C nop      10
FORCE_SYMBOL $011C VIA_aux_cntl
FORCE_NO_SYMBOL $011E
COMMENT_LINE $0120 ...........
COMMENT $0120 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0120
FORCE_SYMBOL $0122 VIA_int_enable
COMMENT_LINE $0124 ensure shift is "normal"
COMMENT $0124 0 = shift,
FORCE_NO_SYMBOL $0124
FORCE_SYMBOL $0126 VIA_aux_cntl
COMMENT $0128 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0128
COMMENT $012A all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $012A VIA_DDR_b
COMMENT $012C A = $01, B = 0
FORCE_NO_SYMBOL $012C
COMMENT $012E ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $012E VIA_port_b
FORCE_NO_SYMBOL $0130
COMMENT_LINE $0132 ...........
COMMENT_LINE $0132 _jmpBankIRQ3X
COMMENT_LINE $0132 ATTENTION!
COMMENT_LINE $0132 THIS DOES NOT WORK ON A REAL VECTREX
COMMENT_LINE $0132 DUNNO WHY?
COMMENT_LINE $0132 AUX setting is needed, when SHIFT was changed!
COMMENT_LINE $0132 IRQ_TO_1
COMMENT_LINE $0132 PB6_TO_1
COMMENT_LINE $0132 jmp      ,x
COMMENT_LINE $0132 ...........
COMMENT $0132 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0132
COMMENT $0134 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0134 VIA_DDR_b
COMMENT $0136 A = $01, B = 0
FORCE_NO_SYMBOL $0136
COMMENT $0138 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0138 VIA_port_b
COMMENT $013A 0 = shift,
FORCE_NO_SYMBOL $013A
FORCE_SYMBOL $013D VIA_shift_reg
FORCE_SYMBOL $013F VIA_aux_cntl
COMMENT $0141 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0141
FORCE_SYMBOL $0143 VIA_int_enable
FORCE_NO_SYMBOL $0145
COMMENT_LINE $0147 ...........
COMMENT $0147 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0147
FORCE_SYMBOL $0149 VIA_int_enable
COMMENT_LINE $014B ensure shift is "normal"
COMMENT $014B 0 = shift,
FORCE_NO_SYMBOL $014B
FORCE_SYMBOL $014D VIA_aux_cntl
FORCE_NO_SYMBOL $014F
COMMENT $0151 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $0151
COMMENT_LINE $0154 for some reason or another, VIA doesn't like a
COMMENT_LINE $0154 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0154 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0154 VIA_aux_cntl
COMMENT $0156 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0156 VIA_shift_reg
COMMENT $0158 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0158
FORCE_SYMBOL $015A VIA_int_enable
COMMENT_LINE $015C wait 20 cycles till store of aux (these are 23)
COMMENT $015C 12
COMMENT $015D 3
FORCE_NO_SYMBOL $015D
COMMENT_LINE $015F nop      10
FORCE_SYMBOL $015F VIA_aux_cntl
COMMENT_LINE $0162 ...........
COMMENT_LINE $0162 PB6 stays 1
COMMENT_LINE $0162 todo
COMMENT_LINE $0162 ensure T1 setup correctly
COMMENT_LINE $0162 - it usually is
COMMENT $0162 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0162
FORCE_SYMBOL $0164 VIA_int_enable
COMMENT_LINE $0166 and now "trigger a interrupt
COMMENT $0166 a VERY short T1 timer
FORCE_NO_SYMBOL $0166
FORCE_SYMBOL $0168 VIA_t1_cnt_lo
COMMENT $016B start timer
FORCE_SYMBOL $016B VIA_t1_cnt_hi
COMMENT $016D Peer Test
COMMENT_LINE $016F by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $016F
COMMENT $0171 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0171
FORCE_SYMBOL $0173 VIA_int_enable
COMMENT_LINE $0175 ensure shift is "normal"
COMMENT $0175 0 = shift,
FORCE_NO_SYMBOL $0175
FORCE_SYMBOL $0177 VIA_aux_cntl
COMMENT_LINE $017A ...........
COMMENT $017A Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $017A
COMMENT $017C all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $017C VIA_DDR_b
COMMENT $017E A = $01, B = 0
FORCE_NO_SYMBOL $017E
COMMENT $0180 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0180 VIA_port_b
FORCE_NO_SYMBOL $0182
COMMENT $0184 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0184
COMMENT $0186 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0186 VIA_DDR_b
COMMENT $0188 A = $01, B = 0
FORCE_NO_SYMBOL $0188
COMMENT $018A ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $018A VIA_port_b
COMMENT_LINE $018D ...........
COMMENT $018D Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $018D
COMMENT $018F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $018F VIA_DDR_b
COMMENT $0191 A = $01, B = 0
FORCE_NO_SYMBOL $0191
COMMENT $0193 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0193 VIA_port_b
COMMENT $0195 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0195
FORCE_SYMBOL $0197 VIA_int_enable
COMMENT_LINE $0199 ensure shift is "normal"
COMMENT $0199 0 = shift,
FORCE_NO_SYMBOL $0199
FORCE_SYMBOL $019B VIA_aux_cntl
FORCE_NO_SYMBOL $019D
COMMENT_LINE $019F todo
COMMENT_LINE $019F ensure T1 setup correctly
COMMENT_LINE $019F - it usually is
COMMENT $019F bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $019F
FORCE_SYMBOL $01A1 VIA_int_enable
COMMENT_LINE $01A3 and now "trigger a interrupt
COMMENT $01A3 a VERY short T1 timer
FORCE_NO_SYMBOL $01A3
FORCE_SYMBOL $01A5 VIA_t1_cnt_lo
COMMENT $01A8 start timer
FORCE_SYMBOL $01A8 VIA_t1_cnt_hi
COMMENT $01AA Peer Test
COMMENT_LINE $01AC by the time, the macros "leaves" the interrupt is set!
COMMENT $01AC Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01AC
COMMENT $01AE all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01AE VIA_DDR_b
COMMENT $01B0 A = $01, B = 0
FORCE_NO_SYMBOL $01B0
COMMENT $01B2 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01B2 VIA_port_b
COMMENT $01B5 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $01B5
COMMENT $01B7 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01B7 VIA_DDR_b
COMMENT $01B9 A = $01, B = 0
FORCE_NO_SYMBOL $01B9
COMMENT $01BB ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01BB VIA_port_b
COMMENT $01BD bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01BD
FORCE_SYMBOL $01BF VIA_int_enable
COMMENT_LINE $01C1 ensure shift is "normal"
COMMENT $01C1 0 = shift,
FORCE_NO_SYMBOL $01C1
FORCE_SYMBOL $01C3 VIA_aux_cntl
FORCE_NO_SYMBOL $01C5
COMMENT $01C7 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01C7
COMMENT_LINE $01CA for some reason or another, VIA doesn't like a
COMMENT_LINE $01CA std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01CA (only on a real vectrex, not Vide)
FORCE_SYMBOL $01CA VIA_aux_cntl
COMMENT $01CC and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01CC VIA_shift_reg
COMMENT $01CE bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01CE
FORCE_SYMBOL $01D0 VIA_int_enable
COMMENT_LINE $01D2 wait 20 cycles till store of aux (these are 23)
COMMENT $01D2 12
COMMENT $01D3 3
FORCE_NO_SYMBOL $01D3
COMMENT_LINE $01D5 nop      10
FORCE_SYMBOL $01D5 VIA_aux_cntl
COMMENT $01D7 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01D7
COMMENT $01D9 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01D9 VIA_DDR_b
COMMENT $01DB A = $01, B = 0
FORCE_NO_SYMBOL $01DB
COMMENT $01DD ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01DD VIA_port_b
COMMENT $01E0 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01E0
COMMENT $01E2 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01E2 VIA_DDR_b
COMMENT $01E4 A = $01, B = 0
FORCE_NO_SYMBOL $01E4
COMMENT $01E6 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01E6 VIA_port_b
COMMENT $01E8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01E8
FORCE_SYMBOL $01EA VIA_int_enable
COMMENT_LINE $01EC ensure shift is "normal"
COMMENT $01EC 0 = shift,
FORCE_NO_SYMBOL $01EC
FORCE_SYMBOL $01EE VIA_aux_cntl
FORCE_NO_SYMBOL $01F0
COMMENT $01F2 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01F2
COMMENT_LINE $01F5 for some reason or another, VIA doesn't like a
COMMENT_LINE $01F5 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01F5 (only on a real vectrex, not Vide)
FORCE_SYMBOL $01F5 VIA_aux_cntl
COMMENT $01F7 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01F7 VIA_shift_reg
COMMENT $01F9 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01F9
FORCE_SYMBOL $01FB VIA_int_enable
COMMENT_LINE $01FD wait 20 cycles till store of aux (these are 23)
COMMENT $01FD 12
COMMENT $01FE 3
FORCE_NO_SYMBOL $01FE
COMMENT_LINE $0200 nop      10
FORCE_SYMBOL $0200 VIA_aux_cntl
COMMENT $0202 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0202
COMMENT $0204 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0204 VIA_DDR_b
COMMENT $0206 A = $01, B = 0
FORCE_NO_SYMBOL $0206
COMMENT $0208 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0208 VIA_port_b
COMMENT $020B Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $020B
COMMENT $020D all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $020D VIA_DDR_b
COMMENT $020F A = $01, B = 0
FORCE_NO_SYMBOL $020F
COMMENT $0211 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0211 VIA_port_b
COMMENT $0213 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0213
FORCE_SYMBOL $0215 VIA_int_enable
COMMENT_LINE $0217 ensure shift is "normal"
COMMENT $0217 0 = shift,
FORCE_NO_SYMBOL $0217
FORCE_SYMBOL $0219 VIA_aux_cntl
FORCE_NO_SYMBOL $021B
COMMENT $021D bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $021D
FORCE_SYMBOL $021F VIA_int_enable
COMMENT_LINE $0221 ensure shift is "normal"
COMMENT $0221 0 = shift,
FORCE_NO_SYMBOL $0221
FORCE_SYMBOL $0223 VIA_aux_cntl
FORCE_NO_SYMBOL $0225
COMMENT_LINE $0227 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0227 initialize jumps across bank
COMMENT_LINE $0227 one accros bank JSR (inclusive all) takes 46 cycles!
COMMENT_LINE $0227 these are bank switches only from bank 2 / 3
COMMENT_LINE $0227 IRQ is allways not enabled!
COMMENT_LINE $0227 bank 0 here means bank 2
COMMENT_LINE $0227 bank 1 here means bank 3
COMMENT_LINE $0227 (remnants from using only 2 banks)
COMMENT_LINE $0227 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0227 ensure bank 0
COMMENT_LINE $0227 ensure bit 6 = 0
COMMENT_LINE $0227 PB6_TO_0
COMMENT $0227 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0227
COMMENT $0229 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0229 VIA_DDR_b
COMMENT $022B A = $01, B = 0
FORCE_NO_SYMBOL $022B
COMMENT $022D ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $022D VIA_port_b
FORCE_NO_SYMBOL $022F
COMMENT_LINE $0231 ensure bank1
COMMENT $0231 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0231
COMMENT $0233 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0233 VIA_DDR_b
COMMENT_LINE $0236 ...........
COMMENT_LINE $0236 ensure bank 0
COMMENT_LINE $0236 ensure bit 6 = 0
COMMENT $0236 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0236
COMMENT $0238 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0238 VIA_DDR_b
COMMENT $023A A = $01, B = 0
FORCE_NO_SYMBOL $023A
COMMENT $023C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $023C VIA_port_b
FORCE_NO_SYMBOL $023E
COMMENT_LINE $0240 ...........
COMMENT_LINE $0240 ensure bank1
COMMENT $0240 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0240
COMMENT $0242 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0242 VIA_DDR_b
FORCE_NO_SYMBOL $0244
COMMENT_LINE $0246 ensure bank 0
COMMENT_LINE $0246 ensure bit 6 = 0
COMMENT $0246 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0246
COMMENT $0248 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0248 VIA_DDR_b
COMMENT $024A A = $01, B = 0
FORCE_NO_SYMBOL $024A
COMMENT $024C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $024C VIA_port_b
COMMENT_LINE $024F ...........
COMMENT_LINE $024F ensure bank 0
COMMENT_LINE $024F ensure bit 6 = 0
COMMENT $024F Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $024F
COMMENT $0251 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0251 VIA_DDR_b
FORCE_NO_SYMBOL $0253
COMMENT_LINE $0255 ...........
COMMENT_LINE $0255 changes y instead of d
COMMENT_LINE $0255 ensure bank1
FORCE_NO_SYMBOL $0255
FORCE_SYMBOL $0259 VIA_port_a
FORCE_NO_SYMBOL $025C
COMMENT_LINE $025E ensure bank 0
COMMENT_LINE $025E ensure bit 6 = 0
FORCE_NO_SYMBOL $025E
FORCE_SYMBOL $0261 VIA_port_b
FORCE_NO_SYMBOL $0263
FORCE_SYMBOL $0266 VIA_port_a
COMMENT_LINE $0269 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0269 ensure bank1
COMMENT $0269 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0269
COMMENT $026B all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $026B VIA_DDR_b
FORCE_NO_SYMBOL $026D
COMMENT_LINE $0270 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0270 ensure bank1
COMMENT $0270 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0270
COMMENT $0272 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0272 VIA_DDR_b
FORCE_NO_SYMBOL $0274
COMMENT_LINE $0277 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0277 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0277
COMMENT $0279 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0279 VIA_DDR_b
FORCE_NO_SYMBOL $027B
COMMENT_LINE $027E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $027E A = $01, B = 0
FORCE_NO_SYMBOL $027E
COMMENT $0280 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0280 VIA_port_b
COMMENT $0282 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0282
COMMENT $0284 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0284 VIA_DDR_b
FORCE_SYMBOL $0286 gameLoopPart0
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0289 A = $01, B = 0
FORCE_NO_SYMBOL $0289
COMMENT $028B ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $028B VIA_port_b
COMMENT $028D Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $028D
COMMENT $028F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $028F VIA_DDR_b
FORCE_SYMBOL $0291 gameLoopPart0_m
COMMENT_LINE $0294 .....................................................
COMMENT_LINE $0294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0294 used in boss 3
COMMENT_LINE $0294 must be in bank 0 & 1, since here(0) the letters are
COMMENT_LINE $0294 defined, and the behaviour is located in (1)!
COMMENT_LINE $0294 switching between banks is done within this routine!
COMMENT_LINE $0294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0294 A = $01, B = 0
FORCE_NO_SYMBOL $0294
COMMENT $0296 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0296 VIA_port_b
COMMENT $0298 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0298
COMMENT $029A all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $029A VIA_DDR_b
FORCE_NO_SYMBOL $029C
FORCE_SYMBOL $029E VIA_int_flags
COMMENT $02A2 Get next coordinate pair
FORCE_NO_SYMBOL $02A2
COMMENT $02A4 Send Y to A/D
FORCE_SYMBOL $02A4 VIA_port_a
COMMENT $02A6 Enable mux
FORCE_SYMBOL $02A6 VIA_port_b
COMMENT $02A8 Get pattern byte?
FORCE_NO_SYMBOL $02A8
COMMENT $02AA Advance to next point in list
FORCE_NO_SYMBOL $02AA
COMMENT $02AC Disable mux
FORCE_SYMBOL $02AC VIA_port_b
COMMENT $02AE Send X to A/D
FORCE_SYMBOL $02AE VIA_port_a
COMMENT $02B0 Store pattern in shift register
FORCE_SYMBOL $02B0 VIA_shift_reg
COMMENT $02B2 Clear T1H
FORCE_SYMBOL $02B2 VIA_t1_cnt_hi
COMMENT $02B4 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $02B4
COMMENT $02B7 Wait for T1 to time out
FORCE_SYMBOL $02B7 VIA_int_flags
COMMENT $02BB Wait a moment more
COMMENT $02BC Clear shift register (blank output)
FORCE_SYMBOL $02BC VIA_shift_reg
COMMENT $02BE Get next pattern byte
FORCE_NO_SYMBOL $02BE
COMMENT $02C0 Go back if high bit of pattern is set
COMMENT_LINE $02C2 zero
FORCE_SYMBOL $02C2 gameScale
FORCE_NO_SYMBOL $02C5
FORCE_SYMBOL $02C7 VIA_t1_cnt_lo
FORCE_SYMBOL $02C9 VIA_shift_reg
FORCE_NO_SYMBOL $02CB
COMMENT $02CD /BLANK low and /ZERO low
FORCE_SYMBOL $02CD VIA_cntl
FORCE_NO_SYMBOL $02CF
FORCE_SYMBOL $02D2 VIA_port_b
COMMENT_LINE $02D4 ensure bank1
COMMENT $02D4 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $02D4
COMMENT $02D6 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $02D6 VIA_DDR_b
FORCE_NO_SYMBOL $02D8
COMMENT_LINE $02DA ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 CODE SECTION
COMMENT_LINE $0000 ***************************************************************************
FORCE_SYMBOL $0355 isDemoMode
COMMENT_LINE $0358 init VecVox
COMMENT $0358 voxInit
FORCE_NO_SYMBOL $0358
FORCE_SYMBOL $035B jsrBank0_fromBank2_Shift
FORCE_SYMBOL $035E DEFAULT_DIFFICULTY
FORCE_SYMBOL $0360 difficulty
COMMENT_LINE $0363 if not done before -> do calibration -> than a warm reset
FORCE_NO_SYMBOL $0363
FORCE_SYMBOL $0365 random_seed
FORCE_NO_SYMBOL $0368
FORCE_SYMBOL $036A random_seed2
COMMENT $036D CBFC correct the stack to default address (Overwriting IRQ vectors etc)
FORCE_SYMBOL $036D MY_STACK
FORCE_NO_SYMBOL $0371
FORCE_SYMBOL $0373 current_button_state
FORCE_SYMBOL $0376 last_button_state
FORCE_SYMBOL $0379 additionalFlags
COMMENT $037C checkFlash
FORCE_NO_SYMBOL $037C
FORCE_SYMBOL $037F jsrBank0_fromBank2_Shift
FORCE_SYMBOL $0382 flashAvailable
FORCE_SYMBOL $0385 FLASH_AVAILABLE_BIT
COMMENT $0389 displayFlashError
FORCE_NO_SYMBOL $0389
FORCE_SYMBOL $038C jmpBankIRQ0Shift
COMMENT $038F initFlash
FORCE_NO_SYMBOL $038F
FORCE_SYMBOL $0392 jsrBank0_fromBank2_Shift
FORCE_SYMBOL $0395 joystickDir
COMMENT $0398 CBFC correct the stack to default address (Overwriting IRQ vectors etc)
FORCE_SYMBOL $0398 MY_STACK
FORCE_NO_SYMBOL $039C
FORCE_SYMBOL $039E current_button_state
FORCE_SYMBOL $03A1 last_button_state
FORCE_SYMBOL $03A4 diverseFlags
FORCE_NO_SYMBOL $03A7
FORCE_SYMBOL $03A9 diverseFlags
COMMENT $03AC get button status
FORCE_SYMBOL $03AC Read_Btns
COMMENT $03AF button pressed - any
FORCE_NO_SYMBOL $03AF
FORCE_NO_SYMBOL $03B2
FORCE_SYMBOL $03B6 additionalFlags
FORCE_SYMBOL $03B9 BIT_RAN_CALIBRATION
COMMENT $03BB calibration was already done!
COMMENT $03BF showFirstHelp
FORCE_NO_SYMBOL $03BF
FORCE_SYMBOL $03C2 jmpBankIRQ0Shift
COMMENT_LINE $03C5 ***************************************************************************
COMMENT_LINE $041F ***************************************************************************
FORCE_NO_SYMBOL $041F
FORCE_SYMBOL $0422 sfx_pointer_3
FORCE_SYMBOL $0425 sfx_pointer_2
FORCE_SYMBOL $0428 sfx_pointer_1
COMMENT $042B no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $042B Vec_Music_Flag
COMMENT $042E shadow regs
FORCE_SYMBOL $042E Init_Music_Buf
COMMENT $0431 ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $0431 Do_Sound
FORCE_SYMBOL $0435 difficulty
FORCE_SYMBOL $0438 HARDCORE
FORCE_NO_SYMBOL $043C
FORCE_SYMBOL $043E difficulty
FORCE_SYMBOL $0441 fromGameOver
FORCE_SYMBOL $0446 optionDir
FORCE_NO_SYMBOL $0449
FORCE_SYMBOL $044B Vec_Joy_Mux_1_X
FORCE_NO_SYMBOL $044E
FORCE_SYMBOL $0450 Vec_Joy_Mux_1_Y
COMMENT $0453 4 ; default on BACK
FORCE_SYMBOL $0453 OPTION_BACK
FORCE_SYMBOL $0455 selectedOption
FORCE_SYMBOL $0458 selectedOption
FORCE_SYMBOL $045B OPTION_DIFFICULTY
FORCE_SYMBOL $045F Vec_Joy_1_X
FORCE_SYMBOL $0466 chosenStartLevel
FORCE_SYMBOL $0469 chosenStartLevel
FORCE_SYMBOL $046C maxLevelReached
FORCE_SYMBOL $0471 maxLevelReached
FORCE_SYMBOL $0474 chosenStartLevel
FORCE_SYMBOL $0479 chosenStartLevel
FORCE_SYMBOL $047C chosenStartLevel
FORCE_SYMBOL $0481 chosenStartLevel
COMMENT $0484 get button status
FORCE_SYMBOL $0484 Read_Btns
FORCE_NO_SYMBOL $0487
FORCE_NO_SYMBOL $048E
COMMENT $0492 showOptionHelp
FORCE_NO_SYMBOL $0492
FORCE_SYMBOL $0495 jmpBankIRQ0Shift
FORCE_NO_SYMBOL $0498
FORCE_SYMBOL $049C beQuiet
FORCE_SYMBOL $049F displayTitlePic1
FORCE_SYMBOL $04A2 selectedOption
FORCE_SYMBOL $04A5 OPTION_BACK
FORCE_SYMBOL $04AB OPTION_RESET
FORCE_SYMBOL $04B1 OPTION_SECRETS
FORCE_SYMBOL $04B7 OPTION_CALIBRATE
FORCE_SYMBOL $04BD OPTION_MODE
FORCE_SYMBOL $04C3 OPTION_DIFFICULTY
FORCE_SYMBOL $04C7 difficulty
FORCE_SYMBOL $04CA difficulty
FORCE_NO_SYMBOL $04CD
FORCE_SYMBOL $04CF SUPER_IMPOSSIBLE
FORCE_SYMBOL $04D3 difficulty
FORCE_NO_SYMBOL $04D6
FORCE_SYMBOL $04D8 difficulty
FORCE_SYMBOL $04DD SUPER_IMPOSSIBLE
FORCE_SYMBOL $04E4 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK2
FORCE_SYMBOL $04E8 difficulty
FORCE_NO_SYMBOL $04EB
FORCE_SYMBOL $04ED difficulty
FORCE_SYMBOL $04F0 IMPOSSIBLE
FORCE_SYMBOL $04F7 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK3
FORCE_SYMBOL $04FB difficulty
FORCE_NO_SYMBOL $04FE
FORCE_SYMBOL $0500 difficulty
FORCE_SYMBOL $0503 HARD
FORCE_SYMBOL $050A ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK4
FORCE_SYMBOL $050E difficulty
FORCE_NO_SYMBOL $0511
FORCE_SYMBOL $0513 difficulty
FORCE_SYMBOL $0516 NORMAL
FORCE_SYMBOL $051D ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK5
FORCE_SYMBOL $0521 difficulty
FORCE_NO_SYMBOL $0524
FORCE_SYMBOL $0526 difficulty
FORCE_SYMBOL $0529 EASY
FORCE_SYMBOL $052D difficulty
FORCE_NO_SYMBOL $0530
FORCE_SYMBOL $0532 SUPER_IMPOSSIBLE
FORCE_SYMBOL $0534 difficulty
COMMENT_LINE $0537 jsr Joy_Digital
FORCE_SYMBOL $0537 JoyDigitalHorizontal00
FORCE_SYMBOL $053A JoyDigitalVertical00
FORCE_SYMBOL $053D Vec_Joy_1_Y
FORCE_SYMBOL $0544 optionDir
FORCE_SYMBOL $0549 selectedOption
FORCE_SYMBOL $054E selectedOption
FORCE_SYMBOL $0553 optionDir
FORCE_SYMBOL $0558 difficulty
COMMENT_LINE $055D here either negative
COMMENT_LINE $055D or != 0 positive
FORCE_NO_SYMBOL $055D
FORCE_SYMBOL $055F difficulty
FORCE_NO_SYMBOL $0564
FORCE_SYMBOL $0566 difficulty
FORCE_SYMBOL $056B optionDir
FORCE_NO_SYMBOL $056E
FORCE_SYMBOL $0572 selectedOption
FORCE_SYMBOL $0575 MAX_OPTION
COMMENT $0577 noChangeSelPos
FORCE_SYMBOL $0579 selectedOption
FORCE_NO_SYMBOL $057C
FORCE_SYMBOL $057E optionDir
FORCE_SYMBOL $0583 flashAvailable
COMMENT $0586 no game available
FORCE_SYMBOL $0586 SAVEGAME_AVAILABLE_BIT
COMMENT_LINE $058C save game is availabel and "asked for
COMMENT $058C showLoadMessage
FORCE_NO_SYMBOL $058C
FORCE_SYMBOL $058F jsrBank0_fromBank2_Shift
COMMENT $0592 yes
FORCE_NO_SYMBOL $0592
COMMENT $0598 loadGameFromFlash
FORCE_NO_SYMBOL $0598
FORCE_SYMBOL $059B doShiftIRQ
FORCE_SYMBOL $059E optionDir
FORCE_SYMBOL $05A1 Wait_Recal
FORCE_NO_SYMBOL $05A4
FORCE_SYMBOL $05A7 VIA_port_b
FORCE_SYMBOL $05AA VIA_port_b
FORCE_SYMBOL $05AC calibrationValue16
FORCE_SYMBOL $05AF additionalFlags
FORCE_NO_SYMBOL $05B2
FORCE_NO_SYMBOL $05B6
FORCE_SYMBOL $05B8 VIA_port_b
COMMENT $05BA 2 cycles
FORCE_NO_SYMBOL $05BA
FORCE_SYMBOL $05BD VIA_port_a
FORCE_SYMBOL $05BF VIA_port_b
FORCE_NO_SYMBOL $05C3
FORCE_SYMBOL $05C5 VIA_port_b
COMMENT $05C7 2 cycles
FORCE_NO_SYMBOL $05C7
FORCE_SYMBOL $05CA VIA_port_a
FORCE_SYMBOL $05CE VIA_port_b
FORCE_SYMBOL $05D0 Intensity_3F
COMMENT $05D3 OBJECT_SCALE
FORCE_NO_SYMBOL $05D3
FORCE_SYMBOL $05D5 stringScale
FORCE_SYMBOL $05D8 currentPrintedOption
COMMENT_LINE $05DB ------ print Menu Start
FORCE_SYMBOL $05DB optionsMenu
FORCE_SYMBOL $05DE currentPrintedOption
FORCE_SYMBOL $05E1 selectedOption
FORCE_SYMBOL $05E6 Intensity_5F
FORCE_SYMBOL $05E9 gameScale
FORCE_SYMBOL $05EC VIA_t1_cnt_lo
FORCE_SYMBOL $05F0 printOneVectorString_D
FORCE_NO_SYMBOL $05F3
COMMENT $05F5 /BLANK low and /ZERO low
FORCE_SYMBOL $05F5 VIA_cntl
FORCE_SYMBOL $05F7 currentPrintedOption
FORCE_SYMBOL $05FA selectedOption
FORCE_SYMBOL $05FF Intensity_3F
FORCE_SYMBOL $0602 currentPrintedOption
FORCE_NO_SYMBOL $0605
COMMENT_LINE $0609 output new MODE
FORCE_NO_SYMBOL $0609
COMMENT $060B /BLANK low and /ZERO low
FORCE_SYMBOL $060B VIA_cntl
FORCE_SYMBOL $060D gameScale
FORCE_SYMBOL $0610 VIA_t1_cnt_lo
FORCE_SYMBOL $0612 dif_n
FORCE_SYMBOL $0615 difficulty
FORCE_SYMBOL $061A dif_hc
FORCE_NO_SYMBOL $061D
FORCE_NO_SYMBOL $0622
COMMENT $0624 /BLANK low and /ZERO low
FORCE_SYMBOL $0624 VIA_cntl
FORCE_SYMBOL $0626 gameScale
FORCE_SYMBOL $0629 VIA_t1_cnt_lo
FORCE_SYMBOL $062B difficulty
FORCE_NO_SYMBOL $062E
FORCE_SYMBOL $0631 difficultyStrings2
FORCE_NO_SYMBOL $0636
FORCE_NO_SYMBOL $063B
COMMENT $063D /BLANK low and /ZERO low
FORCE_SYMBOL $063D VIA_cntl
FORCE_SYMBOL $063F gameScale
FORCE_SYMBOL $0642 VIA_t1_cnt_lo
FORCE_SYMBOL $0644 chosenStartLevel
COMMENT_LINE $0648 change with Joy left right
FORCE_SYMBOL $0649 levelConversionString
FORCE_SYMBOL $064C wordToDecString
FORCE_NO_SYMBOL $064F
FORCE_SYMBOL $0651 leadingZeroToSpace
FORCE_NO_SYMBOL $0654
FORCE_NO_SYMBOL $065C
COMMENT $065E /BLANK low and /ZERO low
FORCE_SYMBOL $065E VIA_cntl
FORCE_SYMBOL $0660 flashAvailable
COMMENT $0663 no game available
FORCE_SYMBOL $0663 SAVEGAME_AVAILABLE_BIT
FORCE_SYMBOL $0669 gameScale
FORCE_SYMBOL $066C VIA_t1_cnt_lo
FORCE_NO_SYMBOL $066E
FORCE_SYMBOL $0671 Moveto_d
FORCE_NO_SYMBOL $0674
FORCE_SYMBOL $0676 VIA_t1_cnt_lo
FORCE_SYMBOL $0678 LoadDisk
FORCE_SYMBOL $067B SMVB_drawSmart
COMMENT_LINE $067E ------ print Menu End
FORCE_SYMBOL $067E optionsLoop
COMMENT_LINE $0681 in U pointer to string
COMMENT_LINE $0681 in D position
COMMENT $0681 Store Y in D/A register
FORCE_SYMBOL $0681 VIA_port_a
COMMENT $0683 Blank low, zero high?
FORCE_NO_SYMBOL $0683
FORCE_SYMBOL $0685 VIA_cntl
COMMENT $0688 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0688 VIA_port_b
COMMENT_LINE $068B nop
COMMENT $068B Disable mux
FORCE_SYMBOL $068B VIA_port_b
COMMENT $068D Store X in D/A register
FORCE_SYMBOL $068D VIA_port_a
COMMENT $068F enable timer
FORCE_SYMBOL $068F VIA_t1_cnt_hi
FORCE_SYMBOL $0691 stringScale
FORCE_SYMBOL $0694 VIA_t1_cnt_lo
COMMENT $0696 font starts at 32, *2 because of 16 bit pointer
FORCE_NO_SYMBOL $069C
FORCE_SYMBOL $069E VIA_int_flags
FORCE_SYMBOL $06A2 VIA_port_a
FORCE_SYMBOL $06A5 VIA_port_b
COMMENT $06A9 must be d, because otherwise it could be "negative"
COMMENT_LINE $06AC clra
COMMENT_LINE $06AC tst ,x+
COMMENT $06AC faster than tst?
COMMENT $06B0 Get next coordinate pair
FORCE_SYMBOL $06B2 VIA_shift_reg
COMMENT $06B4 Send Y to A/D
FORCE_SYMBOL $06B4 VIA_port_b
COMMENT $06B8 Disable mux
FORCE_SYMBOL $06B8 VIA_port_b
COMMENT $06BA Send X to A/D
FORCE_SYMBOL $06BA VIA_port_a
COMMENT $06BC Clear T1H
FORCE_SYMBOL $06BC VIA_t1_cnt_hi
COMMENT_LINE $06BE there are never to 0 after another
COMMENT $06BE Get next coordinate pair
COMMENT $06C2 Get next coordinate pair
FORCE_SYMBOL $06C4 VIA_shift_reg
COMMENT $06C6 Send Y to A/D
FORCE_SYMBOL $06C6 VIA_port_b
FORCE_NO_SYMBOL $06C8
COMMENT $06CA Disable mux
FORCE_SYMBOL $06CA VIA_port_b
COMMENT $06CC Send X to A/D
FORCE_SYMBOL $06CC VIA_port_a
COMMENT $06D0 Clear T1H
FORCE_SYMBOL $06D0 VIA_t1_cnt_hi
COMMENT $06D2 Store pattern in shift register
FORCE_SYMBOL $06D2 VIA_shift_reg
FORCE_NO_SYMBOL $06D4
COMMENT_LINE $06D6 nop
COMMENT $06DC Clear shift register (blank output)
FORCE_SYMBOL $06DC VIA_shift_reg
FORCE_NO_SYMBOL $06E3
COMMENT $06E5 recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $06E5 Vec_Loop_Count
FORCE_NO_SYMBOL $06E8
FORCE_SYMBOL $06EA Vec_Loop_Count
FORCE_SYMBOL $06ED VIA_t2_hi
FORCE_SYMBOL $06EF t2_rest
COMMENT $06F2 Wait for timer t2
FORCE_SYMBOL $06F2 VIA_int_flags
COMMENT $06F6 Store refresh value
FORCE_NO_SYMBOL $06F6
COMMENT $06F9 into timer t2
FORCE_SYMBOL $06F9 VIA_t2_lo
FORCE_NO_SYMBOL $06FB
COMMENT $06FE blank low and zero low
FORCE_SYMBOL $06FE VIA_cntl
COMMENT $0700 clear shift register
FORCE_SYMBOL $0700 VIA_shift_reg
COMMENT $0702 clear D/A register
FORCE_SYMBOL $0702 VIA_port_a
FORCE_NO_SYMBOL $0704
COMMENT $0707 mux=1, disable mux
FORCE_SYMBOL $0707 VIA_port_b
COMMENT $0709 mux=1, enable mux
FORCE_SYMBOL $0709 VIA_port_b
FORCE_NO_SYMBOL $070B
COMMENT $070D disable mux
FORCE_SYMBOL $070D VIA_port_b
COMMENT $0710 initCalibration1
FORCE_NO_SYMBOL $0710
FORCE_SYMBOL $0713 jmpBankIRQ0Shift
COMMENT_LINE $0716 ;main_01
COMMENT $0716 wait 1/2 second until button reacts again
FORCE_NO_SYMBOL $0716
FORCE_SYMBOL $0718 buttonWait
FORCE_SYMBOL $071B beQuiet
FORCE_SYMBOL $071E initTitleRAM
FORCE_SYMBOL $0721 additionalFlags
FORCE_SYMBOL $0724 BIT_TITLE_SEEN
COMMENT $0728 displayTitlePicture
FORCE_NO_SYMBOL $0728
FORCE_SYMBOL $072B jsrBank1_fromBank2_T1
FORCE_NO_SYMBOL $072E
FORCE_SYMBOL $0730 songLoop
COMMENT $0733 titleMusic
FORCE_NO_SYMBOL $0733
COMMENT $0736 PLYINIT
FORCE_NO_SYMBOL $0736
FORCE_SYMBOL $0739 jsrBank1_fromBank2_T1
COMMENT $073C initAllTitle
FORCE_NO_SYMBOL $073C
FORCE_SYMBOL $073F jsrBank0_fromBank2_T1
COMMENT $0742 random number of random inits (till player hits a button)
FORCE_SYMBOL $0742 random_seed
FORCE_NO_SYMBOL $0748
FORCE_SYMBOL $074A random_seed
FORCE_SYMBOL $074D random_seed2
FORCE_NO_SYMBOL $0753
FORCE_SYMBOL $0755 random_seed2
FORCE_SYMBOL $0759 buttonWait
FORCE_SYMBOL $075E buttonWait
FORCE_SYMBOL $0761 VIA_shift_reg
FORCE_SYMBOL $0763 Wait_Recal
COMMENT $0766 playAKSMusic
FORCE_NO_SYMBOL $0766
FORCE_SYMBOL $0769 jsrBank1_fromBank2_T1
COMMENT $076C get button status
FORCE_SYMBOL $076C Read_Btns
FORCE_SYMBOL $076F buttonWait
FORCE_SYMBOL $0774 joystickDir
COMMENT $0779 button pressed - any
FORCE_NO_SYMBOL $0779
COMMENT $077C is button 1
FORCE_NO_SYMBOL $077C
FORCE_SYMBOL $0780 RIGHT
COMMENT $0782 doCalib0
FORCE_SYMBOL $0786 LEFT
COMMENT $0788 majorHavocB2
FORCE_SYMBOL $078C UP
FORCE_SYMBOL $0790 DOWN
COMMENT_LINE $0796 if no direction, but a button was pressed - display help
COMMENT $0796 button pressed - any
FORCE_NO_SYMBOL $0796
COMMENT $0799 is button 1
FORCE_NO_SYMBOL $0799
COMMENT $079D showTitleHelp
FORCE_NO_SYMBOL $079D
FORCE_SYMBOL $07A0 jmpBankIRQ0Shift
COMMENT $07A3 readyPlayerOne
FORCE_NO_SYMBOL $07A3
FORCE_SYMBOL $07A6 jsrBank0_fromBank2_T1
COMMENT $07A9 main11
FORCE_NO_SYMBOL $07A9
FORCE_SYMBOL $07AC jmpBank1X
COMMENT $07AF oneVBTitleStep
FORCE_NO_SYMBOL $07AF
FORCE_SYMBOL $07B2 jsrBank0_fromBank2_Shift
COMMENT_LINE $07B7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $07B7 Button 1-4
COMMENT_LINE $07B7 returns in B the current button state in relation to last button state
COMMENT_LINE $07B7 bit 0 represents current button state
COMMENT_LINE $07B7 bit 1 last button state
COMMENT_LINE $07B7 1 = pressed
COMMENT_LINE $07B7 0 = not pressed
COMMENT_LINE $07B7 in a state of current button 1-4
COMMENT_LINE $07B7 bit == 0 = pressed
COMMENT_LINE $07B7 bit == 1 = not pressed
COMMENT_LINE $07B7 a = xxxx 0000
COMMENT_LINE $07B7 4321 - buttons
COMMENT_LINE $07B7 save last states, and shift the old current one bit
COMMENT_LINE $07B7 query buttons from psg
COMMENT $07B7 Sound chip register 0E to port A
FORCE_NO_SYMBOL $07B7
FORCE_SYMBOL $07B9 VIA_port_a
COMMENT $07BB sound BDIR on, BC1 on, mux off
FORCE_NO_SYMBOL $07BB
COMMENT $07BE VIA Port B = 99, mux disabled, RAMP disabled, BC1/BDIR = 11 (Latch address)
FORCE_SYMBOL $07BE VIA_port_b
COMMENT $07C0 pause
COMMENT $07C1 VIA Port B = 81, mux disabled, RAMP disabled, BC1/BDIR = 00 (PSG inactive)
FORCE_SYMBOL $07C1 VIA_port_b
COMMENT $07C3 DDR A to input
FORCE_SYMBOL $07C3 VIA_DDR_a
COMMENT $07C5 sound BDIR off, BC1 on, mux off
FORCE_NO_SYMBOL $07C5
COMMENT $07C8 VIA Port B = 89, mux disabled, RAMP disabled, BC1/BDIR = 01 (PSG Read)
FORCE_SYMBOL $07C8 VIA_port_b
COMMENT $07CA pause
COMMENT $07CB Read buttons
FORCE_SYMBOL $07CB VIA_port_a
COMMENT $07CD VIA Port B = 81, mux disabled, RAMP disabled, BC1/BDIR = 00 (PSG inactive)
FORCE_SYMBOL $07CD VIA_port_b
FORCE_NO_SYMBOL $07CF
COMMENT $07D1 DDR A to output
FORCE_SYMBOL $07D1 VIA_DDR_a
COMMENT_LINE $07D3 query done, in A current button state directly from psg
FORCE_SYMBOL $07D3 current_button_state
FORCE_SYMBOL $07D6 last_button_state
COMMENT $07DA only joystick 1
FORCE_NO_SYMBOL $07DA
FORCE_NO_SYMBOL $07DC
FORCE_SYMBOL $07E1 current_button_state
FORCE_NO_SYMBOL $07E4
COMMENT_LINE $07E7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $07E7 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $07E7 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $07E7 but with regard to input
COMMENT_LINE $07E7 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $07E7 mux sel:
COMMENT_LINE $07E7 xxxx x00x: port 0 horizontal
COMMENT_LINE $07E7 xxxx x01x: port 0 vertical
COMMENT_LINE $07E7 xxxx x10x: port 1 horizontal
COMMENT_LINE $07E7 xxxx x11x: port 1 vertical
COMMENT_LINE $07E7 the result of the pot reading is compared to the
COMMENT_LINE $07E7 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $07E7 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $07E7 now the same for horizontal
COMMENT $07E7 mux disabled, mux sel = 00 (horizontal pot port 0)
FORCE_NO_SYMBOL $07E7
FORCE_SYMBOL $07EA VIA_port_b
COMMENT $07EC mux enabled, mux sel = 01
FORCE_SYMBOL $07EC VIA_port_b
COMMENT $07EE a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
FORCE_SYMBOL $07EE DIGITAL_JOYTICK_LOOP_MIN
COMMENT $07F0 ...
COMMENT $07F1 wait...
COMMENT $07F3 disable mux
FORCE_SYMBOL $07F3 VIA_port_b
COMMENT $07F5 load a with test value (positive x)
FORCE_NO_SYMBOL $07F5
COMMENT $07F8 test value to DAC
FORCE_SYMBOL $07F8 VIA_port_a
COMMENT $07FA default result value x was pushed right
FORCE_NO_SYMBOL $07FA
COMMENT $07FC test comparator
FORCE_SYMBOL $07FC VIA_port_b
COMMENT $07FE if comparator cleared - joystick was moved right
COMMENT $0800 "load" with negative value
FORCE_SYMBOL $0800 VIA_port_a
COMMENT $0802 also switch the possible result in A
COMMENT $0803 test comparator again
FORCE_SYMBOL $0803 VIA_port_b
COMMENT $0805 if cleared the joystick was moved left
COMMENT $0807 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0808 remember the result in "our" joystick data
FORCE_SYMBOL $0808 Vec_Joy_1_X
COMMENT_LINE $080E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $080E joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $080E with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $080E but with regard to input
COMMENT_LINE $080E thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $080E mux sel:
COMMENT_LINE $080E xxxx x00x: port 0 horizontal
COMMENT_LINE $080E xxxx x01x: port 0 vertical
COMMENT_LINE $080E xxxx x10x: port 1 horizontal
COMMENT_LINE $080E xxxx x11x: port 1 vertical
COMMENT_LINE $080E the result of the pot reading is compared to the
COMMENT_LINE $080E value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $080E (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $080E DIGITAL_JOYTICK_LOOP_MIN  EQU  $08
COMMENT_LINE $080E now the same for horizontal
COMMENT $080E mux disabled, mux sel = 00 (horizontal pot port 0)
FORCE_NO_SYMBOL $080E
FORCE_SYMBOL $0811 VIA_port_b
COMMENT $0813 mux enabled, mux sel = 01
FORCE_SYMBOL $0813 VIA_port_b
COMMENT $0815 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
FORCE_SYMBOL $0815 DIGITAL_JOYTICK_LOOP_MIN
COMMENT $0817 ...
COMMENT $0818 wait...
COMMENT $081A disable mux
FORCE_SYMBOL $081A VIA_port_b
COMMENT $081C load a with test value (positive x)
FORCE_NO_SYMBOL $081C
COMMENT $081F test value to DAC
FORCE_SYMBOL $081F VIA_port_a
COMMENT $0821 default result value x was pushed right
FORCE_NO_SYMBOL $0821
COMMENT $0823 test comparator
FORCE_SYMBOL $0823 VIA_port_b
COMMENT $0825 if comparator cleared - joystick was moved right
COMMENT $0827 "load" with negative value
FORCE_SYMBOL $0827 VIA_port_a
COMMENT $0829 also switch the possible result in A
COMMENT $082A test comparator again
FORCE_SYMBOL $082A VIA_port_b
COMMENT $082C if cleared the joystick was moved left
COMMENT $082E if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $082F remember the result in "our" joystick data
FORCE_SYMBOL $082F Vec_Joy_1_Y
COMMENT_LINE $0835 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0835 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $0838
FORCE_NO_SYMBOL $083E
COMMENT $0842 easy
FORCE_NO_SYMBOL $0842
FORCE_SYMBOL $0844 difficulty
FORCE_NO_SYMBOL $0847
COMMENT $0851 5
COMMENT $0852 6
COMMENT $0853 7
FORCE_NO_SYMBOL $0853
COMMENT_LINE $0857 bullet 0 - 4 = standard damage
COMMENT $0857 easy
FORCE_NO_SYMBOL $0857
FORCE_SYMBOL $0859 difficulty
FORCE_NO_SYMBOL $085C
COMMENT $0863 1
COMMENT $0864 2
COMMENT_LINE $0865 with damage adjust no negative weapon damage allowed anymore!
COMMENT_LINE $0865 (negative was damage each second round only)
COMMENT_LINE $0865 boss fight must be hard! They don't resprect extra damage!
FORCE_SYMBOL $0865 diverseFlags
FORCE_SYMBOL $0868 BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $086C bulletDamageAdjust
FORCE_SYMBOL $086F bulletDamage
FORCE_SYMBOL $0875 shiftBulletDamage
COMMENT $087B max non negative damage
FORCE_NO_SYMBOL $087B
FORCE_SYMBOL $087D shiftDoubleBulletDamage
COMMENT_LINE $0880 im warp failure non working on impossible
COMMENT_LINE $0881 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $09A0 Reset0Ref
FORCE_SYMBOL $09A3 Intensity_3F
FORCE_SYMBOL $09A6 STRING_SCALE
FORCE_SYMBOL $09A8 stringScale
FORCE_SYMBOL $09AB dodgerGotKilled
FORCE_SYMBOL $09B0 DodgerResultListBad
FORCE_SYMBOL $09B5 msRating
FORCE_SYMBOL $09B8 printVectorStringList
FORCE_SYMBOL $09BB dodgeResult
FORCE_SYMBOL $09BF dodgeResultStringPointer
FORCE_SYMBOL $09C4 isDiamondRun
FORCE_SYMBOL $09C9 difficulty
COMMENT $09CE size of money - minestorm in hardcore receives no money!
FORCE_NO_SYMBOL $09CE
FORCE_SYMBOL $09D0 printVectorStringList
FORCE_SYMBOL $09D3 Reset0Ref
COMMENT_LINE $09D6 display PERFECT
FORCE_SYMBOL $09D6 STRING_SCALE
FORCE_SYMBOL $09D8 stringScale
FORCE_SYMBOL $09DB DiamondsExtroStrings
FORCE_SYMBOL $09DE printVectorStringList
FORCE_SYMBOL $09F3 Reset0Ref
FORCE_SYMBOL $09F6 STRING_SCALE
FORCE_SYMBOL $09F8 stringScale
FORCE_SYMBOL $09FB DiamondsIntoStrings
FORCE_SYMBOL $09FE printVectorStringList
FORCE_SYMBOL $0A36 Reset0Ref
FORCE_SYMBOL $0A39 STRING_SCALE
FORCE_SYMBOL $0A3B stringScale
FORCE_SYMBOL $0A3E calibTest
FORCE_SYMBOL $0A41 printVectorStringList
COMMENT_LINE $0AE0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0AE0 resturns with x = 0
COMMENT_LINE $0AE0 when bonus display is finished
FORCE_SYMBOL $0AE0 Reset0Ref
FORCE_SYMBOL $0AE3 Intensity_3F
FORCE_SYMBOL $0AE6 STRING_SCALE
FORCE_SYMBOL $0AE8 stringScale
FORCE_SYMBOL $0AEB bonusSpawnCount
FORCE_SYMBOL $0AEE bonusHitCount
COMMENT_LINE $0AF5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0AF5 challengeResultGood
FORCE_SYMBOL $0AF8 printVectorStringList
FORCE_SYMBOL $0AFB perfectStringList
FORCE_SYMBOL $0AFE perfectBonus
FORCE_NO_SYMBOL $0B05
FORCE_SYMBOL $0B07 gameScale
FORCE_SYMBOL $0B0A VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0B0C
FORCE_SYMBOL $0B0F Moveto_d
FORCE_SYMBOL $0B12 stringScale
FORCE_SYMBOL $0B15 VIA_t1_cnt_lo
FORCE_SYMBOL $0B17 printVectorString
FORCE_NO_SYMBOL $0B1A
COMMENT $0B1C /BLANK low and /ZERO low
FORCE_SYMBOL $0B1C VIA_cntl
FORCE_NO_SYMBOL $0B1E
FORCE_SYMBOL $0B20 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0B25
COMMENT_LINE $0B29 launch rocket
COMMENT_LINE $0B29 Launch a rocket on the press of a button
FORCE_SYMBOL $0B29 newFWObject
FORCE_SYMBOL $0B2C OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $0B32 rocketEmitterBehaviour
FORCE_SYMBOL $0B35 FW_BEHAVIOUR
FORCE_NO_SYMBOL $0B37
COMMENT $0B3A current POS 16 bit
FORCE_SYMBOL $0B3A FW_Y_POS
FORCE_NO_SYMBOL $0B3C
COMMENT $0B3F current POS
FORCE_SYMBOL $0B3F FW_X_POS
FORCE_SYMBOL $0B42 random_seed
FORCE_NO_SYMBOL $0B48
FORCE_SYMBOL $0B4A random_seed
FORCE_NO_SYMBOL $0B4D
FORCE_SYMBOL $0B4F FW_Y_VEL
FORCE_SYMBOL $0B51 random_seed
FORCE_NO_SYMBOL $0B57
FORCE_SYMBOL $0B59 random_seed
FORCE_SYMBOL $0B5D FW_X_VEL
FORCE_SYMBOL $0B5F random_seed
FORCE_NO_SYMBOL $0B65
FORCE_SYMBOL $0B67 random_seed
COMMENT $0B6A slightly different age
FORCE_NO_SYMBOL $0B6A
FORCE_NO_SYMBOL $0B6C
FORCE_SYMBOL $0B6E FW_AGE
FORCE_SYMBOL $0B70 fwlist_objects_head
COMMENT $0B73 (D = y,x) ; do all objects
COMMENT_LINE $0B76 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0B76 bonusHitCount
FORCE_NO_SYMBOL $0B79
FORCE_SYMBOL $0B7C StringOutputBuffer_4
FORCE_SYMBOL $0B7F wordToDecString
FORCE_SYMBOL $0B82 challengeResultBad
FORCE_SYMBOL $0B85 printVectorStringList
FORCE_SYMBOL $0B88 StringOutputBuffer_4
FORCE_SYMBOL $0B8B leadingAddu
FORCE_SYMBOL $0B8E printVectorString
FORCE_NO_SYMBOL $0B91
COMMENT $0B93 /BLANK low and /ZERO low
FORCE_SYMBOL $0B93 VIA_cntl
FORCE_SYMBOL $0B96 bonusHitCount
FORCE_SYMBOL $0B99 StringOutputBuffer_4
FORCE_SYMBOL $0B9C wordToDecString
FORCE_SYMBOL $0B9F gameScale
FORCE_SYMBOL $0BA2 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0BA4
FORCE_SYMBOL $0BA7 Moveto_d
FORCE_SYMBOL $0BAA stringScale
FORCE_SYMBOL $0BAD VIA_t1_cnt_lo
FORCE_SYMBOL $0BAF StringOutputBuffer_4
FORCE_SYMBOL $0BB2 leadingAddu
FORCE_SYMBOL $0BB5 printVectorString
COMMENT_LINE $0BB8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0BB8 Reset0Ref
FORCE_SYMBOL $0BBB Intensity_3F
FORCE_SYMBOL $0BBE STRING_SCALE
FORCE_SYMBOL $0BC0 stringScale
FORCE_SYMBOL $0BC3 bossResult
FORCE_SYMBOL $0BC6 printVectorStringList
COMMENT_LINE $0BC9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0BC9 Reset0Ref
FORCE_SYMBOL $0BCC tmp1
FORCE_SYMBOL $0BCF VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0BD1
FORCE_SYMBOL $0BD4 MineStorm_String
FORCE_SYMBOL $0BD7 isDiamondRun
FORCE_SYMBOL $0BDC DiamondStorm_String
FORCE_SYMBOL $0BDF Moveto_d
FORCE_SYMBOL $0BE2 printVectorString
FORCE_NO_SYMBOL $0BE5
COMMENT $0BE7 /BLANK low and /ZERO low
FORCE_SYMBOL $0BE7 VIA_cntl
FORCE_NO_SYMBOL $0BE9
FORCE_SYMBOL $0BEC Moveto_d
FORCE_SYMBOL $0BEF Storm_String
FORCE_SYMBOL $0BF2 printVectorString
COMMENT_LINE $0C0A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0C0A Reset0Ref
FORCE_SYMBOL $0C0D tmp1
FORCE_SYMBOL $0C10 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0C12
FORCE_SYMBOL $0C15 warpFailure_string1
FORCE_SYMBOL $0C18 Moveto_d
FORCE_SYMBOL $0C1B printVectorString
FORCE_NO_SYMBOL $0C1E
COMMENT $0C20 /BLANK low and /ZERO low
FORCE_SYMBOL $0C20 VIA_cntl
FORCE_SYMBOL $0C22 tmp1
FORCE_SYMBOL $0C25 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0C27
FORCE_SYMBOL $0C2A warpFailure_string2
FORCE_SYMBOL $0C2D Moveto_d
FORCE_SYMBOL $0C30 printVectorString
COMMENT_LINE $0C41 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0C41 Reset0Ref
FORCE_SYMBOL $0C44 tmp1
FORCE_SYMBOL $0C47 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0C49
FORCE_SYMBOL $0C4C level_string
FORCE_SYMBOL $0C4F Moveto_d
FORCE_SYMBOL $0C52 printVectorString
FORCE_SYMBOL $0C55 fillLevelString
FORCE_SYMBOL $0C58 printVectorString
FORCE_SYMBOL $0C5B Reset0Ref
COMMENT_LINE $0C66 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0C66 Reset0Ref
FORCE_SYMBOL $0C69 tmp1
FORCE_SYMBOL $0C6C VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0C6E
FORCE_SYMBOL $0C71 extraString
FORCE_SYMBOL $0C74 Moveto_d
FORCE_SYMBOL $0C77 printVectorString
COMMENT_LINE $0C81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0C81 Bonus_string
FORCE_SYMBOL $0C84 Reset0Ref
FORCE_SYMBOL $0C87 tmp1
FORCE_NO_SYMBOL $0C8A
FORCE_SYMBOL $0C8E VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0C90
FORCE_SYMBOL $0C93 Moveto_d
FORCE_SYMBOL $0C96 printVectorString
COMMENT_LINE $0CA3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0CA3 Kamikaze_string
COMMENT_LINE $0CB2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0CB2 boss_string
COMMENT_LINE $0CBE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0CBE word in D
COMMENT_LINE $0CBE pointer to highest CSA in U (5 +$80)
COMMENT_LINE $0CBE keeps u
COMMENT_LINE $0CBE init U
FORCE_NO_SYMBOL $0CBE
FORCE_NO_SYMBOL $0CC0
FORCE_NO_SYMBOL $0CC2
FORCE_NO_SYMBOL $0CC4
FORCE_NO_SYMBOL $0CC6
FORCE_NO_SYMBOL $0CC8
FORCE_NO_SYMBOL $0CCE
FORCE_NO_SYMBOL $0CD1
FORCE_NO_SYMBOL $0CD5
FORCE_NO_SYMBOL $0CDB
FORCE_NO_SYMBOL $0CDE
FORCE_NO_SYMBOL $0CE2
FORCE_NO_SYMBOL $0CE8
FORCE_NO_SYMBOL $0CEB
FORCE_NO_SYMBOL $0CEF
FORCE_NO_SYMBOL $0CF5
FORCE_NO_SYMBOL $0CF8
FORCE_NO_SYMBOL $0CFC
FORCE_NO_SYMBOL $0D00
FORCE_NO_SYMBOL $0D02
FORCE_NO_SYMBOL $0D06
FORCE_NO_SYMBOL $0D08
FORCE_NO_SYMBOL $0D0C
FORCE_NO_SYMBOL $0D0E
FORCE_NO_SYMBOL $0D12
FORCE_NO_SYMBOL $0D14
FORCE_NO_SYMBOL $0D18
FORCE_NO_SYMBOL $0D1A
COMMENT $0D1C printable string
FORCE_NO_SYMBOL $0D1C
COMMENT_LINE $0D1F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D1F strng in u
COMMENT_LINE $0D1F trashes d. keeps u
COMMENT_LINE $0D2D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D2D strng in u
COMMENT_LINE $0D2D trashes d. keeps u
FORCE_NO_SYMBOL $0D2F
FORCE_NO_SYMBOL $0D33
COMMENT_LINE $0D38 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D38 MAX_ENEMY_OBJECTS_TITLE   =        10
COMMENT_LINE $0D38 enemyobject_list_title    ds       EnemyStruct*(MAX_ENEMY_OBJECTS_TITLE +1)
COMMENT_LINE $0D38 enemyobject_list_title_end  ds     0
COMMENT_LINE $0D38 enemies
FORCE_SYMBOL $0D38 MAX_ENEMY_OBJECTS_TITLE
FORCE_SYMBOL $0D3A enemyobject_list_title
FORCE_SYMBOL $0D3D enemylist_empty_head
FORCE_SYMBOL $0D40 ENEMY_DONE
FORCE_SYMBOL $0D44 EnemyStruct
FORCE_SYMBOL $0D47 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $0D49 BIT_MASK
FORCE_NO_SYMBOL $0D4C
FORCE_SYMBOL $0D54 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $0D57 enemylist_objects_head
COMMENT_LINE $0D5C ***************************************************************************
COMMENT_LINE $0D5C x = in csa score [7 byte] msb first
COMMENT_LINE $0D5C u = out bcd [4 byte] msb first
FORCE_NO_SYMBOL $0D5C
FORCE_NO_SYMBOL $0D5E
COMMENT $0D64 safety
FORCE_NO_SYMBOL $0D64
FORCE_NO_SYMBOL $0D6A
COMMENT $0D6E safety
FORCE_NO_SYMBOL $0D6E
FORCE_NO_SYMBOL $0D70
COMMENT_LINE $0D78 ***************************************************************************
COMMENT_LINE $0D78 u = in bcd [4 byte] msb first
COMMENT_LINE $0D78 x = out csa score [7 byte] msb first
FORCE_NO_SYMBOL $0D78
FORCE_NO_SYMBOL $0D7C
FORCE_NO_SYMBOL $0D86
COMMENT_LINE $0D8E ***************************************************************************
COMMENT_LINE $0D8E unsigned!
COMMENT_LINE $0D8E u = in csa score [7 byte] msb first
COMMENT_LINE $0D8E x = in csa score [7 byte] msb first
COMMENT_LINE $0D8E return a = $ff if u<x
COMMENT_LINE $0D8E return a = 1 if u>x
COMMENT_LINE $0D8E return a = 0 if u=x
COMMENT_LINE $0D8E flags are = corresponingly
FORCE_NO_SYMBOL $0D8E
FORCE_NO_SYMBOL $0D9B
FORCE_NO_SYMBOL $0D9E
FORCE_NO_SYMBOL $0DA1
COMMENT_LINE $0DA4 ***************************************************************************
COMMENT_LINE $0DA4 unsigned!
COMMENT_LINE $0DA4 u = in bcd score [4 byte] msb first
COMMENT_LINE $0DA4 x = in csa score [7 byte] msb first
COMMENT_LINE $0DA4 return a = $ff if u<x
COMMENT_LINE $0DA4 return a = 1 if u>x
COMMENT_LINE $0DA4 return a = 0 if u=x
COMMENT_LINE $0DA4 flags are = corresponingly
COMMENT_LINE $0DA4 uses: StringOutputBuffer
FORCE_SYMBOL $0DA6 StringOutputBuffer
FORCE_SYMBOL $0DAB StringOutputBuffer
FORCE_SYMBOL $0DB2 tmp1
FORCE_NO_SYMBOL $0DB5
FORCE_NO_SYMBOL $0DB9
COMMENT_LINE $0DBC ***************************************************************************
COMMENT_LINE $0DBC compares the last acchieved score (in player_score - csa 6 msb first)
COMMENT_LINE $0DBC to all highscore in highScoreTable (5 bcd scores)
COMMENT_LINE $0DBC if high score is valid, the scores get copied to the correct places
COMMENT_LINE $0DBC leaves with a = place achieved 0-4
COMMENT_LINE $0DBC or $ff for no highscore
FORCE_NO_SYMBOL $0DBC
FORCE_SYMBOL $0DBE tmp1
COMMENT $0DC1 (pointer to last bsd highscore)
FORCE_SYMBOL $0DC4 difficulty
FORCE_SYMBOL $0DCC player_score
COMMENT_LINE $0DD9 if not last position, copy this position to one further
FORCE_SYMBOL $0DD9 tmp1
FORCE_NO_SYMBOL $0DDC
COMMENT_LINE $0DE0 copy score (and name) in table to one position lower
COMMENT $0DE0 old name
COMMENT $0DE8 score
FORCE_NO_SYMBOL $0DE8
FORCE_NO_SYMBOL $0DEC
FORCE_NO_SYMBOL $0DF0
COMMENT $0DF2 level
COMMENT_LINE $0DF4 copy my score to this position (and keep the old name)
FORCE_SYMBOL $0DF4 player_score
COMMENT_LINE $0DF7 convert X to bcd
FORCE_SYMBOL $0DF9 csa_to_bcd
FORCE_SYMBOL $0DFC levelCount
FORCE_NO_SYMBOL $0E00
COMMENT $0E04 one score earlier
FORCE_SYMBOL $0E06 tmp1
COMMENT_LINE $0E0D ***************************************************************************
FORCE_NO_SYMBOL $0E0D
FORCE_SYMBOL $0E0F player_score_6
FORCE_NO_SYMBOL $0E12
COMMENT_LINE $0E1C ***************************************************************************
COMMENT_LINE $0E1C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0E1C do game over sequence
COMMENT_LINE $0E1C check high score
COMMENT_LINE $0E1C enter highscore / save
COMMENT_LINE $0E1C jump to title
COMMENT_LINE $0E1C achievments?
FORCE_SYMBOL $0E1C initTitleRAM
COMMENT $0E1F ; titleMusic
FORCE_NO_SYMBOL $0E1F
COMMENT $0E22 PLYINIT
FORCE_NO_SYMBOL $0E22
FORCE_SYMBOL $0E25 jsrBank1_fromBank2_T1
COMMENT $0E28 readHighscore
FORCE_NO_SYMBOL $0E28
FORCE_SYMBOL $0E2B jsrBank0_fromBank2_Shift
COMMENT_LINE $0E30 if played a saved game,  no high score possible!
FORCE_SYMBOL $0E30 flashAvailable
COMMENT $0E33 game available
FORCE_SYMBOL $0E33 SAVEGAME_IS_ACTIVE_BIT
COMMENT $0E3B in a ff for no HS, or new place (0-3)
COMMENT $0E3C if negative - no score
FORCE_SYMBOL $0E3E highScorePosition
COMMENT_LINE $0E41 convert highscore from csa to asci
FORCE_SYMBOL $0E41 player_score
FORCE_NO_SYMBOL $0E44
COMMENT_LINE $0E51 remove space
FORCE_SYMBOL $0E51 player_score
FORCE_NO_SYMBOL $0E54
COMMENT $0E65 HighScoreTest
FORCE_NO_SYMBOL $0E65
FORCE_SYMBOL $0E68 jmpBankIRQ1Shift
COMMENT $0E6B editPlayerInitials ; pointer to initials
FORCE_NO_SYMBOL $0E6B
COMMENT $0E6E place
FORCE_SYMBOL $0E6E highScorePosition
FORCE_SYMBOL $0E71 highScoreBlock
FORCE_SYMBOL $0E74 difficulty
FORCE_SYMBOL $0E79 Ram_HardcoreScore_Start
COMMENT $0E7C one hs entry is 8 bytes -> times 8
COMMENT_LINE $0E81 copy initials
COMMENT $0E89 saveBlockOnChange
FORCE_NO_SYMBOL $0E89
FORCE_SYMBOL $0E8C jsrBank0_fromBank2_Shift
COMMENT $0E8F showHighscore
FORCE_NO_SYMBOL $0E8F
FORCE_SYMBOL $0E92 songLoop
FORCE_SYMBOL $0E95 jsrBank1_fromBank2_T1
COMMENT $0E98 saveBlockOnChange
FORCE_NO_SYMBOL $0E98
FORCE_SYMBOL $0E9B jsrBank0_fromBank2_Shift
COMMENT $0E9E main_0_0
FORCE_SYMBOL $0E9E fromGameOver
FORCE_SYMBOL $0EA2 VIA_shift_reg
FORCE_SYMBOL $0EA4 Wait_Recal
COMMENT $0EA7 playAKSMusic
FORCE_NO_SYMBOL $0EA7
FORCE_SYMBOL $0EAA jsrBank1_fromBank2_T1
FORCE_NO_SYMBOL $0EAD
FORCE_SYMBOL $0EB0 Vec_Text_HW
FORCE_SYMBOL $0EB3 Intensity_5F
FORCE_SYMBOL $0EB6 calibrationZero7
FORCE_SYMBOL $0EB9 gameScale
FORCE_SYMBOL $0EBC VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0EBE
FORCE_SYMBOL $0EC1 Vec_Text_HW
FORCE_NO_SYMBOL $0EC4
COMMENT $0EC7 pauseString
FORCE_SYMBOL $0EC7 pauseString
FORCE_SYMBOL $0ECA Print5Strd
FORCE_NO_SYMBOL $0ECD
COMMENT $0ECF /BLANK low and /ZERO low
FORCE_SYMBOL $0ECF VIA_cntl
COMMENT_LINE $0ED3 ***************************************************************************
COMMENT_LINE $0ED3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0ED3 playerCashW
FORCE_NO_SYMBOL $0ED6
FORCE_SYMBOL $0EDE playerXpos
FORCE_SYMBOL $0EE1 bonusSpawnPosition
FORCE_SYMBOL $0EE4 spawnBonus
COMMENT $0EE7 no bonus left
FORCE_SYMBOL $0EE7 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $0EEC bonusSpawnPosition
COMMENT $0EEF set start pos
FORCE_SYMBOL $0EEF Y_POS
FORCE_SYMBOL $0EF1 random_seed
FORCE_NO_SYMBOL $0EF7
FORCE_SYMBOL $0EF9 random_seed
FORCE_NO_SYMBOL $0EFC
FORCE_NO_SYMBOL $0F01
COMMENT_LINE $0F04 one of
COMMENT_LINE $0F04 BONUS_MONEY_5       =        10*2
COMMENT_LINE $0F04 BONUS_MONEY_20      =        11*2
COMMENT_LINE $0F04 BONUS_MONEY_50      =        12*2
COMMENT_LINE $0F04 ldb #BONUS_MONEY_200
COMMENT_LINE $0F04 todo - check if enough money?
FORCE_SYMBOL $0F04 playerCashW
FORCE_SYMBOL $0F16 playerCashW
FORCE_SYMBOL $0F19 BonusDecided
FORCE_SYMBOL $0F1C bonusSuckedBehaviour
FORCE_SYMBOL $0F1F BEHAVIOUR
FORCE_NO_SYMBOL $0F21
FORCE_SYMBOL $0F24 bonusSpawnPosition
COMMENT_LINE $0F28 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F28 while bonus can be spawned - spawn $200
FORCE_SYMBOL $0F28 bonusSpawnPosition
FORCE_NO_SYMBOL $0F2B
FORCE_SYMBOL $0F2F random_seed
FORCE_NO_SYMBOL $0F35
FORCE_SYMBOL $0F37 random_seed
FORCE_NO_SYMBOL $0F3A
FORCE_NO_SYMBOL $0F3C
FORCE_SYMBOL $0F3E random_seed
FORCE_NO_SYMBOL $0F44
FORCE_SYMBOL $0F46 random_seed
FORCE_NO_SYMBOL $0F49
FORCE_NO_SYMBOL $0F4C
FORCE_SYMBOL $0F4E bonusSpawnPosition
FORCE_SYMBOL $0F51 spawnBonus
COMMENT $0F54 no bonus left
FORCE_SYMBOL $0F54 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $0F59 bonusSpawnPosition
COMMENT $0F5C set start pos
FORCE_SYMBOL $0F5C Y_POS
FORCE_SYMBOL $0F5E random_seed
FORCE_NO_SYMBOL $0F64
FORCE_SYMBOL $0F66 random_seed
FORCE_NO_SYMBOL $0F69
FORCE_NO_SYMBOL $0F6E
COMMENT_LINE $0F71 one of
COMMENT_LINE $0F71 BONUS_MONEY_5       =        10*2
COMMENT_LINE $0F71 BONUS_MONEY_20      =        11*2
COMMENT_LINE $0F71 BONUS_MONEY_50      =        12*2
COMMENT_LINE $0F71 ldb #BONUS_MONEY_200
FORCE_SYMBOL $0F71 BonusDecided
FORCE_NO_SYMBOL $0F76
FORCE_NO_SYMBOL $0F78
FORCE_SYMBOL $0F7B bonusSpawnPosition
COMMENT_LINE $0F7F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F7F while bonus can be spawned - spawn $200
FORCE_SYMBOL $0F7F bonusSpawnPosition
FORCE_NO_SYMBOL $0F82
FORCE_SYMBOL $0F86 random_seed
FORCE_NO_SYMBOL $0F8C
FORCE_SYMBOL $0F8E random_seed
FORCE_NO_SYMBOL $0F91
FORCE_NO_SYMBOL $0F93
FORCE_SYMBOL $0F95 random_seed
FORCE_NO_SYMBOL $0F9B
FORCE_SYMBOL $0F9D random_seed
FORCE_NO_SYMBOL $0FA0
FORCE_NO_SYMBOL $0FA3
FORCE_SYMBOL $0FA5 bonusSpawnPosition
FORCE_SYMBOL $0FA8 spawnBonus
COMMENT $0FAB no bonus left
FORCE_SYMBOL $0FAB OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $0FB0 bonusSpawnPosition
COMMENT $0FB3 set start pos
FORCE_SYMBOL $0FB3 Y_POS
FORCE_SYMBOL $0FB5 BONUS_MONEY_200
FORCE_SYMBOL $0FB7 difficulty
FORCE_SYMBOL $0FBC BONUS_TIMER
FORCE_SYMBOL $0FBE BonusDecided
FORCE_NO_SYMBOL $0FC3
FORCE_NO_SYMBOL $0FC5
FORCE_SYMBOL $0FC8 bonusSpawnPosition
COMMENT_LINE $0FCC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0FCC rankDrop
FORCE_SYMBOL $0FD1 spawnBonus
COMMENT $0FD4 no bonus left
FORCE_SYMBOL $0FD4 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $0FD9 bonusSpawnPosition
COMMENT $0FDC set start pos
FORCE_SYMBOL $0FDC Y_POS
FORCE_SYMBOL $0FDE initRank
FORCE_SYMBOL $0FE3 random_seed
FORCE_NO_SYMBOL $0FE9
FORCE_SYMBOL $0FEB random_seed
COMMENT $0FEE how "often" a bonus should spawn
FORCE_SYMBOL $0FEE levelBonusBorder
FORCE_SYMBOL $0FF3 spawnBonus
COMMENT $0FF6 no bonus left
FORCE_SYMBOL $0FF6 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $0FFB bonusSpawnPosition
COMMENT $0FFE set start pos
FORCE_SYMBOL $0FFE Y_POS
FORCE_SYMBOL $1000 initBonus
FORCE_NO_SYMBOL $1003
FORCE_SYMBOL $1006 bonusSpawnPosition
COMMENT_LINE $100A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $100D
FORCE_SYMBOL $1011 Joy_Digital_horizontal_0_0
FORCE_SYMBOL $1014 drunkTimer
FORCE_SYMBOL $1019 drunkTimer
FORCE_SYMBOL $101C Vec_Joy_1_X
FORCE_SYMBOL $1021 Vec_Joy_1_X
COMMENT $1026 get button status
FORCE_SYMBOL $1026 getButtonState
FORCE_SYMBOL $1029 diverseFlags
FORCE_SYMBOL $102C BIT_FLAG_IS_BOSSFIGHT_ANY
COMMENT $102E boss fight finished
COMMENT_LINE $1030 ;;;;;
COMMENT_LINE $1030 new player shot
FORCE_SYMBOL $1030 allowBossShots
FORCE_SYMBOL $1035 diverseFlags
FORCE_SYMBOL $1038 BIT_FLAG_AUTOFIRE
FORCE_NO_SYMBOL $103C
FORCE_SYMBOL $1040 current_button_state
FORCE_NO_SYMBOL $1043
COMMENT $1045 pressed, but last time was unpressed
FORCE_NO_SYMBOL $1045
COMMENT_LINE $104B restricted autofire
COMMENT_LINE $104B but only if last was pressed
FORCE_SYMBOL $104B current_button_state
FORCE_NO_SYMBOL $104E
COMMENT $1050 pressed, but last time was unpressed
FORCE_NO_SYMBOL $1050
COMMENT $1057 only each fourth round
FORCE_NO_SYMBOL $1057
FORCE_SYMBOL $105B spawnPlayerShot
FORCE_SYMBOL $105E playerShotCountW
FORCE_NO_SYMBOL $1061
FORCE_SYMBOL $1064 playerShotCountW
COMMENT $1067 voxSpeak
FORCE_NO_SYMBOL $1067
FORCE_SYMBOL $106A jsrBank0_fromBank2_Shift
COMMENT_LINE $106D ;;;;;;;;;;;
COMMENT $106D doymsound100
FORCE_NO_SYMBOL $106D
FORCE_SYMBOL $1070 jsrBank1_fromBank2_T1
COMMENT_LINE $1073 ;;;;;;;;;;;
COMMENT $1073 test if last game round an explosion was "released"
FORCE_SYMBOL $1073 explosionSound
FORCE_NO_SYMBOL $1078
FORCE_SYMBOL $107C playSoundFlags
FORCE_NO_SYMBOL $107F
COMMENT $1083 spawnXData
FORCE_NO_SYMBOL $1083
FORCE_SYMBOL $1086 sfx_pointer_2
FORCE_SYMBOL $108B playSoundFlags
FORCE_NO_SYMBOL $108E
COMMENT $1092 explosion1Data
FORCE_NO_SYMBOL $1092
FORCE_SYMBOL $1095 sfx_pointer_3
FORCE_SYMBOL $1098 playerHitCountW
FORCE_NO_SYMBOL $109B
FORCE_SYMBOL $109E playerHitCountW
COMMENT $10A1 and clear flag for this game round
FORCE_SYMBOL $10A1 explosionSound
COMMENT_LINE $10A4 ;;;;;;;;;;;
COMMENT_LINE $10A5 ***************************************************************************
COMMENT_LINE $10A5 game loop "0"-part including
COMMENT_LINE $10A5 joystick movement (handling expected to be done elsewhere (in Move)
COMMENT_LINE $10A5 buttons (can pause + spawn shots)
COMMENT_LINE $10A5 does sound sfx
COMMENT_LINE $10A5 spawn bonus
COMMENT_LINE $10A5 spawn shot
COMMENT_LINE $10A5 draw player shots
COMMENT_LINE $10A5 draw bonus
COMMENT_LINE $10A5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $10A5 thing to do in odd rounds
COMMENT_LINE $10A5 saves about 80 cyles and does no harm
COMMENT_LINE $10A5 even round is done in bank 0
COMMENT_LINE $10A5 since there the shots are processed
COMMENT_LINE $10A5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $10A5
COMMENT $10A7 Store intensity in D/A
FORCE_SYMBOL $10A7 VIA_port_a
COMMENT $10A9 mux disabled channel 2
FORCE_NO_SYMBOL $10A9
FORCE_SYMBOL $10AC VIA_port_b
COMMENT $10AE mux enabled channel 2
FORCE_SYMBOL $10AE VIA_port_b
COMMENT $10B0 turn off mux
FORCE_SYMBOL $10B0 VIA_port_b
FORCE_SYMBOL $10B2 gameScale
FORCE_SYMBOL $10B5 VIA_t1_cnt_lo
FORCE_SYMBOL $10B7 playershotlist_objects_head
COMMENT $10BB (D = y,x) ; do all objects
COMMENT $10BD CBFC ; correct the stack to default address
FORCE_SYMBOL $10BD MY_STACK
FORCE_SYMBOL $10C1 tacScan
FORCE_SYMBOL $10C4 isDemoMode
FORCE_SYMBOL $10C9 Vec_Loop_Count
COMMENT $10D0 restart VB
FORCE_NO_SYMBOL $10D4
COMMENT $10D8 DemoString
FORCE_NO_SYMBOL $10D8
FORCE_SYMBOL $10DB messagePointer
FORCE_SYMBOL $10E1 messageState
FORCE_NO_SYMBOL $10E4
COMMENT $10E8 this does not change 28
FORCE_SYMBOL $10E8 random_seed
FORCE_NO_SYMBOL $10EE
FORCE_SYMBOL $10F0 random_seed
FORCE_NO_SYMBOL $10F5
FORCE_SYMBOL $10F7 Vec_Joy_1_X
FORCE_SYMBOL $10FE Vec_Joy_1_X
COMMENT_LINE $1101 a button press "breaks" demo
COMMENT $1101 get button status
FORCE_SYMBOL $1101 getButtonState
FORCE_NO_SYMBOL $1104
FORCE_NO_SYMBOL $1106
COMMENT_LINE $110C get joystivk
COMMENT_LINE $110C todo change direction each "xx" seconds
COMMENT_LINE $110C check vecloop count if = XXs -> exit demo
COMMENT_LINE $110C check message -> display new "DEMO" message
COMMENT_LINE $110C ;;;;
COMMENT_LINE $110C react on joystick like in Tac/Scan
FORCE_SYMBOL $110E Vec_Joy_1_X
FORCE_SYMBOL $1118 tacScan
COMMENT $111B button always pressed in demo
FORCE_NO_SYMBOL $111B
FORCE_SYMBOL $111D current_button_state
FORCE_NO_SYMBOL $1125
FORCE_SYMBOL $1129 Joy_Digital_horizontal_0_0
FORCE_SYMBOL $112C drunkTimer
FORCE_SYMBOL $1131 drunkTimer
FORCE_SYMBOL $1134 Vec_Joy_1_X
FORCE_SYMBOL $1139 Vec_Joy_1_X
COMMENT_LINE $113C ;;;;
COMMENT_LINE $113C react on joystick like in Tac/Scan
FORCE_SYMBOL $113E Vec_Joy_1_X
FORCE_SYMBOL $1148 tacScan
COMMENT_LINE $114B ;;;;
COMMENT $114D get button status
FORCE_SYMBOL $114D getButtonState
COMMENT $1150 button 3 pause
FORCE_NO_SYMBOL $1150
COMMENT $1156 button 3 pause
FORCE_NO_SYMBOL $1156
COMMENT_LINE $115C new player shot
FORCE_SYMBOL $115C diverseFlags
FORCE_SYMBOL $115F BIT_FLAG_AUTOFIRE
FORCE_NO_SYMBOL $1163
FORCE_SYMBOL $1167 current_button_state
FORCE_NO_SYMBOL $116A
COMMENT $116C pressed, but last time was unpressed
FORCE_NO_SYMBOL $116C
COMMENT_LINE $1172 restricted autofire
COMMENT_LINE $1172 but only if last was pressed
FORCE_SYMBOL $1172 current_button_state
FORCE_NO_SYMBOL $1175
COMMENT $1177 pressed, but last time was unpressed
FORCE_NO_SYMBOL $1177
COMMENT $117E only each fourth round
FORCE_NO_SYMBOL $117E
FORCE_SYMBOL $1182 spawnPlayerShot
FORCE_SYMBOL $1185 playerShotCountW
FORCE_NO_SYMBOL $1188
FORCE_SYMBOL $118B playerShotCountW
COMMENT_LINE $118E ;;; VOX CALL
COMMENT $118E voxSpeak
FORCE_NO_SYMBOL $118E
FORCE_SYMBOL $1191 jsrBank0_fromBank2_Shift
COMMENT_LINE $1194 ;;;;;
COMMENT_LINE $1194 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1194 doymsound100
FORCE_NO_SYMBOL $1194
FORCE_SYMBOL $1197 jsrBank1_fromBank2_T1
COMMENT_LINE $119A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $119A bonusSpawnPosition
COMMENT_LINE $119F todo can be inlined
FORCE_SYMBOL $119F doSpawnBonus0_0
COMMENT_LINE $11A2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $11A2 rankDrop
COMMENT $11A5 test if last game round an explosion was "released"
FORCE_SYMBOL $11A5 explosionSound
FORCE_NO_SYMBOL $11AA
FORCE_SYMBOL $11AE playSoundFlags
FORCE_NO_SYMBOL $11B1
COMMENT $11B5 spawnXData
FORCE_NO_SYMBOL $11B5
FORCE_SYMBOL $11B8 sfx_pointer_2
FORCE_SYMBOL $11BD playSoundFlags
FORCE_NO_SYMBOL $11C0
COMMENT $11C4 explosion1Data
FORCE_NO_SYMBOL $11C4
FORCE_SYMBOL $11C7 sfx_pointer_3
FORCE_SYMBOL $11CA playerHitCountW
FORCE_NO_SYMBOL $11CD
FORCE_SYMBOL $11D0 playerHitCountW
COMMENT $11D3 and clear flag for this game round
FORCE_SYMBOL $11D3 explosionSound
FORCE_SYMBOL $11D6 DEFAULT_ENEMY_INTENSITY
COMMENT $11D8 Store intensity in D/A
FORCE_SYMBOL $11D8 VIA_port_a
COMMENT $11DA mux disabled channel 2
FORCE_NO_SYMBOL $11DA
FORCE_SYMBOL $11DD VIA_port_b
COMMENT $11DF mux enabled channel 2
FORCE_SYMBOL $11DF VIA_port_b
COMMENT $11E1 turn off mux
FORCE_SYMBOL $11E1 VIA_port_b
FORCE_SYMBOL $11E3 bonuslist_objects_head
COMMENT_LINE $11E9 jumps to jmpBack1BonusIngame
COMMENT_LINE $11E9 which finishes the 0 part
COMMENT_LINE $11E9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $11E9 pattern, y, x
COMMENT $11EC pattern, y, x
COMMENT $11EF pattern, y, x
COMMENT $11F2 pattern, y, x
COMMENT $11F5 pattern, y, x
COMMENT $11F8 pattern, y, x
COMMENT $11FB pattern, y, x
COMMENT $11FE pattern, y, x
COMMENT $1201 pattern, y, x
COMMENT $1204 pattern, y, x
COMMENT $1207 pattern, y, x
COMMENT $120A pattern, y, x
COMMENT $120D pattern, y, x
COMMENT $1210 pattern, y, x
COMMENT $1213 pattern, y, x
COMMENT $1216 pattern, y, x
COMMENT $1219 pattern, y, x
COMMENT $121C pattern, y, x
COMMENT $121F pattern, y, x
COMMENT $1222 pattern, y, x
COMMENT $1225 pattern, y, x
COMMENT $1228 endmarker (high bit in pattern not set)
COMMENT_LINE $1229 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1229 end end boss explodes like a smart bomb
FORCE_NO_SYMBOL $1229
COMMENT $122B /BLANK low and /ZERO low
FORCE_SYMBOL $122B VIA_cntl
FORCE_SYMBOL $122D Intensity_7F
FORCE_NO_SYMBOL $1230
FORCE_SYMBOL $1232 tmp1
COMMENT_LINE $1235 takes about 360000 cycles (2/3 second !!!)
FORCE_SYMBOL $1235 tmp1
FORCE_SYMBOL $123A tmp1
FORCE_SYMBOL $123F VIA_t1_cnt_lo
FORCE_SYMBOL $1241 CircleList1
FORCE_NO_SYMBOL $1244
COMMENT $1246 /BLANK low and /ZERO low
FORCE_SYMBOL $1246 VIA_cntl
FORCE_SYMBOL $1248 Draw_VLp
FORCE_NO_SYMBOL $124B
COMMENT $124D /BLANK low and /ZERO low
FORCE_SYMBOL $124D VIA_cntl
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1252 Vec_Loop_Count
COMMENT $1255 bomb only each two seconds - Vec_Loop_Count is reseted!
FORCE_NO_SYMBOL $1255
FORCE_SYMBOL $125D smartBombsAvailable
FORCE_SYMBOL $1264 smartBombsAvailable
FORCE_NO_SYMBOL $1269
FORCE_SYMBOL $126C Vec_Loop_Count
COMMENT_LINE $126F remove ALL enemy shots!
COMMENT_LINE $126F SHOTS
FORCE_SYMBOL $126F MAX_SHOT_OBJECTS
FORCE_SYMBOL $1271 shotobject_list
FORCE_SYMBOL $1274 shotlist_empty_head
FORCE_SYMBOL $1277 SHOTS_DONE
FORCE_SYMBOL $127B ShotStruct
FORCE_SYMBOL $127D NEXT_SHOT_OBJECT
FORCE_NO_SYMBOL $127F
FORCE_SYMBOL $1286 NEXT_SHOT_OBJECT
FORCE_SYMBOL $1289 shotlist_objects_head
FORCE_SYMBOL $128D shotCount
COMMENT_LINE $1290 go thru all enemy objects that are still "normal" enemies (no shield)
COMMENT_LINE $1290 do shields have all purpuse = -1?
COMMENT_LINE $1290 - no, because they can "flash"
COMMENT_LINE $1290 and swith their behaviour to "fallDiamondBehaviour"
COMMENT_LINE $1290 respect "attacker" flag
FORCE_SYMBOL $1290 lockPurchased
FORCE_SYMBOL $1293 ENEMY_DESTRUCTED_FLAG
COMMENT $1295 in warp, enemy list is not available
FORCE_SYMBOL $1299 enemylist_objects_head
FORCE_SYMBOL $129C ENEMY_DONE
COMMENT $12A0 allEnemiesHandled_SB
COMMENT_LINE $12A4 sort out all enemies which should not be
COMMENT_LINE $12A4 "exploded"
FORCE_SYMBOL $12A4 ALL_PURPOSE
COMMENT $12A7 negative is Explosion
FORCE_SYMBOL $12AB BEHAVIOUR
COMMENT $12AD enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $12AD
COMMENT $12B4 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $12B4
COMMENT_LINE $12BB off screen enemies do not explode
COMMENT $12BB enemyDelayBehaviour
FORCE_NO_SYMBOL $12BB
COMMENT_LINE $12C0 handle shield enemies
FORCE_SYMBOL $12C0 ENEMY_STRUCT
COMMENT $12C3 enemy3Definition
FORCE_NO_SYMBOL $12C3
COMMENT $12C8 enemySW3DefinitionShield
FORCE_NO_SYMBOL $12C8
FORCE_SYMBOL $12CD BEHAVIOUR
COMMENT_LINE $12CF check for elite enemies and
COMMENT_LINE $12CF reduce "only" 100 HP
COMMENT_LINE $12CF moneySuckerBehaviour
COMMENT_LINE $12CF megaFiendBehaviour
COMMENT $12CF moneySuckerBehaviour
FORCE_NO_SYMBOL $12CF
FORCE_SYMBOL $12D4 BIG_HP
FORCE_NO_SYMBOL $12D6
FORCE_SYMBOL $12D9 BIG_HP
COMMENT_LINE $12DB if still alive
COMMENT_LINE $12DD if dead
COMMENT $12DF negative means this enemy is an explosion
FORCE_SYMBOL $12DF ALL_PURPOSE
COMMENT $12E4 megaFiendBehaviour
FORCE_NO_SYMBOL $12E4
FORCE_SYMBOL $12E9 bonusHitCount
COMMENT $12EE negative means this enemy is an explosion
FORCE_SYMBOL $12EE ALL_PURPOSE
FORCE_SYMBOL $12F1 BEHAVIOUR
COMMENT $12F3 enemySingleAttackAbsolutBehaviour
FORCE_NO_SYMBOL $12F3
COMMENT $12F8 enemySingleAttackRelativeBehaviour
FORCE_NO_SYMBOL $12F8
FORCE_SYMBOL $12FD attackPatternCount
COMMENT $1302 enemyTribble
FORCE_NO_SYMBOL $1302
FORCE_SYMBOL $1307 player_score
FORCE_NO_SYMBOL $130B
FORCE_SYMBOL $130D multiplyer
FORCE_SYMBOL $1313 back88
FORCE_SYMBOL $1316 addScore_b
COMMENT_LINE $131B test if enemy is bug, if so get correct position
COMMENT $131B lastNormalEnemyAddress
FORCE_NO_SYMBOL $131B
COMMENT_LINE $1320 bug enemy - change positions
FORCE_SYMBOL $1320 Y_POS16
FORCE_SYMBOL $1322 X_POS16
FORCE_SYMBOL $1324 Y_POS
COMMENT $1326 enemyExplosionBehaviour
FORCE_NO_SYMBOL $1326
FORCE_SYMBOL $1329 BEHAVIOUR
FORCE_SYMBOL $132B ANIM_POSITION
COMMENT_LINE $132D take just "any" enemy to show explosion, from bank 0 we do not have access to enemy draw lists
COMMENT $132D Enemy1Right
FORCE_NO_SYMBOL $132D
FORCE_SYMBOL $1330 SMARTLIST_ORG
COMMENT $1332 scale
FORCE_NO_SYMBOL $1332
FORCE_SYMBOL $1334 EXPLOSION_SCALE
COMMENT $1337 intensity
FORCE_NO_SYMBOL $1337
FORCE_SYMBOL $1339 EXPLOSION_INTENSITY
FORCE_SYMBOL $133C NEXT_ENEMY_OBJECT
FORCE_SYMBOL $133E handleEnemiesLoop_SB
FORCE_SYMBOL $1341 smartBombReturn
COMMENT_LINE $1344 ***************************************************************************
FORCE_SYMBOL $1344 backFromBonusPrintShop
FORCE_SYMBOL $1347 BONUS_DONE_A
FORCE_SYMBOL $134C BONUS_DONE
COMMENT $1350 always take anim 0 as "fixed" (no animation)
FORCE_NO_SYMBOL $1350
COMMENT_LINE $1358 ***************************************************************************
COMMENT_LINE $1358 only do sound
COMMENT_LINE $1358 bonus objects
COMMENT_LINE $1358 nothing else
COMMENT_LINE $1358 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1358 voxSpeak
FORCE_NO_SYMBOL $1358
FORCE_SYMBOL $135B jsrBank0_fromBank2_Shift
COMMENT $135E doymsound100
FORCE_NO_SYMBOL $135E
FORCE_SYMBOL $1361 jsrBank1_fromBank2_T1
FORCE_SYMBOL $1364 diverseFlags
FORCE_SYMBOL $1367 BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $136D playerShotsDoneM
COMMENT_LINE $1370 ***************************************************************************
COMMENT $1370 include here, since otherwise a label is not known below
COMMENT_LINE $1370 bank 2
COMMENT $1370 forward
COMMENT $13CB forward
COMMENT $1426 forward
COMMENT $1481 forward
COMMENT $14DC forward
COMMENT_LINE $1537 k
COMMENT $1537 Store Y in D/A register
FORCE_SYMBOL $1537 VIA_port_a
COMMENT $1539 Blank low, zero high?
FORCE_NO_SYMBOL $1539
FORCE_SYMBOL $153B VIA_cntl
COMMENT $153E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $153E VIA_port_b
COMMENT $1540 y must be set more than xx cycles on some vectrex
COMMENT $1541 Disable mux
FORCE_SYMBOL $1541 VIA_port_b
COMMENT $1543 Store X in D/A register
FORCE_SYMBOL $1543 VIA_port_a
COMMENT $1545 enable timer
FORCE_SYMBOL $1545 VIA_t1_cnt_hi
COMMENT $1547 Save string pointer
FORCE_SYMBOL $1547 Vec_Str_Ptr
COMMENT $154A Point to start of chargen bitmaps
FORCE_SYMBOL $154A FONT_START_A
FORCE_NO_SYMBOL $154D
FORCE_SYMBOL $154F VIA_int_flags
COMMENT $1553 $8x = enable RAMP?
FORCE_NO_SYMBOL $1553
COMMENT $1556 Clear D/A output
FORCE_SYMBOL $1556 VIA_port_a
COMMENT $1558 Shift reg mode = 110, T1 PB7 enabled
FORCE_SYMBOL $1558 VIA_aux_cntl
COMMENT $155A Update RAMP, set mux to channel 1
FORCE_SYMBOL $155A VIA_port_b
COMMENT $155C Enable mux
FORCE_SYMBOL $155C VIA_port_b
FORCE_NO_SYMBOL $155E
COMMENT_LINE $1561 nop
COMMENT $1561 Enable RAMP, set mux to channel 0
FORCE_SYMBOL $1561 VIA_port_b
COMMENT $1563 Enable mux
FORCE_SYMBOL $1563 VIA_port_b
COMMENT $1565 IMPORTANT!
COMMENT $1566 Enable RAMP, disable mux
FORCE_SYMBOL $1566 VIA_port_b
COMMENT $1568 Get text width
FORCE_SYMBOL $1568 Vec_Text_Width
COMMENT $156B Send it to the D/A
FORCE_SYMBOL $156B VIA_port_a
FORCE_NO_SYMBOL $156D
COMMENT $1570 Point to start of text string
FORCE_SYMBOL $1570 Vec_Str_Ptr
COMMENT $1573 Disable RAMP, disable mux
FORCE_SYMBOL $1573 VIA_port_b
COMMENT $1577 Get bitmap from chargen table
COMMENT $1579 Save in shift register
FORCE_SYMBOL $1579 VIA_shift_reg
COMMENT $157B Get next character
COMMENT $157D Go back if not terminator
FORCE_NO_SYMBOL $157F
COMMENT $1581 Enable RAMP, disable mux
FORCE_SYMBOL $1581 VIA_port_b
COMMENT $1583 Negate text width to D/A
FORCE_SYMBOL $1583 VIA_port_a
FORCE_NO_SYMBOL $1585
COMMENT $1587 Disable RAMP, disable mux
FORCE_SYMBOL $1587 VIA_port_b
COMMENT $1589 Check for last row
FORCE_SYMBOL $1589 FONT_END
COMMENT $158C Branch if last row
COMMENT $158E Point to next chargen row
FORCE_SYMBOL $158E FONT_LENGTH
COMMENT $1591 Get string length
FORCE_SYMBOL $1593 Vec_Str_Ptr
COMMENT $1596 - 2
FORCE_NO_SYMBOL $1596
COMMENT $1598 * 2
COMMENT $1599 Delay a moment
FORCE_NO_SYMBOL $159B
COMMENT $159F Delay some more in a loop
COMMENT $15A1 Enable RAMP, disable mux
FORCE_SYMBOL $15A1 VIA_port_b
COMMENT $15A3 Get text height
FORCE_SYMBOL $15A3 Vec_Text_Height
COMMENT $15A6 Store text height in D/A
FORCE_SYMBOL $15A6 VIA_port_a
COMMENT $15A8 Enable mux
FORCE_SYMBOL $15A8 VIA_port_b
FORCE_NO_SYMBOL $15AA
COMMENT $15AD Wait a moment
COMMENT $15AE Enable RAMP, disable mux
FORCE_SYMBOL $15AE VIA_port_b
COMMENT $15B0 Clear D/A
FORCE_SYMBOL $15B0 VIA_port_a
COMMENT $15B2 Disable RAMP, disable mux
FORCE_SYMBOL $15B2 VIA_port_b
COMMENT $15B4 Enable RAMP, disable mux
FORCE_SYMBOL $15B4 VIA_port_b
COMMENT $15B6 $0x = disable RAMP?
FORCE_NO_SYMBOL $15B6
COMMENT $15B8 Go back for next scan line
COMMENT_LINE $15BA LDA      #$98
COMMENT_LINE $15BA STA      <VIA_aux_cntl                ;T1->PB7 enabled
FORCE_NO_SYMBOL $15BA
COMMENT $15BD T1->PB7 enabled
FORCE_SYMBOL $15BD VIA_aux_cntl
COMMENT_LINE $15BF _ZERO_VECTOR_BEAM
COMMENT_LINE $15C0 ***************************************************************************
COMMENT_LINE $1814 ***************************************************************************
COMMENT_LINE $1814 print big firework for achievement
COMMENT_LINE $1814 in y address of acievement
COMMENT_LINE $1814 called when no other objects besides scoopies are "needed"
COMMENT_LINE $1814 e.g. before a level init!
COMMENT_LINE $1814 init fireworks, this time we have SPACE enough
FORCE_NO_SYMBOL $1816
FORCE_SYMBOL $1818 stringScale
FORCE_SYMBOL $181B scoopEnemy1
COMMENT_LINE $1820 copy block
FORCE_SYMBOL $1820 SAVE1_ENEMY_ADDRESS
FORCE_SYMBOL $1823 EnemyStruct
COMMENT $1825 jsr Move_Mem_a
COMMENT $1827 Copy the byte
COMMENT $182B Decrement the count
COMMENT $182C Go back until finished
FORCE_SYMBOL $182E SAVE1_ENEMY_ADDRESS
FORCE_SYMBOL $1831 scoopEnemy1
COMMENT_LINE $1834 copy block end
FORCE_SYMBOL $1834 scoopEnemy2
COMMENT_LINE $1839 copy block
FORCE_SYMBOL $1839 SAVE2_ENEMY_ADDRESS
FORCE_SYMBOL $183C EnemyStruct
COMMENT $183E jsr Move_Mem_a
COMMENT $1840 Copy the byte
COMMENT $1844 Decrement the count
COMMENT $1845 Go back until finished
FORCE_SYMBOL $1847 SAVE2_ENEMY_ADDRESS
FORCE_SYMBOL $184A scoopEnemy2
COMMENT_LINE $184D copy block end
COMMENT_LINE $184D all "linkage" and enemy list stuff is done after warp!
COMMENT_LINE $184D .........initFireworks
COMMENT $184D explosions jump back to here after all have been rendered
FORCE_SYMBOL $184D backFromFireWorks2
FORCE_SYMBOL $1850 FW_PARTICLES_DONE_A
COMMENT_LINE $1853 setup objects
FORCE_SYMBOL $1853 FIREWOKRS_PARTICLE_COUNT
FORCE_SYMBOL $1855 fwobject_list
FORCE_SYMBOL $1858 fwlist_empty_head
FORCE_SYMBOL $185B FW_PARTICLES_DONE
FORCE_SYMBOL $185F VelocityParticle
FORCE_SYMBOL $1861 FW_NEXT_OBJECT
FORCE_NO_SYMBOL $1863
FORCE_SYMBOL $186A FW_NEXT_OBJECT
FORCE_SYMBOL $186D fwlist_objects_head
FORCE_NO_SYMBOL $1871
FORCE_SYMBOL $1874 achievementCounter
COMMENT_LINE $1877 .........
FORCE_SYMBOL $1877 Wait_Recal
FORCE_SYMBOL $187A Intensity_3F
COMMENT $187D doymsound100
FORCE_NO_SYMBOL $187D
FORCE_SYMBOL $1880 jsrBank1_fromBank2_T1
FORCE_SYMBOL $1883 gameScale
FORCE_SYMBOL $1886 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1888
FORCE_SYMBOL $188B Moveto_d
FORCE_SYMBOL $188E calibrateString
FORCE_SYMBOL $1891 stringAchievement
COMMENT $1894 stringScale
FORCE_SYMBOL $1894 STRING_SCALE
FORCE_SYMBOL $1896 VIA_t1_cnt_lo
FORCE_SYMBOL $1898 printVectorString
FORCE_NO_SYMBOL $189B
COMMENT $189D /BLANK low and /ZERO low
FORCE_SYMBOL $189D VIA_cntl
FORCE_SYMBOL $189F gameScale
FORCE_SYMBOL $18A2 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $18A4
FORCE_SYMBOL $18A7 Moveto_d
FORCE_NO_SYMBOL $18AA
COMMENT $18AC stringScale
FORCE_SYMBOL $18AC STRING_SCALE
FORCE_SYMBOL $18AE VIA_t1_cnt_lo
FORCE_SYMBOL $18B0 printVectorString
FORCE_NO_SYMBOL $18B3
COMMENT $18B5 /BLANK low and /ZERO low
FORCE_SYMBOL $18B5 VIA_cntl
FORCE_NO_SYMBOL $18B7
FORCE_SYMBOL $18B9 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $18BE
COMMENT_LINE $18C2 launch rocket
COMMENT_LINE $18C2 Launch a rocket on the press of a button
FORCE_SYMBOL $18C2 newFWObject
FORCE_SYMBOL $18C5 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $18CB rocketEmitterBehaviour
FORCE_SYMBOL $18CE FW_BEHAVIOUR
FORCE_NO_SYMBOL $18D0
COMMENT $18D3 current POS 16 bit
FORCE_SYMBOL $18D3 FW_Y_POS
FORCE_NO_SYMBOL $18D5
COMMENT $18D8 current POS
FORCE_SYMBOL $18D8 FW_X_POS
FORCE_SYMBOL $18DB random_seed
FORCE_NO_SYMBOL $18E1
FORCE_SYMBOL $18E3 random_seed
FORCE_NO_SYMBOL $18E6
FORCE_SYMBOL $18E8 FW_Y_VEL
FORCE_SYMBOL $18EA random_seed
FORCE_NO_SYMBOL $18F0
FORCE_SYMBOL $18F2 random_seed
FORCE_SYMBOL $18F6 FW_X_VEL
FORCE_SYMBOL $18F8 random_seed
FORCE_NO_SYMBOL $18FE
FORCE_SYMBOL $1900 random_seed
COMMENT $1903 slightly different age
FORCE_NO_SYMBOL $1903
FORCE_NO_SYMBOL $1905
FORCE_SYMBOL $1907 FW_AGE
FORCE_SYMBOL $1909 fwlist_objects_head
COMMENT $190C (D = y,x) ; do all objects
FORCE_SYMBOL $190E achievementCounter
FORCE_NO_SYMBOL $1911
FORCE_SYMBOL $1914 achievementCounter
COMMENT_LINE $191B order up - working?
FORCE_SYMBOL $191B MAX_ENEMY_OBJECTS
FORCE_SYMBOL $191D enemyobject_list
FORCE_SYMBOL $1920 enemylist_empty_head
FORCE_SYMBOL $1923 ENEMY_DONE
FORCE_SYMBOL $1927 EnemyStruct
FORCE_SYMBOL $192A NEXT_ENEMY_OBJECT
FORCE_SYMBOL $192C BIT_MASK
FORCE_NO_SYMBOL $192F
FORCE_SYMBOL $1937 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $193A enemylist_objects_head
COMMENT_LINE $193E ensure scoopy1 is lower scoopy 2
FORCE_SYMBOL $193E scoopEnemy1
FORCE_NO_SYMBOL $1941
COMMENT $1948 jsr newEnemyObject
FORCE_SYMBOL $1948 enemylist_empty_head
FORCE_SYMBOL $194B OBJECT_LIST_COMPARE_ADDRESS
COMMENT $1951 and remember that we created a new object
FORCE_SYMBOL $1951 enemyCount
COMMENT_LINE $1954 set the new empty head
COMMENT $1954 the next in out empty list will be the new
FORCE_SYMBOL $1954 NEXT_ENEMY_OBJECT
COMMENT $1956 head of our empty list
FORCE_SYMBOL $1956 enemylist_empty_head
COMMENT_LINE $1959 load last of current object list
COMMENT_LINE $1959 the old head is always our next
FORCE_SYMBOL $195B enemylist_objects_head
FORCE_SYMBOL $195F BEHAVIOUR
COMMENT $1961 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $1961
FORCE_SYMBOL $1969 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $196B BEHAVIOUR
COMMENT $196D enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $196D
FORCE_SYMBOL $1973 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1975 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $197B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $197E NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1980 NEXT_ENEMY_OBJECT
COMMENT $1987 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $1987
FORCE_SYMBOL $198F NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1991 BEHAVIOUR
COMMENT $1993 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $1993
FORCE_SYMBOL $1999 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $199B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $19A1 NEXT_ENEMY_OBJECT
COMMENT_LINE $19A4 newobject is always head
FORCE_SYMBOL $19A4 enemylist_objects_head
COMMENT $19A9 this is no enemy - in the level sense!
FORCE_SYMBOL $19A9 enemyCount
COMMENT_LINE $19AC object struct in u
FORCE_SYMBOL $19AE EnemyStruct
COMMENT $19B0 the next in out empty list will be the new
FORCE_SYMBOL $19B0 NEXT_ENEMY_OBJECT
COMMENT $19B3 jsr Move_Mem_a
COMMENT $19B5 Copy the byte
COMMENT $19B9 Decrement the count
COMMENT $19BA Go back until finished
COMMENT $19BC the next in out empty list will be the new
FORCE_SYMBOL $19BC NEXT_ENEMY_OBJECT
FORCE_SYMBOL $19BF SCOOP_PLAYER_YPOS
FORCE_SYMBOL $19C1 playerXpos
FORCE_SYMBOL $19C4 SCOOP_RIGHT_PLAYER_XOFFSET
FORCE_SYMBOL $19C6 Y_POS
FORCE_SYMBOL $19C8 scoopEnemy1
FORCE_SYMBOL $19CB scoopEnemy2
FORCE_NO_SYMBOL $19CE
COMMENT $19D5 jsr newEnemyObject
FORCE_SYMBOL $19D5 enemylist_empty_head
FORCE_SYMBOL $19D8 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $19DE and remember that we created a new object
FORCE_SYMBOL $19DE enemyCount
COMMENT_LINE $19E1 set the new empty head
COMMENT $19E1 the next in out empty list will be the new
FORCE_SYMBOL $19E1 NEXT_ENEMY_OBJECT
COMMENT $19E3 head of our empty list
FORCE_SYMBOL $19E3 enemylist_empty_head
COMMENT_LINE $19E6 load last of current object list
COMMENT_LINE $19E6 the old head is always our next
FORCE_SYMBOL $19E8 enemylist_objects_head
FORCE_SYMBOL $19EC BEHAVIOUR
COMMENT $19EE enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $19EE
FORCE_SYMBOL $19F6 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $19F8 BEHAVIOUR
COMMENT $19FA enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $19FA
FORCE_SYMBOL $1A00 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A02 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A08 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A0B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A0D NEXT_ENEMY_OBJECT
COMMENT $1A14 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $1A14
FORCE_SYMBOL $1A1C NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A1E BEHAVIOUR
COMMENT $1A20 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $1A20
FORCE_SYMBOL $1A26 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A28 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A2E NEXT_ENEMY_OBJECT
COMMENT_LINE $1A31 newobject is always head
FORCE_SYMBOL $1A31 enemylist_objects_head
COMMENT $1A36 this is no enemy - in the level sense!
FORCE_SYMBOL $1A36 enemyCount
COMMENT_LINE $1A39 object struct in u
COMMENT_LINE $1A39 x dest
COMMENT_LINE $1A39 us source
FORCE_SYMBOL $1A3B EnemyStruct
COMMENT $1A3D the next in out empty list will be the new
FORCE_SYMBOL $1A3D NEXT_ENEMY_OBJECT
COMMENT $1A40 jsr Move_Mem_a
COMMENT $1A42 Copy the byte
COMMENT $1A46 Decrement the count
COMMENT $1A47 Go back until finished
COMMENT $1A49 the next in out empty list will be the new
FORCE_SYMBOL $1A49 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1A4C SCOOP_PLAYER_YPOS
FORCE_SYMBOL $1A4E playerXpos
FORCE_SYMBOL $1A51 SCOOP_LEFT_PLAYER_XOFFSET
FORCE_SYMBOL $1A53 Y_POS
FORCE_SYMBOL $1A55 scoopEnemy2
COMMENT_LINE $1A5A ***************************************************************************
COMMENT $1A5A doAchiements1
FORCE_NO_SYMBOL $1A5A
FORCE_SYMBOL $1A5D jmpBankIRQ1Shift
COMMENT_LINE $1A60 ***************************************************************************
FORCE_NO_SYMBOL $1A60
FORCE_SYMBOL $1A62 current_button_state
COMMENT $1A65 showHighscoreMusic HighScoreTest
FORCE_NO_SYMBOL $1A65
FORCE_SYMBOL $1A68 jsrBank1_fromBank2_T1
FORCE_SYMBOL $1A6B fromGameOver
COMMENT_LINE $1A6E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 BLANK false, ZERO true
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 BLANK false, ZERO true
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1A70 VIA_t1_cnt_lo
COMMENT $1A72 Store intensity in D/A
FORCE_SYMBOL $1A72 VIA_port_a
COMMENT $1A74 mux disabled channel 2
FORCE_NO_SYMBOL $1A74
FORCE_SYMBOL $1A77 VIA_port_b
COMMENT $1A79 mux enabled channel 2
FORCE_SYMBOL $1A79 VIA_port_b
COMMENT $1A7B turn off mux
FORCE_SYMBOL $1A7B VIA_port_b
COMMENT $1A7F Store Y in D/A register
FORCE_SYMBOL $1A7F VIA_port_a
COMMENT $1A81 Blank low, zero high?
FORCE_NO_SYMBOL $1A81
FORCE_SYMBOL $1A83 VIA_cntl
COMMENT $1A86 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1A86 VIA_port_b
COMMENT $1A88 y must be set more than xx cycles on some vectrex
COMMENT $1A89 Disable mux
FORCE_SYMBOL $1A89 VIA_port_b
COMMENT $1A8B Store X in D/A register
FORCE_SYMBOL $1A8B VIA_port_a
COMMENT $1A8D enable timer
FORCE_SYMBOL $1A8D VIA_t1_cnt_hi
FORCE_NO_SYMBOL $1A97
FORCE_NO_SYMBOL $1A9D
FORCE_NO_SYMBOL $1AA1
FORCE_SYMBOL $1AA5 random_seed
FORCE_NO_SYMBOL $1AAB
FORCE_SYMBOL $1AAD random_seed
FORCE_SYMBOL $1AB2 random_seed
FORCE_NO_SYMBOL $1AB8
FORCE_SYMBOL $1ABA random_seed
FORCE_SYMBOL $1ABF random_seed
FORCE_NO_SYMBOL $1AC5
FORCE_SYMBOL $1AC7 random_seed
FORCE_SYMBOL $1ACC random_seed
FORCE_NO_SYMBOL $1AD2
FORCE_SYMBOL $1AD4 random_seed
FORCE_SYMBOL $1AD9 random_seed
FORCE_NO_SYMBOL $1ADF
FORCE_SYMBOL $1AE1 random_seed
FORCE_SYMBOL $1AE6 random_seed
FORCE_NO_SYMBOL $1AEC
FORCE_SYMBOL $1AEE random_seed
FORCE_SYMBOL $1AF3 random_seed
FORCE_NO_SYMBOL $1AF9
FORCE_SYMBOL $1AFB random_seed
FORCE_SYMBOL $1B00 random_seed
FORCE_NO_SYMBOL $1B06
FORCE_SYMBOL $1B08 random_seed
FORCE_SYMBOL $1B0D endit
FORCE_NO_SYMBOL $1B10
FORCE_SYMBOL $1B12 VIA_int_flags
FORCE_SYMBOL $1B19 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1B1B
FORCE_SYMBOL $1B1D VIA_shift_reg
FORCE_SYMBOL $1B21 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1B23
FORCE_SYMBOL $1B26 VIA_port_b
FORCE_SYMBOL $1B28 VIA_shift_reg
COMMENT $1B2A BLANK false, ZERO true
FORCE_NO_SYMBOL $1B2A
COMMENT $1B2C /BLANK low and /ZERO low
FORCE_SYMBOL $1B2C VIA_cntl
COMMENT_LINE $1B2E 2 ;;;
COMMENT $1B30 Store Y in D/A register
FORCE_SYMBOL $1B30 VIA_port_a
COMMENT $1B32 Blank low, zero high?
FORCE_NO_SYMBOL $1B32
FORCE_SYMBOL $1B34 VIA_cntl
COMMENT $1B37 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1B37 VIA_port_b
COMMENT $1B39 y must be set more than xx cycles on some vectrex
COMMENT $1B3A Disable mux
FORCE_SYMBOL $1B3A VIA_port_b
COMMENT $1B3C Store X in D/A register
FORCE_SYMBOL $1B3C VIA_port_a
COMMENT $1B3E enable timer
FORCE_SYMBOL $1B3E VIA_t1_cnt_hi
FORCE_SYMBOL $1B40 in_moveFlag
COMMENT_LINE $1B45 ;;;;;
COMMENT_LINE $1B45 ;;;;;
COMMENT_LINE $1B45 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $1B45 ;;;;;
COMMENT_LINE $1B45 this whole block does the player movement according to current joystick data
COMMENT_LINE $1B45 the testing whether the end of the screen is reached seems dumb - can I do that better?
FORCE_SYMBOL $1B45 Vec_Joy_1_X
COMMENT $1B4C half a pixel per "move"
FORCE_SYMBOL $1B4C playerXpos
FORCE_SYMBOL $1B4F playerSpeed
FORCE_NO_SYMBOL $1B52
FORCE_SYMBOL $1B58 playerXpos
COMMENT $1B5D half a pixel per "move"
FORCE_SYMBOL $1B5D playerXpos
FORCE_SYMBOL $1B60 playerSpeed
FORCE_NO_SYMBOL $1B63
FORCE_SYMBOL $1B69 playerXpos
FORCE_NO_SYMBOL $1B6C
FORCE_SYMBOL $1B6E VIA_int_flags
FORCE_SYMBOL $1B75 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1B77
FORCE_SYMBOL $1B79 VIA_shift_reg
FORCE_SYMBOL $1B7D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1B7F
FORCE_SYMBOL $1B82 VIA_port_b
FORCE_SYMBOL $1B84 VIA_shift_reg
COMMENT $1B86 BLANK false, ZERO true
FORCE_NO_SYMBOL $1B86
COMMENT $1B88 /BLANK low and /ZERO low
FORCE_SYMBOL $1B88 VIA_cntl
COMMENT_LINE $1B8A 3 ;;;
COMMENT $1B8C Store Y in D/A register
FORCE_SYMBOL $1B8C VIA_port_a
COMMENT $1B8E Blank low, zero high?
FORCE_NO_SYMBOL $1B8E
FORCE_SYMBOL $1B90 VIA_cntl
COMMENT $1B93 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1B93 VIA_port_b
COMMENT $1B95 y must be set more than xx cycles on some vectrex
COMMENT $1B96 Disable mux
FORCE_SYMBOL $1B96 VIA_port_b
COMMENT $1B98 Store X in D/A register
FORCE_SYMBOL $1B98 VIA_port_a
COMMENT $1B9A enable timer
FORCE_SYMBOL $1B9A VIA_t1_cnt_hi
FORCE_SYMBOL $1B9C in_moveFlag
FORCE_SYMBOL $1BA3 testShot
FORCE_SYMBOL $1BA6 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $1BAC if last time something was hit and
COMMENT_LINE $1BAC the bullet is still active
COMMENT_LINE $1BAC do not switch - we probably will hit again!
COMMENT $1BAC was tst
FORCE_SYMBOL $1BAC explosionSound
FORCE_SYMBOL $1BB1 NEXT_SHOT_OBJECT
FORCE_SYMBOL $1BB3 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $1BB9 enemyMINY
FORCE_SYMBOL $1BBC Y_POS
FORCE_SYMBOL $1BC2 playershotlist_objects_head
FORCE_SYMBOL $1BC5 OBJECT_LIST_COMPARE_ADDRESS
FORCE_NO_SYMBOL $1BCB
FORCE_SYMBOL $1BCE testShot
FORCE_SYMBOL $1BD6 Y_POS
FORCE_SYMBOL $1BD8 shot_y_radius_corrdction
FORCE_SYMBOL $1BDD SHOT_RADIUS
FORCE_SYMBOL $1BE1 SHOT_RADIUS1
FORCE_SYMBOL $1BE5 SHOT_RADIUS4
FORCE_NO_SYMBOL $1BE9
FORCE_SYMBOL $1BED SHOT_RADIUS3
FORCE_NO_SYMBOL $1BF1
FORCE_SYMBOL $1BF5 SHOT_RADIUS2
FORCE_NO_SYMBOL $1BF9
FORCE_SYMBOL $1BFD SHOT_RADIUS6
FORCE_NO_SYMBOL $1C01
COMMENT_LINE $1C05 must be 1 or 5, which are "equal" in radius
FORCE_NO_SYMBOL $1C05
COMMENT $1C07 tmp 1 is current 1 radius for scoopy check
FORCE_SYMBOL $1C07 tmp3_tmp
COMMENT $1C0A make x 0 based 0 - 255
FORCE_NO_SYMBOL $1C0A
COMMENT $1C0C tmp2_tmp is zero based shot x position
FORCE_SYMBOL $1C0C tmp2_tmp
FORCE_SYMBOL $1C0F tmp3_tmp
FORCE_SYMBOL $1C12 tmp3_tmp
FORCE_SYMBOL $1C15 tmp3_tmp
COMMENT_LINE $1C18 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $1C18 might be OOB
COMMENT_LINE $1C18 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $1C18 and take as lowest position "0"
FORCE_SYMBOL $1C18 tmp2_tmp
FORCE_NO_SYMBOL $1C1D
COMMENT $1C22 reload zero based shot x position
FORCE_SYMBOL $1C22 tmp2_tmp
FORCE_SYMBOL $1C25 tmp3_tmp
FORCE_SYMBOL $1C28 tmp3_tmp
FORCE_SYMBOL $1C2B tmp3_tmp
COMMENT_LINE $1C2E in b now 3 radii to the right of zero based shot position
COMMENT_LINE $1C2E might be OOB
COMMENT_LINE $1C2E therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $1C2E and take as highest position "255"
FORCE_SYMBOL $1C2E tmp2_tmp
FORCE_NO_SYMBOL $1C33
COMMENT_LINE $1C38 test for center radii are done
COMMENT_LINE $1C38 with scoopy unmodified x radius
COMMENT_LINE $1C38 correct it!
COMMENT_LINE $1C38 radii must be chose, so that
COMMENT_LINE $1C38 no overflow/underflow can occur!
COMMENT $1C38 reload zero based shot x position
FORCE_SYMBOL $1C38 tmp2_tmp
FORCE_SYMBOL $1C3B SHOT_RADIUS
COMMENT $1C40 reload zero based shot x position
FORCE_SYMBOL $1C40 tmp2_tmp
FORCE_SYMBOL $1C43 SHOT_RADIUS
COMMENT $1C47 max
FORCE_NO_SYMBOL $1C47
FORCE_NO_SYMBOL $1C4C
FORCE_SYMBOL $1C4E VIA_int_flags
FORCE_SYMBOL $1C55 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1C57
FORCE_SYMBOL $1C59 VIA_shift_reg
FORCE_SYMBOL $1C5D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1C5F
FORCE_SYMBOL $1C62 VIA_port_b
FORCE_SYMBOL $1C64 VIA_shift_reg
COMMENT $1C66 BLANK false, ZERO true
FORCE_NO_SYMBOL $1C66
COMMENT $1C68 /BLANK low and /ZERO low
FORCE_SYMBOL $1C68 VIA_cntl
COMMENT_LINE $1C6A 4 ;;;
COMMENT $1C6C Store Y in D/A register
FORCE_SYMBOL $1C6C VIA_port_a
COMMENT $1C6E Blank low, zero high?
FORCE_NO_SYMBOL $1C6E
FORCE_SYMBOL $1C70 VIA_cntl
COMMENT $1C73 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1C73 VIA_port_b
COMMENT $1C75 y must be set more than xx cycles on some vectrex
COMMENT $1C76 Disable mux
FORCE_SYMBOL $1C76 VIA_port_b
COMMENT $1C78 Store X in D/A register
FORCE_SYMBOL $1C78 VIA_port_a
COMMENT $1C7A enable timer
FORCE_SYMBOL $1C7A VIA_t1_cnt_hi
FORCE_SYMBOL $1C7C in_moveFlag
FORCE_SYMBOL $1C83 in_moveFlag
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 always use testShot + 5 for testShot 2
FORCE_NO_SYMBOL $1C86
FORCE_SYMBOL $1C88 tmp3_tmp
FORCE_SYMBOL $1C8B testShot
FORCE_SYMBOL $1C8E OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $1C94 NEXT_SHOT_OBJECT
FORCE_SYMBOL $1C96 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $1C9C was tst
FORCE_SYMBOL $1C9C tmp3_tmp
FORCE_SYMBOL $1CA1 tmp3_tmp
FORCE_SYMBOL $1CA4 playershotlist_objects_head
COMMENT_LINE $1CA7 new
FORCE_SYMBOL $1CA7 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $1CAD new end
FORCE_SYMBOL $1CB0 enemyMINY
FORCE_SYMBOL $1CB3 Y_POS
COMMENT $1CB7 was tst
FORCE_SYMBOL $1CB7 tmp3_tmp
FORCE_NO_SYMBOL $1CBC
FORCE_SYMBOL $1CBF test2Shot
FORCE_SYMBOL $1CC2 testShot
FORCE_SYMBOL $1CCA OBJECT_LIST_COMPARE_ADDRESS
FORCE_NO_SYMBOL $1CD0
FORCE_SYMBOL $1CD3 test2Shot
FORCE_SYMBOL $1CDB Y_POS
FORCE_SYMBOL $1CDD shot_y_radius_corrdction
FORCE_SYMBOL $1CE2 SHOT_RADIUS
FORCE_SYMBOL $1CE6 SHOT_RADIUS1
FORCE_SYMBOL $1CEA SHOT_RADIUS4
FORCE_NO_SYMBOL $1CEE
FORCE_SYMBOL $1CF2 SHOT_RADIUS3
FORCE_NO_SYMBOL $1CF6
FORCE_SYMBOL $1CFA SHOT_RADIUS2
FORCE_NO_SYMBOL $1CFE
FORCE_SYMBOL $1D02 SHOT_RADIUS6
FORCE_NO_SYMBOL $1D06
COMMENT_LINE $1D0A must be 1 or 5, which are "equal" in radius
FORCE_NO_SYMBOL $1D0A
COMMENT $1D0C tmp 1 is current 1 radius for scoopy check
FORCE_SYMBOL $1D0C tmp3_tmp
COMMENT $1D0F make x 0 based 0 - 255
FORCE_NO_SYMBOL $1D0F
COMMENT $1D11 tmp2_tmp is zero based shot x position
FORCE_SYMBOL $1D11 tmp2_tmp
FORCE_SYMBOL $1D14 tmp3_tmp
FORCE_SYMBOL $1D17 tmp3_tmp
FORCE_SYMBOL $1D1A tmp3_tmp
COMMENT_LINE $1D1D in b now 3 radii to the left of zero based shot position
COMMENT_LINE $1D1D might be OOB
COMMENT_LINE $1D1D therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $1D1D and take as lowest position "0"
FORCE_SYMBOL $1D1D tmp2_tmp
FORCE_NO_SYMBOL $1D22
COMMENT $1D27 reload zero based shot x position
FORCE_SYMBOL $1D27 tmp2_tmp
FORCE_SYMBOL $1D2A tmp3_tmp
FORCE_SYMBOL $1D2D tmp3_tmp
FORCE_SYMBOL $1D30 tmp3_tmp
COMMENT_LINE $1D33 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $1D33 might be OOB
COMMENT_LINE $1D33 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $1D33 and take as highest position "255"
FORCE_SYMBOL $1D33 tmp2_tmp
FORCE_NO_SYMBOL $1D38
COMMENT_LINE $1D3D test for center radii are done
COMMENT_LINE $1D3D with scoopy unmodified x radius
COMMENT_LINE $1D3D correct it!
COMMENT_LINE $1D3D radii must be chose, so that
COMMENT_LINE $1D3D no overflow/underflow can occur!
COMMENT $1D3D reload zero based shot x position
FORCE_SYMBOL $1D3D tmp2_tmp
FORCE_SYMBOL $1D40 SHOT_RADIUS
COMMENT $1D45 reload zero based shot x position
FORCE_SYMBOL $1D45 tmp2_tmp
FORCE_SYMBOL $1D48 SHOT_RADIUS
COMMENT $1D4C max
FORCE_NO_SYMBOL $1D4C
COMMENT_LINE $1D51 veryify that testShot is not the same
COMMENT_LINE $1D51 ....
FORCE_NO_SYMBOL $1D51
FORCE_SYMBOL $1D53 enemyMINY
FORCE_NO_SYMBOL $1D56
FORCE_SYMBOL $1D58 VIA_int_flags
FORCE_SYMBOL $1D5F VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1D61
FORCE_SYMBOL $1D63 VIA_shift_reg
FORCE_SYMBOL $1D67 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1D69
FORCE_SYMBOL $1D6C VIA_port_b
FORCE_SYMBOL $1D6E VIA_shift_reg
COMMENT $1D70 BLANK false, ZERO true
FORCE_NO_SYMBOL $1D70
COMMENT $1D72 /BLANK low and /ZERO low
FORCE_SYMBOL $1D72 VIA_cntl
COMMENT_LINE $1D74 end
FORCE_SYMBOL $1D74 gameScale
FORCE_SYMBOL $1D77 VIA_t1_cnt_lo
COMMENT $1D79 backToStarBehaviour
FORCE_NO_SYMBOL $1D79
FORCE_SYMBOL $1D7C jmpBank1X
FORCE_NO_SYMBOL $1D7F
FORCE_SYMBOL $1D81 VIA_int_flags
FORCE_NO_SYMBOL $1D85
COMMENT $1D87 /BLANK low and /ZERO low
FORCE_SYMBOL $1D87 VIA_cntl
FORCE_NO_SYMBOL $1D89
FORCE_SYMBOL $1D8C VIA_port_b
FORCE_SYMBOL $1D8E gameScale
FORCE_SYMBOL $1D91 VIA_t1_cnt_lo
COMMENT $1D93 backToStarBehaviour
FORCE_NO_SYMBOL $1D93
FORCE_SYMBOL $1D96 jmpBank1X
COMMENT_LINE $1D99 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1D9B VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1D9D
FORCE_NO_SYMBOL $1DA1
COMMENT $1DA3 Store intensity in D/A
FORCE_SYMBOL $1DA3 VIA_port_a
COMMENT $1DA5 mux disabled channel 2
FORCE_NO_SYMBOL $1DA5
FORCE_SYMBOL $1DA8 VIA_port_b
COMMENT $1DAA mux enabled channel 2
FORCE_SYMBOL $1DAA VIA_port_b
COMMENT $1DAC turn off mux
FORCE_SYMBOL $1DAC VIA_port_b
COMMENT $1DB0 Store Y in D/A register
FORCE_SYMBOL $1DB0 VIA_port_a
COMMENT $1DB2 Blank low, zero high?
FORCE_NO_SYMBOL $1DB2
FORCE_SYMBOL $1DB4 VIA_cntl
COMMENT $1DB7 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1DB7 VIA_port_b
COMMENT $1DB9 y must be set more than xx cycles on some vectrex
COMMENT $1DBA Disable mux
FORCE_SYMBOL $1DBA VIA_port_b
COMMENT $1DBC Store X in D/A register
FORCE_SYMBOL $1DBC VIA_port_a
COMMENT $1DBE enable timer
FORCE_SYMBOL $1DBE VIA_t1_cnt_hi
FORCE_NO_SYMBOL $1DC9
COMMENT $1DCF af
FORCE_NO_SYMBOL $1DCF
FORCE_SYMBOL $1DD3 random_seed
FORCE_NO_SYMBOL $1DD9
FORCE_SYMBOL $1DDB random_seed
FORCE_NO_SYMBOL $1DDE
FORCE_SYMBOL $1DE2 random_seed
FORCE_NO_SYMBOL $1DE8
FORCE_SYMBOL $1DEA random_seed
FORCE_SYMBOL $1DEF random_seed
FORCE_NO_SYMBOL $1DF5
FORCE_SYMBOL $1DF7 random_seed
FORCE_SYMBOL $1DFC random_seed
FORCE_NO_SYMBOL $1E02
FORCE_SYMBOL $1E04 random_seed
FORCE_SYMBOL $1E09 random_seed
FORCE_NO_SYMBOL $1E0F
FORCE_SYMBOL $1E11 random_seed
FORCE_SYMBOL $1E16 random_seed
FORCE_NO_SYMBOL $1E1C
FORCE_SYMBOL $1E1E random_seed
FORCE_SYMBOL $1E23 random_seed
FORCE_NO_SYMBOL $1E29
FORCE_SYMBOL $1E2B random_seed
FORCE_SYMBOL $1E30 random_seed
FORCE_NO_SYMBOL $1E36
FORCE_SYMBOL $1E38 random_seed
FORCE_SYMBOL $1E3D random_seed
FORCE_NO_SYMBOL $1E43
FORCE_SYMBOL $1E45 random_seed
FORCE_SYMBOL $1E4A enditHS
FORCE_NO_SYMBOL $1E4D
FORCE_SYMBOL $1E4F VIA_int_flags
FORCE_NO_SYMBOL $1E53
FORCE_SYMBOL $1E55 VIA_shift_reg
COMMENT $1E57 BLANK false, ZERO true
FORCE_NO_SYMBOL $1E57
COMMENT $1E59 /BLANK low and /ZERO low
FORCE_SYMBOL $1E59 VIA_cntl
COMMENT_LINE $1E5B 2 ;;;
COMMENT $1E5D Store Y in D/A register
FORCE_SYMBOL $1E5D VIA_port_a
COMMENT $1E5F Blank low, zero high?
FORCE_NO_SYMBOL $1E5F
FORCE_SYMBOL $1E61 VIA_cntl
COMMENT $1E64 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1E64 VIA_port_b
COMMENT $1E66 y must be set more than xx cycles on some vectrex
COMMENT $1E67 Disable mux
FORCE_SYMBOL $1E67 VIA_port_b
COMMENT $1E69 Store X in D/A register
FORCE_SYMBOL $1E69 VIA_port_a
COMMENT $1E6B enable timer
FORCE_SYMBOL $1E6B VIA_t1_cnt_hi
FORCE_SYMBOL $1E6D in_moveFlag
FORCE_NO_SYMBOL $1E72
FORCE_SYMBOL $1E74 VIA_int_flags
FORCE_NO_SYMBOL $1E78
FORCE_SYMBOL $1E7A VIA_shift_reg
COMMENT $1E7C BLANK false, ZERO true
FORCE_NO_SYMBOL $1E7C
COMMENT $1E7E /BLANK low and /ZERO low
FORCE_SYMBOL $1E7E VIA_cntl
COMMENT_LINE $1E80 3 ;;;
COMMENT $1E82 Store Y in D/A register
FORCE_SYMBOL $1E82 VIA_port_a
COMMENT $1E84 Blank low, zero high?
FORCE_NO_SYMBOL $1E84
FORCE_SYMBOL $1E86 VIA_cntl
COMMENT $1E89 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1E89 VIA_port_b
COMMENT $1E8B y must be set more than xx cycles on some vectrex
COMMENT $1E8C Disable mux
FORCE_SYMBOL $1E8C VIA_port_b
COMMENT $1E8E Store X in D/A register
FORCE_SYMBOL $1E8E VIA_port_a
COMMENT $1E90 enable timer
FORCE_SYMBOL $1E90 VIA_t1_cnt_hi
FORCE_SYMBOL $1E92 in_moveFlag
FORCE_NO_SYMBOL $1E97
FORCE_SYMBOL $1E99 VIA_int_flags
FORCE_NO_SYMBOL $1E9D
FORCE_SYMBOL $1E9F VIA_shift_reg
COMMENT $1EA1 BLANK false, ZERO true
FORCE_NO_SYMBOL $1EA1
COMMENT $1EA3 /BLANK low and /ZERO low
FORCE_SYMBOL $1EA3 VIA_cntl
COMMENT_LINE $1EA5 4 ;;;
COMMENT $1EA7 Store Y in D/A register
FORCE_SYMBOL $1EA7 VIA_port_a
COMMENT $1EA9 Blank low, zero high?
FORCE_NO_SYMBOL $1EA9
FORCE_SYMBOL $1EAB VIA_cntl
COMMENT $1EAE Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1EAE VIA_port_b
COMMENT $1EB0 y must be set more than xx cycles on some vectrex
COMMENT $1EB1 Disable mux
FORCE_SYMBOL $1EB1 VIA_port_b
COMMENT $1EB3 Store X in D/A register
FORCE_SYMBOL $1EB3 VIA_port_a
COMMENT $1EB5 enable timer
FORCE_SYMBOL $1EB5 VIA_t1_cnt_hi
FORCE_SYMBOL $1EB7 in_moveFlag
FORCE_SYMBOL $1EBC in_moveFlag
FORCE_NO_SYMBOL $1EBF
FORCE_SYMBOL $1EC1 VIA_int_flags
FORCE_NO_SYMBOL $1EC5
FORCE_SYMBOL $1EC7 VIA_shift_reg
COMMENT $1EC9 BLANK false, ZERO true
FORCE_NO_SYMBOL $1EC9
COMMENT $1ECB /BLANK low and /ZERO low
FORCE_SYMBOL $1ECB VIA_cntl
COMMENT_LINE $1ECD end
FORCE_SYMBOL $1ECD gameScale
FORCE_SYMBOL $1ED0 VIA_t1_cnt_lo
COMMENT $1ED2 backToStarBehaviourHS
FORCE_NO_SYMBOL $1ED2
FORCE_SYMBOL $1ED5 jmpBank1X
FORCE_NO_SYMBOL $1ED8
FORCE_SYMBOL $1EDA VIA_int_flags
FORCE_NO_SYMBOL $1EDE
COMMENT $1EE0 /BLANK low and /ZERO low
FORCE_SYMBOL $1EE0 VIA_cntl
FORCE_NO_SYMBOL $1EE2
FORCE_SYMBOL $1EE5 VIA_port_b
FORCE_SYMBOL $1EE7 gameScale
FORCE_SYMBOL $1EEA VIA_t1_cnt_lo
COMMENT $1EEC backToStarBehaviourHS
FORCE_NO_SYMBOL $1EEC
FORCE_SYMBOL $1EEF jmpBank1X
COMMENT_LINE $1EF4 ..........................................................
COMMENT_LINE $1EF4 scoring
COMMENT_LINE $1EF4 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5 = %00001000 ; checked at the end of each game
COMMENT_LINE $1EF4 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4 = %00010000
COMMENT_LINE $1EF4 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3 = %00100000
COMMENT_LINE $1EF4 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2 = %01000000
COMMENT_LINE $1EF4 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1 = %10000000
COMMENT_LINE $1EF4 - score: 100000: Scorer Rank 5: player speed +1
COMMENT_LINE $1EF4 - score: 500000: Scorer Rank 4: player speed +1
COMMENT_LINE $1EF4 - score: 1000000: Scorer Rank 3: player speed +1
COMMENT_LINE $1EF4 - score: 2500000: Scorer Rank 2: player speed +1
COMMENT_LINE $1EF4 - score: 5000000: Scorer Rank 1: player speed +1
FORCE_SYMBOL $1EF7 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5
FORCE_SYMBOL $1EFB player_score_6
FORCE_SYMBOL $1F02 player_score_5
COMMENT $1F07 no achievement
FORCE_SYMBOL $1F0E ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5
FORCE_SYMBOL $1F13 A_SCORE_RANK5
FORCE_SYMBOL $1F15 displayAchievement
FORCE_SYMBOL $1F1B ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4
FORCE_SYMBOL $1F1F player_score_6
FORCE_SYMBOL $1F26 player_score_5
COMMENT $1F2B no achievement
FORCE_SYMBOL $1F30 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4
FORCE_SYMBOL $1F35 A_SCORE_RANK4
FORCE_SYMBOL $1F37 displayAchievement
FORCE_SYMBOL $1F3D ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3
FORCE_SYMBOL $1F41 player_score_6
COMMENT $1F46 no achievement
FORCE_SYMBOL $1F4B ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3
FORCE_SYMBOL $1F50 A_SCORE_RANK3
FORCE_SYMBOL $1F52 displayAchievement
FORCE_SYMBOL $1F58 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2
FORCE_SYMBOL $1F5C player_score_6
FORCE_SYMBOL $1F67 player_score_5
FORCE_SYMBOL $1F71 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2
FORCE_SYMBOL $1F76 A_SCORE_RANK2
FORCE_SYMBOL $1F78 displayAchievement
FORCE_SYMBOL $1F7E ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1
FORCE_SYMBOL $1F82 player_score_6
COMMENT $1F87 no achievement
FORCE_SYMBOL $1F8C ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1
FORCE_SYMBOL $1F91 A_SCORE_RANK1
FORCE_SYMBOL $1F93 displayAchievement
COMMENT_LINE $1F96 ..........................................................
COMMENT_LINE $1F96 ..........................................................
COMMENT_LINE $1F96 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3 = %00000001 ; checked at the end of each game
COMMENT_LINE $1F96 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2 = %00000010
COMMENT_LINE $1F96 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1 = %00000100
COMMENT_LINE $1F96 hit percentage (min 1000 shots) above 90% - Sniper Ranke 3 - start with bullet +1
COMMENT_LINE $1F96 hit percentage (min 1000 shots) above 100% - Sniper Ranke 2 - start with bullet +1
COMMENT_LINE $1F96 hit percentage (min 1000 shots) above 120% - Sniper Ranke 1 - start with bullet +1
FORCE_SYMBOL $1F96 playerShotCountW
FORCE_NO_SYMBOL $1F99
COMMENT $1F9D only check when at least 1000 shots fired
COMMENT $1F9F calcHitPercentage
FORCE_NO_SYMBOL $1F9F
FORCE_SYMBOL $1FA2 jsrBank0_fromBank2_Shift
COMMENT_LINE $1FA5 jsr      calcHitPercentage
FORCE_SYMBOL $1FA8 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3
COMMENT $1FAC remembered!
FORCE_SYMBOL $1FAC tmp_div1
FORCE_NO_SYMBOL $1FAF
COMMENT $1FB1 no achievement
FORCE_SYMBOL $1FB6 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3
FORCE_SYMBOL $1FBB A_SNIPER_RANK3
FORCE_SYMBOL $1FBD displayAchievement
FORCE_SYMBOL $1FC3 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2
COMMENT $1FC7 remembered!
FORCE_SYMBOL $1FC7 tmp_div1
FORCE_NO_SYMBOL $1FCA
COMMENT $1FCC no achievement
FORCE_SYMBOL $1FD1 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2
FORCE_SYMBOL $1FD6 A_SNIPER_RANK2
FORCE_SYMBOL $1FD8 displayAchievement
FORCE_SYMBOL $1FDE ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1
COMMENT $1FE2 remembered!
FORCE_SYMBOL $1FE2 tmp_div1
FORCE_NO_SYMBOL $1FE5
COMMENT $1FE7 no achievement
FORCE_SYMBOL $1FEC ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1
FORCE_SYMBOL $1FF1 A_SNIPER_RANK1
FORCE_SYMBOL $1FF3 displayAchievement
COMMENT_LINE $1FF6 ...
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4 = %00000001 ; checked on officer level up! (after shop)
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK3 = %00000010
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2 = %00000100
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1 = %00001000
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4  = %00010000 ; check when secret is discovered
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3  = %00100000
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK2  = %01000000
COMMENT_LINE $1FF6 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1  = %10000000
COMMENT_LINE $1FF6 - Rank:  LIEUTENANT: Officer Rank 4: start game with armor
COMMENT_LINE $1FF6 - score: ADMIRAL: Officer Rank 3: enable shop buy RANK (1000)
COMMENT_LINE $1FF6 - score: ADMIRAL 1 SILVER STAR: Officer Rank 2:  start with autofire
COMMENT_LINE $1FF6 - score: ADMIRAL 3 GOLD STAR: Officer Rank 1: start with timer +10s
COMMENT_LINE $1FF6 (found in one game!)
COMMENT_LINE $1FF6 - secrets: discover 2 secrets: SPY RANK 4: start with one super bomb
COMMENT_LINE $1FF6 - secrets: discover 4 secrets: SPY RANK 3: start dodger permanently with x2
COMMENT_LINE $1FF6 - secrets: discover 6 secrets: SPY RANK 2: buy bomb permanently added to shop
COMMENT_LINE $1FF6 - secrets: discover all secrets: SUPER SPY: get a "pocket shop" (press button 1 at the end of level -> enter shop)
FORCE_SYMBOL $1FF9 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4
COMMENT $1FFD remembered!
FORCE_SYMBOL $1FFD officerRankTmp
FORCE_NO_SYMBOL $2000
COMMENT $2002 no achievement
FORCE_SYMBOL $2007 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4
FORCE_SYMBOL $200C A_OFFICER_RANK4
FORCE_SYMBOL $200E displayAchievement
FORCE_SYMBOL $2014 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK3
COMMENT $2018 remembered!
FORCE_SYMBOL $2018 officerRankTmp
COMMENT $201B Admiral
FORCE_NO_SYMBOL $201B
COMMENT $201D no achievement
FORCE_SYMBOL $2022 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK3
FORCE_SYMBOL $2027 A_OFFICER_RANK3
FORCE_SYMBOL $2029 displayAchievement
FORCE_SYMBOL $202F ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2
COMMENT $2033 remembered!
FORCE_SYMBOL $2033 officerRankTmp
COMMENT $2036 Admiral Silver
FORCE_NO_SYMBOL $2036
COMMENT $2038 no achievement
FORCE_SYMBOL $203D ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2
FORCE_SYMBOL $2042 A_OFFICER_RANK2
FORCE_SYMBOL $2044 displayAchievement
FORCE_SYMBOL $204A ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1
COMMENT $204E remembered!
FORCE_SYMBOL $204E officerRankTmp
COMMENT $2051 Admiral 3 gold
FORCE_NO_SYMBOL $2051
COMMENT $2053 no achievement
FORCE_SYMBOL $2058 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1
FORCE_SYMBOL $205D A_OFFICER_RANK1
FORCE_SYMBOL $205F displayAchievement
COMMENT_LINE $2062 jsr      getSecretCount
COMMENT $2062 getSecretCount
FORCE_NO_SYMBOL $2062
FORCE_SYMBOL $2065 jsrBank0_fromBank2_Shift
FORCE_SYMBOL $206B ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4
FORCE_NO_SYMBOL $206F
COMMENT $2071 no achievement
FORCE_SYMBOL $2076 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4
FORCE_SYMBOL $207B A_SPY_RANK4
FORCE_SYMBOL $207D displayAchievement
FORCE_SYMBOL $2080 secretCount
FORCE_SYMBOL $2086 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3
FORCE_NO_SYMBOL $208A
COMMENT $208C no achievement
FORCE_SYMBOL $2091 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3
FORCE_SYMBOL $2096 A_SPY_RANK3
FORCE_SYMBOL $2098 displayAchievement
FORCE_SYMBOL $209B secretCount
FORCE_SYMBOL $20A1 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK2
FORCE_NO_SYMBOL $20A5
COMMENT $20A7 no achievement
FORCE_SYMBOL $20AC ACHIEVEMENT_FLAG_BYTE4_SPY_RANK2
FORCE_SYMBOL $20B1 A_SPY_RANK2
FORCE_SYMBOL $20B3 displayAchievement
FORCE_SYMBOL $20B6 secretCount
FORCE_SYMBOL $20BC ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1
FORCE_NO_SYMBOL $20C0
COMMENT $20C2 no achievement
FORCE_SYMBOL $20C7 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1
FORCE_SYMBOL $20CC A_SPY_RANK1
FORCE_SYMBOL $20CE displayAchievement
COMMENT_LINE $20D1 ACHIEVEMENT_FLAG_BYTE2_ALL    = %10000000 ; checked at the end of each game
COMMENT_LINE $20D1 - get them all (highest ranks on all): new RANK Officer GREAT DEFENDER!
FORCE_NO_SYMBOL $20D4
FORCE_NO_SYMBOL $20DB
FORCE_NO_SYMBOL $20E2
FORCE_NO_SYMBOL $20E9
FORCE_NO_SYMBOL $20F0
FORCE_NO_SYMBOL $20F7
FORCE_NO_SYMBOL $20F9
FORCE_SYMBOL $2100 ACHIEVEMENT_FLAG_BYTE2_ALL
FORCE_SYMBOL $2105 A_ALL
FORCE_SYMBOL $2107 displayAchievement
COMMENT $210A backFromEndOfGameAchievementTest
FORCE_NO_SYMBOL $210A
FORCE_SYMBOL $210D jmpBankIRQ1Shift
COMMENT_LINE $2110 .............................................................................
COMMENT_LINE $2110 .............................................................................
COMMENT_LINE $2110 .............................................................................
COMMENT_LINE $2110 if played a saved game,  no high score / achievements possible!
FORCE_SYMBOL $2110 flashAvailable
COMMENT $2113 game available
FORCE_SYMBOL $2113 SAVEGAME_IS_ACTIVE_BIT
COMMENT_LINE $2117 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4 = %00001000 ; check after challenge
COMMENT_LINE $2117 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3 = %00010000
COMMENT_LINE $2117 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2 = %00100000
COMMENT_LINE $2117 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1 = %01000000
COMMENT_LINE $2117 - challenge: get 2000 bonus: Challenger Rank 4 -> start with rate
COMMENT_LINE $2117 - challenge: get 8000 bonus: Challenger Rank 3 -> start with rate
COMMENT_LINE $2117 - challenge: get 16000 bonus: Challenger Rank 2 -> start with rate
COMMENT_LINE $2117 - challenge: get 256000 bonus: Challenger Rank 1 -> start with rate
COMMENT_LINE $2117 perfectBonus = 9 -> 256000
FORCE_SYMBOL $2117 isDemoMode
FORCE_SYMBOL $211F ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4
FORCE_SYMBOL $2123 perfectBonus
COMMENT $2126 2000
FORCE_NO_SYMBOL $2126
COMMENT $2128 no achievement
FORCE_SYMBOL $212D ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4
FORCE_SYMBOL $2132 A_BONUS_RANK4
FORCE_SYMBOL $2134 displayAchievement
FORCE_SYMBOL $213A ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3
FORCE_SYMBOL $213E perfectBonus
COMMENT $2141 8000
FORCE_NO_SYMBOL $2141
COMMENT $2143 no achievement
FORCE_SYMBOL $2148 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3
FORCE_SYMBOL $214D A_BONUS_RANK3
FORCE_SYMBOL $214F displayAchievement
FORCE_SYMBOL $2155 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2
FORCE_SYMBOL $2159 perfectBonus
COMMENT $215C 16000
FORCE_NO_SYMBOL $215C
COMMENT $215E no achievement
FORCE_SYMBOL $2163 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2
FORCE_SYMBOL $2168 A_BONUS_RANK2
FORCE_SYMBOL $216A displayAchievement
FORCE_SYMBOL $2170 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1
FORCE_SYMBOL $2174 perfectBonus
COMMENT $2177 256000
FORCE_NO_SYMBOL $2177
COMMENT $2179 no achievement
FORCE_SYMBOL $217E ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1
FORCE_SYMBOL $2183 A_BONUS_RANK1
FORCE_SYMBOL $2185 displayAchievement
COMMENT $2188 backFromChallengeAchievementTest
FORCE_NO_SYMBOL $2188
FORCE_SYMBOL $218B jmpBank1X
COMMENT_LINE $218E .............................................................................
COMMENT_LINE $218E .............................................................................
COMMENT_LINE $218E .............................................................................
FORCE_SYMBOL $218E flashAvailable
COMMENT $2191 game available
FORCE_SYMBOL $2191 SAVEGAME_IS_ACTIVE_BIT
COMMENT_LINE $2197 no achievement if killed!
FORCE_SYMBOL $2197 dodgerGotKilled
FORCE_SYMBOL $219F ACHIEVEMENT_FLAG_BYTE6_MINESTORM_FALCON
FORCE_SYMBOL $21A3 dodgeResult
COMMENT $21A6 for is falcon
FORCE_NO_SYMBOL $21A6
COMMENT $21A8 no achievement
FORCE_SYMBOL $21AD ACHIEVEMENT_FLAG_BYTE6_MINESTORM_FALCON
FORCE_SYMBOL $21B2 A_FALCON
FORCE_SYMBOL $21B4 displayAchievement
FORCE_SYMBOL $21BA ACHIEVEMENT_FLAG_BYTE6_MINESTORM_DRUNKEN
FORCE_SYMBOL $21BE drunkTimer
COMMENT $21C1 no achievement
FORCE_SYMBOL $21C6 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_DRUNKEN
FORCE_SYMBOL $21CB A_DRUNKEN
FORCE_SYMBOL $21CD displayAchievement
COMMENT $21D0 dodgerAchievementBack
FORCE_NO_SYMBOL $21D0
FORCE_SYMBOL $21D3 jmpBank1X
COMMENT_LINE $21D6 .............................................................................
COMMENT_LINE $21D6 .............................................................................
COMMENT_LINE $21D6 .............................................................................
COMMENT_LINE $21D6 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5 = %00000001 ; checked at the start of each shop
COMMENT_LINE $21D6 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4 = %00000010
COMMENT_LINE $21D6 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3 = %00000100
COMMENT_LINE $21D6 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2 = %00001000
COMMENT_LINE $21D6 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1 = %00010000
COMMENT_LINE $21D6 - achievements Money collector Rank 5-> 5000 reward: + 100 credits startup
COMMENT_LINE $21D6 - achievements Money collector Rank 4-> 10000 reward: + 200 credits startup
COMMENT_LINE $21D6 - achievements Money collector Rank 3-> 25000 reward: + 300 credits startup
COMMENT_LINE $21D6 - achievements Money collector Rank 2-> 50000 reward: + 500 credits startup
COMMENT_LINE $21D6 - bug money -> discover BUG money roll over!, Money collector Rank 1 reward: + 750 credits on startup
FORCE_SYMBOL $21D6 flashAvailable
COMMENT $21D9 game available
FORCE_SYMBOL $21D9 SAVEGAME_IS_ACTIVE_BIT
FORCE_SYMBOL $21E2 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5
FORCE_SYMBOL $21E6 playerCashW
FORCE_NO_SYMBOL $21E9
COMMENT $21ED no achievement
FORCE_SYMBOL $21F2 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5
FORCE_SYMBOL $21F7 A_MONEY_RANK5
FORCE_SYMBOL $21F9 displayAchievement
FORCE_SYMBOL $21FF ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4
FORCE_SYMBOL $2203 playerCashW
FORCE_NO_SYMBOL $2206
COMMENT $220A no achievement
FORCE_SYMBOL $220F ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4
FORCE_SYMBOL $2214 A_MONEY_RANK4
FORCE_SYMBOL $2216 displayAchievement
FORCE_SYMBOL $221C ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3
FORCE_SYMBOL $2220 playerCashW
FORCE_NO_SYMBOL $2223
COMMENT $2227 no achievement
FORCE_SYMBOL $222C ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3
FORCE_SYMBOL $2231 A_MONEY_RANK3
FORCE_SYMBOL $2233 displayAchievement
FORCE_SYMBOL $2239 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2
FORCE_SYMBOL $223D playerCashW
FORCE_NO_SYMBOL $2240
COMMENT $2244 no achievement
FORCE_SYMBOL $2249 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2
FORCE_SYMBOL $224E A_MONEY_RANK2
FORCE_SYMBOL $2250 displayAchievement
COMMENT_LINE $2253 checking rollover
COMMENT_LINE $2253 because of the firework, no in game check!
FORCE_SYMBOL $2256 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1
FORCE_SYMBOL $225A diverseFlags
FORCE_SYMBOL $225D BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $2264 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1
FORCE_SYMBOL $2269 A_MONEY_RANK1
FORCE_SYMBOL $226B displayAchievement
FORCE_SYMBOL $226E diverseFlags
FORCE_SYMBOL $2273 diverseFlags
COMMENT_LINE $2276 jmp backFromenterShopAchievementTest
COMMENT $2276 backFromenterShopAchievementTest
FORCE_NO_SYMBOL $2276
FORCE_SYMBOL $2279 jmpBankIRQ1Shift
COMMENT_LINE $227C .............................................................................
COMMENT_LINE $227C .............................................................................
COMMENT_LINE $227C .............................................................................
FORCE_SYMBOL $227C flashAvailable
COMMENT $227F game available
FORCE_SYMBOL $227F SAVEGAME_IS_ACTIVE_BIT
COMMENT_LINE $2283 ACHIEVEMENT_FLAG_BYTE2_GREEDY = %00100000 ; check when collected / bought
COMMENT_LINE $2283 ACHIEVEMENT_FLAG_BYTE2_9LIVES = %01000000 ; checked when a live is bought
COMMENT_LINE $2283 - achievement when speed, rate, bullet are all full GREEDY -> start with 2 shot!
COMMENT_LINE $2283 - reach 9 lives: enable bonus drop "LIVE"
FORCE_SYMBOL $2286 ACHIEVEMENT_FLAG_BYTE2_GREEDY
FORCE_SYMBOL $228A playerMaxShotInAir
FORCE_SYMBOL $228D MAX_PLAYERSHOT_OBJECTS
FORCE_SYMBOL $2291 playerShotSpeed
FORCE_SYMBOL $2294 MAX_SHOT_SPEED
FORCE_SYMBOL $229A playerSpeed
FORCE_SYMBOL $229D MAX_PLAYER_SPEED
FORCE_SYMBOL $22A6 ACHIEVEMENT_FLAG_BYTE2_GREEDY
FORCE_SYMBOL $22AB A_GREEDY
FORCE_SYMBOL $22AD displayAchievement
FORCE_SYMBOL $22B3 ACHIEVEMENT_FLAG_BYTE2_9LIVES
FORCE_SYMBOL $22B7 playerLives
FORCE_SYMBOL $22C1 ACHIEVEMENT_FLAG_BYTE2_9LIVES
FORCE_SYMBOL $22C6 A_9LIVES
FORCE_SYMBOL $22C8 displayAchievement
COMMENT $22CB backFromexitshopAchievementTest
FORCE_NO_SYMBOL $22CB
FORCE_SYMBOL $22CE jmpBankIRQ1Shift
FORCE_SYMBOL $22D1 flashAvailable
COMMENT $22D4 game available
FORCE_SYMBOL $22D4 SAVEGAME_IS_ACTIVE_BIT
FORCE_SYMBOL $22DA isDemoMode
COMMENT_LINE $22E1 ACHIEVEMENT_FLAG_BYTE3_TRIPPLE = %00100000 ; checked on EXTRA
COMMENT_LINE $22E1 ACHIEVEMENT_FLAG_BYTE3_QUADRO  = %01000000
COMMENT_LINE $22E1 ACHIEVEMENT_FLAG_BYTE3_LASER   = %10000000
COMMENT_LINE $22E1 - weapon get tripple shot:     Weapon trippler -> unlock buy tripple weapon in shop
COMMENT_LINE $22E1 - weapon get quad shot:     Weapon Quadrupel -> unlock buy quad weapon in shop
COMMENT_LINE $22E1 - weapon get blaster shot:     Weapon Blaster -> unlock buy blaster weapon in shop
COMMENT_LINE $22E1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $22E1 ; do shop waeapon "allows" here
COMMENT_LINE $22E1 ; instead of in the bonus cathc routine
COMMENT_LINE $22E1 ; otherwise by dying these two
COMMENT_LINE $22E1 ; can "drif" appart!
FORCE_SYMBOL $22E1 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $22E4
FORCE_NO_SYMBOL $22E6
FORCE_NO_SYMBOL $22EA
FORCE_NO_SYMBOL $22EE
FORCE_NO_SYMBOL $22F2
FORCE_NO_SYMBOL $22F6
FORCE_NO_SYMBOL $22FA
FORCE_SYMBOL $22FE shopAllowFlags
FORCE_SYMBOL $2301 shopAllowFlags
COMMENT_LINE $2304 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $2307 ACHIEVEMENT_FLAG_BYTE3_TRIPPLE
FORCE_SYMBOL $230B playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $230E
FORCE_SYMBOL $2315 ACHIEVEMENT_FLAG_BYTE3_TRIPPLE
FORCE_SYMBOL $231A A_TRIPPLE
FORCE_SYMBOL $2321 ACHIEVEMENT_FLAG_BYTE3_QUADRO
FORCE_SYMBOL $2325 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $2328
FORCE_SYMBOL $232F ACHIEVEMENT_FLAG_BYTE3_QUADRO
FORCE_SYMBOL $2334 A_QUADRO
FORCE_SYMBOL $233B ACHIEVEMENT_FLAG_BYTE3_LASER
FORCE_SYMBOL $233F playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $2342
FORCE_SYMBOL $2349 ACHIEVEMENT_FLAG_BYTE3_LASER
FORCE_SYMBOL $234E A_LASER
COMMENT_LINE $2352 ACHIEVEMENT_FLAG_BYTE5_BIGGEST_LOSS     = %10000000 ; check on shot on collect
COMMENT_LINE $2352 - weapon drops from laser to 1 shot: Biggest loss! -> unlock buy weapon immunity 1 in shop for 100
FORCE_SYMBOL $2355 ACHIEVEMENT_FLAG_BYTE5_BIGGEST_LOSS
FORCE_SYMBOL $2359 inGameSecrets
FORCE_SYMBOL $235C BIGGEST_LOSS_FLAG
FORCE_SYMBOL $2363 ACHIEVEMENT_FLAG_BYTE5_BIGGEST_LOSS
FORCE_SYMBOL $2368 A_LOSS
COMMENT $236C backFromlevelDoneAchievementTest
FORCE_NO_SYMBOL $236C
FORCE_SYMBOL $236F jmpBank1X
COMMENT_LINE $2372 .............................................................................
COMMENT_LINE $2372 in b #No of achievement
FORCE_SYMBOL $2372 achievmentMessages
COMMENT $2376 in u pointer to current achievement string (from bank 2)
COMMENT_LINE $2378 do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $2378 playSoundFlags
FORCE_NO_SYMBOL $237B
FORCE_SYMBOL $237D BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $237F playSoundFlags
COMMENT $2382 achievementChannel1
FORCE_NO_SYMBOL $2382
FORCE_SYMBOL $2385 sfx_pointer_1
COMMENT $2388 achievementChannel2
FORCE_NO_SYMBOL $2388
FORCE_SYMBOL $238B sfx_pointer_2
COMMENT $238E achievementChannel3
FORCE_NO_SYMBOL $238E
FORCE_SYMBOL $2391 sfx_pointer_3
FORCE_SYMBOL $2394 printAchievement
COMMENT_LINE $2397 .............................................................................
FORCE_SYMBOL $23AC currentPrintedOption
COMMENT_LINE $23AF ------ print Menu Start
FORCE_SYMBOL $23AF optCalibText
FORCE_SYMBOL $23B2 gameScale
FORCE_SYMBOL $23B5 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $23B7
COMMENT $23BA Store Y in D/A register
FORCE_SYMBOL $23BA VIA_port_a
COMMENT $23BC Blank low, zero high?
FORCE_NO_SYMBOL $23BC
FORCE_SYMBOL $23BE VIA_cntl
COMMENT $23C1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $23C1 VIA_port_b
COMMENT_LINE $23C4 nop
COMMENT $23C4 Disable mux
FORCE_SYMBOL $23C4 VIA_port_b
COMMENT $23C6 Store X in D/A register
FORCE_SYMBOL $23C6 VIA_port_a
COMMENT $23C8 enable timer
FORCE_SYMBOL $23C8 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $23CA
FORCE_SYMBOL $23CC VIA_t1_cnt_lo
COMMENT $23CE font starts at 32, *2 because of 16 bit pointer
FORCE_NO_SYMBOL $23D3
FORCE_SYMBOL $23D5 VIA_int_flags
COMMENT $23DD must be d, because otherwise it could be "negative"
COMMENT_LINE $23E0 clra
COMMENT_LINE $23E0 tst ,x+
COMMENT $23E0 faster than tst?
COMMENT $23E4 Get next coordinate pair
FORCE_SYMBOL $23E6 VIA_shift_reg
COMMENT $23E8 Send Y to A/D
FORCE_SYMBOL $23E8 VIA_port_b
COMMENT $23EC Disable mux
FORCE_SYMBOL $23EC VIA_port_b
COMMENT $23EE Send X to A/D
FORCE_SYMBOL $23EE VIA_port_a
COMMENT $23F0 Clear T1H
FORCE_SYMBOL $23F0 VIA_t1_cnt_hi
COMMENT_LINE $23F2 there are never to 0 after another
COMMENT $23F2 Get next coordinate pair
COMMENT $23F6 Get next coordinate pair
FORCE_SYMBOL $23F8 VIA_shift_reg
COMMENT $23FA Send Y to A/D
FORCE_SYMBOL $23FA VIA_port_b
FORCE_NO_SYMBOL $23FC
COMMENT $23FE Disable mux
FORCE_SYMBOL $23FE VIA_port_b
COMMENT $2400 Send X to A/D
FORCE_SYMBOL $2400 VIA_port_a
COMMENT $2404 Clear T1H
FORCE_SYMBOL $2404 VIA_t1_cnt_hi
COMMENT $2406 Store pattern in shift register
FORCE_SYMBOL $2406 VIA_shift_reg
FORCE_NO_SYMBOL $2408
COMMENT_LINE $240A nop
COMMENT $2410 Clear shift register (blank output)
FORCE_SYMBOL $2410 VIA_shift_reg
FORCE_NO_SYMBOL $2414
COMMENT $2416 /BLANK low and /ZERO low
FORCE_SYMBOL $2416 VIA_cntl
COMMENT_LINE $2419 .............................................................................
COMMENT $2419 doReset
FORCE_NO_SYMBOL $2419
FORCE_SYMBOL $241C jmpBankIRQ0Shift
COMMENT_LINE $241F .............................................................................
FORCE_NO_SYMBOL $241F
FORCE_NO_SYMBOL $2428
FORCE_NO_SYMBOL $242A
FORCE_NO_SYMBOL $242E
FORCE_SYMBOL $2431 secretMessagePointer2
FORCE_SYMBOL $2436 jsrBank0_fromBank2_Shift
FORCE_NO_SYMBOL $2439
FORCE_SYMBOL $243F optionsLoop
FORCE_NO_SYMBOL $2442
FORCE_SYMBOL $2445 jsrBank0_fromBank2_Shift
COMMENT_LINE $244A .............................................................................
COMMENT_LINE $2458 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $2458 rankPointer
FORCE_SYMBOL $245B officerRankTmp
FORCE_NO_SYMBOL $2461
FORCE_SYMBOL $2464 syncPrintStrd
COMMENT_LINE $2467 bank 2
COMMENT_LINE $2467 temporary RAM
COMMENT_LINE $2467 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
FORCE_SYMBOL $2467 levelCount
FORCE_NO_SYMBOL $246B
COMMENT $246F correct boss
FORCE_NO_SYMBOL $2470
COMMENT $2474 correct boss
FORCE_NO_SYMBOL $2475
COMMENT $2479 correct boss
FORCE_SYMBOL $247B levelConversionString
FORCE_SYMBOL $247E wordToDecString
FORCE_NO_SYMBOL $2481
FORCE_SYMBOL $2483 leadingZeroToSpace
COMMENT_LINE $2487 .....................................................
COMMENT_LINE $2487 all possible stat "lines"
COMMENT $2487 difficulty
COMMENT $2489 rank
COMMENT $248B level
COMMENT $248D lives
COMMENT $248F cash
COMMENT $249B speed
COMMENT $249D Bullet
COMMENT $249F rate
FORCE_NO_SYMBOL $2504
FORCE_SYMBOL $2507 Vec_Text_HW
COMMENT $250A get button status
FORCE_SYMBOL $250A getButtonState
COMMENT $250D button 4 unpause
FORCE_NO_SYMBOL $250D
COMMENT $2511 10
FORCE_NO_SYMBOL $2511
FORCE_SYMBOL $2513 Vec_Text_HW
COMMENT $2516 main12
FORCE_NO_SYMBOL $2516
FORCE_SYMBOL $2519 jmpBank1X
FORCE_SYMBOL $251C Intensity_5F
FORCE_SYMBOL $251F gameScale
FORCE_SYMBOL $2522 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $2524
FORCE_SYMBOL $2527 DrunkString1
COMMENT $252A Print5Strd
FORCE_SYMBOL $252A syncPrintStrd
FORCE_NO_SYMBOL $252D
COMMENT $252F /BLANK low and /ZERO low
FORCE_SYMBOL $252F VIA_cntl
FORCE_NO_SYMBOL $2531
FORCE_SYMBOL $2534 DrunkString2
COMMENT $2537 Print5Strd
FORCE_SYMBOL $2537 syncPrintStrd
FORCE_NO_SYMBOL $253A
COMMENT $253C /BLANK low and /ZERO low
FORCE_SYMBOL $253C VIA_cntl
FORCE_NO_SYMBOL $253E
FORCE_SYMBOL $2541 DrunkString3
COMMENT $2544 Print5Strd
FORCE_SYMBOL $2544 syncPrintStrd
FORCE_NO_SYMBOL $2547
COMMENT $2549 /BLANK low and /ZERO low
FORCE_SYMBOL $2549 VIA_cntl
FORCE_NO_SYMBOL $254B
FORCE_SYMBOL $254E DrunkString4
COMMENT $2551 Print5Strd
FORCE_SYMBOL $2551 syncPrintStrd
FORCE_NO_SYMBOL $2554
COMMENT $2556 /BLANK low and /ZERO low
FORCE_SYMBOL $2556 VIA_cntl
FORCE_NO_SYMBOL $2558
FORCE_SYMBOL $255B DrunkString1
COMMENT $255E Print5Strd
FORCE_SYMBOL $255E syncPrintStrd
FORCE_NO_SYMBOL $2561
COMMENT $2563 /BLANK low and /ZERO low
FORCE_SYMBOL $2563 VIA_cntl
COMMENT_LINE $2567 .....................................................
COMMENT $2567 shadow regs
FORCE_SYMBOL $2567 Init_Music_Buf
COMMENT $256A copySoundRegs
FORCE_NO_SYMBOL $256A
FORCE_SYMBOL $256D jsrBank1_fromBank2_T1
FORCE_SYMBOL $2570 pauseLineStart
FORCE_SYMBOL $2573 lastPauseDir
FORCE_SYMBOL $2576 pauseScrollOffsertY
COMMENT_LINE $2579 ;;;;
FORCE_SYMBOL $2579 pauseScrollOffsertY
FORCE_SYMBOL $2580 pauseScrollOffsertY
FORCE_SYMBOL $2583 pauseScrollOffsertY
FORCE_SYMBOL $2588 pauseScrollOffsertY
FORCE_SYMBOL $258B pauseScrollOffsertY
FORCE_SYMBOL $258E VIA_t2_hi
FORCE_SYMBOL $2590 t2_rest
FORCE_SYMBOL $2594 VIA_shift_reg
FORCE_SYMBOL $2596 Wait_Recal
FORCE_SYMBOL $2599 drunkTimer
FORCE_NO_SYMBOL $25A0
FORCE_SYMBOL $25A3 Vec_Text_HW
FORCE_NO_SYMBOL $25A6
FORCE_SYMBOL $25A8 pauseLineCount
FORCE_SYMBOL $25AB Joy_Digital_vertical_0_0
FORCE_SYMBOL $25AE Vec_Joy_1_Y
FORCE_SYMBOL $25B3 lastPauseDir
FORCE_SYMBOL $25B8 Vec_Joy_1_Y
FORCE_SYMBOL $25BD lastPauseDir
COMMENT $25C0 page scroll 5 lines per page
FORCE_NO_SYMBOL $25C0
FORCE_SYMBOL $25C2 pauseLineStart
FORCE_SYMBOL $25C5 pauseLineStart
FORCE_NO_SYMBOL $25C8
FORCE_SYMBOL $25CA pstartLines
FORCE_SYMBOL $25D2 pauseLineStart
FORCE_SYMBOL $25D9 pauseScrollOffsertY
FORCE_SYMBOL $25E1 lastPauseDir
FORCE_SYMBOL $25E4 pauseLineStart
COMMENT $25EB page scroll 5 lines per page
FORCE_NO_SYMBOL $25EB
FORCE_SYMBOL $25ED pauseLineStart
FORCE_SYMBOL $25F2 pauseLineStart
FORCE_SYMBOL $25F7 PAUSE_SCROLL_OFFSET
FORCE_SYMBOL $25F9 pauseScrollOffsertY
FORCE_SYMBOL $2601 lastPauseDir
COMMENT $2604 get button status
FORCE_SYMBOL $2604 getButtonState
COMMENT $2607 button 4 unpause
FORCE_NO_SYMBOL $2607
COMMENT $260B showPSHelp
FORCE_NO_SYMBOL $260B
FORCE_SYMBOL $260E doShiftIRQ
COMMENT $2611 button 4 unpause
FORCE_NO_SYMBOL $2611
FORCE_SYMBOL $2615 backFromPause
COMMENT_LINE $2618 REPLACE_1_2_main12_varFrom1_1                             ;  bank 1 replace
COMMENT_LINE $2618 ldx      #0                           ; main12
COMMENT_LINE $2618 jmp      jmpBank1X
COMMENT_LINE $2618 inStorageCont
COMMENT_LINE $2618 Print highscore
COMMENT $2618 displayScore
FORCE_NO_SYMBOL $2618
FORCE_SYMBOL $261B jsrBank1X
FORCE_NO_SYMBOL $261E
COMMENT $2620 Store intensity in D/A
FORCE_SYMBOL $2620 VIA_port_a
COMMENT $2622 mux disabled channel 2
FORCE_NO_SYMBOL $2622
FORCE_SYMBOL $2625 VIA_port_b
COMMENT $2627 mux enabled channel 2
FORCE_SYMBOL $2627 VIA_port_b
COMMENT $2629 turn off mux
FORCE_SYMBOL $2629 VIA_port_b
FORCE_SYMBOL $262B gameScale
FORCE_SYMBOL $262E VIA_t1_cnt_lo
COMMENT_LINE $2630 Print PAUSE
COMMENT $2630 6ad0
FORCE_NO_SYMBOL $2630
COMMENT $2633 pauseString
FORCE_SYMBOL $2633 pauseString
FORCE_SYMBOL $2636 Print5Strd
FORCE_NO_SYMBOL $2639
COMMENT $263B /BLANK low and /ZERO low
FORCE_SYMBOL $263B VIA_cntl
COMMENT $263D 10
FORCE_NO_SYMBOL $263D
FORCE_SYMBOL $263F Vec_Text_HW
FORCE_NO_SYMBOL $2642
FORCE_SYMBOL $2644 pauseLineCount
COMMENT $2647 #$26a0
FORCE_NO_SYMBOL $2647
FORCE_SYMBOL $264A pauseLinePos
FORCE_SYMBOL $264D pauseLineStart
FORCE_SYMBOL $2650 pstartLines
FORCE_SYMBOL $2656 pauseLinePos
FORCE_SYMBOL $2659 pauseScrollOffsertY
FORCE_NO_SYMBOL $265C
FORCE_SYMBOL $265E difficulty
COMMENT $2661 blend out "hardcore"
FORCE_NO_SYMBOL $2661
FORCE_SYMBOL $2665 pEasyString
FORCE_NO_SYMBOL $266A
FORCE_SYMBOL $266E pnormaString
FORCE_NO_SYMBOL $2673
FORCE_SYMBOL $2677 phardString
FORCE_NO_SYMBOL $267C
FORCE_SYMBOL $2680 pimpossibleString
FORCE_SYMBOL $2685 psuperimpossibleString
FORCE_SYMBOL $268A pauseLinePos
FORCE_SYMBOL $268D pauseScrollOffsertY
COMMENT $2690 Print5Strd
FORCE_SYMBOL $2690 syncPrintStrd
FORCE_NO_SYMBOL $2693
COMMENT $2695 /BLANK low and /ZERO low
FORCE_SYMBOL $2695 VIA_cntl
FORCE_SYMBOL $2697 pauseLineCount
FORCE_SYMBOL $269E pauseLinePos
FORCE_NO_SYMBOL $26A1
FORCE_SYMBOL $26A3 pauseLinePos
FORCE_SYMBOL $26A6 pauseScrollOffsertY
FORCE_SYMBOL $26A9 officerRankTmp
FORCE_SYMBOL $26AC rankPointer
FORCE_SYMBOL $26B2 pauseLinePos
FORCE_SYMBOL $26B5 pauseScrollOffsertY
COMMENT $26B8 Print5Strd
FORCE_SYMBOL $26B8 syncPrintStrd
FORCE_NO_SYMBOL $26BB
COMMENT $26BD /BLANK low and /ZERO low
FORCE_SYMBOL $26BD VIA_cntl
FORCE_SYMBOL $26BF pauseLineCount
FORCE_SYMBOL $26C6 pauseLinePos
FORCE_NO_SYMBOL $26C9
FORCE_SYMBOL $26CB pauseLinePos
FORCE_SYMBOL $26CE pauseScrollOffsertY
COMMENT_LINE $26D1 Print Level + number
COMMENT_LINE $26D1 ldd      pauseLinePos
FORCE_SYMBOL $26D1 currentLeveString
COMMENT $26D4 Print5Strd
FORCE_SYMBOL $26D4 syncPrintStrd
FORCE_NO_SYMBOL $26D7
COMMENT $26D9 /BLANK low and /ZERO low
FORCE_SYMBOL $26D9 VIA_cntl
FORCE_SYMBOL $26DB fillLevelString
FORCE_SYMBOL $26DE pauseLinePos
FORCE_SYMBOL $26E1 pauseLinePos
FORCE_SYMBOL $26E4 pauseScrollOffsertY
FORCE_NO_SYMBOL $26E7
COMMENT $26E9 Print5Strd
FORCE_SYMBOL $26E9 syncPrintStrd
FORCE_NO_SYMBOL $26EC
COMMENT $26EE /BLANK low and /ZERO low
FORCE_SYMBOL $26EE VIA_cntl
FORCE_SYMBOL $26F0 pauseLineCount
FORCE_SYMBOL $26F7 pauseLinePos
FORCE_NO_SYMBOL $26FA
FORCE_SYMBOL $26FC pauseLinePos
FORCE_SYMBOL $26FF pauseScrollOffsertY
COMMENT_LINE $2702 print lives+ number
COMMENT $2702 LivesString
FORCE_SYMBOL $2702 LivesString
COMMENT $2705 Print5Strd
FORCE_SYMBOL $2705 syncPrintStrd
FORCE_NO_SYMBOL $2708
COMMENT $270A /BLANK low and /ZERO low
FORCE_SYMBOL $270A VIA_cntl
FORCE_SYMBOL $270C playerLivesString
FORCE_SYMBOL $270F pauseLinePos
FORCE_SYMBOL $2712 pauseScrollOffsertY
FORCE_NO_SYMBOL $2715
COMMENT $2717 Print5Strd
FORCE_SYMBOL $2717 syncPrintStrd
FORCE_NO_SYMBOL $271A
COMMENT $271C /BLANK low and /ZERO low
FORCE_SYMBOL $271C VIA_cntl
FORCE_SYMBOL $271E pauseLineCount
FORCE_SYMBOL $2725 pauseLinePos
FORCE_NO_SYMBOL $2728
FORCE_SYMBOL $272A pauseLinePos
FORCE_SYMBOL $272D pauseScrollOffsertY
COMMENT_LINE $2730 Print Cash + number
FORCE_SYMBOL $2730 difficulty
COMMENT $2735 cashString
FORCE_SYMBOL $2735 cashString
COMMENT $2738 Print5Strd
FORCE_SYMBOL $2738 syncPrintStrd
FORCE_NO_SYMBOL $273B
COMMENT $273D /BLANK low and /ZERO low
FORCE_SYMBOL $273D VIA_cntl
FORCE_SYMBOL $273F playerCashW
FORCE_SYMBOL $2742 StringOutputBuffer_4
FORCE_SYMBOL $2745 wordToDecString
FORCE_SYMBOL $2748 pauseLinePos
FORCE_SYMBOL $274B pauseScrollOffsertY
FORCE_NO_SYMBOL $274E
FORCE_SYMBOL $2750 StringOutputBuffer_4
COMMENT $2753 Print5Strd
FORCE_SYMBOL $2753 syncPrintStrd
FORCE_NO_SYMBOL $2756
COMMENT $2758 /BLANK low and /ZERO low
FORCE_SYMBOL $2758 VIA_cntl
FORCE_SYMBOL $275A pauseLineCount
FORCE_SYMBOL $2761 pauseLinePos
FORCE_NO_SYMBOL $2764
FORCE_SYMBOL $2766 pauseLinePos
FORCE_SYMBOL $2769 pauseScrollOffsertY
COMMENT_LINE $276C print shots fired + number
COMMENT $276C shotsFiredString
FORCE_SYMBOL $276C shotsFiredString
COMMENT $276F Print5Strd
FORCE_SYMBOL $276F syncPrintStrd
FORCE_NO_SYMBOL $2772
COMMENT $2774 /BLANK low and /ZERO low
FORCE_SYMBOL $2774 VIA_cntl
FORCE_SYMBOL $2776 playerShotCountW
FORCE_SYMBOL $2779 StringOutputBuffer_4
FORCE_SYMBOL $277C wordToDecString
FORCE_SYMBOL $277F pauseLinePos
FORCE_SYMBOL $2782 pauseScrollOffsertY
FORCE_NO_SYMBOL $2785
FORCE_SYMBOL $2787 StringOutputBuffer_4
COMMENT $278A Print5Strd
FORCE_SYMBOL $278A syncPrintStrd
FORCE_NO_SYMBOL $278D
COMMENT $278F /BLANK low and /ZERO low
FORCE_SYMBOL $278F VIA_cntl
FORCE_SYMBOL $2791 pauseLineCount
FORCE_SYMBOL $2798 pauseLinePos
FORCE_NO_SYMBOL $279B
FORCE_SYMBOL $279D pauseLinePos
FORCE_SYMBOL $27A0 pauseScrollOffsertY
COMMENT_LINE $27A3 print enemies hit + number
COMMENT $27A3 enemiesHitString
FORCE_SYMBOL $27A3 enemiesHitString
COMMENT $27A6 Print5Strd
FORCE_SYMBOL $27A6 syncPrintStrd
FORCE_NO_SYMBOL $27A9
COMMENT $27AB /BLANK low and /ZERO low
FORCE_SYMBOL $27AB VIA_cntl
FORCE_SYMBOL $27AD playerHitCountW
FORCE_SYMBOL $27B0 StringOutputBuffer_4
FORCE_SYMBOL $27B3 wordToDecString
FORCE_SYMBOL $27B6 pauseLinePos
FORCE_SYMBOL $27B9 pauseScrollOffsertY
FORCE_NO_SYMBOL $27BC
FORCE_SYMBOL $27BE StringOutputBuffer_4
COMMENT $27C1 Print5Strd
FORCE_SYMBOL $27C1 syncPrintStrd
FORCE_NO_SYMBOL $27C4
COMMENT $27C6 /BLANK low and /ZERO low
FORCE_SYMBOL $27C6 VIA_cntl
FORCE_SYMBOL $27C8 pauseLineCount
FORCE_SYMBOL $27CF pauseLinePos
FORCE_NO_SYMBOL $27D2
FORCE_SYMBOL $27D4 pauseLinePos
FORCE_SYMBOL $27D7 pauseScrollOffsertY
COMMENT_LINE $27DA WEAPON
FORCE_SYMBOL $27DA playerNumberOfBulletsPerShot
FORCE_SYMBOL $27DF Weapons
FORCE_SYMBOL $27E4 pauseLinePos
FORCE_SYMBOL $27E7 pauseScrollOffsertY
COMMENT $27EA Print5Strd
FORCE_SYMBOL $27EA syncPrintStrd
FORCE_NO_SYMBOL $27ED
COMMENT $27EF /BLANK low and /ZERO low
FORCE_SYMBOL $27EF VIA_cntl
FORCE_SYMBOL $27F1 pauseLineCount
FORCE_SYMBOL $27F8 pauseLinePos
FORCE_NO_SYMBOL $27FB
FORCE_SYMBOL $27FD pauseLinePos
FORCE_SYMBOL $2800 pauseScrollOffsertY
COMMENT_LINE $2803 print timer + number
COMMENT $2803 timerString2
FORCE_SYMBOL $2803 timerString2
COMMENT $2806 Print5Strd
FORCE_SYMBOL $2806 syncPrintStrd
FORCE_NO_SYMBOL $2809
COMMENT $280B /BLANK low and /ZERO low
FORCE_SYMBOL $280B VIA_cntl
FORCE_SYMBOL $280D bonusTimerLength
COMMENT $2810 *2 (/ 100 - but that is only leave out the last two 00 from printing!
FORCE_SYMBOL $2812 StringOutputBuffer_4
FORCE_SYMBOL $2815 wordToDecString
FORCE_SYMBOL $2818 leadingZeroToSpace
FORCE_SYMBOL $281B StringOutputBuffer_3
FORCE_SYMBOL $281E StringOutputBuffer_1
FORCE_SYMBOL $2821 StringOutputBuffer_4
FORCE_SYMBOL $2824 StringOutputBuffer_2
FORCE_NO_SYMBOL $2827
FORCE_SYMBOL $282A StringOutputBuffer_4
FORCE_SYMBOL $282D pauseLinePos
FORCE_SYMBOL $2830 pauseScrollOffsertY
FORCE_NO_SYMBOL $2833
FORCE_SYMBOL $2835 StringOutputBuffer_4
COMMENT $2838 Print5Strd
FORCE_SYMBOL $2838 syncPrintStrd
FORCE_NO_SYMBOL $283B
COMMENT $283D /BLANK low and /ZERO low
FORCE_SYMBOL $283D VIA_cntl
FORCE_SYMBOL $283F pauseLineCount
FORCE_SYMBOL $2846 pauseLinePos
FORCE_NO_SYMBOL $2849
FORCE_SYMBOL $284B pauseLinePos
FORCE_SYMBOL $284E pauseScrollOffsertY
COMMENT_LINE $2851 Print power + number
COMMENT_LINE $2851 ldd      pauseLinePos
FORCE_SYMBOL $2851 powerString
COMMENT $2854 Print5Strd
FORCE_SYMBOL $2854 syncPrintStrd
FORCE_NO_SYMBOL $2857
COMMENT $2859 /BLANK low and /ZERO low
FORCE_SYMBOL $2859 VIA_cntl
FORCE_SYMBOL $285C bulletDamage
FORCE_SYMBOL $285F StringOutputBuffer_4
FORCE_SYMBOL $2862 wordToDecString
FORCE_SYMBOL $2865 leadingZeroToSpace
FORCE_SYMBOL $2868 pauseLinePos
FORCE_SYMBOL $286B pauseScrollOffsertY
FORCE_NO_SYMBOL $286E
COMMENT $2870 Print5Strd
FORCE_SYMBOL $2870 syncPrintStrd
FORCE_NO_SYMBOL $2873
COMMENT $2875 /BLANK low and /ZERO low
FORCE_SYMBOL $2875 VIA_cntl
FORCE_SYMBOL $2877 pauseLineCount
FORCE_SYMBOL $287E pauseLinePos
FORCE_NO_SYMBOL $2881
FORCE_SYMBOL $2883 pauseLinePos
FORCE_SYMBOL $2886 pauseScrollOffsertY
COMMENT_LINE $2889 Print speed + number
COMMENT_LINE $2889 ldd      pauseLinePos
FORCE_SYMBOL $2889 shipSpeedString
COMMENT $288C Print5Strd
FORCE_SYMBOL $288C syncPrintStrd
FORCE_NO_SYMBOL $288F
COMMENT $2891 /BLANK low and /ZERO low
FORCE_SYMBOL $2891 VIA_cntl
FORCE_SYMBOL $2893 playerSpeed
FORCE_SYMBOL $2896 StringOutputBuffer_4
FORCE_SYMBOL $2899 wordToDecString
FORCE_SYMBOL $289C leadingZeroToSpace
FORCE_SYMBOL $289F pauseLinePos
FORCE_SYMBOL $28A2 pauseScrollOffsertY
FORCE_NO_SYMBOL $28A5
COMMENT $28A7 Print5Strd
FORCE_SYMBOL $28A7 syncPrintStrd
FORCE_NO_SYMBOL $28AA
COMMENT $28AC /BLANK low and /ZERO low
FORCE_SYMBOL $28AC VIA_cntl
FORCE_SYMBOL $28AE pauseLineCount
FORCE_SYMBOL $28B5 pauseLinePos
FORCE_NO_SYMBOL $28B8
FORCE_SYMBOL $28BA pauseLinePos
FORCE_SYMBOL $28BD pauseScrollOffsertY
COMMENT_LINE $28C0 Print bullets + number
FORCE_SYMBOL $28C0 bulletsString
COMMENT $28C3 Print5Strd
FORCE_SYMBOL $28C3 syncPrintStrd
FORCE_NO_SYMBOL $28C6
COMMENT $28C8 /BLANK low and /ZERO low
FORCE_SYMBOL $28C8 VIA_cntl
FORCE_SYMBOL $28CB playerMaxShotInAir
FORCE_SYMBOL $28CE StringOutputBuffer_4
FORCE_SYMBOL $28D1 wordToDecString
FORCE_SYMBOL $28D4 leadingZeroToSpace
FORCE_SYMBOL $28D7 pauseLinePos
FORCE_SYMBOL $28DA pauseScrollOffsertY
FORCE_NO_SYMBOL $28DD
COMMENT $28DF Print5Strd
FORCE_SYMBOL $28DF syncPrintStrd
FORCE_NO_SYMBOL $28E2
COMMENT $28E4 /BLANK low and /ZERO low
FORCE_SYMBOL $28E4 VIA_cntl
FORCE_SYMBOL $28E6 pauseLineCount
FORCE_SYMBOL $28ED pauseLinePos
FORCE_NO_SYMBOL $28F0
FORCE_SYMBOL $28F2 pauseLinePos
FORCE_SYMBOL $28F5 pauseScrollOffsertY
COMMENT_LINE $28F8 Print rate + number
COMMENT_LINE $28F8 ldd      pauseLinePos
FORCE_SYMBOL $28F8 rateString
COMMENT $28FB Print5Strd
FORCE_SYMBOL $28FB syncPrintStrd
FORCE_NO_SYMBOL $28FE
COMMENT $2900 /BLANK low and /ZERO low
FORCE_SYMBOL $2900 VIA_cntl
FORCE_SYMBOL $2902 playerShotSpeed
FORCE_SYMBOL $2905 StringOutputBuffer_4
FORCE_SYMBOL $2908 wordToDecString
FORCE_SYMBOL $290B leadingZeroToSpace
FORCE_SYMBOL $290E pauseLinePos
FORCE_SYMBOL $2911 pauseScrollOffsertY
FORCE_NO_SYMBOL $2914
COMMENT $2916 Print5Strd
FORCE_SYMBOL $2916 syncPrintStrd
FORCE_NO_SYMBOL $2919
COMMENT $291B /BLANK low and /ZERO low
FORCE_SYMBOL $291B VIA_cntl
FORCE_SYMBOL $291D pauseLineCount
FORCE_SYMBOL $2924 pauseLinePos
FORCE_NO_SYMBOL $2927
FORCE_SYMBOL $2929 pauseLinePos
FORCE_SYMBOL $292C pauseScrollOffsertY
COMMENT_LINE $292F RANK MARKER
FORCE_SYMBOL $292F rankMarkerString
COMMENT_LINE $2932 ldd      pauseLinePos
COMMENT $2932 Print5Strd ; Print5Strd 5Strd
FORCE_SYMBOL $2932 syncPrintStrd
FORCE_NO_SYMBOL $2935
COMMENT $2937 /BLANK low and /ZERO low
FORCE_SYMBOL $2937 VIA_cntl
FORCE_SYMBOL $2939 smartBombsAvailable
FORCE_SYMBOL $293D StringOutputBuffer_6
FORCE_SYMBOL $2940 rankCollected
FORCE_SYMBOL $2943 COLLECTED_RANK1
FORCE_SYMBOL $294F COLLECTED_RANK2
FORCE_SYMBOL $295B COLLECTED_RANK3
FORCE_SYMBOL $2967 COLLECTED_RANK4
FORCE_SYMBOL $2973 COLLECTED_RANK5
FORCE_SYMBOL $297F COLLECTED_RANK6
FORCE_NO_SYMBOL $298B
FORCE_SYMBOL $298F StringOutputBuffer_6
FORCE_SYMBOL $2992 pauseLinePos
FORCE_SYMBOL $2995 pauseScrollOffsertY
FORCE_NO_SYMBOL $2998
COMMENT $299A Print5Strd
FORCE_SYMBOL $299A syncPrintStrd
FORCE_NO_SYMBOL $299D
COMMENT $299F /BLANK low and /ZERO low
FORCE_SYMBOL $299F VIA_cntl
FORCE_SYMBOL $29A1 pauseLineCount
FORCE_SYMBOL $29A8 pauseLinePos
FORCE_NO_SYMBOL $29AB
FORCE_SYMBOL $29AD pauseLinePos
FORCE_SYMBOL $29B0 pauseScrollOffsertY
COMMENT_LINE $29B3 ARMOR/SHIELD/SUCKING
FORCE_SYMBOL $29B3 playerBonusActive
FORCE_NO_SYMBOL $29B6
FORCE_SYMBOL $29BA armorPauseString
FORCE_NO_SYMBOL $29BF
FORCE_SYMBOL $29C3 shieldPauseString
FORCE_NO_SYMBOL $29C8
FORCE_SYMBOL $29CC scoopPauseString
FORCE_SYMBOL $29D1 secretUNKOWN2
FORCE_SYMBOL $29D4 pauseLinePos
FORCE_SYMBOL $29D7 pauseScrollOffsertY
COMMENT $29DA Print5Strd
FORCE_SYMBOL $29DA syncPrintStrd
FORCE_NO_SYMBOL $29DD
COMMENT $29DF /BLANK low and /ZERO low
FORCE_SYMBOL $29DF VIA_cntl
FORCE_SYMBOL $29E1 pauseLineCount
FORCE_SYMBOL $29E8 pauseLinePos
FORCE_NO_SYMBOL $29EB
FORCE_SYMBOL $29ED pauseLinePos
FORCE_SYMBOL $29F0 pauseScrollOffsertY
COMMENT_LINE $29F3 AUTOFIRE
FORCE_SYMBOL $29F3 diverseFlags
FORCE_SYMBOL $29F6 BIT_FLAG_AUTOFIRE
FORCE_SYMBOL $29FA autofirePauseString
FORCE_SYMBOL $29FF noautofirePauseString
FORCE_SYMBOL $2A02 pauseLinePos
FORCE_SYMBOL $2A05 pauseScrollOffsertY
COMMENT $2A08 Print5Strd
FORCE_SYMBOL $2A08 syncPrintStrd
FORCE_NO_SYMBOL $2A0B
COMMENT $2A0D /BLANK low and /ZERO low
FORCE_SYMBOL $2A0D VIA_cntl
FORCE_SYMBOL $2A0F pauseLineCount
FORCE_SYMBOL $2A16 pauseLinePos
FORCE_NO_SYMBOL $2A19
FORCE_SYMBOL $2A1B pauseLinePos
FORCE_SYMBOL $2A1E pauseScrollOffsertY
FORCE_SYMBOL $2A21 secretUNKOWN
FORCE_SYMBOL $2A24 lockPurchased
FORCE_NO_SYMBOL $2A27
FORCE_SYMBOL $2A2B pScoopShieldString
FORCE_SYMBOL $2A2E pauseLinePos
FORCE_SYMBOL $2A31 pauseScrollOffsertY
COMMENT $2A34 Print5Strd
FORCE_SYMBOL $2A34 syncPrintStrd
FORCE_NO_SYMBOL $2A37
COMMENT $2A39 /BLANK low and /ZERO low
FORCE_SYMBOL $2A39 VIA_cntl
FORCE_SYMBOL $2A3B pauseLineCount
FORCE_SYMBOL $2A42 pauseLinePos
FORCE_NO_SYMBOL $2A45
FORCE_SYMBOL $2A47 pauseLinePos
FORCE_SYMBOL $2A4A pauseScrollOffsertY
COMMENT_LINE $2A4D Print bullets + immunity 1
FORCE_SYMBOL $2A4D secretUNKOWN
FORCE_SYMBOL $2A50 downgradeImmunity
FORCE_SYMBOL $2A53 IMUNITY_BITS
FORCE_SYMBOL $2A57 immunity1String
FORCE_SYMBOL $2A5A pauseLinePos
FORCE_SYMBOL $2A5D pauseScrollOffsertY
COMMENT $2A60 Print5Strd
FORCE_SYMBOL $2A60 syncPrintStrd
FORCE_NO_SYMBOL $2A63
COMMENT $2A65 /BLANK low and /ZERO low
FORCE_SYMBOL $2A65 VIA_cntl
FORCE_SYMBOL $2A67 pauseLineCount
FORCE_SYMBOL $2A6E pauseLinePos
FORCE_NO_SYMBOL $2A71
FORCE_SYMBOL $2A73 pauseLinePos
FORCE_SYMBOL $2A76 pauseScrollOffsertY
COMMENT_LINE $2A79 Print bullets + immunity 2
FORCE_SYMBOL $2A79 secretUNKOWN
FORCE_SYMBOL $2A7C downgradeImmunity
FORCE_SYMBOL $2A7F IMUNITY_2
FORCE_NO_SYMBOL $2A81
FORCE_SYMBOL $2A85 immunity2String_
FORCE_SYMBOL $2A88 pauseLinePos
FORCE_SYMBOL $2A8B pauseScrollOffsertY
COMMENT $2A8E Print5Strd
FORCE_SYMBOL $2A8E syncPrintStrd
FORCE_NO_SYMBOL $2A91
COMMENT $2A93 /BLANK low and /ZERO low
FORCE_SYMBOL $2A93 VIA_cntl
FORCE_SYMBOL $2A95 pauseLineCount
FORCE_SYMBOL $2A9C pauseLinePos
FORCE_NO_SYMBOL $2A9F
FORCE_SYMBOL $2AA1 pauseLinePos
FORCE_SYMBOL $2AA4 pauseScrollOffsertY
COMMENT_LINE $2AA7 Weapon lock
FORCE_SYMBOL $2AA7 lockPurchased
FORCE_NO_SYMBOL $2AAA
FORCE_SYMBOL $2AAE pauseLinePos
FORCE_SYMBOL $2AB1 pauseScrollOffsertY
FORCE_SYMBOL $2AB4 wlockString
COMMENT $2AB7 Print5Strd
FORCE_SYMBOL $2AB7 syncPrintStrd
FORCE_NO_SYMBOL $2ABA
COMMENT $2ABC /BLANK low and /ZERO low
FORCE_SYMBOL $2ABC VIA_cntl
FORCE_SYMBOL $2ABF lockPurchased
FORCE_NO_SYMBOL $2AC2
FORCE_SYMBOL $2AC4 StringOutputBuffer_4
FORCE_SYMBOL $2AC7 wordToDecString
FORCE_SYMBOL $2ACA leadingZeroToSpace
FORCE_SYMBOL $2ACD pauseLinePos
FORCE_SYMBOL $2AD0 pauseScrollOffsertY
FORCE_NO_SYMBOL $2AD3
FORCE_SYMBOL $2AD7 pauseLinePos
FORCE_SYMBOL $2ADA pauseScrollOffsertY
FORCE_SYMBOL $2ADD secretUNKOWN
COMMENT $2AE0 Print5Strd
FORCE_SYMBOL $2AE0 syncPrintStrd
FORCE_NO_SYMBOL $2AE3
COMMENT $2AE5 /BLANK low and /ZERO low
FORCE_SYMBOL $2AE5 VIA_cntl
FORCE_SYMBOL $2AE7 pauseLineCount
FORCE_SYMBOL $2AEE pauseLinePos
FORCE_NO_SYMBOL $2AF1
FORCE_SYMBOL $2AF3 pauseLinePos
FORCE_SYMBOL $2AF6 pauseScrollOffsertY
FORCE_SYMBOL $2AF9 secretUNKOWN
FORCE_SYMBOL $2AFC lockPurchased
FORCE_NO_SYMBOL $2AFF
FORCE_SYMBOL $2B03 slockString
FORCE_SYMBOL $2B06 pauseLinePos
FORCE_SYMBOL $2B09 pauseScrollOffsertY
COMMENT $2B0C Print5Strd
FORCE_SYMBOL $2B0C syncPrintStrd
FORCE_NO_SYMBOL $2B0F
COMMENT $2B11 /BLANK low and /ZERO low
FORCE_SYMBOL $2B11 VIA_cntl
FORCE_SYMBOL $2B13 pauseLineCount
FORCE_SYMBOL $2B1A pauseLinePos
FORCE_NO_SYMBOL $2B1D
FORCE_SYMBOL $2B1F pauseLinePos
FORCE_SYMBOL $2B22 pauseScrollOffsertY
FORCE_SYMBOL $2B25 inGameSecrets
FORCE_SYMBOL $2B28 SECRET_3_BULLET_SUCKERS
FORCE_SYMBOL $2B2C superBombsAvailable
FORCE_SYMBOL $2B2F pauseLinePos
FORCE_SYMBOL $2B32 pauseScrollOffsertY
COMMENT $2B35 Print5Strd
FORCE_SYMBOL $2B35 syncPrintStrd
FORCE_NO_SYMBOL $2B38
COMMENT $2B3A /BLANK low and /ZERO low
FORCE_SYMBOL $2B3A VIA_cntl
FORCE_SYMBOL $2B3C smartBombsAvailable
FORCE_SYMBOL $2B40 StringOutputBuffer_4
FORCE_SYMBOL $2B43 wordToDecString
FORCE_SYMBOL $2B46 leadingZeroToSpace
FORCE_SYMBOL $2B49 pauseLinePos
FORCE_SYMBOL $2B4C pauseScrollOffsertY
FORCE_NO_SYMBOL $2B4F
FORCE_SYMBOL $2B53 secretUNKOWN
FORCE_SYMBOL $2B56 pauseLinePos
FORCE_SYMBOL $2B59 pauseScrollOffsertY
COMMENT $2B5C Print5Strd
FORCE_SYMBOL $2B5C syncPrintStrd
FORCE_NO_SYMBOL $2B5F
COMMENT $2B61 /BLANK low and /ZERO low
FORCE_SYMBOL $2B61 VIA_cntl
FORCE_SYMBOL $2B63 pauseLineCount
FORCE_SYMBOL $2B6A pauseLinePos
FORCE_NO_SYMBOL $2B6D
FORCE_SYMBOL $2B6F pauseLinePos
FORCE_SYMBOL $2B72 pauseScrollOffsertY
FORCE_SYMBOL $2B75 inGameSecrets
FORCE_SYMBOL $2B78 SECRET_3_BULLET_SUCKERS
FORCE_SYMBOL $2B7C superDiamondsCollected
FORCE_SYMBOL $2B7F pauseLinePos
FORCE_SYMBOL $2B82 pauseScrollOffsertY
COMMENT $2B85 Print5Strd
FORCE_SYMBOL $2B85 syncPrintStrd
FORCE_NO_SYMBOL $2B88
COMMENT $2B8A /BLANK low and /ZERO low
FORCE_SYMBOL $2B8A VIA_cntl
FORCE_SYMBOL $2B8C diamondCount
FORCE_SYMBOL $2B90 StringOutputBuffer_4
FORCE_SYMBOL $2B93 wordToDecString
FORCE_SYMBOL $2B96 leadingZeroToSpace
FORCE_SYMBOL $2B99 pauseLinePos
FORCE_SYMBOL $2B9C pauseScrollOffsertY
FORCE_NO_SYMBOL $2B9F
FORCE_SYMBOL $2BA3 secretUNKOWN
FORCE_SYMBOL $2BA6 pauseLinePos
FORCE_SYMBOL $2BA9 pauseScrollOffsertY
COMMENT $2BAC Print5Strd
FORCE_SYMBOL $2BAC syncPrintStrd
FORCE_NO_SYMBOL $2BAF
COMMENT $2BB1 /BLANK low and /ZERO low
FORCE_SYMBOL $2BB1 VIA_cntl
FORCE_SYMBOL $2BB3 pauseLineCount
FORCE_SYMBOL $2BBA pauseLinePos
FORCE_NO_SYMBOL $2BBD
FORCE_SYMBOL $2BBF pauseLinePos
FORCE_SYMBOL $2BC2 pauseScrollOffsertY
FORCE_SYMBOL $2BC5 secretUNKOWN
FORCE_SYMBOL $2BC8 inGameSecrets
FORCE_SYMBOL $2BCB SECRET_RATE_SUCKERS
FORCE_SYMBOL $2BCF secretSuperBomb
FORCE_SYMBOL $2BD2 pauseLinePos
FORCE_SYMBOL $2BD5 pauseScrollOffsertY
COMMENT $2BD8 Print5Strd
FORCE_SYMBOL $2BD8 syncPrintStrd
FORCE_NO_SYMBOL $2BDB
COMMENT $2BDD /BLANK low and /ZERO low
FORCE_SYMBOL $2BDD VIA_cntl
FORCE_SYMBOL $2BDF pauseLineCount
FORCE_SYMBOL $2BE6 pauseLinePos
FORCE_NO_SYMBOL $2BE9
FORCE_SYMBOL $2BEB pauseLinePos
FORCE_SYMBOL $2BEE pauseScrollOffsertY
FORCE_SYMBOL $2BF1 secretUNKOWN
FORCE_SYMBOL $2BF4 inGameSecrets
FORCE_SYMBOL $2BF7 SECRET_ORDERED_EXTRA
FORCE_SYMBOL $2BFB secretLaser
FORCE_SYMBOL $2BFE pauseLinePos
FORCE_SYMBOL $2C01 pauseScrollOffsertY
COMMENT $2C04 Print5Strd
FORCE_SYMBOL $2C04 syncPrintStrd
FORCE_NO_SYMBOL $2C07
COMMENT $2C09 /BLANK low and /ZERO low
FORCE_SYMBOL $2C09 VIA_cntl
FORCE_SYMBOL $2C0B pauseLineCount
FORCE_SYMBOL $2C12 pauseLinePos
FORCE_NO_SYMBOL $2C15
FORCE_SYMBOL $2C17 pauseLinePos
FORCE_SYMBOL $2C1A pauseScrollOffsertY
FORCE_SYMBOL $2C1D secretUNKOWN
FORCE_SYMBOL $2C20 inGameSecrets
FORCE_SYMBOL $2C23 SECRET_3_SPEED_SUCKERS
FORCE_SYMBOL $2C27 secretshield
FORCE_SYMBOL $2C2A pauseLinePos
FORCE_SYMBOL $2C2D pauseScrollOffsertY
COMMENT $2C30 Print5Strd
FORCE_SYMBOL $2C30 syncPrintStrd
FORCE_NO_SYMBOL $2C33
COMMENT $2C35 /BLANK low and /ZERO low
FORCE_SYMBOL $2C35 VIA_cntl
FORCE_SYMBOL $2C37 pauseLineCount
FORCE_SYMBOL $2C3E pauseLinePos
FORCE_NO_SYMBOL $2C41
FORCE_SYMBOL $2C43 pauseLinePos
FORCE_SYMBOL $2C46 pauseScrollOffsertY
FORCE_SYMBOL $2C49 secretUNKOWN
FORCE_SYMBOL $2C4C inGameSecrets
FORCE_SYMBOL $2C4F SECRET_3_BULLET_SUCKERS
FORCE_SYMBOL $2C53 secretStatus
FORCE_SYMBOL $2C56 pauseLinePos
FORCE_SYMBOL $2C59 pauseScrollOffsertY
COMMENT $2C5C Print5Strd
FORCE_SYMBOL $2C5C syncPrintStrd
FORCE_NO_SYMBOL $2C5F
COMMENT $2C61 /BLANK low and /ZERO low
FORCE_SYMBOL $2C61 VIA_cntl
FORCE_SYMBOL $2C63 pauseLineCount
FORCE_SYMBOL $2C6A pauseLinePos
FORCE_NO_SYMBOL $2C6D
FORCE_SYMBOL $2C6F pauseLinePos
FORCE_SYMBOL $2C72 pauseScrollOffsertY
FORCE_SYMBOL $2C75 secretUNKOWN
FORCE_SYMBOL $2C78 inGameSecrets
FORCE_SYMBOL $2C7B SECRET_3_RATE_SUCKERS
FORCE_SYMBOL $2C7F secretDodger2
FORCE_SYMBOL $2C82 pauseLinePos
FORCE_SYMBOL $2C85 pauseScrollOffsertY
COMMENT $2C88 Print5Strd ; Print5Strd nt5Strd
FORCE_SYMBOL $2C88 syncPrintStrd
FORCE_NO_SYMBOL $2C8B
COMMENT $2C8D /BLANK low and /ZERO low
FORCE_SYMBOL $2C8D VIA_cntl
FORCE_SYMBOL $2C8F pauseLineCount
FORCE_SYMBOL $2C96 pauseLinePos
FORCE_NO_SYMBOL $2C99
FORCE_SYMBOL $2C9B pauseLinePos
FORCE_SYMBOL $2C9E pauseScrollOffsertY
FORCE_SYMBOL $2CA1 secretUNKOWN
FORCE_SYMBOL $2CA4 inGameSecrets
FORCE_SYMBOL $2CA7 SECRET_ORDERED_RANKS
FORCE_SYMBOL $2CAB secretDodger5
FORCE_SYMBOL $2CAE pauseLinePos
FORCE_SYMBOL $2CB1 pauseScrollOffsertY
COMMENT $2CB4 Print5Strd
FORCE_SYMBOL $2CB4 syncPrintStrd
FORCE_NO_SYMBOL $2CB7
COMMENT $2CB9 /BLANK low and /ZERO low
FORCE_SYMBOL $2CB9 VIA_cntl
FORCE_SYMBOL $2CBB pauseLineCount
FORCE_SYMBOL $2CC2 pauseLinePos
FORCE_NO_SYMBOL $2CC5
FORCE_SYMBOL $2CC7 pauseLinePos
FORCE_SYMBOL $2CCA pauseScrollOffsertY
FORCE_SYMBOL $2CCD secretUNKOWN
FORCE_SYMBOL $2CD0 inGameSecrets
FORCE_SYMBOL $2CD3 SECRET_3_FIFTY
FORCE_SYMBOL $2CD7 secretPayback
FORCE_SYMBOL $2CDA pauseLinePos
FORCE_SYMBOL $2CDD pauseScrollOffsertY
COMMENT $2CE0 Print5Strd
FORCE_SYMBOL $2CE0 syncPrintStrd
FORCE_NO_SYMBOL $2CE3
COMMENT $2CE5 /BLANK low and /ZERO low
FORCE_SYMBOL $2CE5 VIA_cntl
FORCE_SYMBOL $2CE7 pauseLineCount
FORCE_SYMBOL $2CEE pauseLinePos
FORCE_NO_SYMBOL $2CF1
FORCE_SYMBOL $2CF3 pauseLinePos
FORCE_SYMBOL $2CF6 pauseScrollOffsertY
FORCE_SYMBOL $2CF9 calibrationZero7
FORCE_SYMBOL $2CFC gameScale
FORCE_SYMBOL $2CFF VIA_t1_cnt_lo
FORCE_SYMBOL $2D01 pauseLineStart
FORCE_NO_SYMBOL $2D04
FORCE_SYMBOL $2D08 pauseScrollOffsertY
COMMENT_LINE $2D0D jsr      Intensity_7F // intensity is taboo it destroys patterns
FORCE_NO_SYMBOL $2D0D
COMMENT $2D0F Store intensity in D/A
FORCE_SYMBOL $2D0F VIA_port_a
COMMENT $2D11 mux disabled channel 2
FORCE_NO_SYMBOL $2D11
FORCE_SYMBOL $2D14 VIA_port_b
COMMENT $2D16 mux enabled channel 2
FORCE_SYMBOL $2D16 VIA_port_b
COMMENT $2D18 turn off mux
FORCE_SYMBOL $2D18 VIA_port_b
FORCE_NO_SYMBOL $2D1A
FORCE_SYMBOL $2D1D Moveto_d
FORCE_NO_SYMBOL $2D20
FORCE_SYMBOL $2D22 VIA_t1_cnt_lo
FORCE_SYMBOL $2D24 arrowDoubleDown
FORCE_SYMBOL $2D27 SMVB_drawSmart
FORCE_SYMBOL $2D2A pauseLineStart
FORCE_SYMBOL $2D31 gameScale
FORCE_SYMBOL $2D34 VIA_t1_cnt_lo
FORCE_SYMBOL $2D36 pauseScrollOffsertY
COMMENT_LINE $2D3D jsr      Intensity_7F // intensity is taboo it destroys patterns
FORCE_NO_SYMBOL $2D3D
COMMENT $2D3F Store intensity in D/A
FORCE_SYMBOL $2D3F VIA_port_a
COMMENT $2D41 mux disabled channel 2
FORCE_NO_SYMBOL $2D41
FORCE_SYMBOL $2D44 VIA_port_b
COMMENT $2D46 mux enabled channel 2
FORCE_SYMBOL $2D46 VIA_port_b
COMMENT $2D48 turn off mux
FORCE_SYMBOL $2D48 VIA_port_b
COMMENT_LINE $2D4C jsr      Intensity_3F // intensity is taboo it destroys patterns
FORCE_NO_SYMBOL $2D4C
COMMENT $2D4E Store intensity in D/A
FORCE_SYMBOL $2D4E VIA_port_a
COMMENT $2D50 mux disabled channel 2
FORCE_NO_SYMBOL $2D50
FORCE_SYMBOL $2D53 VIA_port_b
COMMENT $2D55 mux enabled channel 2
FORCE_SYMBOL $2D55 VIA_port_b
COMMENT $2D57 turn off mux
FORCE_SYMBOL $2D57 VIA_port_b
FORCE_NO_SYMBOL $2D59
FORCE_SYMBOL $2D5C Moveto_d
FORCE_NO_SYMBOL $2D5F
FORCE_SYMBOL $2D61 VIA_t1_cnt_lo
FORCE_SYMBOL $2D63 arrowDoubleUp
FORCE_SYMBOL $2D66 SMVB_drawSmart
FORCE_SYMBOL $2D69 pauseLoop
FORCE_SYMBOL $2D6C gameScale
FORCE_SYMBOL $2D6F VIA_t1_cnt_lo
FORCE_NO_SYMBOL $2D71
COMMENT $2D73 Store intensity in D/A
FORCE_SYMBOL $2D73 VIA_port_a
COMMENT $2D75 mux disabled channel 2
FORCE_NO_SYMBOL $2D75
FORCE_SYMBOL $2D78 VIA_port_b
COMMENT $2D7A mux enabled channel 2
FORCE_SYMBOL $2D7A VIA_port_b
COMMENT $2D7C turn off mux
FORCE_SYMBOL $2D7C VIA_port_b
FORCE_NO_SYMBOL $2D7E
FORCE_SYMBOL $2D81 Moveto_d
FORCE_NO_SYMBOL $2D84
FORCE_SYMBOL $2D86 VIA_t1_cnt_lo
FORCE_SYMBOL $2D88 UpDisk
FORCE_SYMBOL $2D8B SMVB_drawSmart
FORCE_SYMBOL $2D8E pauseLoop
COMMENT_LINE $2D91 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $2D91 db       $00, $01, $50, hi(SMVB_startDraw_double), lo(SMVB_startDraw_double)
COMMENT_LINE $2D91 db       -$50, $01, -$50, hi(SMVB_continue2_single), lo(SMVB_continue2_single)
COMMENT_LINE $2D91 db       $50, $01, -$50
COMMENT_LINE $2D91 db       $53, $01, $00, hi(SMVB_startMove_single), lo(SMVB_startMove_single)
COMMENT_LINE $2D91 db       $00, $01, $50, hi(SMVB_startDraw_double), lo(SMVB_startDraw_double)
COMMENT_LINE $2D91 db       -$50, $01, -$50, hi(SMVB_continue2_single), lo(SMVB_continue2_single)
COMMENT_LINE $2D91 db       $50, $01, -$50
COMMENT_LINE $2D91 db       $40, $00, $00, hi(SMVB_lastDraw_rts), lo(SMVB_lastDraw_rts)
COMMENT $2D96 y is $50
COMMENT_LINE $2DA5 db       $00, $01, $50, hi(SMVB_startDraw_double), lo(SMVB_startDraw_double)
COMMENT_LINE $2DA5 db       $50, $01, -$50, hi(SMVB_continue2_single), lo(SMVB_continue2_single)
COMMENT_LINE $2DA5 db       -$50, $01, -$50
COMMENT_LINE $2DA5 db       -$53, $01, $00, hi(SMVB_startMove_single), lo(SMVB_startMove_single)
COMMENT_LINE $2DA5 db       $00, $01, $50, hi(SMVB_startDraw_double), lo(SMVB_startDraw_double)
COMMENT_LINE $2DA5 db       $50, $01, -$50, hi(SMVB_continue2_single), lo(SMVB_continue2_single)
COMMENT_LINE $2DA5 db       -$50, $01, -$50
COMMENT_LINE $2DA5 db       $40, $00, $00, hi(SMVB_lastDraw_rts), lo(SMVB_lastDraw_rts)
COMMENT $2DA5 y is $50
COMMENT_LINE $2E13 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $300F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $300F bank 1 + 2
COMMENT_LINE $312E original
COMMENT_LINE $312E RANK                         / BONUS POINTS (AT END OF GAME)
COMMENT_LINE $312E ENSIGN                       / 0
COMMENT_LINE $312E LIEUTENANT                   / 20,000
COMMENT_LINE $312E COMMANDER                    / 50,000
COMMENT_LINE $312E CAPTAIN                      / 90,000
COMMENT_LINE $312E ADMIRAL                      / 140,000
COMMENT_LINE $312E ADMIRAL 1 BRONZE STAR        / 200,000
COMMENT_LINE $312E ADMIRAL 2 BRONZE STARS       / 270,000
COMMENT_LINE $312E ADMIRAL 3 BRONZE STARS       / 350,000
COMMENT_LINE $312E ADMIRAL 1 SILVER STAR        / 440,000
COMMENT_LINE $312E ADMIRAL 2 SILVER STARS       / 540,000
COMMENT_LINE $312E ADMIRAL 3 SILVER STARS       / 740,000
COMMENT_LINE $312E ADMIRAL 1 GOLD STAR          / 1,040,000
COMMENT_LINE $312E ADMIRAL 2 GOLD STARS         / 1,440,000
COMMENT_LINE $312E ADMIRAL 3 GOLD STARS         / 1,940,000
COMMENT_LINE $312E WARBLADE KNIGHT              / 2,540,000
COMMENT_LINE $312E WARBLADE LORD                / 3,240,000
COMMENT_LINE $312E WARBLADE OVERLORD            / 4,040,000
COMMENT_LINE $312E WARBLADE GRANDMASTER         / 5,040,000
COMMENT_LINE $312E WARBLADE GRANDMASTER 1 STAR  / 7,040,000
COMMENT_LINE $312E WARBLADE GRANDMASTER 2 STARS / 10,040,000
COMMENT_LINE $312E WARBLADE GRANDMASTER 3 STARS / 14,040,000
FORCE_SYMBOL $312E flashAvailable
COMMENT $3131 no game available
FORCE_SYMBOL $3131 FLASH_AVAILABLE_BIT
COMMENT $3137 showSaveMessage
FORCE_NO_SYMBOL $3137
FORCE_SYMBOL $313A jsrBank0_fromBank2_Shift
COMMENT $313D yes
FORCE_NO_SYMBOL $313D
COMMENT $3143 saveGameToFlash
FORCE_NO_SYMBOL $3143
FORCE_SYMBOL $3146 doShiftIRQ
FORCE_SYMBOL $3149 pauseLoop
COMMENT_LINE $314C bank 1 + 2 + 0 (from dodger)
COMMENT_LINE $314C zero delay is needed for zeroing to work correctly
COMMENT_LINE $314C depends on the distance of the current integrator position to actual zero point
COMMENT_LINE $314C experiment with my vectri:
COMMENT_LINE $314C ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $314C If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $314C - scale $ff -> zero 110 cycles
COMMENT_LINE $314C - scale $7f -> zero 75 cycles
COMMENT_LINE $314C - scale $40 -> zero 57 cycles
COMMENT_LINE $314C - scale $20 -> zero 53 cycles
COMMENT_LINE $0000 zero
COMMENT $0000 zero the integrators
COMMENT $0000 store zeroing values to cntl
COMMENT_LINE $0000 wait that zeroing surely has the desired effect!
COMMENT $0000 can be done in move
COMMENT $0000 [3]Point to next chargen row
COMMENT $0000 Point to start of text string
COMMENT $0000 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
COMMENT_LINE $0000 first entry here, ramp is disabled
COMMENT_LINE $0000 if there was a jump from below
COMMENT_LINE $0000 ramp will be enabled by next line
COMMENT $0000 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT $0000 Clear D/A output
COMMENT $0000 Enable mux
COMMENT_LINE $0000 TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $0000 LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $0000 std <VIA_port_b
COMMENT_LINE $0000 assuming first char is NEVER $80
COMMENT $0000 [+6]Get next character
COMMENT_LINE $0000 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $0000 13 cycles overhead
COMMENT_LINE $0000 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $0000 [+5]Get bitmap from chargen table
COMMENT $0000 [+4]rasterout of char bitmap "row" thru shift out in shift register
COMMENT $0000 [+6]Get next character
COMMENT $0000 [+3]Go back if not terminator
COMMENT $0000 is still $80 ;[4]disable RAMP, disable mux don't matter
COMMENT $0000 T1?PB7 enabled
COMMENT_LINE $314C put move position on stack put it so, that we can load "d" directly from stack
COMMENT $314E Save string pointer
FORCE_SYMBOL $314E Vec_Str_Ptr
COMMENT_LINE $3151 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3151 POSITION "EXACT" PATCH assuming x pos is midle alligned,
COMMENT_LINE $3151 if that is a case we can use neg x pos as "opposite" string pos
COMMENT_LINE $3151 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $3151 zero the integrators
COMMENT $3154 store zeroing values to cntl
FORCE_SYMBOL $3154 VIA_cntl
COMMENT $3156 and wait for zeroing to be actually done
FORCE_SYMBOL $3156 ZERO_DELAY_P2
COMMENT_LINE $3158 reset integrators
COMMENT $3158 reset integrator offset
FORCE_SYMBOL $3158 VIA_port_a
COMMENT_LINE $315A lda #%10000010
COMMENT_LINE $315A wait that zeroing surely has the desired effect!
COMMENT $315A while waiting, zero offsets
FORCE_SYMBOL $315A VIA_port_b
FORCE_SYMBOL $3160 VIA_port_b
FORCE_NO_SYMBOL $3162
COMMENT $3165 Store Y in D/A register
FORCE_SYMBOL $3165 VIA_port_a
COMMENT $3167 Blank low, zero high?
FORCE_NO_SYMBOL $3167
FORCE_SYMBOL $3169 VIA_cntl
COMMENT $316C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $316C VIA_port_b
COMMENT $316E y must be set more than xx cycles on some vectrex
COMMENT $316F Disable mux
FORCE_SYMBOL $316F VIA_port_b
COMMENT $3171 Store X in D/A register
FORCE_SYMBOL $3171 VIA_port_a
COMMENT $3173 enable timer
FORCE_SYMBOL $3173 VIA_t1_cnt_hi
COMMENT_LINE $3175 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $3175 Point to start of chargen bitmaps
FORCE_SYMBOL $3178 Vec_Text_Width
FORCE_NO_SYMBOL $317B
FORCE_NO_SYMBOL $317D
FORCE_NO_SYMBOL $3181
FORCE_SYMBOL $3183 VIA_int_flags
COMMENT_LINE $3187 zero
COMMENT $3187 zero the integrators
COMMENT $318A store zeroing values to cntl
FORCE_SYMBOL $318A VIA_cntl
COMMENT_LINE $318C wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $3191
COMMENT $3193 Store Y in D/A register
FORCE_SYMBOL $3193 VIA_port_a
COMMENT $3195 Blank low, zero high?
FORCE_NO_SYMBOL $3195
FORCE_SYMBOL $3197 VIA_cntl
COMMENT $319A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $319A VIA_port_b
COMMENT $319C y must be set more than xx cycles on some vectrex
COMMENT $319D Disable mux
FORCE_SYMBOL $319D VIA_port_b
COMMENT $319F Store X in D/A register
FORCE_SYMBOL $319F VIA_port_a
COMMENT $31A1 enable timer
FORCE_SYMBOL $31A1 VIA_t1_cnt_hi
COMMENT $31A3 can be done in move
FORCE_NO_SYMBOL $31A3
COMMENT $31A5 [3]Point to next chargen row
FORCE_SYMBOL $31A5 FONT_LENGTH
FORCE_NO_SYMBOL $31A8
COMMENT $31AA Point to start of text string
FORCE_SYMBOL $31AA Vec_Str_Ptr
FORCE_NO_SYMBOL $31AD
FORCE_SYMBOL $31AF VIA_int_flags
COMMENT $31B3 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $31B3 VIA_aux_cntl
COMMENT_LINE $31B5 first entry here, ramp is disabled
COMMENT_LINE $31B5 if there was a jump from below
COMMENT_LINE $31B5 ramp will be enabled by next line
COMMENT $31B5 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $31B5
COMMENT $31B8 Clear D/A output
FORCE_SYMBOL $31B8 VIA_port_a
COMMENT $31BA Enable mux
FORCE_SYMBOL $31BA VIA_port_b
COMMENT_LINE $31BC TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $31BC LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $31BC std <VIA_port_b
FORCE_SYMBOL $31BC VIA_port_b
COMMENT_LINE $31BF assuming first char is NEVER $80
COMMENT $31BF [+6]Get next character
COMMENT_LINE $31C1 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $31C1 13 cycles overhead
COMMENT_LINE $31C1 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $31C1 [+5]Get bitmap from chargen table
COMMENT $31C3 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $31C3 VIA_shift_reg
COMMENT $31C5 [+6]Get next character
COMMENT $31C7 [+3]Go back if not terminator
COMMENT $31C9 is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $31C9 VIA_port_b
FORCE_NO_SYMBOL $31CB
COMMENT $31CD T1?PB7 enabled
FORCE_SYMBOL $31CD VIA_aux_cntl
COMMENT_LINE $31CF zero
COMMENT $31CF zero the integrators
COMMENT $31D2 store zeroing values to cntl
FORCE_SYMBOL $31D2 VIA_cntl
COMMENT_LINE $31D4 wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $31D9
COMMENT $31DB Store Y in D/A register
FORCE_SYMBOL $31DB VIA_port_a
COMMENT $31DD Blank low, zero high?
FORCE_NO_SYMBOL $31DD
FORCE_SYMBOL $31DF VIA_cntl
COMMENT $31E2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $31E2 VIA_port_b
COMMENT $31E4 y must be set more than xx cycles on some vectrex
COMMENT $31E5 Disable mux
FORCE_SYMBOL $31E5 VIA_port_b
COMMENT $31E7 Store X in D/A register
FORCE_SYMBOL $31E7 VIA_port_a
COMMENT $31E9 enable timer
FORCE_SYMBOL $31E9 VIA_t1_cnt_hi
COMMENT $31EB can be done in move
FORCE_NO_SYMBOL $31EB
COMMENT $31ED [3]Point to next chargen row
FORCE_SYMBOL $31ED FONT_LENGTH
FORCE_NO_SYMBOL $31F0
COMMENT $31F2 Point to start of text string
FORCE_SYMBOL $31F2 Vec_Str_Ptr
FORCE_NO_SYMBOL $31F5
FORCE_SYMBOL $31F7 VIA_int_flags
COMMENT $31FB Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $31FB VIA_aux_cntl
COMMENT_LINE $31FD first entry here, ramp is disabled
COMMENT_LINE $31FD if there was a jump from below
COMMENT_LINE $31FD ramp will be enabled by next line
COMMENT $31FD a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $31FD
COMMENT $3200 Clear D/A output
FORCE_SYMBOL $3200 VIA_port_a
COMMENT $3202 Enable mux
FORCE_SYMBOL $3202 VIA_port_b
COMMENT_LINE $3204 TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $3204 LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $3204 std <VIA_port_b
FORCE_SYMBOL $3204 VIA_port_b
COMMENT_LINE $3207 assuming first char is NEVER $80
COMMENT $3207 [+6]Get next character
COMMENT_LINE $3209 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $3209 13 cycles overhead
COMMENT_LINE $3209 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $3209 [+5]Get bitmap from chargen table
COMMENT $320B [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $320B VIA_shift_reg
COMMENT $320D [+6]Get next character
COMMENT $320F [+3]Go back if not terminator
COMMENT $3211 is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $3211 VIA_port_b
FORCE_NO_SYMBOL $3213
COMMENT $3215 T1?PB7 enabled
FORCE_SYMBOL $3215 VIA_aux_cntl
COMMENT_LINE $3217 zero
COMMENT $3217 zero the integrators
COMMENT $321A store zeroing values to cntl
FORCE_SYMBOL $321A VIA_cntl
COMMENT_LINE $321C wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $3221
COMMENT $3223 Store Y in D/A register
FORCE_SYMBOL $3223 VIA_port_a
COMMENT $3225 Blank low, zero high?
FORCE_NO_SYMBOL $3225
FORCE_SYMBOL $3227 VIA_cntl
COMMENT $322A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $322A VIA_port_b
COMMENT $322C y must be set more than xx cycles on some vectrex
COMMENT $322D Disable mux
FORCE_SYMBOL $322D VIA_port_b
COMMENT $322F Store X in D/A register
FORCE_SYMBOL $322F VIA_port_a
COMMENT $3231 enable timer
FORCE_SYMBOL $3231 VIA_t1_cnt_hi
COMMENT $3233 can be done in move
FORCE_NO_SYMBOL $3233
COMMENT $3235 [3]Point to next chargen row
FORCE_SYMBOL $3235 FONT_LENGTH
FORCE_NO_SYMBOL $3238
COMMENT $323A Point to start of text string
FORCE_SYMBOL $323A Vec_Str_Ptr
FORCE_NO_SYMBOL $323D
FORCE_SYMBOL $323F VIA_int_flags
COMMENT $3243 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $3243 VIA_aux_cntl
COMMENT_LINE $3245 first entry here, ramp is disabled
COMMENT_LINE $3245 if there was a jump from below
COMMENT_LINE $3245 ramp will be enabled by next line
COMMENT $3245 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $3245
COMMENT $3248 Clear D/A output
FORCE_SYMBOL $3248 VIA_port_a
COMMENT $324A Enable mux
FORCE_SYMBOL $324A VIA_port_b
COMMENT_LINE $324C TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $324C LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $324C std <VIA_port_b
FORCE_SYMBOL $324C VIA_port_b
COMMENT_LINE $324F assuming first char is NEVER $80
COMMENT $324F [+6]Get next character
COMMENT_LINE $3251 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $3251 13 cycles overhead
COMMENT_LINE $3251 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $3251 [+5]Get bitmap from chargen table
COMMENT $3253 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $3253 VIA_shift_reg
COMMENT $3255 [+6]Get next character
COMMENT $3257 [+3]Go back if not terminator
COMMENT $3259 is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $3259 VIA_port_b
FORCE_NO_SYMBOL $325B
COMMENT $325D T1?PB7 enabled
FORCE_SYMBOL $325D VIA_aux_cntl
COMMENT_LINE $325F zero
COMMENT $325F zero the integrators
COMMENT $3262 store zeroing values to cntl
FORCE_SYMBOL $3262 VIA_cntl
COMMENT_LINE $3264 wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $3269
COMMENT $326B Store Y in D/A register
FORCE_SYMBOL $326B VIA_port_a
COMMENT $326D Blank low, zero high?
FORCE_NO_SYMBOL $326D
FORCE_SYMBOL $326F VIA_cntl
COMMENT $3272 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3272 VIA_port_b
COMMENT $3274 y must be set more than xx cycles on some vectrex
COMMENT $3275 Disable mux
FORCE_SYMBOL $3275 VIA_port_b
COMMENT $3277 Store X in D/A register
FORCE_SYMBOL $3277 VIA_port_a
COMMENT $3279 enable timer
FORCE_SYMBOL $3279 VIA_t1_cnt_hi
COMMENT $327B can be done in move
FORCE_NO_SYMBOL $327B
COMMENT $327D [3]Point to next chargen row
FORCE_SYMBOL $327D FONT_LENGTH
FORCE_NO_SYMBOL $3280
COMMENT $3282 Point to start of text string
FORCE_SYMBOL $3282 Vec_Str_Ptr
FORCE_NO_SYMBOL $3285
FORCE_SYMBOL $3287 VIA_int_flags
COMMENT $328B Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $328B VIA_aux_cntl
COMMENT_LINE $328D first entry here, ramp is disabled
COMMENT_LINE $328D if there was a jump from below
COMMENT_LINE $328D ramp will be enabled by next line
COMMENT $328D a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $328D
COMMENT $3290 Clear D/A output
FORCE_SYMBOL $3290 VIA_port_a
COMMENT $3292 Enable mux
FORCE_SYMBOL $3292 VIA_port_b
COMMENT_LINE $3294 TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $3294 LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $3294 std <VIA_port_b
FORCE_SYMBOL $3294 VIA_port_b
COMMENT_LINE $3297 assuming first char is NEVER $80
COMMENT $3297 [+6]Get next character
COMMENT_LINE $3299 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $3299 13 cycles overhead
COMMENT_LINE $3299 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $3299 [+5]Get bitmap from chargen table
COMMENT $329B [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $329B VIA_shift_reg
COMMENT $329D [+6]Get next character
COMMENT $329F [+3]Go back if not terminator
COMMENT $32A1 is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $32A1 VIA_port_b
FORCE_NO_SYMBOL $32A3
COMMENT $32A5 T1?PB7 enabled
FORCE_SYMBOL $32A5 VIA_aux_cntl
COMMENT_LINE $32A7 zero
COMMENT $32A7 zero the integrators
COMMENT $32AA store zeroing values to cntl
FORCE_SYMBOL $32AA VIA_cntl
COMMENT_LINE $32AC wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $32B1
COMMENT $32B3 Store Y in D/A register
FORCE_SYMBOL $32B3 VIA_port_a
COMMENT $32B5 Blank low, zero high?
FORCE_NO_SYMBOL $32B5
FORCE_SYMBOL $32B7 VIA_cntl
COMMENT $32BA Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $32BA VIA_port_b
COMMENT $32BC y must be set more than xx cycles on some vectrex
COMMENT $32BD Disable mux
FORCE_SYMBOL $32BD VIA_port_b
COMMENT $32BF Store X in D/A register
FORCE_SYMBOL $32BF VIA_port_a
COMMENT $32C1 enable timer
FORCE_SYMBOL $32C1 VIA_t1_cnt_hi
COMMENT $32C3 [3]Point to next chargen row
FORCE_SYMBOL $32C3 FONT_LENGTH
FORCE_NO_SYMBOL $32C6
COMMENT $32C8 Point to start of text string
FORCE_SYMBOL $32C8 Vec_Str_Ptr
FORCE_NO_SYMBOL $32CB
FORCE_SYMBOL $32CD VIA_int_flags
COMMENT $32D1 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $32D1 VIA_aux_cntl
COMMENT_LINE $32D3 first entry here, ramp is disabled
COMMENT_LINE $32D3 if there was a jump from below
COMMENT_LINE $32D3 ramp will be enabled by next line
COMMENT $32D3 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $32D3
COMMENT $32D6 Clear D/A output
FORCE_SYMBOL $32D6 VIA_port_a
COMMENT $32D8 Enable mux
FORCE_SYMBOL $32D8 VIA_port_b
COMMENT_LINE $32DA TO FAST EXAMPLE!!!
COMMENT_LINE $32DA texts have different angles!
COMMENT_LINE $32DA LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $32DA std <VIA_port_b
FORCE_SYMBOL $32DA VIA_port_b
COMMENT_LINE $32DD assuming first character in a string is never $80
COMMENT $32DD [+6]Get next character
COMMENT_LINE $32DF one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $32DF 13 cycles overhead
COMMENT_LINE $32DF ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $32DF [+5]Get bitmap from chargen table
COMMENT $32E1 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $32E1 VIA_shift_reg
COMMENT $32E3 [+6]Get next character
COMMENT $32E5 [+3]Go back if not terminator
COMMENT $32E7 is still $81 ;[4]disable RAMP, disable mux
FORCE_SYMBOL $32E7 VIA_port_b
FORCE_NO_SYMBOL $32E9
FORCE_SYMBOL $32EC VIA_shift_reg
COMMENT $32EE all done, correct stack
COMMENT_LINE $32F0 ***************************************************************************
COMMENT_LINE $32F0 bank 2+3
COMMENT_LINE $32F0 input score in d
COMMENT_LINE $32F0 output adds score to ascii score
COMMENT_LINE $32F0 held in player_score_... (in y)
COMMENT_LINE $32F0 destroys x
COMMENT_LINE $32F0 9999 max
COMMENT $32F0 Initialize BCD result to zero
FORCE_NO_SYMBOL $32F0
COMMENT $32F3 Add in the thousands
FORCE_NO_SYMBOL $32F3
FORCE_NO_SYMBOL $32F9
FORCE_NO_SYMBOL $32FC
COMMENT $3302 Add in the hundreds
FORCE_NO_SYMBOL $3302
FORCE_NO_SYMBOL $3308
FORCE_NO_SYMBOL $330B
FORCE_NO_SYMBOL $3311
COMMENT_LINE $3314 ldy #player_score is assumed!
COMMENT_LINE $3316 .....................................................
COMMENT_LINE $3316 convert to bcd
COMMENT $3316 Initialize BCD result to zero
FORCE_NO_SYMBOL $3316
COMMENT $3319 Add in the hundreds
FORCE_NO_SYMBOL $3319
FORCE_NO_SYMBOL $331D
FORCE_NO_SYMBOL $331F
COMMENT $3325 Add in the tens
FORCE_NO_SYMBOL $3325
FORCE_NO_SYMBOL $3329
FORCE_NO_SYMBOL $332B
COMMENT $3330 Add in the ones
COMMENT $3332 Move it to the D-register
FORCE_NO_SYMBOL $3334
FORCE_NO_SYMBOL $3336
FORCE_NO_SYMBOL $333C
FORCE_NO_SYMBOL $333E
FORCE_NO_SYMBOL $3340
FORCE_NO_SYMBOL $3348
FORCE_NO_SYMBOL $334A
FORCE_NO_SYMBOL $3350
FORCE_NO_SYMBOL $3352
FORCE_NO_SYMBOL $3354
FORCE_NO_SYMBOL $3358
FORCE_NO_SYMBOL $335A
FORCE_NO_SYMBOL $3360
FORCE_NO_SYMBOL $3362
FORCE_NO_SYMBOL $3364
FORCE_NO_SYMBOL $336A
FORCE_NO_SYMBOL $336C
FORCE_NO_SYMBOL $3372
FORCE_NO_SYMBOL $3374
COMMENT_LINE $3376 special case, since here score of more than 10 in this digit can be added (25)
FORCE_NO_SYMBOL $337A
FORCE_NO_SYMBOL $337C
FORCE_NO_SYMBOL $3382
FORCE_NO_SYMBOL $3384
FORCE_NO_SYMBOL $3386
FORCE_NO_SYMBOL $3388
COMMENT $338C score_restok? if this one did
FORCE_NO_SYMBOL $338E
FORCE_NO_SYMBOL $3390
FORCE_NO_SYMBOL $3392
FORCE_NO_SYMBOL $3394
FORCE_NO_SYMBOL $339A
FORCE_NO_SYMBOL $339C
FORCE_NO_SYMBOL $339E
FORCE_NO_SYMBOL $33A0
COMMENT_LINE $33A6 place 9 to every digit - because of roll over
COMMENT_LINE $33A6 todo remember rollover? -> than digits can be kept...
FORCE_NO_SYMBOL $33A9
FORCE_NO_SYMBOL $33AB
FORCE_NO_SYMBOL $33AD
FORCE_NO_SYMBOL $33AF
FORCE_NO_SYMBOL $33B1
COMMENT_LINE $33B3 diverse banks, see "if else clauses"
COMMENT_LINE $33B3 ;;;;;; *****************************************
COMMENT_LINE $33B3 ;;;;;; * BANK 2 *
COMMENT_LINE $33B3 ;;;;;; *****************************************
COMMENT_LINE $33B3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $33B3 thing to do in odd rounds
COMMENT_LINE $33B3 saves about 80 cyles and does no harm
COMMENT_LINE $33B3 even round is done in bank 0
COMMENT_LINE $33B3 since there the shpots are processed
FORCE_NO_SYMBOL $33B3
COMMENT $33B5 Store intensity in D/A
FORCE_SYMBOL $33B5 VIA_port_a
COMMENT $33B7 mux disabled channel 2
FORCE_NO_SYMBOL $33B7
FORCE_SYMBOL $33BA VIA_port_b
COMMENT $33BC mux enabled channel 2
FORCE_SYMBOL $33BC VIA_port_b
COMMENT $33BE turn off mux
FORCE_SYMBOL $33BE VIA_port_b
FORCE_SYMBOL $33C0 tmp4
FORCE_SYMBOL $33C4 playershotlist_objects_head
COMMENT $33C8 (D = y,x) ; do all objects
FORCE_SYMBOL $33CA tmp4
FORCE_SYMBOL $33CE bossWasHit
FORCE_SYMBOL $33D3 Intensity_7F
FORCE_SYMBOL $33D8 Intensity_3F
FORCE_SYMBOL $33DB bossDisplayHead
FORCE_SYMBOL $33DE calibrationZero50
FORCE_SYMBOL $33E2 gameScale
FORCE_SYMBOL $33E5 VIA_shift_reg
FORCE_NO_SYMBOL $33E7
COMMENT $33E9 /BLANK low and /ZERO low
FORCE_SYMBOL $33E9 VIA_cntl
FORCE_SYMBOL $33EB VIA_t1_cnt_lo
FORCE_NO_SYMBOL $33ED
FORCE_SYMBOL $33F0 VIA_port_b
FORCE_SYMBOL $33F2 bossPosY
COMMENT $33F5 Store Y in D/A register
FORCE_SYMBOL $33F5 VIA_port_a
COMMENT $33F7 Blank low, zero high?
FORCE_NO_SYMBOL $33F7
FORCE_SYMBOL $33F9 VIA_cntl
COMMENT $33FC Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $33FC VIA_port_b
COMMENT $33FE y must be set more than xx cycles on some vectrex
COMMENT $33FF Disable mux
FORCE_SYMBOL $33FF VIA_port_b
COMMENT $3401 Store X in D/A register
FORCE_SYMBOL $3401 VIA_port_a
COMMENT $3403 enable timer
FORCE_SYMBOL $3403 VIA_t1_cnt_hi
FORCE_SYMBOL $3405 diverseFlags
FORCE_SYMBOL $3408 BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $340E Boss1StaticLeft
FORCE_SYMBOL $3411 boss1Scale
FORCE_SYMBOL $3414 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3416
FORCE_SYMBOL $3418 VIA_int_flags
FORCE_SYMBOL $341C SMVB50_drawSmart
FORCE_SYMBOL $341F bossPosY
COMMENT $3422 Store Y in D/A register
FORCE_SYMBOL $3422 VIA_port_a
COMMENT $3424 Blank low, zero high?
FORCE_NO_SYMBOL $3424
FORCE_SYMBOL $3426 VIA_cntl
COMMENT $3429 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3429 VIA_port_b
COMMENT $342B y must be set more than xx cycles on some vectrex
COMMENT $342C Disable mux
FORCE_SYMBOL $342C VIA_port_b
COMMENT $342E Store X in D/A register
FORCE_SYMBOL $342E VIA_port_a
COMMENT $3430 enable timer
FORCE_SYMBOL $3430 VIA_t1_cnt_hi
FORCE_SYMBOL $3432 Boss1StaticRight
FORCE_SYMBOL $3435 boss1Scale
FORCE_SYMBOL $3438 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $343A
FORCE_SYMBOL $343C VIA_int_flags
FORCE_SYMBOL $3440 SMVB50_drawSmart
FORCE_SYMBOL $3443 bossPosY
COMMENT $3446 Store Y in D/A register
FORCE_SYMBOL $3446 VIA_port_a
COMMENT $3448 Blank low, zero high?
FORCE_NO_SYMBOL $3448
FORCE_SYMBOL $344A VIA_cntl
COMMENT $344D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $344D VIA_port_b
COMMENT $344F y must be set more than xx cycles on some vectrex
COMMENT $3450 Disable mux
FORCE_SYMBOL $3450 VIA_port_b
COMMENT $3452 Store X in D/A register
FORCE_SYMBOL $3452 VIA_port_a
COMMENT $3454 enable timer
FORCE_SYMBOL $3454 VIA_t1_cnt_hi
FORCE_SYMBOL $3456 Boss1StaticInnerLeft
FORCE_SYMBOL $3459 boss1Scale
FORCE_SYMBOL $345C VIA_t1_cnt_lo
FORCE_NO_SYMBOL $345E
FORCE_SYMBOL $3460 VIA_int_flags
FORCE_SYMBOL $3464 SMVB50_drawSmart
FORCE_SYMBOL $3467 bossPosY
COMMENT $346A Store Y in D/A register
FORCE_SYMBOL $346A VIA_port_a
COMMENT $346C Blank low, zero high?
FORCE_NO_SYMBOL $346C
FORCE_SYMBOL $346E VIA_cntl
COMMENT $3471 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3471 VIA_port_b
COMMENT $3473 y must be set more than xx cycles on some vectrex
COMMENT $3474 Disable mux
FORCE_SYMBOL $3474 VIA_port_b
COMMENT $3476 Store X in D/A register
FORCE_SYMBOL $3476 VIA_port_a
COMMENT $3478 enable timer
FORCE_SYMBOL $3478 VIA_t1_cnt_hi
FORCE_SYMBOL $347A Boss1StaticInnerRight
FORCE_SYMBOL $347D boss1Scale
FORCE_SYMBOL $3480 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3482
FORCE_SYMBOL $3484 VIA_int_flags
FORCE_SYMBOL $3488 SMVB50_drawSmart
FORCE_SYMBOL $348B bossPosY
COMMENT $348E Store Y in D/A register
FORCE_SYMBOL $348E VIA_port_a
COMMENT $3490 Blank low, zero high?
FORCE_NO_SYMBOL $3490
FORCE_SYMBOL $3492 VIA_cntl
COMMENT $3495 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3495 VIA_port_b
COMMENT $3497 y must be set more than xx cycles on some vectrex
COMMENT $3498 Disable mux
FORCE_SYMBOL $3498 VIA_port_b
COMMENT $349A Store X in D/A register
FORCE_SYMBOL $349A VIA_port_a
COMMENT $349C enable timer
FORCE_SYMBOL $349C VIA_t1_cnt_hi
FORCE_SYMBOL $349E Boss1StaticSkull
FORCE_SYMBOL $34A1 boss1Scale
FORCE_SYMBOL $34A4 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $34A6
FORCE_SYMBOL $34A8 VIA_int_flags
FORCE_SYMBOL $34AC SMVB50_drawSmart
FORCE_SYMBOL $34AF bossPosY
COMMENT $34B2 Store Y in D/A register
FORCE_SYMBOL $34B2 VIA_port_a
COMMENT $34B4 Blank low, zero high?
FORCE_NO_SYMBOL $34B4
FORCE_SYMBOL $34B6 VIA_cntl
COMMENT $34B9 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $34B9 VIA_port_b
COMMENT $34BB y must be set more than xx cycles on some vectrex
COMMENT $34BC Disable mux
FORCE_SYMBOL $34BC VIA_port_b
COMMENT $34BE Store X in D/A register
FORCE_SYMBOL $34BE VIA_port_a
COMMENT $34C0 enable timer
FORCE_SYMBOL $34C0 VIA_t1_cnt_hi
FORCE_SYMBOL $34C2 eyeLeftAnimDelayCounter
FORCE_SYMBOL $34C7 ANIMATION_DELAY
FORCE_SYMBOL $34C9 eyeLeftAnimDelayCounter
FORCE_SYMBOL $34CC eyeLeftAnimCounter
FORCE_SYMBOL $34CF Boss1EyeAnim
FORCE_SYMBOL $34D2 eyeLeftAnimCounter
FORCE_SYMBOL $34DA eyeLeftAnimCounter
FORCE_SYMBOL $34DD Boss1EyeLeft
FORCE_SYMBOL $34E0 boss1Scale
FORCE_SYMBOL $34E3 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $34E5
FORCE_SYMBOL $34E7 VIA_int_flags
FORCE_SYMBOL $34EB SMVB50_drawSmart
FORCE_SYMBOL $34EE Boss1EyeAnim
FORCE_SYMBOL $34F1 eyeLeftAnimCounter
FORCE_SYMBOL $34F7 SMVB50_drawSmart
FORCE_SYMBOL $34FA bossPosY
COMMENT $34FD Store Y in D/A register
FORCE_SYMBOL $34FD VIA_port_a
COMMENT $34FF Blank low, zero high?
FORCE_NO_SYMBOL $34FF
FORCE_SYMBOL $3501 VIA_cntl
COMMENT $3504 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3504 VIA_port_b
COMMENT $3506 y must be set more than xx cycles on some vectrex
COMMENT $3507 Disable mux
FORCE_SYMBOL $3507 VIA_port_b
COMMENT $3509 Store X in D/A register
FORCE_SYMBOL $3509 VIA_port_a
COMMENT $350B enable timer
FORCE_SYMBOL $350B VIA_t1_cnt_hi
FORCE_SYMBOL $350D Boss1EyeRight
FORCE_SYMBOL $3510 boss1Scale
FORCE_SYMBOL $3513 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3515
FORCE_SYMBOL $3517 VIA_int_flags
FORCE_SYMBOL $351B SMVB50_drawSmart
FORCE_SYMBOL $351E Boss1EyeAnim
FORCE_SYMBOL $3521 eyeLeftAnimCounter
FORCE_SYMBOL $3527 SMVB50_drawSmart
FORCE_SYMBOL $352A bossPosY
COMMENT $352D Store Y in D/A register
FORCE_SYMBOL $352D VIA_port_a
COMMENT $352F Blank low, zero high?
FORCE_NO_SYMBOL $352F
FORCE_SYMBOL $3531 VIA_cntl
COMMENT $3534 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3534 VIA_port_b
COMMENT $3536 y must be set more than xx cycles on some vectrex
COMMENT $3537 Disable mux
FORCE_SYMBOL $3537 VIA_port_b
COMMENT $3539 Store X in D/A register
FORCE_SYMBOL $3539 VIA_port_a
COMMENT $353B enable timer
FORCE_SYMBOL $353B VIA_t1_cnt_hi
FORCE_SYMBOL $353D diverseFlags
FORCE_SYMBOL $3540 BIT_FLAG_IS_BOSSFIGHT_ANY
COMMENT_LINE $3542 tst inBossFight
FORCE_SYMBOL $3546 Boss1GunLeftSmall_0
FORCE_SYMBOL $3549 leftSmallGunAnimStart
FORCE_SYMBOL $354E leftSmallGunAnimDelayCounter
FORCE_SYMBOL $3553 ANIMATION_DELAY
FORCE_SYMBOL $3555 leftSmallGunAnimDelayCounter
FORCE_SYMBOL $3558 leftSmallGunAnimCounter
FORCE_SYMBOL $355B leftSmallGunAnimCounter
FORCE_SYMBOL $355F Boss1GunLeftSmall_Anim
FORCE_SYMBOL $3566 leftSmallGunAnimStart
FORCE_SYMBOL $356B Boss1GunLeftSmall_Anim
FORCE_SYMBOL $356E leftSmallGunAnimCounter
FORCE_SYMBOL $3574 boss1Scale
FORCE_SYMBOL $3577 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3579
FORCE_SYMBOL $357B VIA_int_flags
FORCE_SYMBOL $357F SMVB50_drawSmart
FORCE_SYMBOL $3582 bossPosY
COMMENT $3585 Store Y in D/A register
FORCE_SYMBOL $3585 VIA_port_a
COMMENT $3587 Blank low, zero high?
FORCE_NO_SYMBOL $3587
FORCE_SYMBOL $3589 VIA_cntl
COMMENT $358C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $358C VIA_port_b
COMMENT $358E y must be set more than xx cycles on some vectrex
COMMENT $358F Disable mux
FORCE_SYMBOL $358F VIA_port_b
COMMENT $3591 Store X in D/A register
FORCE_SYMBOL $3591 VIA_port_a
COMMENT $3593 enable timer
FORCE_SYMBOL $3593 VIA_t1_cnt_hi
FORCE_SYMBOL $3595 Boss1GunRightSmall_0
FORCE_SYMBOL $3598 rightSmallGunAnimStart
FORCE_SYMBOL $359D rightSmallGunAnimDelayCounter
FORCE_SYMBOL $35A2 ANIMATION_DELAY
FORCE_SYMBOL $35A4 rightSmallGunAnimDelayCounter
FORCE_SYMBOL $35A7 rightSmallGunAnimCounter
FORCE_SYMBOL $35AA rightSmallGunAnimCounter
FORCE_SYMBOL $35AE Boss1GunRightSmall_Anim
FORCE_SYMBOL $35B5 rightSmallGunAnimStart
FORCE_SYMBOL $35BA Boss1GunRightSmall_Anim
FORCE_SYMBOL $35BD rightSmallGunAnimCounter
FORCE_SYMBOL $35C3 boss1Scale
FORCE_SYMBOL $35C6 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $35C8
FORCE_SYMBOL $35CA VIA_int_flags
FORCE_SYMBOL $35CE SMVB50_drawSmart
COMMENT_LINE $35D1 ...
FORCE_SYMBOL $35D1 bossPosY
COMMENT $35D4 Store Y in D/A register
FORCE_SYMBOL $35D4 VIA_port_a
COMMENT $35D6 Blank low, zero high?
FORCE_NO_SYMBOL $35D6
FORCE_SYMBOL $35D8 VIA_cntl
COMMENT $35DB Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $35DB VIA_port_b
COMMENT $35DD y must be set more than xx cycles on some vectrex
COMMENT $35DE Disable mux
FORCE_SYMBOL $35DE VIA_port_b
COMMENT $35E0 Store X in D/A register
FORCE_SYMBOL $35E0 VIA_port_a
COMMENT $35E2 enable timer
FORCE_SYMBOL $35E2 VIA_t1_cnt_hi
FORCE_SYMBOL $35E4 Boss1GunRightBig_0
FORCE_SYMBOL $35E7 rightBigGunAnimStart
FORCE_SYMBOL $35EC rightBigGunAnimDelayCounter
FORCE_SYMBOL $35F1 ANIMATION_DELAY
FORCE_SYMBOL $35F3 rightBigGunAnimDelayCounter
FORCE_SYMBOL $35F6 rightBigGunAnimCounter
FORCE_SYMBOL $35F9 rightBigGunAnimCounter
FORCE_SYMBOL $35FD Boss1GunRightBig_Anim
FORCE_SYMBOL $3604 rightBigGunAnimStart
FORCE_SYMBOL $3609 Boss1GunRightBig_Anim
FORCE_SYMBOL $360C rightBigGunAnimCounter
FORCE_SYMBOL $3612 boss1Scale
FORCE_SYMBOL $3615 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3617
FORCE_SYMBOL $3619 VIA_int_flags
FORCE_SYMBOL $361D SMVB50_drawSmart
COMMENT_LINE $3620 ....
FORCE_SYMBOL $3620 bossPosY
COMMENT $3623 Store Y in D/A register
FORCE_SYMBOL $3623 VIA_port_a
COMMENT $3625 Blank low, zero high?
FORCE_NO_SYMBOL $3625
FORCE_SYMBOL $3627 VIA_cntl
COMMENT $362A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $362A VIA_port_b
COMMENT $362C y must be set more than xx cycles on some vectrex
COMMENT $362D Disable mux
FORCE_SYMBOL $362D VIA_port_b
COMMENT $362F Store X in D/A register
FORCE_SYMBOL $362F VIA_port_a
COMMENT $3631 enable timer
FORCE_SYMBOL $3631 VIA_t1_cnt_hi
FORCE_SYMBOL $3633 Boss1GunLeftBig_0
FORCE_SYMBOL $3636 boss1Scale
FORCE_SYMBOL $3639 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $363B
FORCE_SYMBOL $363D VIA_int_flags
FORCE_SYMBOL $3641 SMVB50_drawSmart
FORCE_SYMBOL $3644 bossPosY
COMMENT $3647 Store Y in D/A register
FORCE_SYMBOL $3647 VIA_port_a
COMMENT $3649 Blank low, zero high?
FORCE_NO_SYMBOL $3649
FORCE_SYMBOL $364B VIA_cntl
COMMENT $364E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $364E VIA_port_b
COMMENT $3650 y must be set more than xx cycles on some vectrex
COMMENT $3651 Disable mux
FORCE_SYMBOL $3651 VIA_port_b
COMMENT $3653 Store X in D/A register
FORCE_SYMBOL $3653 VIA_port_a
COMMENT $3655 enable timer
FORCE_SYMBOL $3655 VIA_t1_cnt_hi
FORCE_SYMBOL $3657 Boss1FumeLeft
FORCE_NO_SYMBOL $365D
FORCE_SYMBOL $3661 Boss1FumeRight
FORCE_SYMBOL $3664 boss1Scale
FORCE_SYMBOL $3667 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3669
FORCE_SYMBOL $366B VIA_int_flags
FORCE_SYMBOL $366F SMVB50_drawSmart
FORCE_NO_SYMBOL $3673
FORCE_SYMBOL $3675 VIA_int_flags
COMMENT_LINE $367B single swarm members attack?
COMMENT_LINE $367B diverse banks, see "if else clauses"
COMMENT_LINE $367B Boss "Insect Queen"
COMMENT_LINE $367B ;;;;;; *****************************************
COMMENT_LINE $367B ;;;;;; * BANK 2 *
COMMENT_LINE $367B ;;;;;; *****************************************
COMMENT_LINE $367B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $367B tmp4
FORCE_SYMBOL $367F calibrationZero7
FORCE_NO_SYMBOL $3682
COMMENT $3684 Store intensity in D/A
FORCE_SYMBOL $3684 VIA_port_a
COMMENT $3686 mux disabled channel 2
FORCE_NO_SYMBOL $3686
FORCE_SYMBOL $3689 VIA_port_b
COMMENT $368B mux enabled channel 2
FORCE_SYMBOL $368B VIA_port_b
COMMENT $368D turn off mux
FORCE_SYMBOL $368D VIA_port_b
FORCE_SYMBOL $368F playershotlist_objects_head
COMMENT $3693 (D = y,x) ; do all objects
FORCE_SYMBOL $3695 tmp4
FORCE_SYMBOL $3699 bossWasHit
FORCE_SYMBOL $369E Intensity_7F
FORCE_NO_SYMBOL $36A3
FORCE_SYMBOL $36A5 boss2Scale
FORCE_NO_SYMBOL $36A9
FORCE_SYMBOL $36AB Intensity_a
FORCE_SYMBOL $36AE bossDisplayHead
FORCE_SYMBOL $36B1 calibrationZero50
FORCE_SYMBOL $36B5 gameScale
FORCE_SYMBOL $36B8 VIA_shift_reg
FORCE_NO_SYMBOL $36BA
COMMENT $36BC /BLANK low and /ZERO low
FORCE_SYMBOL $36BC VIA_cntl
FORCE_SYMBOL $36BE VIA_t1_cnt_lo
FORCE_NO_SYMBOL $36C0
FORCE_SYMBOL $36C3 VIA_port_b
FORCE_SYMBOL $36C5 boss2Direction
FORCE_NO_SYMBOL $36C8
FORCE_SYMBOL $36CE bossPosY
FORCE_NO_SYMBOL $36D1
FORCE_SYMBOL $36D3 bossPosY
FORCE_NO_SYMBOL $36DA
FORCE_SYMBOL $36DC boss2Direction
FORCE_SYMBOL $36DF bossPosY
FORCE_NO_SYMBOL $36E2
FORCE_SYMBOL $36E4 bossPosY
FORCE_NO_SYMBOL $36E7
FORCE_SYMBOL $36EB boss2Direction
FORCE_SYMBOL $36EE bossPosY
COMMENT $36F1 Store Y in D/A register
FORCE_SYMBOL $36F1 VIA_port_a
COMMENT $36F3 Blank low, zero high?
FORCE_NO_SYMBOL $36F3
FORCE_SYMBOL $36F5 VIA_cntl
COMMENT $36F8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $36F8 VIA_port_b
COMMENT $36FA y must be set more than xx cycles on some vectrex
COMMENT $36FB Disable mux
FORCE_SYMBOL $36FB VIA_port_b
COMMENT $36FD Store X in D/A register
FORCE_SYMBOL $36FD VIA_port_a
COMMENT $36FF enable timer
FORCE_SYMBOL $36FF VIA_t1_cnt_hi
FORCE_SYMBOL $3701 antennaDelayCounter
FORCE_SYMBOL $3706 ANIMATION_DELAY
FORCE_SYMBOL $3708 antennaDelayCounter
FORCE_SYMBOL $370B antennaAnimCounter
FORCE_SYMBOL $370E QueenAnim
FORCE_SYMBOL $3711 antennaAnimCounter
FORCE_SYMBOL $3719 antennaAnimCounter
FORCE_SYMBOL $371E boss2Scale
FORCE_SYMBOL $3721 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3723
FORCE_SYMBOL $3725 VIA_int_flags
FORCE_SYMBOL $3729 SMVB50_drawSmart
FORCE_SYMBOL $372C bossPosY
COMMENT $372F Store Y in D/A register
FORCE_SYMBOL $372F VIA_port_a
COMMENT $3731 Blank low, zero high?
FORCE_NO_SYMBOL $3731
FORCE_SYMBOL $3733 VIA_cntl
COMMENT $3736 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3736 VIA_port_b
COMMENT $3738 y must be set more than xx cycles on some vectrex
COMMENT $3739 Disable mux
FORCE_SYMBOL $3739 VIA_port_b
COMMENT $373B Store X in D/A register
FORCE_SYMBOL $373B VIA_port_a
COMMENT $373D enable timer
FORCE_SYMBOL $373D VIA_t1_cnt_hi
FORCE_SYMBOL $373F boss2Scale
FORCE_SYMBOL $3742 VIA_t1_cnt_lo
FORCE_SYMBOL $3744 bossPosY
FORCE_SYMBOL $374D QueenHead2
COMMENT_LINE $3752 test if player is hit by fangs
FORCE_SYMBOL $3752 playerXpos
FORCE_NO_SYMBOL $3755
FORCE_SYMBOL $375D playerWasHitFor
FORCE_SYMBOL $3760 QueenHead3
FORCE_SYMBOL $3765 QueenHead
FORCE_NO_SYMBOL $3768
FORCE_SYMBOL $376A VIA_int_flags
FORCE_SYMBOL $376E SMVB50_drawSmart
COMMENT_LINE $3771 diverse banks, see "if else clauses"
COMMENT_LINE $3771 ;;;;;; *****************************************
COMMENT_LINE $3771 ;;;;;; * BANK 2 *
COMMENT_LINE $3771 ;;;;;; *****************************************
COMMENT_LINE $3771 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $3771 calibrationZero50
FORCE_SYMBOL $3775 gameScale
FORCE_SYMBOL $3778 VIA_shift_reg
FORCE_NO_SYMBOL $377A
COMMENT $377C /BLANK low and /ZERO low
FORCE_SYMBOL $377C VIA_cntl
FORCE_SYMBOL $377E VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3780
FORCE_SYMBOL $3783 VIA_port_b
COMMENT_LINE $3785 .....................
COMMENT $3785 address of data
FORCE_SYMBOL $3785 SinistarMain
FORCE_SYMBOL $378D gameScale
FORCE_SYMBOL $3790 VIA_t1_cnt_lo
FORCE_SYMBOL $3792 bossPosY
FORCE_SYMBOL $3795 Moveto_d
FORCE_NO_SYMBOL $3798
FORCE_SYMBOL $379A VIA_t1_cnt_lo
COMMENT $379C uses Y now
FORCE_SYMBOL $379C SMVB50_drawSmart
COMMENT_LINE $37A1 .....................
COMMENT $37A1 address of data
FORCE_SYMBOL $37A1 SinistarAttachments
FORCE_SYMBOL $37A5 boss3ShieldCount
FORCE_SYMBOL $37AB boss3AttachmentScale
FORCE_SYMBOL $37B0 boss3AttachmentScale
FORCE_SYMBOL $37B7 gameScale
FORCE_SYMBOL $37BA VIA_t1_cnt_lo
FORCE_SYMBOL $37BC bossPosY
FORCE_SYMBOL $37BF Moveto_d
FORCE_SYMBOL $37C2 boss3AttachmentScale
FORCE_SYMBOL $37C7 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $37C9
FORCE_NO_SYMBOL $37CB
FORCE_SYMBOL $37CD Moveto_d
FORCE_NO_SYMBOL $37D0
FORCE_SYMBOL $37D2 VIA_t1_cnt_lo
FORCE_SYMBOL $37D4 SMVB50_drawSmart
COMMENT_LINE $37D9 .....................
FORCE_SYMBOL $37D9 gameScale
FORCE_SYMBOL $37DC VIA_t1_cnt_lo
FORCE_SYMBOL $37DE bossPosY
FORCE_SYMBOL $37E1 Moveto_d
FORCE_SYMBOL $37E4 SinistarMouthAnim
FORCE_SYMBOL $37E8 animDelayCounter
FORCE_SYMBOL $37ED boss3MouthAnimCounter
FORCE_SYMBOL $37F0 boss3MouthAnimCounter
FORCE_SYMBOL $37F8 boss3MouthAnimCounter
FORCE_SYMBOL $37FB boss3MouthAnimCounter
FORCE_NO_SYMBOL $3801
FORCE_SYMBOL $3803 VIA_t1_cnt_lo
FORCE_SYMBOL $3805 SMVB50_drawSmart
COMMENT_LINE $3809 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3809 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $3809 tmp4
FORCE_NO_SYMBOL $380D
COMMENT $380F Store intensity in D/A
FORCE_SYMBOL $380F VIA_port_a
COMMENT $3811 mux disabled channel 2
FORCE_NO_SYMBOL $3811
FORCE_SYMBOL $3814 VIA_port_b
COMMENT $3816 mux enabled channel 2
FORCE_SYMBOL $3816 VIA_port_b
COMMENT $3818 turn off mux
FORCE_SYMBOL $3818 VIA_port_b
FORCE_SYMBOL $381A playershotlist_objects_head
COMMENT $381E (D = y,x) ; do all objects
FORCE_SYMBOL $3820 tmp4
COMMENT_LINE $3824 check if boss was hit (change intensity)
FORCE_SYMBOL $3824 bossWasHit
FORCE_SYMBOL $3829 Intensity_7F
FORCE_SYMBOL $382E Intensity_3F
FORCE_SYMBOL $3831 bossDisplayHead
FORCE_SYMBOL $3834 calibrationZero50
FORCE_SYMBOL $3838 gameScale
FORCE_SYMBOL $383B VIA_shift_reg
FORCE_NO_SYMBOL $383D
COMMENT $383F /BLANK low and /ZERO low
FORCE_SYMBOL $383F VIA_cntl
FORCE_SYMBOL $3841 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3843
FORCE_SYMBOL $3846 VIA_port_b
FORCE_SYMBOL $3848 boss3AttachmentScale
FORCE_SYMBOL $384B bossPosY
FORCE_SYMBOL $384E displayFullSinistar
FORCE_SYMBOL $3851 calibrationZero7
COMMENT_LINE $3855 diverse banks, see "if else clauses"
COMMENT_LINE $3855 ;;;;;; *****************************************
COMMENT_LINE $3855 ;;;;;; * BANK 2 *
COMMENT_LINE $3855 ;;;;;; *****************************************
FORCE_SYMBOL $3855 calibrationZero7
FORCE_SYMBOL $3858 tmp4
FORCE_NO_SYMBOL $385C
COMMENT $385E Store intensity in D/A
FORCE_SYMBOL $385E VIA_port_a
COMMENT $3860 mux disabled channel 2
FORCE_NO_SYMBOL $3860
FORCE_SYMBOL $3863 VIA_port_b
COMMENT $3865 mux enabled channel 2
FORCE_SYMBOL $3865 VIA_port_b
COMMENT $3867 turn off mux
FORCE_SYMBOL $3867 VIA_port_b
FORCE_SYMBOL $3869 playershotlist_objects_head
COMMENT $386D (D = y,x) ; do all objects
FORCE_SYMBOL $386F tmp4
COMMENT_LINE $3873 check if boss was hit (change intensity)
FORCE_SYMBOL $3873 bossWasHit
FORCE_SYMBOL $3878 Intensity_7F
FORCE_SYMBOL $387D Intensity_3F
FORCE_SYMBOL $3880 bossDisplayHead
FORCE_SYMBOL $3883 calibrationZero50
FORCE_SYMBOL $3887 VIA_shift_reg
FORCE_NO_SYMBOL $3889
FORCE_SYMBOL $388C VIA_port_b
FORCE_SYMBOL $388E bossPosY
COMMENT_LINE $3891 bsr      displayFullDeathstar
COMMENT_LINE $3891 rts
COMMENT_LINE $3891 .....................
FORCE_SYMBOL $3891 calibrationZero50
FORCE_SYMBOL $3895 VIA_shift_reg
COMMENT $3897 address of data
FORCE_SYMBOL $3897 deathStarSceneData
FORCE_SYMBOL $389F gameScale
FORCE_SYMBOL $38A2 VIA_t1_cnt_lo
FORCE_SYMBOL $38A4 bossPosY
FORCE_SYMBOL $38A7 Moveto_d
FORCE_NO_SYMBOL $38AA
FORCE_SYMBOL $38AC VIA_t1_cnt_lo
FORCE_SYMBOL $38AE SMVB50_drawSmart
FORCE_SYMBOL $38B3 boss4WeaponActive
COMMENT_LINE $38B8 .....................
FORCE_SYMBOL $38B8 gameScale
FORCE_SYMBOL $38BB VIA_t1_cnt_lo
FORCE_SYMBOL $38BD bossPosY
FORCE_NO_SYMBOL $38C0
FORCE_NO_SYMBOL $38C2
FORCE_SYMBOL $38C4 Moveto_d
FORCE_SYMBOL $38C7 deathStarWeaponAnim
FORCE_SYMBOL $38CB boss4WeaponActive
FORCE_NO_SYMBOL $38D0
FORCE_SYMBOL $38D4 animDelayCounter
FORCE_SYMBOL $38D9 boss4WeaponAnimCounter
FORCE_SYMBOL $38DC boss4WeaponAnimCounter
FORCE_SYMBOL $38E4 boss4WeaponAnimCounter
FORCE_SYMBOL $38E7 boss4WeaponAnimCounter
FORCE_NO_SYMBOL $38ED
FORCE_SYMBOL $38EF VIA_t1_cnt_lo
FORCE_SYMBOL $38F1 SMVB50_drawSmart
FORCE_SYMBOL $38F4 displayExplosions
FORCE_NO_SYMBOL $38F9
COMMENT $38FB /BLANK low and /ZERO low
FORCE_SYMBOL $38FB VIA_cntl
COMMENT_LINE $38FE ..............................................
FORCE_SYMBOL $38FE gameScale
FORCE_SYMBOL $3901 VIA_t1_cnt_lo
FORCE_SYMBOL $3903 boss4explosionData
FORCE_SYMBOL $3906 ExPosy
FORCE_NO_SYMBOL $390B
FORCE_SYMBOL $390E b4_tmp1
FORCE_SYMBOL $3911 playerXpos
FORCE_NO_SYMBOL $3915
FORCE_SYMBOL $3918 b4_tmp1
FORCE_SYMBOL $3920 b4_tmp1
FORCE_SYMBOL $3923 ExSize
FORCE_SYMBOL $3926 b4_tmp1
FORCE_SYMBOL $392B playerWasHitFor
FORCE_SYMBOL $392E ExPosy
FORCE_SYMBOL $3930 Moveto_d
FORCE_SYMBOL $3933 ExSize
FORCE_SYMBOL $3936 ExSize
FORCE_NO_SYMBOL $3938
FORCE_SYMBOL $393E VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3942
FORCE_SYMBOL $3944 Intensity_a
FORCE_SYMBOL $3947 circleHalf
FORCE_SYMBOL $394A SMVB50_drawSmart
FORCE_SYMBOL $3950 ExPosy
FORCE_NO_SYMBOL $3955
FORCE_SYMBOL $3958 b4_tmp1
FORCE_SYMBOL $395B playerXpos
FORCE_NO_SYMBOL $395F
FORCE_SYMBOL $3962 b4_tmp1
FORCE_SYMBOL $396A b4_tmp1
FORCE_SYMBOL $396D ExSize
FORCE_SYMBOL $3970 b4_tmp1
FORCE_SYMBOL $3975 playerWasHitFor
FORCE_SYMBOL $3978 ExPosy
FORCE_SYMBOL $397A Moveto_d
FORCE_SYMBOL $397D ExSize
FORCE_SYMBOL $3980 ExSize
FORCE_NO_SYMBOL $3982
FORCE_SYMBOL $3986 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $398A
FORCE_SYMBOL $398C Intensity_a
FORCE_SYMBOL $398F circleHalf
FORCE_SYMBOL $3992 SMVB50_drawSmart
FORCE_SYMBOL $3998 ExPosy
FORCE_NO_SYMBOL $399F
FORCE_SYMBOL $39A2 b4_tmp1
FORCE_SYMBOL $39A5 playerXpos
FORCE_NO_SYMBOL $39A9
FORCE_SYMBOL $39AC b4_tmp1
FORCE_SYMBOL $39B4 b4_tmp1
FORCE_SYMBOL $39B7 ExSize
FORCE_SYMBOL $39BA b4_tmp1
FORCE_SYMBOL $39BF playerWasHitFor
FORCE_SYMBOL $39C2 ExPosy
FORCE_SYMBOL $39C4 Moveto_d
FORCE_SYMBOL $39C7 ExSize
FORCE_SYMBOL $39CA ExSize
FORCE_NO_SYMBOL $39CC
FORCE_SYMBOL $39D0 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $39D4
FORCE_SYMBOL $39D6 Intensity_a
FORCE_SYMBOL $39D9 circleHalf
FORCE_SYMBOL $39DC SMVB50_drawSmart
FORCE_SYMBOL $39DF noEplisionsBoss4
FORCE_NO_SYMBOL $39E2
FORCE_SYMBOL $39E5 ExPosy
FORCE_SYMBOL $39E7 noEplisionsBoss4
FORCE_NO_SYMBOL $39EA
FORCE_SYMBOL $39ED ExPosy
FORCE_NO_SYMBOL $39F1
FORCE_SYMBOL $39F4 ExPosy
FORCE_SYMBOL $39F6 trySecondExplosion
COMMENT_LINE $39F9 .....................................................
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $3A2A for scale 7
COMMENT_LINE $3A2A we need WAIT6 after a poke to hi
COMMENT_LINE $3A2A followd directly by a set_y_int
COMMENT_LINE $3A2A todo
COMMENT_LINE $3A2A last draw could contain $F in A
COMMENT_LINE $3A2A than load not needed - attention
COMMENT_LINE $3A2A when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $3A2A also in X could be some sensible value in X for one of the other
COMMENT_LINE $3A2A SMVB_lastDraw_rts2                                ;#isfunction
COMMENT_LINE $3A2A list format
COMMENT_LINE $3A2A y pos byte -> REG A
COMMENT_LINE $3A2A VIA_B for x reg = 01 *256 + x pos byte -> REG X
COMMENT_LINE $3A2A pointer to draw function -> PC
COMMENT_LINE $3A2A 5 bytes per "position" (except continuous)
COMMENT_LINE $3A2A reg A must be constantly == 0!
COMMENT_LINE $3A2A opti finding
COMMENT_LINE $3A2A a)  Findings T1 can be 2 cycles "off" -> smartlist max scale of "optimium" reduced from 9 to 7 scale :-(
COMMENT_LINE $3A2A b ) y and z sampling need up to 4 cycles to bare fruit (poke b reg)
COMMENT_LINE $3A2A 90% vectrex (guess) need 0 cycles
COMMENT_LINE $3A2A 95% vectrex are content with 2 cycles (1 nop)
COMMENT_LINE $3A2A some few vectrex NEED 4 cycles!!! ARGH!
COMMENT_LINE $3A2A c)  std to reg b of via (Y Reg) does not always / everywhere work
COMMENT_LINE $3A2A delays needed for 5% of vectrex
COMMENT_LINE $3A2A cost on a "full" screen
COMMENT_LINE $3A2A about 2000 cycles
COMMENT_LINE $3A2A VECTREX_SAVE_DELAY  =        1
COMMENT_LINE $0000 nop 3
COMMENT_LINE $0000 nop
COMMENT_LINE $0000 nop
COMMENT_LINE $0000 it IS better to first = A and THAN B
COMMENT $0000 4
COMMENT $0000 4
COMMENT_LINE $3A2A NOPS add one less, since PULL X is one cycle more than pull a!
COMMENT $0000 5
COMMENT $0000 5
COMMENT $0000 5
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $3A2F ***************************************************************************
COMMENT_LINE $3A2F /* HIGHEST SCALE FOR SMARTLIST + CONTINUE is 16!
COMMENT_LINE $3A2F SMVB_setScale:                                            ;#isfunction
COMMENT_LINE $3A2F stb      <VIA_t1_cnt_lo
COMMENT_LINE $3A2F pulu     b,x,pc
COMMENT $3A2F 5
FORCE_SYMBOL $3A2F VIA_port_b
COMMENT $3A31 4
FORCE_SYMBOL $3A31 VIA_t1_cnt_hi
COMMENT_LINE $3A35 it IS better to first = A and THAN B
COMMENT $3A35 4
FORCE_SYMBOL $3A35 VIA_port_a
COMMENT $3A37 4
FORCE_SYMBOL $3A37 VIA_port_b
COMMENT $3A39 4
COMMENT_LINE $3A3A nop 3
COMMENT $3A3A 5
FORCE_SYMBOL $3A3A VIA_port_b
COMMENT $3A3C 4
FORCE_SYMBOL $3A3C VIA_t1_cnt_hi
COMMENT $3A3E 21
COMMENT_LINE $0000 this is one pulu cycle more!
COMMENT_LINE $0000 thus ADD_NOPS can be one cycle less!
COMMENT_LINE $0000 minus 6!
COMMENT $3A3E 5+3
COMMENT_LINE $3A40 it IS better to first = A and THAN B
COMMENT $3A40 4
FORCE_SYMBOL $3A40 VIA_port_a
COMMENT $3A42 4
FORCE_SYMBOL $3A42 VIA_port_b
COMMENT $3A44 4
COMMENT_LINE $3A45 nop 3
COMMENT $3A45 5
FORCE_SYMBOL $3A45 VIA_port_b
COMMENT $3A47 4
FORCE_SYMBOL $3A47 VIA_t1_cnt_hi
COMMENT $3A49 21
COMMENT $3A49 5+3
COMMENT_LINE $3A4B it IS better to first = A and THAN B
COMMENT $3A4B 4
FORCE_SYMBOL $3A4B VIA_port_a
COMMENT $3A4D 4
FORCE_SYMBOL $3A4D VIA_port_b
COMMENT $3A4F 4
COMMENT_LINE $3A50 nop 3
COMMENT $3A50 5
FORCE_SYMBOL $3A50 VIA_port_b
COMMENT $3A52 4
FORCE_SYMBOL $3A52 VIA_t1_cnt_hi
COMMENT $3A54 21
COMMENT $3A54 5+3
COMMENT_LINE $3A56 it IS better to first = A and THAN B
COMMENT $3A56 4
FORCE_SYMBOL $3A56 VIA_port_a
COMMENT $3A58 4
FORCE_SYMBOL $3A58 VIA_port_b
COMMENT $3A5A 4
COMMENT_LINE $3A5B nop 3
COMMENT $3A5B 5
FORCE_SYMBOL $3A5B VIA_port_b
COMMENT $3A5D 4
FORCE_SYMBOL $3A5D VIA_t1_cnt_hi
COMMENT $3A5F 21
COMMENT $3A5F 5+3
COMMENT_LINE $3A61 it IS better to first = A and THAN B
COMMENT $3A61 4
FORCE_SYMBOL $3A61 VIA_port_a
COMMENT $3A63 4
FORCE_SYMBOL $3A63 VIA_port_b
COMMENT $3A65 4
COMMENT_LINE $3A66 nop 3
COMMENT $3A66 5
FORCE_SYMBOL $3A66 VIA_port_b
COMMENT $3A68 4
FORCE_SYMBOL $3A68 VIA_t1_cnt_hi
COMMENT $3A6A 21
COMMENT $3A6A 5+3
COMMENT_LINE $3A6C it IS better to first = A and THAN B
COMMENT $3A6C 4
FORCE_SYMBOL $3A6C VIA_port_a
COMMENT $3A6E 4
FORCE_SYMBOL $3A6E VIA_port_b
COMMENT $3A70 4
COMMENT_LINE $3A71 nop 3
COMMENT $3A71 5
FORCE_SYMBOL $3A71 VIA_port_b
COMMENT $3A73 4
FORCE_SYMBOL $3A73 VIA_t1_cnt_hi
COMMENT $3A75 21
COMMENT $3A75 5+3
COMMENT_LINE $3A77 continue uses same shift
COMMENT $3A77 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3A77 VIA_port_a
COMMENT_LINE $3A79 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $3A79 4
FORCE_SYMBOL $3A79 VIA_port_b
COMMENT $3A7B 4
COMMENT_LINE $3A7C nop 3
COMMENT $3A7C 5
FORCE_SYMBOL $3A7C VIA_port_b
FORCE_SYMBOL $3A7E VIA_t1_cnt_hi
COMMENT $3A82 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3A82 VIA_port_a
COMMENT_LINE $3A84 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $3A84 4
FORCE_SYMBOL $3A84 VIA_port_b
COMMENT $3A86 4
COMMENT $3A86 wait 2 cycles
COMMENT $3A87 wait 2 cycles
COMMENT_LINE $3A88 nop 3
COMMENT $3A88 5
FORCE_SYMBOL $3A88 VIA_port_b
FORCE_SYMBOL $3A8A VIA_t1_cnt_hi
COMMENT $3A8E 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3A8E VIA_port_a
COMMENT $3A90 4
FORCE_SYMBOL $3A90 VIA_port_b
COMMENT $3A92 4
COMMENT $3A92 wait 6 cycles
COMMENT_LINE $3A94 nop 3
COMMENT $3A94 5
FORCE_SYMBOL $3A94 VIA_port_b
FORCE_SYMBOL $3A96 VIA_t1_cnt_hi
COMMENT $3A9A 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3A9A VIA_port_a
COMMENT_LINE $3A9C y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $3A9C 4
FORCE_SYMBOL $3A9C VIA_port_b
COMMENT $3A9E 4
COMMENT_LINE $3A9F nop 3
COMMENT $3A9F 5
FORCE_SYMBOL $3A9F VIA_port_b
FORCE_SYMBOL $3AA1 VIA_t1_cnt_hi
COMMENT $3AA3 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $3AA4
COMMENT_LINE $3AA8 continue uses same shift
COMMENT_LINE $3AA8 y is inherently known to be == x,
COMMENT_LINE $3AA8 it IS better to first = A and THAN B
COMMENT $3AA8 4
FORCE_SYMBOL $3AA8 VIA_port_a
COMMENT $3AAA 4
FORCE_SYMBOL $3AAA VIA_port_b
COMMENT $3AAC 4
COMMENT_LINE $3AAD nop 3
COMMENT_LINE $3AAD nop
COMMENT_LINE $3AAD nop
FORCE_SYMBOL $3AAD VIA_port_b
FORCE_SYMBOL $3AAF VIA_t1_cnt_hi
COMMENT_LINE $3AB3 it IS better to first = A and THAN B
COMMENT $3AB3 4
FORCE_SYMBOL $3AB3 VIA_port_a
COMMENT $3AB5 4
FORCE_SYMBOL $3AB5 VIA_port_b
COMMENT $3AB7 4
COMMENT_LINE $3AB7 nop 3
FORCE_SYMBOL $3AB7 VIA_port_b
FORCE_SYMBOL $3AB9 VIA_t1_cnt_hi
COMMENT_LINE $3ABD it IS better to first = A and THAN B
COMMENT $3ABD 4
FORCE_SYMBOL $3ABD VIA_port_a
COMMENT $3ABF 4
FORCE_SYMBOL $3ABF VIA_port_b
COMMENT $3AC1 4
COMMENT_LINE $3AC2 nop 3
COMMENT $3AC2 5
FORCE_SYMBOL $3AC2 VIA_port_b
FORCE_SYMBOL $3AC4 VIA_t1_cnt_hi
COMMENT_LINE $3AC8 SMVB_continue_quadro                                      ;#isfunction
COMMENT_LINE $3AC8 SET_Y_INT
COMMENT_LINE $3AC8 Y_DELAY                               ; 4
COMMENT_LINE $3AC8 stx      <VIA_port_b                  ; 5
COMMENT_LINE $3AC8 sta      <VIA_t1_cnt_hi
COMMENT_LINE $3AC8 ADD_NOPS
COMMENT_LINE $3AC8 bra      cont3
COMMENT_LINE $3AC8 it IS better to first = A and THAN B
COMMENT $3AC8 4
FORCE_SYMBOL $3AC8 VIA_port_a
COMMENT $3ACA 4
FORCE_SYMBOL $3ACA VIA_port_b
COMMENT $3ACC 4
COMMENT_LINE $3ACD nop 3
COMMENT $3ACD 5
FORCE_SYMBOL $3ACD VIA_port_b
FORCE_SYMBOL $3ACF VIA_t1_cnt_hi
COMMENT_LINE $3AD3 SET_Y_INT
COMMENT_LINE $3AD3 Y_DELAY                               ; 4
COMMENT_LINE $3AD3 stx      <VIA_port_b                  ; 5
COMMENT_LINE $3AD3 sta      <VIA_t1_cnt_hi
COMMENT_LINE $3AD3 ADD_NOPS
COMMENT_LINE $3AD3 WAIT_BEFORE
COMMENT $3AD3 wait 3 cycles
COMMENT $3AD5 wait 2 cycles
COMMENT $3AD6 wait 2 cycles
FORCE_SYMBOL $3AD7 VIA_t1_cnt_hi
COMMENT $3AD9 wait 3 cycles
COMMENT $3ADB wait 3 cycles
COMMENT $3ADD wait 2 cycles
COMMENT $3ADE wait 2 cycles
FORCE_SYMBOL $3ADF VIA_t1_cnt_hi
COMMENT $3AE1 wait 3 cycles
COMMENT $3AE3 wait 3 cycles
COMMENT $3AE5 wait 2 cycles
COMMENT $3AE6 wait 2 cycles
FORCE_SYMBOL $3AE7 VIA_t1_cnt_hi
COMMENT $3AE9 wait 3 cycles
COMMENT $3AEB wait 3 cycles
COMMENT $3AED wait 2 cycles
COMMENT $3AEE wait 2 cycles
FORCE_SYMBOL $3AEF VIA_t1_cnt_hi
COMMENT $3AF1 wait 3 cycles
COMMENT $3AF3 wait 3 cycles
COMMENT $3AF5 wait 2 cycles
COMMENT $3AF6 wait 2 cycles
FORCE_SYMBOL $3AF7 VIA_t1_cnt_hi
COMMENT $3AF9 wait 3 cycles
COMMENT $3AFB wait 3 cycles
COMMENT $3AFD wait 2 cycles
COMMENT $3AFE wait 2 cycles
FORCE_SYMBOL $3AFF VIA_t1_cnt_hi
FORCE_SYMBOL $3B05 VIA_t1_cnt_hi
COMMENT_LINE $3B09 it IS better to first = A and THAN B
COMMENT $3B09 4
FORCE_SYMBOL $3B09 VIA_port_a
COMMENT $3B0B 4
FORCE_SYMBOL $3B0B VIA_port_b
COMMENT $3B0D 4
COMMENT_LINE $3B0E nop 3
COMMENT $3B0E 5
FORCE_SYMBOL $3B0E VIA_port_b
FORCE_SYMBOL $3B10 VIA_t1_cnt_hi
COMMENT_LINE $3B14 it IS better to first = A and THAN B
COMMENT $3B14 4
FORCE_SYMBOL $3B14 VIA_port_a
COMMENT $3B16 4
FORCE_SYMBOL $3B16 VIA_port_b
COMMENT $3B18 4
COMMENT $3B18 wait 2 cycles
COMMENT $3B19 wait 2 cycles
COMMENT_LINE $3B1A nop 3
COMMENT $3B1A 5
FORCE_SYMBOL $3B1A VIA_port_b
FORCE_SYMBOL $3B1C VIA_t1_cnt_hi
COMMENT_LINE $3B20 it IS better to first = A and THAN B
COMMENT $3B20 4
FORCE_SYMBOL $3B20 VIA_port_a
COMMENT $3B22 4
FORCE_SYMBOL $3B22 VIA_port_b
COMMENT $3B24 4
COMMENT $3B24 wait 6 cycles
COMMENT_LINE $3B26 nop 3
COMMENT $3B26 5
FORCE_SYMBOL $3B26 VIA_port_b
FORCE_SYMBOL $3B28 VIA_t1_cnt_hi
COMMENT_LINE $3B2C it IS better to first = A and THAN B
COMMENT $3B2C 4
FORCE_SYMBOL $3B2C VIA_port_a
COMMENT $3B2E 4
FORCE_SYMBOL $3B2E VIA_port_b
FORCE_NO_SYMBOL $3B30
FORCE_SYMBOL $3B32 VIA_shift_reg
COMMENT_LINE $3B34 nop 3
COMMENT $3B34 5
FORCE_SYMBOL $3B34 VIA_port_b
FORCE_SYMBOL $3B36 VIA_t1_cnt_hi
COMMENT_LINE $3B3A it IS better to first = A and THAN B
COMMENT $3B3A 4
FORCE_SYMBOL $3B3A VIA_port_a
COMMENT $3B3C 4
FORCE_SYMBOL $3B3C VIA_port_b
FORCE_NO_SYMBOL $3B3E
COMMENT_LINE $3B40 nop 3
COMMENT $3B40 5
FORCE_SYMBOL $3B40 VIA_port_b
FORCE_SYMBOL $3B42 VIA_t1_cnt_hi
FORCE_SYMBOL $3B44 VIA_shift_reg
COMMENT $3B46 reduced by ldu ,u - 5 cycles
COMMENT_LINE $3B49 it IS better to first = A and THAN B
COMMENT $3B49 4
FORCE_SYMBOL $3B49 VIA_port_a
COMMENT $3B4B 4
FORCE_SYMBOL $3B4B VIA_port_b
FORCE_NO_SYMBOL $3B4D
COMMENT_LINE $3B4F nop 3
COMMENT $3B4F 5
FORCE_SYMBOL $3B4F VIA_port_b
FORCE_SYMBOL $3B51 VIA_t1_cnt_hi
FORCE_SYMBOL $3B53 VIA_shift_reg
COMMENT $3B55 reduced by ldu ,u - 5 cycles
COMMENT_LINE $3B58 it IS better to first = A and THAN B
COMMENT $3B58 4
FORCE_SYMBOL $3B58 VIA_port_a
COMMENT $3B5A 4
FORCE_SYMBOL $3B5A VIA_port_b
FORCE_NO_SYMBOL $3B5C
FORCE_SYMBOL $3B5E VIA_shift_reg
COMMENT_LINE $3B60 nop 3
COMMENT $3B60 5
FORCE_SYMBOL $3B60 VIA_port_b
FORCE_SYMBOL $3B62 VIA_t1_cnt_hi
COMMENT_LINE $3B66 it IS better to first = A and THAN B
COMMENT $3B66 4
FORCE_SYMBOL $3B66 VIA_port_a
COMMENT $3B68 4
FORCE_SYMBOL $3B68 VIA_port_b
COMMENT $3B6A 2
FORCE_SYMBOL $3B6A SHITREG_POKE_VALUE
COMMENT $3B6C 4
FORCE_SYMBOL $3B6C VIA_shift_reg
COMMENT_LINE $3B6E nop 3
COMMENT $3B6E 5
FORCE_SYMBOL $3B6E VIA_port_b
COMMENT $3B70 4
FORCE_SYMBOL $3B70 VIA_t1_cnt_hi
COMMENT_LINE $3B74 it IS better to first = A and THAN B
COMMENT $3B74 4
FORCE_SYMBOL $3B74 VIA_port_a
COMMENT $3B76 4
FORCE_SYMBOL $3B76 VIA_port_b
FORCE_NO_SYMBOL $3B78
FORCE_SYMBOL $3B7A VIA_shift_reg
COMMENT_LINE $3B7C nop 3
COMMENT $3B7C 5
FORCE_SYMBOL $3B7C VIA_port_b
FORCE_SYMBOL $3B7E VIA_t1_cnt_hi
COMMENT_LINE $3B82 it IS better to first = A and THAN B
COMMENT $3B82 4
FORCE_SYMBOL $3B82 VIA_port_a
COMMENT $3B84 4
FORCE_SYMBOL $3B84 VIA_port_b
FORCE_NO_SYMBOL $3B86
FORCE_SYMBOL $3B88 VIA_shift_reg
COMMENT_LINE $3B8A nop 3
COMMENT $3B8A 5
FORCE_SYMBOL $3B8A VIA_port_b
FORCE_SYMBOL $3B8C VIA_t1_cnt_hi
COMMENT $3B90 wait 3 cycles
COMMENT $3B92 wait 2 cycles
COMMENT $3B93 wait 2 cycles
FORCE_SYMBOL $3B94 VIA_t1_cnt_hi
COMMENT $3B96 wait 3 cycles
COMMENT $3B98 wait 3 cycles
COMMENT $3B9A wait 2 cycles
COMMENT $3B9B wait 2 cycles
FORCE_SYMBOL $3B9C VIA_t1_cnt_hi
FORCE_SYMBOL $3BA2 VIA_t1_cnt_hi
COMMENT_LINE $3BA6 it IS better to first = A and THAN B
COMMENT $3BA6 4
FORCE_SYMBOL $3BA6 VIA_port_a
COMMENT $3BA8 4
FORCE_SYMBOL $3BA8 VIA_port_b
FORCE_NO_SYMBOL $3BAA
COMMENT_LINE $3BAC nop 3
COMMENT $3BAC 5
FORCE_SYMBOL $3BAC VIA_port_b
FORCE_SYMBOL $3BAE VIA_t1_cnt_hi
FORCE_SYMBOL $3BB0 VIA_shift_reg
FORCE_SYMBOL $3BB6 VIA_t1_cnt_hi
COMMENT $3BB8 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $3BBC
FORCE_SYMBOL $3BBE VIA_shift_reg
COMMENT_LINE $3BC0 nop 3
COMMENT $3BC0 5
FORCE_SYMBOL $3BC0 VIA_port_b
FORCE_SYMBOL $3BC2 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3BC6
COMMENT_LINE $3BC8 nop 3
COMMENT $3BC8 5
FORCE_SYMBOL $3BC8 VIA_port_b
FORCE_SYMBOL $3BCA VIA_t1_cnt_hi
FORCE_SYMBOL $3BCC VIA_shift_reg
COMMENT $3BCE reduced by ldu ,u - 5 cycles
COMMENT_LINE $3BD1 assuming b = 1
COMMENT $3BD1 4
FORCE_SYMBOL $3BD1 VIA_shift_reg
COMMENT_LINE $3BD3 nop 3
COMMENT $3BD3 5
FORCE_SYMBOL $3BD3 VIA_port_b
COMMENT $3BD5 4
FORCE_SYMBOL $3BD5 VIA_t1_cnt_hi
COMMENT_LINE $3BD9 assume b contains SHIFT
FORCE_SYMBOL $3BD9 VIA_shift_reg
FORCE_SYMBOL $3BDB VIA_t1_cnt_hi
COMMENT_LINE $3BDF SMVB_startDraw_yStays_single_sj                           ;#isfunction
COMMENT_LINE $3BDF ldb      #SHITREG_POKE_VALUE          ; 2
COMMENT_LINE $3BDF stb      <VIA_shift_reg               ; 4
COMMENT_LINE $3BDF DELAY_NONE
COMMENT_LINE $3BDF stx      <VIA_port_b                  ; 5
COMMENT_LINE $3BDF sta      <VIA_t1_cnt_hi               ; 4
COMMENT_LINE $3BDF ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $3BDF ldu      ,u
COMMENT_LINE $3BDF pulu     b,x,pc
COMMENT_LINE $3BDF it IS better to first = A and THAN B
COMMENT $3BDF 4
FORCE_SYMBOL $3BDF VIA_port_a
COMMENT $3BE1 4
FORCE_SYMBOL $3BE1 VIA_port_b
COMMENT $3BE3 2
FORCE_SYMBOL $3BE3 SHITREG_POKE_VALUE
COMMENT $3BE5 4
FORCE_SYMBOL $3BE5 VIA_shift_reg
COMMENT_LINE $3BE7 nop 3
COMMENT $3BE7 5
FORCE_SYMBOL $3BE7 VIA_port_b
COMMENT $3BE9 4
FORCE_SYMBOL $3BE9 VIA_t1_cnt_hi
COMMENT_LINE $3BED it IS better to first = A and THAN B
COMMENT $3BED 4
FORCE_SYMBOL $3BED VIA_port_a
COMMENT $3BEF 4
FORCE_SYMBOL $3BEF VIA_port_b
COMMENT $3BF1 2
FORCE_SYMBOL $3BF1 SHITREG_POKE_VALUE
COMMENT $3BF3 4
FORCE_SYMBOL $3BF3 VIA_shift_reg
COMMENT_LINE $3BF5 nop 3
COMMENT $3BF5 5
FORCE_SYMBOL $3BF5 VIA_port_b
COMMENT $3BF7 4
FORCE_SYMBOL $3BF7 VIA_t1_cnt_hi
COMMENT $3BF9 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $3BFA
COMMENT_LINE $3BFE SMVB_startDraw_yEqx_single_sj                             ;#isfunction
COMMENT_LINE $3BFE SET_Y_INT
COMMENT_LINE $3BFE ldb      #$01
COMMENT_LINE $3BFE stb      <VIA_shift_reg               ; 4 - ASSUMING SHITREG_POKE_VALUE = 1
COMMENT_LINE $3BFE DELAY_NONE
COMMENT_LINE $3BFE stb      <VIA_port_b
COMMENT_LINE $3BFE sta      <VIA_t1_cnt_hi
COMMENT_LINE $3BFE ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $3BFE ldu      ,u
COMMENT_LINE $3BFE pulu     b,x,pc
COMMENT_LINE $3BFE it IS better to first = A and THAN B
COMMENT $3BFE 4
FORCE_SYMBOL $3BFE VIA_port_a
COMMENT $3C00 4
FORCE_SYMBOL $3C00 VIA_port_b
FORCE_NO_SYMBOL $3C02
COMMENT $3C04 4 - ASSUMING SHITREG_POKE_VALUE = 1
FORCE_SYMBOL $3C04 VIA_shift_reg
COMMENT_LINE $3C06 nop 3
FORCE_SYMBOL $3C06 VIA_port_b
FORCE_SYMBOL $3C08 VIA_t1_cnt_hi
COMMENT_LINE $3C0C it IS better to first = A and THAN B
COMMENT $3C0C 4
FORCE_SYMBOL $3C0C VIA_port_a
COMMENT $3C0E 4
FORCE_SYMBOL $3C0E VIA_port_b
COMMENT_LINE $3C10 nop 3
FORCE_SYMBOL $3C10 VIA_port_b
FORCE_SYMBOL $3C12 VIA_t1_cnt_hi
COMMENT $3C14 4
FORCE_SYMBOL $3C14 VIA_shift_reg
COMMENT_LINE $3C18 it IS better to first = A and THAN B
COMMENT $3C18 4
FORCE_SYMBOL $3C18 VIA_port_a
COMMENT $3C1A 4
FORCE_SYMBOL $3C1A VIA_port_b
COMMENT_LINE $3C1D nop 3
COMMENT_LINE $3C1D nop
COMMENT_LINE $3C1D nop
FORCE_SYMBOL $3C1D VIA_port_b
FORCE_SYMBOL $3C1F VIA_t1_cnt_hi
COMMENT $3C21 4
FORCE_SYMBOL $3C21 VIA_shift_reg
FORCE_SYMBOL $3C25 VIA_t1_cnt_hi
FORCE_SYMBOL $3C27 VIA_shift_reg
COMMENT_LINE $3C2B it IS better to first = A and THAN B
COMMENT $3C2B 4
FORCE_SYMBOL $3C2B VIA_port_a
COMMENT $3C2D 4
FORCE_SYMBOL $3C2D VIA_port_b
COMMENT $3C2F wait 2 cycles
COMMENT_LINE $3C30 nop 3
FORCE_SYMBOL $3C30 VIA_port_b
FORCE_SYMBOL $3C32 VIA_t1_cnt_hi
COMMENT $3C34 4
FORCE_SYMBOL $3C34 VIA_shift_reg
COMMENT $3C36 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $3C37
COMMENT_LINE $3C3B SMVB_startMove_yd4_yEqx_single_sj                         ;#isfunction
COMMENT_LINE $3C3B SET_Y_INT
COMMENT_LINE $3C3B WAIT2
COMMENT_LINE $3C3B Y_DELAY_HALF_4
COMMENT_LINE $3C3B stx      <VIA_port_b
COMMENT_LINE $3C3B sta      <VIA_t1_cnt_hi
COMMENT_LINE $3C3B sta      <VIA_shift_reg               ; 4
COMMENT_LINE $3C3B ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $3C3B ldu      ,u
COMMENT_LINE $3C3B pulu     b,x,pc
COMMENT $3C3B 4
FORCE_SYMBOL $3C3B VIA_port_b
FORCE_NO_SYMBOL $3C3D
FORCE_SYMBOL $3C3F VIA_shift_reg
COMMENT_LINE $3C41 nop 3
COMMENT $3C41 5
FORCE_SYMBOL $3C41 VIA_port_b
FORCE_SYMBOL $3C43 VIA_t1_cnt_hi
COMMENT $3C45 reduced by ldu ,u - 5 cycles
COMMENT $3C47 4
FORCE_SYMBOL $3C47 VIA_port_b
FORCE_NO_SYMBOL $3C49
COMMENT_LINE $3C4B nop 3
COMMENT $3C4B 5
FORCE_SYMBOL $3C4B VIA_port_b
FORCE_SYMBOL $3C4D VIA_t1_cnt_hi
FORCE_SYMBOL $3C4F VIA_shift_reg
COMMENT $3C51 reduced by ldu ,u - 5 cycles
COMMENT $3C54 4
FORCE_SYMBOL $3C54 VIA_port_b
FORCE_SYMBOL $3C56 SHITREG_POKE_VALUE
COMMENT $3C58 4
FORCE_SYMBOL $3C58 VIA_shift_reg
COMMENT_LINE $3C5A nop 3
COMMENT $3C5A 5
FORCE_SYMBOL $3C5A VIA_port_b
FORCE_SYMBOL $3C5C VIA_t1_cnt_hi
COMMENT_LINE $3C60 SMVB_startDraw_newY_eq_oldX_single_sj:                    ;#isfunction
COMMENT_LINE $3C60 sta      <VIA_port_b                  ; 4
COMMENT_LINE $3C60 ldb      #SHITREG_POKE_VALUE
COMMENT_LINE $3C60 stb      <VIA_shift_reg               ; 4
COMMENT_LINE $3C60 DELAY_NONE
COMMENT_LINE $3C60 stx      <VIA_port_b                  ; 5
COMMENT_LINE $3C60 sta      <VIA_t1_cnt_hi
COMMENT_LINE $3C60 ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $3C60 ldu      ,u
COMMENT_LINE $3C60 pulu     b,x,pc
FORCE_SYMBOL $3C60 VIA_int_flags
COMMENT $3C62 wait 6 cycles
COMMENT_LINE $3C64 my new VIA
COMMENT_LINE $3C64 seems to = T1 falsely when = during a
COMMENT_LINE $3C64 specific event (e.g. timer = 0)
COMMENT_LINE $3C64 if that happens, either the I flags are not
COMMENT_LINE $3C64 reseted - or T1 Hi = to very hi,
COMMENT_LINE $3C64 anyway, when in warp, the last "SMVB_continue_yStays_single"
COMMENT_LINE $3C64 of the failure bugs
COMMENT_LINE $3C64 when the explosion has a growth of 4 that condition is
COMMENT_LINE $3C64 met and vectrex HALTS dure to this check
COMMENT_LINE $3C64 setting it to DISABLES
COMMENT_LINE $3C64 doesn't make much difference in a 7 scale Smart draw!
COMMENT_LINE $3C64 so for now I just disable it
COMMENT_LINE $3C64 beq      SMVB_FlagWait
FORCE_SYMBOL $3C64 VIA_shift_reg
FORCE_SYMBOL $3C66 gameScale
FORCE_NO_SYMBOL $3C69
COMMENT $3C6B /BLANK low and /ZERO low
FORCE_SYMBOL $3C6B VIA_cntl
FORCE_SYMBOL $3C6D VIA_t1_cnt_lo
COMMENT_LINE $3C6F and ensures integrators are clean (good positioning!)
FORCE_SYMBOL $3C6F VIA_port_b
COMMENT_LINE $3C72 // TODO CHECK WITH SHIELD + CO
FORCE_SYMBOL $3C72 VIA_int_flags
FORCE_SYMBOL $3C76 VIA_shift_reg
FORCE_NO_SYMBOL $3C7B
FORCE_SYMBOL $3C7D VIA_int_flags
COMMENT_LINE $3C82 todo
COMMENT_LINE $3C82 last draw could contain $F in A
COMMENT_LINE $3C82 than load not needed - attention
COMMENT_LINE $3C82 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $3C82 also in X could be some sensible value in X for one of the other
COMMENT_LINE $3C82 ldb      #$f0
FORCE_SYMBOL $3C83 VIA_shift_reg
FORCE_SYMBOL $3C85 gameScale
FORCE_SYMBOL $3C88 VIA_t1_cnt_lo
COMMENT_LINE $3C8A extended on purpose to gain one cycle of time
COMMENT_LINE $3C8A to reset to
COMMENT_LINE $3C8A a) swithc light off before zeroing
COMMENT_LINE $3C8A b) zero
FORCE_NO_SYMBOL $3C8A
COMMENT $3C8C /BLANK low and /ZERO low
FORCE_SYMBOL $3C8C VIA_cntl
FORCE_SYMBOL $3C8F VIA_port_b
COMMENT_LINE $3C92 nop 10
COMMENT $3C92 (D = y,x, pc = next object)
FORCE_NO_SYMBOL $3C94
FORCE_SYMBOL $3C96 VIA_cntl
FORCE_NO_SYMBOL $3C98
FORCE_SYMBOL $3C9B VIA_port_b
FORCE_SYMBOL $3C9D VIA_port_b
FORCE_SYMBOL $3C9F calibrationValue7
FORCE_SYMBOL $3CA2 additionalFlags
FORCE_NO_SYMBOL $3CA5
FORCE_NO_SYMBOL $3CA9
FORCE_SYMBOL $3CAB VIA_port_b
COMMENT $3CAD 2 cycles
FORCE_NO_SYMBOL $3CAD
FORCE_SYMBOL $3CB0 VIA_port_a
FORCE_SYMBOL $3CB2 VIA_port_b
FORCE_NO_SYMBOL $3CB5
FORCE_SYMBOL $3CB7 VIA_port_b
COMMENT $3CB9 2 cycles
FORCE_NO_SYMBOL $3CB9
FORCE_SYMBOL $3CBC VIA_port_a
FORCE_SYMBOL $3CC0 VIA_port_b
COMMENT $0000 4
COMMENT $0000 4
COMMENT_LINE $0000 NOPS add one less, since PULL X is one cycle more than pull a!
COMMENT_LINE $0000 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT_LINE $0000 nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $0000 5
COMMENT $0000 5
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $3CC6 ***************************************************************************
COMMENT_LINE $3CC6 /* HIGHEST SCALE FOR SMARTLIST + CONTINUE is 16!
COMMENT_LINE $3CC6 SMVB50_setScale:                                          ;#isfunction
COMMENT_LINE $3CC6 stb      <VIA_t1_cnt_lo
COMMENT_LINE $3CC6 pulu     b,x,pc
COMMENT $3CC6 5
FORCE_SYMBOL $3CC6 VIA_port_b
COMMENT $3CC8 4
FORCE_SYMBOL $3CC8 VIA_t1_cnt_hi
COMMENT_LINE $3CCA nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3CCA wait 16 cycles
COMMENT $3CCE wait 16 cycles
COMMENT $3CD2 wait 6 cycles
COMMENT $3CD4 wait 2 cycles
COMMENT $3CD5 wait 2 cycles
COMMENT $3CD8 4
FORCE_SYMBOL $3CD8 VIA_port_b
COMMENT $3CDA 4
FORCE_SYMBOL $3CDA VIA_port_a
COMMENT $3CDC 4
COMMENT $3CDE 5
FORCE_SYMBOL $3CDE VIA_port_b
COMMENT $3CE0 4
FORCE_SYMBOL $3CE0 VIA_t1_cnt_hi
COMMENT $3CE2 21
COMMENT_LINE $3CE2 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3CE2 wait 16 cycles
COMMENT $3CE6 wait 16 cycles
COMMENT $3CEA wait 6 cycles
COMMENT $3CEC wait 2 cycles
COMMENT $3CED wait 2 cycles
COMMENT_LINE $3CEE this is one pulu cycle more!
COMMENT_LINE $3CEE thus ADD_NOPS can be one cycle less!
COMMENT_LINE $3CEE minus 6!
COMMENT $3CEE 5+3
COMMENT $3CF0 4
FORCE_SYMBOL $3CF0 VIA_port_b
COMMENT $3CF2 4
FORCE_SYMBOL $3CF2 VIA_port_a
COMMENT $3CF4 4
COMMENT $3CF6 5
FORCE_SYMBOL $3CF6 VIA_port_b
COMMENT $3CF8 4
FORCE_SYMBOL $3CF8 VIA_t1_cnt_hi
COMMENT $3CFA 21
COMMENT_LINE $3CFA nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3CFA wait 16 cycles
COMMENT $3CFE wait 16 cycles
COMMENT $3D02 wait 6 cycles
COMMENT $3D04 wait 2 cycles
COMMENT $3D05 wait 2 cycles
COMMENT $3D06 5+3
COMMENT $3D08 4
FORCE_SYMBOL $3D08 VIA_port_b
COMMENT $3D0A 4
FORCE_SYMBOL $3D0A VIA_port_a
COMMENT $3D0C 4
COMMENT $3D0E 5
FORCE_SYMBOL $3D0E VIA_port_b
COMMENT $3D10 4
FORCE_SYMBOL $3D10 VIA_t1_cnt_hi
COMMENT $3D12 21
COMMENT_LINE $3D12 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3D12 wait 16 cycles
COMMENT $3D16 wait 16 cycles
COMMENT $3D1A wait 6 cycles
COMMENT $3D1C wait 2 cycles
COMMENT $3D1D wait 2 cycles
COMMENT $3D1E 5+3
COMMENT $3D20 4
FORCE_SYMBOL $3D20 VIA_port_b
COMMENT $3D22 4
FORCE_SYMBOL $3D22 VIA_port_a
COMMENT $3D24 4
COMMENT $3D26 5
FORCE_SYMBOL $3D26 VIA_port_b
COMMENT $3D28 4
FORCE_SYMBOL $3D28 VIA_t1_cnt_hi
COMMENT $3D2A 21
COMMENT_LINE $3D2A nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3D2A wait 16 cycles
COMMENT $3D2E wait 16 cycles
COMMENT $3D32 wait 6 cycles
COMMENT $3D34 wait 2 cycles
COMMENT $3D35 wait 2 cycles
COMMENT $3D36 5+3
COMMENT $3D38 4
FORCE_SYMBOL $3D38 VIA_port_b
COMMENT $3D3A 4
FORCE_SYMBOL $3D3A VIA_port_a
COMMENT $3D3C 4
COMMENT $3D3E 5
FORCE_SYMBOL $3D3E VIA_port_b
COMMENT $3D40 4
FORCE_SYMBOL $3D40 VIA_t1_cnt_hi
COMMENT $3D42 21
COMMENT_LINE $3D42 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3D42 wait 16 cycles
COMMENT $3D46 wait 16 cycles
COMMENT $3D4A wait 6 cycles
COMMENT $3D4C wait 2 cycles
COMMENT $3D4D wait 2 cycles
COMMENT $3D4E 5+3
COMMENT $3D50 4
FORCE_SYMBOL $3D50 VIA_port_b
COMMENT $3D52 4
FORCE_SYMBOL $3D52 VIA_port_a
COMMENT $3D54 4
COMMENT $3D56 5
FORCE_SYMBOL $3D56 VIA_port_b
COMMENT $3D58 4
FORCE_SYMBOL $3D58 VIA_t1_cnt_hi
COMMENT $3D5A 21
COMMENT_LINE $3D5A nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3D5A wait 16 cycles
COMMENT $3D5E wait 16 cycles
COMMENT $3D62 wait 6 cycles
COMMENT $3D64 wait 2 cycles
COMMENT $3D65 wait 2 cycles
COMMENT $3D66 5+3
COMMENT_LINE $3D68 continue uses same shift
COMMENT $3D68 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3D68 VIA_port_a
COMMENT_LINE $3D6A y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $3D6A 4
FORCE_SYMBOL $3D6A VIA_port_b
COMMENT $3D6C 4
COMMENT $3D6E 5
FORCE_SYMBOL $3D6E VIA_port_b
FORCE_SYMBOL $3D70 VIA_t1_cnt_hi
COMMENT_LINE $3D72 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3D72 wait 16 cycles
COMMENT $3D76 wait 16 cycles
COMMENT $3D7A wait 6 cycles
COMMENT $3D7C wait 2 cycles
COMMENT $3D7D wait 2 cycles
COMMENT $3D80 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3D80 VIA_port_a
COMMENT_LINE $3D82 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $3D82 4
FORCE_SYMBOL $3D82 VIA_port_b
COMMENT $3D84 4
COMMENT_LINE $3D87 Y_DELAY_4                               ; 4
COMMENT $3D87 5
FORCE_SYMBOL $3D87 VIA_port_b
FORCE_SYMBOL $3D89 VIA_t1_cnt_hi
COMMENT_LINE $3D8B nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3D8B wait 16 cycles
COMMENT $3D8F wait 16 cycles
COMMENT $3D93 wait 6 cycles
COMMENT $3D95 wait 2 cycles
COMMENT $3D96 wait 2 cycles
COMMENT $3D99 4 shift not changed, move might also be a draw
FORCE_SYMBOL $3D99 VIA_port_a
COMMENT_LINE $3D9B y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $3D9B 4
FORCE_SYMBOL $3D9B VIA_port_b
COMMENT $3D9D 4
COMMENT $3D9F 5
FORCE_SYMBOL $3D9F VIA_port_b
FORCE_SYMBOL $3DA1 VIA_t1_cnt_hi
COMMENT $3DA3 reduced by ldu ,u - 5 cycles
COMMENT_LINE $3DA3 nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $3DA3 wait 16 cycles
COMMENT $3DA7 wait 16 cycles
COMMENT $3DAB wait 3 cycles
COMMENT $3DAD wait 2 cycles
FORCE_NO_SYMBOL $3DAE
COMMENT $3DB2 4
FORCE_SYMBOL $3DB2 VIA_port_b
COMMENT $3DB4 4
FORCE_SYMBOL $3DB4 VIA_port_a
COMMENT $3DB6 4
FORCE_SYMBOL $3DB7 VIA_port_b
COMMENT_LINE $3DB9 inc      <VIA_port_b
FORCE_SYMBOL $3DB9 VIA_t1_cnt_hi
COMMENT_LINE $3DBB nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3DBB wait 16 cycles
COMMENT $3DBF wait 16 cycles
COMMENT $3DC3 wait 6 cycles
COMMENT $3DC5 wait 2 cycles
COMMENT $3DC6 wait 2 cycles
COMMENT $3DC9 4
FORCE_SYMBOL $3DC9 VIA_port_b
COMMENT $3DCB 4
FORCE_SYMBOL $3DCB VIA_port_a
COMMENT $3DCD 4
COMMENT $3DCF 5
FORCE_SYMBOL $3DCF VIA_port_b
FORCE_SYMBOL $3DD1 VIA_t1_cnt_hi
COMMENT_LINE $3DD3 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3DD3 wait 16 cycles
COMMENT $3DD7 wait 16 cycles
COMMENT $3DDB wait 6 cycles
COMMENT $3DDD wait 2 cycles
COMMENT $3DDE wait 2 cycles
COMMENT $3DE1 4
FORCE_SYMBOL $3DE1 VIA_port_b
COMMENT $3DE3 4
FORCE_SYMBOL $3DE3 VIA_port_a
COMMENT $3DE5 4
COMMENT $3DE7 5
FORCE_SYMBOL $3DE7 VIA_port_b
FORCE_SYMBOL $3DE9 VIA_t1_cnt_hi
COMMENT_LINE $3DEB nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3DEB wait 16 cycles
COMMENT $3DEF wait 16 cycles
COMMENT $3DF3 wait 6 cycles
COMMENT $3DF5 wait 2 cycles
COMMENT $3DF6 wait 2 cycles
COMMENT $3DF7 wait 3 cycles
COMMENT $3DF9 wait 3 cycles
COMMENT $3DFB wait 2 cycles
COMMENT $3DFC wait 2 cycles
FORCE_SYMBOL $3DFD VIA_t1_cnt_hi
COMMENT_LINE $3DFF nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3DFF wait 16 cycles
COMMENT $3E03 wait 16 cycles
COMMENT $3E07 wait 6 cycles
COMMENT $3E09 wait 2 cycles
COMMENT $3E0A wait 2 cycles
COMMENT $3E0B wait 3 cycles
COMMENT $3E0D wait 3 cycles
COMMENT $3E0F wait 2 cycles
COMMENT $3E10 wait 2 cycles
FORCE_SYMBOL $3E11 VIA_t1_cnt_hi
COMMENT_LINE $3E13 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E13 wait 16 cycles
COMMENT $3E17 wait 16 cycles
COMMENT $3E1B wait 6 cycles
COMMENT $3E1D wait 2 cycles
COMMENT $3E1E wait 2 cycles
COMMENT $3E1F wait 3 cycles
COMMENT $3E21 wait 3 cycles
COMMENT $3E23 wait 2 cycles
COMMENT $3E24 wait 2 cycles
FORCE_SYMBOL $3E25 VIA_t1_cnt_hi
COMMENT_LINE $3E27 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E27 wait 16 cycles
COMMENT $3E2B wait 16 cycles
COMMENT $3E2F wait 6 cycles
COMMENT $3E31 wait 2 cycles
COMMENT $3E32 wait 2 cycles
COMMENT $3E33 wait 3 cycles
COMMENT $3E35 wait 3 cycles
COMMENT $3E37 wait 2 cycles
COMMENT $3E38 wait 2 cycles
FORCE_SYMBOL $3E39 VIA_t1_cnt_hi
COMMENT_LINE $3E3B nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E3B wait 16 cycles
COMMENT $3E3F wait 16 cycles
COMMENT $3E43 wait 6 cycles
COMMENT $3E45 wait 2 cycles
COMMENT $3E46 wait 2 cycles
COMMENT $3E47 wait 3 cycles
COMMENT $3E49 wait 3 cycles
COMMENT $3E4B wait 2 cycles
COMMENT $3E4C wait 2 cycles
FORCE_SYMBOL $3E4D VIA_t1_cnt_hi
COMMENT_LINE $3E4F nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E4F wait 16 cycles
COMMENT $3E53 wait 16 cycles
COMMENT $3E57 wait 6 cycles
COMMENT $3E59 wait 2 cycles
COMMENT $3E5A wait 2 cycles
COMMENT $3E5B wait 3 cycles
COMMENT $3E5D wait 3 cycles
COMMENT $3E5F wait 2 cycles
COMMENT $3E60 wait 2 cycles
FORCE_SYMBOL $3E61 VIA_t1_cnt_hi
COMMENT_LINE $3E63 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E63 wait 16 cycles
COMMENT $3E67 wait 16 cycles
COMMENT $3E6B wait 6 cycles
COMMENT $3E6D wait 2 cycles
COMMENT $3E6E wait 2 cycles
COMMENT $3E71 4
FORCE_SYMBOL $3E71 VIA_port_b
COMMENT $3E73 4
FORCE_SYMBOL $3E73 VIA_port_a
COMMENT $3E75 4
COMMENT $3E77 5
FORCE_SYMBOL $3E77 VIA_port_b
FORCE_SYMBOL $3E79 VIA_t1_cnt_hi
COMMENT_LINE $3E7B nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E7B wait 16 cycles
COMMENT $3E7F wait 16 cycles
COMMENT $3E83 wait 6 cycles
COMMENT $3E85 wait 2 cycles
COMMENT $3E86 wait 2 cycles
COMMENT $3E89 4
FORCE_SYMBOL $3E89 VIA_port_b
COMMENT $3E8B 4
FORCE_SYMBOL $3E8B VIA_port_a
COMMENT $3E8D 4
COMMENT $3E8F 5
FORCE_SYMBOL $3E8F VIA_port_b
FORCE_SYMBOL $3E91 VIA_t1_cnt_hi
COMMENT_LINE $3E93 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3E93 wait 16 cycles
COMMENT $3E97 wait 16 cycles
COMMENT $3E9B wait 6 cycles
COMMENT $3E9D wait 2 cycles
COMMENT $3E9E wait 2 cycles
FORCE_SYMBOL $3EA3 VIA_t1_cnt_hi
COMMENT_LINE $3EA5 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3EA5 wait 16 cycles
COMMENT $3EA9 wait 16 cycles
COMMENT $3EAD wait 6 cycles
COMMENT $3EAF wait 2 cycles
COMMENT $3EB0 wait 2 cycles
COMMENT $3EB3 4
FORCE_SYMBOL $3EB3 VIA_port_b
COMMENT $3EB5 4
FORCE_SYMBOL $3EB5 VIA_port_a
COMMENT $3EB7 2
FORCE_SYMBOL $3EB7 SHITREG_POKE_VALUE
COMMENT $3EB9 4
FORCE_SYMBOL $3EB9 VIA_shift_reg
COMMENT $3EBB 5
FORCE_SYMBOL $3EBB VIA_port_b
COMMENT $3EBD 4
FORCE_SYMBOL $3EBD VIA_t1_cnt_hi
COMMENT_LINE $3EBF nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3EBF wait 16 cycles
COMMENT $3EC3 wait 16 cycles
COMMENT $3EC7 wait 6 cycles
COMMENT $3EC9 wait 2 cycles
COMMENT $3ECA wait 2 cycles
COMMENT $3ECD 4
FORCE_SYMBOL $3ECD VIA_port_b
COMMENT $3ECF 4
FORCE_SYMBOL $3ECF VIA_port_a
COMMENT $3ED1 4
COMMENT $3ED3 5
FORCE_SYMBOL $3ED3 VIA_port_b
FORCE_SYMBOL $3ED5 VIA_t1_cnt_hi
COMMENT_LINE $3ED7 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3ED7 wait 16 cycles
COMMENT $3EDB wait 16 cycles
COMMENT $3EDF wait 6 cycles
COMMENT $3EE1 wait 2 cycles
COMMENT $3EE2 wait 2 cycles
COMMENT $3EE5 4
FORCE_SYMBOL $3EE5 VIA_port_b
COMMENT $3EE7 4
FORCE_SYMBOL $3EE7 VIA_port_a
FORCE_NO_SYMBOL $3EE9
FORCE_SYMBOL $3EEB VIA_shift_reg
COMMENT $3EED 5
FORCE_SYMBOL $3EED VIA_port_b
FORCE_SYMBOL $3EEF VIA_t1_cnt_hi
COMMENT_LINE $3EF1 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3EF1 wait 16 cycles
COMMENT $3EF5 wait 16 cycles
COMMENT $3EF9 wait 6 cycles
COMMENT $3EFB wait 2 cycles
COMMENT $3EFC wait 2 cycles
COMMENT $3EFF 4
FORCE_SYMBOL $3EFF VIA_port_b
COMMENT $3F01 4
FORCE_SYMBOL $3F01 VIA_port_a
FORCE_NO_SYMBOL $3F03
COMMENT $3F05 5
FORCE_SYMBOL $3F05 VIA_port_b
FORCE_SYMBOL $3F07 VIA_t1_cnt_hi
FORCE_SYMBOL $3F09 VIA_shift_reg
COMMENT $3F0B reduced by ldu ,u - 5 cycles
COMMENT_LINE $3F0B nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $3F0B wait 16 cycles
COMMENT $3F0F wait 16 cycles
COMMENT $3F13 wait 3 cycles
COMMENT $3F15 wait 2 cycles
COMMENT $3F18 4
FORCE_SYMBOL $3F18 VIA_port_b
COMMENT $3F1A 4
FORCE_SYMBOL $3F1A VIA_port_a
FORCE_NO_SYMBOL $3F1C
FORCE_SYMBOL $3F1E VIA_shift_reg
COMMENT $3F20 5
FORCE_SYMBOL $3F20 VIA_port_b
FORCE_SYMBOL $3F22 VIA_t1_cnt_hi
COMMENT_LINE $3F24 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3F24 wait 16 cycles
COMMENT $3F28 wait 16 cycles
COMMENT $3F2C wait 6 cycles
COMMENT $3F2E wait 2 cycles
COMMENT $3F2F wait 2 cycles
COMMENT $3F32 4
FORCE_SYMBOL $3F32 VIA_port_b
COMMENT $3F34 4
FORCE_SYMBOL $3F34 VIA_port_a
COMMENT $3F36 2
FORCE_SYMBOL $3F36 SHITREG_POKE_VALUE
COMMENT $3F38 4
FORCE_SYMBOL $3F38 VIA_shift_reg
COMMENT $3F3A 5
FORCE_SYMBOL $3F3A VIA_port_b
COMMENT $3F3C 4
FORCE_SYMBOL $3F3C VIA_t1_cnt_hi
COMMENT_LINE $3F3E nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3F3E wait 16 cycles
COMMENT $3F42 wait 16 cycles
COMMENT $3F46 wait 6 cycles
COMMENT $3F48 wait 2 cycles
COMMENT $3F49 wait 2 cycles
FORCE_SYMBOL $3F4E VIA_t1_cnt_hi
COMMENT_LINE $3F50 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3F50 wait 16 cycles
COMMENT $3F54 wait 16 cycles
COMMENT $3F58 wait 6 cycles
COMMENT $3F5A wait 2 cycles
COMMENT $3F5B wait 2 cycles
COMMENT $3F5E wait 3 cycles
COMMENT $3F60 wait 2 cycles
COMMENT $3F61 wait 2 cycles
FORCE_SYMBOL $3F62 VIA_t1_cnt_hi
COMMENT_LINE $3F64 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3F64 wait 16 cycles
COMMENT $3F68 wait 16 cycles
COMMENT $3F6C wait 6 cycles
COMMENT $3F6E wait 2 cycles
COMMENT $3F6F wait 2 cycles
COMMENT $3F70 wait 3 cycles
COMMENT $3F72 wait 3 cycles
COMMENT $3F74 wait 2 cycles
COMMENT $3F75 wait 2 cycles
FORCE_SYMBOL $3F76 VIA_t1_cnt_hi
COMMENT_LINE $3F78 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3F78 wait 16 cycles
COMMENT $3F7C wait 16 cycles
COMMENT $3F80 wait 6 cycles
COMMENT $3F82 wait 2 cycles
COMMENT $3F83 wait 2 cycles
COMMENT $3F86 4
FORCE_SYMBOL $3F86 VIA_port_b
COMMENT $3F88 4
FORCE_SYMBOL $3F88 VIA_port_a
FORCE_NO_SYMBOL $3F8A
FORCE_SYMBOL $3F8C VIA_shift_reg
COMMENT $3F8E 5
FORCE_SYMBOL $3F8E VIA_port_b
FORCE_SYMBOL $3F90 VIA_t1_cnt_hi
COMMENT_LINE $3F92 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3F92 wait 16 cycles
COMMENT $3F96 wait 16 cycles
COMMENT $3F9A wait 6 cycles
COMMENT $3F9C wait 2 cycles
COMMENT $3F9D wait 2 cycles
COMMENT $3FA0 4
FORCE_SYMBOL $3FA0 VIA_port_b
COMMENT $3FA2 4
FORCE_SYMBOL $3FA2 VIA_port_a
FORCE_NO_SYMBOL $3FA4
FORCE_SYMBOL $3FA6 VIA_shift_reg
COMMENT $3FA8 5
FORCE_SYMBOL $3FA8 VIA_port_b
FORCE_SYMBOL $3FAA VIA_t1_cnt_hi
COMMENT_LINE $3FAC nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3FAC wait 16 cycles
COMMENT $3FB0 wait 16 cycles
COMMENT $3FB4 wait 6 cycles
COMMENT $3FB6 wait 2 cycles
COMMENT $3FB7 wait 2 cycles
COMMENT $3FBA 4
FORCE_SYMBOL $3FBA VIA_port_b
COMMENT $3FBC 4
FORCE_SYMBOL $3FBC VIA_port_a
FORCE_NO_SYMBOL $3FBE
COMMENT $3FC0 5
FORCE_SYMBOL $3FC0 VIA_port_b
FORCE_SYMBOL $3FC2 VIA_t1_cnt_hi
FORCE_SYMBOL $3FC4 VIA_shift_reg
COMMENT_LINE $3FC6 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3FC6 wait 16 cycles
COMMENT $3FCA wait 16 cycles
COMMENT $3FCE wait 6 cycles
COMMENT $3FD0 wait 2 cycles
COMMENT $3FD1 wait 2 cycles
FORCE_SYMBOL $3FD6 VIA_t1_cnt_hi
COMMENT $3FD8 reduced by ldu ,u - 5 cycles
COMMENT_LINE $3FD8 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3FD8 wait 16 cycles
COMMENT $3FDC wait 16 cycles
COMMENT $3FE0 wait 6 cycles
COMMENT $3FE2 wait 2 cycles
COMMENT $3FE3 wait 2 cycles
FORCE_NO_SYMBOL $3FE6
FORCE_SYMBOL $3FE8 VIA_shift_reg
COMMENT $3FEA 5
FORCE_SYMBOL $3FEA VIA_port_b
FORCE_SYMBOL $3FEC VIA_t1_cnt_hi
COMMENT_LINE $3FEE nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $3FEE wait 16 cycles
COMMENT $3FF2 wait 16 cycles
COMMENT $3FF6 wait 6 cycles
COMMENT $3FF8 wait 2 cycles
COMMENT $3FF9 wait 2 cycles
FORCE_NO_SYMBOL $3FFC
COMMENT $3FFE 5
FORCE_SYMBOL $3FFE VIA_port_b
FORCE_SYMBOL $4000 VIA_t1_cnt_hi
FORCE_SYMBOL $4002 VIA_shift_reg
COMMENT $4004 reduced by ldu ,u - 5 cycles
COMMENT_LINE $4004 nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $4004 wait 16 cycles
COMMENT $4008 wait 16 cycles
COMMENT $400C wait 3 cycles
COMMENT $400E wait 2 cycles
COMMENT_LINE $4011 assuming b = 1
COMMENT $4011 4
FORCE_SYMBOL $4011 VIA_shift_reg
COMMENT $4013 5
FORCE_SYMBOL $4013 VIA_port_b
COMMENT $4015 4
FORCE_SYMBOL $4015 VIA_t1_cnt_hi
COMMENT_LINE $4017 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $4017 wait 16 cycles
COMMENT $401B wait 16 cycles
COMMENT $401F wait 6 cycles
COMMENT $4021 wait 2 cycles
COMMENT $4022 wait 2 cycles
COMMENT_LINE $4025 assume b contains SHIFT
FORCE_SYMBOL $4025 VIA_shift_reg
FORCE_SYMBOL $4027 VIA_t1_cnt_hi
COMMENT_LINE $4029 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $4029 wait 16 cycles
COMMENT $402D wait 16 cycles
COMMENT $4031 wait 6 cycles
COMMENT $4033 wait 2 cycles
COMMENT $4034 wait 2 cycles
COMMENT_LINE $4037 ldb      #SHITREG_POKE_VALUE          ; 2
COMMENT $4037 4
FORCE_SYMBOL $4037 VIA_shift_reg
COMMENT $4039 5
FORCE_SYMBOL $4039 VIA_port_b
COMMENT $403B 4
FORCE_SYMBOL $403B VIA_t1_cnt_hi
COMMENT $403D reduced by ldu ,u - 5 cycles
COMMENT_LINE $403D nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $403D wait 16 cycles
COMMENT $4041 wait 16 cycles
COMMENT $4045 wait 3 cycles
COMMENT $4047 wait 2 cycles
FORCE_NO_SYMBOL $4048
COMMENT $404C 4
FORCE_SYMBOL $404C VIA_port_b
COMMENT $404E 4
FORCE_SYMBOL $404E VIA_port_a
COMMENT $4050 2
FORCE_SYMBOL $4050 SHITREG_POKE_VALUE
COMMENT $4052 4
FORCE_SYMBOL $4052 VIA_shift_reg
COMMENT $4054 5
FORCE_SYMBOL $4054 VIA_port_b
COMMENT $4056 4
FORCE_SYMBOL $4056 VIA_t1_cnt_hi
COMMENT_LINE $4058 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $4058 wait 16 cycles
COMMENT $405C wait 16 cycles
COMMENT $4060 wait 6 cycles
COMMENT $4062 wait 2 cycles
COMMENT $4063 wait 2 cycles
COMMENT $4066 4
FORCE_SYMBOL $4066 VIA_port_b
COMMENT $4068 4
FORCE_SYMBOL $4068 VIA_port_a
COMMENT $406A 2
FORCE_SYMBOL $406A SHITREG_POKE_VALUE
COMMENT $406C 4
FORCE_SYMBOL $406C VIA_shift_reg
COMMENT $406E 5
FORCE_SYMBOL $406E VIA_port_b
COMMENT $4070 4
FORCE_SYMBOL $4070 VIA_t1_cnt_hi
COMMENT $4072 reduced by ldu ,u - 5 cycles
COMMENT_LINE $4072 nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $4072 wait 16 cycles
COMMENT $4076 wait 16 cycles
COMMENT $407A wait 3 cycles
COMMENT $407C wait 2 cycles
FORCE_NO_SYMBOL $407D
COMMENT $4081 4
FORCE_SYMBOL $4081 VIA_port_b
COMMENT $4083 4
FORCE_SYMBOL $4083 VIA_port_a
FORCE_NO_SYMBOL $4085
COMMENT $4087 4 - ASSUMING SHITREG_POKE_VALUE = 1
FORCE_SYMBOL $4087 VIA_shift_reg
FORCE_SYMBOL $4089 VIA_port_b
FORCE_SYMBOL $408B VIA_t1_cnt_hi
COMMENT $408D reduced by ldu ,u - 5 cycles
COMMENT_LINE $408D nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $408D wait 16 cycles
COMMENT $4091 wait 16 cycles
COMMENT $4095 wait 3 cycles
COMMENT $4097 wait 2 cycles
FORCE_NO_SYMBOL $4098
COMMENT $409C 4
FORCE_SYMBOL $409C VIA_port_b
COMMENT $409E 4
FORCE_SYMBOL $409E VIA_port_a
FORCE_NO_SYMBOL $40A0
COMMENT $40A2 4 - ASSUMING SHITREG_POKE_VALUE = 1
FORCE_SYMBOL $40A2 VIA_shift_reg
FORCE_SYMBOL $40A4 VIA_port_b
FORCE_SYMBOL $40A6 VIA_t1_cnt_hi
COMMENT_LINE $40A8 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $40A8 wait 16 cycles
COMMENT $40AC wait 16 cycles
COMMENT $40B0 wait 6 cycles
COMMENT $40B2 wait 2 cycles
COMMENT $40B3 wait 2 cycles
COMMENT $40B6 4
FORCE_SYMBOL $40B6 VIA_port_b
COMMENT $40B8 4
FORCE_SYMBOL $40B8 VIA_port_a
FORCE_SYMBOL $40BB VIA_port_b
FORCE_SYMBOL $40BD VIA_t1_cnt_hi
COMMENT $40BF 4
FORCE_SYMBOL $40BF VIA_shift_reg
COMMENT_LINE $40C1 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $40C1 wait 16 cycles
COMMENT $40C5 wait 16 cycles
COMMENT $40C9 wait 6 cycles
COMMENT $40CB wait 2 cycles
COMMENT $40CC wait 2 cycles
FORCE_SYMBOL $40CF VIA_t1_cnt_hi
FORCE_SYMBOL $40D1 VIA_shift_reg
COMMENT_LINE $40D3 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $40D3 wait 16 cycles
COMMENT $40D7 wait 16 cycles
COMMENT $40DB wait 6 cycles
COMMENT $40DD wait 2 cycles
COMMENT $40DE wait 2 cycles
COMMENT $40E1 4
FORCE_SYMBOL $40E1 VIA_port_b
COMMENT $40E3 4
FORCE_SYMBOL $40E3 VIA_port_a
COMMENT $40E5 wait 2 cycles
FORCE_SYMBOL $40E6 VIA_port_b
FORCE_SYMBOL $40E8 VIA_t1_cnt_hi
COMMENT $40EA 4
FORCE_SYMBOL $40EA VIA_shift_reg
COMMENT $40EC reduced by ldu ,u - 5 cycles
COMMENT_LINE $40EC nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $40EC wait 16 cycles
COMMENT $40F0 wait 16 cycles
COMMENT $40F4 wait 3 cycles
COMMENT $40F6 wait 2 cycles
FORCE_NO_SYMBOL $40F7
COMMENT $40FB 4
FORCE_SYMBOL $40FB VIA_port_b
FORCE_NO_SYMBOL $40FD
FORCE_SYMBOL $40FF VIA_shift_reg
COMMENT $4101 5
FORCE_SYMBOL $4101 VIA_port_b
FORCE_SYMBOL $4103 VIA_t1_cnt_hi
COMMENT $4105 reduced by ldu ,u - 5 cycles
COMMENT_LINE $4105 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $4105 wait 16 cycles
COMMENT $4109 wait 16 cycles
COMMENT $410D wait 6 cycles
COMMENT $410F wait 2 cycles
COMMENT $4110 wait 2 cycles
COMMENT $4113 4
FORCE_SYMBOL $4113 VIA_port_b
FORCE_NO_SYMBOL $4115
COMMENT $4117 5
FORCE_SYMBOL $4117 VIA_port_b
FORCE_SYMBOL $4119 VIA_t1_cnt_hi
FORCE_SYMBOL $411B VIA_shift_reg
COMMENT $411D reduced by ldu ,u - 5 cycles
COMMENT_LINE $411D nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $411D wait 16 cycles
COMMENT $4121 wait 16 cycles
COMMENT $4125 wait 3 cycles
COMMENT $4127 wait 2 cycles
COMMENT $412A 4
FORCE_SYMBOL $412A VIA_port_b
FORCE_SYMBOL $412C SHITREG_POKE_VALUE
COMMENT $412E 4
FORCE_SYMBOL $412E VIA_shift_reg
COMMENT $4130 5
FORCE_SYMBOL $4130 VIA_port_b
FORCE_SYMBOL $4132 VIA_t1_cnt_hi
COMMENT_LINE $4134 nop      (VB_SPRITE_SCALE50-8)/2
COMMENT $4134 wait 16 cycles
COMMENT $4138 wait 16 cycles
COMMENT $413C wait 6 cycles
COMMENT $413E wait 2 cycles
COMMENT $413F wait 2 cycles
COMMENT $4142 4
FORCE_SYMBOL $4142 VIA_port_b
FORCE_SYMBOL $4144 SHITREG_POKE_VALUE
COMMENT $4146 4
FORCE_SYMBOL $4146 VIA_shift_reg
COMMENT $4148 5
FORCE_SYMBOL $4148 VIA_port_b
FORCE_SYMBOL $414A VIA_t1_cnt_hi
COMMENT $414C reduced by ldu ,u - 5 cycles
COMMENT_LINE $414C nop      (VB_SPRITE_SCALE50-8-5)/2
COMMENT $414C wait 16 cycles
COMMENT $4150 wait 16 cycles
COMMENT $4154 wait 3 cycles
COMMENT $4156 wait 2 cycles
FORCE_NO_SYMBOL $4157
FORCE_SYMBOL $415B VIA_int_flags
FORCE_SYMBOL $415F VIA_shift_reg
FORCE_SYMBOL $4161 gameScale
FORCE_NO_SYMBOL $4164
COMMENT $4166 /BLANK low and /ZERO low
FORCE_SYMBOL $4166 VIA_cntl
FORCE_SYMBOL $4168 VIA_t1_cnt_lo
COMMENT_LINE $416A and ensures integrators are clean (good positioning!)
COMMENT_LINE $416A ldd      #0
FORCE_SYMBOL $416A VIA_port_b
COMMENT_LINE $416D // TODO CHECK WITH SHIELD + CO
COMMENT_LINE $416D SET_Y_INT
COMMENT_LINE $416D Y_DELAY_HALF                          ; 4
COMMENT_LINE $416D ldd      #$40E0
COMMENT_LINE $416D stx      <VIA_port_b                  ; 5
COMMENT_LINE $416D clr      <VIA_t1_cnt_hi
COMMENT_LINE $416D ADD_NOPS
FORCE_SYMBOL $416D VIA_int_flags
FORCE_SYMBOL $4171 VIA_shift_reg
FORCE_NO_SYMBOL $4176
FORCE_SYMBOL $4178 VIA_int_flags
COMMENT_LINE $417D todo
COMMENT_LINE $417D last draw could contain $F in A
COMMENT_LINE $417D than load not needed - attention
COMMENT_LINE $417D when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $417D also in X could be some sensible value in X for one of the other
COMMENT_LINE $417D ldb      #$f0
FORCE_SYMBOL $417E VIA_shift_reg
FORCE_SYMBOL $4180 gameScale
FORCE_SYMBOL $4183 VIA_t1_cnt_lo
COMMENT_LINE $4185 extended on purpose to gain one cycle of time
COMMENT_LINE $4185 to reset to
COMMENT_LINE $4185 a) swithc light off before zeroing
COMMENT_LINE $4185 b) zero
FORCE_NO_SYMBOL $4185
COMMENT $4187 /BLANK low and /ZERO low
FORCE_SYMBOL $4187 VIA_cntl
FORCE_SYMBOL $418A VIA_port_b
COMMENT_LINE $418D nop 10
COMMENT $418D (D = y,x, pc = next object)
FORCE_NO_SYMBOL $418F
FORCE_SYMBOL $4191 VIA_cntl
FORCE_NO_SYMBOL $4193
FORCE_SYMBOL $4196 VIA_port_b
FORCE_SYMBOL $4198 VIA_port_b
FORCE_SYMBOL $419A calibrationValue50
FORCE_SYMBOL $419D additionalFlags
FORCE_NO_SYMBOL $41A0
FORCE_NO_SYMBOL $41A4
FORCE_SYMBOL $41A6 VIA_port_b
COMMENT $41A8 2 cycles
FORCE_NO_SYMBOL $41A8
FORCE_SYMBOL $41AB VIA_port_a
FORCE_SYMBOL $41AD VIA_port_b
FORCE_NO_SYMBOL $41B0
FORCE_SYMBOL $41B2 VIA_port_b
COMMENT $41B4 2 cycles
FORCE_NO_SYMBOL $41B4
FORCE_SYMBOL $41B7 VIA_port_a
FORCE_SYMBOL $41BB VIA_port_b
COMMENT $41D0 y was $00, now SHIFT
COMMENT $41E4 y was $00, now SHIFT
COMMENT $41F8 y was $00, now SHIFT
COMMENT $4221 y was $01, now 0
COMMENT $424A y is $00
COMMENT $4266 y was $00, now SHIFT
COMMENT $427A y was $00, now SHIFT
COMMENT $428E y was $00, now SHIFT
COMMENT $42D8 y is $00
COMMENT $4403 y was $00, now SHIFT
COMMENT $44D4 list of all single vectorlists in this
COMMENT $458A list of all single vectorlists in this
COMMENT $45B2 y was $00, now 0
COMMENT $45DF y was $00, now 0
COMMENT $460C y was $00, now 0
COMMENT $4639 y was $00, now 0
COMMENT $4648 list of all single vectorlists in this
COMMENT $4666 y was $00, now 0
COMMENT $469D y was $00, now 0
COMMENT $46CA y was $00, now 0
COMMENT $46D4 y is $00
COMMENT $46FC y was $00, now 0
COMMENT $470B list of all single vectorlists in this
COMMENT $475C y is $01
COMMENT $47C1 list of all single vectorlists in this
COMMENT_LINE $4877 queen as BigBug
COMMENT $4877 not used MUST be zero to identify a bug enemy
COMMENT $4879 hp
COMMENT $487C 1+128 ; bullet speed and is missile
COMMENT $487D list of all single vectorlists in this
COMMENT $4AC4 list of all single vectorlists in this
COMMENT $4AF7 y is -$07
COMMENT $4B39 y is $12
COMMENT $4BA9 y is $05
COMMENT $4C67 y was $00, now SHIFT Poke
COMMENT $4CA9 y was $00, now SHIFT Poke
COMMENT $4CEA y was $00, now SHIFT Poke
COMMENT_LINE $4D26 setting y to zero (VIA A) from an old (- value) takes more time!!!
COMMENT_LINE $4D5D setting y to zero (VIA A) from an old (- value) takes more time!!!
COMMENT_LINE $4D90 setting y to zero (VIA A) from an old (- value) takes more time!!!
COMMENT_LINE $4DAB ***************************************************************************
COMMENT_LINE $4DAB DATA SECTION
COMMENT_LINE $4DAB ***************************************************************************
COMMENT $4DAB list of all single vectorlists in this
COMMENT $4E31 y was $09, now 0
COMMENT $4E88 y was $00, now SHIFT Poke
COMMENT $4EB2 y was -$02, now SHIFT Poke
COMMENT $4FA4 list of all single vectorlists in this
COMMENT $52A4 y was $04, now SHIFT
COMMENT $52B6 y was $04, now SHIFT
COMMENT $5358 y is $0F
COMMENT $53A5 y is $07
COMMENT $53B7 y is $07
COMMENT $53F2 y was $0D, now SHIFT
COMMENT $5435 y was -$02, now 0
COMMENT_LINE $545E bank 2
COMMENT_LINE $545E all bonus stuff is in bank 0
COMMENT_LINE $545E dec      X_POS+u_offset1,s            ; preload next user stack
COMMENT $545E preload next user stack
COMMENT $5460 preload next user stack
COMMENT $5464 preload next user stack
COMMENT_LINE $5466 dec      X_POS+u_offset1,s            ; preload next user stack
COMMENT $5466 preload next user stack
COMMENT $546A preload next user stack
COMMENT_LINE $546C inc      X_POS+u_offset1,s            ; preload next user stack
COMMENT $546C preload next user stack
COMMENT $5470 preload next user stack
COMMENT_LINE $5472 inc      X_POS+u_offset1,s            ; preload next user stack
COMMENT $5472 preload next user stack
COMMENT $5476 preload next user stack
COMMENT $5478 preload next user stack
COMMENT $547B Store Y in D/A register
FORCE_SYMBOL $547B VIA_port_a
COMMENT $547D Blank low, zero high?
FORCE_NO_SYMBOL $547D
FORCE_SYMBOL $547F VIA_cntl
COMMENT $5482 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5482 VIA_port_b
COMMENT $5484 y must be set more than xx cycles on some vectrex
COMMENT $5485 Disable mux
FORCE_SYMBOL $5485 VIA_port_b
COMMENT $5487 Store X in D/A register
FORCE_SYMBOL $5487 VIA_port_a
COMMENT $5489 enable timer
FORCE_SYMBOL $5489 VIA_t1_cnt_hi
FORCE_SYMBOL $548B OBJECT_SCALE
FORCE_SYMBOL $548D VIA_t1_cnt_lo
FORCE_SYMBOL $5491 BonusList
COMMENT $5494 in x pointer to current bonus struct
COMMENT $5496 pointer to animation list of bonus
FORCE_NO_SYMBOL $5496
FORCE_SYMBOL $5498 animDelayCounter
COMMENT_LINE $549F check if end of animation (for now always 19 - but that might change -> 0 terminated dw list)
FORCE_NO_SYMBOL $54A1
COMMENT $54A4 current active animation
FORCE_NO_SYMBOL $54AA
FORCE_NO_SYMBOL $54B0
COMMENT $54B3 current active animation (no need to load 0
COMMENT_LINE $54B5 todo change X
COMMENT $54B5 preload next user stack
COMMENT $54B7 preload next user stack
COMMENT $54B9 preload next user stack
FORCE_NO_SYMBOL $54BC
FORCE_SYMBOL $54BE VIA_int_flags
COMMENT_LINE $54C5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $54C5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $54C5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $54C5 new list object to U
COMMENT_LINE $54C5 leaves with flags = to result
COMMENT_LINE $54C5 (positive = not successfull) ROM
COMMENT_LINE $54C5 negative = successfull RAM
COMMENT_LINE $54C5 destroys d, u
FORCE_SYMBOL $54C5 bonuslist_empty_head
FORCE_SYMBOL $54C8 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $54CE set the new empty head
COMMENT $54CE the next in out empty list will be the new
FORCE_SYMBOL $54CE NEXT_BONUS_OBJECT
COMMENT $54D0 head of our empty list
FORCE_SYMBOL $54D0 bonuslist_empty_head
COMMENT_LINE $54D3 load last of current object list
COMMENT_LINE $54D3 the old head is always our next
FORCE_SYMBOL $54D3 bonuslist_objects_head
FORCE_SYMBOL $54D6 NEXT_BONUS_OBJECT
COMMENT_LINE $54D8 newobject is always head
FORCE_SYMBOL $54D8 bonuslist_objects_head
COMMENT $54DB and remember that we created a new object
FORCE_SYMBOL $54DB bonusCount
COMMENT_LINE $54DF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $54DF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $54DF "create" (or rather get) new object
COMMENT $54E1 pointer to new object now in X also
FORCE_NO_SYMBOL $54E1
FORCE_SYMBOL $54E3 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $54E9 bpl spawnBonus_end ; if positve - there is no object left, jump out
COMMENT_LINE $54E9 copy and initialze new enemy
COMMENT_LINE $54E9 used in calb for now
FORCE_SYMBOL $54E9 simpleBonusBehaviour
FORCE_SYMBOL $54EC BEHAVIOUR
COMMENT_LINE $54EF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $54EF Store Y in D/A register
FORCE_SYMBOL $54EF VIA_port_a
COMMENT $54F1 Blank low, zero high?
FORCE_NO_SYMBOL $54F1
FORCE_SYMBOL $54F3 VIA_cntl
COMMENT $54F6 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $54F6 VIA_port_b
COMMENT $54F8 y must be set more than xx cycles on some vectrex
COMMENT $54F9 Disable mux
FORCE_SYMBOL $54F9 VIA_port_b
COMMENT $54FB Store X in D/A register
FORCE_SYMBOL $54FB VIA_port_a
COMMENT $54FD enable timer
FORCE_SYMBOL $54FD VIA_t1_cnt_hi
COMMENT $54FF preload next user stack
FORCE_SYMBOL $5502 OBJECT_SCALE
FORCE_SYMBOL $5504 VIA_t1_cnt_lo
FORCE_SYMBOL $5506 BonusE_Anim_0
FORCE_NO_SYMBOL $5509
FORCE_SYMBOL $550B VIA_int_flags
COMMENT_LINE $5512 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5512 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $5512 Store Y in D/A register
FORCE_SYMBOL $5512 VIA_port_a
COMMENT $5514 Blank low, zero high?
FORCE_NO_SYMBOL $5514
FORCE_SYMBOL $5516 VIA_cntl
COMMENT $5519 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5519 VIA_port_b
COMMENT $551B y must be set more than xx cycles on some vectrex
COMMENT $551C Disable mux
FORCE_SYMBOL $551C VIA_port_b
COMMENT $551E Store X in D/A register
FORCE_SYMBOL $551E VIA_port_a
COMMENT $5520 enable timer
FORCE_SYMBOL $5520 VIA_t1_cnt_hi
COMMENT_LINE $5522 ;;;;;
COMMENT_LINE $5522 colision detection bonus -> player
COMMENT_LINE $5522 in b is still x position, so start with that
COMMENT_LINE $5522 xTest
FORCE_SYMBOL $5522 playerXpos
FORCE_SYMBOL $5528 BONUS_PLAYER_X_RANGE
COMMENT_LINE $552C yTest
FORCE_SYMBOL $552E BONUS_PLAYER_Y_TEST_MIN
FORCE_SYMBOL $5534 OBJECT_SCALE
FORCE_SYMBOL $5536 VIA_t1_cnt_lo
FORCE_SYMBOL $5538 RankMarkerCircle_Anim
COMMENT_LINE $553D check if end of animation (for now always 19 - but that might change -> 0 terminated dw list)
COMMENT $5540 current active animation
COMMENT $5549 current active animation (no need to load 0
COMMENT $554B preload next user stack
FORCE_NO_SYMBOL $554D
FORCE_NO_SYMBOL $5557
COMMENT $555B preload next user stack
FORCE_NO_SYMBOL $555D
FORCE_NO_SYMBOL $5565
COMMENT $5569 preload next user stack
FORCE_NO_SYMBOL $556B
FORCE_SYMBOL $5573 StringOutputBuffer_0
COMMENT $5579 higher stack damage other stack saves :-( ; CBFC ; correct the stack to default address
FORCE_SYMBOL $557F RankList
FORCE_NO_SYMBOL $5584
FORCE_SYMBOL $5586 VIA_int_flags
FORCE_SYMBOL $558A SMVB_drawSmart
FORCE_SYMBOL $558F StringOutputBuffer_0
COMMENT $5593 preload next user stack
COMMENT_LINE $55A5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $55A5 Store Y in D/A register
FORCE_SYMBOL $55A5 VIA_port_a
COMMENT $55A7 Blank low, zero high?
FORCE_NO_SYMBOL $55A7
FORCE_SYMBOL $55A9 VIA_cntl
COMMENT $55AC Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $55AC VIA_port_b
COMMENT $55AE y must be set more than xx cycles on some vectrex
COMMENT $55AF Disable mux
FORCE_SYMBOL $55AF VIA_port_b
COMMENT $55B1 Store X in D/A register
FORCE_SYMBOL $55B1 VIA_port_a
COMMENT $55B3 enable timer
FORCE_SYMBOL $55B3 VIA_t1_cnt_hi
COMMENT_LINE $55B5 ;;;;;
COMMENT_LINE $55B5 colision detection bonus -> player
COMMENT_LINE $55B5 in b is still x position, so start with that
COMMENT_LINE $55B5 xTest
FORCE_SYMBOL $55B5 playerXpos
FORCE_SYMBOL $55BB BONUS_PLAYER_X_RANGE
COMMENT_LINE $55BF yTest
FORCE_SYMBOL $55C1 BONUS_PLAYER_Y_TEST_MIN
FORCE_SYMBOL $55C7 OBJECT_SCALE
FORCE_SYMBOL $55C9 VIA_t1_cnt_lo
FORCE_SYMBOL $55CD BonusList
COMMENT $55D0 in x pointer to current bonus struct
COMMENT $55D2 pointer to animation list of bonus
FORCE_NO_SYMBOL $55D2
FORCE_SYMBOL $55D4 animDelayCounter
COMMENT_LINE $55DB check if end of animation (for now always 19 - but that might change -> 0 terminated dw list)
FORCE_NO_SYMBOL $55DD
COMMENT $55E0 current active animation
FORCE_NO_SYMBOL $55E6
FORCE_NO_SYMBOL $55EC
COMMENT $55EF current active animation (no need to load 0
COMMENT $55F1 preload next user stack
COMMENT $55F7 preload next user stack
COMMENT $5601 preload next user stack
FORCE_NO_SYMBOL $5604
FORCE_SYMBOL $5606 VIA_int_flags
COMMENT_LINE $560D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $560D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 MUST BE USED ONCE ONLY!
COMMENT $0000 EXTRACollectedData
COMMENT $0000 add 20000 points
COMMENT $0000 bank 1 replace
COMMENT $0000 SecretString
COMMENT $0000 bandit
COMMENT $0000 reset EXTRA BONUS counter in case of a fail
COMMENT $0000 letterData
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5661 REPLACE_0_2_voxMoney_varFromIRQ0_10  dw  0 ;voxMoney
COMMENT $5661 voxMoney - just zero NO address, otherwise other vox will just be BROKEN
COMMENT $5677 voxMoney - just zero NO address, otherwise other vox will just be BROKEN
COMMENT $5679 voxMoney - just zero NO address, otherwise other vox will just be BROKEN
COMMENT $567B voxMoney - just zero NO address, otherwise other vox will just be BROKEN
COMMENT $569D voxExtraLife
COMMENT_LINE $56A3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $56A3 REPLACE_1_2_bandit_varFromIRQ1_1312
COMMENT_LINE $56A3 ldx      #0                           ; bandit
COMMENT_LINE $56A3 jmp      jmpBankIRQ1Shift
FORCE_SYMBOL $56A5 voxData
FORCE_SYMBOL $56AC vox_addr
FORCE_SYMBOL $56AF bonusHandleJumper
COMMENT $56B4 voxRankMarker
FORCE_NO_SYMBOL $56B4
FORCE_SYMBOL $56B7 vox_addr
FORCE_SYMBOL $56BC RankHandleJumper
COMMENT_LINE $56C1 here check correct order of RANK
FORCE_SYMBOL $56C1 rankCollected
FORCE_SYMBOL $56C6 secretBonusCounter
FORCE_NO_SYMBOL $56C9
FORCE_SYMBOL $56CB secretBonusCounter
FORCE_SYMBOL $56D0 secretBonusCounter
FORCE_SYMBOL $56D5 secretBonusCounter
FORCE_SYMBOL $56D8 rankCollected
FORCE_SYMBOL $56DB COLLECTED_RANK1
FORCE_SYMBOL $56DD rankCollected
FORCE_SYMBOL $56E0 rankCaughtEnd
COMMENT_LINE $56E3 here check correct order of RANK
FORCE_SYMBOL $56E3 rankCollected
FORCE_NO_SYMBOL $56E6
FORCE_SYMBOL $56EA secretBonusCounter
FORCE_SYMBOL $56EF secretBonusCounter
FORCE_SYMBOL $56F2 rankCollected
FORCE_SYMBOL $56F5 COLLECTED_RANK2
FORCE_SYMBOL $56F7 rankCollected
FORCE_SYMBOL $56FA rankCaughtEnd
COMMENT_LINE $56FD here check correct order of RANK
FORCE_SYMBOL $56FD rankCollected
FORCE_SYMBOL $5704 secretBonusCounter
FORCE_SYMBOL $5709 secretBonusCounter
FORCE_SYMBOL $570C rankCollected
FORCE_SYMBOL $570F COLLECTED_RANK3
FORCE_SYMBOL $5711 rankCollected
FORCE_SYMBOL $5714 rankCaughtEnd
COMMENT_LINE $5717 here check correct order of RANK
FORCE_SYMBOL $5717 rankCollected
FORCE_SYMBOL $571E secretBonusCounter
FORCE_SYMBOL $5723 secretBonusCounter
FORCE_SYMBOL $5726 rankCollected
FORCE_SYMBOL $5729 COLLECTED_RANK4
FORCE_SYMBOL $572B rankCollected
COMMENT_LINE $5730 here check correct order of RANK
FORCE_SYMBOL $5730 rankCollected
FORCE_SYMBOL $5737 secretBonusCounter
FORCE_SYMBOL $573C secretBonusCounter
FORCE_SYMBOL $573F rankCollected
FORCE_SYMBOL $5742 COLLECTED_RANK5
FORCE_SYMBOL $5744 rankCollected
COMMENT_LINE $5749 here check correct order of RANK
FORCE_SYMBOL $5749 rankCollected
FORCE_SYMBOL $5750 secretBonusCounter
FORCE_SYMBOL $5753 SECRET_ORDERED_RANKS
COMMENT $5755 if not gotten in order ->
FORCE_SYMBOL $5757 inGameSecrets
FORCE_SYMBOL $575A SECRET_ORDERED_RANKS
FORCE_SYMBOL $575E inGameSecrets
FORCE_SYMBOL $5761 SECRET_ORDERED_RANKS
FORCE_SYMBOL $5763 inGameSecrets
COMMENT_LINE $5766 do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5766 playSoundFlags
FORCE_NO_SYMBOL $5769
FORCE_SYMBOL $576B BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $576D playSoundFlags
COMMENT $5770 secretChannel1
FORCE_NO_SYMBOL $5770
FORCE_SYMBOL $5773 sfx_pointer_1
COMMENT $5776 secretChannel2
FORCE_NO_SYMBOL $5776
FORCE_SYMBOL $5779 sfx_pointer_2
COMMENT $577C secretChannel3
FORCE_NO_SYMBOL $577C
FORCE_SYMBOL $577F sfx_pointer_3
FORCE_SYMBOL $5782 rankCollected
FORCE_SYMBOL $5785 COLLECTED_RANK6
FORCE_SYMBOL $5787 rankCollected
COMMENT $578A SecretString
FORCE_NO_SYMBOL $578A
FORCE_SYMBOL $578D messagePointer
FORCE_SYMBOL $5793 messageState
FORCE_SYMBOL $5796 removeBonus
FORCE_SYMBOL $5799 secretBonusCounter
FORCE_SYMBOL $579E secretBonusCounter
FORCE_SYMBOL $57A1 rankCollected
FORCE_SYMBOL $57A4 COLLECTED_RANK6
FORCE_SYMBOL $57A6 rankCollected
FORCE_SYMBOL $57AD rankCollected
FORCE_NO_SYMBOL $57B0
FORCE_NO_SYMBOL $57B2
COMMENT $57B6 rankAllString
FORCE_NO_SYMBOL $57B6
COMMENT $57BB rankString
FORCE_NO_SYMBOL $57BB
FORCE_SYMBOL $57BE messagePointer
FORCE_SYMBOL $57C4 messageState
FORCE_SYMBOL $57C7 playSoundFlags
FORCE_NO_SYMBOL $57CA
COMMENT $57CE rankData
FORCE_NO_SYMBOL $57CE
FORCE_SYMBOL $57D1 sfx_pointer_1
FORCE_SYMBOL $57D4 removeBonus
COMMENT_LINE $57D7 go thru all enemy objects that are still "normal" enemies (no shield)
COMMENT_LINE $57D7 and swith their behaviour to "fallDiamondBehaviour"
COMMENT_LINE $57D7 respect "attacker" flag
FORCE_SYMBOL $57D7 lockPurchased
FORCE_SYMBOL $57DA ENEMY_DESTRUCTED_FLAG
COMMENT $57DC in warp, enemy list is not available
FORCE_SYMBOL $57DE enemylist_objects_head
FORCE_SYMBOL $57E1 ENEMY_DONE
COMMENT_LINE $57E7 sort out all enemies which should not be
COMMENT_LINE $57E7 "exploded"
FORCE_SYMBOL $57E7 ALL_PURPOSE
COMMENT $57EA negative is Explosion
FORCE_SYMBOL $57EC BEHAVIOUR
COMMENT $57EE enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $57EE
COMMENT $57F3 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $57F3
COMMENT_LINE $57F8 handle shield enemies
FORCE_SYMBOL $57F8 ENEMY_STRUCT
COMMENT $57FB enemy3Definition
FORCE_NO_SYMBOL $57FB
COMMENT $5800 enemySW3DefinitionShield
FORCE_NO_SYMBOL $5800
COMMENT_LINE $5805 enemy struct not available since it is in BANK 1
COMMENT_LINE $5805 bne nextEnemy
COMMENT_LINE $5805 no change to "explosion"
COMMENT_LINE $5805 check attacker
COMMENT_LINE $5805 ADD_POINTS_ENEMY_DESTROY  - destroys u, don't do it - diamonds collected give points!
FORCE_SYMBOL $5805 bonusHitCount
COMMENT $580A negative means this enemy is an explosion
FORCE_SYMBOL $580A ALL_PURPOSE
FORCE_SYMBOL $580D BEHAVIOUR
COMMENT $580F enemySingleAttackAbsolutBehaviour
FORCE_NO_SYMBOL $580F
COMMENT $5814 enemySingleAttackRelativeBehaviour
FORCE_NO_SYMBOL $5814
FORCE_SYMBOL $5819 attackPatternCount
COMMENT_LINE $581C test if enemy is bug, if so get correct position
COMMENT $581C lastNormalEnemyAddress
FORCE_NO_SYMBOL $581C
COMMENT_LINE $5821 bug enemy - change positions
FORCE_SYMBOL $5821 Y_POS16
FORCE_SYMBOL $5823 X_POS16
FORCE_SYMBOL $5825 Y_POS
COMMENT $5827 fallDiamondBehaviour
FORCE_NO_SYMBOL $5827
FORCE_SYMBOL $582A BEHAVIOUR
FORCE_SYMBOL $582C ANIM_POSITION
FORCE_SYMBOL $582E NEXT_ENEMY_OBJECT
COMMENT $5832 diamonbombString
FORCE_NO_SYMBOL $5832
FORCE_SYMBOL $5835 bonusCaughtEndSound
COMMENT_LINE $5838 go thru all enemy objects that are still "normal" enemies (no shield)
COMMENT_LINE $5838 and swith their behaviour to "fallDiamondBehaviour"
COMMENT_LINE $5838 respect "attacker" flag
FORCE_SYMBOL $5838 lockPurchased
FORCE_SYMBOL $583B ENEMY_DESTRUCTED_FLAG
COMMENT $583D in warp, enemy list is not available
FORCE_SYMBOL $583F enemylist_objects_head
FORCE_SYMBOL $5842 ENEMY_DONE
COMMENT_LINE $5848 sort out all enemies which should not be
COMMENT_LINE $5848 "exploded"
FORCE_SYMBOL $5848 ALL_PURPOSE
COMMENT $584B negative is Explosion
FORCE_SYMBOL $584D BEHAVIOUR
COMMENT $584F enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $584F
COMMENT $5854 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $5854
COMMENT_LINE $5859 handle shield enemies
FORCE_SYMBOL $5859 ENEMY_STRUCT
COMMENT $585C enemy3Definition
FORCE_NO_SYMBOL $585C
COMMENT $5861 enemySW3DefinitionShield
FORCE_NO_SYMBOL $5861
FORCE_SYMBOL $5866 bonusHitCount
COMMENT $586B negative means this enemy is an explosion
FORCE_SYMBOL $586B ALL_PURPOSE
FORCE_SYMBOL $586E BEHAVIOUR
COMMENT $5870 enemySingleAttackAbsolutBehaviour
FORCE_NO_SYMBOL $5870
COMMENT $5875 enemySingleAttackRelativeBehaviour
FORCE_NO_SYMBOL $5875
FORCE_SYMBOL $587A attackPatternCount
COMMENT_LINE $587D test if enemy is bug, if so get correct position
COMMENT $587D lastNormalEnemyAddress
FORCE_NO_SYMBOL $587D
COMMENT_LINE $5882 bug enemy - change positions
FORCE_SYMBOL $5882 Y_POS16
FORCE_SYMBOL $5884 X_POS16
FORCE_SYMBOL $5886 Y_POS
COMMENT $5888 fallCashBehaviour
FORCE_NO_SYMBOL $5888
FORCE_SYMBOL $588B BEHAVIOUR
FORCE_SYMBOL $588D ANIM_POSITION
FORCE_SYMBOL $588F NEXT_ENEMY_OBJECT
COMMENT $5893 cashbombString
FORCE_NO_SYMBOL $5893
FORCE_SYMBOL $5896 bonusCaughtEndSound
FORCE_SYMBOL $5899 bonusTimerLength
COMMENT $589C add five seconds
FORCE_NO_SYMBOL $589C
COMMENT $58A1 maximum timer!
FORCE_NO_SYMBOL $58A1
FORCE_SYMBOL $58A4 bonusTimerLength
COMMENT $58A7 timerString
FORCE_NO_SYMBOL $58A7
FORCE_SYMBOL $58AA bonusCaughtEndSound
FORCE_SYMBOL $58AD playerShotSpeed
FORCE_SYMBOL $58B0 MIN_SHOT_SPEED
FORCE_SYMBOL $58B8 SPEED_DELTA
FORCE_SYMBOL $58BB playerShotSpeed
FORCE_NO_SYMBOL $58BE
FORCE_SYMBOL $58C0 playerShotSpeed
COMMENT $58C6 +10 new since, enemies now start at the bottom
COMMENT $58C9 y wise a fixed compare is used, since y wise all shots are equal
FORCE_SYMBOL $58C9 shotYRadius
COMMENT_LINE $58CC check three in a row are collected
COMMENT_LINE $58CC check fro secret
COMMENT_LINE $58CC check if last bonus was -S
FORCE_SYMBOL $58CC lastCollectedBonus
COMMENT_LINE $58D3 = counter to 1
FORCE_SYMBOL $58D3 secretBonusCounter
COMMENT $58D6 counter to zero
FORCE_NO_SYMBOL $58D6
COMMENT $58D8 increase one
FORCE_SYMBOL $58D9 secretBonusCounter
FORCE_SYMBOL $58DE secretBonusCounter
COMMENT $58E1 counter to zero
FORCE_NO_SYMBOL $58E1
COMMENT $58E3 if old value was two -> than new value will be three -> success!
FORCE_NO_SYMBOL $58E3
COMMENT_LINE $58E7 just increase count by one
FORCE_SYMBOL $58E7 secretBonusCounter
FORCE_SYMBOL $58EC secretBonusCounter
COMMENT $58EF counter to zero
FORCE_NO_SYMBOL $58EF
COMMENT $58F1 reset counter
FORCE_SYMBOL $58F1 secretBonusCounter
COMMENT_LINE $58F4 just store to  discovered secrets!
FORCE_SYMBOL $58F4 inGameSecrets
FORCE_SYMBOL $58F7 SECRET_3_RATE_SUCKERS
FORCE_SYMBOL $58FB inGameSecrets
FORCE_SYMBOL $58FE SECRET_3_RATE_SUCKERS
FORCE_SYMBOL $5900 inGameSecrets
FORCE_SYMBOL $5903 shopAllowFlags
FORCE_SYMBOL $5906 SHOP_SUPER_BOMB_L
FORCE_SYMBOL $5908 shopAllowFlags
COMMENT_LINE $590B do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $590B playSoundFlags
FORCE_NO_SYMBOL $590E
FORCE_SYMBOL $5910 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5912 playSoundFlags
COMMENT $5915 secretChannel1
FORCE_NO_SYMBOL $5915
FORCE_SYMBOL $5918 sfx_pointer_1
COMMENT $591B secretChannel2
FORCE_NO_SYMBOL $591B
FORCE_SYMBOL $591E sfx_pointer_2
COMMENT $5921 secretChannel3
FORCE_NO_SYMBOL $5921
FORCE_SYMBOL $5924 sfx_pointer_3
COMMENT $5927 SecretString
FORCE_NO_SYMBOL $5927
FORCE_SYMBOL $592A bonusCaughtEnd
COMMENT_LINE $592D check if 3 -rates are collected, if so addsuperbomb
FORCE_SYMBOL $592D secretBonusCounter
FORCE_NO_SYMBOL $5930
COMMENT $5937 delet old counter otherwise we or it with old value
FORCE_SYMBOL $5937 secretBonusCounter
FORCE_NO_SYMBOL $593A
FORCE_SYMBOL $593C secretBonusCounter
FORCE_SYMBOL $593F secretBonusCounter
FORCE_SYMBOL $5942 secretBonusCounter
FORCE_NO_SYMBOL $5945
FORCE_NO_SYMBOL $5947
FORCE_SYMBOL $594D smartBombsAvailable
COMMENT_LINE $5950 reset only "3" counter for bomb add, not any other counter
COMMENT_LINE $5950 sooo... reload bonus counter
FORCE_SYMBOL $5950 secretBonusCounter
FORCE_NO_SYMBOL $5953
FORCE_SYMBOL $5955 secretBonusCounter
FORCE_SYMBOL $5958 inGameSecrets
FORCE_SYMBOL $595B SECRET_RATE_SUCKERS
FORCE_SYMBOL $595F inGameSecrets
FORCE_SYMBOL $5962 SECRET_RATE_SUCKERS
FORCE_SYMBOL $5964 inGameSecrets
COMMENT_LINE $5967 do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5967 playSoundFlags
FORCE_NO_SYMBOL $596A
FORCE_SYMBOL $596C BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $596E playSoundFlags
COMMENT $5971 secretChannel1
FORCE_NO_SYMBOL $5971
FORCE_SYMBOL $5974 sfx_pointer_1
COMMENT $5977 secretChannel2
FORCE_NO_SYMBOL $5977
FORCE_SYMBOL $597A sfx_pointer_2
COMMENT $597D secretChannel3
FORCE_NO_SYMBOL $597D
FORCE_SYMBOL $5980 sfx_pointer_3
COMMENT $5983 SecretString
FORCE_NO_SYMBOL $5983
FORCE_SYMBOL $5986 bonusCaughtEnd
COMMENT $5989 smartBombAdded
FORCE_NO_SYMBOL $5989
FORCE_SYMBOL $598C malusCaughtEnd
FORCE_SYMBOL $598F playerCashW
FORCE_SYMBOL $5992 playerCashW
FORCE_SYMBOL $5995 playerCashW
FORCE_SYMBOL $5998 playerCashW
FORCE_SYMBOL $599B playerCashW
FORCE_SYMBOL $59A0 diverseFlags
FORCE_SYMBOL $59A3 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $59A5 diverseFlags
COMMENT $59A8 cashDouble
FORCE_NO_SYMBOL $59A8
FORCE_SYMBOL $59AB bonusCaughtEndSound
FORCE_SYMBOL $59AE playerLives
COMMENT $59B8 not more than 9 lives!
FORCE_SYMBOL $59B8 playerLives
COMMENT $59BB extraLifeString
FORCE_NO_SYMBOL $59BB
FORCE_SYMBOL $59BE bonusCaughtEndSound
FORCE_SYMBOL $59C1 playerCashW
FORCE_NO_SYMBOL $59C4
FORCE_SYMBOL $59C7 playerCashW
FORCE_SYMBOL $59CA playerCashW
FORCE_SYMBOL $59CD playerCashW
FORCE_SYMBOL $59D2 diverseFlags
FORCE_SYMBOL $59D5 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $59D7 diverseFlags
FORCE_SYMBOL $59DA playerCashW
FORCE_SYMBOL $59DD secretBonusCounter
COMMENT $59E0 enable drunken master
FORCE_NO_SYMBOL $59E0
FORCE_SYMBOL $59E4 DRUNKEN_TIME
FORCE_SYMBOL $59E6 drunkTimer
FORCE_SYMBOL $59E9 lastCollectedBonus
COMMENT_LINE $59F0 = counter to 1
FORCE_SYMBOL $59F0 secretBonusCounter
COMMENT $59F3 counter to zero
FORCE_NO_SYMBOL $59F3
COMMENT $59F5 increase one
FORCE_SYMBOL $59F6 secretBonusCounter
FORCE_SYMBOL $59FB secretBonusCounter
COMMENT $59FE counter to zero
FORCE_NO_SYMBOL $59FE
COMMENT $5A00 if old value was two -> than new value will be three -> success!
FORCE_NO_SYMBOL $5A00
COMMENT_LINE $5A04 just increase count by one
FORCE_SYMBOL $5A04 secretBonusCounter
FORCE_SYMBOL $5A09 secretBonusCounter
COMMENT $5A0C counter to zero
FORCE_NO_SYMBOL $5A0C
COMMENT $5A0E enable drunken master
FORCE_NO_SYMBOL $5A0E
COMMENT $5A10 reset counter
FORCE_SYMBOL $5A10 secretBonusCounter
COMMENT $5A13 DrunkenMasterString
FORCE_NO_SYMBOL $5A13
FORCE_SYMBOL $5A16 bonusCaughtEndSound
COMMENT $5A19 drunkenString
FORCE_NO_SYMBOL $5A19
FORCE_SYMBOL $5A1C bonusCaughtEndSound
COMMENT $5A1F autofire is "1"
FORCE_SYMBOL $5A1F diverseFlags
FORCE_NO_SYMBOL $5A22
COMMENT $5A24 autofire is "1"
FORCE_SYMBOL $5A24 diverseFlags
COMMENT $5A27 autofireString
FORCE_NO_SYMBOL $5A27
FORCE_SYMBOL $5A2A bonusCaughtEndSound
FORCE_SYMBOL $5A2D bulletDamageAdjust
FORCE_SYMBOL $5A30 bulletDamageAdjust
COMMENT $5A33 I "THINK" 15 is max - not sure though - lol
FORCE_SYMBOL $5A33 MAX_BULLET_POWER_ADJUST
FORCE_SYMBOL $5A37 MAX_BULLET_POWER_ADJUST
FORCE_SYMBOL $5A39 bulletDamageAdjust
COMMENT_LINE $5A3C ADJUST_SHOT_DAMAGE
FORCE_SYMBOL $5A3C REPLACE_1_2_damagePlus_varFrom1_1
FORCE_SYMBOL $5A40 adjustAndJumpY
COMMENT $5A43 damagePlus Double
FORCE_NO_SYMBOL $5A43
FORCE_SYMBOL $5A46 bonusCaughtEndSound
COMMENT $5A49 slowerGunSpeed
FORCE_NO_SYMBOL $5A49
FORCE_SYMBOL $5A4C malusCaughtEnd
FORCE_SYMBOL $5A4F bonusTimerLength
FORCE_SYMBOL $5A52 multTimer
FORCE_SYMBOL $5A55 multiplyer
FORCE_SYMBOL $5A58 NON_MULTIPLYER_BITS
FORCE_SYMBOL $5A5A MULTIPLY_5_OR
COMMENT_LINE $5A5C lda      #5
FORCE_SYMBOL $5A5C multiplyer
FORCE_NO_SYMBOL $5A65
COMMENT $5A6A multi5String
FORCE_NO_SYMBOL $5A6A
FORCE_SYMBOL $5A6D bonusCaughtEndSound
FORCE_SYMBOL $5A70 bonusTimerLength
FORCE_SYMBOL $5A73 multTimer
COMMENT_LINE $5A76 lda      #2
FORCE_SYMBOL $5A76 multiplyer
FORCE_SYMBOL $5A79 NON_MULTIPLYER_BITS
FORCE_SYMBOL $5A7B MULTIPLY_2_OR
FORCE_SYMBOL $5A7D multiplyer
FORCE_NO_SYMBOL $5A86
COMMENT $5A8B multi2String
FORCE_NO_SYMBOL $5A8B
FORCE_SYMBOL $5A8E bonusCaughtEndSound
FORCE_SYMBOL $5A91 playerMaxShotInAir
FORCE_SYMBOL $5A94 MAX_PLAYERSHOT_OBJECTS
FORCE_SYMBOL $5A9A playerMaxShotInAir
COMMENT $5A9D extraBullet
FORCE_NO_SYMBOL $5A9D
FORCE_SYMBOL $5AA0 bonusCaughtEndSound
FORCE_SYMBOL $5AA3 playerSpeed
FORCE_SYMBOL $5AA6 MAX_PLAYER_SPEED
FORCE_SYMBOL $5AAE SPEED_DELTA
FORCE_SYMBOL $5AB1 playerSpeed
COMMENT $5AB4 extraSpeed
FORCE_NO_SYMBOL $5AB4
FORCE_SYMBOL $5AB7 bonusCaughtEndSound
FORCE_SYMBOL $5ABA playerShotSpeed
FORCE_SYMBOL $5ABD MAX_SHOT_SPEED
FORCE_SYMBOL $5AC5 SPEED_DELTA
FORCE_SYMBOL $5AC8 playerShotSpeed
FORCE_NO_SYMBOL $5ACB
FORCE_SYMBOL $5ACD playerShotSpeed
COMMENT $5AD3 +10 new since, enemies now start at the bottom
COMMENT $5AD6 y wise a fixed compare is used, since y wise all shots are equal
FORCE_SYMBOL $5AD6 shotYRadius
COMMENT $5AD9 extraGunSpeed
FORCE_NO_SYMBOL $5AD9
FORCE_SYMBOL $5ADC bonusCaughtEndSound
FORCE_SYMBOL $5ADF playerMaxShotInAir
COMMENT $5AE2 max up to 4 shots
FORCE_SYMBOL $5AE6 playerMaxShotInAir
FORCE_SYMBOL $5AE9 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5AEC
FORCE_SYMBOL $5AF0 downgradeImmunity
FORCE_SYMBOL $5AF3 IMUNITY_BITS
COMMENT_LINE $5AF5 tst      downgradeImmunity
COMMENT_LINE $5AF5 if at least 1 - do not downgrade
FORCE_SYMBOL $5AF7 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5AFA
COMMENT $5AFE while immune -> no biggest loss!
FORCE_SYMBOL $5AFE downgradeImmunity
FORCE_SYMBOL $5B01 IMUNITY_BITS
FORCE_SYMBOL $5B05 inGameSecrets
FORCE_SYMBOL $5B08 BIGGEST_LOSS_FLAG
FORCE_SYMBOL $5B0A inGameSecrets
FORCE_SYMBOL $5B0D playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5B10
FORCE_NO_SYMBOL $5B14
FORCE_SYMBOL $5B16 playerNumberOfBulletsPerShot
FORCE_SYMBOL $5B19 playerAnim
FORCE_SYMBOL $5B1C REPLACE_1_2_extraShot1_varFrom1_1
FORCE_SYMBOL $5B20 adjustAndJumpY
COMMENT_LINE $5B23 ADJUST_SHOT_DAMAGE
COMMENT $5B23 extraShot1
FORCE_NO_SYMBOL $5B23
FORCE_SYMBOL $5B26 bonusCaughtEndSound
FORCE_NO_SYMBOL $5B29
FORCE_SYMBOL $5B2B playerNumberOfBulletsPerShot
FORCE_SYMBOL $5B2E playerAnim
FORCE_SYMBOL $5B31 REPLACE_1_2_extraShot1_varFrom1_2
FORCE_SYMBOL $5B35 adjustAndJumpY
COMMENT_LINE $5B38 ADJUST_SHOT_DAMAGE
COMMENT $5B38 extraShot1
FORCE_NO_SYMBOL $5B38
FORCE_SYMBOL $5B3B downgradeCaughtEndSound
COMMENT $5B3E immunity1String
FORCE_NO_SYMBOL $5B3E
FORCE_SYMBOL $5B41 messagePointer
FORCE_SYMBOL $5B47 messageState
FORCE_SYMBOL $5B4A bonusCaughtEnd2
COMMENT_LINE $5B4D -----------
FORCE_SYMBOL $5B4D playerMaxShotInAir
COMMENT $5B50 max up to 4 shots
FORCE_SYMBOL $5B54 playerMaxShotInAir
FORCE_SYMBOL $5B57 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5B5A
FORCE_SYMBOL $5B5E downgradeImmunity
FORCE_SYMBOL $5B61 IMUNITY_BITS
FORCE_NO_SYMBOL $5B63
FORCE_SYMBOL $5B67 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5B6A
FORCE_NO_SYMBOL $5B6E
FORCE_SYMBOL $5B70 playerNumberOfBulletsPerShot
FORCE_SYMBOL $5B73 playerAnim
COMMENT_LINE $5B76 ADJUST_SHOT_DAMAGE
FORCE_SYMBOL $5B76 REPLACE_1_2_extraShot2_varFrom1_1
FORCE_SYMBOL $5B7A adjustAndJumpY
COMMENT $5B7D extraShot2
FORCE_NO_SYMBOL $5B7D
FORCE_SYMBOL $5B80 downgradeCaughtEndSound
FORCE_NO_SYMBOL $5B83
FORCE_SYMBOL $5B85 playerNumberOfBulletsPerShot
FORCE_SYMBOL $5B88 playerAnim
COMMENT $5B8B extraShot2
FORCE_SYMBOL $5B8B REPLACE_1_2_extraShot2_varFrom1_2
FORCE_SYMBOL $5B8F adjustAndJumpY
COMMENT_LINE $5B92 ADJUST_SHOT_DAMAGE
COMMENT $5B92 extraShot2
FORCE_NO_SYMBOL $5B92
FORCE_SYMBOL $5B95 bonusCaughtEndSound
COMMENT $5B98 immunity2String
FORCE_NO_SYMBOL $5B98
FORCE_SYMBOL $5B9B messagePointer
FORCE_SYMBOL $5BA1 messageState
FORCE_SYMBOL $5BA4 bonusCaughtEnd2
FORCE_SYMBOL $5BA7 isDemoMode
COMMENT $5BAC MineDisplayString
FORCE_NO_SYMBOL $5BAC
FORCE_SYMBOL $5BAF messagePointer
FORCE_SYMBOL $5BB5 messageState
COMMENT $5BB8 startDodger1
FORCE_NO_SYMBOL $5BB8
FORCE_SYMBOL $5BBB jmpBank1X
FORCE_SYMBOL $5BBE playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5BC1
COMMENT_LINE $5BC9 this is a downgrade
FORCE_NO_SYMBOL $5BC9
FORCE_SYMBOL $5BCB playerNumberOfBulletsPerShot
FORCE_SYMBOL $5BCE playerAnim
COMMENT_LINE $5BD1 ADJUST_SHOT_DAMAGE
FORCE_SYMBOL $5BD1 REPLACE_1_2_extraShot3_varFrom1_1
FORCE_SYMBOL $5BD5 adjustAndJumpY
COMMENT $5BD8 extraShot3
FORCE_NO_SYMBOL $5BD8
FORCE_SYMBOL $5BDB downgradeCaughtEndSound
FORCE_NO_SYMBOL $5BDE
FORCE_SYMBOL $5BE0 playerNumberOfBulletsPerShot
FORCE_SYMBOL $5BE3 playerAnim
COMMENT $5BE6 extraShot3
FORCE_SYMBOL $5BE6 REPLACE_1_2_extraShot3_varFrom1_2
FORCE_SYMBOL $5BEA adjustAndJumpY
COMMENT_LINE $5BED ADJUST_SHOT_DAMAGE
COMMENT $5BED extraShot3
FORCE_NO_SYMBOL $5BED
FORCE_SYMBOL $5BF0 bonusCaughtEndSound
COMMENT_LINE $5BF3 lda      playerNumberOfBulletsPerShot
COMMENT_LINE $5BF3 cmpa     #4
COMMENT_LINE $5BF3 lbhs     BonusShotPlusCaught
COMMENT_LINE $5BF3 lda      playerMaxShotInAir
COMMENT_LINE $5BF3 cmpa     #6
COMMENT_LINE $5BF3 bls      do1_4
COMMENT_LINE $5BF3 dec      playerMaxShotInAir
COMMENT_LINE $5BF3 dec      playerMaxShotInAir
COMMENT_LINE $5BF3 dec      playerMaxShotInAir
COMMENT_LINE $5BF3 dec      playerMaxShotInAir
COMMENT_LINE $5BF3 do1_4
COMMENT_LINE $5BF3 lda      #4
COMMENT_LINE $5BF3 sta      playerNumberOfBulletsPerShot
COMMENT_LINE $5BF3 ADJUST_SHOT_DAMAGE
COMMENT_LINE $5BF3 REPLACE_1_2_extraShot4_varFrom1_1                         ;  bank 1 replace
COMMENT_LINE $5BF3 ldd      #0                           ;extraShot4
COMMENT_LINE $5BF3 jmp      bonusCaughtEnd
FORCE_SYMBOL $5BF3 isDemoMode
COMMENT $5BF8 reset animation counter to 0
FORCE_SYMBOL $5BF8 playerAnim
FORCE_SYMBOL $5BFB BITFIELD_ARMOR
FORCE_SYMBOL $5BFD playerBonusActive
COMMENT $5C00 extraArmor
FORCE_NO_SYMBOL $5C00
FORCE_SYMBOL $5C03 bonusCaughtEndSound
COMMENT $5C06 reset animation counter to 0
FORCE_SYMBOL $5C06 playerAnim
FORCE_SYMBOL $5C09 BITFIELD_SHIELD
FORCE_SYMBOL $5C0B playerBonusActive
COMMENT $5C0E #1000 ; 50 = 1s
FORCE_SYMBOL $5C0E bonusTimerLength
FORCE_SYMBOL $5C11 playerBonusCounter
COMMENT $5C14 extraShield
FORCE_NO_SYMBOL $5C14
FORCE_SYMBOL $5C17 bonusCaughtEndSound
FORCE_SYMBOL $5C1A isDemoMode
COMMENT $5C1F reset animation counter to 0
FORCE_SYMBOL $5C1F playerAnim
FORCE_SYMBOL $5C22 BITFIELD_SCOOP
FORCE_SYMBOL $5C24 playerBonusActive
COMMENT $5C27 #1000 ; 50 = 1s
FORCE_SYMBOL $5C27 bonusTimerLength
FORCE_SYMBOL $5C2A playerBonusCounter
COMMENT_LINE $5C2D check if last bonus was scoop
FORCE_SYMBOL $5C2D lastCollectedBonus
COMMENT_LINE $5C34 = counter to 1
FORCE_SYMBOL $5C34 secretBonusCounter
COMMENT $5C37 counter to zero
FORCE_NO_SYMBOL $5C37
COMMENT $5C39 increase one
FORCE_SYMBOL $5C3A secretBonusCounter
FORCE_SYMBOL $5C3F secretBonusCounter
COMMENT $5C42 counter to zero
FORCE_NO_SYMBOL $5C42
COMMENT $5C44 if old value was two -> than new value will be three -> success!
FORCE_NO_SYMBOL $5C44
COMMENT_LINE $5C48 just increase count by one
FORCE_SYMBOL $5C48 secretBonusCounter
FORCE_SYMBOL $5C4D secretBonusCounter
COMMENT $5C50 counter to zero
FORCE_NO_SYMBOL $5C50
COMMENT $5C52 reset counter
FORCE_SYMBOL $5C52 secretBonusCounter
FORCE_SYMBOL $5C55 lockPurchased
FORCE_NO_SYMBOL $5C58
FORCE_SYMBOL $5C5C lockPurchased
FORCE_NO_SYMBOL $5C5F
COMMENT $5C61 shield for scoopies! (once)
FORCE_SYMBOL $5C61 lockPurchased
COMMENT_LINE $5C64 do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5C64 playSoundFlags
FORCE_NO_SYMBOL $5C67
FORCE_SYMBOL $5C69 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5C6B playSoundFlags
COMMENT $5C6E secretChannel1
FORCE_NO_SYMBOL $5C6E
FORCE_SYMBOL $5C71 sfx_pointer_1
COMMENT $5C74 secretChannel2
FORCE_NO_SYMBOL $5C74
FORCE_SYMBOL $5C77 sfx_pointer_2
COMMENT $5C7A secretChannel3
FORCE_NO_SYMBOL $5C7A
FORCE_SYMBOL $5C7D sfx_pointer_3
COMMENT $5C80 SecretString
FORCE_NO_SYMBOL $5C80
FORCE_SYMBOL $5C83 bonusCaughtEnd
COMMENT $5C86 extraScoop
FORCE_NO_SYMBOL $5C86
FORCE_SYMBOL $5C89 bonusCaughtEndSound
FORCE_SYMBOL $5C8C playerSpeed
FORCE_SYMBOL $5C8F MIN_PLAYER_SPEED
FORCE_SYMBOL $5C97 SPEED_DELTA
FORCE_SYMBOL $5C9A playerSpeed
COMMENT_LINE $5C9D check if last bonus was -S
FORCE_SYMBOL $5C9D lastCollectedBonus
COMMENT_LINE $5CA4 = counter to 1
FORCE_SYMBOL $5CA4 secretBonusCounter
COMMENT $5CA7 counter to zero
FORCE_NO_SYMBOL $5CA7
COMMENT $5CA9 increase one
FORCE_SYMBOL $5CAA secretBonusCounter
FORCE_SYMBOL $5CAF secretBonusCounter
COMMENT $5CB2 counter to zero
FORCE_NO_SYMBOL $5CB2
COMMENT $5CB4 if old value was two -> than new value will be three -> success!
FORCE_NO_SYMBOL $5CB4
COMMENT_LINE $5CB8 just increase count by one
FORCE_SYMBOL $5CB8 secretBonusCounter
FORCE_SYMBOL $5CBD secretBonusCounter
COMMENT $5CC0 counter to zero
FORCE_NO_SYMBOL $5CC0
COMMENT $5CC2 reset counter
FORCE_SYMBOL $5CC2 secretBonusCounter
FORCE_SYMBOL $5CC5 lockPurchased
FORCE_NO_SYMBOL $5CC8
COMMENT $5CCA shield for scoopies! (once)
FORCE_SYMBOL $5CCA lockPurchased
FORCE_SYMBOL $5CCD inGameSecrets
FORCE_SYMBOL $5CD0 SECRET_3_SPEED_SUCKERS
FORCE_SYMBOL $5CD4 inGameSecrets
FORCE_SYMBOL $5CD7 SECRET_3_SPEED_SUCKERS
FORCE_SYMBOL $5CD9 inGameSecrets
COMMENT_LINE $5CDC do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5CDC playSoundFlags
FORCE_NO_SYMBOL $5CDF
FORCE_SYMBOL $5CE1 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5CE3 playSoundFlags
COMMENT $5CE6 secretChannel1
FORCE_NO_SYMBOL $5CE6
FORCE_SYMBOL $5CE9 sfx_pointer_1
COMMENT $5CEC secretChannel2
FORCE_NO_SYMBOL $5CEC
FORCE_SYMBOL $5CEF sfx_pointer_2
COMMENT $5CF2 secretChannel3
FORCE_NO_SYMBOL $5CF2
FORCE_SYMBOL $5CF5 sfx_pointer_3
COMMENT $5CF8 SecretString
FORCE_NO_SYMBOL $5CF8
FORCE_SYMBOL $5CFB bonusCaughtEnd
COMMENT $5CFE extraSlow
FORCE_NO_SYMBOL $5CFE
FORCE_SYMBOL $5D01 malusCaughtEnd
FORCE_SYMBOL $5D04 playerMaxShotInAir
FORCE_SYMBOL $5D09 playerMaxShotInAir
COMMENT_LINE $5D0C check fro secret
COMMENT_LINE $5D0C check if last bonus was -S
FORCE_SYMBOL $5D0C lastCollectedBonus
COMMENT_LINE $5D13 = counter to 1
FORCE_SYMBOL $5D13 secretBonusCounter
COMMENT $5D16 counter to zero
FORCE_NO_SYMBOL $5D16
COMMENT $5D18 increase one
FORCE_SYMBOL $5D19 secretBonusCounter
FORCE_SYMBOL $5D1E secretBonusCounter
COMMENT $5D21 counter to zero
FORCE_NO_SYMBOL $5D21
COMMENT $5D23 if old value was two -> than new value will be three -> success!
FORCE_NO_SYMBOL $5D23
COMMENT_LINE $5D27 just increase count by one
FORCE_SYMBOL $5D27 secretBonusCounter
FORCE_SYMBOL $5D2C secretBonusCounter
COMMENT $5D2F counter to zero
FORCE_NO_SYMBOL $5D2F
COMMENT $5D31 reset counter
FORCE_SYMBOL $5D31 secretBonusCounter
COMMENT_LINE $5D34 just store to  discovered secrets!
FORCE_SYMBOL $5D34 inGameSecrets
FORCE_SYMBOL $5D37 SECRET_3_BULLET_SUCKERS
FORCE_SYMBOL $5D3B inGameSecrets
FORCE_SYMBOL $5D3E SECRET_3_BULLET_SUCKERS
FORCE_SYMBOL $5D40 inGameSecrets
COMMENT_LINE $5D43 do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5D43 playSoundFlags
FORCE_NO_SYMBOL $5D46
FORCE_SYMBOL $5D48 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5D4A playSoundFlags
COMMENT $5D4D secretChannel1
FORCE_NO_SYMBOL $5D4D
FORCE_SYMBOL $5D50 sfx_pointer_1
COMMENT $5D53 secretChannel2
FORCE_NO_SYMBOL $5D53
FORCE_SYMBOL $5D56 sfx_pointer_2
COMMENT $5D59 secretChannel3
FORCE_NO_SYMBOL $5D59
FORCE_SYMBOL $5D5C sfx_pointer_3
COMMENT $5D5F SecretString
FORCE_NO_SYMBOL $5D5F
FORCE_SYMBOL $5D62 bonusCaughtEnd
COMMENT $5D65 extraBulletMiss
FORCE_NO_SYMBOL $5D65
FORCE_SYMBOL $5D68 malusCaughtEnd
FORCE_SYMBOL $5D6B playerCashW
FORCE_NO_SYMBOL $5D6E
FORCE_SYMBOL $5D71 playerCashW
FORCE_SYMBOL $5D74 playerCashW
FORCE_SYMBOL $5D77 playerCashW
FORCE_SYMBOL $5D7C diverseFlags
FORCE_SYMBOL $5D7F BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $5D81 diverseFlags
FORCE_SYMBOL $5D84 playerCashW
COMMENT $5D87 cash200
FORCE_NO_SYMBOL $5D87
FORCE_SYMBOL $5D8A moneyCaughtEnd
FORCE_SYMBOL $5D8D playerCashW
FORCE_NO_SYMBOL $5D90
FORCE_SYMBOL $5D93 playerCashW
FORCE_SYMBOL $5D96 playerCashW
FORCE_SYMBOL $5D99 playerCashW
FORCE_SYMBOL $5D9E diverseFlags
FORCE_SYMBOL $5DA1 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $5DA3 diverseFlags
FORCE_SYMBOL $5DA6 playerCashW
COMMENT $5DA9 cash5
FORCE_NO_SYMBOL $5DA9
FORCE_SYMBOL $5DAC moneyCaughtEnd
FORCE_SYMBOL $5DAF playerCashW
FORCE_NO_SYMBOL $5DB2
FORCE_SYMBOL $5DB5 playerCashW
FORCE_SYMBOL $5DB8 playerCashW
FORCE_SYMBOL $5DBB playerCashW
FORCE_SYMBOL $5DC0 diverseFlags
FORCE_SYMBOL $5DC3 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $5DC5 diverseFlags
FORCE_SYMBOL $5DC8 playerCashW
COMMENT $5DCB cash20
FORCE_NO_SYMBOL $5DCB
FORCE_SYMBOL $5DCE moneyCaughtEnd
FORCE_SYMBOL $5DD1 playerCashW
FORCE_NO_SYMBOL $5DD4
FORCE_SYMBOL $5DD7 playerCashW
FORCE_SYMBOL $5DDA playerCashW
FORCE_SYMBOL $5DDD playerCashW
FORCE_SYMBOL $5DE2 diverseFlags
FORCE_SYMBOL $5DE5 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $5DE7 diverseFlags
FORCE_SYMBOL $5DEA playerCashW
COMMENT_LINE $5DED check fro secret
COMMENT_LINE $5DED check if last bonus was -S
FORCE_SYMBOL $5DED lastCollectedBonus
COMMENT_LINE $5DF4 = counter to 1
FORCE_SYMBOL $5DF4 secretBonusCounter
COMMENT $5DF7 counter to zero
FORCE_NO_SYMBOL $5DF7
COMMENT $5DF9 increase one
FORCE_SYMBOL $5DFA secretBonusCounter
FORCE_SYMBOL $5DFF secretBonusCounter
COMMENT $5E02 counter to zero
FORCE_NO_SYMBOL $5E02
COMMENT $5E04 if old value was two -> than new value will be three -> success!
FORCE_NO_SYMBOL $5E04
COMMENT_LINE $5E08 just increase count by one
FORCE_SYMBOL $5E08 secretBonusCounter
FORCE_SYMBOL $5E0D secretBonusCounter
COMMENT $5E10 counter to zero
FORCE_NO_SYMBOL $5E10
COMMENT $5E12 reset counter
FORCE_SYMBOL $5E12 secretBonusCounter
COMMENT_LINE $5E15 just store to  discovered secrets!
FORCE_SYMBOL $5E15 inGameSecrets
FORCE_SYMBOL $5E18 SECRET_3_FIFTY
FORCE_SYMBOL $5E1C inGameSecrets
FORCE_SYMBOL $5E1F SECRET_3_FIFTY
FORCE_SYMBOL $5E21 inGameSecrets
COMMENT_LINE $5E24 do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5E24 playSoundFlags
FORCE_NO_SYMBOL $5E27
FORCE_SYMBOL $5E29 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5E2B playSoundFlags
COMMENT $5E2E secretChannel1
FORCE_NO_SYMBOL $5E2E
FORCE_SYMBOL $5E31 sfx_pointer_1
COMMENT $5E34 secretChannel2
FORCE_NO_SYMBOL $5E34
FORCE_SYMBOL $5E37 sfx_pointer_2
COMMENT $5E3A secretChannel3
FORCE_NO_SYMBOL $5E3A
FORCE_SYMBOL $5E3D sfx_pointer_3
COMMENT $5E40 SecretString
FORCE_NO_SYMBOL $5E40
FORCE_SYMBOL $5E43 bonusCaughtEnd
COMMENT $5E46 cash50
FORCE_NO_SYMBOL $5E46
FORCE_SYMBOL $5E49 moneyCaughtEnd
FORCE_SYMBOL $5E4C bonusCollect
FORCE_NO_SYMBOL $5E4F
COMMENT $5E51 nothing done - bonus alread caught
COMMENT_LINE $5E55 here check correct order of EXTRA
FORCE_SYMBOL $5E55 bonusCollect
FORCE_SYMBOL $5E5A secretBonusCounter
FORCE_NO_SYMBOL $5E5D
FORCE_SYMBOL $5E5F secretBonusCounter
FORCE_SYMBOL $5E64 secretBonusCounter
FORCE_SYMBOL $5E69 secretBonusCounter
FORCE_SYMBOL $5E6C bonusCollect
FORCE_NO_SYMBOL $5E6F
FORCE_SYMBOL $5E73 bonusCollect
FORCE_NO_SYMBOL $5E76
COMMENT $5E78 nothing done - bonus alread caught
COMMENT_LINE $5E7C here check correct order of EXTRA
FORCE_SYMBOL $5E7C bonusCollect
FORCE_NO_SYMBOL $5E7F
FORCE_SYMBOL $5E83 secretBonusCounter
FORCE_SYMBOL $5E88 secretBonusCounter
FORCE_SYMBOL $5E8B bonusCollect
FORCE_NO_SYMBOL $5E8E
FORCE_SYMBOL $5E92 bonusCollect
FORCE_NO_SYMBOL $5E95
COMMENT $5E97 nothing done - bonus alread caught
COMMENT_LINE $5E9B here check correct order of EXTRA
FORCE_SYMBOL $5E9B bonusCollect
FORCE_SYMBOL $5EA2 secretBonusCounter
FORCE_SYMBOL $5EA7 secretBonusCounter
FORCE_SYMBOL $5EAA bonusCollect
FORCE_NO_SYMBOL $5EAD
FORCE_SYMBOL $5EB1 bonusCollect
FORCE_NO_SYMBOL $5EB4
COMMENT $5EB6 nothing done - bonus alread caught
COMMENT_LINE $5EBA here check correct order of EXTRA
FORCE_SYMBOL $5EBA bonusCollect
FORCE_SYMBOL $5EC1 secretBonusCounter
FORCE_SYMBOL $5EC6 secretBonusCounter
FORCE_SYMBOL $5EC9 bonusCollect
FORCE_NO_SYMBOL $5ECC
FORCE_SYMBOL $5ED0 bonusCollect
FORCE_NO_SYMBOL $5ED3
COMMENT $5ED5 nothing done - bonus alread caught
COMMENT_LINE $5ED9 here check correct order of EXTRA
FORCE_SYMBOL $5ED9 bonusCollect
FORCE_SYMBOL $5EE0 secretBonusCounter
FORCE_SYMBOL $5EE5 secretBonusCounter
FORCE_SYMBOL $5EE8 bonusCollect
FORCE_NO_SYMBOL $5EEB
COMMENT_LINE $5EED bra      checkExtraAndGoHome
FORCE_SYMBOL $5EED bonusCollect
FORCE_SYMBOL $5EF0 bonusCollect
FORCE_SYMBOL $5EF9 playSoundFlags
FORCE_NO_SYMBOL $5EFC
COMMENT $5F00 EXTRACollectedData
FORCE_NO_SYMBOL $5F00
FORCE_SYMBOL $5F03 sfx_pointer_1
FORCE_SYMBOL $5F06 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5F09
FORCE_SYMBOL $5F0D player_score
FORCE_SYMBOL $5F11 multiplyer
FORCE_SYMBOL $5F16 bonusCollect
FORCE_NO_SYMBOL $5F19
FORCE_SYMBOL $5F1C scoreBack11186
FORCE_SYMBOL $5F1F addScore_d
FORCE_NO_SYMBOL $5F22
FORCE_SYMBOL $5F25 scoreBack21186
FORCE_SYMBOL $5F28 addScore_d
FORCE_SYMBOL $5F2B bonusCollect
FORCE_SYMBOL $5F32 bonusCollect
FORCE_SYMBOL $5F35 bonusDisplay
FORCE_SYMBOL $5F38 secretBonusCounter
FORCE_SYMBOL $5F3D inGameSecrets
FORCE_SYMBOL $5F40 SECRET_ORDERED_EXTRA
FORCE_SYMBOL $5F44 inGameSecrets
FORCE_SYMBOL $5F47 SECRET_ORDERED_EXTRA
FORCE_SYMBOL $5F49 inGameSecrets
COMMENT_LINE $5F4C do not allow playing of any other "sfx" till this is over
FORCE_SYMBOL $5F4C playSoundFlags
FORCE_NO_SYMBOL $5F4F
FORCE_SYMBOL $5F51 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5F53 playSoundFlags
COMMENT $5F56 secretChannel1
FORCE_NO_SYMBOL $5F56
FORCE_SYMBOL $5F59 sfx_pointer_1
COMMENT $5F5C secretChannel2
FORCE_NO_SYMBOL $5F5C
FORCE_SYMBOL $5F5F sfx_pointer_2
COMMENT $5F62 secretChannel3
FORCE_NO_SYMBOL $5F62
FORCE_SYMBOL $5F65 sfx_pointer_3
COMMENT $5F68 SecretString
FORCE_NO_SYMBOL $5F68
FORCE_SYMBOL $5F6B messagePointer
FORCE_SYMBOL $5F71 messageState
COMMENT $5F74 bandit
FORCE_NO_SYMBOL $5F74
FORCE_SYMBOL $5F77 jmpBankIRQ1Shift
FORCE_SYMBOL $5F7A removeBonus
FORCE_SYMBOL $5F7E adjustAndJumpY
FORCE_SYMBOL $5F81 secretBonusCounter
COMMENT $5F86 reset EXTRA BONUS counter in case of a fail
FORCE_SYMBOL $5F86 secretBonusCounter
FORCE_SYMBOL $5F89 playerMaxShotInAir
FORCE_SYMBOL $5F8C MAX_PLAYERSHOT_OBJECTS
FORCE_SYMBOL $5F90 playerMaxShotInAir
FORCE_SYMBOL $5F93 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $5F97
FORCE_SYMBOL $5F9B playerNumberOfBulletsPerShot
FORCE_SYMBOL $5F9E adjustAndRemove
FORCE_SYMBOL $5FA1 playSoundFlags
FORCE_NO_SYMBOL $5FA4
COMMENT $5FA8 letterData
FORCE_NO_SYMBOL $5FA8
FORCE_SYMBOL $5FAB sfx_pointer_1
FORCE_SYMBOL $5FAE goHomeBonusBehaviour
FORCE_SYMBOL $5FB3 displayContinueBonus
COMMENT $5FB6 downgradeData
FORCE_NO_SYMBOL $5FB6
FORCE_SYMBOL $5FB9 messagePointer
FORCE_SYMBOL $5FBF messageState
FORCE_SYMBOL $5FC2 playSoundFlags
FORCE_NO_SYMBOL $5FC5
FORCE_SYMBOL $5FC7 BIT_FLAG_PLAY_FORCE_SFX
FORCE_SYMBOL $5FC9 playSoundFlags
FORCE_SYMBOL $5FCC sfx_pointer_1
FORCE_SYMBOL $5FCF sfx_pointer_2
FORCE_SYMBOL $5FD2 sfx_pointer_3
FORCE_SYMBOL $5FD7 lastCollectedBonus
COMMENT $5FDC malusData
FORCE_NO_SYMBOL $5FDC
COMMENT $5FE1 moneyData
FORCE_NO_SYMBOL $5FE1
COMMENT $5FE6 bonusData
FORCE_NO_SYMBOL $5FE6
FORCE_SYMBOL $5FE9 messagePointer
FORCE_SYMBOL $5FEF messageState
COMMENT_LINE $5FF2 remember last bonus!
FORCE_SYMBOL $5FF2 playSoundFlags
FORCE_NO_SYMBOL $5FF5
FORCE_SYMBOL $5FF9 sfx_pointer_1
FORCE_SYMBOL $5FFE lastCollectedBonus
FORCE_SYMBOL $6003 player_score
FORCE_NO_SYMBOL $6007
FORCE_SYMBOL $6009 multiplyer
FORCE_SYMBOL $600F back1191
FORCE_SYMBOL $6012 addScore_b
COMMENT $6017 destroy secetr counter - double letters do not count!
FORCE_SYMBOL $6017 secretBonusCounter
FORCE_SYMBOL $601C secretBonusCounter
FORCE_SYMBOL $601F player_score
FORCE_NO_SYMBOL $6023
FORCE_SYMBOL $6025 multiplyer
FORCE_SYMBOL $602B back1192
FORCE_SYMBOL $602E addScore_b
COMMENT_LINE $6031 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $6031 u_offset1
COMMENT $6033 preload next user stack
COMMENT_LINE $6036 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 we must keep DS intackt in this remove -> use y register instead
COMMENT $6036 is it the first?
FORCE_SYMBOL $6036 bonuslist_objects_head
COMMENT $6039 no -> jump
COMMENT $603B y pointer to next objext
FORCE_SYMBOL $603B NEXT_BONUS_OBJECT
COMMENT $603E the next object will be the first
FORCE_SYMBOL $603E bonuslist_objects_head
COMMENT $6044 start at list head
FORCE_SYMBOL $6044 bonuslist_objects_head
COMMENT $6048 am I the next object of the current investigated list element
FORCE_SYMBOL $6048 NEXT_BONUS_OBJECT
COMMENT $604A jup -> jump
COMMENT $604C otherwise load the next as new current
FORCE_SYMBOL $604C NEXT_BONUS_OBJECT
COMMENT $604F and search further
COMMENT $6051 we load "our" next object to d
FORCE_SYMBOL $6051 NEXT_BONUS_OBJECT
COMMENT $6053 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $6053 NEXT_BONUS_OBJECT
COMMENT $6055 and clean up the empties
FORCE_SYMBOL $6055 bonusCount
COMMENT $6058 set u free, as new free head
FORCE_SYMBOL $6058 bonuslist_empty_head
COMMENT $605C load to u the next linked list element
FORCE_SYMBOL $605C NEXT_BONUS_OBJECT
FORCE_SYMBOL $605F bonuslist_empty_head
COMMENT_LINE $6062 cleanup afterwards
FORCE_SYMBOL $6062 gameScale
FORCE_NO_SYMBOL $6065
COMMENT $6067 /BLANK low and /ZERO low
FORCE_SYMBOL $6067 VIA_cntl
FORCE_SYMBOL $6069 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $606B
FORCE_SYMBOL $606D VIA_int_flags
FORCE_NO_SYMBOL $6071
FORCE_SYMBOL $6074 VIA_port_b
COMMENT $6076 (D = y,x, pc = next object)
COMMENT_LINE $6078 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6078 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6078 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $6078 Store Y in D/A register
FORCE_SYMBOL $6078 VIA_port_a
COMMENT $607A Blank low, zero high?
FORCE_NO_SYMBOL $607A
FORCE_SYMBOL $607C VIA_cntl
COMMENT $607F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $607F VIA_port_b
COMMENT $6081 y must be set more than xx cycles on some vectrex
COMMENT $6082 Disable mux
FORCE_SYMBOL $6082 VIA_port_b
COMMENT $6084 Store X in D/A register
FORCE_SYMBOL $6084 VIA_port_a
COMMENT $6086 enable timer
FORCE_SYMBOL $6086 VIA_t1_cnt_hi
FORCE_SYMBOL $6088 OBJECT_SCALE
FORCE_SYMBOL $608A VIA_t1_cnt_lo
COMMENT_LINE $608E todo
COMMENT_LINE $608E check if my type is still collected
COMMENT_LINE $608E if not remove myself
COMMENT_LINE $608E while moving up, the other part of extra is
COMMENT_LINE $608E collected -> than I should disappear since the complete
COMMENT_LINE $608E extra should disappear
FORCE_SYMBOL $608E BonusList
COMMENT $6091 in x pointer to current bonus struct
COMMENT $6093 pointer to animation list of bonus
FORCE_NO_SYMBOL $6093
FORCE_SYMBOL $6095 animDelayCounter
COMMENT_LINE $609C check if end of animation (for now always 19 - but that might change -> 0 terminated dw list)
COMMENT $609F current active animation
COMMENT $60A8 current active animation (no need to load 0
FORCE_SYMBOL $60AC BonusHomeCoordinates
COMMENT $60AF in d the target coordinates of this bonus
COMMENT_LINE $60B1 check y first
COMMENT $60BB make exact
COMMENT $60D0 neg $80 = $80
FORCE_NO_SYMBOL $60D0
FORCE_NO_SYMBOL $60D4
COMMENT $60D6 near the target?
FORCE_NO_SYMBOL $60D6
COMMENT $60DC in d the target coordinates of this bonus
COMMENT $60DE make exact
COMMENT $60E2 in d the target coordinates of this bonus
COMMENT $60E9 preload next user stack
FORCE_NO_SYMBOL $60EC
FORCE_SYMBOL $60EE VIA_int_flags
FORCE_NO_SYMBOL $60F5
FORCE_SYMBOL $60FC BONUS_X
FORCE_SYMBOL $6101 BONUS_T
FORCE_SYMBOL $6106 BONUS_R
FORCE_SYMBOL $610B bonusDisplay
FORCE_SYMBOL $610E bonusDisplay
FORCE_SYMBOL $6111 removeBonus
COMMENT_LINE $6114 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $6114 Store Y in D/A register
FORCE_SYMBOL $6114 VIA_port_a
COMMENT $6116 Blank low, zero high?
FORCE_NO_SYMBOL $6116
FORCE_SYMBOL $6118 VIA_cntl
COMMENT $611B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $611B VIA_port_b
COMMENT $611D y must be set more than xx cycles on some vectrex
COMMENT $611E Disable mux
FORCE_SYMBOL $611E VIA_port_b
COMMENT $6120 Store X in D/A register
FORCE_SYMBOL $6120 VIA_port_a
COMMENT $6122 enable timer
FORCE_SYMBOL $6122 VIA_t1_cnt_hi
COMMENT_LINE $6124 ;;;;;
COMMENT_LINE $6124 colision detection bonus -> sucker
COMMENT_LINE $6124 in b is still x position, so start with that
COMMENT_LINE $6124 xTest
FORCE_SYMBOL $6124 suckerAddress
FORCE_SYMBOL $612A fallingBonusBehaviour
FORCE_SYMBOL $6131 inGameSecrets
FORCE_SYMBOL $6134 SECRET_3_FIFTY
FORCE_SYMBOL $6138 BONUS_MONEY_200
FORCE_SYMBOL $613C continnueWithFallin
COMMENT $613F xpos of sucker
FORCE_SYMBOL $613F X_POS
COMMENT $6144 BONUS_PLAYER_X_RANGE ; sucker x range
FORCE_NO_SYMBOL $6144
COMMENT_LINE $6148 yTest
COMMENT $614A xpos of sucker
FORCE_SYMBOL $614A Y_POS
COMMENT $614C suckerCaughtBonus
COMMENT_LINE $6150 lbeq     removeBonus
FORCE_SYMBOL $6150 OBJECT_SCALE
FORCE_SYMBOL $6152 VIA_t1_cnt_lo
COMMENT $6156 xpos of sucker
FORCE_SYMBOL $6156 Y_POS
COMMENT $6158 suckerCaughtBonus
COMMENT $615A preload next user stack
FORCE_SYMBOL $615E X_POS
COMMENT $6163 otherwise money "wobbles" beneath sucker
FORCE_NO_SYMBOL $6163
FORCE_SYMBOL $6169 X_POS
COMMENT $616D preload next user stack
COMMENT $616F preload next user stack
COMMENT $6171 preload next user stack
COMMENT $6175 preload next user stack
COMMENT $6177 preload next user stack
COMMENT $6179 preload next user stack
FORCE_SYMBOL $617D BonusList
COMMENT $6180 in x pointer to current bonus struct
COMMENT $6182 pointer to animation list of bonus
FORCE_NO_SYMBOL $6182
FORCE_SYMBOL $6184 animDelayCounter
COMMENT_LINE $618B check if end of animation (for now always 19 - but that might change -> 0 terminated dw list)
COMMENT $618E current active animation
COMMENT $6197 current active animation (no need to load 0
COMMENT $6199 preload next user stack
FORCE_NO_SYMBOL $619C
FORCE_SYMBOL $619E VIA_int_flags
FORCE_SYMBOL $61A5 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $61A8
FORCE_NO_SYMBOL $61AE
COMMENT $61B2 easy
FORCE_NO_SYMBOL $61B2
FORCE_SYMBOL $61B4 difficulty
FORCE_NO_SYMBOL $61B7
COMMENT $61C1 5
COMMENT $61C2 6
COMMENT $61C3 7
FORCE_NO_SYMBOL $61C3
COMMENT_LINE $61C7 bullet 0 - 4 = standard damage
COMMENT $61C7 easy
FORCE_NO_SYMBOL $61C7
FORCE_SYMBOL $61C9 difficulty
FORCE_NO_SYMBOL $61CC
COMMENT $61D3 1
COMMENT $61D4 2
COMMENT_LINE $61D5 with damage adjust no negative weapon damage allowed anymore!
COMMENT_LINE $61D5 (negative was damage each second round only)
COMMENT_LINE $61D5 boss fight must be hard! They don't resprect extra damage!
FORCE_SYMBOL $61D5 diverseFlags
FORCE_SYMBOL $61D8 BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $61DC bulletDamageAdjust
FORCE_SYMBOL $61DF bulletDamage
FORCE_SYMBOL $61E5 shiftBulletDamage
COMMENT $61EB max non negative damage
FORCE_NO_SYMBOL $61EB
FORCE_SYMBOL $61ED shiftDoubleBulletDamage
COMMENT_LINE $61F0 im warp failure non working on impossible
FORCE_NO_SYMBOL $61F0
COMMENT_LINE $61F2 bank 2
COMMENT $62AB y is $00
COMMENT $62B5 y was $00, now SHIFT
COMMENT $62BF y is $00
COMMENT $6347 y is -$5A
COMMENT $6396 y is -$59
COMMENT $643E y is $59
COMMENT $6471 y is $00
COMMENT $647B y is $00
COMMENT $66A0 list of all single vectorlists in this
COMMENT $66BD list of all single vectorlists in this
COMMENT $66CB y is $00
COMMENT $66D5 y is $00
COMMENT $66E1 list of all single vectorlists in this
COMMENT $66F9 y was $16; x was $00
COMMENT $670C type
COMMENT $670D list of all single vectorlists in this
COMMENT $6753 y is $30
COMMENT $68B2 list of all single vectorlists in this
COMMENT $68D0 y was $00, now SHIFT
COMMENT $68DA list of all single vectorlists in this
COMMENT $6930 list of all single vectorlists in this
COMMENT $6939 y was $19, now SHIFT Poke
COMMENT $6961 list of all single vectorlists in this
COMMENT $69D7 y was $00, now SHIFT
COMMENT $69E6 list of all single vectorlists in this
COMMENT_LINE $6A35 no space left, to lazy to optimize
COMMENT_LINE $6A35 good place tooptimize is everything related to string printing
COMMENT $6A37 type
COMMENT $6A3A type
COMMENT $6A3D type
COMMENT $6A40 type
COMMENT $6A43 type
COMMENT $6A44 list of all single vectorlists in this
COMMENT $6AF0 y was $00, now 0
COMMENT $6AF5 y was $00, now SHIFT Poke
COMMENT $6B81 list of all single vectorlists in this
COMMENT $6C18 y was $00, now SHIFT Poke
COMMENT $6C9C list of all single vectorlists in this
COMMENT $6D2F y was $00, now SHIFT Poke
COMMENT $6D34 y was $00, now 0
COMMENT $6DAC list of all single vectorlists in this
COMMENT $6E3F y was $00, now SHIFT Poke
COMMENT $6E44 y was $00, now 0
COMMENT $6E49 y was $00, now SHIFT Poke
COMMENT $6EC1 list of all single vectorlists in this
COMMENT $6F74 y was $00, now SHIFT Poke
COMMENT $6F79 y is $00
COMMENT $6F7E y was $00, now 0
COMMENT $6F83 y was $00, now SHIFT Poke
COMMENT $701D type
COMMENT $7020 type
COMMENT $7023 type
COMMENT $7026 type
COMMENT $7027 list of all single vectorlists in this
COMMENT $707C y is -$18
COMMENT $7131 list of all single vectorlists in this
COMMENT $716B y was $00, now 0
COMMENT $71C0 y is -$19
COMMENT $7240 y was $00, now SHIFT
COMMENT $72A8 y is -$27
COMMENT $730B y was $00, now 0
COMMENT $7360 y is $19
COMMENT $73E0 y was $00, now SHIFT
COMMENT $7448 y is $27
COMMENT $7493 list of all single vectorlists in this
COMMENT $74CD y was $00, now 0
COMMENT $7535 y is $09
COMMENT $75A2 y was $00, now SHIFT
COMMENT $760A y is -$27
COMMENT $766D y was $00, now 0
COMMENT $76D5 y is -$09
COMMENT $7742 y was $00, now SHIFT
COMMENT $77AA y is $27
COMMENT $77F5 list of all single vectorlists in this
COMMENT $782F y was $00, now 0
COMMENT $7844 y was $00, now 0
COMMENT $78AE y is $11
COMMENT $78C1 y is $05
COMMENT $7958 y was $00, now SHIFT
COMMENT $796D y was $00, now SHIFT
COMMENT $79EA y is -$26
COMMENT $79FF y is -$28
COMMENT $7A0F y was -$0F, now 0
COMMENT $7A77 y was $00, now 0
COMMENT $7A8C y was $00, now 0
COMMENT $7AF6 y is -$11
COMMENT $7B09 y is -$05
COMMENT $7BA0 y was $00, now SHIFT
COMMENT $7BB5 y was $00, now SHIFT
COMMENT $7C32 y is $26
COMMENT $7C47 y is $28
COMMENT $7C57 y was $0F, now 0
COMMENT $7CA9 type
COMMENT $7CAC type
COMMENT $7CAD list of all single vectorlists in this
COMMENT $7CD4 y was -$18, now SHIFT Poke
COMMENT $7D12 y was -$12, now SHIFT Poke
COMMENT $7DE6 list of all single vectorlists in this
COMMENT $7E25 y was $00, now SHIFT
COMMENT $7E4E y was $00, now SHIFT
COMMENT $7E77 y was $00, now SHIFT
COMMENT $7EA0 y was $00, now SHIFT
COMMENT $7EEE y was $00, now SHIFT
COMMENT $7F17 y was $00, now SHIFT
COMMENT $7F40 y was $00, now SHIFT
COMMENT $7F69 y was $00, now SHIFT
COMMENT $7F77 type
COMMENT $7F7A type
COMMENT $7F7B list of all single vectorlists in this
COMMENT $7FA2 y was $18, now SHIFT
COMMENT $7FA7 y is -$18
COMMENT $7FB1 y is $18
COMMENT $8020 y was $0B, now SHIFT Poke
COMMENT $80AF y was -$18, now 0
COMMENT $80C5 y is $18
COMMENT $80CA y is -$18
COMMENT $80DE y is $18
COMMENT $80EA list of all single vectorlists in this
COMMENT $8111 y is $18
COMMENT $8145 y is -$16
COMMENT $8246 y is $16
COMMENT $827A y is -$18
COMMENT $8288 type
COMMENT $828B type
COMMENT $828C list of all single vectorlists in this
COMMENT $82B3 y is -$18
COMMENT $83E9 list of all single vectorlists in this
COMMENT $8428 y was $00, now SHIFT Poke
COMMENT $8451 y was $00, now SHIFT Poke
COMMENT $847A y was $00, now SHIFT Poke
COMMENT $84A3 y was $00, now SHIFT Poke
COMMENT $84EA y was $00, now SHIFT Poke
COMMENT $8513 y was $00, now SHIFT Poke
COMMENT $853C y was $00, now SHIFT Poke
COMMENT $8565 y was $00, now SHIFT Poke
COMMENT $8573 type
COMMENT $8574 list of all single vectorlists in this
COMMENT $8637 y is $0C
COMMENT $873F type
COMMENT $8740 list of all single vectorlists in this
COMMENT $87F6 y was $00, now 0
COMMENT $887B type
COMMENT $887C list of all single vectorlists in this
COMMENT $89D2 type
COMMENT $89D5 type
COMMENT $89D8 type
COMMENT $89DB type
COMMENT $89DC list of all single vectorlists in this
COMMENT $8A97 list of all single vectorlists in this
COMMENT $8AC3 y was $00, now 0
COMMENT $8ADE y was $00, now 0
COMMENT $8AEF y is $18
COMMENT $8AF9 y was $00, now 0
COMMENT $8B14 y was $00, now 0
COMMENT $8B2F y was $00, now 0
COMMENT $8B4A y was $00, now 0
COMMENT $8B65 y was $00, now 0
COMMENT $8B80 y was $00, now 0
COMMENT $8B9B y was $00, now 0
COMMENT $8BAC list of all single vectorlists in this
COMMENT $8BD8 y was $00, now 0
COMMENT $8BE2 y was $00, now 0
COMMENT $8BFD y was $00, now 0
COMMENT $8C07 y was $00, now 0
COMMENT $8C22 y was $00, now 0
COMMENT $8C2C y was $00, now 0
COMMENT $8C47 y was $00, now 0
COMMENT $8C51 y was $00, now 0
COMMENT $8C6C y was $00, now 0
COMMENT $8C76 y was $00, now 0
COMMENT $8C91 y was $00, now 0
COMMENT $8C9B y was $00, now 0
COMMENT $8CB6 y was $00, now 0
COMMENT $8CC0 y was $00, now 0
COMMENT $8CDB y was $00, now 0
COMMENT $8CE5 y was $00, now 0
COMMENT $8CF6 y is $1E
COMMENT $8D00 y was $00, now 0
COMMENT $8D0A y was $00, now 0
COMMENT $8D1B list of all single vectorlists in this
COMMENT $8D29 y was $00, now 0
COMMENT $8D33 y was $00, now 0
COMMENT $8D3D y was $00, now 0
COMMENT $8D50 type
COMMENT $8D51 list of all single vectorlists in this
COMMENT $8DDB y is -$15
COMMENT $8E43 y was $00, now 0
COMMENT $8EEB y is $18
COMMENT $8F1C type
COMMENT $8F1F type
COMMENT $8F20 list of all single vectorlists in this
COMMENT $8F60 y was $00, now 0
COMMENT $8F85 y is $13
COMMENT $8F8F y was $00, now 0
COMMENT $8FBE y was $00, now 0
COMMENT $8FED y was $00, now 0
COMMENT $9012 y was $02, now 0
COMMENT $901C y was $00, now 0
COMMENT $9046 y was $13, now SHIFT
COMMENT $904B y was $00, now 0
COMMENT $907A y was $00, now 0
COMMENT $9090 y is $1C
COMMENT $909A y was -$1C, now SHIFT
COMMENT $90A9 y was $00, now 0
COMMENT $90D8 y was $00, now 0
COMMENT $90E9 list of all single vectorlists in this
COMMENT $912E y is $0C
COMMENT $9158 y is $0C
COMMENT $919D y is $09
COMMENT $91C7 y was $02, now 0
COMMENT $9236 y is $1C
COMMENT $9240 y was -$1C, now SHIFT
COMMENT $9287 type
COMMENT $928A type
COMMENT $928B list of all single vectorlists in this
COMMENT $929D list of all single vectorlists in this
COMMENT $92CF y was $00, now 0
COMMENT $9302 y was $00, now 0
COMMENT $9335 y was $00, now 0
COMMENT $9368 y was $00, now 0
COMMENT $939B y was $00, now 0
COMMENT $93CE y was $00, now 0
COMMENT $9401 y was $00, now 0
COMMENT $9434 y was $00, now 0
COMMENT $9467 y was $00, now 0
COMMENT $9478 list of all single vectorlists in this
COMMENT $95B3 type
COMMENT $95B4 list of all single vectorlists in this
COMMENT $9627 y is $0E
COMMENT $9664 y was -$0A, now SHIFT
COMMENT $969E type
COMMENT $96B1 y is -$7C
COMMENT_LINE $9704 db       $6E, $01, $65, hi(SMVB_continue_single), lo(SMVB_continue_single)
COMMENT $97FA list of all single vectorlists in this
COMMENT_LINE $99F2 db  $7E, $01,  $00, hi(SMVB_startMove_single), lo(SMVB_startMove_single)
COMMENT $99F9 type
COMMENT $99FA list of all single vectorlists in this
COMMENT $9B0A y is $14
COMMENT $9B50 type
COMMENT $9B51 list of all single vectorlists in this
COMMENT $9C5A y was -$1D, now 0
COMMENT $9CA7 type
COMMENT $9CA8 list of all single vectorlists in this
COMMENT $A192 type
COMMENT $A193 list of all single vectorlists in this
COMMENT $A1E4 y was $14; x was $00
COMMENT $A1F3 y was $14; x was $00, y now SHIFTREG
COMMENT $A22E y was $0A; x was $00
COMMENT $A233 y was $0A; x was $00, y now SHIFTREG
COMMENT $A238 y was $0A; x was $00
COMMENT $A23D y was $0A; x was $00, y now SHIFTREG
COMMENT $A253 y was $02; x was $00
COMMENT $A258 y was $02; x was $00, y now SHIFTREG
COMMENT $A25D y was $02; x was $00
COMMENT $A262 y was $02; x was $00, y now SHIFTREG
COMMENT $A278 y was -$06; x was $00
COMMENT $A27D y was -$06; x was $00, y now SHIFTREG
COMMENT $A282 y was -$06; x was $00
COMMENT $A287 y was -$06; x was $00, y now SHIFTREG
COMMENT $A29D y was -$0D; x was $00
COMMENT $A2AC y was -$0D; x was $00, y now SHIFTREG
COMMENT_LINE $A302 accessed by type
COMMENT_LINE $A30C db       $7d, $90
COMMENT_LINE $A30C db       $7d, $90+20
COMMENT_LINE $A30C db       $7d, $90+20+20
COMMENT_LINE $A30C db       $7d, $90+20+20+20
COMMENT_LINE $A30C db       $7d, $90+20+20+20+20
COMMENT $A30E Type 0
COMMENT $A310 Type 2
COMMENT $A312 Type 4
COMMENT $A314 Type 6
COMMENT $A316 Type 8
COMMENT_LINE $A350 Random ranges (chance of X in 255)
COMMENT_LINE $A350 ->BONUS_MONEY_5_RANGE  =      71
COMMENT_LINE $A350 BONUS_MONEY_5_RANGE = REST
COMMENT_LINE $A350 bonus pointer in X
FORCE_SYMBOL $A350 random_seed2
FORCE_NO_SYMBOL $A356
FORCE_SYMBOL $A358 random_seed2
FORCE_SYMBOL $A35B BONUS_E_COMPARE
FORCE_SYMBOL $A35F BONUS_E
FORCE_SYMBOL $A361 BonusDecided
FORCE_SYMBOL $A364 BONUS_X_COMPARE
FORCE_SYMBOL $A368 BONUS_X
FORCE_SYMBOL $A36A BonusDecided
FORCE_SYMBOL $A36D BONUS_T_COMPARE
FORCE_SYMBOL $A371 BONUS_T
FORCE_SYMBOL $A373 BonusDecided
FORCE_SYMBOL $A376 BONUS_R_COMPARE
FORCE_SYMBOL $A37A BONUS_R
FORCE_SYMBOL $A37C BonusDecided
FORCE_SYMBOL $A37F BONUS_A_COMPARE
FORCE_SYMBOL $A383 BONUS_A
FORCE_SYMBOL $A385 BonusDecided
FORCE_SYMBOL $A388 BONUS_SLOWER_COMPARE
FORCE_SYMBOL $A38C BONUS_SLOWER
FORCE_SYMBOL $A38E BonusDecided
FORCE_SYMBOL $A391 BONUS_SHOTMINUS_COMPARE
FORCE_SYMBOL $A395 BONUS_SHOTMINUS
FORCE_SYMBOL $A397 BonusDecided
FORCE_SYMBOL $A39A BONUS_SHOTPLUS_COMPARE
FORCE_SYMBOL $A39E BONUS_SHOTPLUS
FORCE_SYMBOL $A3A0 BonusDecided
FORCE_SYMBOL $A3A3 BONUS_FASTER_SHOT_COMPARE
FORCE_SYMBOL $A3A7 BONUS_FASTER_SHOT
FORCE_SYMBOL $A3A9 BonusDecided
FORCE_SYMBOL $A3AC BONUS_FASTER_COMPARE
FORCE_SYMBOL $A3B0 BONUS_FASTER
FORCE_SYMBOL $A3B2 BonusDecided
FORCE_SYMBOL $A3B5 BONUS_ARMOR_COMPARE
FORCE_SYMBOL $A3B9 BONUS_ARMOR
FORCE_SYMBOL $A3BB BonusDecided
FORCE_SYMBOL $A3BE BONUS_SHIELD_COMPARE
FORCE_SYMBOL $A3C2 BONUS_SHIELD
FORCE_SYMBOL $A3C4 BonusDecided
FORCE_SYMBOL $A3C7 BONUS_SCOOP_COMPARE
FORCE_SYMBOL $A3CB BONUS_SCOOP
FORCE_SYMBOL $A3CD BonusDecided
FORCE_SYMBOL $A3D0 BONUS_SHOT1_COMPARE
FORCE_SYMBOL $A3D4 BONUS_SHOT1
FORCE_SYMBOL $A3D6 BonusDecided
FORCE_SYMBOL $A3D9 BONUS_SHOT2_COMPARE
FORCE_SYMBOL $A3DD BONUS_SHOT2
FORCE_SYMBOL $A3DF BonusDecided
FORCE_SYMBOL $A3E2 BONUS_SHOT3_COMPARE
COMMENT_LINE $A3E6 todo enable bonus shot3
FORCE_SYMBOL $A3E9 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_DRUNKEN
FORCE_SYMBOL $A3ED BONUS_SHOT3
FORCE_SYMBOL $A3EF BonusDecided
FORCE_SYMBOL $A3F2 BONUS_MINESTORM_COMPARE
FORCE_SYMBOL $A3F6 BONUS_MINESTORM
FORCE_SYMBOL $A3F8 BonusDecided
FORCE_SYMBOL $A3FB BONUS_MULT2_COMPARE
FORCE_SYMBOL $A3FF BONUS_MULT2
FORCE_SYMBOL $A401 BonusDecided
FORCE_SYMBOL $A404 BONUS_MULT5_COMPARE
FORCE_SYMBOL $A408 BONUS_MULT5
FORCE_SYMBOL $A40A BonusDecided
FORCE_SYMBOL $A40D BONUS_BOMB_CASH_COMPARE
FORCE_SYMBOL $A411 difficulty
COMMENT $A414 try again - hopefully nomoney :-)
FORCE_SYMBOL $A418 BONUS_BOMB_CASH
FORCE_SYMBOL $A41A BonusDecided
FORCE_SYMBOL $A41D BONUS_BOMB_DIAMOND_COMPARE
FORCE_SYMBOL $A421 difficulty
FORCE_NO_SYMBOL $A424
COMMENT $A426 try again - hopefully nomoney :-)
COMMENT_LINE $A428 diamond bomb only above level 50
FORCE_SYMBOL $A428 levelCount
FORCE_NO_SYMBOL $A42B
FORCE_SYMBOL $A42F BONUS_BOMB_DIAMOND
FORCE_SYMBOL $A431 BonusDecided
FORCE_SYMBOL $A434 BONUS_TIMER_COMPARE
FORCE_SYMBOL $A438 BONUS_TIMER
FORCE_SYMBOL $A43A BonusDecided
FORCE_SYMBOL $A43D BONUS_SLOWER_SHOT_COMPARE
FORCE_SYMBOL $A441 BONUS_SLOWER_SHOT
FORCE_SYMBOL $A443 BonusDecided
FORCE_SYMBOL $A446 BONUS_MONEY_20_COMPARE
FORCE_SYMBOL $A44A difficulty
COMMENT $A44D try again - hopefully nomoney :-)
FORCE_SYMBOL $A451 BONUS_MONEY_20
FORCE_SYMBOL $A453 BonusDecided
FORCE_SYMBOL $A456 BONUS_MONEY_50_COMPARE
FORCE_SYMBOL $A45A difficulty
COMMENT $A45D try again - hopefully nomoney :-)
FORCE_SYMBOL $A461 BONUS_MONEY_50
FORCE_SYMBOL $A463 BonusDecided
FORCE_SYMBOL $A466 BONUS_CASH_DOUBLER_COMPARE
FORCE_SYMBOL $A46A difficulty
COMMENT $A46D try again - hopefully nomoney :-)
COMMENT_LINE $A471 cash double only above level 25
FORCE_SYMBOL $A473 levelCount
FORCE_NO_SYMBOL $A476
FORCE_SYMBOL $A47A BONUS_CASH_DOUBLER
FORCE_SYMBOL $A47E BONUS_SHOT_POWERUP_COMPARE
COMMENT $A482 only show power up bonus in non easy difficulty!
FORCE_SYMBOL $A482 difficulty
FORCE_NO_SYMBOL $A485
FORCE_SYMBOL $A489 random_seed
FORCE_NO_SYMBOL $A48F
FORCE_SYMBOL $A491 random_seed
FORCE_NO_SYMBOL $A494
FORCE_SYMBOL $A498 BONUS_SHOT_POWERUP
FORCE_SYMBOL $A49C BONUS_LIFE_COMPARE
FORCE_SYMBOL $A4A3 ACHIEVEMENT_FLAG_BYTE2_9LIVES
COMMENT $A4A5 5 cash
FORCE_SYMBOL $A4A7 difficulty
COMMENT $A4AA 5 cash
FORCE_SYMBOL $A4AC BONUS_EXTRA_LIFE
FORCE_SYMBOL $A4B0 BONUS_DRUNKEN_COMPARE
FORCE_SYMBOL $A4B4 difficulty
FORCE_NO_SYMBOL $A4B7
COMMENT $A4B9 t
COMMENT_LINE $A4BB drunken only above level 21
FORCE_SYMBOL $A4BB levelCount
FORCE_NO_SYMBOL $A4BE
FORCE_SYMBOL $A4C2 BONUS_DRUNKEN
FORCE_SYMBOL $A4C6 BONUS_AUTOFIRE_COMPARE
FORCE_SYMBOL $A4CA difficulty
FORCE_NO_SYMBOL $A4CD
COMMENT $A4CF t
COMMENT_LINE $A4D1 autofire only above level 75
FORCE_SYMBOL $A4D1 levelCount
FORCE_NO_SYMBOL $A4D4
FORCE_SYMBOL $A4DA BONUS_AUTOFIRE
COMMENT_LINE $A4DE default bonus - Money 5
FORCE_SYMBOL $A4DE difficulty
COMMENT $A4E1 try again - hopefully nomoney :-)
FORCE_SYMBOL $A4E5 BONUS_MONEY_5
FORCE_SYMBOL $A4E7 TYPE
FORCE_SYMBOL $A4E9 random_seed
FORCE_NO_SYMBOL $A4EF
FORCE_SYMBOL $A4F1 random_seed
FORCE_NO_SYMBOL $A4F4
FORCE_SYMBOL $A4F6 BONUS_ANIM_POSITION
FORCE_SYMBOL $A4F8 fallingBonusBehaviour
FORCE_SYMBOL $A4FB BEHAVIOUR
COMMENT_LINE $A4FE ******************************************************************
FORCE_SYMBOL $A4FF X_POS
FORCE_NO_SYMBOL $A50B
FORCE_NO_SYMBOL $A510
FORCE_NO_SYMBOL $A515
COMMENT $A51A double type
FORCE_SYMBOL $A51B rankDrop
FORCE_SYMBOL $A51E X_POS
COMMENT $A520 0 to 10
FORCE_SYMBOL $A520 TYPE
FORCE_SYMBOL $A522 BONUS_ANIM_POSITION
FORCE_SYMBOL $A524 fallingRankBehaviour
FORCE_SYMBOL $A527 BEHAVIOUR
COMMENT_LINE $A52A ******************************************************************
COMMENT $A52A bank = 3
COMMENT_LINE $A52A bank 2
COMMENT_LINE $A52A bank 2
COMMENT_LINE $A52A all letters start at the bottom left
COMMENT_LINE $A52A height of font is 8
COMMENT_LINE $A52A width is 4
COMMENT_LINE $A52A if commented out lines are used, the draw "returns" to its starting point
COMMENT_LINE $A52A the definition is conform to the clipping used - meaning
COMMENT_LINE $A52A each letter is divideable by a power of two
COMMENT_LINE $A52A in this case even all letters are dividable by "8" (see BLOWUPABCABC)
COMMENT_LINE $A52A list of all single vectorlists in this
COMMENT $A52A SPACE
COMMENT $A52C !
COMMENT $A52E SPACE
COMMENT $A530 SPACE
COMMENT $A532 SPACE
COMMENT $A534 SPACE
COMMENT $A536 SPACE
COMMENT $A538 SPACE
COMMENT $A53A SPACE
COMMENT $A53C SPACE
COMMENT $A53E SPACE
COMMENT $A540 SPACE
COMMENT $A542 SPACE
COMMENT $A544 SPACE
COMMENT $A546 .
COMMENT $A548 SPACE
COMMENT $A54A 0
COMMENT $A54C 1
COMMENT $A54E 2
COMMENT $A550 3
COMMENT $A552 4
COMMENT $A554 5
COMMENT $A556 6
COMMENT $A558 7
COMMENT $A55A 8
COMMENT $A55C 9
COMMENT $A55E SPACE
COMMENT $A560 SPACE
COMMENT $A562 SPACE
COMMENT $A564 SPACE
COMMENT $A566 SPACE
COMMENT $A568 SPACE
COMMENT $A56A SPACE
COMMENT $A56C A
COMMENT $A56E B
COMMENT $A570 C
COMMENT $A572 D
COMMENT $A574 E
COMMENT $A576 F
COMMENT $A578 G
COMMENT $A57A H
COMMENT $A57C I
COMMENT $A57E J
COMMENT $A580 K
COMMENT $A582 L
COMMENT $A584 M
COMMENT $A586 N
COMMENT $A588 O
COMMENT $A58A P
COMMENT $A58C Q
COMMENT $A58E R
COMMENT $A590 S
COMMENT $A592 T
COMMENT $A594 U
COMMENT $A596 V
COMMENT $A598 W
COMMENT $A59A X
COMMENT $A59C Y
COMMENT $A59E Z
COMMENT $A5A0 .
COMMENT $A5A2 SPACE
COMMENT $A5A4 !
COMMENT $A5A8 pattern, y, x
COMMENT $A5AB pattern, y, x
COMMENT $A5AE pattern, y, x
COMMENT $A5B1 pattern, y, x
COMMENT $A5B4 pattern, y, x
COMMENT $A5B7 pattern, y, x
COMMENT $A5BA pattern, y, x
COMMENT $A5BD pattern, y, x
COMMENT $A5C0 endmarker (high bit in pattern not set)
COMMENT $A5C1 pattern, y, x
COMMENT $A5C4 pattern, y, x
COMMENT $A5C7 pattern, y, x
COMMENT $A5CA pattern, y, x
COMMENT $A5CD pattern, y, x
COMMENT $A5D0 pattern, y, x
COMMENT $A5D3 pattern, y, x
COMMENT $A5D6 pattern, y, x
COMMENT $A5D9 endmarker (high bit in pattern not set)
COMMENT $A5DA pattern, y, x
COMMENT $A5DD pattern, y, x
COMMENT $A5E0 pattern, y, x
COMMENT $A5E3 pattern, y, x
COMMENT $A5E6 pattern, y, x
COMMENT $A5E9 pattern, y, x
COMMENT $A5EC pattern, y, x
COMMENT $A5EF pattern, y, x
COMMENT $A5F2 pattern, y, x
COMMENT $A5F5 endmarker (high bit in pattern not set)
COMMENT $A5F6 pattern, y, x
COMMENT $A5F9 pattern, y, x
COMMENT $A5FC pattern, y, x
COMMENT $A5FF pattern, y, x
COMMENT $A602 pattern, y, x
COMMENT $A605 pattern, y, x
COMMENT $A608 pattern, y, x
COMMENT $A60B endmarker (high bit in pattern not set)
COMMENT $A60C pattern, y, x
COMMENT $A60F pattern, y, x
COMMENT $A612 pattern, y, x
COMMENT $A615 pattern, y, x
COMMENT $A618 pattern, y, x
COMMENT $A61B pattern, y, x
COMMENT $A61E pattern, y, x
COMMENT $A621 pattern, y, x
COMMENT $A624 endmarker (high bit in pattern not set)
COMMENT $A625 pattern, y, x
COMMENT $A628 pattern, y, x
COMMENT $A62B pattern, y, x
COMMENT $A62E pattern, y, x
COMMENT $A631 pattern, y, x
COMMENT $A634 pattern, y, x
COMMENT $A637 endmarker (high bit in pattern not set)
COMMENT $A638 pattern, y, x
COMMENT $A63B pattern, y, x
COMMENT $A63E pattern, y, x
COMMENT $A641 pattern, y, x
COMMENT $A644 pattern, y, x
COMMENT $A647 pattern, y, x
COMMENT $A64A pattern, y, x
COMMENT $A64D pattern, y, x
COMMENT $A650 pattern, y, x
COMMENT $A653 pattern, y, x
COMMENT $A656 pattern, y, x
COMMENT $A659 endmarker (high bit in pattern not set)
COMMENT $A65A pattern, y, x
COMMENT $A65D pattern, y, x
COMMENT $A660 pattern, y, x
COMMENT $A663 pattern, y, x
COMMENT $A666 pattern, y, x
COMMENT $A669 pattern, y, x
COMMENT $A66C endmarker (high bit in pattern not set)
COMMENT $A66D pattern, y, x
COMMENT $A670 pattern, y, x
COMMENT $A673 pattern, y, x
COMMENT $A676 pattern, y, x
COMMENT $A679 pattern, y, x
COMMENT $A67C pattern, y, x
COMMENT $A67F endmarker (high bit in pattern not set)
COMMENT $A680 pattern, y, x
COMMENT $A683 pattern, y, x
COMMENT $A686 pattern, y, x
COMMENT $A689 pattern, y, x
COMMENT $A68C pattern, y, x
COMMENT $A68F pattern, y, x
COMMENT $A692 pattern, y, x
COMMENT $A695 endmarker (high bit in pattern not set)
COMMENT $A696 pattern, y, x
COMMENT $A699 pattern, y, x
COMMENT $A69C pattern, y, x
COMMENT $A69F pattern, y, x
COMMENT $A6A2 pattern, y, x
COMMENT $A6A5 pattern, y, x
COMMENT $A6A8 endmarker (high bit in pattern not set)
COMMENT $A6A9 pattern, y, x
COMMENT $A6AC pattern, y, x
COMMENT $A6AF pattern, y, x
COMMENT $A6B2 pattern, y, x
COMMENT $A6B5 endmarker (high bit in pattern not set)
COMMENT $A6B6 pattern, y, x
COMMENT $A6B9 pattern, y, x
COMMENT $A6BC pattern, y, x
COMMENT $A6BF pattern, y, x
COMMENT $A6C2 pattern, y, x
COMMENT $A6C5 endmarker (high bit in pattern not set)
COMMENT $A6C6 pattern, y, x
COMMENT $A6C9 pattern, y, x
COMMENT $A6CC pattern, y, x
COMMENT $A6CF pattern, y, x
COMMENT $A6D2 endmarker (high bit in pattern not set)
COMMENT $A6D3 pattern, y, x
COMMENT $A6D6 pattern, y, x
COMMENT $A6D9 pattern, y, x
COMMENT $A6DC pattern, y, x
COMMENT $A6DF pattern, y, x
COMMENT $A6E2 pattern, y, x
COMMENT $A6E5 pattern, y, x
COMMENT $A6E8 pattern, y, x
COMMENT $A6EB pattern, y, x
COMMENT $A6EE pattern, y, x
COMMENT $A6F1 endmarker (high bit in pattern not set)
COMMENT $A6F2 pattern, y, x
COMMENT $A6F5 pattern, y, x
COMMENT $A6F8 pattern, y, x
COMMENT $A6FB pattern, y, x
COMMENT $A6FE pattern, y, x
COMMENT $A701 pattern, y, x
COMMENT $A704 pattern, y, x
COMMENT $A707 endmarker (high bit in pattern not set)
COMMENT $A708 pattern, y, x
COMMENT $A70B pattern, y, x
COMMENT $A70E pattern, y, x
COMMENT $A711 pattern, y, x
COMMENT $A714 pattern, y, x
COMMENT $A717 pattern, y, x
COMMENT $A71A pattern, y, x
COMMENT $A71D pattern, y, x
COMMENT $A720 pattern, y, x
COMMENT $A723 pattern, y, x
COMMENT $A726 pattern, y, x
COMMENT $A729 pattern, y, x
COMMENT $A72C endmarker (high bit in pattern not set)
COMMENT $A72D pattern, y, x
COMMENT $A730 pattern, y, x
COMMENT $A733 pattern, y, x
COMMENT $A736 pattern, y, x
COMMENT $A739 pattern, y, x
COMMENT $A73C pattern, y, x
COMMENT $A73F pattern, y, x
COMMENT $A742 pattern, y, x
COMMENT $A745 endmarker (high bit in pattern not set)
COMMENT $A746 pattern, y, x
COMMENT $A749 pattern, y, x
COMMENT $A74C pattern, y, x
COMMENT $A74F pattern, y, x
COMMENT $A752 pattern, y, x
COMMENT $A755 pattern, y, x
COMMENT $A758 pattern, y, x
COMMENT $A75B pattern, y, x
COMMENT $A75E pattern, y, x
COMMENT $A761 pattern, y, x
COMMENT $A764 pattern, y, x
COMMENT $A767 endmarker (high bit in pattern not set)
COMMENT $A768 pattern, y, x
COMMENT $A76B pattern, y, x
COMMENT $A76E pattern, y, x
COMMENT $A771 pattern, y, x
COMMENT $A774 pattern, y, x
COMMENT $A777 endmarker (high bit in pattern not set)
COMMENT $A778 pattern, y, x
COMMENT $A77B pattern, y, x
COMMENT $A77E pattern, y, x
COMMENT $A781 pattern, y, x
COMMENT $A784 pattern, y, x
COMMENT $A787 pattern, y, x
COMMENT $A78A pattern, y, x
COMMENT $A78D endmarker (high bit in pattern not set)
COMMENT $A78E pattern, y, x
COMMENT $A791 pattern, y, x
COMMENT $A794 pattern, y, x
COMMENT $A797 pattern, y, x
COMMENT $A79A endmarker (high bit in pattern not set)
COMMENT $A79B pattern, y, x
COMMENT $A79E pattern, y, x
COMMENT $A7A1 pattern, y, x
COMMENT $A7A4 pattern, y, x
COMMENT $A7A7 pattern, y, x
COMMENT $A7AA pattern, y, x
COMMENT $A7AD endmarker (high bit in pattern not set)
COMMENT $A7AE pattern, y, x
COMMENT $A7B1 pattern, y, x
COMMENT $A7B4 pattern, y, x
COMMENT $A7B7 pattern, y, x
COMMENT $A7BA endmarker (high bit in pattern not set)
COMMENT $A7BB pattern, y, x
COMMENT $A7BE pattern, y, x
COMMENT $A7C1 pattern, y, x
COMMENT $A7C4 pattern, y, x
COMMENT $A7C7 pattern, y, x
COMMENT $A7CA pattern, y, x
COMMENT $A7CD endmarker (high bit in pattern not set)
COMMENT $A7CE pattern, y, x
COMMENT $A7D1 pattern, y, x
COMMENT $A7D4 pattern, y, x
COMMENT $A7D7 pattern, y, x
COMMENT $A7DA pattern, y, x
COMMENT $A7DD endmarker (high bit in pattern not set)
COMMENT $A7DE pattern, y, x
COMMENT $A7E1 pattern, y, x
COMMENT $A7E4 pattern, y, x
COMMENT $A7E7 pattern, y, x
COMMENT $A7EA pattern, y, x
COMMENT $A7ED endmarker (high bit in pattern not set)
COMMENT $A7EE pattern, y, x
COMMENT $A7F1 endmarker (high bit in pattern not set)
COMMENT $A7F2 pattern, y, x
COMMENT $A7F5 pattern, y, x
COMMENT $A7F8 pattern, y, x
COMMENT $A7FB pattern, y, x
COMMENT $A7FE pattern, y, x
COMMENT $A801 pattern, y, x
COMMENT $A804 pattern, y, x
COMMENT $A807 pattern, y, x
COMMENT $A80A endmarker (high bit in pattern not set)
COMMENT $A80B pattern, y, x
COMMENT $A80E pattern, y, x
COMMENT $A811 pattern, y, x
COMMENT $A814 pattern, y, x
COMMENT $A817 endmarker (high bit in pattern not set)
COMMENT $A818 pattern, y, x
COMMENT $A81B pattern, y, x
COMMENT $A81E pattern, y, x
COMMENT $A821 pattern, y, x
COMMENT $A824 pattern, y, x
COMMENT $A827 pattern, y, x
COMMENT $A82A pattern, y, x
COMMENT $A82D endmarker (high bit in pattern not set)
COMMENT $A82E pattern, y, x
COMMENT $A831 pattern, y, x
COMMENT $A834 pattern, y, x
COMMENT $A837 pattern, y, x
COMMENT $A83A pattern, y, x
COMMENT $A83D pattern, y, x
COMMENT $A840 pattern, y, x
COMMENT $A843 pattern, y, x
COMMENT $A846 pattern, y, x
COMMENT $A849 pattern, y, x
COMMENT $A84C endmarker (high bit in pattern not set)
COMMENT $A84D pattern, y, x
COMMENT $A850 pattern, y, x
COMMENT $A853 pattern, y, x
COMMENT $A856 pattern, y, x
COMMENT $A859 pattern, y, x
COMMENT $A85C pattern, y, x
COMMENT $A85F endmarker (high bit in pattern not set)
COMMENT $A860 pattern, y, x
COMMENT $A863 pattern, y, x
COMMENT $A866 pattern, y, x
COMMENT $A869 pattern, y, x
COMMENT $A86C pattern, y, x
COMMENT $A86F pattern, y, x
COMMENT $A872 endmarker (high bit in pattern not set)
COMMENT $A873 pattern, y, x
COMMENT $A876 pattern, y, x
COMMENT $A879 pattern, y, x
COMMENT $A87C pattern, y, x
COMMENT $A87F pattern, y, x
COMMENT $A882 pattern, y, x
COMMENT $A885 pattern, y, x
COMMENT $A888 endmarker (high bit in pattern not set)
COMMENT $A889 pattern, y, x
COMMENT $A88C pattern, y, x
COMMENT $A88F pattern, y, x
COMMENT $A892 endmarker (high bit in pattern not set)
COMMENT $A893 pattern, y, x
COMMENT $A896 pattern, y, x
COMMENT $A899 pattern, y, x
COMMENT $A89C pattern, y, x
COMMENT $A89F pattern, y, x
COMMENT $A8A2 pattern, y, x
COMMENT $A8A5 pattern, y, x
COMMENT $A8A8 endmarker (high bit in pattern not set)
COMMENT $A8A9 pattern, y, x
COMMENT $A8AC pattern, y, x
COMMENT $A8AF pattern, y, x
COMMENT $A8B2 pattern, y, x
COMMENT $A8B5 pattern, y, x
COMMENT $A8B8 pattern, y, x
COMMENT $A8BB endmarker (high bit in pattern not set)
COMMENT $A8BC pattern, y, x
COMMENT $A8BF pattern, y, x
COMMENT $A8C2 pattern, y, x
COMMENT $A8C5 pattern, y, x
COMMENT $A8C8 pattern, y, x
COMMENT $A8CB endmarker (high bit in pattern not set)
COMMENT_LINE $0000 .....................................................
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte?
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 Advance to next point in list
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT $0000 Get next pattern byte
COMMENT $0000 Wait for T1 to time out
COMMENT_LINE $0000 NOP 2 ;Wait a moment more
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Go back if high bit of pattern is set
COMMENT_LINE $0000 .....................................................
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 Advance to next point in list
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Advance to next point in list
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 .....................................................
FORCE_NO_SYMBOL $A8CC
FORCE_SYMBOL $A8CF VIA_port_b
FORCE_SYMBOL $A8D1 VIA_port_b
FORCE_SYMBOL $A8D3 calibrationValueString
FORCE_SYMBOL $A8D6 additionalFlags
FORCE_NO_SYMBOL $A8D9
FORCE_NO_SYMBOL $A8DD
FORCE_SYMBOL $A8DF VIA_port_b
FORCE_NO_SYMBOL $A8E1
FORCE_SYMBOL $A8E4 VIA_port_a
FORCE_SYMBOL $A8E6 VIA_port_b
COMMENT_LINE $A8E9 .....................................................
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next pattern byte
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 ,X ;Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $A8E9 .....................................................
FORCE_NO_SYMBOL $A8E9
FORCE_SYMBOL $A8EB VIA_port_b
COMMENT $A8ED 2 cycles
FORCE_NO_SYMBOL $A8ED
FORCE_SYMBOL $A8F0 VIA_port_a
FORCE_SYMBOL $A8F4 VIA_port_b
COMMENT_LINE $A8F7 .......................................................................................................
COMMENT_LINE $A8F7 print string (list)
COMMENT_LINE $A8F7 in gameScale positioning scale
COMMENT_LINE $A8F7 in stringScale vector scale
COMMENT_LINE $A8F7 in U pointer to string struct (posy,posx, text,$80) - end with 0,0 = y,x
COMMENT_LINE $A8F7 starts with zeroing
COMMENT_LINE $A8F7 no end zeroing!
FORCE_NO_SYMBOL $A8F7
COMMENT $A8F9 /BLANK low and /ZERO low
FORCE_SYMBOL $A8F9 VIA_cntl
COMMENT_LINE $A8FB calibrate Text
FORCE_NO_SYMBOL $A8FB
FORCE_SYMBOL $A8FE VIA_port_b
FORCE_SYMBOL $A901 VIA_port_b
FORCE_SYMBOL $A903 calibrationValueString
FORCE_SYMBOL $A906 additionalFlags
FORCE_NO_SYMBOL $A909
FORCE_NO_SYMBOL $A90D
FORCE_SYMBOL $A90F VIA_port_b
COMMENT $A911 2 cycles
FORCE_NO_SYMBOL $A911
FORCE_SYMBOL $A914 VIA_port_a
FORCE_SYMBOL $A916 VIA_port_b
FORCE_NO_SYMBOL $A91A
FORCE_SYMBOL $A91C VIA_port_b
COMMENT $A91E 2 cycles
FORCE_NO_SYMBOL $A91E
FORCE_SYMBOL $A921 VIA_port_a
FORCE_SYMBOL $A925 VIA_port_b
COMMENT_LINE $A927 calibrate Text
FORCE_SYMBOL $A927 gameScale
FORCE_SYMBOL $A92A VIA_t1_cnt_lo
COMMENT $A92E jsr Moveto_d
COMMENT $A92E Store Y in D/A register
FORCE_SYMBOL $A92E VIA_port_a
COMMENT $A930 Blank low, zero high?
FORCE_NO_SYMBOL $A930
FORCE_SYMBOL $A932 VIA_cntl
COMMENT $A935 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $A935 VIA_port_b
COMMENT $A937 y must be set more than xx cycles on some vectrex
COMMENT $A938 Disable mux
FORCE_SYMBOL $A938 VIA_port_b
COMMENT $A93A Store X in D/A register
FORCE_SYMBOL $A93A VIA_port_a
COMMENT $A93C enable timer
FORCE_SYMBOL $A93C VIA_t1_cnt_hi
FORCE_SYMBOL $A93E stringScale
FORCE_SYMBOL $A941 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $A943
FORCE_SYMBOL $A945 VIA_int_flags
FORCE_NO_SYMBOL $A94B
COMMENT_LINE $A950 .....................................................
FORCE_NO_SYMBOL $A950
COMMENT $A952 /BLANK low and /ZERO low
FORCE_SYMBOL $A952 VIA_cntl
COMMENT_LINE $A954 calibrate Text
FORCE_NO_SYMBOL $A954
FORCE_SYMBOL $A957 VIA_port_b
FORCE_SYMBOL $A95A VIA_port_b
FORCE_SYMBOL $A95C calibrationValueString
FORCE_SYMBOL $A95F additionalFlags
FORCE_NO_SYMBOL $A962
FORCE_NO_SYMBOL $A966
FORCE_SYMBOL $A968 VIA_port_b
COMMENT $A96A 2 cycles
FORCE_NO_SYMBOL $A96A
FORCE_SYMBOL $A96D VIA_port_a
FORCE_SYMBOL $A96F VIA_port_b
FORCE_NO_SYMBOL $A973
FORCE_SYMBOL $A975 VIA_port_b
COMMENT $A977 2 cycles
FORCE_NO_SYMBOL $A977
FORCE_SYMBOL $A97A VIA_port_a
FORCE_SYMBOL $A97E VIA_port_b
COMMENT_LINE $A980 calibrate Text
FORCE_SYMBOL $A980 gameScale
FORCE_SYMBOL $A983 VIA_t1_cnt_lo
FORCE_SYMBOL $A987 Moveto_d
FORCE_SYMBOL $A98A stringScale
FORCE_SYMBOL $A98D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $A991
COMMENT_LINE $A996 .....................................................
COMMENT_LINE $A996 prints HERE
COMMENT_LINE $A996 string in U
COMMENT_LINE $A996 as Vector string
COMMENT_LINE $A996 scal = beforehand
COMMENT $A997 font starts at 32, *2 because of 16 bit pointer
COMMENT $A9A3 Get next coordinate pair
FORCE_NO_SYMBOL $A9A3
COMMENT $A9A5 Send Y to A/D
FORCE_SYMBOL $A9A5 VIA_port_a
COMMENT $A9A7 Enable mux
FORCE_SYMBOL $A9A7 VIA_port_b
COMMENT $A9A9 Get pattern byte
FORCE_NO_SYMBOL $A9A9
COMMENT $A9AB Disable mux
FORCE_SYMBOL $A9AB VIA_port_b
COMMENT $A9AD Send X to A/D
FORCE_SYMBOL $A9AD VIA_port_a
FORCE_NO_SYMBOL $A9AF
COMMENT $A9B1 Store pattern in shift register
FORCE_SYMBOL $A9B1 VIA_shift_reg
COMMENT $A9B3 Clear T1H
FORCE_SYMBOL $A9B3 VIA_t1_cnt_hi
COMMENT $A9B5 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $A9B5
COMMENT_LINE $A9B7 0 is ok
COMMENT $A9B7 Advance to next point in list
FORCE_NO_SYMBOL $A9B7
COMMENT $A9B9 Wait for T1 to time out
FORCE_SYMBOL $A9B9 VIA_int_flags
COMMENT $A9BE Get next pattern byte
FORCE_NO_SYMBOL $A9BE
COMMENT $A9C2 Clear shift register (blank output)
FORCE_SYMBOL $A9C2 VIA_shift_reg
COMMENT $A9C4 Get next coordinate pair
FORCE_NO_SYMBOL $A9C4
COMMENT $A9C6 Send Y to A/D
FORCE_SYMBOL $A9C6 VIA_port_a
COMMENT $A9C8 Enable mux
FORCE_SYMBOL $A9C8 VIA_port_b
COMMENT $A9CA Get pattern byte
FORCE_NO_SYMBOL $A9CA
COMMENT $A9CC Disable mux
FORCE_SYMBOL $A9CC VIA_port_b
COMMENT $A9CE Send X to A/D
FORCE_SYMBOL $A9CE VIA_port_a
FORCE_NO_SYMBOL $A9D0
COMMENT $A9D2 Store pattern in shift register
FORCE_SYMBOL $A9D2 VIA_shift_reg
COMMENT $A9D4 Clear T1H
FORCE_SYMBOL $A9D4 VIA_t1_cnt_hi
COMMENT $A9D6 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $A9D6
COMMENT_LINE $A9D8 0 is ok
COMMENT $A9D8 Advance to next point in list
FORCE_NO_SYMBOL $A9D8
COMMENT $A9DA Wait for T1 to time out
FORCE_SYMBOL $A9DA VIA_int_flags
COMMENT $A9DF Get next pattern byte
FORCE_NO_SYMBOL $A9DF
COMMENT $A9E1 Go back if high bit of pattern is set
COMMENT $A9E3 Clear shift register (blank output)
FORCE_SYMBOL $A9E3 VIA_shift_reg
COMMENT_LINE $A9E8 .....................................................
COMMENT $A9E8 font starts at 32, *2 because of 16 bit pointer
COMMENT $A9F4 Get next coordinate pair
FORCE_NO_SYMBOL $A9F4
COMMENT $A9F6 Send Y to A/D
FORCE_SYMBOL $A9F6 VIA_port_a
COMMENT $A9F8 Enable mux
FORCE_SYMBOL $A9F8 VIA_port_b
COMMENT $A9FA Get pattern byte
FORCE_NO_SYMBOL $A9FA
COMMENT $A9FC Disable mux
FORCE_SYMBOL $A9FC VIA_port_b
COMMENT $A9FE Send X to A/D
FORCE_SYMBOL $A9FE VIA_port_a
FORCE_NO_SYMBOL $AA00
COMMENT $AA02 Store pattern in shift register
FORCE_SYMBOL $AA02 VIA_shift_reg
COMMENT $AA04 Clear T1H
FORCE_SYMBOL $AA04 VIA_t1_cnt_hi
COMMENT $AA06 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $AA06
COMMENT_LINE $AA08 0 is ok
COMMENT $AA08 Wait for T1 to time out
FORCE_SYMBOL $AA08 VIA_int_flags
COMMENT $AA0D Advance to next point in list
FORCE_NO_SYMBOL $AA0D
COMMENT $AA0F Get next pattern byte
FORCE_NO_SYMBOL $AA0F
COMMENT $AA13 Clear shift register (blank output)
FORCE_SYMBOL $AA13 VIA_shift_reg
COMMENT $AA15 Get next coordinate pair
FORCE_NO_SYMBOL $AA15
COMMENT $AA17 Send Y to A/D
FORCE_SYMBOL $AA17 VIA_port_a
COMMENT $AA19 Enable mux
FORCE_SYMBOL $AA19 VIA_port_b
COMMENT $AA1B Get pattern byte
FORCE_NO_SYMBOL $AA1B
COMMENT $AA1D Disable mux
FORCE_SYMBOL $AA1D VIA_port_b
COMMENT $AA1F Send X to A/D
FORCE_SYMBOL $AA1F VIA_port_a
FORCE_NO_SYMBOL $AA21
COMMENT $AA23 Store pattern in shift register
FORCE_SYMBOL $AA23 VIA_shift_reg
COMMENT $AA25 Clear T1H
FORCE_SYMBOL $AA25 VIA_t1_cnt_hi
COMMENT_LINE $AA27 LDA      #$40                         ;B-reg = T1 interrupt bit
COMMENT_LINE $AA27 0 is ok
COMMENT_LINE $AA27 LF425_lg\?
COMMENT_LINE $AA27 BITA     >VIA_int_flags               ;Wait for T1 to time out
COMMENT_LINE $AA27 BEQ      LF425_lg\?
COMMENT $AA27 Advance to next point in list
FORCE_NO_SYMBOL $AA27
COMMENT $AA29 Get next coordinate pair
FORCE_NO_SYMBOL $AA29
FORCE_NO_SYMBOL $AA2B
COMMENT_LINE $AA33 LDA      ,X                           ;Get next pattern byte
COMMENT_LINE $AA33 BLE      Draw_VLp_lessGap_1\?           ;Go back if high bit of pattern is set
COMMENT $AA33 Clear shift register (blank output)
FORCE_SYMBOL $AA33 VIA_shift_reg
COMMENT_LINE $AA37 .....................................................
COMMENT_LINE $AA37 bank 2
COMMENT_LINE $AA37 bank 2 when used
COMMENT_LINE $AA37 horizontal multi shots
COMMENT_LINE $AA37 all shots are drawn from the shot y,x pos
COMMENT_LINE $AA37 as "middle upper" point (drawn downwards)
COMMENT_LINE $AA37 for all Macros
COMMENT_LINE $AA37 register A always must contain 0 on entry
COMMENT_LINE $AA37 register B must be = for the correct Y movement!
COMMENT_LINE $AA37 ...............................
COMMENT_LINE $AA37 10 scale is base
COMMENT_LINE $AA37 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 this is actually the same,
COMMENT_LINE $0000 since y movement is determined by register A
COMMENT_LINE $0000 which must be = by the callee
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 in b zero, in a left strength
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send Y to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 x 0
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 this is actually the same,
COMMENT_LINE $0000 since y movement is determined by register A
COMMENT_LINE $0000 which must be = by the callee
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send Y to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send Y to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 std      <VIA_port_b                  ;Enable mux
COMMENT $0000 Enable mux
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 std      <VIA_port_b                  ;Enable mux
COMMENT_LINE $0000 cranky needs split
COMMENT $0000 Enable mux
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT_LINE $0000 sta      <VIA_port_b                  ;Enable mux
COMMENT_LINE $0000 stb      <VIA_port_a                  ;Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Clear T1H
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send Y to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;; FOUR SHOTS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 lda #usedScale;2
COMMENT_LINE $0000 sta <VIA_t1_cnt_lo;4
COMMENT_LINE $0000 first half of four bullets drawn, now go back
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 DRAW_PLAYER_SHOT_4_CONT  SCALE_SCOOPIE_SHOT
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;; THREE SHOTS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 wait some cycles
COMMENT_LINE $0000 nop 10
COMMENT_LINE $0000 wait some cycles
COMMENT_LINE $0000 nop 10
COMMENT_LINE $0000 wait some cycles
COMMENT_LINE $0000 nop 10
COMMENT_LINE $0000 wait some cycles
COMMENT_LINE $0000 nop 10
COMMENT_LINE $0000 wait some cycles
COMMENT_LINE $0000 nop 10
COMMENT_LINE $0000 doesn't matter
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 lda      #SCALE_PLAYER_SHOT
COMMENT_LINE $0000 sta      VIA_t1_cnt_lo
COMMENT_LINE $0000 lda      #-PLAYER_SHOT_LENGTH
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;; TWO SHOTS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 lda      #SCALE_PLAYER_SHOT
COMMENT_LINE $0000 sta      VIA_t1_cnt_lo
COMMENT_LINE $0000 lda      #-(PLAYER_SHOT_LENGTH /2)
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;; ONE SHOTS   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 doesn't matter
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 lda      #SCALE_PLAYER_SHOT
COMMENT_LINE $0000 sta      VIA_t1_cnt_lo
COMMENT_LINE $0000 lda      #-PLAYER_SHOT_LENGTH
COMMENT $0000 corrected
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;; ONE SHOTS   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 ensure 0 so a dec works ok
COMMENT_LINE $0000 down left/2
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 4 Clear T1H
COMMENT_LINE $0000 RIGHT
COMMENT $0000 4 Send Y to A/D
COMMENT $0000 4 Enable mux
COMMENT $0000 6 Disable mux
COMMENT $0000 4 Send X to A/D
COMMENT $0000 4 Clear T1H
COMMENT_LINE $0000 up left/2
COMMENT $0000 4 Enable mux
COMMENT $0000 2
COMMENT $0000 2
COMMENT $0000 6 Disable mux
COMMENT $0000 4 Send X to A/D
COMMENT $0000 2
COMMENT $0000 4 Clear T1H
COMMENT $0000 2
COMMENT $0000 4 Store pattern in shift register
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ..
COMMENT_LINE $0000 down left/2
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 4 Clear T1H
COMMENT_LINE $0000 RIGHT
COMMENT $0000 4 Send Y to A/D
COMMENT $0000 4 Enable mux
COMMENT $0000 6 Disable mux
COMMENT $0000 4 Send X to A/D
COMMENT $0000 4 Clear T1H
COMMENT_LINE $0000 up left/2
COMMENT $0000 4 Enable mux
COMMENT $0000 2
COMMENT $0000 2
COMMENT $0000 6 Disable mux
COMMENT $0000 4 Send X to A/D
COMMENT $0000 2
COMMENT $0000 4 Clear T1H
COMMENT $0000 2
COMMENT $0000 4 Store pattern in shift register
COMMENT_LINE $0000 ..
COMMENT_LINE $0000 down left/2
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 4 Clear T1H
COMMENT_LINE $0000 RIGHT
COMMENT $0000 4 Send Y to A/D
COMMENT $0000 4 Enable mux
COMMENT $0000 6 Disable mux
COMMENT $0000 4 Send X to A/D
COMMENT $0000 4 Clear T1H
COMMENT_LINE $0000 up left/2
COMMENT $0000 4 Enable mux
COMMENT $0000 2
COMMENT $0000 2
COMMENT $0000 6 Disable mux
COMMENT $0000 4 Send X to A/D
COMMENT $0000 2
COMMENT $0000 4 Clear T1H
COMMENT $0000 2
COMMENT $0000 4 Store pattern in shift register
COMMENT_LINE $0000 ..
COMMENT_LINE $0000 ...............................
COMMENT $0000 double -1 - so gamescale $80 is not "fucked"
COMMENT_LINE $0000 subb #10
COMMENT $0000 otherwise laser always above enemey
COMMENT_LINE $0000 laser go on
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 waitDoneLazer1\?
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 subb #10
COMMENT $0000 otherwise laser always above enemey
COMMENT_LINE $0000 laser go on
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 waitDoneLazer1\?
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $AA37 Bank 2
COMMENT_LINE $AA37 do special "optimized" macros for
COMMENT_LINE $AA37 shot 4
COMMENT_LINE $AA37 with "special" fixed register values!
COMMENT_LINE $AA37 I<----*
COMMENT_LINE $AA37 I   1   1   1
COMMENT_LINE $AA37 I  /I  /I  /I
COMMENT_LINE $AA37 I / I / I / I
COMMENT_LINE $AA37 V   V   V   V from here to "*"
COMMENT_LINE $AA37 DRAW 4 times DOWN
COMMENT_LINE $AA37 MOVE 3 times UP/RIGHT
COMMENT_LINE $AA37 MOVE 1 time LEFT *3/2
COMMENT_LINE $AA37 MOVE 1 time UP/LEFT * 3/2
COMMENT_LINE $AA37 optimize shots, so that
COMMENT_LINE $AA37 DOWN and UP/RIGHT are optimally drawn
COMMENT_LINE $AA37 for DOWN Y poke to VIA_B = 0 *256 + -_4_PLAYER_SHOT_LENGTH
COMMENT_LINE $AA37 for DOWN X poke to VIA_B = 1 *256 + 0
COMMENT_LINE $AA37 for UP Y poke to VIA_B =    0 *256 + _4_PLAYER_SHOT_LENGTH
COMMENT_LINE $AA37 for RIGHT X poke to VIA_B = 1 *256 + _4_PLAYER_SHOT_LENGTH
COMMENT_LINE $AA37 first try below does 1300 cycles
COMMENT_LINE $AA37 a few can probably more squeezed out!
COMMENT_LINE $AA37 X = $0100, than ;
COMMENT_LINE $AA37 INC      <VIA_port_b                  ;Disable mux
COMMENT_LINE $AA37 STA      <VIA_port_a                  ;Send X to A/D
COMMENT_LINE $AA37 6+6
COMMENT_LINE $AA37 can be reduced to
COMMENT_LINE $AA37 5
COMMENT_LINE $AA37 stx <VIA_port_b
COMMENT_LINE $AA37 all shots are drawn from the shot y,x pos
COMMENT_LINE $AA37 as "middle upper" point (drawn downwards)
COMMENT_LINE $AA37 for all Macros
COMMENT_LINE $AA37 register A always must contain 0 on entry
COMMENT_LINE $AA37 register B must be = for the correct Y movement!
COMMENT_LINE $AA37 ...............................
COMMENT_LINE $AA37 10 scale is base
COMMENT_LINE $0000 y = 2x ldd #1*256+lo(-_4_PLAYER_SHOT_LENGTH_32)
COMMENT_LINE $0000 u = 3x ldd #1*256+lo(_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $0000 x = 4x ldx #1*256+lo(_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;; FOUR SHOTS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 std      <VIA_port_b
COMMENT_LINE $0000 only for very cranky!
COMMENT_LINE $0000 std      <VIA_port_b
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 ...............................
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT $0000 moved from "main" to delay between port bpokes
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 position neutral-
COMMENT_LINE $0000 if for all shots equal
COMMENT_LINE $0000 than this can be kept in player shot
COMMENT_LINE $0000 18 cycles saved
COMMENT $0000 lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 a = 0;
COMMENT_LINE $0000 b = next y movement
COMMENT_LINE $0000 -> d can allways first be stored to VIA_B
COMMENT_LINE $0000 a starts with 0, since first y move is o (only LEFT)
COMMENT_LINE $0000 ...............................
COMMENT_LINE $0000 cranky reset A
COMMENT $0000 lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $0000 sta <VIA_port_b
COMMENT_LINE $0000 nop 3
COMMENT $0000 ** _4_SCALE_SCOOPIE_SHOT
COMMENT_LINE $0000 ...............................
COMMENT $0000 lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $0000 sta <VIA_port_b
COMMENT_LINE $0000 nop 3
COMMENT $0000 ** _4_SCALE_SCOOPIE_SHOT
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 include "playerShot3.asm"
COMMENT_LINE $AA37 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $AA37 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $AA37 new list object to U
COMMENT_LINE $AA37 leaves with flags = to result
COMMENT_LINE $AA37 (positive = not successfull) ROM
COMMENT_LINE $AA37 negative = successfull RAM
COMMENT_LINE $AA37 destroys d, u
FORCE_SYMBOL $AA37 playershotlist_empty_head
FORCE_SYMBOL $AA3A OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $AA40 set the new empty head
COMMENT $AA40 the next in out empty list will be the new
FORCE_SYMBOL $AA40 NEXT_PLAYERSHOT_OBJECT
COMMENT $AA42 head of our empty list
FORCE_SYMBOL $AA42 playershotlist_empty_head
COMMENT_LINE $AA45 load last of current object list
COMMENT_LINE $AA45 the old head is always our next
FORCE_SYMBOL $AA45 playershotlist_objects_head
FORCE_SYMBOL $AA48 NEXT_PLAYERSHOT_OBJECT
COMMENT_LINE $AA4A newobject is always head
FORCE_SYMBOL $AA4A playershotlist_objects_head
COMMENT $AA4D and remember that we created a new object
FORCE_SYMBOL $AA4D playerShotCount
COMMENT_LINE $AA51 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $AA51 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $AA51 playerShotCount
FORCE_SYMBOL $AA54 playerMaxShotInAir
COMMENT_LINE $AA5B make sure only one laser is available
COMMENT_LINE $AA5B redundant checkking though :-(
FORCE_SYMBOL $AA5B playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $AA5E
COMMENT $AA62 only 1 lazer allowed at one time!
COMMENT $AA67 "create" (or rather get) new object
COMMENT $AA69 pointer to new object now in X also
FORCE_NO_SYMBOL $AA69
FORCE_SYMBOL $AA6B OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $AA73 playSoundFlags
FORCE_NO_SYMBOL $AA76
COMMENT $AA7A BomberShotData
FORCE_NO_SYMBOL $AA7A
FORCE_SYMBOL $AA7D sfx_pointer_3
COMMENT_LINE $AA80 copy and initialze new enemy
FORCE_NO_SYMBOL $AA80
FORCE_SYMBOL $AA82 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $AA85
FORCE_NO_SYMBOL $AA89
FORCE_NO_SYMBOL $AA8D
FORCE_NO_SYMBOL $AA93
FORCE_NO_SYMBOL $AA99
COMMENT_LINE $AA9F assuming 4 bullets
FORCE_SYMBOL $AA9F scoopEnemy1
COMMENT_LINE $AAA5 really an active scoopy?
FORCE_SYMBOL $AAA5 BEHAVIOUR
COMMENT $AAA7 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $AAA7
FORCE_NO_SYMBOL $AAAD
FORCE_SYMBOL $AAAF scoopEnemy2
COMMENT_LINE $AAB5 really an active scoopy?
FORCE_SYMBOL $AAB5 BEHAVIOUR
COMMENT $AAB7 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $AAB7
FORCE_NO_SYMBOL $AABD
FORCE_SYMBOL $AABF SCOOP_SHOTS
FORCE_SYMBOL $AAC1 SHOT_RADIUS4
FORCE_SYMBOL $AAC3 SHOT_RADIUS
FORCE_SYMBOL $AAC5 fourPlayerShotBehaviour
FORCE_SYMBOL $AACA scoopEnemy1
COMMENT_LINE $AAD0 really an active scoopy?
FORCE_SYMBOL $AAD0 BEHAVIOUR
COMMENT $AAD2 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $AAD2
FORCE_NO_SYMBOL $AAD8
FORCE_SYMBOL $AADA scoopEnemy2
COMMENT_LINE $AAE0 really an active scoopy?
FORCE_SYMBOL $AAE0 BEHAVIOUR
COMMENT $AAE2 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $AAE2
FORCE_NO_SYMBOL $AAE8
FORCE_SYMBOL $AAEA SCOOP_SHOTS
FORCE_SYMBOL $AAEC SHOT_RADIUS1
FORCE_SYMBOL $AAEE SHOT_RADIUS
FORCE_SYMBOL $AAF0 onePlayerShotBehaviour
FORCE_SYMBOL $AAF5 scoopEnemy1
COMMENT_LINE $AAFB really an active scoopy?
FORCE_SYMBOL $AAFB BEHAVIOUR
COMMENT $AAFD enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $AAFD
FORCE_NO_SYMBOL $AB03
FORCE_SYMBOL $AB05 scoopEnemy2
COMMENT_LINE $AB0B really an active scoopy?
FORCE_SYMBOL $AB0B BEHAVIOUR
COMMENT $AB0D enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $AB0D
FORCE_NO_SYMBOL $AB13
FORCE_SYMBOL $AB15 SCOOP_SHOTS
FORCE_SYMBOL $AB17 SHOT_RADIUS2
FORCE_SYMBOL $AB19 SHOT_RADIUS
FORCE_SYMBOL $AB1B twoPlayerShotBehaviour
FORCE_SYMBOL $AB20 scoopEnemy1
COMMENT_LINE $AB26 really an active scoopy?
FORCE_SYMBOL $AB26 BEHAVIOUR
COMMENT $AB28 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $AB28
FORCE_NO_SYMBOL $AB2E
FORCE_SYMBOL $AB30 scoopEnemy2
COMMENT_LINE $AB36 really an active scoopy?
FORCE_SYMBOL $AB36 BEHAVIOUR
COMMENT $AB38 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $AB38
FORCE_NO_SYMBOL $AB3E
FORCE_SYMBOL $AB40 SCOOP_SHOTS
FORCE_SYMBOL $AB42 SHOT_RADIUS3
FORCE_SYMBOL $AB44 SHOT_RADIUS
FORCE_SYMBOL $AB46 threePlayerShotBehaviour
FORCE_SYMBOL $AB49 BEHAVIOUR
FORCE_SYMBOL $AB4B playerXpos
COMMENT $AB4E pos $80 is impossible for a shot!
FORCE_SYMBOL $AB4E SHOT_START_POSITION_Y
COMMENT $AB50 save start pos
FORCE_SYMBOL $AB50 Y_POS
FORCE_SYMBOL $AB53 Y_POS16
COMMENT_LINE $AB56 scoopies stay at "4" shots
FORCE_SYMBOL $AB56 scoopEnemy1
COMMENT_LINE $AB5C really an active scoopy?
FORCE_SYMBOL $AB5C BEHAVIOUR
COMMENT $AB5E enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $AB5E
COMMENT $AB64 five bullets counts as a "1" shot -> discard after hit
FORCE_NO_SYMBOL $AB64
FORCE_SYMBOL $AB66 scoopEnemy2
COMMENT_LINE $AB6C really an active scoopy?
FORCE_SYMBOL $AB6C BEHAVIOUR
COMMENT $AB6E enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $AB6E
COMMENT $AB74 five bullets counts as a "1" shot -> discard after hit
FORCE_NO_SYMBOL $AB74
FORCE_SYMBOL $AB76 SCOOP_SHOTS
FORCE_SYMBOL $AB78 SHOT_RADIUS5
FORCE_SYMBOL $AB7A SHOT_RADIUS
FORCE_SYMBOL $AB7C fivePlayerShotBehaviour
COMMENT_LINE $AB81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $AB81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $AB81 scoopEnemy1
COMMENT_LINE $AB87 really an active scoopy?
FORCE_SYMBOL $AB87 BEHAVIOUR
COMMENT $AB89 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $AB89
COMMENT $AB8F lazer bullets counts as a "1" shot -> discard after hit
FORCE_NO_SYMBOL $AB8F
FORCE_SYMBOL $AB91 scoopEnemy2
COMMENT_LINE $AB97 really an active scoopy?
FORCE_SYMBOL $AB97 BEHAVIOUR
COMMENT $AB99 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $AB99
COMMENT $AB9F lazer bullets counts as a "1" shot -> discard after hit
FORCE_NO_SYMBOL $AB9F
FORCE_SYMBOL $ABA1 SCOOP_SHOTS
FORCE_SYMBOL $ABA3 SHOT_RADIUS6
FORCE_SYMBOL $ABA5 SHOT_RADIUS
FORCE_SYMBOL $ABA7 lazerPlayerShotBehaviour
FORCE_SYMBOL $ABAA BEHAVIOUR
FORCE_SYMBOL $ABAC playerXpos
COMMENT $ABAF pos $80 is impossible for a shot!
FORCE_SYMBOL $ABAF SHOT_START_POSITION_Y
COMMENT $ABB1 save start pos
FORCE_SYMBOL $ABB1 Y_POS
FORCE_SYMBOL $ABB3 LAZER_WOBBLE
COMMENT $ABB5 timer 10 - 10 rounds lazer -> 20 HP
FORCE_NO_SYMBOL $ABB5
FORCE_SYMBOL $ABB7 LAZER_TIMER
COMMENT_LINE $ABBA this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $ABBA it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $ABBA sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 called when player shot leaves the screen
COMMENT_LINE $0000 in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $0000 destroys x, y
COMMENT_LINE $0000 sets u to pointer of next object in linked list (might be the "return" structure)
COMMENT_LINE $0000 this version is called at the end of an explosion or at the
COMMENT_LINE $0000 end of a score display, called by "behaviours"
COMMENT_LINE $0000 and thus the "return" is the call of the next object thru U stack
FORCE_SYMBOL $ABBA gameScale
FORCE_SYMBOL $ABBD VIA_t1_cnt_lo
FORCE_NO_SYMBOL $ABBF
COMMENT $ABC1 /BLANK low and /ZERO low
FORCE_SYMBOL $ABC1 VIA_cntl
FORCE_NO_SYMBOL $ABC3
FORCE_SYMBOL $ABC6 VIA_port_b
COMMENT_LINE $ABC8 removeThisPlayerShot:                                     ;#isfunction
COMMENT $ABC8 x -> pointer object struture (correction of offset)
FORCE_SYMBOL $ABC8 u_offset1
COMMENT $ABCA is it the first?
FORCE_SYMBOL $ABCA playershotlist_objects_head
COMMENT $ABCD no -> jump
COMMENT $ABCF s pointer to next objext
FORCE_SYMBOL $ABCF NEXT_PLAYERSHOT_OBJECT
COMMENT $ABD2 the next object will be the first
FORCE_SYMBOL $ABD2 playershotlist_objects_head
COMMENT $ABD8 start at list head
FORCE_SYMBOL $ABD8 playershotlist_objects_head
COMMENT $ABDC am I the next object of the current investigated list element
FORCE_SYMBOL $ABDC NEXT_PLAYERSHOT_OBJECT
COMMENT $ABDE jup -> jump
COMMENT $ABE0 otherwise load the next as new current
FORCE_SYMBOL $ABE0 NEXT_PLAYERSHOT_OBJECT
COMMENT $ABE3 and search further
COMMENT $ABE5 we load "our" next object to s
FORCE_SYMBOL $ABE5 NEXT_PLAYERSHOT_OBJECT
COMMENT $ABE8 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $ABE8 NEXT_PLAYERSHOT_OBJECT
COMMENT $ABEB if not last, than finish and restore empties
FORCE_SYMBOL $ABEB playerShotCount
COMMENT $ABEE set u free, as new free head
FORCE_SYMBOL $ABEE playershotlist_empty_head
COMMENT $ABF2 load to u the next linked list element
FORCE_SYMBOL $ABF2 NEXT_PLAYERSHOT_OBJECT
FORCE_SYMBOL $ABF5 playershotlist_empty_head
FORCE_SYMBOL $ABF8 testShot
FORCE_NO_SYMBOL $ABFD
FORCE_SYMBOL $AC00 testShot
FORCE_SYMBOL $AC03 test2Shot
FORCE_NO_SYMBOL $AC08
FORCE_SYMBOL $AC0B test2Shot
FORCE_NO_SYMBOL $AC0E
FORCE_SYMBOL $AC10 VIA_int_flags
COMMENT $AC14 (D = y,x)
COMMENT_LINE $AC16 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $AC16 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $AC16 Store Y in D/A register
FORCE_SYMBOL $AC16 VIA_port_a
COMMENT $AC18 Blank low, zero high?
FORCE_NO_SYMBOL $AC18
FORCE_SYMBOL $AC1A VIA_cntl
COMMENT $AC1D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $AC1D VIA_port_b
COMMENT $AC1F y must be set more than xx cycles on some vectrex
COMMENT $AC20 Disable mux
FORCE_SYMBOL $AC20 VIA_port_b
COMMENT $AC22 Store X in D/A register
FORCE_SYMBOL $AC22 VIA_port_a
COMMENT $AC24 enable timer
FORCE_SYMBOL $AC24 VIA_t1_cnt_hi
COMMENT_LINE $AC26 calc next position
COMMENT $AC26 preload next user stack
FORCE_SYMBOL $AC28 playerShotSpeed
COMMENT_LINE $AC31 ................
COMMENT_LINE $AC31 a = 0;
COMMENT_LINE $AC31 b = next y movement
COMMENT_LINE $AC31 -> d can allways first be stored to VIA_B
FORCE_SYMBOL $AC34 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $AC36
FORCE_SYMBOL $AC38 VIA_int_flags
COMMENT_LINE $AC3C a starts with 0, since first y move is o (only LEFT)
COMMENT_LINE $AC3D position neutral-
COMMENT_LINE $AC3D if for all shots equal
COMMENT_LINE $AC3D than this can be kept in player shot
COMMENT_LINE $AC3D 18 cycles saved
COMMENT $AC3D lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $AC47 ten cycles between poke hi and next influencing poke
COMMENT_LINE $AC47 std      <VIA_port_b
COMMENT_LINE $AC47 only for very cranky!
FORCE_SYMBOL $AC47 VIA_port_b
FORCE_SYMBOL $AC49 VIA_port_a
COMMENT_LINE $AC4C std      <VIA_port_b
FORCE_SYMBOL $AC4C VIA_port_b
FORCE_SYMBOL $AC4F VIA_t1_cnt_hi
COMMENT $AC56 Enable mux
FORCE_SYMBOL $AC56 VIA_port_b
FORCE_NO_SYMBOL $AC58
COMMENT $AC5A Disable mux
FORCE_SYMBOL $AC5A VIA_port_b
COMMENT $AC5C Clear T1H
FORCE_SYMBOL $AC5C VIA_t1_cnt_hi
COMMENT $AC5E Store pattern in shift register
FORCE_SYMBOL $AC5E VIA_shift_reg
FORCE_SYMBOL $AC63 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AC65 VIA_port_b
FORCE_SYMBOL $AC67 VIA_port_b
COMMENT $AC69 Clear T1H
FORCE_SYMBOL $AC69 VIA_t1_cnt_hi
COMMENT $AC70 Enable mux
FORCE_SYMBOL $AC70 VIA_port_b
FORCE_NO_SYMBOL $AC72
COMMENT $AC74 Disable mux
FORCE_SYMBOL $AC74 VIA_port_b
COMMENT $AC76 Clear T1H
FORCE_SYMBOL $AC76 VIA_t1_cnt_hi
COMMENT $AC78 Store pattern in shift register
FORCE_SYMBOL $AC78 VIA_shift_reg
FORCE_SYMBOL $AC7D _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AC7F VIA_port_b
FORCE_SYMBOL $AC81 VIA_port_b
COMMENT $AC83 Clear T1H
FORCE_SYMBOL $AC83 VIA_t1_cnt_hi
COMMENT $AC8A Enable mux
FORCE_SYMBOL $AC8A VIA_port_b
FORCE_NO_SYMBOL $AC8C
COMMENT $AC8E Disable mux
FORCE_SYMBOL $AC8E VIA_port_b
COMMENT $AC90 Clear T1H
FORCE_SYMBOL $AC90 VIA_t1_cnt_hi
COMMENT $AC92 Store pattern in shift register
FORCE_SYMBOL $AC92 VIA_shift_reg
FORCE_SYMBOL $AC97 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AC99 VIA_port_b
FORCE_SYMBOL $AC9B VIA_port_b
COMMENT $AC9D Clear T1H
FORCE_SYMBOL $AC9D VIA_t1_cnt_hi
COMMENT $ACA4 Enable mux
FORCE_SYMBOL $ACA4 VIA_port_b
FORCE_NO_SYMBOL $ACA6
COMMENT $ACA8 Disable mux
FORCE_SYMBOL $ACA8 VIA_port_b
COMMENT $ACAA Clear T1H
FORCE_SYMBOL $ACAA VIA_t1_cnt_hi
COMMENT $ACAC Store pattern in shift register
FORCE_SYMBOL $ACAC VIA_shift_reg
FORCE_SYMBOL $ACB1 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $ACB3 VIA_port_b
FORCE_SYMBOL $ACB5 VIA_port_b
FORCE_SYMBOL $ACB8 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $ACBC
COMMENT_LINE $ACC2 draw scoop1
FORCE_NO_SYMBOL $ACC2
COMMENT_LINE $ACC8 cranky reset A
COMMENT $ACC8 lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $ACD3 sta <VIA_port_b
COMMENT_LINE $ACD3 nop 3
FORCE_SYMBOL $ACD5 VIA_port_b
FORCE_SYMBOL $ACDA VIA_port_b
FORCE_SYMBOL $ACDD VIA_t1_cnt_hi
COMMENT $ACDF wait 6 cycles
FORCE_SYMBOL $ACE1 VIA_t1_cnt_hi
FORCE_SYMBOL $ACE3 _4_SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $ACE5 VIA_t1_cnt_lo
COMMENT $ACE7 ** _4_SCALE_SCOOPIE_SHOT
COMMENT_LINE $ACE9 position neutral-
COMMENT_LINE $ACE9 if for all shots equal
COMMENT_LINE $ACE9 than this can be kept in player shot
COMMENT_LINE $ACE9 18 cycles saved
COMMENT $ACE9 lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $ACF3 ten cycles between poke hi and next influencing poke
COMMENT_LINE $ACF3 std      <VIA_port_b
COMMENT_LINE $ACF3 only for very cranky!
FORCE_SYMBOL $ACF3 VIA_port_b
FORCE_SYMBOL $ACF5 VIA_port_a
COMMENT_LINE $ACF8 std      <VIA_port_b
FORCE_SYMBOL $ACF8 VIA_port_b
FORCE_SYMBOL $ACFB VIA_t1_cnt_hi
COMMENT $AD00 Enable mux
FORCE_SYMBOL $AD00 VIA_port_b
FORCE_NO_SYMBOL $AD02
COMMENT $AD04 Disable mux
FORCE_SYMBOL $AD04 VIA_port_b
COMMENT $AD06 Clear T1H
FORCE_SYMBOL $AD06 VIA_t1_cnt_hi
COMMENT $AD08 Store pattern in shift register
FORCE_SYMBOL $AD08 VIA_shift_reg
FORCE_SYMBOL $AD0B _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AD0D VIA_port_b
FORCE_SYMBOL $AD0F VIA_port_b
COMMENT $AD11 Clear T1H
FORCE_SYMBOL $AD11 VIA_t1_cnt_hi
COMMENT $AD16 Enable mux
FORCE_SYMBOL $AD16 VIA_port_b
FORCE_NO_SYMBOL $AD18
COMMENT $AD1A Disable mux
FORCE_SYMBOL $AD1A VIA_port_b
COMMENT $AD1C Clear T1H
FORCE_SYMBOL $AD1C VIA_t1_cnt_hi
COMMENT $AD1E Store pattern in shift register
FORCE_SYMBOL $AD1E VIA_shift_reg
FORCE_SYMBOL $AD21 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AD23 VIA_port_b
FORCE_SYMBOL $AD25 VIA_port_b
COMMENT $AD27 Clear T1H
FORCE_SYMBOL $AD27 VIA_t1_cnt_hi
COMMENT $AD2C Enable mux
FORCE_SYMBOL $AD2C VIA_port_b
FORCE_NO_SYMBOL $AD2E
COMMENT $AD30 Disable mux
FORCE_SYMBOL $AD30 VIA_port_b
COMMENT $AD32 Clear T1H
FORCE_SYMBOL $AD32 VIA_t1_cnt_hi
COMMENT $AD34 Store pattern in shift register
FORCE_SYMBOL $AD34 VIA_shift_reg
FORCE_SYMBOL $AD37 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AD39 VIA_port_b
FORCE_SYMBOL $AD3B VIA_port_b
COMMENT $AD3D Clear T1H
FORCE_SYMBOL $AD3D VIA_t1_cnt_hi
COMMENT $AD42 Enable mux
FORCE_SYMBOL $AD42 VIA_port_b
FORCE_NO_SYMBOL $AD44
COMMENT $AD46 Disable mux
FORCE_SYMBOL $AD46 VIA_port_b
COMMENT $AD48 Clear T1H
FORCE_SYMBOL $AD48 VIA_t1_cnt_hi
COMMENT $AD4A Store pattern in shift register
FORCE_SYMBOL $AD4A VIA_shift_reg
FORCE_SYMBOL $AD4D _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AD4F VIA_port_b
FORCE_SYMBOL $AD51 VIA_port_b
FORCE_SYMBOL $AD54 VIA_t1_cnt_hi
FORCE_SYMBOL $AD56 _4_SCALE_PLAYER_SHOT
FORCE_SYMBOL $AD58 VIA_t1_cnt_lo
FORCE_SYMBOL $AD5C VIA_port_b
FORCE_SYMBOL $AD5E VIA_port_a
FORCE_SYMBOL $AD60 VIA_port_b
FORCE_SYMBOL $AD63 VIA_t1_cnt_hi
COMMENT $AD65 wait 6 cycles
FORCE_SYMBOL $AD67 VIA_t1_cnt_hi
FORCE_SYMBOL $AD69 scoop1Shot4Done
FORCE_NO_SYMBOL $AD6C
COMMENT_LINE $AD75 std      <VIA_port_b                  ;Enable mux
COMMENT $AD75 Enable mux
FORCE_SYMBOL $AD75 VIA_port_b
COMMENT $AD77 Enable mux
FORCE_SYMBOL $AD77 VIA_port_a
COMMENT $AD7B Disable mux
FORCE_SYMBOL $AD7B VIA_port_b
COMMENT $AD7D Send X to A/D
FORCE_SYMBOL $AD7D VIA_port_a
COMMENT $AD7F Clear T1H
FORCE_SYMBOL $AD7F VIA_t1_cnt_hi
COMMENT $AD86 Clear T1H
FORCE_SYMBOL $AD86 VIA_t1_cnt_hi
FORCE_SYMBOL $AD88 SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $AD8A VIA_t1_cnt_lo
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 this is actually the same,
COMMENT_LINE $0000 since y movement is determined by register A
COMMENT_LINE $0000 which must be = by the callee
COMMENT $AD8E Enable mux
FORCE_SYMBOL $AD8E VIA_port_b
COMMENT $AD90 Disable mux
FORCE_SYMBOL $AD90 VIA_port_b
COMMENT $AD92 Send X to A/D
FORCE_SYMBOL $AD92 VIA_port_a
FORCE_NO_SYMBOL $AD94
COMMENT $AD96 Clear T1H
FORCE_SYMBOL $AD96 VIA_t1_cnt_hi
COMMENT $AD98 Store pattern in shift register
FORCE_SYMBOL $AD98 VIA_shift_reg
COMMENT_LINE $AD9A wait some cycles
COMMENT_LINE $AD9A nop 10
FORCE_SYMBOL $AD9A PLAYER_SHOT_LENGTH
COMMENT $AD9D Enable mux
FORCE_SYMBOL $AD9D VIA_port_b
COMMENT $ADA0 Disable mux
FORCE_SYMBOL $ADA0 VIA_port_b
COMMENT $ADA2 Send Y to A/D
FORCE_SYMBOL $ADA2 VIA_port_a
COMMENT $ADA4 Clear T1H
FORCE_SYMBOL $ADA4 VIA_t1_cnt_hi
COMMENT_LINE $ADA6 wait some cycles
COMMENT_LINE $ADA6 nop 10
COMMENT_LINE $ADA9 this is actually the same,
COMMENT_LINE $ADA9 since y movement is determined by register A
COMMENT_LINE $ADA9 which must be = by the callee
COMMENT $ADA9 Enable mux
FORCE_SYMBOL $ADA9 VIA_port_b
COMMENT $ADAB Disable mux
FORCE_SYMBOL $ADAB VIA_port_b
COMMENT $ADAD Send X to A/D
FORCE_SYMBOL $ADAD VIA_port_a
FORCE_NO_SYMBOL $ADAF
COMMENT $ADB1 Clear T1H
FORCE_SYMBOL $ADB1 VIA_t1_cnt_hi
COMMENT $ADB3 Store pattern in shift register
FORCE_SYMBOL $ADB3 VIA_shift_reg
COMMENT_LINE $ADB5 wait some cycles
COMMENT_LINE $ADB5 nop 10
COMMENT $ADB8 Enable mux
FORCE_SYMBOL $ADB8 VIA_port_b
COMMENT $ADBB Disable mux
FORCE_SYMBOL $ADBB VIA_port_b
COMMENT $ADBD Send X to A/D
FORCE_SYMBOL $ADBD VIA_port_a
COMMENT $ADBF Clear T1H
FORCE_SYMBOL $ADBF VIA_t1_cnt_hi
COMMENT $ADC4 Clear T1H
FORCE_SYMBOL $ADC4 VIA_t1_cnt_hi
COMMENT_LINE $ADC6 wait some cycles
COMMENT_LINE $ADC6 nop 10
COMMENT_LINE $ADC9 this is actually the same,
COMMENT_LINE $ADC9 since y movement is determined by register A
COMMENT_LINE $ADC9 which must be = by the callee
COMMENT $ADC9 Enable mux
FORCE_SYMBOL $ADC9 VIA_port_b
COMMENT $ADCB Disable mux
FORCE_SYMBOL $ADCB VIA_port_b
COMMENT $ADCD Send X to A/D
FORCE_SYMBOL $ADCD VIA_port_a
FORCE_NO_SYMBOL $ADCF
COMMENT $ADD1 Clear T1H
FORCE_SYMBOL $ADD1 VIA_t1_cnt_hi
COMMENT $ADD3 Store pattern in shift register
FORCE_SYMBOL $ADD3 VIA_shift_reg
COMMENT_LINE $ADD5 wait some cycles
COMMENT_LINE $ADD5 nop 10
FORCE_SYMBOL $ADD5 PLAYER_SHOT_LENGTH
COMMENT $ADD8 Enable mux
FORCE_SYMBOL $ADD8 VIA_port_b
COMMENT $ADDB Disable mux
FORCE_SYMBOL $ADDB VIA_port_b
COMMENT $ADDD Send Y to A/D
FORCE_SYMBOL $ADDD VIA_port_a
COMMENT $ADDF Clear T1H
FORCE_SYMBOL $ADDF VIA_t1_cnt_hi
COMMENT_LINE $ADE1 doesn't matter
FORCE_SYMBOL $ADE1 SCALE_PLAYER_SHOT
FORCE_SYMBOL $ADE3 VIA_t1_cnt_lo
COMMENT_LINE $ADE7 std      <VIA_port_b                  ;Enable mux
COMMENT_LINE $ADE7 cranky needs split
COMMENT $ADE7 Enable mux
FORCE_SYMBOL $ADE7 VIA_port_b
COMMENT $ADE9 Enable mux
FORCE_SYMBOL $ADE9 VIA_port_a
COMMENT $ADED Disable mux
FORCE_SYMBOL $ADED VIA_port_b
COMMENT $ADEF Send X to A/D
FORCE_SYMBOL $ADEF VIA_port_a
COMMENT $ADF1 Clear T1H
FORCE_SYMBOL $ADF1 VIA_t1_cnt_hi
COMMENT $ADF8 Clear T1H
FORCE_SYMBOL $ADF8 VIA_t1_cnt_hi
FORCE_SYMBOL $ADFA scoop1Shot4Done
FORCE_NO_SYMBOL $ADFD
COMMENT_LINE $AE04 std      <VIA_port_b                  ;Enable mux
COMMENT $AE04 Enable mux
FORCE_SYMBOL $AE04 VIA_port_b
COMMENT $AE06 Enable mux
FORCE_SYMBOL $AE06 VIA_port_a
COMMENT $AE0A Disable mux
FORCE_SYMBOL $AE0A VIA_port_b
COMMENT $AE0C Send X to A/D
FORCE_SYMBOL $AE0C VIA_port_a
COMMENT $AE0E Clear T1H
FORCE_SYMBOL $AE0E VIA_t1_cnt_hi
COMMENT $AE15 Clear T1H
FORCE_SYMBOL $AE15 VIA_t1_cnt_hi
FORCE_SYMBOL $AE17 SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $AE19 VIA_t1_cnt_lo
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
FORCE_SYMBOL $AE1D VIA_port_a
COMMENT $AE1F Enable mux
FORCE_SYMBOL $AE1F VIA_port_b
COMMENT $AE21 Disable mux
FORCE_SYMBOL $AE21 VIA_port_b
COMMENT $AE23 Send Y to A/D
FORCE_SYMBOL $AE23 VIA_port_a
COMMENT $AE25 Clear T1H
FORCE_SYMBOL $AE25 VIA_t1_cnt_hi
COMMENT_LINE $AE2A this is actually the same,
COMMENT_LINE $AE2A since y movement is determined by register A
COMMENT_LINE $AE2A which must be = by the callee
COMMENT $AE2A Enable mux
FORCE_SYMBOL $AE2A VIA_port_b
COMMENT $AE2C Disable mux
FORCE_SYMBOL $AE2C VIA_port_b
COMMENT $AE2E Send X to A/D
FORCE_SYMBOL $AE2E VIA_port_a
FORCE_NO_SYMBOL $AE30
COMMENT $AE32 Clear T1H
FORCE_SYMBOL $AE32 VIA_t1_cnt_hi
COMMENT $AE34 Store pattern in shift register
FORCE_SYMBOL $AE34 VIA_shift_reg
FORCE_SYMBOL $AE36 PLAYER_SHOT_LENGTH
COMMENT $AE39 Enable mux
FORCE_SYMBOL $AE39 VIA_port_b
COMMENT $AE3B Disable mux
FORCE_SYMBOL $AE3B VIA_port_b
COMMENT $AE3D Clear T1H
FORCE_SYMBOL $AE3D VIA_t1_cnt_hi
COMMENT_LINE $AE42 this is actually the same,
COMMENT_LINE $AE42 since y movement is determined by register A
COMMENT_LINE $AE42 which must be = by the callee
COMMENT $AE42 Enable mux
FORCE_SYMBOL $AE42 VIA_port_b
COMMENT $AE44 Disable mux
FORCE_SYMBOL $AE44 VIA_port_b
COMMENT $AE46 Send X to A/D
FORCE_SYMBOL $AE46 VIA_port_a
FORCE_NO_SYMBOL $AE48
COMMENT $AE4A Clear T1H
FORCE_SYMBOL $AE4A VIA_t1_cnt_hi
COMMENT $AE4C Store pattern in shift register
FORCE_SYMBOL $AE4C VIA_shift_reg
FORCE_SYMBOL $AE4E PLAYER_SHOT_LENGTH
COMMENT $AE51 Enable mux
FORCE_SYMBOL $AE51 VIA_port_b
COMMENT $AE55 Disable mux
FORCE_SYMBOL $AE55 VIA_port_b
COMMENT $AE57 Send X to A/D
FORCE_SYMBOL $AE57 VIA_port_a
COMMENT $AE59 Clear T1H
FORCE_SYMBOL $AE59 VIA_t1_cnt_hi
FORCE_SYMBOL $AE5B SCALE_PLAYER_SHOT
FORCE_SYMBOL $AE5D VIA_t1_cnt_lo
COMMENT_LINE $AE61 std      <VIA_port_b                  ;Enable mux
COMMENT_LINE $AE61 cranky needs split
COMMENT $AE61 Enable mux
FORCE_SYMBOL $AE61 VIA_port_b
COMMENT $AE63 Enable mux
FORCE_SYMBOL $AE63 VIA_port_a
COMMENT $AE67 Disable mux
FORCE_SYMBOL $AE67 VIA_port_b
COMMENT $AE69 Send X to A/D
FORCE_SYMBOL $AE69 VIA_port_a
COMMENT $AE6B Clear T1H
FORCE_SYMBOL $AE6B VIA_t1_cnt_hi
COMMENT $AE72 Clear T1H
FORCE_SYMBOL $AE72 VIA_t1_cnt_hi
COMMENT_LINE $AE79 std      <VIA_port_b                  ;Enable mux
COMMENT $AE79 Enable mux
FORCE_SYMBOL $AE79 VIA_port_b
COMMENT $AE7B Enable mux
FORCE_SYMBOL $AE7B VIA_port_a
COMMENT $AE7F Disable mux
FORCE_SYMBOL $AE7F VIA_port_b
COMMENT $AE81 Send X to A/D
FORCE_SYMBOL $AE81 VIA_port_a
COMMENT $AE83 Clear T1H
FORCE_SYMBOL $AE83 VIA_t1_cnt_hi
COMMENT $AE8A Clear T1H
FORCE_SYMBOL $AE8A VIA_t1_cnt_hi
FORCE_SYMBOL $AE8C SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $AE8E VIA_t1_cnt_lo
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 this is actually the same,
COMMENT_LINE $0000 since y movement is determined by register A
COMMENT_LINE $0000 which must be = by the callee
COMMENT $AE92 Enable mux
FORCE_SYMBOL $AE92 VIA_port_b
COMMENT $AE94 Disable mux
FORCE_SYMBOL $AE94 VIA_port_b
COMMENT $AE96 Send X to A/D
FORCE_SYMBOL $AE96 VIA_port_a
FORCE_NO_SYMBOL $AE98
COMMENT $AE9A Clear T1H
FORCE_SYMBOL $AE9A VIA_t1_cnt_hi
COMMENT $AE9C Store pattern in shift register
FORCE_SYMBOL $AE9C VIA_shift_reg
FORCE_SYMBOL $AE9E PLAYER_SHOT_LENGTH
COMMENT_LINE $AEA1 this is actually the same,
COMMENT_LINE $AEA1 since y movement is determined by register A
COMMENT_LINE $AEA1 which must be = by the callee
COMMENT $AEA1 Enable mux
FORCE_SYMBOL $AEA1 VIA_port_b
COMMENT $AEA3 Disable mux
FORCE_SYMBOL $AEA3 VIA_port_b
COMMENT $AEA5 x 0
FORCE_SYMBOL $AEA5 VIA_port_a
COMMENT $AEA7 Clear T1H
FORCE_SYMBOL $AEA7 VIA_t1_cnt_hi
COMMENT_LINE $AEA9 doesn't matter
FORCE_SYMBOL $AEA9 SCALE_PLAYER_SHOT
FORCE_SYMBOL $AEAB VIA_t1_cnt_lo
COMMENT_LINE $AEAF std      <VIA_port_b                  ;Enable mux
COMMENT_LINE $AEAF cranky needs split
COMMENT $AEAF Enable mux
FORCE_SYMBOL $AEAF VIA_port_b
COMMENT $AEB1 Enable mux
FORCE_SYMBOL $AEB1 VIA_port_a
COMMENT $AEB5 Disable mux
FORCE_SYMBOL $AEB5 VIA_port_b
COMMENT $AEB7 Send X to A/D
FORCE_SYMBOL $AEB7 VIA_port_a
COMMENT $AEB9 Clear T1H
FORCE_SYMBOL $AEB9 VIA_t1_cnt_hi
COMMENT $AEC0 Clear T1H
FORCE_SYMBOL $AEC0 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $AEC6
FORCE_NO_SYMBOL $AECC
COMMENT $AED0 lo(-_4_PLAYER_SHOT_LENGTH)
COMMENT_LINE $AEDB sta <VIA_port_b
COMMENT_LINE $AEDB nop 3
FORCE_SYMBOL $AEDD VIA_port_b
COMMENT $AEDF moved from "main" to delay between port bpokes
FORCE_SYMBOL $AEDF _4_SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $AEE1 VIA_port_b
FORCE_SYMBOL $AEE4 VIA_t1_cnt_hi
COMMENT $AEE6 wait 6 cycles
FORCE_SYMBOL $AEE8 VIA_t1_cnt_hi
FORCE_SYMBOL $AEEA VIA_t1_cnt_lo
COMMENT $AEEC ** _4_SCALE_SCOOPIE_SHOT
COMMENT_LINE $AEEE ten cycles between poke hi and next influencing poke
COMMENT_LINE $AEEE std      <VIA_port_b
COMMENT_LINE $AEEE only for very cranky!
FORCE_SYMBOL $AEEE VIA_port_b
FORCE_SYMBOL $AEF0 VIA_port_a
COMMENT_LINE $AEF3 std      <VIA_port_b
FORCE_SYMBOL $AEF3 VIA_port_b
FORCE_SYMBOL $AEF6 VIA_t1_cnt_hi
COMMENT $AEFB Enable mux
FORCE_SYMBOL $AEFB VIA_port_b
FORCE_NO_SYMBOL $AEFD
COMMENT $AEFF Disable mux
FORCE_SYMBOL $AEFF VIA_port_b
COMMENT $AF01 Clear T1H
FORCE_SYMBOL $AF01 VIA_t1_cnt_hi
COMMENT $AF03 Store pattern in shift register
FORCE_SYMBOL $AF03 VIA_shift_reg
FORCE_SYMBOL $AF06 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AF08 VIA_port_b
FORCE_SYMBOL $AF0A VIA_port_b
COMMENT $AF0C Clear T1H
FORCE_SYMBOL $AF0C VIA_t1_cnt_hi
COMMENT $AF11 Enable mux
FORCE_SYMBOL $AF11 VIA_port_b
FORCE_NO_SYMBOL $AF13
COMMENT $AF15 Disable mux
FORCE_SYMBOL $AF15 VIA_port_b
COMMENT $AF17 Clear T1H
FORCE_SYMBOL $AF17 VIA_t1_cnt_hi
COMMENT $AF19 Store pattern in shift register
FORCE_SYMBOL $AF19 VIA_shift_reg
FORCE_SYMBOL $AF1C _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AF1E VIA_port_b
FORCE_SYMBOL $AF20 VIA_port_b
COMMENT $AF22 Clear T1H
FORCE_SYMBOL $AF22 VIA_t1_cnt_hi
COMMENT $AF27 Enable mux
FORCE_SYMBOL $AF27 VIA_port_b
FORCE_NO_SYMBOL $AF29
COMMENT $AF2B Disable mux
FORCE_SYMBOL $AF2B VIA_port_b
COMMENT $AF2D Clear T1H
FORCE_SYMBOL $AF2D VIA_t1_cnt_hi
COMMENT $AF2F Store pattern in shift register
FORCE_SYMBOL $AF2F VIA_shift_reg
FORCE_SYMBOL $AF32 _4_PLAYER_SHOT_LENGTH
FORCE_SYMBOL $AF34 VIA_port_b
FORCE_SYMBOL $AF36 VIA_port_b
COMMENT $AF38 Clear T1H
FORCE_SYMBOL $AF38 VIA_t1_cnt_hi
COMMENT $AF3D Enable mux
FORCE_SYMBOL $AF3D VIA_port_b
FORCE_NO_SYMBOL $AF3F
COMMENT $AF41 Disable mux
FORCE_SYMBOL $AF41 VIA_port_b
COMMENT $AF43 Clear T1H
FORCE_SYMBOL $AF43 VIA_t1_cnt_hi
COMMENT $AF45 Store pattern in shift register
FORCE_SYMBOL $AF45 VIA_shift_reg
FORCE_SYMBOL $AF47 scoop2Shot4Done
FORCE_NO_SYMBOL $AF4A
COMMENT $AF51 Enable mux
FORCE_SYMBOL $AF51 VIA_port_b
COMMENT_LINE $AF53 sta      <VIA_port_b                  ;Enable mux
COMMENT_LINE $AF53 stb      <VIA_port_a                  ;Enable mux
COMMENT $AF54 Disable mux
FORCE_SYMBOL $AF54 VIA_port_b
COMMENT $AF56 Send X to A/D
FORCE_SYMBOL $AF56 VIA_port_a
COMMENT $AF58 Clear T1H
FORCE_SYMBOL $AF58 VIA_t1_cnt_hi
COMMENT $AF5F Clear T1H
FORCE_SYMBOL $AF5F VIA_t1_cnt_hi
FORCE_SYMBOL $AF61 SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $AF63 VIA_t1_cnt_lo
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 this is actually the same,
COMMENT_LINE $0000 since y movement is determined by register A
COMMENT_LINE $0000 which must be = by the callee
COMMENT $AF67 Enable mux
FORCE_SYMBOL $AF67 VIA_port_b
COMMENT $AF69 Disable mux
FORCE_SYMBOL $AF69 VIA_port_b
COMMENT $AF6B Send X to A/D
FORCE_SYMBOL $AF6B VIA_port_a
FORCE_NO_SYMBOL $AF6D
COMMENT $AF6F Clear T1H
FORCE_SYMBOL $AF6F VIA_t1_cnt_hi
COMMENT $AF71 Store pattern in shift register
FORCE_SYMBOL $AF71 VIA_shift_reg
COMMENT_LINE $AF73 wait some cycles
COMMENT_LINE $AF73 nop 10
FORCE_SYMBOL $AF73 PLAYER_SHOT_LENGTH
COMMENT $AF76 Enable mux
FORCE_SYMBOL $AF76 VIA_port_b
COMMENT $AF79 Disable mux
FORCE_SYMBOL $AF79 VIA_port_b
COMMENT $AF7B Send Y to A/D
FORCE_SYMBOL $AF7B VIA_port_a
COMMENT $AF7D Clear T1H
FORCE_SYMBOL $AF7D VIA_t1_cnt_hi
COMMENT_LINE $AF7F wait some cycles
COMMENT_LINE $AF7F nop 10
COMMENT_LINE $AF82 this is actually the same,
COMMENT_LINE $AF82 since y movement is determined by register A
COMMENT_LINE $AF82 which must be = by the callee
COMMENT $AF82 Enable mux
FORCE_SYMBOL $AF82 VIA_port_b
COMMENT $AF84 Disable mux
FORCE_SYMBOL $AF84 VIA_port_b
COMMENT $AF86 Send X to A/D
FORCE_SYMBOL $AF86 VIA_port_a
FORCE_NO_SYMBOL $AF88
COMMENT $AF8A Clear T1H
FORCE_SYMBOL $AF8A VIA_t1_cnt_hi
COMMENT $AF8C Store pattern in shift register
FORCE_SYMBOL $AF8C VIA_shift_reg
COMMENT_LINE $AF8E wait some cycles
COMMENT_LINE $AF8E nop 10
COMMENT $AF91 Enable mux
FORCE_SYMBOL $AF91 VIA_port_b
COMMENT $AF94 Disable mux
FORCE_SYMBOL $AF94 VIA_port_b
COMMENT $AF96 Send X to A/D
FORCE_SYMBOL $AF96 VIA_port_a
COMMENT $AF98 Clear T1H
FORCE_SYMBOL $AF98 VIA_t1_cnt_hi
COMMENT $AF9D Clear T1H
FORCE_SYMBOL $AF9D VIA_t1_cnt_hi
COMMENT_LINE $AF9F wait some cycles
COMMENT_LINE $AF9F nop 10
COMMENT_LINE $AFA2 this is actually the same,
COMMENT_LINE $AFA2 since y movement is determined by register A
COMMENT_LINE $AFA2 which must be = by the callee
COMMENT $AFA2 Enable mux
FORCE_SYMBOL $AFA2 VIA_port_b
COMMENT $AFA4 Disable mux
FORCE_SYMBOL $AFA4 VIA_port_b
COMMENT $AFA6 Send X to A/D
FORCE_SYMBOL $AFA6 VIA_port_a
FORCE_NO_SYMBOL $AFA8
COMMENT $AFAA Clear T1H
FORCE_SYMBOL $AFAA VIA_t1_cnt_hi
COMMENT $AFAC Store pattern in shift register
FORCE_SYMBOL $AFAC VIA_shift_reg
COMMENT_LINE $AFAE wait some cycles
COMMENT_LINE $AFAE nop 10
FORCE_SYMBOL $AFAE PLAYER_SHOT_LENGTH
COMMENT $AFB1 Enable mux
FORCE_SYMBOL $AFB1 VIA_port_b
COMMENT $AFB4 Disable mux
FORCE_SYMBOL $AFB4 VIA_port_b
COMMENT $AFB6 Send Y to A/D
FORCE_SYMBOL $AFB6 VIA_port_a
COMMENT $AFB8 Clear T1H
FORCE_SYMBOL $AFB8 VIA_t1_cnt_hi
COMMENT_LINE $AFBA doesn't matter
FORCE_SYMBOL $AFBA scoop2Shot4Done
FORCE_NO_SYMBOL $AFBD
COMMENT $AFC4 Enable mux
FORCE_SYMBOL $AFC4 VIA_port_b
COMMENT_LINE $AFC6 sta      <VIA_port_b                  ;Enable mux
COMMENT_LINE $AFC6 stb      <VIA_port_a                  ;Enable mux
COMMENT $AFC7 Disable mux
FORCE_SYMBOL $AFC7 VIA_port_b
COMMENT $AFC9 Send X to A/D
FORCE_SYMBOL $AFC9 VIA_port_a
COMMENT $AFCB Clear T1H
FORCE_SYMBOL $AFCB VIA_t1_cnt_hi
COMMENT $AFD2 Clear T1H
FORCE_SYMBOL $AFD2 VIA_t1_cnt_hi
FORCE_SYMBOL $AFD4 SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $AFD6 VIA_t1_cnt_lo
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
FORCE_SYMBOL $AFDA VIA_port_a
COMMENT $AFDC Enable mux
FORCE_SYMBOL $AFDC VIA_port_b
COMMENT $AFDE Disable mux
FORCE_SYMBOL $AFDE VIA_port_b
COMMENT $AFE0 Send Y to A/D
FORCE_SYMBOL $AFE0 VIA_port_a
COMMENT $AFE2 Clear T1H
FORCE_SYMBOL $AFE2 VIA_t1_cnt_hi
COMMENT_LINE $AFE7 this is actually the same,
COMMENT_LINE $AFE7 since y movement is determined by register A
COMMENT_LINE $AFE7 which must be = by the callee
COMMENT $AFE7 Enable mux
FORCE_SYMBOL $AFE7 VIA_port_b
COMMENT $AFE9 Disable mux
FORCE_SYMBOL $AFE9 VIA_port_b
COMMENT $AFEB Send X to A/D
FORCE_SYMBOL $AFEB VIA_port_a
FORCE_NO_SYMBOL $AFED
COMMENT $AFEF Clear T1H
FORCE_SYMBOL $AFEF VIA_t1_cnt_hi
COMMENT $AFF1 Store pattern in shift register
FORCE_SYMBOL $AFF1 VIA_shift_reg
FORCE_SYMBOL $AFF3 PLAYER_SHOT_LENGTH
COMMENT $AFF6 Enable mux
FORCE_SYMBOL $AFF6 VIA_port_b
COMMENT $AFF8 Disable mux
FORCE_SYMBOL $AFF8 VIA_port_b
COMMENT $AFFA Clear T1H
FORCE_SYMBOL $AFFA VIA_t1_cnt_hi
COMMENT_LINE $AFFF this is actually the same,
COMMENT_LINE $AFFF since y movement is determined by register A
COMMENT_LINE $AFFF which must be = by the callee
COMMENT $AFFF Enable mux
FORCE_SYMBOL $AFFF VIA_port_b
COMMENT $B001 Disable mux
FORCE_SYMBOL $B001 VIA_port_b
COMMENT $B003 Send X to A/D
FORCE_SYMBOL $B003 VIA_port_a
FORCE_NO_SYMBOL $B005
COMMENT $B007 Clear T1H
FORCE_SYMBOL $B007 VIA_t1_cnt_hi
COMMENT $B009 Store pattern in shift register
FORCE_SYMBOL $B009 VIA_shift_reg
FORCE_SYMBOL $B00B PLAYER_SHOT_LENGTH
COMMENT $B00E Enable mux
FORCE_SYMBOL $B00E VIA_port_b
COMMENT $B012 Disable mux
FORCE_SYMBOL $B012 VIA_port_b
COMMENT $B014 Send X to A/D
FORCE_SYMBOL $B014 VIA_port_a
COMMENT $B016 Clear T1H
FORCE_SYMBOL $B016 VIA_t1_cnt_hi
COMMENT $B01D Enable mux
FORCE_SYMBOL $B01D VIA_port_b
COMMENT_LINE $B01F sta      <VIA_port_b                  ;Enable mux
COMMENT_LINE $B01F stb      <VIA_port_a                  ;Enable mux
COMMENT $B020 Disable mux
FORCE_SYMBOL $B020 VIA_port_b
COMMENT $B022 Send X to A/D
FORCE_SYMBOL $B022 VIA_port_a
COMMENT $B024 Clear T1H
FORCE_SYMBOL $B024 VIA_t1_cnt_hi
COMMENT $B02B Clear T1H
FORCE_SYMBOL $B02B VIA_t1_cnt_hi
FORCE_SYMBOL $B02D SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $B02F VIA_t1_cnt_lo
COMMENT_LINE $0000 ten cycles between poke hi and next influencing poke
COMMENT_LINE $0000 this is actually the same,
COMMENT_LINE $0000 since y movement is determined by register A
COMMENT_LINE $0000 which must be = by the callee
COMMENT $B033 Enable mux
FORCE_SYMBOL $B033 VIA_port_b
COMMENT $B035 Disable mux
FORCE_SYMBOL $B035 VIA_port_b
COMMENT $B037 Send X to A/D
FORCE_SYMBOL $B037 VIA_port_a
FORCE_NO_SYMBOL $B039
COMMENT $B03B Clear T1H
FORCE_SYMBOL $B03B VIA_t1_cnt_hi
COMMENT $B03D Store pattern in shift register
FORCE_SYMBOL $B03D VIA_shift_reg
FORCE_SYMBOL $B03F PLAYER_SHOT_LENGTH
COMMENT_LINE $B042 this is actually the same,
COMMENT_LINE $B042 since y movement is determined by register A
COMMENT_LINE $B042 which must be = by the callee
COMMENT $B042 Enable mux
FORCE_SYMBOL $B042 VIA_port_b
COMMENT $B044 Disable mux
FORCE_SYMBOL $B044 VIA_port_b
COMMENT $B046 x 0
FORCE_SYMBOL $B046 VIA_port_a
COMMENT $B048 Clear T1H
FORCE_SYMBOL $B048 VIA_t1_cnt_hi
COMMENT_LINE $B04A doesn't matter
COMMENT_LINE $B04C ................
COMMENT_LINE $B04C cleanup and go to next shot
COMMENT $B04C preload next user stack
FORCE_SYMBOL $B04F gameScale
FORCE_SYMBOL $B052 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B054
COMMENT $B056 /BLANK low and /ZERO low
FORCE_SYMBOL $B056 VIA_cntl
FORCE_NO_SYMBOL $B058
FORCE_SYMBOL $B05B VIA_port_b
COMMENT $B05D (D = y,x, pc = next object)
COMMENT_LINE $B05F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B05F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B05F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $B05F Store Y in D/A register
FORCE_SYMBOL $B05F VIA_port_a
COMMENT $B061 Blank low, zero high?
FORCE_NO_SYMBOL $B061
FORCE_SYMBOL $B063 VIA_cntl
COMMENT $B066 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B066 VIA_port_b
COMMENT $B068 y must be set more than xx cycles on some vectrex
COMMENT $B069 Disable mux
FORCE_SYMBOL $B069 VIA_port_b
COMMENT $B06B Store X in D/A register
FORCE_SYMBOL $B06B VIA_port_a
COMMENT $B06D enable timer
FORCE_SYMBOL $B06D VIA_t1_cnt_hi
COMMENT_LINE $B06F calc next position
COMMENT $B06F preload next user stack
FORCE_SYMBOL $B071 playerShotSpeed
COMMENT_LINE $B07C ................
COMMENT_LINE $B07C lda      #SCALE_PLAYER_SHOT
COMMENT_LINE $B07C sta      VIA_t1_cnt_lo
COMMENT_LINE $B07C lda      #-PLAYER_SHOT_LENGTH
FORCE_SYMBOL $B07F VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B081
FORCE_SYMBOL $B083 VIA_int_flags
COMMENT_LINE $B088 ten cycles between poke hi and next influencing poke
COMMENT_LINE $B088 this is actually the same,
COMMENT_LINE $B088 since y movement is determined by register A
COMMENT_LINE $B088 which must be = by the callee
COMMENT $B088 Enable mux
FORCE_SYMBOL $B088 VIA_port_b
COMMENT $B08A Disable mux
FORCE_SYMBOL $B08A VIA_port_b
COMMENT $B08C Send X to A/D
FORCE_SYMBOL $B08C VIA_port_a
FORCE_NO_SYMBOL $B08E
COMMENT $B090 Clear T1H
FORCE_SYMBOL $B090 VIA_t1_cnt_hi
COMMENT $B092 Store pattern in shift register
FORCE_SYMBOL $B092 VIA_shift_reg
COMMENT_LINE $B094 wait some cycles
COMMENT_LINE $B094 nop 10
FORCE_SYMBOL $B094 PLAYER_SHOT_LENGTH
COMMENT $B099 Enable mux
FORCE_SYMBOL $B099 VIA_port_b
COMMENT $B09C Disable mux
FORCE_SYMBOL $B09C VIA_port_b
COMMENT $B09E Send Y to A/D
FORCE_SYMBOL $B09E VIA_port_a
COMMENT $B0A0 Clear T1H
FORCE_SYMBOL $B0A0 VIA_t1_cnt_hi
COMMENT_LINE $B0A2 wait some cycles
COMMENT_LINE $B0A2 nop 10
COMMENT_LINE $B0A7 this is actually the same,
COMMENT_LINE $B0A7 since y movement is determined by register A
COMMENT_LINE $B0A7 which must be = by the callee
COMMENT $B0A7 Enable mux
FORCE_SYMBOL $B0A7 VIA_port_b
COMMENT $B0A9 Disable mux
FORCE_SYMBOL $B0A9 VIA_port_b
COMMENT $B0AB Send X to A/D
FORCE_SYMBOL $B0AB VIA_port_a
FORCE_NO_SYMBOL $B0AD
COMMENT $B0AF Clear T1H
FORCE_SYMBOL $B0AF VIA_t1_cnt_hi
COMMENT $B0B1 Store pattern in shift register
FORCE_SYMBOL $B0B1 VIA_shift_reg
COMMENT_LINE $B0B3 wait some cycles
COMMENT_LINE $B0B3 nop 10
COMMENT $B0B8 Enable mux
FORCE_SYMBOL $B0B8 VIA_port_b
COMMENT $B0BB Disable mux
FORCE_SYMBOL $B0BB VIA_port_b
COMMENT $B0BD Send X to A/D
FORCE_SYMBOL $B0BD VIA_port_a
COMMENT $B0BF Clear T1H
FORCE_SYMBOL $B0BF VIA_t1_cnt_hi
COMMENT $B0C6 Clear T1H
FORCE_SYMBOL $B0C6 VIA_t1_cnt_hi
COMMENT_LINE $B0C8 wait some cycles
COMMENT_LINE $B0C8 nop 10
COMMENT_LINE $B0CD this is actually the same,
COMMENT_LINE $B0CD since y movement is determined by register A
COMMENT_LINE $B0CD which must be = by the callee
COMMENT $B0CD Enable mux
FORCE_SYMBOL $B0CD VIA_port_b
COMMENT $B0CF Disable mux
FORCE_SYMBOL $B0CF VIA_port_b
COMMENT $B0D1 Send X to A/D
FORCE_SYMBOL $B0D1 VIA_port_a
FORCE_NO_SYMBOL $B0D3
COMMENT $B0D5 Clear T1H
FORCE_SYMBOL $B0D5 VIA_t1_cnt_hi
COMMENT $B0D7 Store pattern in shift register
FORCE_SYMBOL $B0D7 VIA_shift_reg
COMMENT_LINE $B0D9 wait some cycles
COMMENT_LINE $B0D9 nop 10
FORCE_SYMBOL $B0D9 PLAYER_SHOT_LENGTH
COMMENT $B0DE Enable mux
FORCE_SYMBOL $B0DE VIA_port_b
COMMENT $B0E1 Disable mux
FORCE_SYMBOL $B0E1 VIA_port_b
COMMENT $B0E3 Send Y to A/D
FORCE_SYMBOL $B0E3 VIA_port_a
COMMENT $B0E5 Clear T1H
FORCE_SYMBOL $B0E5 VIA_t1_cnt_hi
COMMENT_LINE $B0E7 doesn't matter
FORCE_SYMBOL $B0E7 entryOtherShotsContinue
COMMENT_LINE $B0EA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B0EA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $B0EA Store Y in D/A register
FORCE_SYMBOL $B0EA VIA_port_a
COMMENT $B0EC Blank low, zero high?
FORCE_NO_SYMBOL $B0EC
FORCE_SYMBOL $B0EE VIA_cntl
COMMENT $B0F1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B0F1 VIA_port_b
COMMENT $B0F3 y must be set more than xx cycles on some vectrex
COMMENT $B0F4 Disable mux
FORCE_SYMBOL $B0F4 VIA_port_b
COMMENT $B0F6 Store X in D/A register
FORCE_SYMBOL $B0F6 VIA_port_a
COMMENT $B0F8 enable timer
FORCE_SYMBOL $B0F8 VIA_t1_cnt_hi
COMMENT_LINE $B0FA calc next position
COMMENT $B0FA preload next user stack
FORCE_SYMBOL $B0FC playerShotSpeed
COMMENT_LINE $B107 ................
COMMENT_LINE $B107 lda      #SCALE_PLAYER_SHOT
COMMENT_LINE $B107 sta      VIA_t1_cnt_lo
COMMENT_LINE $B107 lda      #-(PLAYER_SHOT_LENGTH /2)
FORCE_SYMBOL $B10A VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B10C
FORCE_SYMBOL $B10E VIA_int_flags
COMMENT_LINE $B113 ten cycles between poke hi and next influencing poke
FORCE_SYMBOL $B113 VIA_port_a
COMMENT $B115 Enable mux
FORCE_SYMBOL $B115 VIA_port_b
COMMENT $B117 Disable mux
FORCE_SYMBOL $B117 VIA_port_b
COMMENT $B119 Send Y to A/D
FORCE_SYMBOL $B119 VIA_port_a
COMMENT $B11B Clear T1H
FORCE_SYMBOL $B11B VIA_t1_cnt_hi
COMMENT_LINE $B122 this is actually the same,
COMMENT_LINE $B122 since y movement is determined by register A
COMMENT_LINE $B122 which must be = by the callee
COMMENT $B122 Enable mux
FORCE_SYMBOL $B122 VIA_port_b
COMMENT $B124 Disable mux
FORCE_SYMBOL $B124 VIA_port_b
COMMENT $B126 Send X to A/D
FORCE_SYMBOL $B126 VIA_port_a
FORCE_NO_SYMBOL $B128
COMMENT $B12A Clear T1H
FORCE_SYMBOL $B12A VIA_t1_cnt_hi
COMMENT $B12C Store pattern in shift register
FORCE_SYMBOL $B12C VIA_shift_reg
FORCE_SYMBOL $B12E PLAYER_SHOT_LENGTH
COMMENT $B133 Enable mux
FORCE_SYMBOL $B133 VIA_port_b
COMMENT $B135 Disable mux
FORCE_SYMBOL $B135 VIA_port_b
COMMENT $B137 Clear T1H
FORCE_SYMBOL $B137 VIA_t1_cnt_hi
COMMENT_LINE $B13E this is actually the same,
COMMENT_LINE $B13E since y movement is determined by register A
COMMENT_LINE $B13E which must be = by the callee
COMMENT $B13E Enable mux
FORCE_SYMBOL $B13E VIA_port_b
COMMENT $B140 Disable mux
FORCE_SYMBOL $B140 VIA_port_b
COMMENT $B142 Send X to A/D
FORCE_SYMBOL $B142 VIA_port_a
FORCE_NO_SYMBOL $B144
COMMENT $B146 Clear T1H
FORCE_SYMBOL $B146 VIA_t1_cnt_hi
COMMENT $B148 Store pattern in shift register
FORCE_SYMBOL $B148 VIA_shift_reg
FORCE_SYMBOL $B14A PLAYER_SHOT_LENGTH
COMMENT $B14F Enable mux
FORCE_SYMBOL $B14F VIA_port_b
COMMENT $B153 Disable mux
FORCE_SYMBOL $B153 VIA_port_b
COMMENT $B155 Send X to A/D
FORCE_SYMBOL $B155 VIA_port_a
COMMENT $B157 Clear T1H
FORCE_SYMBOL $B157 VIA_t1_cnt_hi
FORCE_SYMBOL $B159 entryOtherShotsContinue
COMMENT_LINE $B15C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B15C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $B15C Store Y in D/A register
FORCE_SYMBOL $B15C VIA_port_a
COMMENT $B15E Blank low, zero high?
FORCE_NO_SYMBOL $B15E
FORCE_SYMBOL $B160 VIA_cntl
COMMENT $B163 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B163 VIA_port_b
COMMENT $B165 y must be set more than xx cycles on some vectrex
COMMENT $B166 Disable mux
FORCE_SYMBOL $B166 VIA_port_b
COMMENT $B168 Store X in D/A register
FORCE_SYMBOL $B168 VIA_port_a
COMMENT $B16A enable timer
FORCE_SYMBOL $B16A VIA_t1_cnt_hi
COMMENT_LINE $B16C calc next position
COMMENT $B16C preload next user stack
FORCE_SYMBOL $B16E playerShotSpeed
COMMENT_LINE $B179 ................
COMMENT_LINE $B179 lda      #SCALE_PLAYER_SHOT
COMMENT_LINE $B179 sta      VIA_t1_cnt_lo
COMMENT_LINE $B179 lda      #-PLAYER_SHOT_LENGTH
FORCE_SYMBOL $B17C VIA_t1_cnt_lo
COMMENT $B17E corrected
FORCE_NO_SYMBOL $B17E
FORCE_SYMBOL $B180 VIA_int_flags
COMMENT_LINE $B185 ten cycles between poke hi and next influencing poke
COMMENT_LINE $B185 this is actually the same,
COMMENT_LINE $B185 since y movement is determined by register A
COMMENT_LINE $B185 which must be = by the callee
COMMENT $B185 Enable mux
FORCE_SYMBOL $B185 VIA_port_b
COMMENT $B187 Disable mux
FORCE_SYMBOL $B187 VIA_port_b
COMMENT $B189 Send X to A/D
FORCE_SYMBOL $B189 VIA_port_a
FORCE_NO_SYMBOL $B18B
COMMENT $B18D Clear T1H
FORCE_SYMBOL $B18D VIA_t1_cnt_hi
COMMENT $B18F Store pattern in shift register
FORCE_SYMBOL $B18F VIA_shift_reg
FORCE_SYMBOL $B191 PLAYER_SHOT_LENGTH
COMMENT_LINE $B196 this is actually the same,
COMMENT_LINE $B196 since y movement is determined by register A
COMMENT_LINE $B196 which must be = by the callee
COMMENT $B196 Enable mux
FORCE_SYMBOL $B196 VIA_port_b
COMMENT $B198 Disable mux
FORCE_SYMBOL $B198 VIA_port_b
COMMENT $B19A x 0
FORCE_SYMBOL $B19A VIA_port_a
COMMENT $B19C Clear T1H
FORCE_SYMBOL $B19C VIA_t1_cnt_hi
COMMENT_LINE $B19E doesn't matter
FORCE_SYMBOL $B19E entryOtherShotsContinue
COMMENT_LINE $B1A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B1A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B1A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $B1A1 Store Y in D/A register
FORCE_SYMBOL $B1A1 VIA_port_a
COMMENT $B1A3 Blank low, zero high?
FORCE_NO_SYMBOL $B1A3
FORCE_SYMBOL $B1A5 VIA_cntl
COMMENT $B1A8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B1A8 VIA_port_b
COMMENT $B1AA y must be set more than xx cycles on some vectrex
COMMENT $B1AB Disable mux
FORCE_SYMBOL $B1AB VIA_port_b
COMMENT $B1AD Store X in D/A register
FORCE_SYMBOL $B1AD VIA_port_a
COMMENT $B1AF enable timer
FORCE_SYMBOL $B1AF VIA_t1_cnt_hi
COMMENT_LINE $B1B1 calc next position
COMMENT $B1B1 preload next user stack
FORCE_SYMBOL $B1B3 playerShotSpeed
COMMENT_LINE $B1BE ................
COMMENT_LINE $B1BE in case this is WAS a four shot, we have to setup registers for the 4 shot scoopies -> other wise CRASH
COMMENT $B1BE lo(-_4_PLAYER_SHOT_LENGTH)
FORCE_SYMBOL $B1C8 SCALE_PLAYER_SHOT
FORCE_SYMBOL $B1CA VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B1CC
FORCE_SYMBOL $B1CE VIA_int_flags
FORCE_SYMBOL $B1D3 entryOtherShotsContinue
COMMENT_LINE $B1D6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B1D6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $B1D6 Store Y in D/A register
FORCE_SYMBOL $B1D6 VIA_port_a
COMMENT $B1D8 Blank low, zero high?
FORCE_NO_SYMBOL $B1D8
FORCE_SYMBOL $B1DA VIA_cntl
COMMENT $B1DD Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B1DD VIA_port_b
COMMENT $B1DF y must be set more than xx cycles on some vectrex
COMMENT $B1E0 Disable mux
FORCE_SYMBOL $B1E0 VIA_port_b
COMMENT $B1E2 Store X in D/A register
FORCE_SYMBOL $B1E2 VIA_port_a
COMMENT $B1E4 enable timer
FORCE_SYMBOL $B1E4 VIA_t1_cnt_hi
COMMENT_LINE $B1E6 calc next position
COMMENT $B1E6 preload next user stack
FORCE_SYMBOL $B1E8 playerShotSpeed
COMMENT_LINE $B1F3 ................
FORCE_SYMBOL $B1F7 SCALE_PLAYER_SHOT
FORCE_SYMBOL $B1F9 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B1FB
FORCE_SYMBOL $B1FD VIA_int_flags
FORCE_SYMBOL $B206 VIA_t1_cnt_lo
COMMENT $B209 ensure 0 so a dec works ok
FORCE_SYMBOL $B209 VIA_shift_reg
FORCE_NO_SYMBOL $B20B
FORCE_SYMBOL $B20D VIA_int_flags
COMMENT_LINE $B212 down left/2
COMMENT $B212 Enable mux
FORCE_SYMBOL $B212 VIA_port_b
COMMENT $B215 Disable mux
FORCE_SYMBOL $B215 VIA_port_b
COMMENT $B217 Send X to A/D
FORCE_SYMBOL $B217 VIA_port_a
FORCE_SYMBOL $B21B VIA_shift_reg
COMMENT $B21D 4 Clear T1H
FORCE_SYMBOL $B21D VIA_t1_cnt_hi
FORCE_SYMBOL $B21F PLAYER_SHOT_LENGTH_5
COMMENT_LINE $B223 RIGHT
COMMENT $B223 4 Send Y to A/D
FORCE_SYMBOL $B223 VIA_port_a
COMMENT $B225 4 Enable mux
FORCE_SYMBOL $B225 VIA_port_b
COMMENT $B227 6 Disable mux
FORCE_SYMBOL $B227 VIA_port_b
COMMENT $B229 4 Send X to A/D
FORCE_SYMBOL $B229 VIA_port_a
COMMENT $B22B 4 Clear T1H
FORCE_SYMBOL $B22B VIA_t1_cnt_hi
COMMENT_LINE $B231 up left/2
COMMENT $B231 4 Enable mux
FORCE_SYMBOL $B231 VIA_port_b
COMMENT $B233 2
COMMENT $B234 2
COMMENT $B235 6 Disable mux
FORCE_SYMBOL $B235 VIA_port_b
COMMENT $B237 4 Send X to A/D
FORCE_SYMBOL $B237 VIA_port_a
COMMENT $B239 2
FORCE_NO_SYMBOL $B239
COMMENT $B23B 4 Clear T1H
FORCE_SYMBOL $B23B VIA_t1_cnt_hi
COMMENT $B23D 2
COMMENT $B240 4 Store pattern in shift register
FORCE_SYMBOL $B240 VIA_shift_reg
FORCE_NO_SYMBOL $B244
COMMENT_LINE $B24B std      <VIA_port_b                  ;Enable mux
COMMENT $B24B Enable mux
FORCE_SYMBOL $B24B VIA_port_b
COMMENT $B24D Enable mux
FORCE_SYMBOL $B24D VIA_port_a
COMMENT $B251 Disable mux
FORCE_SYMBOL $B251 VIA_port_b
COMMENT $B253 Send X to A/D
FORCE_SYMBOL $B253 VIA_port_a
COMMENT $B255 Clear T1H
FORCE_SYMBOL $B255 VIA_t1_cnt_hi
COMMENT $B25C Clear T1H
FORCE_SYMBOL $B25C VIA_t1_cnt_hi
FORCE_SYMBOL $B25E SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $B260 VIA_t1_cnt_lo
FORCE_SYMBOL $B264 VIA_shift_reg
COMMENT_LINE $B266 ..
COMMENT_LINE $B266 down left/2
COMMENT $B266 Enable mux
FORCE_SYMBOL $B266 VIA_port_b
COMMENT $B269 Disable mux
FORCE_SYMBOL $B269 VIA_port_b
COMMENT $B26B Send X to A/D
FORCE_SYMBOL $B26B VIA_port_a
FORCE_SYMBOL $B26F VIA_shift_reg
COMMENT $B271 4 Clear T1H
FORCE_SYMBOL $B271 VIA_t1_cnt_hi
FORCE_SYMBOL $B273 PLAYER_SHOT_LENGTH_5
COMMENT_LINE $B275 RIGHT
COMMENT $B276 4 Send Y to A/D
FORCE_SYMBOL $B276 VIA_port_a
COMMENT $B278 4 Enable mux
FORCE_SYMBOL $B278 VIA_port_b
COMMENT $B27A 6 Disable mux
FORCE_SYMBOL $B27A VIA_port_b
COMMENT $B27C 4 Send X to A/D
FORCE_SYMBOL $B27C VIA_port_a
COMMENT $B27E 4 Clear T1H
FORCE_SYMBOL $B27E VIA_t1_cnt_hi
COMMENT_LINE $B280 up left/2
COMMENT $B281 4 Enable mux
FORCE_SYMBOL $B281 VIA_port_b
COMMENT $B283 2
COMMENT $B284 2
COMMENT $B285 6 Disable mux
FORCE_SYMBOL $B285 VIA_port_b
COMMENT $B287 4 Send X to A/D
FORCE_SYMBOL $B287 VIA_port_a
COMMENT $B289 2
FORCE_NO_SYMBOL $B289
COMMENT $B28B 4 Clear T1H
FORCE_SYMBOL $B28B VIA_t1_cnt_hi
COMMENT $B28D 2
COMMENT $B28E 4 Store pattern in shift register
FORCE_SYMBOL $B28E VIA_shift_reg
FORCE_SYMBOL $B290 SCALE_PLAYER_SHOT
FORCE_SYMBOL $B292 VIA_t1_cnt_lo
COMMENT_LINE $B296 std      <VIA_port_b                  ;Enable mux
COMMENT_LINE $B296 cranky needs split
COMMENT $B296 Enable mux
FORCE_SYMBOL $B296 VIA_port_b
COMMENT $B298 Enable mux
FORCE_SYMBOL $B298 VIA_port_a
COMMENT $B29C Disable mux
FORCE_SYMBOL $B29C VIA_port_b
COMMENT $B29E Send X to A/D
FORCE_SYMBOL $B29E VIA_port_a
COMMENT $B2A0 Clear T1H
FORCE_SYMBOL $B2A0 VIA_t1_cnt_hi
COMMENT $B2A7 Clear T1H
FORCE_SYMBOL $B2A7 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $B2AB
COMMENT $B2B4 Enable mux
FORCE_SYMBOL $B2B4 VIA_port_b
COMMENT_LINE $B2B6 sta      <VIA_port_b                  ;Enable mux
COMMENT_LINE $B2B6 stb      <VIA_port_a                  ;Enable mux
COMMENT $B2B7 Disable mux
FORCE_SYMBOL $B2B7 VIA_port_b
COMMENT $B2B9 Send X to A/D
FORCE_SYMBOL $B2B9 VIA_port_a
COMMENT $B2BB Clear T1H
FORCE_SYMBOL $B2BB VIA_t1_cnt_hi
COMMENT $B2C2 Clear T1H
FORCE_SYMBOL $B2C2 VIA_t1_cnt_hi
FORCE_SYMBOL $B2C4 SCALE_SCOOPIE_SHOT
FORCE_SYMBOL $B2C6 VIA_t1_cnt_lo
FORCE_SYMBOL $B2CA VIA_shift_reg
COMMENT_LINE $B2CC ..
COMMENT_LINE $B2CC down left/2
COMMENT $B2CC Enable mux
FORCE_SYMBOL $B2CC VIA_port_b
COMMENT $B2CF Disable mux
FORCE_SYMBOL $B2CF VIA_port_b
COMMENT $B2D1 Send X to A/D
FORCE_SYMBOL $B2D1 VIA_port_a
FORCE_SYMBOL $B2D5 VIA_shift_reg
COMMENT $B2D7 4 Clear T1H
FORCE_SYMBOL $B2D7 VIA_t1_cnt_hi
FORCE_SYMBOL $B2D9 PLAYER_SHOT_LENGTH_5
COMMENT_LINE $B2DC RIGHT
COMMENT $B2DC 4 Send Y to A/D
FORCE_SYMBOL $B2DC VIA_port_a
COMMENT $B2DE 4 Enable mux
FORCE_SYMBOL $B2DE VIA_port_b
COMMENT $B2E0 6 Disable mux
FORCE_SYMBOL $B2E0 VIA_port_b
COMMENT $B2E2 4 Send X to A/D
FORCE_SYMBOL $B2E2 VIA_port_a
COMMENT $B2E4 4 Clear T1H
FORCE_SYMBOL $B2E4 VIA_t1_cnt_hi
COMMENT_LINE $B2E6 up left/2
COMMENT $B2E7 4 Enable mux
FORCE_SYMBOL $B2E7 VIA_port_b
COMMENT $B2E9 2
COMMENT $B2EA 2
COMMENT $B2EB 6 Disable mux
FORCE_SYMBOL $B2EB VIA_port_b
COMMENT $B2ED 4 Send X to A/D
FORCE_SYMBOL $B2ED VIA_port_a
COMMENT $B2EF 2
FORCE_NO_SYMBOL $B2EF
COMMENT $B2F1 4 Clear T1H
FORCE_SYMBOL $B2F1 VIA_t1_cnt_hi
COMMENT $B2F3 2
COMMENT $B2F4 4 Store pattern in shift register
FORCE_SYMBOL $B2F4 VIA_shift_reg
COMMENT_LINE $B2F6 ..
FORCE_SYMBOL $B2F6 scoop2Shot4Done
COMMENT_LINE $B2F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B2F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $B2F9 lazer always start at the bottom
FORCE_SYMBOL $B2F9 SHOT_START_POSITION_Y
COMMENT $B2FB Store Y in D/A register
FORCE_SYMBOL $B2FB VIA_port_a
COMMENT $B2FD Blank low, zero high?
FORCE_NO_SYMBOL $B2FD
FORCE_SYMBOL $B2FF VIA_cntl
COMMENT $B302 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B302 VIA_port_b
COMMENT $B304 y must be set more than xx cycles on some vectrex
COMMENT $B305 Disable mux
FORCE_SYMBOL $B305 VIA_port_b
COMMENT $B307 Store X in D/A register
FORCE_SYMBOL $B307 VIA_port_a
COMMENT $B309 enable timer
FORCE_SYMBOL $B309 VIA_t1_cnt_hi
COMMENT_LINE $B30B calc next position
FORCE_SYMBOL $B30B playerXpos
FORCE_SYMBOL $B310 diverseFlags
FORCE_SYMBOL $B313 BIT_FLAG_AUTOFIRE
FORCE_SYMBOL $B317 current_button_state
FORCE_NO_SYMBOL $B31A
COMMENT $B31C pressed, this and last time -> cont pressed
FORCE_NO_SYMBOL $B31C
FORCE_SYMBOL $B320 playerNumberOfBulletsPerShot
COMMENT $B323 laser
FORCE_NO_SYMBOL $B323
FORCE_SYMBOL $B327 removeLazerShot
FORCE_SYMBOL $B330 gameScale
FORCE_SYMBOL $B334 gameScale
COMMENT_LINE $B337 watch out, double game scale might wrap to small numbers!
COMMENT_LINE $B337 that would be a very short laser!
COMMENT_LINE $B337 still - we take the "largest" 8 bit we can
FORCE_NO_SYMBOL $B337
FORCE_NO_SYMBOL $B33B
FORCE_SYMBOL $B33D VIA_t1_cnt_lo
FORCE_SYMBOL $B342 LAZER_WOBBLE_STRENGTH
FORCE_NO_SYMBOL $B34A
FORCE_SYMBOL $B34C VIA_int_flags
FORCE_SYMBOL $B350 laserLowestY
FORCE_NO_SYMBOL $B353
COMMENT $B356 otherwise laser always above enemey
FORCE_NO_SYMBOL $B356
COMMENT $B358 Send Y to A/D
FORCE_SYMBOL $B358 VIA_port_a
COMMENT $B35A Enable mux
FORCE_SYMBOL $B35A VIA_port_b
COMMENT $B35C Disable mux
FORCE_SYMBOL $B35C VIA_port_b
COMMENT $B35E Send X to A/D
FORCE_SYMBOL $B35E VIA_port_a
COMMENT $B362 Clear T1H
FORCE_SYMBOL $B362 VIA_t1_cnt_hi
COMMENT $B364 Store pattern in shift register
FORCE_SYMBOL $B364 VIA_shift_reg
FORCE_NO_SYMBOL $B366
FORCE_SYMBOL $B368 VIA_int_flags
COMMENT $B36C Store pattern in shift register
FORCE_SYMBOL $B36C VIA_shift_reg
FORCE_NO_SYMBOL $B36E
COMMENT $B370 /BLANK low and /ZERO low
FORCE_SYMBOL $B370 VIA_cntl
FORCE_NO_SYMBOL $B374
FORCE_SYMBOL $B37A scoopEnemy1
FORCE_NO_SYMBOL $B37D
COMMENT $B381 break laser
FORCE_NO_SYMBOL $B385
COMMENT $B389 break laser
FORCE_SYMBOL $B389 scoop1Shot6Done
COMMENT_LINE $B38C anti laser cranky
COMMENT $B38E Send Y to A/D
FORCE_SYMBOL $B38E VIA_port_a
FORCE_SYMBOL $B391 VIA_port_b
FORCE_SYMBOL $B394 VIA_port_b
FORCE_SYMBOL $B396 gameScale
FORCE_SYMBOL $B399 VIA_t1_cnt_lo
COMMENT $B39B lazer always start at the bottom
FORCE_SYMBOL $B39B SHOT_START_POSITION_Y
FORCE_SYMBOL $B39D playerXpos
COMMENT $B3A0 Store Y in D/A register
FORCE_SYMBOL $B3A0 VIA_port_a
COMMENT $B3A2 Blank low, zero high?
FORCE_NO_SYMBOL $B3A2
FORCE_SYMBOL $B3A4 VIA_cntl
COMMENT $B3A7 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B3A7 VIA_port_b
COMMENT $B3A9 y must be set more than xx cycles on some vectrex
COMMENT $B3AA Disable mux
FORCE_SYMBOL $B3AA VIA_port_b
COMMENT $B3AC Store X in D/A register
FORCE_SYMBOL $B3AC VIA_port_a
COMMENT $B3AE enable timer
FORCE_SYMBOL $B3AE VIA_t1_cnt_hi
FORCE_SYMBOL $B3B0 SCALE_PLAYER_SHOT
FORCE_SYMBOL $B3B2 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B3B4
FORCE_SYMBOL $B3B6 VIA_int_flags
COMMENT_LINE $B3BD std      <VIA_port_b                  ;Enable mux
COMMENT $B3BD Enable mux
FORCE_SYMBOL $B3BD VIA_port_b
COMMENT $B3BF Enable mux
FORCE_SYMBOL $B3BF VIA_port_a
COMMENT $B3C3 Disable mux
FORCE_SYMBOL $B3C3 VIA_port_b
COMMENT $B3C5 Send X to A/D
FORCE_SYMBOL $B3C5 VIA_port_a
COMMENT $B3C7 Clear T1H
FORCE_SYMBOL $B3C7 VIA_t1_cnt_hi
COMMENT $B3CE Clear T1H
FORCE_SYMBOL $B3CE VIA_t1_cnt_hi
FORCE_SYMBOL $B3D0 gameScale
COMMENT $B3D4 double -1 - so gamescale $80 is not "fucked"
FORCE_SYMBOL $B3D4 gameScale
COMMENT_LINE $B3D7 subb #10
FORCE_NO_SYMBOL $B3D7
FORCE_NO_SYMBOL $B3DB
FORCE_SYMBOL $B3DD VIA_t1_cnt_lo
FORCE_SYMBOL $B3E1 laserEnemyPointerRight
FORCE_SYMBOL $B3E6 laserLowestYRight
FORCE_NO_SYMBOL $B3E9
COMMENT $B3EC otherwise laser always above enemey
FORCE_NO_SYMBOL $B3EC
FORCE_NO_SYMBOL $B3F0
COMMENT_LINE $B3F2 laser go on
COMMENT $B3F2 Send Y to A/D
FORCE_SYMBOL $B3F2 VIA_port_a
COMMENT $B3F4 Enable mux
FORCE_SYMBOL $B3F4 VIA_port_b
COMMENT $B3F6 Disable mux
FORCE_SYMBOL $B3F6 VIA_port_b
COMMENT $B3F8 Send X to A/D
FORCE_SYMBOL $B3F8 VIA_port_a
COMMENT $B3FC Clear T1H
FORCE_SYMBOL $B3FC VIA_t1_cnt_hi
COMMENT $B3FE Store pattern in shift register
FORCE_SYMBOL $B3FE VIA_shift_reg
FORCE_NO_SYMBOL $B400
FORCE_SYMBOL $B403 VIA_int_flags
COMMENT_LINE $B407 waitDoneLazer1\?
COMMENT $B407 Store pattern in shift register
FORCE_SYMBOL $B407 VIA_shift_reg
FORCE_NO_SYMBOL $B409
COMMENT $B40B /BLANK low and /ZERO low
FORCE_SYMBOL $B40B VIA_cntl
FORCE_NO_SYMBOL $B40F
FORCE_SYMBOL $B415 scoopEnemy2
FORCE_NO_SYMBOL $B418
COMMENT $B41C break laser
FORCE_NO_SYMBOL $B420
COMMENT $B424 break laser
FORCE_SYMBOL $B424 scoop2Shot4Done
COMMENT_LINE $B427 anti laser cranky
COMMENT $B429 Send Y to A/D
FORCE_SYMBOL $B429 VIA_port_a
FORCE_SYMBOL $B42C VIA_port_b
FORCE_SYMBOL $B42F VIA_port_b
FORCE_SYMBOL $B431 gameScale
FORCE_SYMBOL $B434 VIA_t1_cnt_lo
COMMENT $B436 lazer always start at the bottom
FORCE_SYMBOL $B436 SHOT_START_POSITION_Y
FORCE_SYMBOL $B438 playerXpos
COMMENT $B43B Store Y in D/A register
FORCE_SYMBOL $B43B VIA_port_a
COMMENT $B43D Blank low, zero high?
FORCE_NO_SYMBOL $B43D
FORCE_SYMBOL $B43F VIA_cntl
COMMENT $B442 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B442 VIA_port_b
COMMENT $B444 y must be set more than xx cycles on some vectrex
COMMENT $B445 Disable mux
FORCE_SYMBOL $B445 VIA_port_b
COMMENT $B447 Store X in D/A register
FORCE_SYMBOL $B447 VIA_port_a
COMMENT $B449 enable timer
FORCE_SYMBOL $B449 VIA_t1_cnt_hi
FORCE_SYMBOL $B44B SCALE_PLAYER_SHOT
FORCE_SYMBOL $B44D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $B44F
FORCE_SYMBOL $B451 VIA_int_flags
COMMENT $B458 Enable mux
FORCE_SYMBOL $B458 VIA_port_b
COMMENT_LINE $B45A sta      <VIA_port_b                  ;Enable mux
COMMENT_LINE $B45A stb      <VIA_port_a                  ;Enable mux
COMMENT $B45B Disable mux
FORCE_SYMBOL $B45B VIA_port_b
COMMENT $B45D Send X to A/D
FORCE_SYMBOL $B45D VIA_port_a
COMMENT $B45F Clear T1H
FORCE_SYMBOL $B45F VIA_t1_cnt_hi
COMMENT $B466 Clear T1H
FORCE_SYMBOL $B466 VIA_t1_cnt_hi
FORCE_SYMBOL $B468 gameScale
FORCE_SYMBOL $B46C gameScale
FORCE_NO_SYMBOL $B46F
FORCE_NO_SYMBOL $B473
COMMENT_LINE $B475 subb #10
FORCE_SYMBOL $B475 VIA_t1_cnt_lo
FORCE_SYMBOL $B479 laserEnemyPointerLeft
FORCE_SYMBOL $B47E laserLowestYLeft
FORCE_NO_SYMBOL $B481
COMMENT $B484 otherwise laser always above enemey
FORCE_NO_SYMBOL $B484
FORCE_NO_SYMBOL $B488
COMMENT_LINE $B48A laser go on
COMMENT $B48A Send Y to A/D
FORCE_SYMBOL $B48A VIA_port_a
COMMENT $B48C Enable mux
FORCE_SYMBOL $B48C VIA_port_b
COMMENT $B48E Disable mux
FORCE_SYMBOL $B48E VIA_port_b
COMMENT $B490 Send X to A/D
FORCE_SYMBOL $B490 VIA_port_a
COMMENT $B494 Clear T1H
FORCE_SYMBOL $B494 VIA_t1_cnt_hi
COMMENT $B496 Store pattern in shift register
FORCE_SYMBOL $B496 VIA_shift_reg
FORCE_NO_SYMBOL $B498
FORCE_SYMBOL $B49B VIA_int_flags
COMMENT_LINE $B49F waitDoneLazer1\?
COMMENT $B49F Store pattern in shift register
FORCE_SYMBOL $B49F VIA_shift_reg
FORCE_NO_SYMBOL $B4A1
COMMENT $B4A3 /BLANK low and /ZERO low
FORCE_SYMBOL $B4A3 VIA_cntl
FORCE_SYMBOL $B4A5 scoop2Shot4Done
COMMENT_LINE $B4A8 bank 2
COMMENT_LINE $B4A8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B4A8 new list object to U
COMMENT_LINE $B4A8 destroys d, u
FORCE_SYMBOL $B4A8 fwlist_empty_head
FORCE_SYMBOL $B4AB OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $B4B1 set the new empty head
COMMENT $B4B1 the next in out empty list will be the new
FORCE_SYMBOL $B4B1 FW_NEXT_OBJECT
COMMENT $B4B3 head of our empty list
FORCE_SYMBOL $B4B3 fwlist_empty_head
COMMENT_LINE $B4B6 load last of current object list
COMMENT_LINE $B4B6 the old head is always our next
FORCE_SYMBOL $B4B6 fwlist_objects_head
FORCE_SYMBOL $B4B9 FW_NEXT_OBJECT
COMMENT_LINE $B4BB newobject is always head
FORCE_SYMBOL $B4BB fwlist_objects_head
COMMENT_LINE $B4BF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B4BF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B4BF this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $B4BF it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $B4BF sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $B4BF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B4BF in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $B4BF destroys x, y
COMMENT_LINE $B4BF puls from ds the next object behaviour
COMMENT_LINE $B4BF this version is called at the end of an explosion called by "behaviours"
COMMENT $B4BF x -> pointer object struture (correction of offset)
FORCE_SYMBOL $B4BF u_offset1
COMMENT $B4C1 is it the first?
FORCE_SYMBOL $B4C1 fwlist_objects_head
COMMENT $B4C4 no -> jump
COMMENT $B4C6 s pointer to next objext
FORCE_SYMBOL $B4C6 FW_NEXT_OBJECT
COMMENT $B4C8 the next object will be the first
FORCE_SYMBOL $B4C8 fwlist_objects_head
COMMENT $B4CD start at list head
FORCE_SYMBOL $B4CD fwlist_objects_head
COMMENT $B4D1 am I the next object of the current investigated list element
FORCE_SYMBOL $B4D1 FW_NEXT_OBJECT
COMMENT $B4D3 jup -> jump
COMMENT $B4D5 otherwise load the next as new current
FORCE_SYMBOL $B4D5 FW_NEXT_OBJECT
COMMENT $B4D8 and search further
COMMENT $B4DA we load "our" next object to s
FORCE_SYMBOL $B4DA FW_NEXT_OBJECT
COMMENT $B4DC and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $B4DC FW_NEXT_OBJECT
COMMENT $B4DE and clean up the empties
COMMENT $B4DE set u free, as new free head
FORCE_SYMBOL $B4DE fwlist_empty_head
COMMENT $B4E2 load to u the next linked list element
FORCE_SYMBOL $B4E2 FW_NEXT_OBJECT
FORCE_SYMBOL $B4E5 fwlist_empty_head
COMMENT_LINE $B4E8 do a clean ending - which is usually done at the end of "SmartDraw"
FORCE_NO_SYMBOL $B4E8
COMMENT $B4EA /BLANK low and /ZERO low
FORCE_SYMBOL $B4EA VIA_cntl
FORCE_NO_SYMBOL $B4EC
FORCE_SYMBOL $B4EE VIA_int_flags
COMMENT $B4F2 (D = y,x, X = vectorlist)
COMMENT_LINE $B4F4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B4F4 MEGA simple particles and emitters
COMMENT_LINE $B4F4 one object only has 6 byte
COMMENT_LINE $B4F4 thus nearly 140 objects can be created!
COMMENT_LINE $B4F4 the demo runs with abour 135 dots
COMMENT_LINE $B4F4 ***************************************************************************
COMMENT $B4F6 Store Y in D/A register
FORCE_SYMBOL $B4F6 VIA_port_a
COMMENT $B4F8 Blank low, zero high?
FORCE_NO_SYMBOL $B4F8
FORCE_SYMBOL $B4FA VIA_cntl
COMMENT $B4FD Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B4FD VIA_port_b
COMMENT $B4FF y must be set more than xx cycles on some vectrex
COMMENT $B500 Disable mux
FORCE_SYMBOL $B500 VIA_port_b
COMMENT $B502 Store X in D/A register
FORCE_SYMBOL $B502 VIA_port_a
COMMENT $B504 enable timer
FORCE_SYMBOL $B504 VIA_t1_cnt_hi
COMMENT_LINE $B506 change coordinates, 16 bit
COMMENT_LINE $B506 ypos
COMMENT_LINE $B510 xpos
COMMENT $B51E preload next user stack
FORCE_NO_SYMBOL $B520
FORCE_NO_SYMBOL $B522
FORCE_SYMBOL $B524 VIA_int_flags
COMMENT $B528 Store intensity in D/A
FORCE_SYMBOL $B528 VIA_port_a
COMMENT $B52A mux disabled channel 2
FORCE_NO_SYMBOL $B52A
FORCE_SYMBOL $B52D VIA_port_b
COMMENT $B52F mux enabled channel 2
FORCE_SYMBOL $B52F VIA_port_b
COMMENT $B531 turn off mux
FORCE_SYMBOL $B531 VIA_port_b
COMMENT $B533 really BRIGHT
FORCE_NO_SYMBOL $B533
COMMENT_LINE $B535 print a rocket
COMMENT $B536 Store in VIA shift register
FORCE_SYMBOL $B536 VIA_shift_reg
COMMENT $B538 Delay leaving beam in place
COMMENT $B53B Blank beam in VIA shift register
FORCE_SYMBOL $B53B VIA_shift_reg
FORCE_NO_SYMBOL $B53D
COMMENT $B53F Store intensity in D/A
FORCE_SYMBOL $B53F VIA_port_a
COMMENT $B541 mux disabled channel 2
FORCE_NO_SYMBOL $B541
FORCE_SYMBOL $B544 VIA_port_b
COMMENT $B546 mux enabled channel 2
FORCE_SYMBOL $B546 VIA_port_b
COMMENT $B548 turn off mux
FORCE_SYMBOL $B548 VIA_port_b
FORCE_NO_SYMBOL $B54A
COMMENT $B54C /BLANK low and /ZERO low
FORCE_SYMBOL $B54C VIA_cntl
COMMENT_LINE $B550 ...............................................
FORCE_SYMBOL $B552 playSoundFlags
FORCE_NO_SYMBOL $B555
COMMENT_LINE $B557 bne noNewFWSound
COMMENT $B557 FW2Data
FORCE_NO_SYMBOL $B557
FORCE_SYMBOL $B55A sfx_pointer_1
FORCE_NO_SYMBOL $B55D
FORCE_SYMBOL $B55F PARTICLES_PER_FIRE
FORCE_SYMBOL $B561 tmp1
FORCE_SYMBOL $B564 newFWObject
FORCE_SYMBOL $B567 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $B56D 16 bit position of velocityParticle
FORCE_SYMBOL $B570 FW_Y_POS
FORCE_SYMBOL $B574 FW_X_POS
FORCE_SYMBOL $B576 FW_ZERO
FORCE_SYMBOL $B579 random_seed
FORCE_NO_SYMBOL $B57F
FORCE_SYMBOL $B581 random_seed
FORCE_SYMBOL $B584 FW_Y_VEL
FORCE_SYMBOL $B586 random_seed
FORCE_NO_SYMBOL $B58C
FORCE_SYMBOL $B58E random_seed
COMMENT $B591 slightly different FW_AGE
FORCE_NO_SYMBOL $B591
FORCE_NO_SYMBOL $B594
FORCE_SYMBOL $B596 FW_AGE
FORCE_SYMBOL $B598 random_seed
FORCE_NO_SYMBOL $B59E
FORCE_SYMBOL $B5A0 random_seed
FORCE_SYMBOL $B5A6 FW_X_VEL
FORCE_SYMBOL $B5A8 velocityPositiveXParticleParticleBehaviour
FORCE_SYMBOL $B5AB FW_BEHAVIOUR
FORCE_SYMBOL $B5AD tmp1
FORCE_SYMBOL $B5B4 fwdestroyPObject
COMMENT_LINE $B5B7 ***************************************************************************
COMMENT_LINE $B5B7 position to
COMMENT_LINE $B5B9 LEFT half of firework
COMMENT $B5B9 Store Y in D/A register
FORCE_SYMBOL $B5B9 VIA_port_a
COMMENT $B5BB Blank low, zero high?
FORCE_NO_SYMBOL $B5BB
FORCE_SYMBOL $B5BD VIA_cntl
COMMENT $B5C0 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B5C0 VIA_port_b
COMMENT $B5C2 y must be set more than xx cycles on some vectrex
COMMENT $B5C3 Disable mux
FORCE_SYMBOL $B5C3 VIA_port_b
COMMENT $B5C5 Store X in D/A register
FORCE_SYMBOL $B5C5 VIA_port_a
COMMENT $B5C7 enable timer
FORCE_SYMBOL $B5C7 VIA_t1_cnt_hi
COMMENT_LINE $B5C9 Thought:
COMMENT_LINE $B5C9 the velocity stuuf needs only be done ONCE per 'rocket', not per particle!
COMMENT_LINE $B5C9 update
COMMENT_LINE $B5C9 x velocity towards 0
FORCE_SYMBOL $B5CD GRAVITY_X
COMMENT_LINE $B5D2 xpos
COMMENT_LINE $B5DA y velocity towards -128
FORCE_SYMBOL $B5DC GRAVITY_Y
COMMENT_LINE $B5DF Hm... no overflow occurs - so don't check... (experimental proof :-) )
COMMENT_LINE $B5E1 change coordinates, 16 bit
COMMENT_LINE $B5E1 ypos
COMMENT_LINE $B5E9 aging
FORCE_SYMBOL $B5F1 VIA_t1_cnt_lo
FORCE_SYMBOL $B5F8 fwshiftValues
COMMENT_LINE $B601 assuming WAIT is finished by now!
COMMENT $B601 Store in VIA shift register
FORCE_SYMBOL $B601 VIA_shift_reg
COMMENT $B606 Store in VIA shift register
FORCE_SYMBOL $B606 VIA_shift_reg
COMMENT $B60B 75-0
FORCE_NO_SYMBOL $B60C
COMMENT_LINE $B60E asra
COMMENT_LINE $B60F aslb
COMMENT_LINE $B610 RIGHT half of firework
COMMENT $B610 Store Y in D/A register
FORCE_SYMBOL $B610 VIA_port_a
COMMENT $B612 Blank low, zero high?
FORCE_NO_SYMBOL $B612
FORCE_SYMBOL $B614 VIA_cntl
COMMENT $B617 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $B617 VIA_port_b
COMMENT $B619 y must be set more than xx cycles on some vectrex
COMMENT $B61A Disable mux
FORCE_SYMBOL $B61A VIA_port_b
COMMENT $B61C Store X in D/A register
FORCE_SYMBOL $B61C VIA_port_a
COMMENT $B61E enable timer
FORCE_SYMBOL $B61E VIA_t1_cnt_hi
FORCE_NO_SYMBOL $B620
FORCE_SYMBOL $B622 VIA_t1_cnt_lo
COMMENT $B626 preload next user stack
FORCE_NO_SYMBOL $B628
FORCE_SYMBOL $B62A VIA_int_flags
COMMENT $B62E Store in VIA shift register
FORCE_SYMBOL $B62E VIA_shift_reg
FORCE_NO_SYMBOL $B631
COMMENT $B633 Store in VIA shift register
FORCE_SYMBOL $B633 VIA_shift_reg
COMMENT $B635 /BLANK low and /ZERO low
FORCE_SYMBOL $B635 VIA_cntl
COMMENT $B64D uses a macro below, therefor we must laod it here
COMMENT_LINE $B64D bank 2
COMMENT_LINE $B64D this entire file is only for saving stack!
COMMENT_LINE $B64D scoopy 1 always last
COMMENT_LINE $B64D scoopy 2 always second last
COMMENT_LINE $B64D plus 15 for minestorm save
COMMENT_LINE $B64D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B64D saves the scoopies to a save position (in playershotObject list)
COMMENT_LINE $B64D save for minestorm
COMMENT_LINE $B64D save for Warp
FORCE_SYMBOL $B64D scoopEnemy1
COMMENT_LINE $B652 copy block
FORCE_SYMBOL $B652 SAVE1_ENEMY_ADDRESS
FORCE_SYMBOL $B655 EnemyStruct
COMMENT $B657 jsr Move_Mem_a
COMMENT $B659 Copy the byte
COMMENT $B65D Decrement the count
COMMENT $B65E Go back until finished
FORCE_SYMBOL $B660 SAVE1_ENEMY_ADDRESS
FORCE_SYMBOL $B663 scoopEnemy1
COMMENT_LINE $B666 copy block end
FORCE_SYMBOL $B666 scoopEnemy2
COMMENT_LINE $B66B copy block
FORCE_SYMBOL $B66B SAVE2_ENEMY_ADDRESS
FORCE_SYMBOL $B66E EnemyStruct
COMMENT $B670 jsr Move_Mem_a
COMMENT $B672 Copy the byte
COMMENT $B676 Decrement the count
COMMENT $B677 Go back until finished
FORCE_SYMBOL $B679 SAVE2_ENEMY_ADDRESS
FORCE_SYMBOL $B67C scoopEnemy2
COMMENT_LINE $B67F copy block end
COMMENT_LINE $B67F all "linkage" and enemy list stuff is done after warp!
COMMENT_LINE $B680 copyies scoopies from their current posiion
COMMENT_LINE $B680 to the beginning of an enemy list
COMMENT_LINE $B680 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B680 ensure scoopy1 is lower scoopy 2
FORCE_SYMBOL $B680 scoopEnemy1
FORCE_NO_SYMBOL $B683
COMMENT $B68A jsr newEnemyObject
FORCE_SYMBOL $B68A enemylist_empty_head
FORCE_SYMBOL $B68D OBJECT_LIST_COMPARE_ADDRESS
COMMENT $B693 and remember that we created a new object
FORCE_SYMBOL $B693 enemyCount
COMMENT_LINE $B696 set the new empty head
COMMENT $B696 the next in out empty list will be the new
FORCE_SYMBOL $B696 NEXT_ENEMY_OBJECT
COMMENT $B698 head of our empty list
FORCE_SYMBOL $B698 enemylist_empty_head
COMMENT_LINE $B69B load last of current object list
COMMENT_LINE $B69B the old head is always our next
FORCE_SYMBOL $B69D enemylist_objects_head
FORCE_SYMBOL $B6A1 BEHAVIOUR
COMMENT $B6A3 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $B6A3
FORCE_SYMBOL $B6AB NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6AD BEHAVIOUR
COMMENT $B6AF enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $B6AF
FORCE_SYMBOL $B6B5 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6B7 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6BD NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6C0 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6C2 NEXT_ENEMY_OBJECT
COMMENT $B6C9 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $B6C9
FORCE_SYMBOL $B6D1 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6D3 BEHAVIOUR
COMMENT $B6D5 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $B6D5
FORCE_SYMBOL $B6DB NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6DD NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B6E3 NEXT_ENEMY_OBJECT
COMMENT_LINE $B6E6 newobject is always head
FORCE_SYMBOL $B6E6 enemylist_objects_head
COMMENT $B6EB this is no enemy - in the level sense!
FORCE_SYMBOL $B6EB enemyCount
COMMENT_LINE $B6EE object struct in u
FORCE_SYMBOL $B6F0 EnemyStruct
COMMENT $B6F2 the next in out empty list will be the new
FORCE_SYMBOL $B6F2 NEXT_ENEMY_OBJECT
COMMENT $B6F5 jsr Move_Mem_a
COMMENT $B6F7 Copy the byte
COMMENT $B6FB Decrement the count
COMMENT $B6FC Go back until finished
COMMENT $B6FE the next in out empty list will be the new
FORCE_SYMBOL $B6FE NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B701 SCOOP_PLAYER_YPOS
FORCE_SYMBOL $B703 playerXpos
FORCE_SYMBOL $B706 SCOOP_RIGHT_PLAYER_XOFFSET
FORCE_SYMBOL $B708 Y_POS
FORCE_SYMBOL $B70A scoopEnemy1
FORCE_SYMBOL $B70D scoopEnemy2
FORCE_NO_SYMBOL $B710
COMMENT $B717 jsr newEnemyObject
FORCE_SYMBOL $B717 enemylist_empty_head
FORCE_SYMBOL $B71A OBJECT_LIST_COMPARE_ADDRESS
COMMENT $B720 and remember that we created a new object
FORCE_SYMBOL $B720 enemyCount
COMMENT_LINE $B723 set the new empty head
COMMENT $B723 the next in out empty list will be the new
FORCE_SYMBOL $B723 NEXT_ENEMY_OBJECT
COMMENT $B725 head of our empty list
FORCE_SYMBOL $B725 enemylist_empty_head
COMMENT_LINE $B728 load last of current object list
COMMENT_LINE $B728 the old head is always our next
FORCE_SYMBOL $B72A enemylist_objects_head
FORCE_SYMBOL $B72E BEHAVIOUR
COMMENT $B730 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $B730
FORCE_SYMBOL $B738 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B73A BEHAVIOUR
COMMENT $B73C enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $B73C
FORCE_SYMBOL $B742 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B744 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B74A NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B74D NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B74F NEXT_ENEMY_OBJECT
COMMENT $B756 enemyPlayerControlledRightBehaviour
FORCE_NO_SYMBOL $B756
FORCE_SYMBOL $B75E NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B760 BEHAVIOUR
COMMENT $B762 enemyPlayerControlledLeftBehaviour
FORCE_NO_SYMBOL $B762
FORCE_SYMBOL $B768 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B76A NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B770 NEXT_ENEMY_OBJECT
COMMENT_LINE $B773 newobject is always head
FORCE_SYMBOL $B773 enemylist_objects_head
COMMENT $B778 this is no enemy - in the level sense!
FORCE_SYMBOL $B778 enemyCount
COMMENT_LINE $B77B object struct in u
COMMENT_LINE $B77B x dest
COMMENT_LINE $B77B us source
FORCE_SYMBOL $B77D EnemyStruct
COMMENT $B77F the next in out empty list will be the new
FORCE_SYMBOL $B77F NEXT_ENEMY_OBJECT
COMMENT $B782 jsr Move_Mem_a
COMMENT $B784 Copy the byte
COMMENT $B788 Decrement the count
COMMENT $B789 Go back until finished
COMMENT $B78B the next in out empty list will be the new
FORCE_SYMBOL $B78B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $B78E SCOOP_PLAYER_YPOS
FORCE_SYMBOL $B790 playerXpos
FORCE_SYMBOL $B793 SCOOP_LEFT_PLAYER_XOFFSET
FORCE_SYMBOL $B795 Y_POS
FORCE_SYMBOL $B797 scoopEnemy2
COMMENT $B79B get button status
FORCE_SYMBOL $B79B getButtonState
COMMENT $B79E button 4 unpause
FORCE_NO_SYMBOL $B79E
FORCE_NO_SYMBOL $B7A0
COMMENT $B7A5 Store Y in D/A register
FORCE_SYMBOL $B7A5 VIA_port_a
COMMENT $B7A7 Blank low, zero high?
FORCE_NO_SYMBOL $B7A7
FORCE_SYMBOL $B7A9 VIA_cntl
COMMENT $B7AC Enable mux
FORCE_SYMBOL $B7AC VIA_port_b
COMMENT $B7AE wait 6 cycles
COMMENT $B7B0 Enable mux
FORCE_SYMBOL $B7B0 VIA_port_b
COMMENT $B7B2 Store X in D/A register
FORCE_SYMBOL $B7B2 VIA_port_a
COMMENT $B7B4 enable timer
FORCE_SYMBOL $B7B4 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $B7B6
FORCE_SYMBOL $B7B8 VIA_int_flags
COMMENT $B7BD 0degrees: 0
COMMENT $B7BF 1degrees: 1
COMMENT $B7C1 2degrees: 2
COMMENT $B7C3 3degrees: 4
COMMENT $B7C5 4degrees: 5
COMMENT $B7C7 5degrees: 7
COMMENT $B7C9 6degrees: 8
COMMENT $B7CB 7degrees: 9
COMMENT $B7CD 8degrees: 11
COMMENT $B7CF 9degrees: 12
COMMENT $B7D1 10degrees: 14
COMMENT $B7D3 1degrees: 15
COMMENT $B7D5 2degrees: 16
COMMENT $B7D7 3degrees: 18
COMMENT $B7D9 4degrees: 19
COMMENT $B7DB 5degrees: 21
COMMENT $B7DD 6degrees: 22
COMMENT $B7DF 7degrees: 23
COMMENT $B7E1 8degrees: 25
COMMENT $B7E3 9degrees: 26
COMMENT $B7E5 20degrees: 28
COMMENT $B7E7 1degrees: 29
COMMENT $B7E9 2degrees: 31
COMMENT $B7EB 3degrees: 32
COMMENT $B7ED 4degrees: 33
COMMENT $B7EF 56degrees: 35
COMMENT $B7F1 6degrees: 36
COMMENT $B7F3 7degrees: 38
COMMENT $B7F5 8degrees: 39
COMMENT $B7F7 9degrees: 40
COMMENT $B7F9 30degrees: 42
COMMENT $B7FB 1degrees: 43
COMMENT $B7FD 2degrees: 45
COMMENT $B7FF 3degrees: 46
COMMENT $B801 4degrees: 48
COMMENT $B803 5degrees: 49
COMMENT $B805 6degrees: 50
COMMENT $B807 7degrees: 52
COMMENT $B809 8degrees: 53
COMMENT $B80B 9degrees: 55
COMMENT $B80D 40degrees: 56
COMMENT $B80F 1degrees: 57
COMMENT $B811 2degrees: 59
COMMENT $B813 3degrees: 60
COMMENT $B815 4degrees: 62
COMMENT $B817 5degrees: 63
COMMENT $B819 6degrees: 64
COMMENT $B81B 7degrees: 66
COMMENT $B81D 8degrees: 67
COMMENT $B81F 9degrees: 69
COMMENT $B821 50degrees: 70
COMMENT $B823 1degrees: 72
COMMENT $B825 2degrees: 73
COMMENT $B827 3degrees: 74
COMMENT $B829 4degrees: 76
COMMENT $B82B 5degrees: 77
COMMENT $B82D 6degrees: 79
COMMENT $B82F 7degrees: 80
COMMENT $B831 8degrees: 81
COMMENT $B833 9degrees: 83
COMMENT $B835 60degrees: 84
COMMENT $B837 1degrees: 86
COMMENT $B839 2degrees: 87
COMMENT $B83B 2degrees: 88
COMMENT $B83D 3degrees: 90
COMMENT $B83F 4degrees: 91
COMMENT $B841 5degrees: 93
COMMENT $B843 6degrees: 94
COMMENT $B845 7degrees: 95
COMMENT $B847 8degrees: 97
COMMENT $B849 9degrees: 98
COMMENT $B84B 70degrees: 100
COMMENT $B84D 1degrees: 101
COMMENT $B84F 2degrees: 103
COMMENT $B851 3degrees: 104
COMMENT $B853 4degrees: 105
COMMENT $B855 5degrees: 107
COMMENT $B857 6degrees: 108
COMMENT $B859 7degrees: 110
COMMENT $B85B 8degrees: 111
COMMENT $B85D 9degrees: 112
COMMENT $B85F 90degrees: 114
COMMENT $B861 1degrees: 115
COMMENT $B863 2degrees: 117
COMMENT $B865 3degrees: 118
COMMENT $B867 4degrees: 119
COMMENT $B869 5degrees: 121
COMMENT $B86B 6degrees: 122
COMMENT $B86D 7degrees: 124
COMMENT $B86F 8degrees: 125
COMMENT $B871 9degrees: 127
COMMENT $B873 100degrees: 128
COMMENT $B875 1degrees: 129
COMMENT $B877 2degrees: 131
COMMENT $B879 3degrees: 132
COMMENT $B87B 4degrees: 134
COMMENT $B87D 5degrees: 135
COMMENT $B87F 6degrees: 136
COMMENT $B881 7degrees: 138
COMMENT $B883 8degrees: 139
COMMENT $B885 9degrees: 141
COMMENT $B887 110degrees: 142
COMMENT $B889 1degrees: 143
COMMENT $B88B 2degrees: 145
COMMENT $B88D 3degrees: 146
COMMENT $B88F 4degrees: 148
COMMENT $B891 5degrees: 149
COMMENT $B893 6degrees: 151
COMMENT $B895 7degrees: 152
COMMENT $B897 8degrees: 153
COMMENT $B899 9degrees: 155
COMMENT $B89B 120degrees: 156
COMMENT $B89D 1degrees: 158
COMMENT $B89F 2degrees: 159
COMMENT $B8A1 3degrees: 160
COMMENT $B8A3 4degrees: 162
COMMENT $B8A5 5degrees: 163
COMMENT $B8A7 6degrees: 165
COMMENT $B8A9 7degrees: 166
COMMENT $B8AB 8degrees: 167
COMMENT $B8AD 9degrees: 169
COMMENT $B8AF 130degrees: 170
COMMENT $B8B1 1degrees: 172
COMMENT $B8B3 2degrees: 173
COMMENT $B8B5 3degrees: 175
COMMENT $B8B7 4degrees: 176
COMMENT $B8B9 5degrees: 177
COMMENT $B8BB 6degrees: 179
COMMENT $B8BD 7degrees: 180
COMMENT $B8BF 8degrees: 182
COMMENT $B8C1 9degrees: 183
COMMENT $B8C3 140degrees: 184
COMMENT $B8C5 degrees: 186
COMMENT $B8C7 degrees: 187
COMMENT $B8C9 degrees: 189
COMMENT $B8CB degrees: 190
COMMENT $B8CD degrees: 191
COMMENT $B8CF degrees: 193
COMMENT $B8D1 degrees: 194
COMMENT $B8D3 degrees: 196
COMMENT $B8D5 degrees: 197
COMMENT $B8D7 degrees: 199
COMMENT $B8D9 degrees: 200
COMMENT $B8DB degrees: 201
COMMENT $B8DD degrees: 203
COMMENT $B8DF degrees: 204
COMMENT $B8E1 degrees: 206
COMMENT $B8E3 degrees: 207
COMMENT $B8E5 degrees: 208
COMMENT $B8E7 degrees: 210
COMMENT $B8E9 degrees: 211
COMMENT $B8EB degrees: 213
COMMENT $B8ED degrees: 214
COMMENT $B8EF degrees: 215
COMMENT $B8F1 degrees: 217
COMMENT $B8F3 degrees: 218
COMMENT $B8F5 degrees: 220
COMMENT $B8F7 degrees: 221
COMMENT $B8F9 degrees: 223
COMMENT $B8FB degrees: 224
COMMENT $B8FD degrees: 225
COMMENT $B8FF degrees: 227
COMMENT $B901 degrees: 228
COMMENT $B903 degrees: 230
COMMENT $B905 degrees: 231
COMMENT $B907 degrees: 232
COMMENT $B909 degrees: 234
COMMENT $B90B degrees: 235
COMMENT $B90D degrees: 237
COMMENT $B90F degrees: 238
COMMENT $B911 degrees: 239
COMMENT $B913 degrees: 241
COMMENT $B915 degrees: 242
COMMENT $B917 degrees: 244
COMMENT $B919 degrees: 245
COMMENT $B91B degrees: 247
COMMENT $B91D degrees: 248
COMMENT $B91F degrees: 249
COMMENT $B921 degrees: 251
COMMENT $B923 degrees: 252
COMMENT $B925 degrees: 254
COMMENT $B927 degrees: 255
COMMENT $B929 degrees: 256
COMMENT $B92B degrees: 258
COMMENT $B92D degrees: 259
COMMENT $B92F degrees: 261
COMMENT $B931 degrees: 262
COMMENT $B933 degrees: 263
COMMENT $B935 degrees: 265
COMMENT $B937 degrees: 266
COMMENT $B939 degrees: 268
COMMENT $B93B degrees: 269
COMMENT $B93D degrees: 271
COMMENT $B93F degrees: 272
COMMENT $B941 degrees: 273
COMMENT $B943 degrees: 275
COMMENT $B945 degrees: 276
COMMENT $B947 degrees: 278
COMMENT $B949 degrees: 279
COMMENT $B94B degrees: 280
COMMENT $B94D degrees: 282
COMMENT $B94F degrees: 283
COMMENT $B951 degrees: 285
COMMENT $B953 degrees: 286
COMMENT $B955 degrees: 287
COMMENT $B957 degrees: 289
COMMENT $B959 degrees: 290
COMMENT $B95B degrees: 292
COMMENT $B95D degrees: 293
COMMENT $B95F degrees: 295
COMMENT $B961 degrees: 296
COMMENT $B963 degrees: 297
COMMENT $B965 degrees: 299
COMMENT $B967 degrees: 300
COMMENT $B969 degrees: 302
COMMENT $B96B degrees: 303
COMMENT $B96D degrees: 304
COMMENT $B96F degrees: 306
COMMENT $B971 degrees: 307
COMMENT $B973 degrees: 309
COMMENT $B975 degrees: 310
COMMENT $B977 degrees: 312
COMMENT $B979 degrees: 313
COMMENT $B97B degrees: 314
COMMENT $B97D degrees: 316
COMMENT $B97F degrees: 317
COMMENT $B981 degrees: 319
COMMENT $B983 degrees: 320
COMMENT $B985 degrees: 321
COMMENT $B987 degrees: 323
COMMENT $B989 degrees: 324
COMMENT $B98B degrees: 326
COMMENT $B98D degrees: 327
COMMENT $B98F degrees: 328
COMMENT $B991 degrees: 330
COMMENT $B993 degrees: 331
COMMENT $B995 degrees: 333
COMMENT $B997 degrees: 334
COMMENT $B999 degrees: 336
COMMENT $B99B degrees: 337
COMMENT $B99D degrees: 338
COMMENT $B99F degrees: 340
COMMENT $B9A1 degrees: 341
COMMENT $B9A3 degrees: 343
COMMENT $B9A5 degrees: 344
COMMENT $B9A7 degrees: 345
COMMENT $B9A9 degrees: 347
COMMENT $B9AB degrees: 348
COMMENT $B9AD degrees: 350
COMMENT $B9AF degrees: 351
COMMENT $B9B1 degrees: 352
COMMENT $B9B3 degrees: 354
COMMENT $B9B5 degrees: 355
COMMENT $B9B7 degrees: 357
COMMENT $B9B9 degrees: 358
COMMENT $B9BB degrees: 0
COMMENT_LINE $B9BD in order to make rrom for the VecFever saving mechanism
COMMENT_LINE $B9BD i moved the "wheel of fortune" from bank 1 to bank 2 (area above $b000)
COMMENT_LINE $B9BD some calling changes had to be made..
COMMENT_LINE $B9BD #############################################################################
COMMENT_LINE $B9BD #############################################################################
COMMENT_LINE $B9BD #############################################################################
COMMENT_LINE $B9BD BANK 2
COMMENT $C9A6 9
COMMENT $C9A7 11
COMMENT $C9A9 18 ; "add" per round to angle, is 16 bit, each round the adder is added and after usage the hi byte = to 0
COMMENT $C9AB 16
COMMENT $C9AD 23
COMMENT $C9AF 38
COMMENT $C9B1 28
COMMENT $C9B3 30
COMMENT $C9B5 32
COMMENT $C9B7 2
COMMENT $C9B9 4
COMMENT $C9BB 20
COMMENT $C9BC 21
COMMENT $C9BD 24
COMMENT $C9BE 25
COMMENT $C9BF 26
COMMENT $C9C0 13
COMMENT_LINE $C9C1 with SAVING enabled we only have 26 space!
COMMENT $C9C1 6
COMMENT $C9C3 8
COMMENT $C9C5 33
COMMENT $C9C6 34
COMMENT $C9C7 35
COMMENT $C9C8 12
COMMENT $C9C9 19
COMMENT $C9CA 14
COMMENT $C9CB 36
COMMENT $C9CC 40
COMMENT $C9CE 42
COMMENT_LINE $B9BD ........
COMMENT_LINE $0000 IRQ_TO_0_SHIFT
FORCE_SYMBOL $B9BD Vec_Str_Ptr
FORCE_SYMBOL $B9C0 save1
FORCE_SYMBOL $B9C3 Vec_Text_HW
FORCE_SYMBOL $B9C6 save2
FORCE_SYMBOL $B9C9 backJump
FORCE_SYMBOL $B9CC save3
FORCE_SYMBOL $B9CF extraStage
FORCE_SYMBOL $B9D2 isPressed
FORCE_SYMBOL $B9D5 lastLatch
FORCE_SYMBOL $B9D8 wheelStarted
FORCE_SYMBOL $B9DB SPINTIME
FORCE_SYMBOL $B9DD spinTemp
FORCE_SYMBOL $B9E0 tmp1
COMMENT $B9E3 speed of 5,0
FORCE_NO_SYMBOL $B9E3
FORCE_SYMBOL $B9E6 spinSpeedAdder
FORCE_SYMBOL $B9E9 spinSpeed
COMMENT $B9EF 8 font lines (actually only 7 - this is a buffer) * step with * 2 (because of 2 coordinates)
FORCE_SYMBOL $B9F2 angle
COMMENT_LINE $B9F5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $B9F5 ;; EXTRA
COMMENT $B9F5 Wait_Recal ; Vectrex BIOS recalibration
FORCE_SYMBOL $B9F5 my_wait_recal
COMMENT $B9F8 doymsound100
FORCE_NO_SYMBOL $B9F8
FORCE_SYMBOL $B9FB jsrBank1_fromBank2_T1
FORCE_SYMBOL $B9FE Intensity_5F
FORCE_NO_SYMBOL $BA01
FORCE_SYMBOL $BA03 cheeseCounter
COMMENT_LINE $BA06 not working!
FORCE_SYMBOL $BA06 spinSpeedAdder
FORCE_SYMBOL $BA09 spinSpeed
FORCE_SYMBOL $BA0C spinSpeed
FORCE_SYMBOL $BA0F spinSpeed
FORCE_SYMBOL $BA12 spinSpeed
COMMENT $BA15 times two - two coordinates
FORCE_SYMBOL $BA17 angle
FORCE_SYMBOL $BA23 angle
FORCE_SYMBOL $BA26 angleUse
FORCE_SYMBOL $BA29 extraStage
FORCE_NO_SYMBOL $BA2C
FORCE_NO_SYMBOL $BA32
FORCE_NO_SYMBOL $BA38
FORCE_NO_SYMBOL $BA3C
COMMENT_LINE $BA40 0 display extra "level"
FORCE_SYMBOL $BA40 tmp1
FORCE_SYMBOL $BA43 tmp1
FORCE_NO_SYMBOL $BA46
FORCE_SYMBOL $BA4A tmp1
FORCE_NO_SYMBOL $BA4D
FORCE_SYMBOL $BA51 tmp1
FORCE_NO_SYMBOL $BA54
FORCE_SYMBOL $BA58 drawExtra
FORCE_SYMBOL $BA5D extraStage
FORCE_SYMBOL $BA60 wheelStage
COMMENT_LINE $BA65 ***********************************************************************
FORCE_SYMBOL $BA65 extraStage
FORCE_SYMBOL $BA6A gameScale
FORCE_SYMBOL $BA6D VIA_t1_cnt_lo
FORCE_SYMBOL $BA6F rewardStringSelected
FORCE_NO_SYMBOL $BA72
FORCE_SYMBOL $BA75 Vec_Text_HW
FORCE_NO_SYMBOL $BA78
COMMENT $BA7B Print_Str_d
FORCE_SYMBOL $BA7B syncPrintStrd
COMMENT $BA7E get button status
FORCE_SYMBOL $BA7E getButtonState
COMMENT $BA81 button 4 unpause
FORCE_NO_SYMBOL $BA81
FORCE_NO_SYMBOL $BA83
FORCE_SYMBOL $BA89 waitButtonRelease
FORCE_SYMBOL $BA8C rewardStringSelected
COMMENT $BA8F load reward number as in "defines"
FORCE_NO_SYMBOL $BA8F
COMMENT $BA91 rewardTable
FORCE_NO_SYMBOL $BA91
COMMENT $BA96 doWheelReward
FORCE_NO_SYMBOL $BA96
FORCE_SYMBOL $BA99 jmpBankIRQ0Shift
COMMENT_LINE $BA9C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $BA9C save1
FORCE_SYMBOL $BA9F Vec_Str_Ptr
FORCE_SYMBOL $BAA2 save2
FORCE_SYMBOL $BAA5 Vec_Text_HW
FORCE_SYMBOL $BAA8 save3
FORCE_SYMBOL $BAAB backJump
COMMENT $BAAE initStars
FORCE_NO_SYMBOL $BAAE
FORCE_SYMBOL $BAB1 jsrBank1X
COMMENT $BAB4 spawnStar
FORCE_NO_SYMBOL $BAB4
FORCE_SYMBOL $BAB7 jsrBank1X
FORCE_SYMBOL $BABA bulletSpawnAt
FORCE_SYMBOL $BABE bulletSpawnAt
COMMENT $BAC4 backFromBandit
FORCE_NO_SYMBOL $BAC4
FORCE_SYMBOL $BAC7 jmpBankIRQ2X
COMMENT_LINE $BACA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $BACA ;; SPIN
COMMENT $BACD Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $BACD VIA_aux_cntl
COMMENT $BACF [4]disable RAMP, disable mux
FORCE_SYMBOL $BACF VIA_port_b
FORCE_SYMBOL $BAD1 wheelStage
FORCE_NO_SYMBOL $BAD6
FORCE_NO_SYMBOL $BADA
FORCE_NO_SYMBOL $BADE
COMMENT $BAE2 new, started, stopping -> win
FORCE_SYMBOL $BAE2 wheelStage
FORCE_SYMBOL $BAE5 extraStage
FORCE_SYMBOL $BAE8 stageSelect
FORCE_SYMBOL $BAEB spinTemp
FORCE_SYMBOL $BAF2 spinString
FORCE_NO_SYMBOL $BAF5
FORCE_SYMBOL $BAF7 ySpinOffset
FORCE_SYMBOL $BAFA displayCenterRotatedString
FORCE_SYMBOL $BAFD extraLoop
FORCE_NO_SYMBOL $BB00
FORCE_SYMBOL $BB02 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $BB04
FORCE_SYMBOL $BB07 Vec_Text_HW
FORCE_NO_SYMBOL $BB0A
FORCE_SYMBOL $BB0D spinString
COMMENT $BB10 Print_Str_d
FORCE_SYMBOL $BB10 syncPrintStrd
FORCE_SYMBOL $BB13 spinTemp
FORCE_SYMBOL $BB1A theString
FORCE_NO_SYMBOL $BB1D
FORCE_SYMBOL $BB1F ySpinOffset
FORCE_SYMBOL $BB22 displayCenterRotatedString
FORCE_SYMBOL $BB25 extraLoop
FORCE_NO_SYMBOL $BB28
FORCE_SYMBOL $BB2A VIA_t1_cnt_lo
FORCE_NO_SYMBOL $BB2C
FORCE_SYMBOL $BB2F Vec_Text_HW
FORCE_NO_SYMBOL $BB32
FORCE_SYMBOL $BB35 spinString
COMMENT $BB38 Print_Str_d
FORCE_SYMBOL $BB38 syncPrintStrd
COMMENT $BB3B zero the integrators
FORCE_NO_SYMBOL $BB3B
COMMENT $BB3D store zeroing values to cntl
FORCE_SYMBOL $BB3D VIA_cntl
FORCE_NO_SYMBOL $BB3F
FORCE_SYMBOL $BB42 theString
COMMENT $BB45 Print_Str_d
FORCE_SYMBOL $BB45 syncPrintStrd
FORCE_SYMBOL $BB48 spinTemp
FORCE_SYMBOL $BB4D wheelString
FORCE_NO_SYMBOL $BB50
FORCE_SYMBOL $BB52 ySpinOffset
FORCE_SYMBOL $BB55 displayCenterRotatedString
FORCE_SYMBOL $BB58 extraLoop
FORCE_NO_SYMBOL $BB5B
FORCE_SYMBOL $BB5D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $BB5F
FORCE_SYMBOL $BB62 Vec_Text_HW
FORCE_NO_SYMBOL $BB65
FORCE_SYMBOL $BB68 spinString
COMMENT $BB6B Print_Str_d
FORCE_SYMBOL $BB6B syncPrintStrd
COMMENT $BB6E zero the integrators
FORCE_NO_SYMBOL $BB6E
COMMENT $BB70 store zeroing values to cntl
FORCE_SYMBOL $BB70 VIA_cntl
FORCE_NO_SYMBOL $BB72
FORCE_SYMBOL $BB75 theString
COMMENT $BB78 Print_Str_d
FORCE_SYMBOL $BB78 syncPrintStrd
COMMENT $BB7B zero the integrators
FORCE_NO_SYMBOL $BB7B
COMMENT $BB7D store zeroing values to cntl
FORCE_SYMBOL $BB7D VIA_cntl
FORCE_NO_SYMBOL $BB7F
FORCE_SYMBOL $BB82 wheelString
COMMENT $BB85 Print_Str_d
FORCE_SYMBOL $BB85 syncPrintStrd
FORCE_NO_SYMBOL $BB88
FORCE_SYMBOL $BB8B Vec_Text_HW
COMMENT $BB8E zero the integrators
FORCE_NO_SYMBOL $BB8E
COMMENT $BB90 store zeroing values to cntl
FORCE_SYMBOL $BB90 VIA_cntl
FORCE_NO_SYMBOL $BB92
FORCE_SYMBOL $BB95 wheelMessage1
FORCE_SYMBOL $BB98 syncPrintStrd
COMMENT $BB9B zero the integrators
FORCE_NO_SYMBOL $BB9B
COMMENT $BB9D store zeroing values to cntl
FORCE_SYMBOL $BB9D VIA_cntl
FORCE_NO_SYMBOL $BB9F
FORCE_SYMBOL $BBA2 wheelMessage2
FORCE_SYMBOL $BBA5 syncPrintStrd
COMMENT $BBA8 get button status
FORCE_SYMBOL $BBA8 getButtonState
COMMENT $BBAB button 4 unpause
FORCE_NO_SYMBOL $BBAB
FORCE_NO_SYMBOL $BBAD
FORCE_SYMBOL $BBB1 waitButtonRelease
FORCE_SYMBOL $BBB6 extraLoop
FORCE_SYMBOL $BBB9 SPINTIME
FORCE_SYMBOL $BBBB spinTemp
FORCE_SYMBOL $BBBE wheelStage
FORCE_SYMBOL $BBC1 spinThatWheel
COMMENT_LINE $BBC4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $BBC4 ;; wheel
COMMENT_LINE $BBF6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $BBF6 speed of 5,0
FORCE_NO_SYMBOL $BBF6
FORCE_SYMBOL $BBF9 spinSpeedAdder
FORCE_SYMBOL $BBFC yLatch
COMMENT $BBFF 8 font lines (actually only 7 - this is a buffer) * step with * 2 (because of 2 coordinates)
FORCE_SYMBOL $BC02 angle
FORCE_SYMBOL $BC05 extraStage
FORCE_SYMBOL $BC08 extraLoop
COMMENT_LINE $BC0B isPressed
COMMENT $BC0B get button status
FORCE_SYMBOL $BC0B getButtonState
COMMENT $BC0E button 4 unpause
FORCE_NO_SYMBOL $BC0E
FORCE_NO_SYMBOL $BC10
FORCE_NO_SYMBOL $BC14
FORCE_SYMBOL $BC16 isPressed
FORCE_SYMBOL $BC1B isPressed
FORCE_SYMBOL $BC20 isPressed
FORCE_SYMBOL $BC23 wheelStarted
COMMENT $BC28 wheel running
FORCE_NO_SYMBOL $BC28
COMMENT $BC2A stopped
FORCE_NO_SYMBOL $BC2A
FORCE_SYMBOL $BC2C wheelStarted
COMMENT $BC31 started
FORCE_NO_SYMBOL $BC31
FORCE_SYMBOL $BC33 wheelStarted
COMMENT $BC36 speed of 5,0
FORCE_NO_SYMBOL $BC36
FORCE_SYMBOL $BC39 spinSpeedAdder
FORCE_SYMBOL $BC3C wheelStarted
FORCE_NO_SYMBOL $BC3F
FORCE_SYMBOL $BC43 spinSpeedAdder
COMMENT_LINE $BC4A only descellerate when "latch" is moving
COMMENT_LINE $BC4A -> insures halt on a string
FORCE_SYMBOL $BC4A lastLatch
FORCE_SYMBOL $BC4F spinSpeedAdder
FORCE_NO_SYMBOL $BC52
FORCE_NO_SYMBOL $BC57
FORCE_SYMBOL $BC5A spinSpeedAdder
FORCE_SYMBOL $BC5D lastLatch
FORCE_SYMBOL $BC62 yLatch
COMMENT_LINE $BC67 when the latch is hit!
COMMENT $BC67 noiseOnlyDeAccelData
FORCE_NO_SYMBOL $BC67
FORCE_SYMBOL $BC6A sfx_pointer_2
FORCE_NO_SYMBOL $BC6D
COMMENT $BC6F length of 7,5 letters
FORCE_SYMBOL $BC6F VIA_t1_cnt_lo
FORCE_NO_SYMBOL $BC71
FORCE_SYMBOL $BC74 MoveToD
COMMENT $BC77 3
FORCE_NO_SYMBOL $BC77
FORCE_SYMBOL $BC79 VIA_aux_cntl
FORCE_SYMBOL $BC7B yLatch
FORCE_NO_SYMBOL $BC7E
FORCE_SYMBOL $BC80 lastLatch
FORCE_SYMBOL $BC83 drawLineD
FORCE_SYMBOL $BC86 yLatch
COMMENT $BC89 zero the integrators
FORCE_NO_SYMBOL $BC89
COMMENT $BC8B store zeroing values to cntl
FORCE_SYMBOL $BC8B VIA_cntl
FORCE_SYMBOL $BC8D bandit_Strings_normalMode
FORCE_SYMBOL $BC90 difficulty
FORCE_SYMBOL $BC95 bandit_Strings_hardcoreMode
FORCE_SYMBOL $BC98 cheeseCounter
FORCE_SYMBOL $BCA0 wheelTmp
FORCE_NO_SYMBOL $BCA3
COMMENT_LINE $BCA5 change intensity in dependence how close to the "needle" we are ( 3 o'clock)
COMMENT $BCA5 can be up to $220
FORCE_SYMBOL $BCA5 angleUse
FORCE_NO_SYMBOL $BCA8
FORCE_NO_SYMBOL $BCAE
COMMENT $BCB1 0-255
COMMENT $BCB3 0-127
FORCE_NO_SYMBOL $BCB5
COMMENT $BCBA point "dark" is 9 o'clock
FORCE_NO_SYMBOL $BCBA
COMMENT $BCBD point zero is 3 o'clock
FORCE_NO_SYMBOL $BCBD
FORCE_NO_SYMBOL $BCC2
COMMENT $BCC6 Store intensity in D/A
FORCE_SYMBOL $BCC6 VIA_port_a
COMMENT $BCC8 mux disabled channel 2
FORCE_NO_SYMBOL $BCC8
FORCE_SYMBOL $BCCB VIA_port_b
COMMENT $BCCD mux enabled channel 2
FORCE_SYMBOL $BCCD VIA_port_b
COMMENT $BCCF turn off mux
FORCE_SYMBOL $BCCF VIA_port_b
FORCE_SYMBOL $BCD3 angleUse
FORCE_NO_SYMBOL $BCD6
FORCE_NO_SYMBOL $BCDC
FORCE_NO_SYMBOL $BCE4
FORCE_SYMBOL $BCEA yLatch
FORCE_SYMBOL $BCED wheelTmp
FORCE_NO_SYMBOL $BCF0
FORCE_SYMBOL $BCF2 rewardStringSelected
FORCE_SYMBOL $BCF5 angleUse
FORCE_SYMBOL $BD04 angleUse
FORCE_SYMBOL $BD07 cheeseCounter
FORCE_SYMBOL $BD0C extraLoop
COMMENT_LINE $BD0F ***********************************************************************
COMMENT_LINE $BD0F in x pointer to string
COMMENT_LINE $BD0F angle in "angle"
COMMENT_LINE $BD0F fixed string length of "7"
COMMENT_LINE $BD0F expects zeroed on entry
COMMENT_LINE $BD0F expects IRQ = by T1
COMMENT_LINE $BD0F leaves with VIA_aux = to $18 ("normal" is $98)
COMMENT_LINE $BD0F y used for circle data
COMMENT_LINE $BD0F u used for chartable
COMMENT_LINE $BD0F ;;;;;;;;;;;;;
COMMENT_LINE $BD0F these can be done "once" per all cheeses
COMMENT_LINE $BD0F IRQ_TO_0_T1
COMMENT $BD0F Point to start of chargen bitmaps
FORCE_SYMBOL $BD0F FONT_START_BIOS
COMMENT $BD15 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $BD15 VIA_aux_cntl
COMMENT $BD17 [4]disable RAMP, disable mux
FORCE_SYMBOL $BD17 VIA_port_b
COMMENT_LINE $BD19 ;;;;;;;;;;;;;
FORCE_SYMBOL $BD19 wheelcircleData
FORCE_SYMBOL $BD1D angleUse
FORCE_NO_SYMBOL $BD20
COMMENT $BD23 modulo 256
FORCE_NO_SYMBOL $BD23
FORCE_SYMBOL $BD25 angleTmp
COMMENT_LINE $BD2A leay     -6,y
COMMENT $BD2A Blank low, zero high?
FORCE_NO_SYMBOL $BD2A
COMMENT $BD2D store zeroing values to cntl
FORCE_SYMBOL $BD2D VIA_cntl
COMMENT $BD2F y coordinate
FORCE_NO_SYMBOL $BD2F
COMMENT $BD31 Y To D/A output
FORCE_SYMBOL $BD31 VIA_port_a
COMMENT $BD33 ramp off set mux to channel 0, Enable mux (set y)
FORCE_SYMBOL $BD33 VIA_port_b
COMMENT $BD35 B = $81
COMMENT $BD36 Disable RAMP, set mux to channel 0, disable mux
FORCE_SYMBOL $BD36 VIA_port_b
FORCE_NO_SYMBOL $BD38
COMMENT $BD3A Send it to the D/A (X)
FORCE_SYMBOL $BD3A VIA_port_a
COMMENT $BD3C both to ORB, both ENABLE RAMP, mux off
FORCE_NO_SYMBOL $BD3C
COMMENT $BD3E [4]enable RAMP, disable mux
FORCE_SYMBOL $BD3E VIA_port_b
COMMENT $BD48 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $BD48 VIA_shift_reg
COMMENT $BD4A [6]
COMMENT $BD4E zero the integrators
FORCE_NO_SYMBOL $BD4E
COMMENT $BD50 store zeroing values to cntl
FORCE_SYMBOL $BD50 VIA_cntl
COMMENT_LINE $BD52 leay     -STEP_WIDTH1*2,y               ;[3]
FORCE_SYMBOL $BD52 angleTmp
FORCE_NO_SYMBOL $BD58
FORCE_SYMBOL $BD5A angleTmp
FORCE_SYMBOL $BD5D wheelcircleData
FORCE_SYMBOL $BD63 FONT_END_BIOS
COMMENT $BD69 start of String
COMMENT $BD6B Point to next "row" of font bitmap
FORCE_SYMBOL $BD6B FONT_LENGTH_BIOS
FORCE_NO_SYMBOL $BD6E
FORCE_SYMBOL $BD70 VIA_port_a
FORCE_SYMBOL $BD72 VIA_port_b
FORCE_SYMBOL $BD74 VIA_port_b
FORCE_NO_SYMBOL $BD78
COMMENT $BD7B [4]disable RAMP, disable mux
FORCE_SYMBOL $BD7B VIA_port_b
COMMENT $BD7D 0 to shift
FORCE_SYMBOL $BD7D VIA_shift_reg
COMMENT_LINE $BD7F IRQ_TO_0_SHIFT
COMMENT $BD7F 3
FORCE_NO_SYMBOL $BD7F
FORCE_SYMBOL $BD81 VIA_aux_cntl
COMMENT $BD85 length of 7,5 letters
FORCE_SYMBOL $BD85 VIA_t1_cnt_lo
FORCE_SYMBOL $BD87 wheelcircleData
FORCE_SYMBOL $BD8B angleUse
FORCE_NO_SYMBOL $BD91
COMMENT $BD9B angle of start coordinate of short draw
FORCE_NO_SYMBOL $BD9B
FORCE_NO_SYMBOL $BDA0
COMMENT $BDA2 y pointing to end coordinate of short draw
COMMENT $BDA4 start coordinate of short draw
FORCE_NO_SYMBOL $BDA4
FORCE_NO_SYMBOL $BDA6
COMMENT_LINE $BDA8 leay -(STEP_WIDTH*7+1) *2,y
FORCE_NO_SYMBOL $BDAA
FORCE_NO_SYMBOL $BDAC
COMMENT $BDB0 zero the integrators
FORCE_NO_SYMBOL $BDB0
COMMENT $BDB2 store zeroing values to cntl
FORCE_SYMBOL $BDB2 VIA_cntl
FORCE_SYMBOL $BDB4 wheelcircleData
FORCE_SYMBOL $BDB8 angleUse
FORCE_NO_SYMBOL $BDBE
COMMENT_LINE $BDC0 leay     d,y
COMMENT_LINE $BDC0 leay     -(STEP_WIDTH*7+1) *2,y
COMMENT $BDC4 zero the integrators
FORCE_NO_SYMBOL $BDC4
COMMENT $BDC6 store zeroing values to cntl
FORCE_SYMBOL $BDC6 VIA_cntl
COMMENT $BDC9 4
FORCE_SYMBOL $BDC9 VIA_port_a
COMMENT $BDCB 4
FORCE_SYMBOL $BDCB VIA_port_b
COMMENT $BDCE 4
FORCE_SYMBOL $BDCE VIA_port_b
COMMENT $BDD0 5
FORCE_SYMBOL $BDD0 VIA_port_a
COMMENT $BDD2 light OFF, ZERO OFF
FORCE_NO_SYMBOL $BDD2
COMMENT $BDD5 4
FORCE_SYMBOL $BDD5 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $BDD7
FORCE_SYMBOL $BDD9 VIA_cntl
FORCE_SYMBOL $BDDB VIA_int_flags
COMMENT $BDE0 4
FORCE_SYMBOL $BDE0 VIA_port_a
COMMENT $BDE2 4
FORCE_SYMBOL $BDE2 VIA_port_b
COMMENT $BDE5 4
FORCE_SYMBOL $BDE5 VIA_port_b
COMMENT $BDE7 5
FORCE_SYMBOL $BDE7 VIA_port_a
COMMENT $BDE9 light OFF, ZERO OFF
FORCE_NO_SYMBOL $BDE9
COMMENT $BDEC 4
FORCE_SYMBOL $BDEC VIA_t1_cnt_hi
FORCE_SYMBOL $BDEE VIA_cntl
FORCE_NO_SYMBOL $BDF0
COMMENT $BDF3 don't draw near the center...
FORCE_SYMBOL $BDF7 VIA_cntl
FORCE_SYMBOL $BDF9 VIA_int_flags
COMMENT $BDFD light OFF, ZERO OFF
FORCE_NO_SYMBOL $BDFD
FORCE_SYMBOL $BDFF VIA_cntl
COMMENT_LINE $BE02 display start / selected reward on latch
COMMENT_LINE $BE9A in x pointer to string
COMMENT_LINE $BE9A angle in "angle"
COMMENT_LINE $BE9A fixed string length of "7"
COMMENT_LINE $BE9A expects zeroed on entry
COMMENT_LINE $BE9A expects IRQ = by T1
COMMENT_LINE $BE9A leaves with VIA_aux = to $18 ("normal" is $98)
COMMENT_LINE $BE9A y used for circle data
COMMENT_LINE $BE9A u used for chartable
COMMENT_LINE $BE9A string is printed with "angleUse" angle
COMMENT_LINE $BE9A the beam is positioned to that angle +/- some offsets
COMMENT $BE9A zero the integrators
FORCE_NO_SYMBOL $BE9A
COMMENT $BE9C store zeroing values to cntl
FORCE_SYMBOL $BE9C VIA_cntl
FORCE_NO_SYMBOL $BE9E
COMMENT $BEA0 [4]disable RAMP, disable mux
FORCE_SYMBOL $BEA0 VIA_port_b
FORCE_SYMBOL $BEA2 stackSafe
FORCE_SYMBOL $BEA6 linePrinting
COMMENT_LINE $BEA9 ;;;;;;;;;;;;;
COMMENT $BEA9 Point to start of chargen bitmaps
FORCE_SYMBOL $BEA9 FONT_START_BIOS
COMMENT_LINE $BEAC ;;;;;;;;;;;;;
COMMENT $BEAC 0 = shift,
FORCE_NO_SYMBOL $BEAC
FORCE_SYMBOL $BEAE VIA_aux_cntl
FORCE_NO_SYMBOL $BEB0
COMMENT $BEB2 length of 7,5 letters
FORCE_SYMBOL $BEB2 VIA_t1_cnt_lo
FORCE_SYMBOL $BEB4 ySpinOffset
COMMENT $BEB7 4
FORCE_SYMBOL $BEB7 VIA_port_a
COMMENT $BEB9 4
FORCE_SYMBOL $BEB9 VIA_port_b
COMMENT $BEBF 4
FORCE_SYMBOL $BEBF VIA_port_b
COMMENT $BEC1 light OFF, ZERO OFF
FORCE_NO_SYMBOL $BEC1
COMMENT $BEC4 5
FORCE_SYMBOL $BEC4 VIA_port_a
COMMENT $BEC6 4
FORCE_SYMBOL $BEC6 VIA_t1_cnt_hi
FORCE_SYMBOL $BEC8 VIA_cntl
COMMENT_LINE $BECA prepare the "real" angle of the string
COMMENT $BECA 3,5 characters
COMMENT $BECC length of 7,5 letters
FORCE_SYMBOL $BECC VIA_t1_cnt_lo
FORCE_SYMBOL $BECE wheelcircleData
FORCE_SYMBOL $BED2 angleUse
FORCE_NO_SYMBOL $BED5
FORCE_SYMBOL $BED7 angleTmp
FORCE_SYMBOL $BEDC printAngleOffsets
FORCE_NO_SYMBOL $BEE0
FORCE_SYMBOL $BEE2 VIA_int_flags
COMMENT_LINE $BEE6 get angle to start printing the current line
FORCE_SYMBOL $BEE6 linePrinting
FORCE_SYMBOL $BEE9 linePrinting
FORCE_SYMBOL $BEEF angleTmp
FORCE_NO_SYMBOL $BEF2
FORCE_SYMBOL $BEF4 angleTmp
COMMENT_LINE $BEF7 lda      a,s
FORCE_SYMBOL $BEF7 wheelcircleData
COMMENT_LINE $BEFD leay     a,y
FORCE_NO_SYMBOL $BEFD
COMMENT_LINE $BEFF ;;;;;;;;;; move to that position
COMMENT $BEFF 4
FORCE_SYMBOL $BEFF VIA_port_a
COMMENT $BF01 4
FORCE_SYMBOL $BF01 VIA_port_b
COMMENT $BF07 4
FORCE_SYMBOL $BF07 VIA_port_b
COMMENT $BF09 5
FORCE_SYMBOL $BF09 VIA_port_a
COMMENT $BF0B light OFF, ZERO OFF
FORCE_NO_SYMBOL $BF0B
COMMENT $BF0E 4
FORCE_SYMBOL $BF0E VIA_t1_cnt_hi
FORCE_SYMBOL $BF10 VIA_cntl
COMMENT_LINE $BF12 prepare the "real" angle of the string
FORCE_SYMBOL $BF12 wheelcircleData
FORCE_SYMBOL $BF16 angleUse
FORCE_NO_SYMBOL $BF19
FORCE_NO_SYMBOL $BF1D
FORCE_SYMBOL $BF1F VIA_int_flags
COMMENT_LINE $BF23 ;;;;;;;;;;
FORCE_NO_SYMBOL $BF23
COMMENT $BF25 [4]disable RAMP, disable mux
FORCE_SYMBOL $BF25 VIA_port_b
FORCE_NO_SYMBOL $BF27
COMMENT $BF29 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $BF29 VIA_aux_cntl
COMMENT_LINE $BF2B IRQ_TO_0_T1
COMMENT_LINE $BF2B load the real angle
COMMENT_LINE $BF2B print one line of string
COMMENT $BF2B Blank low, zero high?
FORCE_NO_SYMBOL $BF2B
COMMENT $BF2E store zeroing values to cntl
FORCE_SYMBOL $BF2E VIA_cntl
COMMENT $BF30 y coordinate
FORCE_NO_SYMBOL $BF30
COMMENT_LINE $BF32 inverse - since we are going to "center" from the current position
COMMENT $BF33 Y To D/A output
FORCE_SYMBOL $BF33 VIA_port_a
COMMENT $BF35 ramp off set mux to channel 0, Enable mux (set y)
FORCE_SYMBOL $BF35 VIA_port_b
COMMENT $BF3B B = $81
COMMENT $BF3C Disable RAMP, set mux to channel 0, disable mux
FORCE_SYMBOL $BF3C VIA_port_b
FORCE_NO_SYMBOL $BF3E
COMMENT $BF41 Send it to the D/A (X)
FORCE_SYMBOL $BF41 VIA_port_a
COMMENT $BF43 both to ORB, both ENABLE RAMP, mux off
FORCE_NO_SYMBOL $BF43
COMMENT $BF45 [4]enable RAMP, disable mux
FORCE_SYMBOL $BF45 VIA_port_b
COMMENT $BF4B [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $BF4B VIA_shift_reg
COMMENT $BF4D [6]
COMMENT $BF51 zero the integrators
FORCE_NO_SYMBOL $BF51
COMMENT $BF53 store zeroing values to cntl
FORCE_SYMBOL $BF53 VIA_cntl
FORCE_SYMBOL $BF55 FONT_END_BIOS
COMMENT $BF5B start of String
COMMENT $BF5D Point to next "row" of font bitmap
FORCE_SYMBOL $BF5D FONT_LENGTH_BIOS
FORCE_NO_SYMBOL $BF60
FORCE_SYMBOL $BF62 VIA_port_a
FORCE_SYMBOL $BF64 VIA_port_b
FORCE_SYMBOL $BF66 nextRotateStringLine
FORCE_SYMBOL $BF69 stackSafe
RANGE $0000-$01E2 DP $D0
RANGE $01E2-$01E2 DP $FF
RANGE $01E2-$C11E DP $D0
RANGE $0000-$000B CHAR_DATA 11
RANGE $000B-$000D DW_DATA 1
RANGE $000D-$0011 DB_DATA 4
RANGE $0011-$001D CHAR_DATA 12
RANGE $001D-$0021 DB_DATA 4
RANGE $0021-$002E CHAR_DATA 13
RANGE $002E-$002F DB_DATA 1
RANGE $002F-$02DA CODE
RANGE $02DA-$02E7 DB_DATA 13
RANGE $02E7-$02EE DB_DATA 7
RANGE $02EE-$02FA DB_DATA 12
RANGE $02FA-$0302 DB_DATA 8
RANGE $0302-$030C DB_DATA 10
RANGE $030C-$0313 DB_DATA 7
RANGE $0313-$0315 DW_DATA 1
RANGE $0315-$0317 DW_DATA 1
RANGE $0317-$0319 DW_DATA 1
RANGE $0319-$031B DW_DATA 1
RANGE $031B-$031D DW_DATA 1
RANGE $031D-$031F DW_DATA 1
RANGE $031F-$0321 DW_DATA 1
RANGE $0321-$0326 CHAR_DATA 5
RANGE $0326-$0328 DW_DATA 1
RANGE $0328-$032F CHAR_DATA 7
RANGE $032F-$0331 DW_DATA 1
RANGE $0331-$0336 CHAR_DATA 5
RANGE $0336-$0338 DW_DATA 1
RANGE $0338-$033F CHAR_DATA 7
RANGE $033F-$0341 DW_DATA 1
RANGE $0341-$0348 CHAR_DATA 7
RANGE $0348-$034A DW_DATA 1
RANGE $034A-$0353 CHAR_DATA 9
RANGE $0353-$0355 DW_DATA 1
RANGE $0355-$03C5 CODE
RANGE $03C5-$03CA DB_DATA 5
RANGE $03CA-$03CF DB_DATA 5
RANGE $03CF-$03D4 DB_DATA 5
RANGE $03D4-$03D7 DB_DATA 3
RANGE $03D7-$03DA DB_DATA 3
RANGE $03DA-$03DF DB_DATA 5
RANGE $03DF-$03E4 DB_DATA 5
RANGE $03E4-$03E9 DB_DATA 5
RANGE $03E9-$03EE DB_DATA 5
RANGE $03EE-$03F3 DB_DATA 5
RANGE $03F3-$03F8 DB_DATA 5
RANGE $03F8-$03FD DB_DATA 5
RANGE $03FD-$0402 DB_DATA 5
RANGE $0402-$0405 DB_DATA 3
RANGE $0405-$0408 DB_DATA 3
RANGE $0408-$040D DB_DATA 5
RANGE $040D-$0412 DB_DATA 5
RANGE $0412-$0417 DB_DATA 5
RANGE $0417-$041A DB_DATA 3
RANGE $041A-$041F DB_DATA 5
RANGE $041F-$0881 CODE
RANGE $0881-$088B DB_DATA 10
RANGE $088B-$088D DW_DATA 1
RANGE $088D-$089A DB_DATA 13
RANGE $089A-$08A2 DB_DATA 8
RANGE $08A2-$08AF DB_DATA 13
RANGE $08AF-$08B1 DW_DATA 1
RANGE $08B1-$08BE DB_DATA 13
RANGE $08BE-$08C7 DB_DATA 9
RANGE $08C7-$08D4 DB_DATA 13
RANGE $08D4-$08D6 DW_DATA 1
RANGE $08D6-$08E3 DB_DATA 13
RANGE $08E3-$08EC DB_DATA 9
RANGE $08EC-$08F9 DB_DATA 13
RANGE $08F9-$08FB DW_DATA 1
RANGE $08FB-$0908 DB_DATA 13
RANGE $0908-$0911 DB_DATA 9
RANGE $0911-$091F DB_DATA 14
RANGE $091F-$0921 DW_DATA 1
RANGE $0921-$092E DB_DATA 13
RANGE $092E-$0937 DB_DATA 9
RANGE $0937-$0946 DB_DATA 15
RANGE $0946-$0948 DW_DATA 1
RANGE $0948-$0955 DB_DATA 13
RANGE $0955-$0966 DB_DATA 17
RANGE $0966-$0971 DB_DATA 11
RANGE $0971-$0973 DW_DATA 1
RANGE $0973-$0980 DB_DATA 13
RANGE $0980-$0992 DB_DATA 18
RANGE $0992-$0994 DW_DATA 1
RANGE $0994-$0996 DW_DATA 1
RANGE $0996-$0998 DW_DATA 1
RANGE $0998-$099A DW_DATA 1
RANGE $099A-$099C DW_DATA 1
RANGE $099C-$099E DW_DATA 1
RANGE $099E-$09A0 DW_DATA 1
RANGE $09A0-$09E1 CODE
RANGE $09E1-$09F1 DB_DATA 16
RANGE $09F1-$09F3 DW_DATA 1
RANGE $09F3-$0A01 CODE
RANGE $0A01-$0A12 DB_DATA 17
RANGE $0A12-$0A14 DW_DATA 1
RANGE $0A14-$0A21 DB_DATA 13
RANGE $0A21-$0A2A DB_DATA 9
RANGE $0A2A-$0A36 DB_DATA 12
RANGE $0A36-$0A44 CODE
RANGE $0A44-$0A4F DB_DATA 11
RANGE $0A4F-$0A57 DB_DATA 8
RANGE $0A57-$0A59 DW_DATA 1
RANGE $0A59-$0A69 DB_DATA 16
RANGE $0A69-$0A72 DB_DATA 9
RANGE $0A72-$0A74 DW_DATA 1
RANGE $0A74-$0A7B DB_DATA 7
RANGE $0A7B-$0A87 DB_DATA 12
RANGE $0A87-$0A8F DB_DATA 8
RANGE $0A8F-$0A98 DB_DATA 9
RANGE $0A98-$0A9A DW_DATA 1
RANGE $0A9A-$0A9F CHAR_DATA 5
RANGE $0A9F-$0AA4 CHAR_DATA 5
RANGE $0AA4-$0AA9 CHAR_DATA 5
RANGE $0AA9-$0AAE CHAR_DATA 5
RANGE $0AAE-$0AB4 CHAR_DATA 6
RANGE $0AB4-$0ABA CHAR_DATA 6
RANGE $0ABA-$0AC0 CHAR_DATA 6
RANGE $0AC0-$0AC7 CHAR_DATA 7
RANGE $0AC7-$0ACE CHAR_DATA 7
RANGE $0ACE-$0AE0 DW_DATA 9
RANGE $0AE0-$0BF5 CODE
RANGE $0BF5-$0BFD CHAR_DATA 8
RANGE $0BFD-$0C03 CHAR_DATA 6
RANGE $0C03-$0C0A CHAR_DATA 7
RANGE $0C0A-$0C33 CODE
RANGE $0C33-$0C39 CHAR_DATA 6
RANGE $0C39-$0C41 CHAR_DATA 8
RANGE $0C41-$0C5F CODE
RANGE $0C5F-$0C66 CHAR_DATA 7
RANGE $0C66-$0C7A CODE
RANGE $0C7A-$0C81 CHAR_DATA 7
RANGE $0C81-$0C99 CODE
RANGE $0C99-$0CA3 CHAR_DATA 10
RANGE $0CA3-$0CA8 CODE
RANGE $0CA8-$0CB2 CHAR_DATA 10
RANGE $0CB2-$0CB7 CODE
RANGE $0CB7-$0CBE CHAR_DATA 7
RANGE $0CBE-$11E9 CODE
RANGE $11E9-$11EC DB_DATA 3
RANGE $11EC-$11EF DB_DATA 3
RANGE $11EF-$11F2 DB_DATA 3
RANGE $11F2-$11F5 DB_DATA 3
RANGE $11F5-$11F8 DB_DATA 3
RANGE $11F8-$11FB DB_DATA 3
RANGE $11FB-$11FE DB_DATA 3
RANGE $11FE-$1201 DB_DATA 3
RANGE $1201-$1204 DB_DATA 3
RANGE $1204-$1207 DB_DATA 3
RANGE $1207-$120A DB_DATA 3
RANGE $120A-$120D DB_DATA 3
RANGE $120D-$1210 DB_DATA 3
RANGE $1210-$1213 DB_DATA 3
RANGE $1213-$1216 DB_DATA 3
RANGE $1216-$1219 DB_DATA 3
RANGE $1219-$121C DB_DATA 3
RANGE $121C-$121F DB_DATA 3
RANGE $121F-$1222 DB_DATA 3
RANGE $1222-$1225 DB_DATA 3
RANGE $1225-$1228 DB_DATA 3
RANGE $1228-$1229 DB_DATA 1
RANGE $1229-$1370 CODE
RANGE $1370-$13CB DB_DATA 91
RANGE $13CB-$1426 DB_DATA 91
RANGE $1426-$1481 DB_DATA 91
RANGE $1481-$14DC DB_DATA 91
RANGE $14DC-$1537 DB_DATA 91
RANGE $1537-$15C0 CODE
RANGE $15C0-$15C2 DW_DATA 1
RANGE $15C2-$15C4 DW_DATA 1
RANGE $15C4-$15C6 DW_DATA 1
RANGE $15C6-$15C8 DW_DATA 1
RANGE $15C8-$15CA DW_DATA 1
RANGE $15CA-$15CC DW_DATA 1
RANGE $15CC-$15CE DW_DATA 1
RANGE $15CE-$15D0 DW_DATA 1
RANGE $15D0-$15D2 DW_DATA 1
RANGE $15D2-$15D4 DW_DATA 1
RANGE $15D4-$15D6 DW_DATA 1
RANGE $15D6-$15D8 DW_DATA 1
RANGE $15D8-$15DA DW_DATA 1
RANGE $15DA-$15DC DW_DATA 1
RANGE $15DC-$15DE DW_DATA 1
RANGE $15DE-$15E0 DW_DATA 1
RANGE $15E0-$15E2 DW_DATA 1
RANGE $15E2-$15E4 DW_DATA 1
RANGE $15E4-$15E6 DW_DATA 1
RANGE $15E6-$15E8 DW_DATA 1
RANGE $15E8-$15EA DW_DATA 1
RANGE $15EA-$15EC DW_DATA 1
RANGE $15EC-$15EE DW_DATA 1
RANGE $15EE-$15F0 DW_DATA 1
RANGE $15F0-$15F2 DW_DATA 1
RANGE $15F2-$15F4 DW_DATA 1
RANGE $15F4-$15F6 DW_DATA 1
RANGE $15F6-$15F8 DW_DATA 1
RANGE $15F8-$15FA DW_DATA 1
RANGE $15FA-$15FC DW_DATA 1
RANGE $15FC-$15FE DW_DATA 1
RANGE $15FE-$1600 DW_DATA 1
RANGE $1600-$1602 DW_DATA 1
RANGE $1602-$1604 DW_DATA 1
RANGE $1604-$1606 DW_DATA 1
RANGE $1606-$1608 DW_DATA 1
RANGE $1608-$160A DW_DATA 1
RANGE $160A-$160C DW_DATA 1
RANGE $160C-$160E DW_DATA 1
RANGE $160E-$161D CHAR_DATA 15
RANGE $161D-$162C CHAR_DATA 15
RANGE $162C-$163B CHAR_DATA 15
RANGE $163B-$164A CHAR_DATA 15
RANGE $164A-$1659 CHAR_DATA 15
RANGE $1659-$1668 CHAR_DATA 15
RANGE $1668-$1677 CHAR_DATA 15
RANGE $1677-$1686 CHAR_DATA 15
RANGE $1686-$1694 CHAR_DATA 14
RANGE $1694-$16A2 CHAR_DATA 14
RANGE $16A2-$16B0 CHAR_DATA 14
RANGE $16B0-$16BE CHAR_DATA 14
RANGE $16BE-$16CC CHAR_DATA 14
RANGE $16CC-$16D4 CHAR_DATA 8
RANGE $16D4-$16DC CHAR_DATA 8
RANGE $16DC-$16E1 CHAR_DATA 5
RANGE $16E1-$16EF CHAR_DATA 14
RANGE $16EF-$16FD CHAR_DATA 14
RANGE $16FD-$170B CHAR_DATA 14
RANGE $170B-$1719 CHAR_DATA 14
RANGE $1719-$1727 CHAR_DATA 14
RANGE $1727-$172F CHAR_DATA 8
RANGE $172F-$1737 CHAR_DATA 8
RANGE $1737-$173E CHAR_DATA 7
RANGE $173E-$174D CHAR_DATA 15
RANGE $174D-$175C CHAR_DATA 15
RANGE $175C-$176B CHAR_DATA 15
RANGE $176B-$177A CHAR_DATA 15
RANGE $177A-$1786 CHAR_DATA 12
RANGE $1786-$1792 CHAR_DATA 12
RANGE $1792-$179E CHAR_DATA 12
RANGE $179E-$17AA CHAR_DATA 12
RANGE $17AA-$17B7 CHAR_DATA 13
RANGE $17B7-$17C4 CHAR_DATA 13
RANGE $17C4-$17D1 CHAR_DATA 13
RANGE $17D1-$17DE CHAR_DATA 13
RANGE $17DE-$17EC CHAR_DATA 14
RANGE $17EC-$17F9 CHAR_DATA 13
RANGE $17F9-$1807 CHAR_DATA 14
RANGE $1807-$1814 CHAR_DATA 13
RANGE $1814-$2397 CODE
RANGE $2397-$23AC CHAR_DATA 21
RANGE $23AC-$244A CODE
RANGE $244A-$244C DW_DATA 1
RANGE $244C-$244E DW_DATA 1
RANGE $244E-$2450 DW_DATA 1
RANGE $2450-$2452 DW_DATA 1
RANGE $2452-$2454 DW_DATA 1
RANGE $2454-$2456 DW_DATA 1
RANGE $2456-$2458 DW_DATA 1
RANGE $2458-$2487 CODE
RANGE $2487-$2489 DW_DATA 1
RANGE $2489-$248B DW_DATA 1
RANGE $248B-$248D DW_DATA 1
RANGE $248D-$248F DW_DATA 1
RANGE $248F-$2491 DW_DATA 1
RANGE $2491-$2493 DW_DATA 1
RANGE $2493-$2495 DW_DATA 1
RANGE $2495-$2497 DW_DATA 1
RANGE $2497-$2499 DW_DATA 1
RANGE $2499-$249B DW_DATA 1
RANGE $249B-$249D DW_DATA 1
RANGE $249D-$249F DW_DATA 1
RANGE $249F-$24A1 DW_DATA 1
RANGE $24A1-$24A3 DW_DATA 1
RANGE $24A3-$24A5 DW_DATA 1
RANGE $24A5-$24A7 DW_DATA 1
RANGE $24A7-$24A9 DW_DATA 1
RANGE $24A9-$24AB DW_DATA 1
RANGE $24AB-$24AD DW_DATA 1
RANGE $24AD-$24AF DW_DATA 1
RANGE $24AF-$24B1 DW_DATA 1
RANGE $24B1-$24B3 DW_DATA 1
RANGE $24B3-$24B5 DW_DATA 1
RANGE $24B5-$24B7 DW_DATA 1
RANGE $24B7-$24B9 DW_DATA 1
RANGE $24B9-$24BB DW_DATA 1
RANGE $24BB-$24BD DW_DATA 1
RANGE $24BD-$24BF DW_DATA 1
RANGE $24BF-$24C1 DW_DATA 1
RANGE $24C1-$24C3 DW_DATA 1
RANGE $24C3-$24C5 DW_DATA 1
RANGE $24C5-$24CF CHAR_DATA 10
RANGE $24CF-$24E7 CHAR_DATA 24
RANGE $24E7-$24FA CHAR_DATA 19
RANGE $24FA-$2504 CHAR_DATA 10
RANGE $2504-$2D91 CODE
RANGE $2D91-$2D96 DB_DATA 5
RANGE $2D96-$2D9B DB_DATA 5
RANGE $2D9B-$2DA0 DB_DATA 5
RANGE $2DA0-$2DA5 DB_DATA 5
RANGE $2DA5-$2DAA DB_DATA 5
RANGE $2DAA-$2DAF DB_DATA 5
RANGE $2DAF-$2DB4 DB_DATA 5
RANGE $2DB4-$2DB9 DB_DATA 5
RANGE $2DB9-$2DBE DB_DATA 5
RANGE $2DBE-$2DC3 DB_DATA 5
RANGE $2DC3-$2DC8 DB_DATA 5
RANGE $2DC8-$2DCB DB_DATA 3
RANGE $2DCB-$2DCE DB_DATA 3
RANGE $2DCE-$2DD3 DB_DATA 5
RANGE $2DD3-$2DD8 DB_DATA 5
RANGE $2DD8-$2DDD DB_DATA 5
RANGE $2DDD-$2DE2 DB_DATA 5
RANGE $2DE2-$2DE7 DB_DATA 5
RANGE $2DE7-$2DEC DB_DATA 5
RANGE $2DEC-$2DF1 DB_DATA 5
RANGE $2DF1-$2DF6 DB_DATA 5
RANGE $2DF6-$2DF9 DB_DATA 3
RANGE $2DF9-$2DFC DB_DATA 3
RANGE $2DFC-$2E01 DB_DATA 5
RANGE $2E01-$2E06 DB_DATA 5
RANGE $2E06-$2E0B DB_DATA 5
RANGE $2E0B-$2E0E DB_DATA 3
RANGE $2E0E-$2E13 DB_DATA 5
RANGE $2E13-$2E19 CHAR_DATA 6
RANGE $2E19-$2E1F CHAR_DATA 6
RANGE $2E1F-$2E2B CHAR_DATA 12
RANGE $2E2B-$2E31 CHAR_DATA 6
RANGE $2E31-$2E3D CHAR_DATA 12
RANGE $2E3D-$2E43 CHAR_DATA 6
RANGE $2E43-$2E48 CHAR_DATA 5
RANGE $2E48-$2E4E CHAR_DATA 6
RANGE $2E4E-$2E54 CHAR_DATA 6
RANGE $2E54-$2E5A CHAR_DATA 6
RANGE $2E5A-$2E5F CHAR_DATA 5
RANGE $2E5F-$2E67 CHAR_DATA 8
RANGE $2E67-$2E72 CHAR_DATA 11
RANGE $2E72-$2E7D CHAR_DATA 11
RANGE $2E7D-$2E89 CHAR_DATA 12
RANGE $2E89-$2E95 CHAR_DATA 12
RANGE $2E95-$2E9E CHAR_DATA 9
RANGE $2E9E-$2EAC CHAR_DATA 14
RANGE $2EAC-$2EB1 CHAR_DATA 5
RANGE $2EB1-$2EB8 CHAR_DATA 7
RANGE $2EB8-$2EBD CHAR_DATA 5
RANGE $2EBD-$2EC4 CHAR_DATA 7
RANGE $2EC4-$2ECB CHAR_DATA 7
RANGE $2ECB-$2ECD DW_DATA 1
RANGE $2ECD-$2ECF DW_DATA 1
RANGE $2ECF-$2ED1 DW_DATA 1
RANGE $2ED1-$2ED3 DW_DATA 1
RANGE $2ED3-$2ED5 DW_DATA 1
RANGE $2ED5-$2ED7 DW_DATA 1
RANGE $2ED7-$2EE5 CHAR_DATA 14
RANGE $2EE5-$2EF3 CHAR_DATA 14
RANGE $2EF3-$2F01 CHAR_DATA 14
RANGE $2F01-$2F0F CHAR_DATA 14
RANGE $2F0F-$2F1E CHAR_DATA 15
RANGE $2F1E-$2F2B CHAR_DATA 13
RANGE $2F2B-$2F38 CHAR_DATA 13
RANGE $2F38-$2F46 CHAR_DATA 14
RANGE $2F46-$2F53 CHAR_DATA 13
RANGE $2F53-$2F5C CHAR_DATA 9
RANGE $2F5C-$2F68 CHAR_DATA 12
RANGE $2F68-$2F73 CHAR_DATA 11
RANGE $2F73-$2F7E CHAR_DATA 11
RANGE $2F7E-$2F87 CHAR_DATA 9
RANGE $2F87-$2F99 CHAR_DATA 18
RANGE $2F99-$2FAB CHAR_DATA 18
RANGE $2FAB-$2FC0 CHAR_DATA 21
RANGE $2FC0-$2FD3 CHAR_DATA 19
RANGE $2FD3-$2FE5 CHAR_DATA 18
RANGE $2FE5-$2FF7 CHAR_DATA 18
RANGE $2FF7-$3007 CHAR_DATA 16
RANGE $3007-$300B CHAR_DATA 4
RANGE $300B-$300F CHAR_DATA 4
RANGE $300F-$3011 DW_DATA 1
RANGE $3011-$3013 DW_DATA 1
RANGE $3013-$3015 DW_DATA 1
RANGE $3015-$3017 DW_DATA 1
RANGE $3017-$3019 DW_DATA 1
RANGE $3019-$301B DW_DATA 1
RANGE $301B-$301D DW_DATA 1
RANGE $301D-$301F DW_DATA 1
RANGE $301F-$3021 DW_DATA 1
RANGE $3021-$3023 DW_DATA 1
RANGE $3023-$3025 DW_DATA 1
RANGE $3025-$3027 DW_DATA 1
RANGE $3027-$3029 DW_DATA 1
RANGE $3029-$302B DW_DATA 1
RANGE $302B-$302D DW_DATA 1
RANGE $302D-$3034 CHAR_DATA 7
RANGE $3034-$303F CHAR_DATA 11
RANGE $303F-$3049 CHAR_DATA 10
RANGE $3049-$3051 CHAR_DATA 8
RANGE $3051-$3059 CHAR_DATA 8
RANGE $3059-$306F CHAR_DATA 22
RANGE $306F-$3086 CHAR_DATA 23
RANGE $3086-$309D CHAR_DATA 23
RANGE $309D-$30B3 CHAR_DATA 22
RANGE $30B3-$30CA CHAR_DATA 23
RANGE $30CA-$30E1 CHAR_DATA 23
RANGE $30E1-$30F5 CHAR_DATA 20
RANGE $30F5-$310A CHAR_DATA 21
RANGE $310A-$311F CHAR_DATA 21
RANGE $311F-$312E CHAR_DATA 15
RANGE $312E-$39F9 CODE
RANGE $39F9-$39FE DB_DATA 5
RANGE $39FE-$3A03 DB_DATA 5
RANGE $3A03-$3A08 DB_DATA 5
RANGE $3A08-$3A0B DB_DATA 3
RANGE $3A0B-$3A0E DB_DATA 3
RANGE $3A0E-$3A11 DB_DATA 3
RANGE $3A11-$3A14 DB_DATA 3
RANGE $3A14-$3A17 DB_DATA 3
RANGE $3A17-$3A1A DB_DATA 3
RANGE $3A1A-$3A1F DB_DATA 5
RANGE $3A1F-$3A22 DB_DATA 3
RANGE $3A22-$3A25 DB_DATA 3
RANGE $3A25-$3A2A DB_DATA 5
RANGE $3A2A-$41BE CODE
RANGE $41BE-$41C3 DB_DATA 5
RANGE $41C3-$41C6 DB_DATA 3
RANGE $41C6-$41CB DB_DATA 5
RANGE $41CB-$41D0 DB_DATA 5
RANGE $41D0-$41D5 DB_DATA 5
RANGE $41D5-$41DA DB_DATA 5
RANGE $41DA-$41DF DB_DATA 5
RANGE $41DF-$41E4 DB_DATA 5
RANGE $41E4-$41E9 DB_DATA 5
RANGE $41E9-$41EE DB_DATA 5
RANGE $41EE-$41F3 DB_DATA 5
RANGE $41F3-$41F8 DB_DATA 5
RANGE $41F8-$41FD DB_DATA 5
RANGE $41FD-$4202 DB_DATA 5
RANGE $4202-$4207 DB_DATA 5
RANGE $4207-$420C DB_DATA 5
RANGE $420C-$420F DB_DATA 3
RANGE $420F-$4214 DB_DATA 5
RANGE $4214-$4219 DB_DATA 5
RANGE $4219-$421E DB_DATA 5
RANGE $421E-$4221 DB_DATA 3
RANGE $4221-$4226 DB_DATA 5
RANGE $4226-$422B DB_DATA 5
RANGE $422B-$4230 DB_DATA 5
RANGE $4230-$4233 DB_DATA 3
RANGE $4233-$4236 DB_DATA 3
RANGE $4236-$423B DB_DATA 5
RANGE $423B-$4240 DB_DATA 5
RANGE $4240-$4245 DB_DATA 5
RANGE $4245-$424A DB_DATA 5
RANGE $424A-$424F DB_DATA 5
RANGE $424F-$4254 DB_DATA 5
RANGE $4254-$4259 DB_DATA 5
RANGE $4259-$425C DB_DATA 3
RANGE $425C-$4261 DB_DATA 5
RANGE $4261-$4266 DB_DATA 5
RANGE $4266-$426B DB_DATA 5
RANGE $426B-$4270 DB_DATA 5
RANGE $4270-$4275 DB_DATA 5
RANGE $4275-$427A DB_DATA 5
RANGE $427A-$427F DB_DATA 5
RANGE $427F-$4284 DB_DATA 5
RANGE $4284-$4289 DB_DATA 5
RANGE $4289-$428E DB_DATA 5
RANGE $428E-$4293 DB_DATA 5
RANGE $4293-$4298 DB_DATA 5
RANGE $4298-$429D DB_DATA 5
RANGE $429D-$42A2 DB_DATA 5
RANGE $42A2-$42A5 DB_DATA 3
RANGE $42A5-$42AA DB_DATA 5
RANGE $42AA-$42AF DB_DATA 5
RANGE $42AF-$42B4 DB_DATA 5
RANGE $42B4-$42B7 DB_DATA 3
RANGE $42B7-$42BC DB_DATA 5
RANGE $42BC-$42C1 DB_DATA 5
RANGE $42C1-$42C6 DB_DATA 5
RANGE $42C6-$42C9 DB_DATA 3
RANGE $42C9-$42CC DB_DATA 3
RANGE $42CC-$42CF DB_DATA 3
RANGE $42CF-$42D2 DB_DATA 3
RANGE $42D2-$42D5 DB_DATA 3
RANGE $42D5-$42D8 DB_DATA 3
RANGE $42D8-$42DD DB_DATA 5
RANGE $42DD-$42E2 DB_DATA 5
RANGE $42E2-$42E7 DB_DATA 5
RANGE $42E7-$42EC DB_DATA 5
RANGE $42EC-$42F1 DB_DATA 5
RANGE $42F1-$42F4 DB_DATA 3
RANGE $42F4-$42F7 DB_DATA 3
RANGE $42F7-$42FC DB_DATA 5
RANGE $42FC-$4301 DB_DATA 5
RANGE $4301-$4306 DB_DATA 5
RANGE $4306-$430B DB_DATA 5
RANGE $430B-$4310 DB_DATA 5
RANGE $4310-$4315 DB_DATA 5
RANGE $4315-$4318 DB_DATA 3
RANGE $4318-$431B DB_DATA 3
RANGE $431B-$4320 DB_DATA 5
RANGE $4320-$4325 DB_DATA 5
RANGE $4325-$432A DB_DATA 5
RANGE $432A-$432D DB_DATA 3
RANGE $432D-$4332 DB_DATA 5
RANGE $4332-$4337 DB_DATA 5
RANGE $4337-$433C DB_DATA 5
RANGE $433C-$4341 DB_DATA 5
RANGE $4341-$4344 DB_DATA 3
RANGE $4344-$4347 DB_DATA 3
RANGE $4347-$434C DB_DATA 5
RANGE $434C-$4351 DB_DATA 5
RANGE $4351-$4356 DB_DATA 5
RANGE $4356-$435B DB_DATA 5
RANGE $435B-$4360 DB_DATA 5
RANGE $4360-$4365 DB_DATA 5
RANGE $4365-$4368 DB_DATA 3
RANGE $4368-$436B DB_DATA 3
RANGE $436B-$4370 DB_DATA 5
RANGE $4370-$4375 DB_DATA 5
RANGE $4375-$437A DB_DATA 5
RANGE $437A-$437D DB_DATA 3
RANGE $437D-$4382 DB_DATA 5
RANGE $4382-$4387 DB_DATA 5
RANGE $4387-$438C DB_DATA 5
RANGE $438C-$4391 DB_DATA 5
RANGE $4391-$4394 DB_DATA 3
RANGE $4394-$4397 DB_DATA 3
RANGE $4397-$439A DB_DATA 3
RANGE $439A-$439D DB_DATA 3
RANGE $439D-$43A0 DB_DATA 3
RANGE $43A0-$43A3 DB_DATA 3
RANGE $43A3-$43A8 DB_DATA 5
RANGE $43A8-$43AB DB_DATA 3
RANGE $43AB-$43AE DB_DATA 3
RANGE $43AE-$43B1 DB_DATA 3
RANGE $43B1-$43B4 DB_DATA 3
RANGE $43B4-$43B7 DB_DATA 3
RANGE $43B7-$43BA DB_DATA 3
RANGE $43BA-$43BF DB_DATA 5
RANGE $43BF-$43C2 DB_DATA 3
RANGE $43C2-$43C5 DB_DATA 3
RANGE $43C5-$43C8 DB_DATA 3
RANGE $43C8-$43CB DB_DATA 3
RANGE $43CB-$43CE DB_DATA 3
RANGE $43CE-$43D3 DB_DATA 5
RANGE $43D3-$43D8 DB_DATA 5
RANGE $43D8-$43DD DB_DATA 5
RANGE $43DD-$43E0 DB_DATA 3
RANGE $43E0-$43E3 DB_DATA 3
RANGE $43E3-$43E6 DB_DATA 3
RANGE $43E6-$43E9 DB_DATA 3
RANGE $43E9-$43EC DB_DATA 3
RANGE $43EC-$43EF DB_DATA 3
RANGE $43EF-$43F4 DB_DATA 5
RANGE $43F4-$43F9 DB_DATA 5
RANGE $43F9-$43FE DB_DATA 5
RANGE $43FE-$4403 DB_DATA 5
RANGE $4403-$4408 DB_DATA 5
RANGE $4408-$440D DB_DATA 5
RANGE $440D-$4412 DB_DATA 5
RANGE $4412-$4417 DB_DATA 5
RANGE $4417-$441C DB_DATA 5
RANGE $441C-$441F DB_DATA 3
RANGE $441F-$4422 DB_DATA 3
RANGE $4422-$4425 DB_DATA 3
RANGE $4425-$4428 DB_DATA 3
RANGE $4428-$442B DB_DATA 3
RANGE $442B-$442E DB_DATA 3
RANGE $442E-$4433 DB_DATA 5
RANGE $4433-$4438 DB_DATA 5
RANGE $4438-$443D DB_DATA 5
RANGE $443D-$4442 DB_DATA 5
RANGE $4442-$4447 DB_DATA 5
RANGE $4447-$444A DB_DATA 3
RANGE $444A-$444D DB_DATA 3
RANGE $444D-$4450 DB_DATA 3
RANGE $4450-$4453 DB_DATA 3
RANGE $4453-$4456 DB_DATA 3
RANGE $4456-$4459 DB_DATA 3
RANGE $4459-$445E DB_DATA 5
RANGE $445E-$4463 DB_DATA 5
RANGE $4463-$4468 DB_DATA 5
RANGE $4468-$446B DB_DATA 3
RANGE $446B-$4470 DB_DATA 5
RANGE $4470-$4475 DB_DATA 5
RANGE $4475-$447A DB_DATA 5
RANGE $447A-$447F DB_DATA 5
RANGE $447F-$4484 DB_DATA 5
RANGE $4484-$4489 DB_DATA 5
RANGE $4489-$448E DB_DATA 5
RANGE $448E-$4493 DB_DATA 5
RANGE $4493-$4498 DB_DATA 5
RANGE $4498-$449D DB_DATA 5
RANGE $449D-$44A2 DB_DATA 5
RANGE $44A2-$44A7 DB_DATA 5
RANGE $44A7-$44AC DB_DATA 5
RANGE $44AC-$44B1 DB_DATA 5
RANGE $44B1-$44B6 DB_DATA 5
RANGE $44B6-$44BB DB_DATA 5
RANGE $44BB-$44C0 DB_DATA 5
RANGE $44C0-$44C5 DB_DATA 5
RANGE $44C5-$44CA DB_DATA 5
RANGE $44CA-$44CF DB_DATA 5
RANGE $44CF-$44D4 DB_DATA 5
RANGE $44D4-$44D6 DW_DATA 1
RANGE $44D6-$44D8 DW_DATA 1
RANGE $44D8-$44DA DW_DATA 1
RANGE $44DA-$44DC DW_DATA 1
RANGE $44DC-$44DE DW_DATA 1
RANGE $44DE-$44E0 DW_DATA 1
RANGE $44E0-$44E2 DW_DATA 1
RANGE $44E2-$44E4 DW_DATA 1
RANGE $44E4-$44E6 DW_DATA 1
RANGE $44E6-$44E8 DW_DATA 1
RANGE $44E8-$44EA DW_DATA 1
RANGE $44EA-$44EC DW_DATA 1
RANGE $44EC-$44EE DW_DATA 1
RANGE $44EE-$44F0 DW_DATA 1
RANGE $44F0-$44F2 DW_DATA 1
RANGE $44F2-$44F4 DW_DATA 1
RANGE $44F4-$44F9 DB_DATA 5
RANGE $44F9-$44FE DB_DATA 5
RANGE $44FE-$4503 DB_DATA 5
RANGE $4503-$4508 DB_DATA 5
RANGE $4508-$450D DB_DATA 5
RANGE $450D-$4512 DB_DATA 5
RANGE $4512-$4517 DB_DATA 5
RANGE $4517-$451C DB_DATA 5
RANGE $451C-$4521 DB_DATA 5
RANGE $4521-$4526 DB_DATA 5
RANGE $4526-$452B DB_DATA 5
RANGE $452B-$4530 DB_DATA 5
RANGE $4530-$4535 DB_DATA 5
RANGE $4535-$453A DB_DATA 5
RANGE $453A-$453F DB_DATA 5
RANGE $453F-$4544 DB_DATA 5
RANGE $4544-$4549 DB_DATA 5
RANGE $4549-$454E DB_DATA 5
RANGE $454E-$4553 DB_DATA 5
RANGE $4553-$4558 DB_DATA 5
RANGE $4558-$455D DB_DATA 5
RANGE $455D-$4562 DB_DATA 5
RANGE $4562-$4567 DB_DATA 5
RANGE $4567-$456C DB_DATA 5
RANGE $456C-$4571 DB_DATA 5
RANGE $4571-$4576 DB_DATA 5
RANGE $4576-$457B DB_DATA 5
RANGE $457B-$4580 DB_DATA 5
RANGE $4580-$4585 DB_DATA 5
RANGE $4585-$458A DB_DATA 5
RANGE $458A-$458C DW_DATA 1
RANGE $458C-$458E DW_DATA 1
RANGE $458E-$4590 DW_DATA 1
RANGE $4590-$4592 DW_DATA 1
RANGE $4592-$4594 DW_DATA 1
RANGE $4594-$4599 DB_DATA 5
RANGE $4599-$459E DB_DATA 5
RANGE $459E-$45A3 DB_DATA 5
RANGE $45A3-$45A8 DB_DATA 5
RANGE $45A8-$45AD DB_DATA 5
RANGE $45AD-$45B2 DB_DATA 5
RANGE $45B2-$45B7 DB_DATA 5
RANGE $45B7-$45BC DB_DATA 5
RANGE $45BC-$45C1 DB_DATA 5
RANGE $45C1-$45C6 DB_DATA 5
RANGE $45C6-$45CB DB_DATA 5
RANGE $45CB-$45D0 DB_DATA 5
RANGE $45D0-$45D5 DB_DATA 5
RANGE $45D5-$45DA DB_DATA 5
RANGE $45DA-$45DF DB_DATA 5
RANGE $45DF-$45E4 DB_DATA 5
RANGE $45E4-$45E9 DB_DATA 5
RANGE $45E9-$45EE DB_DATA 5
RANGE $45EE-$45F3 DB_DATA 5
RANGE $45F3-$45F8 DB_DATA 5
RANGE $45F8-$45FD DB_DATA 5
RANGE $45FD-$4602 DB_DATA 5
RANGE $4602-$4607 DB_DATA 5
RANGE $4607-$460C DB_DATA 5
RANGE $460C-$4611 DB_DATA 5
RANGE $4611-$4616 DB_DATA 5
RANGE $4616-$461B DB_DATA 5
RANGE $461B-$4620 DB_DATA 5
RANGE $4620-$4625 DB_DATA 5
RANGE $4625-$462A DB_DATA 5
RANGE $462A-$462F DB_DATA 5
RANGE $462F-$4634 DB_DATA 5
RANGE $4634-$4639 DB_DATA 5
RANGE $4639-$463E DB_DATA 5
RANGE $463E-$4643 DB_DATA 5
RANGE $4643-$4648 DB_DATA 5
RANGE $4648-$464A DW_DATA 1
RANGE $464A-$464C DW_DATA 1
RANGE $464C-$464E DW_DATA 1
RANGE $464E-$4650 DW_DATA 1
RANGE $4650-$4652 DW_DATA 1
RANGE $4652-$4657 DB_DATA 5
RANGE $4657-$465C DB_DATA 5
RANGE $465C-$4661 DB_DATA 5
RANGE $4661-$4666 DB_DATA 5
RANGE $4666-$466B DB_DATA 5
RANGE $466B-$4670 DB_DATA 5
RANGE $4670-$4675 DB_DATA 5
RANGE $4675-$467A DB_DATA 5
RANGE $467A-$467F DB_DATA 5
RANGE $467F-$4684 DB_DATA 5
RANGE $4684-$4689 DB_DATA 5
RANGE $4689-$468E DB_DATA 5
RANGE $468E-$4693 DB_DATA 5
RANGE $4693-$4698 DB_DATA 5
RANGE $4698-$469D DB_DATA 5
RANGE $469D-$46A2 DB_DATA 5
RANGE $46A2-$46A7 DB_DATA 5
RANGE $46A7-$46AC DB_DATA 5
RANGE $46AC-$46B1 DB_DATA 5
RANGE $46B1-$46B6 DB_DATA 5
RANGE $46B6-$46BB DB_DATA 5
RANGE $46BB-$46C0 DB_DATA 5
RANGE $46C0-$46C5 DB_DATA 5
RANGE $46C5-$46CA DB_DATA 5
RANGE $46CA-$46CF DB_DATA 5
RANGE $46CF-$46D4 DB_DATA 5
RANGE $46D4-$46D9 DB_DATA 5
RANGE $46D9-$46DE DB_DATA 5
RANGE $46DE-$46E3 DB_DATA 5
RANGE $46E3-$46E8 DB_DATA 5
RANGE $46E8-$46ED DB_DATA 5
RANGE $46ED-$46F2 DB_DATA 5
RANGE $46F2-$46F7 DB_DATA 5
RANGE $46F7-$46FC DB_DATA 5
RANGE $46FC-$4701 DB_DATA 5
RANGE $4701-$4706 DB_DATA 5
RANGE $4706-$470B DB_DATA 5
RANGE $470B-$470D DW_DATA 1
RANGE $470D-$470F DW_DATA 1
RANGE $470F-$4711 DW_DATA 1
RANGE $4711-$4713 DW_DATA 1
RANGE $4713-$4715 DW_DATA 1
RANGE $4715-$471A DB_DATA 5
RANGE $471A-$471F DB_DATA 5
RANGE $471F-$4724 DB_DATA 5
RANGE $4724-$4729 DB_DATA 5
RANGE $4729-$472E DB_DATA 5
RANGE $472E-$4731 DB_DATA 3
RANGE $4731-$4736 DB_DATA 5
RANGE $4736-$473B DB_DATA 5
RANGE $473B-$4740 DB_DATA 5
RANGE $4740-$4745 DB_DATA 5
RANGE $4745-$474A DB_DATA 5
RANGE $474A-$474F DB_DATA 5
RANGE $474F-$4754 DB_DATA 5
RANGE $4754-$4759 DB_DATA 5
RANGE $4759-$475C DB_DATA 3
RANGE $475C-$4761 DB_DATA 5
RANGE $4761-$4766 DB_DATA 5
RANGE $4766-$476B DB_DATA 5
RANGE $476B-$4770 DB_DATA 5
RANGE $4770-$4775 DB_DATA 5
RANGE $4775-$477A DB_DATA 5
RANGE $477A-$477F DB_DATA 5
RANGE $477F-$4784 DB_DATA 5
RANGE $4784-$4787 DB_DATA 3
RANGE $4787-$478C DB_DATA 5
RANGE $478C-$4791 DB_DATA 5
RANGE $4791-$4796 DB_DATA 5
RANGE $4796-$479B DB_DATA 5
RANGE $479B-$47A0 DB_DATA 5
RANGE $47A0-$47A5 DB_DATA 5
RANGE $47A5-$47AA DB_DATA 5
RANGE $47AA-$47AF DB_DATA 5
RANGE $47AF-$47B2 DB_DATA 3
RANGE $47B2-$47B7 DB_DATA 5
RANGE $47B7-$47BC DB_DATA 5
RANGE $47BC-$47C1 DB_DATA 5
RANGE $47C1-$47C3 DW_DATA 1
RANGE $47C3-$47C5 DW_DATA 1
RANGE $47C5-$47C7 DW_DATA 1
RANGE $47C7-$47C9 DW_DATA 1
RANGE $47C9-$47CB DW_DATA 1
RANGE $47CB-$47D0 DB_DATA 5
RANGE $47D0-$47D5 DB_DATA 5
RANGE $47D5-$47DA DB_DATA 5
RANGE $47DA-$47DF DB_DATA 5
RANGE $47DF-$47E4 DB_DATA 5
RANGE $47E4-$47E7 DB_DATA 3
RANGE $47E7-$47EC DB_DATA 5
RANGE $47EC-$47F1 DB_DATA 5
RANGE $47F1-$47F6 DB_DATA 5
RANGE $47F6-$47FB DB_DATA 5
RANGE $47FB-$4800 DB_DATA 5
RANGE $4800-$4805 DB_DATA 5
RANGE $4805-$480A DB_DATA 5
RANGE $480A-$480F DB_DATA 5
RANGE $480F-$4812 DB_DATA 3
RANGE $4812-$4817 DB_DATA 5
RANGE $4817-$481C DB_DATA 5
RANGE $481C-$4821 DB_DATA 5
RANGE $4821-$4826 DB_DATA 5
RANGE $4826-$482B DB_DATA 5
RANGE $482B-$4830 DB_DATA 5
RANGE $4830-$4835 DB_DATA 5
RANGE $4835-$483A DB_DATA 5
RANGE $483A-$483D DB_DATA 3
RANGE $483D-$4842 DB_DATA 5
RANGE $4842-$4847 DB_DATA 5
RANGE $4847-$484C DB_DATA 5
RANGE $484C-$4851 DB_DATA 5
RANGE $4851-$4856 DB_DATA 5
RANGE $4856-$485B DB_DATA 5
RANGE $485B-$4860 DB_DATA 5
RANGE $4860-$4865 DB_DATA 5
RANGE $4865-$4868 DB_DATA 3
RANGE $4868-$486D DB_DATA 5
RANGE $486D-$4872 DB_DATA 5
RANGE $4872-$4877 DB_DATA 5
RANGE $4877-$4879 DW_DATA 1
RANGE $4879-$487A DB_DATA 1
RANGE $487A-$487C DW_DATA 1
RANGE $487C-$487D DB_DATA 1
RANGE $487D-$487F DW_DATA 1
RANGE $487F-$4881 DW_DATA 1
RANGE $4881-$4883 DW_DATA 1
RANGE $4883-$4885 DW_DATA 1
RANGE $4885-$4887 DW_DATA 1
RANGE $4887-$4889 DW_DATA 1
RANGE $4889-$488B DW_DATA 1
RANGE $488B-$4890 DB_DATA 5
RANGE $4890-$4895 DB_DATA 5
RANGE $4895-$4898 DB_DATA 3
RANGE $4898-$489D DB_DATA 5
RANGE $489D-$48A2 DB_DATA 5
RANGE $48A2-$48A7 DB_DATA 5
RANGE $48A7-$48AA DB_DATA 3
RANGE $48AA-$48AF DB_DATA 5
RANGE $48AF-$48B4 DB_DATA 5
RANGE $48B4-$48B9 DB_DATA 5
RANGE $48B9-$48BE DB_DATA 5
RANGE $48BE-$48C1 DB_DATA 3
RANGE $48C1-$48C6 DB_DATA 5
RANGE $48C6-$48CB DB_DATA 5
RANGE $48CB-$48D0 DB_DATA 5
RANGE $48D0-$48D3 DB_DATA 3
RANGE $48D3-$48D8 DB_DATA 5
RANGE $48D8-$48DD DB_DATA 5
RANGE $48DD-$48E2 DB_DATA 5
RANGE $48E2-$48E7 DB_DATA 5
RANGE $48E7-$48EA DB_DATA 3
RANGE $48EA-$48EF DB_DATA 5
RANGE $48EF-$48F4 DB_DATA 5
RANGE $48F4-$48F9 DB_DATA 5
RANGE $48F9-$48FC DB_DATA 3
RANGE $48FC-$4901 DB_DATA 5
RANGE $4901-$4906 DB_DATA 5
RANGE $4906-$490B DB_DATA 5
RANGE $490B-$4910 DB_DATA 5
RANGE $4910-$4913 DB_DATA 3
RANGE $4913-$4918 DB_DATA 5
RANGE $4918-$491D DB_DATA 5
RANGE $491D-$4922 DB_DATA 5
RANGE $4922-$4925 DB_DATA 3
RANGE $4925-$492A DB_DATA 5
RANGE $492A-$492F DB_DATA 5
RANGE $492F-$4934 DB_DATA 5
RANGE $4934-$4939 DB_DATA 5
RANGE $4939-$493E DB_DATA 5
RANGE $493E-$4943 DB_DATA 5
RANGE $4943-$4948 DB_DATA 5
RANGE $4948-$494D DB_DATA 5
RANGE $494D-$4952 DB_DATA 5
RANGE $4952-$4955 DB_DATA 3
RANGE $4955-$4958 DB_DATA 3
RANGE $4958-$495B DB_DATA 3
RANGE $495B-$495E DB_DATA 3
RANGE $495E-$4961 DB_DATA 3
RANGE $4961-$4964 DB_DATA 3
RANGE $4964-$4969 DB_DATA 5
RANGE $4969-$496C DB_DATA 3
RANGE $496C-$4971 DB_DATA 5
RANGE $4971-$4976 DB_DATA 5
RANGE $4976-$497B DB_DATA 5
RANGE $497B-$497E DB_DATA 3
RANGE $497E-$4981 DB_DATA 3
RANGE $4981-$4986 DB_DATA 5
RANGE $4986-$498B DB_DATA 5
RANGE $498B-$498E DB_DATA 3
RANGE $498E-$4991 DB_DATA 3
RANGE $4991-$4994 DB_DATA 3
RANGE $4994-$4997 DB_DATA 3
RANGE $4997-$499A DB_DATA 3
RANGE $499A-$499D DB_DATA 3
RANGE $499D-$49A2 DB_DATA 5
RANGE $49A2-$49A5 DB_DATA 3
RANGE $49A5-$49A8 DB_DATA 3
RANGE $49A8-$49AB DB_DATA 3
RANGE $49AB-$49AE DB_DATA 3
RANGE $49AE-$49B1 DB_DATA 3
RANGE $49B1-$49B6 DB_DATA 5
RANGE $49B6-$49BB DB_DATA 5
RANGE $49BB-$49C0 DB_DATA 5
RANGE $49C0-$49C5 DB_DATA 5
RANGE $49C5-$49CA DB_DATA 5
RANGE $49CA-$49CF DB_DATA 5
RANGE $49CF-$49D4 DB_DATA 5
RANGE $49D4-$49D9 DB_DATA 5
RANGE $49D9-$49DC DB_DATA 3
RANGE $49DC-$49DF DB_DATA 3
RANGE $49DF-$49E2 DB_DATA 3
RANGE $49E2-$49E5 DB_DATA 3
RANGE $49E5-$49E8 DB_DATA 3
RANGE $49E8-$49EB DB_DATA 3
RANGE $49EB-$49F0 DB_DATA 5
RANGE $49F0-$49F3 DB_DATA 3
RANGE $49F3-$49F8 DB_DATA 5
RANGE $49F8-$49FD DB_DATA 5
RANGE $49FD-$4A02 DB_DATA 5
RANGE $4A02-$4A05 DB_DATA 3
RANGE $4A05-$4A08 DB_DATA 3
RANGE $4A08-$4A0D DB_DATA 5
RANGE $4A0D-$4A12 DB_DATA 5
RANGE $4A12-$4A15 DB_DATA 3
RANGE $4A15-$4A18 DB_DATA 3
RANGE $4A18-$4A1B DB_DATA 3
RANGE $4A1B-$4A1E DB_DATA 3
RANGE $4A1E-$4A21 DB_DATA 3
RANGE $4A21-$4A24 DB_DATA 3
RANGE $4A24-$4A29 DB_DATA 5
RANGE $4A29-$4A2C DB_DATA 3
RANGE $4A2C-$4A2F DB_DATA 3
RANGE $4A2F-$4A32 DB_DATA 3
RANGE $4A32-$4A35 DB_DATA 3
RANGE $4A35-$4A38 DB_DATA 3
RANGE $4A38-$4A3D DB_DATA 5
RANGE $4A3D-$4A42 DB_DATA 5
RANGE $4A42-$4A47 DB_DATA 5
RANGE $4A47-$4A4C DB_DATA 5
RANGE $4A4C-$4A51 DB_DATA 5
RANGE $4A51-$4A56 DB_DATA 5
RANGE $4A56-$4A5B DB_DATA 5
RANGE $4A5B-$4A60 DB_DATA 5
RANGE $4A60-$4A63 DB_DATA 3
RANGE $4A63-$4A66 DB_DATA 3
RANGE $4A66-$4A69 DB_DATA 3
RANGE $4A69-$4A6C DB_DATA 3
RANGE $4A6C-$4A6F DB_DATA 3
RANGE $4A6F-$4A72 DB_DATA 3
RANGE $4A72-$4A77 DB_DATA 5
RANGE $4A77-$4A7A DB_DATA 3
RANGE $4A7A-$4A7F DB_DATA 5
RANGE $4A7F-$4A84 DB_DATA 5
RANGE $4A84-$4A89 DB_DATA 5
RANGE $4A89-$4A8C DB_DATA 3
RANGE $4A8C-$4A8F DB_DATA 3
RANGE $4A8F-$4A94 DB_DATA 5
RANGE $4A94-$4A99 DB_DATA 5
RANGE $4A99-$4A9C DB_DATA 3
RANGE $4A9C-$4A9F DB_DATA 3
RANGE $4A9F-$4AA2 DB_DATA 3
RANGE $4AA2-$4AA5 DB_DATA 3
RANGE $4AA5-$4AA8 DB_DATA 3
RANGE $4AA8-$4AAB DB_DATA 3
RANGE $4AAB-$4AB0 DB_DATA 5
RANGE $4AB0-$4AB3 DB_DATA 3
RANGE $4AB3-$4AB6 DB_DATA 3
RANGE $4AB6-$4AB9 DB_DATA 3
RANGE $4AB9-$4ABC DB_DATA 3
RANGE $4ABC-$4ABF DB_DATA 3
RANGE $4ABF-$4AC4 DB_DATA 5
RANGE $4AC4-$4AC6 DW_DATA 1
RANGE $4AC6-$4AC8 DW_DATA 1
RANGE $4AC8-$4ACA DW_DATA 1
RANGE $4ACA-$4ACC DW_DATA 1
RANGE $4ACC-$4ACE DW_DATA 1
RANGE $4ACE-$4AD0 DW_DATA 1
RANGE $4AD0-$4AD2 DW_DATA 1
RANGE $4AD2-$4AD4 DW_DATA 1
RANGE $4AD4-$4AD6 DW_DATA 1
RANGE $4AD6-$4AD8 DW_DATA 1
RANGE $4AD8-$4ADA DW_DATA 1
RANGE $4ADA-$4ADC DW_DATA 1
RANGE $4ADC-$4ADE DW_DATA 1
RANGE $4ADE-$4AE0 DW_DATA 1
RANGE $4AE0-$4AE2 DW_DATA 1
RANGE $4AE2-$4AE4 DW_DATA 1
RANGE $4AE4-$4AE6 DW_DATA 1
RANGE $4AE6-$4AE8 DW_DATA 1
RANGE $4AE8-$4AED DB_DATA 5
RANGE $4AED-$4AF2 DB_DATA 5
RANGE $4AF2-$4AF7 DB_DATA 5
RANGE $4AF7-$4AFC DB_DATA 5
RANGE $4AFC-$4B01 DB_DATA 5
RANGE $4B01-$4B06 DB_DATA 5
RANGE $4B06-$4B0B DB_DATA 5
RANGE $4B0B-$4B10 DB_DATA 5
RANGE $4B10-$4B15 DB_DATA 5
RANGE $4B15-$4B1A DB_DATA 5
RANGE $4B1A-$4B1D DB_DATA 3
RANGE $4B1D-$4B20 DB_DATA 3
RANGE $4B20-$4B23 DB_DATA 3
RANGE $4B23-$4B26 DB_DATA 3
RANGE $4B26-$4B29 DB_DATA 3
RANGE $4B29-$4B2C DB_DATA 3
RANGE $4B2C-$4B31 DB_DATA 5
RANGE $4B31-$4B34 DB_DATA 3
RANGE $4B34-$4B39 DB_DATA 5
RANGE $4B39-$4B3E DB_DATA 5
RANGE $4B3E-$4B43 DB_DATA 5
RANGE $4B43-$4B46 DB_DATA 3
RANGE $4B46-$4B4B DB_DATA 5
RANGE $4B4B-$4B50 DB_DATA 5
RANGE $4B50-$4B55 DB_DATA 5
RANGE $4B55-$4B58 DB_DATA 3
RANGE $4B58-$4B5B DB_DATA 3
RANGE $4B5B-$4B60 DB_DATA 5
RANGE $4B60-$4B65 DB_DATA 5
RANGE $4B65-$4B6A DB_DATA 5
RANGE $4B6A-$4B6D DB_DATA 3
RANGE $4B6D-$4B72 DB_DATA 5
RANGE $4B72-$4B77 DB_DATA 5
RANGE $4B77-$4B7C DB_DATA 5
RANGE $4B7C-$4B81 DB_DATA 5
RANGE $4B81-$4B86 DB_DATA 5
RANGE $4B86-$4B8B DB_DATA 5
RANGE $4B8B-$4B90 DB_DATA 5
RANGE $4B90-$4B93 DB_DATA 3
RANGE $4B93-$4B96 DB_DATA 3
RANGE $4B96-$4B9B DB_DATA 5
RANGE $4B9B-$4BA0 DB_DATA 5
RANGE $4BA0-$4BA3 DB_DATA 3
RANGE $4BA3-$4BA6 DB_DATA 3
RANGE $4BA6-$4BA9 DB_DATA 3
RANGE $4BA9-$4BAE DB_DATA 5
RANGE $4BAE-$4BB3 DB_DATA 5
RANGE $4BB3-$4BB8 DB_DATA 5
RANGE $4BB8-$4BBD DB_DATA 5
RANGE $4BBD-$4BC2 DB_DATA 5
RANGE $4BC2-$4BC7 DB_DATA 5
RANGE $4BC7-$4BCA DB_DATA 3
RANGE $4BCA-$4BCF DB_DATA 5
RANGE $4BCF-$4BD4 DB_DATA 5
RANGE $4BD4-$4BD9 DB_DATA 5
RANGE $4BD9-$4BDC DB_DATA 3
RANGE $4BDC-$4BE1 DB_DATA 5
RANGE $4BE1-$4BE6 DB_DATA 5
RANGE $4BE6-$4BE9 DB_DATA 3
RANGE $4BE9-$4BEC DB_DATA 3
RANGE $4BEC-$4BF1 DB_DATA 5
RANGE $4BF1-$4BF6 DB_DATA 5
RANGE $4BF6-$4BFB DB_DATA 5
RANGE $4BFB-$4C00 DB_DATA 5
RANGE $4C00-$4C05 DB_DATA 5
RANGE $4C05-$4C0A DB_DATA 5
RANGE $4C0A-$4C0F DB_DATA 5
RANGE $4C0F-$4C14 DB_DATA 5
RANGE $4C14-$4C17 DB_DATA 3
RANGE $4C17-$4C1C DB_DATA 5
RANGE $4C1C-$4C21 DB_DATA 5
RANGE $4C21-$4C26 DB_DATA 5
RANGE $4C26-$4C2B DB_DATA 5
RANGE $4C2B-$4C30 DB_DATA 5
RANGE $4C30-$4C35 DB_DATA 5
RANGE $4C35-$4C3A DB_DATA 5
RANGE $4C3A-$4C3F DB_DATA 5
RANGE $4C3F-$4C44 DB_DATA 5
RANGE $4C44-$4C49 DB_DATA 5
RANGE $4C49-$4C4E DB_DATA 5
RANGE $4C4E-$4C53 DB_DATA 5
RANGE $4C53-$4C58 DB_DATA 5
RANGE $4C58-$4C5D DB_DATA 5
RANGE $4C5D-$4C62 DB_DATA 5
RANGE $4C62-$4C67 DB_DATA 5
RANGE $4C67-$4C6C DB_DATA 5
RANGE $4C6C-$4C71 DB_DATA 5
RANGE $4C71-$4C76 DB_DATA 5
RANGE $4C76-$4C7B DB_DATA 5
RANGE $4C7B-$4C80 DB_DATA 5
RANGE $4C80-$4C85 DB_DATA 5
RANGE $4C85-$4C88 DB_DATA 3
RANGE $4C88-$4C8D DB_DATA 5
RANGE $4C8D-$4C92 DB_DATA 5
RANGE $4C92-$4C97 DB_DATA 5
RANGE $4C97-$4C9C DB_DATA 5
RANGE $4C9C-$4C9F DB_DATA 3
RANGE $4C9F-$4CA4 DB_DATA 5
RANGE $4CA4-$4CA9 DB_DATA 5
RANGE $4CA9-$4CAE DB_DATA 5
RANGE $4CAE-$4CB3 DB_DATA 5
RANGE $4CB3-$4CB8 DB_DATA 5
RANGE $4CB8-$4CBD DB_DATA 5
RANGE $4CBD-$4CC2 DB_DATA 5
RANGE $4CC2-$4CC7 DB_DATA 5
RANGE $4CC7-$4CCC DB_DATA 5
RANGE $4CCC-$4CD1 DB_DATA 5
RANGE $4CD1-$4CD6 DB_DATA 5
RANGE $4CD6-$4CDB DB_DATA 5
RANGE $4CDB-$4CE0 DB_DATA 5
RANGE $4CE0-$4CE5 DB_DATA 5
RANGE $4CE5-$4CEA DB_DATA 5
RANGE $4CEA-$4CEF DB_DATA 5
RANGE $4CEF-$4CF4 DB_DATA 5
RANGE $4CF4-$4CF9 DB_DATA 5
RANGE $4CF9-$4CFE DB_DATA 5
RANGE $4CFE-$4D03 DB_DATA 5
RANGE $4D03-$4D06 DB_DATA 3
RANGE $4D06-$4D09 DB_DATA 3
RANGE $4D09-$4D0E DB_DATA 5
RANGE $4D0E-$4D13 DB_DATA 5
RANGE $4D13-$4D18 DB_DATA 5
RANGE $4D18-$4D1D DB_DATA 5
RANGE $4D1D-$4D20 DB_DATA 3
RANGE $4D20-$4D23 DB_DATA 3
RANGE $4D23-$4D26 DB_DATA 3
RANGE $4D26-$4D2B DB_DATA 5
RANGE $4D2B-$4D30 DB_DATA 5
RANGE $4D30-$4D33 DB_DATA 3
RANGE $4D33-$4D38 DB_DATA 5
RANGE $4D38-$4D3D DB_DATA 5
RANGE $4D3D-$4D40 DB_DATA 3
RANGE $4D40-$4D45 DB_DATA 5
RANGE $4D45-$4D4A DB_DATA 5
RANGE $4D4A-$4D4F DB_DATA 5
RANGE $4D4F-$4D54 DB_DATA 5
RANGE $4D54-$4D57 DB_DATA 3
RANGE $4D57-$4D5A DB_DATA 3
RANGE $4D5A-$4D5D DB_DATA 3
RANGE $4D5D-$4D62 DB_DATA 5
RANGE $4D62-$4D67 DB_DATA 5
RANGE $4D67-$4D6A DB_DATA 3
RANGE $4D6A-$4D6D DB_DATA 3
RANGE $4D6D-$4D70 DB_DATA 3
RANGE $4D70-$4D73 DB_DATA 3
RANGE $4D73-$4D78 DB_DATA 5
RANGE $4D78-$4D7D DB_DATA 5
RANGE $4D7D-$4D82 DB_DATA 5
RANGE $4D82-$4D87 DB_DATA 5
RANGE $4D87-$4D8A DB_DATA 3
RANGE $4D8A-$4D8D DB_DATA 3
RANGE $4D8D-$4D90 DB_DATA 3
RANGE $4D90-$4D95 DB_DATA 5
RANGE $4D95-$4D9A DB_DATA 5
RANGE $4D9A-$4D9D DB_DATA 3
RANGE $4D9D-$4DA0 DB_DATA 3
RANGE $4DA0-$4DA3 DB_DATA 3
RANGE $4DA3-$4DA6 DB_DATA 3
RANGE $4DA6-$4DAB DB_DATA 5
RANGE $4DAB-$4DAD DW_DATA 1
RANGE $4DAD-$4DAF DW_DATA 1
RANGE $4DAF-$4DB1 DW_DATA 1
RANGE $4DB1-$4DB3 DW_DATA 1
RANGE $4DB3-$4DB8 DB_DATA 5
RANGE $4DB8-$4DBD DB_DATA 5
RANGE $4DBD-$4DC2 DB_DATA 5
RANGE $4DC2-$4DC7 DB_DATA 5
RANGE $4DC7-$4DCC DB_DATA 5
RANGE $4DCC-$4DCF DB_DATA 3
RANGE $4DCF-$4DD2 DB_DATA 3
RANGE $4DD2-$4DD5 DB_DATA 3
RANGE $4DD5-$4DD8 DB_DATA 3
RANGE $4DD8-$4DDB DB_DATA 3
RANGE $4DDB-$4DDE DB_DATA 3
RANGE $4DDE-$4DE3 DB_DATA 5
RANGE $4DE3-$4DE6 DB_DATA 3
RANGE $4DE6-$4DEB DB_DATA 5
RANGE $4DEB-$4DF0 DB_DATA 5
RANGE $4DF0-$4DF5 DB_DATA 5
RANGE $4DF5-$4DF8 DB_DATA 3
RANGE $4DF8-$4DFB DB_DATA 3
RANGE $4DFB-$4DFE DB_DATA 3
RANGE $4DFE-$4E01 DB_DATA 3
RANGE $4E01-$4E04 DB_DATA 3
RANGE $4E04-$4E09 DB_DATA 5
RANGE $4E09-$4E0E DB_DATA 5
RANGE $4E0E-$4E13 DB_DATA 5
RANGE $4E13-$4E16 DB_DATA 3
RANGE $4E16-$4E1B DB_DATA 5
RANGE $4E1B-$4E20 DB_DATA 5
RANGE $4E20-$4E25 DB_DATA 5
RANGE $4E25-$4E28 DB_DATA 3
RANGE $4E28-$4E2B DB_DATA 3
RANGE $4E2B-$4E2E DB_DATA 3
RANGE $4E2E-$4E31 DB_DATA 3
RANGE $4E31-$4E36 DB_DATA 5
RANGE $4E36-$4E3B DB_DATA 5
RANGE $4E3B-$4E40 DB_DATA 5
RANGE $4E40-$4E43 DB_DATA 3
RANGE $4E43-$4E48 DB_DATA 5
RANGE $4E48-$4E4D DB_DATA 5
RANGE $4E4D-$4E52 DB_DATA 5
RANGE $4E52-$4E57 DB_DATA 5
RANGE $4E57-$4E5C DB_DATA 5
RANGE $4E5C-$4E61 DB_DATA 5
RANGE $4E61-$4E64 DB_DATA 3
RANGE $4E64-$4E69 DB_DATA 5
RANGE $4E69-$4E6E DB_DATA 5
RANGE $4E6E-$4E73 DB_DATA 5
RANGE $4E73-$4E78 DB_DATA 5
RANGE $4E78-$4E7D DB_DATA 5
RANGE $4E7D-$4E80 DB_DATA 3
RANGE $4E80-$4E83 DB_DATA 3
RANGE $4E83-$4E88 DB_DATA 5
RANGE $4E88-$4E8D DB_DATA 5
RANGE $4E8D-$4E92 DB_DATA 5
RANGE $4E92-$4E95 DB_DATA 3
RANGE $4E95-$4E98 DB_DATA 3
RANGE $4E98-$4E9D DB_DATA 5
RANGE $4E9D-$4EA2 DB_DATA 5
RANGE $4EA2-$4EA7 DB_DATA 5
RANGE $4EA7-$4EAA DB_DATA 3
RANGE $4EAA-$4EAD DB_DATA 3
RANGE $4EAD-$4EB2 DB_DATA 5
RANGE $4EB2-$4EB7 DB_DATA 5
RANGE $4EB7-$4EBC DB_DATA 5
RANGE $4EBC-$4EBF DB_DATA 3
RANGE $4EBF-$4EC2 DB_DATA 3
RANGE $4EC2-$4EC7 DB_DATA 5
RANGE $4EC7-$4ECC DB_DATA 5
RANGE $4ECC-$4ED1 DB_DATA 5
RANGE $4ED1-$4ED4 DB_DATA 3
RANGE $4ED4-$4ED7 DB_DATA 3
RANGE $4ED7-$4EDC DB_DATA 5
RANGE $4EDC-$4EE1 DB_DATA 5
RANGE $4EE1-$4EE6 DB_DATA 5
RANGE $4EE6-$4EE9 DB_DATA 3
RANGE $4EE9-$4EEE DB_DATA 5
RANGE $4EEE-$4EF3 DB_DATA 5
RANGE $4EF3-$4EF8 DB_DATA 5
RANGE $4EF8-$4EFB DB_DATA 3
RANGE $4EFB-$4EFE DB_DATA 3
RANGE $4EFE-$4F01 DB_DATA 3
RANGE $4F01-$4F04 DB_DATA 3
RANGE $4F04-$4F09 DB_DATA 5
RANGE $4F09-$4F0E DB_DATA 5
RANGE $4F0E-$4F13 DB_DATA 5
RANGE $4F13-$4F18 DB_DATA 5
RANGE $4F18-$4F1D DB_DATA 5
RANGE $4F1D-$4F22 DB_DATA 5
RANGE $4F22-$4F27 DB_DATA 5
RANGE $4F27-$4F2C DB_DATA 5
RANGE $4F2C-$4F2F DB_DATA 3
RANGE $4F2F-$4F32 DB_DATA 3
RANGE $4F32-$4F35 DB_DATA 3
RANGE $4F35-$4F38 DB_DATA 3
RANGE $4F38-$4F3D DB_DATA 5
RANGE $4F3D-$4F42 DB_DATA 5
RANGE $4F42-$4F47 DB_DATA 5
RANGE $4F47-$4F4A DB_DATA 3
RANGE $4F4A-$4F4D DB_DATA 3
RANGE $4F4D-$4F50 DB_DATA 3
RANGE $4F50-$4F53 DB_DATA 3
RANGE $4F53-$4F56 DB_DATA 3
RANGE $4F56-$4F59 DB_DATA 3
RANGE $4F59-$4F5E DB_DATA 5
RANGE $4F5E-$4F61 DB_DATA 3
RANGE $4F61-$4F66 DB_DATA 5
RANGE $4F66-$4F6B DB_DATA 5
RANGE $4F6B-$4F70 DB_DATA 5
RANGE $4F70-$4F75 DB_DATA 5
RANGE $4F75-$4F7A DB_DATA 5
RANGE $4F7A-$4F7D DB_DATA 3
RANGE $4F7D-$4F80 DB_DATA 3
RANGE $4F80-$4F85 DB_DATA 5
RANGE $4F85-$4F8A DB_DATA 5
RANGE $4F8A-$4F8F DB_DATA 5
RANGE $4F8F-$4F94 DB_DATA 5
RANGE $4F94-$4F99 DB_DATA 5
RANGE $4F99-$4F9C DB_DATA 3
RANGE $4F9C-$4F9F DB_DATA 3
RANGE $4F9F-$4FA4 DB_DATA 5
RANGE $4FA4-$4FA6 DW_DATA 1
RANGE $4FA6-$4FA8 DW_DATA 1
RANGE $4FA8-$4FAA DW_DATA 1
RANGE $4FAA-$4FAC DW_DATA 1
RANGE $4FAC-$4FAE DW_DATA 1
RANGE $4FAE-$4FB0 DW_DATA 1
RANGE $4FB0-$4FB2 DW_DATA 1
RANGE $4FB2-$4FB4 DW_DATA 1
RANGE $4FB4-$4FB6 DW_DATA 1
RANGE $4FB6-$4FBB DB_DATA 5
RANGE $4FBB-$4FC0 DB_DATA 5
RANGE $4FC0-$4FC5 DB_DATA 5
RANGE $4FC5-$4FC8 DB_DATA 3
RANGE $4FC8-$4FCD DB_DATA 5
RANGE $4FCD-$4FD2 DB_DATA 5
RANGE $4FD2-$4FD7 DB_DATA 5
RANGE $4FD7-$4FDA DB_DATA 3
RANGE $4FDA-$4FDF DB_DATA 5
RANGE $4FDF-$4FE4 DB_DATA 5
RANGE $4FE4-$4FE9 DB_DATA 5
RANGE $4FE9-$4FEC DB_DATA 3
RANGE $4FEC-$4FF1 DB_DATA 5
RANGE $4FF1-$4FF6 DB_DATA 5
RANGE $4FF6-$4FFB DB_DATA 5
RANGE $4FFB-$4FFE DB_DATA 3
RANGE $4FFE-$5003 DB_DATA 5
RANGE $5003-$5008 DB_DATA 5
RANGE $5008-$500D DB_DATA 5
RANGE $500D-$5010 DB_DATA 3
RANGE $5010-$5015 DB_DATA 5
RANGE $5015-$501A DB_DATA 5
RANGE $501A-$501F DB_DATA 5
RANGE $501F-$5022 DB_DATA 3
RANGE $5022-$5027 DB_DATA 5
RANGE $5027-$502C DB_DATA 5
RANGE $502C-$5031 DB_DATA 5
RANGE $5031-$5034 DB_DATA 3
RANGE $5034-$5039 DB_DATA 5
RANGE $5039-$503E DB_DATA 5
RANGE $503E-$5043 DB_DATA 5
RANGE $5043-$5046 DB_DATA 3
RANGE $5046-$504B DB_DATA 5
RANGE $504B-$5050 DB_DATA 5
RANGE $5050-$5055 DB_DATA 5
RANGE $5055-$505A DB_DATA 5
RANGE $505A-$505D DB_DATA 3
RANGE $505D-$5062 DB_DATA 5
RANGE $5062-$5067 DB_DATA 5
RANGE $5067-$506C DB_DATA 5
RANGE $506C-$506F DB_DATA 3
RANGE $506F-$5074 DB_DATA 5
RANGE $5074-$5079 DB_DATA 5
RANGE $5079-$507E DB_DATA 5
RANGE $507E-$5081 DB_DATA 3
RANGE $5081-$5086 DB_DATA 5
RANGE $5086-$508B DB_DATA 5
RANGE $508B-$5090 DB_DATA 5
RANGE $5090-$5093 DB_DATA 3
RANGE $5093-$5098 DB_DATA 5
RANGE $5098-$509D DB_DATA 5
RANGE $509D-$50A2 DB_DATA 5
RANGE $50A2-$50A5 DB_DATA 3
RANGE $50A5-$50AA DB_DATA 5
RANGE $50AA-$50AF DB_DATA 5
RANGE $50AF-$50B4 DB_DATA 5
RANGE $50B4-$50B7 DB_DATA 3
RANGE $50B7-$50BC DB_DATA 5
RANGE $50BC-$50C1 DB_DATA 5
RANGE $50C1-$50C6 DB_DATA 5
RANGE $50C6-$50C9 DB_DATA 3
RANGE $50C9-$50CE DB_DATA 5
RANGE $50CE-$50D3 DB_DATA 5
RANGE $50D3-$50D8 DB_DATA 5
RANGE $50D8-$50DB DB_DATA 3
RANGE $50DB-$50E0 DB_DATA 5
RANGE $50E0-$50E5 DB_DATA 5
RANGE $50E5-$50EA DB_DATA 5
RANGE $50EA-$50EF DB_DATA 5
RANGE $50EF-$50F2 DB_DATA 3
RANGE $50F2-$50F7 DB_DATA 5
RANGE $50F7-$50FC DB_DATA 5
RANGE $50FC-$5101 DB_DATA 5
RANGE $5101-$5104 DB_DATA 3
RANGE $5104-$5109 DB_DATA 5
RANGE $5109-$510E DB_DATA 5
RANGE $510E-$5113 DB_DATA 5
RANGE $5113-$5116 DB_DATA 3
RANGE $5116-$511B DB_DATA 5
RANGE $511B-$5120 DB_DATA 5
RANGE $5120-$5125 DB_DATA 5
RANGE $5125-$5128 DB_DATA 3
RANGE $5128-$512D DB_DATA 5
RANGE $512D-$5132 DB_DATA 5
RANGE $5132-$5137 DB_DATA 5
RANGE $5137-$513A DB_DATA 3
RANGE $513A-$513F DB_DATA 5
RANGE $513F-$5144 DB_DATA 5
RANGE $5144-$5149 DB_DATA 5
RANGE $5149-$514C DB_DATA 3
RANGE $514C-$5151 DB_DATA 5
RANGE $5151-$5156 DB_DATA 5
RANGE $5156-$515B DB_DATA 5
RANGE $515B-$515E DB_DATA 3
RANGE $515E-$5163 DB_DATA 5
RANGE $5163-$5168 DB_DATA 5
RANGE $5168-$516D DB_DATA 5
RANGE $516D-$5170 DB_DATA 3
RANGE $5170-$5175 DB_DATA 5
RANGE $5175-$517A DB_DATA 5
RANGE $517A-$517F DB_DATA 5
RANGE $517F-$5184 DB_DATA 5
RANGE $5184-$5187 DB_DATA 3
RANGE $5187-$518C DB_DATA 5
RANGE $518C-$5191 DB_DATA 5
RANGE $5191-$5196 DB_DATA 5
RANGE $5196-$5199 DB_DATA 3
RANGE $5199-$519E DB_DATA 5
RANGE $519E-$51A3 DB_DATA 5
RANGE $51A3-$51A8 DB_DATA 5
RANGE $51A8-$51AB DB_DATA 3
RANGE $51AB-$51B0 DB_DATA 5
RANGE $51B0-$51B5 DB_DATA 5
RANGE $51B5-$51BA DB_DATA 5
RANGE $51BA-$51BD DB_DATA 3
RANGE $51BD-$51C2 DB_DATA 5
RANGE $51C2-$51C7 DB_DATA 5
RANGE $51C7-$51CC DB_DATA 5
RANGE $51CC-$51CF DB_DATA 3
RANGE $51CF-$51D4 DB_DATA 5
RANGE $51D4-$51D9 DB_DATA 5
RANGE $51D9-$51DE DB_DATA 5
RANGE $51DE-$51E1 DB_DATA 3
RANGE $51E1-$51E6 DB_DATA 5
RANGE $51E6-$51EB DB_DATA 5
RANGE $51EB-$51F0 DB_DATA 5
RANGE $51F0-$51F3 DB_DATA 3
RANGE $51F3-$51F8 DB_DATA 5
RANGE $51F8-$51FD DB_DATA 5
RANGE $51FD-$5202 DB_DATA 5
RANGE $5202-$5205 DB_DATA 3
RANGE $5205-$520A DB_DATA 5
RANGE $520A-$520F DB_DATA 5
RANGE $520F-$5214 DB_DATA 5
RANGE $5214-$5219 DB_DATA 5
RANGE $5219-$521C DB_DATA 3
RANGE $521C-$5221 DB_DATA 5
RANGE $5221-$5226 DB_DATA 5
RANGE $5226-$522B DB_DATA 5
RANGE $522B-$522E DB_DATA 3
RANGE $522E-$5233 DB_DATA 5
RANGE $5233-$5238 DB_DATA 5
RANGE $5238-$523D DB_DATA 5
RANGE $523D-$5240 DB_DATA 3
RANGE $5240-$5245 DB_DATA 5
RANGE $5245-$524A DB_DATA 5
RANGE $524A-$524F DB_DATA 5
RANGE $524F-$5252 DB_DATA 3
RANGE $5252-$5257 DB_DATA 5
RANGE $5257-$525C DB_DATA 5
RANGE $525C-$5261 DB_DATA 5
RANGE $5261-$5264 DB_DATA 3
RANGE $5264-$5269 DB_DATA 5
RANGE $5269-$526E DB_DATA 5
RANGE $526E-$5273 DB_DATA 5
RANGE $5273-$5276 DB_DATA 3
RANGE $5276-$527B DB_DATA 5
RANGE $527B-$5280 DB_DATA 5
RANGE $5280-$5285 DB_DATA 5
RANGE $5285-$5288 DB_DATA 3
RANGE $5288-$528D DB_DATA 5
RANGE $528D-$5292 DB_DATA 5
RANGE $5292-$5297 DB_DATA 5
RANGE $5297-$529A DB_DATA 3
RANGE $529A-$529F DB_DATA 5
RANGE $529F-$52A4 DB_DATA 5
RANGE $52A4-$52A9 DB_DATA 5
RANGE $52A9-$52AE DB_DATA 5
RANGE $52AE-$52B1 DB_DATA 3
RANGE $52B1-$52B6 DB_DATA 5
RANGE $52B6-$52BB DB_DATA 5
RANGE $52BB-$52C0 DB_DATA 5
RANGE $52C0-$52C3 DB_DATA 3
RANGE $52C3-$52C8 DB_DATA 5
RANGE $52C8-$52CD DB_DATA 5
RANGE $52CD-$52D2 DB_DATA 5
RANGE $52D2-$52D5 DB_DATA 3
RANGE $52D5-$52DA DB_DATA 5
RANGE $52DA-$52DF DB_DATA 5
RANGE $52DF-$52E4 DB_DATA 5
RANGE $52E4-$52E7 DB_DATA 3
RANGE $52E7-$52EC DB_DATA 5
RANGE $52EC-$52F1 DB_DATA 5
RANGE $52F1-$52F6 DB_DATA 5
RANGE $52F6-$52F9 DB_DATA 3
RANGE $52F9-$52FE DB_DATA 5
RANGE $52FE-$5303 DB_DATA 5
RANGE $5303-$5308 DB_DATA 5
RANGE $5308-$530B DB_DATA 3
RANGE $530B-$5310 DB_DATA 5
RANGE $5310-$5315 DB_DATA 5
RANGE $5315-$531A DB_DATA 5
RANGE $531A-$531D DB_DATA 3
RANGE $531D-$5322 DB_DATA 5
RANGE $5322-$5327 DB_DATA 5
RANGE $5327-$532C DB_DATA 5
RANGE $532C-$532F DB_DATA 3
RANGE $532F-$5334 DB_DATA 5
RANGE $5334-$5339 DB_DATA 5
RANGE $5339-$533E DB_DATA 5
RANGE $533E-$5343 DB_DATA 5
RANGE $5343-$5346 DB_DATA 3
RANGE $5346-$534B DB_DATA 5
RANGE $534B-$5350 DB_DATA 5
RANGE $5350-$5355 DB_DATA 5
RANGE $5355-$5358 DB_DATA 3
RANGE $5358-$535D DB_DATA 5
RANGE $535D-$5362 DB_DATA 5
RANGE $5362-$5367 DB_DATA 5
RANGE $5367-$536A DB_DATA 3
RANGE $536A-$536F DB_DATA 5
RANGE $536F-$5374 DB_DATA 5
RANGE $5374-$5379 DB_DATA 5
RANGE $5379-$537C DB_DATA 3
RANGE $537C-$5381 DB_DATA 5
RANGE $5381-$5386 DB_DATA 5
RANGE $5386-$538B DB_DATA 5
RANGE $538B-$538E DB_DATA 3
RANGE $538E-$5393 DB_DATA 5
RANGE $5393-$5398 DB_DATA 5
RANGE $5398-$539D DB_DATA 5
RANGE $539D-$53A0 DB_DATA 3
RANGE $53A0-$53A5 DB_DATA 5
RANGE $53A5-$53AA DB_DATA 5
RANGE $53AA-$53AF DB_DATA 5
RANGE $53AF-$53B2 DB_DATA 3
RANGE $53B2-$53B7 DB_DATA 5
RANGE $53B7-$53BC DB_DATA 5
RANGE $53BC-$53C1 DB_DATA 5
RANGE $53C1-$53C4 DB_DATA 3
RANGE $53C4-$53C9 DB_DATA 5
RANGE $53C9-$53CE DB_DATA 5
RANGE $53CE-$53D3 DB_DATA 5
RANGE $53D3-$53D8 DB_DATA 5
RANGE $53D8-$53DB DB_DATA 3
RANGE $53DB-$53E0 DB_DATA 5
RANGE $53E0-$53E5 DB_DATA 5
RANGE $53E5-$53EA DB_DATA 5
RANGE $53EA-$53ED DB_DATA 3
RANGE $53ED-$53F2 DB_DATA 5
RANGE $53F2-$53F7 DB_DATA 5
RANGE $53F7-$53FC DB_DATA 5
RANGE $53FC-$53FF DB_DATA 3
RANGE $53FF-$5404 DB_DATA 5
RANGE $5404-$5409 DB_DATA 5
RANGE $5409-$540E DB_DATA 5
RANGE $540E-$5411 DB_DATA 3
RANGE $5411-$5416 DB_DATA 5
RANGE $5416-$541B DB_DATA 5
RANGE $541B-$5420 DB_DATA 5
RANGE $5420-$5423 DB_DATA 3
RANGE $5423-$5428 DB_DATA 5
RANGE $5428-$542D DB_DATA 5
RANGE $542D-$5432 DB_DATA 5
RANGE $5432-$5435 DB_DATA 3
RANGE $5435-$543A DB_DATA 5
RANGE $543A-$543F DB_DATA 5
RANGE $543F-$5444 DB_DATA 5
RANGE $5444-$5447 DB_DATA 3
RANGE $5447-$544C DB_DATA 5
RANGE $544C-$5451 DB_DATA 5
RANGE $5451-$5456 DB_DATA 5
RANGE $5456-$5459 DB_DATA 3
RANGE $5459-$545E DB_DATA 5
RANGE $545E-$5599 CODE
RANGE $5599-$559B DW_DATA 1
RANGE $559B-$559D DW_DATA 1
RANGE $559D-$559F DW_DATA 1
RANGE $559F-$55A1 DW_DATA 1
RANGE $55A1-$55A3 DW_DATA 1
RANGE $55A3-$55A5 DW_DATA 1
RANGE $55A5-$560D CODE
RANGE $560D-$560F DW_DATA 1
RANGE $560F-$5611 DW_DATA 1
RANGE $5611-$5613 DW_DATA 1
RANGE $5613-$5615 DW_DATA 1
RANGE $5615-$5617 DW_DATA 1
RANGE $5617-$5619 DW_DATA 1
RANGE $5619-$561B DW_DATA 1
RANGE $561B-$561D DW_DATA 1
RANGE $561D-$561F DW_DATA 1
RANGE $561F-$5621 DW_DATA 1
RANGE $5621-$5623 DW_DATA 1
RANGE $5623-$5625 DW_DATA 1
RANGE $5625-$5627 DW_DATA 1
RANGE $5627-$5629 DW_DATA 1
RANGE $5629-$562B DW_DATA 1
RANGE $562B-$562D DW_DATA 1
RANGE $562D-$562F DW_DATA 1
RANGE $562F-$5631 DW_DATA 1
RANGE $5631-$5633 DW_DATA 1
RANGE $5633-$5635 DW_DATA 1
RANGE $5635-$5637 DW_DATA 1
RANGE $5637-$5639 DW_DATA 1
RANGE $5639-$563B DW_DATA 1
RANGE $563B-$563D DW_DATA 1
RANGE $563D-$563F DW_DATA 1
RANGE $563F-$5641 DW_DATA 1
RANGE $5641-$5643 DW_DATA 1
RANGE $5643-$5645 DW_DATA 1
RANGE $5645-$5647 DW_DATA 1
RANGE $5647-$5649 DW_DATA 1
RANGE $5649-$564B DW_DATA 1
RANGE $564B-$564D DW_DATA 1
RANGE $564D-$564F DW_DATA 1
RANGE $564F-$5651 DW_DATA 1
RANGE $5651-$5653 DW_DATA 1
RANGE $5653-$5655 DW_DATA 1
RANGE $5655-$5657 DW_DATA 1
RANGE $5657-$5659 DW_DATA 1
RANGE $5659-$565B DW_DATA 1
RANGE $565B-$565D DW_DATA 1
RANGE $565D-$565F DW_DATA 1
RANGE $565F-$5661 DW_DATA 1
RANGE $5661-$5663 DW_DATA 1
RANGE $5663-$5665 DW_DATA 1
RANGE $5665-$5667 DW_DATA 1
RANGE $5667-$5669 DW_DATA 1
RANGE $5669-$566B DW_DATA 1
RANGE $566B-$566D DW_DATA 1
RANGE $566D-$566F DW_DATA 1
RANGE $566F-$5671 DW_DATA 1
RANGE $5671-$5673 DW_DATA 1
RANGE $5673-$5675 DW_DATA 1
RANGE $5675-$5677 DW_DATA 1
RANGE $5677-$5679 DW_DATA 1
RANGE $5679-$567B DW_DATA 1
RANGE $567B-$567D DW_DATA 1
RANGE $567D-$567F DW_DATA 1
RANGE $567F-$5681 DW_DATA 1
RANGE $5681-$5683 DW_DATA 1
RANGE $5683-$5685 DW_DATA 1
RANGE $5685-$5687 DW_DATA 1
RANGE $5687-$5689 DW_DATA 1
RANGE $5689-$568B DW_DATA 1
RANGE $568B-$568D DW_DATA 1
RANGE $568D-$568F DW_DATA 1
RANGE $568F-$5691 DW_DATA 1
RANGE $5691-$5693 DW_DATA 1
RANGE $5693-$5695 DW_DATA 1
RANGE $5695-$5697 DW_DATA 1
RANGE $5697-$5699 DW_DATA 1
RANGE $5699-$569B DW_DATA 1
RANGE $569B-$569D DW_DATA 1
RANGE $569D-$569F DW_DATA 1
RANGE $569F-$56A1 DW_DATA 1
RANGE $56A1-$56A3 DW_DATA 1
RANGE $56A3-$61F2 CODE
RANGE $61F2-$61F7 DB_DATA 5
RANGE $61F7-$61FC DB_DATA 5
RANGE $61FC-$6201 DB_DATA 5
RANGE $6201-$6206 DB_DATA 5
RANGE $6206-$6209 DB_DATA 3
RANGE $6209-$620C DB_DATA 3
RANGE $620C-$6211 DB_DATA 5
RANGE $6211-$6216 DB_DATA 5
RANGE $6216-$621B DB_DATA 5
RANGE $621B-$6220 DB_DATA 5
RANGE $6220-$6225 DB_DATA 5
RANGE $6225-$622A DB_DATA 5
RANGE $622A-$622F DB_DATA 5
RANGE $622F-$6234 DB_DATA 5
RANGE $6234-$6239 DB_DATA 5
RANGE $6239-$623E DB_DATA 5
RANGE $623E-$6243 DB_DATA 5
RANGE $6243-$6248 DB_DATA 5
RANGE $6248-$624D DB_DATA 5
RANGE $624D-$6252 DB_DATA 5
RANGE $6252-$6257 DB_DATA 5
RANGE $6257-$625A DB_DATA 3
RANGE $625A-$625D DB_DATA 3
RANGE $625D-$6262 DB_DATA 5
RANGE $6262-$6267 DB_DATA 5
RANGE $6267-$626C DB_DATA 5
RANGE $626C-$626F DB_DATA 3
RANGE $626F-$6272 DB_DATA 3
RANGE $6272-$6277 DB_DATA 5
RANGE $6277-$627C DB_DATA 5
RANGE $627C-$6281 DB_DATA 5
RANGE $6281-$6284 DB_DATA 3
RANGE $6284-$6287 DB_DATA 3
RANGE $6287-$628C DB_DATA 5
RANGE $628C-$6291 DB_DATA 5
RANGE $6291-$6296 DB_DATA 5
RANGE $6296-$6299 DB_DATA 3
RANGE $6299-$629C DB_DATA 3
RANGE $629C-$62A1 DB_DATA 5
RANGE $62A1-$62A6 DB_DATA 5
RANGE $62A6-$62AB DB_DATA 5
RANGE $62AB-$62B0 DB_DATA 5
RANGE $62B0-$62B5 DB_DATA 5
RANGE $62B5-$62BA DB_DATA 5
RANGE $62BA-$62BF DB_DATA 5
RANGE $62BF-$62C4 DB_DATA 5
RANGE $62C4-$62C9 DB_DATA 5
RANGE $62C9-$62CE DB_DATA 5
RANGE $62CE-$62D3 DB_DATA 5
RANGE $62D3-$62D6 DB_DATA 3
RANGE $62D6-$62D9 DB_DATA 3
RANGE $62D9-$62DE DB_DATA 5
RANGE $62DE-$62E3 DB_DATA 5
RANGE $62E3-$62E8 DB_DATA 5
RANGE $62E8-$62EB DB_DATA 3
RANGE $62EB-$62EE DB_DATA 3
RANGE $62EE-$62F3 DB_DATA 5
RANGE $62F3-$62F8 DB_DATA 5
RANGE $62F8-$62FD DB_DATA 5
RANGE $62FD-$6300 DB_DATA 3
RANGE $6300-$6303 DB_DATA 3
RANGE $6303-$6308 DB_DATA 5
RANGE $6308-$630D DB_DATA 5
RANGE $630D-$6312 DB_DATA 5
RANGE $6312-$6315 DB_DATA 3
RANGE $6315-$6318 DB_DATA 3
RANGE $6318-$631D DB_DATA 5
RANGE $631D-$6322 DB_DATA 5
RANGE $6322-$6327 DB_DATA 5
RANGE $6327-$632A DB_DATA 3
RANGE $632A-$632D DB_DATA 3
RANGE $632D-$6332 DB_DATA 5
RANGE $6332-$6337 DB_DATA 5
RANGE $6337-$633C DB_DATA 5
RANGE $633C-$633F DB_DATA 3
RANGE $633F-$6342 DB_DATA 3
RANGE $6342-$6347 DB_DATA 5
RANGE $6347-$634C DB_DATA 5
RANGE $634C-$6351 DB_DATA 5
RANGE $6351-$6354 DB_DATA 3
RANGE $6354-$6357 DB_DATA 3
RANGE $6357-$635C DB_DATA 5
RANGE $635C-$6361 DB_DATA 5
RANGE $6361-$6364 DB_DATA 3
RANGE $6364-$6367 DB_DATA 3
RANGE $6367-$636C DB_DATA 5
RANGE $636C-$6371 DB_DATA 5
RANGE $6371-$6376 DB_DATA 5
RANGE $6376-$6379 DB_DATA 3
RANGE $6379-$637C DB_DATA 3
RANGE $637C-$6381 DB_DATA 5
RANGE $6381-$6386 DB_DATA 5
RANGE $6386-$638B DB_DATA 5
RANGE $638B-$638E DB_DATA 3
RANGE $638E-$6391 DB_DATA 3
RANGE $6391-$6396 DB_DATA 5
RANGE $6396-$639B DB_DATA 5
RANGE $639B-$63A0 DB_DATA 5
RANGE $63A0-$63A3 DB_DATA 3
RANGE $63A3-$63A6 DB_DATA 3
RANGE $63A6-$63AB DB_DATA 5
RANGE $63AB-$63B0 DB_DATA 5
RANGE $63B0-$63B5 DB_DATA 5
RANGE $63B5-$63B8 DB_DATA 3
RANGE $63B8-$63BB DB_DATA 3
RANGE $63BB-$63C0 DB_DATA 5
RANGE $63C0-$63C5 DB_DATA 5
RANGE $63C5-$63CA DB_DATA 5
RANGE $63CA-$63CD DB_DATA 3
RANGE $63CD-$63D0 DB_DATA 3
RANGE $63D0-$63D5 DB_DATA 5
RANGE $63D5-$63DA DB_DATA 5
RANGE $63DA-$63DF DB_DATA 5
RANGE $63DF-$63E2 DB_DATA 3
RANGE $63E2-$63E5 DB_DATA 3
RANGE $63E5-$63EA DB_DATA 5
RANGE $63EA-$63EF DB_DATA 5
RANGE $63EF-$63F4 DB_DATA 5
RANGE $63F4-$63F7 DB_DATA 3
RANGE $63F7-$63FA DB_DATA 3
RANGE $63FA-$63FF DB_DATA 5
RANGE $63FF-$6404 DB_DATA 5
RANGE $6404-$6409 DB_DATA 5
RANGE $6409-$640C DB_DATA 3
RANGE $640C-$640F DB_DATA 3
RANGE $640F-$6414 DB_DATA 5
RANGE $6414-$6419 DB_DATA 5
RANGE $6419-$641E DB_DATA 5
RANGE $641E-$6421 DB_DATA 3
RANGE $6421-$6424 DB_DATA 3
RANGE $6424-$6429 DB_DATA 5
RANGE $6429-$642E DB_DATA 5
RANGE $642E-$6433 DB_DATA 5
RANGE $6433-$6436 DB_DATA 3
RANGE $6436-$6439 DB_DATA 3
RANGE $6439-$643E DB_DATA 5
RANGE $643E-$6443 DB_DATA 5
RANGE $6443-$6448 DB_DATA 5
RANGE $6448-$644B DB_DATA 3
RANGE $644B-$644E DB_DATA 3
RANGE $644E-$6453 DB_DATA 5
RANGE $6453-$6458 DB_DATA 5
RANGE $6458-$645D DB_DATA 5
RANGE $645D-$6462 DB_DATA 5
RANGE $6462-$6467 DB_DATA 5
RANGE $6467-$646C DB_DATA 5
RANGE $646C-$6471 DB_DATA 5
RANGE $6471-$6476 DB_DATA 5
RANGE $6476-$647B DB_DATA 5
RANGE $647B-$6480 DB_DATA 5
RANGE $6480-$6485 DB_DATA 5
RANGE $6485-$648A DB_DATA 5
RANGE $648A-$648F DB_DATA 5
RANGE $648F-$6494 DB_DATA 5
RANGE $6494-$6499 DB_DATA 5
RANGE $6499-$649E DB_DATA 5
RANGE $649E-$64A3 DB_DATA 5
RANGE $64A3-$64A8 DB_DATA 5
RANGE $64A8-$64AB DB_DATA 3
RANGE $64AB-$64AE DB_DATA 3
RANGE $64AE-$64B3 DB_DATA 5
RANGE $64B3-$64B8 DB_DATA 5
RANGE $64B8-$64BD DB_DATA 5
RANGE $64BD-$64C0 DB_DATA 3
RANGE $64C0-$64C3 DB_DATA 3
RANGE $64C3-$64C8 DB_DATA 5
RANGE $64C8-$64CD DB_DATA 5
RANGE $64CD-$64D2 DB_DATA 5
RANGE $64D2-$64D5 DB_DATA 3
RANGE $64D5-$64D8 DB_DATA 3
RANGE $64D8-$64DB DB_DATA 3
RANGE $64DB-$64DE DB_DATA 3
RANGE $64DE-$64E1 DB_DATA 3
RANGE $64E1-$64E4 DB_DATA 3
RANGE $64E4-$64E9 DB_DATA 5
RANGE $64E9-$64EE DB_DATA 5
RANGE $64EE-$64F3 DB_DATA 5
RANGE $64F3-$64F6 DB_DATA 3
RANGE $64F6-$64F9 DB_DATA 3
RANGE $64F9-$64FC DB_DATA 3
RANGE $64FC-$64FF DB_DATA 3
RANGE $64FF-$6502 DB_DATA 3
RANGE $6502-$6505 DB_DATA 3
RANGE $6505-$650A DB_DATA 5
RANGE $650A-$650F DB_DATA 5
RANGE $650F-$6514 DB_DATA 5
RANGE $6514-$6517 DB_DATA 3
RANGE $6517-$651A DB_DATA 3
RANGE $651A-$651D DB_DATA 3
RANGE $651D-$6520 DB_DATA 3
RANGE $6520-$6523 DB_DATA 3
RANGE $6523-$6526 DB_DATA 3
RANGE $6526-$652B DB_DATA 5
RANGE $652B-$6530 DB_DATA 5
RANGE $6530-$6535 DB_DATA 5
RANGE $6535-$6538 DB_DATA 3
RANGE $6538-$653B DB_DATA 3
RANGE $653B-$653E DB_DATA 3
RANGE $653E-$6541 DB_DATA 3
RANGE $6541-$6544 DB_DATA 3
RANGE $6544-$6547 DB_DATA 3
RANGE $6547-$654C DB_DATA 5
RANGE $654C-$6551 DB_DATA 5
RANGE $6551-$6556 DB_DATA 5
RANGE $6556-$6559 DB_DATA 3
RANGE $6559-$655C DB_DATA 3
RANGE $655C-$655F DB_DATA 3
RANGE $655F-$6562 DB_DATA 3
RANGE $6562-$6565 DB_DATA 3
RANGE $6565-$6568 DB_DATA 3
RANGE $6568-$656D DB_DATA 5
RANGE $656D-$6572 DB_DATA 5
RANGE $6572-$6577 DB_DATA 5
RANGE $6577-$657A DB_DATA 3
RANGE $657A-$657D DB_DATA 3
RANGE $657D-$6580 DB_DATA 3
RANGE $6580-$6583 DB_DATA 3
RANGE $6583-$6586 DB_DATA 3
RANGE $6586-$6589 DB_DATA 3
RANGE $6589-$658E DB_DATA 5
RANGE $658E-$6593 DB_DATA 5
RANGE $6593-$6598 DB_DATA 5
RANGE $6598-$659B DB_DATA 3
RANGE $659B-$659E DB_DATA 3
RANGE $659E-$65A1 DB_DATA 3
RANGE $65A1-$65A4 DB_DATA 3
RANGE $65A4-$65A7 DB_DATA 3
RANGE $65A7-$65AA DB_DATA 3
RANGE $65AA-$65AF DB_DATA 5
RANGE $65AF-$65B4 DB_DATA 5
RANGE $65B4-$65B9 DB_DATA 5
RANGE $65B9-$65BC DB_DATA 3
RANGE $65BC-$65BF DB_DATA 3
RANGE $65BF-$65C2 DB_DATA 3
RANGE $65C2-$65C5 DB_DATA 3
RANGE $65C5-$65C8 DB_DATA 3
RANGE $65C8-$65CB DB_DATA 3
RANGE $65CB-$65D0 DB_DATA 5
RANGE $65D0-$65D5 DB_DATA 5
RANGE $65D5-$65DA DB_DATA 5
RANGE $65DA-$65DD DB_DATA 3
RANGE $65DD-$65E0 DB_DATA 3
RANGE $65E0-$65E3 DB_DATA 3
RANGE $65E3-$65E6 DB_DATA 3
RANGE $65E6-$65E9 DB_DATA 3
RANGE $65E9-$65EC DB_DATA 3
RANGE $65EC-$65F1 DB_DATA 5
RANGE $65F1-$65F6 DB_DATA 5
RANGE $65F6-$65FB DB_DATA 5
RANGE $65FB-$6600 DB_DATA 5
RANGE $6600-$6605 DB_DATA 5
RANGE $6605-$660A DB_DATA 5
RANGE $660A-$660F DB_DATA 5
RANGE $660F-$6614 DB_DATA 5
RANGE $6614-$6619 DB_DATA 5
RANGE $6619-$661E DB_DATA 5
RANGE $661E-$6623 DB_DATA 5
RANGE $6623-$6628 DB_DATA 5
RANGE $6628-$662D DB_DATA 5
RANGE $662D-$6632 DB_DATA 5
RANGE $6632-$6637 DB_DATA 5
RANGE $6637-$663C DB_DATA 5
RANGE $663C-$6641 DB_DATA 5
RANGE $6641-$6646 DB_DATA 5
RANGE $6646-$664B DB_DATA 5
RANGE $664B-$6650 DB_DATA 5
RANGE $6650-$6655 DB_DATA 5
RANGE $6655-$665A DB_DATA 5
RANGE $665A-$665F DB_DATA 5
RANGE $665F-$6664 DB_DATA 5
RANGE $6664-$6669 DB_DATA 5
RANGE $6669-$666E DB_DATA 5
RANGE $666E-$6673 DB_DATA 5
RANGE $6673-$6678 DB_DATA 5
RANGE $6678-$667D DB_DATA 5
RANGE $667D-$6682 DB_DATA 5
RANGE $6682-$6687 DB_DATA 5
RANGE $6687-$668C DB_DATA 5
RANGE $668C-$6691 DB_DATA 5
RANGE $6691-$6696 DB_DATA 5
RANGE $6696-$669B DB_DATA 5
RANGE $669B-$66A0 DB_DATA 5
RANGE $66A0-$66A2 DW_DATA 1
RANGE $66A2-$66A4 DW_DATA 1
RANGE $66A4-$66A9 DB_DATA 5
RANGE $66A9-$66AE DB_DATA 5
RANGE $66AE-$66B3 DB_DATA 5
RANGE $66B3-$66B6 DB_DATA 3
RANGE $66B6-$66BD DB_DATA 7
RANGE $66BD-$66BF DW_DATA 1
RANGE $66BF-$66C1 DW_DATA 1
RANGE $66C1-$66C6 DB_DATA 5
RANGE $66C6-$66CB DB_DATA 5
RANGE $66CB-$66D0 DB_DATA 5
RANGE $66D0-$66D5 DB_DATA 5
RANGE $66D5-$66DA DB_DATA 5
RANGE $66DA-$66E1 DB_DATA 7
RANGE $66E1-$66E3 DW_DATA 1
RANGE $66E3-$66E5 DW_DATA 1
RANGE $66E5-$66EA DB_DATA 5
RANGE $66EA-$66EF DB_DATA 5
RANGE $66EF-$66F4 DB_DATA 5
RANGE $66F4-$66F9 DB_DATA 5
RANGE $66F9-$66FE DB_DATA 5
RANGE $66FE-$6703 DB_DATA 5
RANGE $6703-$670A DB_DATA 7
RANGE $670A-$670C DW_DATA 1
RANGE $670C-$670D DB_DATA 1
RANGE $670D-$670F DW_DATA 1
RANGE $670F-$6711 DW_DATA 1
RANGE $6711-$6713 DW_DATA 1
RANGE $6713-$6715 DW_DATA 1
RANGE $6715-$6717 DW_DATA 1
RANGE $6717-$6719 DW_DATA 1
RANGE $6719-$671B DW_DATA 1
RANGE $671B-$671D DW_DATA 1
RANGE $671D-$671F DW_DATA 1
RANGE $671F-$6721 DW_DATA 1
RANGE $6721-$6723 DW_DATA 1
RANGE $6723-$6725 DW_DATA 1
RANGE $6725-$6727 DW_DATA 1
RANGE $6727-$6729 DW_DATA 1
RANGE $6729-$672B DW_DATA 1
RANGE $672B-$672D DW_DATA 1
RANGE $672D-$672F DW_DATA 1
RANGE $672F-$6734 DB_DATA 5
RANGE $6734-$6739 DB_DATA 5
RANGE $6739-$673C DB_DATA 3
RANGE $673C-$673F DB_DATA 3
RANGE $673F-$6742 DB_DATA 3
RANGE $6742-$6745 DB_DATA 3
RANGE $6745-$6748 DB_DATA 3
RANGE $6748-$674B DB_DATA 3
RANGE $674B-$6750 DB_DATA 5
RANGE $6750-$6753 DB_DATA 3
RANGE $6753-$675A DB_DATA 7
RANGE $675A-$675F DB_DATA 5
RANGE $675F-$6764 DB_DATA 5
RANGE $6764-$6767 DB_DATA 3
RANGE $6767-$676A DB_DATA 3
RANGE $676A-$676D DB_DATA 3
RANGE $676D-$6770 DB_DATA 3
RANGE $6770-$6773 DB_DATA 3
RANGE $6773-$6776 DB_DATA 3
RANGE $6776-$677B DB_DATA 5
RANGE $677B-$677E DB_DATA 3
RANGE $677E-$6785 DB_DATA 7
RANGE $6785-$678A DB_DATA 5
RANGE $678A-$678F DB_DATA 5
RANGE $678F-$6792 DB_DATA 3
RANGE $6792-$6795 DB_DATA 3
RANGE $6795-$6798 DB_DATA 3
RANGE $6798-$679B DB_DATA 3
RANGE $679B-$679E DB_DATA 3
RANGE $679E-$67A1 DB_DATA 3
RANGE $67A1-$67A6 DB_DATA 5
RANGE $67A6-$67A9 DB_DATA 3
RANGE $67A9-$67B0 DB_DATA 7
RANGE $67B0-$67B5 DB_DATA 5
RANGE $67B5-$67BA DB_DATA 5
RANGE $67BA-$67BD DB_DATA 3
RANGE $67BD-$67C0 DB_DATA 3
RANGE $67C0-$67C3 DB_DATA 3
RANGE $67C3-$67C6 DB_DATA 3
RANGE $67C6-$67C9 DB_DATA 3
RANGE $67C9-$67CC DB_DATA 3
RANGE $67CC-$67D1 DB_DATA 5
RANGE $67D1-$67D4 DB_DATA 3
RANGE $67D4-$67DB DB_DATA 7
RANGE $67DB-$67E0 DB_DATA 5
RANGE $67E0-$67E5 DB_DATA 5
RANGE $67E5-$67E8 DB_DATA 3
RANGE $67E8-$67EB DB_DATA 3
RANGE $67EB-$67EE DB_DATA 3
RANGE $67EE-$67F1 DB_DATA 3
RANGE $67F1-$67F4 DB_DATA 3
RANGE $67F4-$67F7 DB_DATA 3
RANGE $67F7-$67FC DB_DATA 5
RANGE $67FC-$67FF DB_DATA 3
RANGE $67FF-$6806 DB_DATA 7
RANGE $6806-$680B DB_DATA 5
RANGE $680B-$6810 DB_DATA 5
RANGE $6810-$6813 DB_DATA 3
RANGE $6813-$6816 DB_DATA 3
RANGE $6816-$6819 DB_DATA 3
RANGE $6819-$681C DB_DATA 3
RANGE $681C-$681F DB_DATA 3
RANGE $681F-$6822 DB_DATA 3
RANGE $6822-$6827 DB_DATA 5
RANGE $6827-$682A DB_DATA 3
RANGE $682A-$6831 DB_DATA 7
RANGE $6831-$6836 DB_DATA 5
RANGE $6836-$683B DB_DATA 5
RANGE $683B-$683E DB_DATA 3
RANGE $683E-$6841 DB_DATA 3
RANGE $6841-$6844 DB_DATA 3
RANGE $6844-$6847 DB_DATA 3
RANGE $6847-$684A DB_DATA 3
RANGE $684A-$684D DB_DATA 3
RANGE $684D-$6852 DB_DATA 5
RANGE $6852-$6855 DB_DATA 3
RANGE $6855-$685C DB_DATA 7
RANGE $685C-$6861 DB_DATA 5
RANGE $6861-$6866 DB_DATA 5
RANGE $6866-$6869 DB_DATA 3
RANGE $6869-$686C DB_DATA 3
RANGE $686C-$686F DB_DATA 3
RANGE $686F-$6872 DB_DATA 3
RANGE $6872-$6875 DB_DATA 3
RANGE $6875-$6878 DB_DATA 3
RANGE $6878-$687D DB_DATA 5
RANGE $687D-$6880 DB_DATA 3
RANGE $6880-$6887 DB_DATA 7
RANGE $6887-$688C DB_DATA 5
RANGE $688C-$6891 DB_DATA 5
RANGE $6891-$6894 DB_DATA 3
RANGE $6894-$6897 DB_DATA 3
RANGE $6897-$689A DB_DATA 3
RANGE $689A-$689D DB_DATA 3
RANGE $689D-$68A0 DB_DATA 3
RANGE $68A0-$68A3 DB_DATA 3
RANGE $68A3-$68A8 DB_DATA 5
RANGE $68A8-$68AB DB_DATA 3
RANGE $68AB-$68B2 DB_DATA 7
RANGE $68B2-$68B4 DW_DATA 1
RANGE $68B4-$68B6 DW_DATA 1
RANGE $68B6-$68BB DB_DATA 5
RANGE $68BB-$68C0 DB_DATA 5
RANGE $68C0-$68C5 DB_DATA 5
RANGE $68C5-$68C8 DB_DATA 3
RANGE $68C8-$68CB DB_DATA 3
RANGE $68CB-$68D0 DB_DATA 5
RANGE $68D0-$68D5 DB_DATA 5
RANGE $68D5-$68DA DB_DATA 5
RANGE $68DA-$68DC DW_DATA 1
RANGE $68DC-$68DE DW_DATA 1
RANGE $68DE-$68E3 DB_DATA 5
RANGE $68E3-$68E8 DB_DATA 5
RANGE $68E8-$68ED DB_DATA 5
RANGE $68ED-$68F0 DB_DATA 3
RANGE $68F0-$68F3 DB_DATA 3
RANGE $68F3-$68F6 DB_DATA 3
RANGE $68F6-$68FB DB_DATA 5
RANGE $68FB-$6900 DB_DATA 5
RANGE $6900-$6905 DB_DATA 5
RANGE $6905-$6908 DB_DATA 3
RANGE $6908-$690D DB_DATA 5
RANGE $690D-$6912 DB_DATA 5
RANGE $6912-$6917 DB_DATA 5
RANGE $6917-$691A DB_DATA 3
RANGE $691A-$691D DB_DATA 3
RANGE $691D-$6920 DB_DATA 3
RANGE $6920-$6923 DB_DATA 3
RANGE $6923-$6926 DB_DATA 3
RANGE $6926-$6929 DB_DATA 3
RANGE $6929-$6930 DB_DATA 7
RANGE $6930-$6932 DW_DATA 1
RANGE $6932-$6934 DW_DATA 1
RANGE $6934-$6939 DB_DATA 5
RANGE $6939-$693E DB_DATA 5
RANGE $693E-$6943 DB_DATA 5
RANGE $6943-$6946 DB_DATA 3
RANGE $6946-$6949 DB_DATA 3
RANGE $6949-$694C DB_DATA 3
RANGE $694C-$694F DB_DATA 3
RANGE $694F-$6952 DB_DATA 3
RANGE $6952-$6955 DB_DATA 3
RANGE $6955-$695A DB_DATA 5
RANGE $695A-$6961 DB_DATA 7
RANGE $6961-$6963 DW_DATA 1
RANGE $6963-$6965 DW_DATA 1
RANGE $6965-$696A DB_DATA 5
RANGE $696A-$696F DB_DATA 5
RANGE $696F-$6974 DB_DATA 5
RANGE $6974-$6977 DB_DATA 3
RANGE $6977-$697A DB_DATA 3
RANGE $697A-$697D DB_DATA 3
RANGE $697D-$6980 DB_DATA 3
RANGE $6980-$6983 DB_DATA 3
RANGE $6983-$6986 DB_DATA 3
RANGE $6986-$698B DB_DATA 5
RANGE $698B-$698E DB_DATA 3
RANGE $698E-$6991 DB_DATA 3
RANGE $6991-$6994 DB_DATA 3
RANGE $6994-$6997 DB_DATA 3
RANGE $6997-$699A DB_DATA 3
RANGE $699A-$699D DB_DATA 3
RANGE $699D-$69A2 DB_DATA 5
RANGE $69A2-$69A5 DB_DATA 3
RANGE $69A5-$69A8 DB_DATA 3
RANGE $69A8-$69AB DB_DATA 3
RANGE $69AB-$69AE DB_DATA 3
RANGE $69AE-$69B3 DB_DATA 5
RANGE $69B3-$69B8 DB_DATA 5
RANGE $69B8-$69BD DB_DATA 5
RANGE $69BD-$69C2 DB_DATA 5
RANGE $69C2-$69C7 DB_DATA 5
RANGE $69C7-$69CC DB_DATA 5
RANGE $69CC-$69CF DB_DATA 3
RANGE $69CF-$69D2 DB_DATA 3
RANGE $69D2-$69D7 DB_DATA 5
RANGE $69D7-$69DC DB_DATA 5
RANGE $69DC-$69E1 DB_DATA 5
RANGE $69E1-$69E6 DB_DATA 5
RANGE $69E6-$69E8 DW_DATA 1
RANGE $69E8-$69EA DW_DATA 1
RANGE $69EA-$69EF DB_DATA 5
RANGE $69EF-$69F4 DB_DATA 5
RANGE $69F4-$69F9 DB_DATA 5
RANGE $69F9-$69FE DB_DATA 5
RANGE $69FE-$6A03 DB_DATA 5
RANGE $6A03-$6A06 DB_DATA 3
RANGE $6A06-$6A09 DB_DATA 3
RANGE $6A09-$6A0C DB_DATA 3
RANGE $6A0C-$6A0F DB_DATA 3
RANGE $6A0F-$6A12 DB_DATA 3
RANGE $6A12-$6A15 DB_DATA 3
RANGE $6A15-$6A1A DB_DATA 5
RANGE $6A1A-$6A1F DB_DATA 5
RANGE $6A1F-$6A24 DB_DATA 5
RANGE $6A24-$6A27 DB_DATA 3
RANGE $6A27-$6A2A DB_DATA 3
RANGE $6A2A-$6A2D DB_DATA 3
RANGE $6A2D-$6A30 DB_DATA 3
RANGE $6A30-$6A35 DB_DATA 5
RANGE $6A35-$6A37 DW_DATA 1
RANGE $6A37-$6A38 DB_DATA 1
RANGE $6A38-$6A3A DW_DATA 1
RANGE $6A3A-$6A3B DB_DATA 1
RANGE $6A3B-$6A3D DW_DATA 1
RANGE $6A3D-$6A3E DB_DATA 1
RANGE $6A3E-$6A40 DW_DATA 1
RANGE $6A40-$6A41 DB_DATA 1
RANGE $6A41-$6A43 DW_DATA 1
RANGE $6A43-$6A44 DB_DATA 1
RANGE $6A44-$6A46 DW_DATA 1
RANGE $6A46-$6A48 DW_DATA 1
RANGE $6A48-$6A4A DW_DATA 1
RANGE $6A4A-$6A4C DW_DATA 1
RANGE $6A4C-$6A4E DW_DATA 1
RANGE $6A4E-$6A50 DW_DATA 1
RANGE $6A50-$6A52 DW_DATA 1
RANGE $6A52-$6A54 DW_DATA 1
RANGE $6A54-$6A56 DW_DATA 1
RANGE $6A56-$6A58 DW_DATA 1
RANGE $6A58-$6A5A DW_DATA 1
RANGE $6A5A-$6A5C DW_DATA 1
RANGE $6A5C-$6A5E DW_DATA 1
RANGE $6A5E-$6A60 DW_DATA 1
RANGE $6A60-$6A62 DW_DATA 1
RANGE $6A62-$6A64 DW_DATA 1
RANGE $6A64-$6A66 DW_DATA 1
RANGE $6A66-$6A6B DB_DATA 5
RANGE $6A6B-$6A70 DB_DATA 5
RANGE $6A70-$6A75 DB_DATA 5
RANGE $6A75-$6A7A DB_DATA 5
RANGE $6A7A-$6A7F DB_DATA 5
RANGE $6A7F-$6A86 DB_DATA 7
RANGE $6A86-$6A8B DB_DATA 5
RANGE $6A8B-$6A90 DB_DATA 5
RANGE $6A90-$6A95 DB_DATA 5
RANGE $6A95-$6A9A DB_DATA 5
RANGE $6A9A-$6A9F DB_DATA 5
RANGE $6A9F-$6AA6 DB_DATA 7
RANGE $6AA6-$6AAB DB_DATA 5
RANGE $6AAB-$6AB0 DB_DATA 5
RANGE $6AB0-$6AB5 DB_DATA 5
RANGE $6AB5-$6ABA DB_DATA 5
RANGE $6ABA-$6ABF DB_DATA 5
RANGE $6ABF-$6AC6 DB_DATA 7
RANGE $6AC6-$6ACB DB_DATA 5
RANGE $6ACB-$6AD0 DB_DATA 5
RANGE $6AD0-$6AD5 DB_DATA 5
RANGE $6AD5-$6ADA DB_DATA 5
RANGE $6ADA-$6ADF DB_DATA 5
RANGE $6ADF-$6AE6 DB_DATA 7
RANGE $6AE6-$6AEB DB_DATA 5
RANGE $6AEB-$6AF0 DB_DATA 5
RANGE $6AF0-$6AF5 DB_DATA 5
RANGE $6AF5-$6AFA DB_DATA 5
RANGE $6AFA-$6B01 DB_DATA 7
RANGE $6B01-$6B06 DB_DATA 5
RANGE $6B06-$6B0B DB_DATA 5
RANGE $6B0B-$6B10 DB_DATA 5
RANGE $6B10-$6B15 DB_DATA 5
RANGE $6B15-$6B1A DB_DATA 5
RANGE $6B1A-$6B21 DB_DATA 7
RANGE $6B21-$6B26 DB_DATA 5
RANGE $6B26-$6B2B DB_DATA 5
RANGE $6B2B-$6B30 DB_DATA 5
RANGE $6B30-$6B35 DB_DATA 5
RANGE $6B35-$6B3A DB_DATA 5
RANGE $6B3A-$6B41 DB_DATA 7
RANGE $6B41-$6B46 DB_DATA 5
RANGE $6B46-$6B4B DB_DATA 5
RANGE $6B4B-$6B50 DB_DATA 5
RANGE $6B50-$6B55 DB_DATA 5
RANGE $6B55-$6B5A DB_DATA 5
RANGE $6B5A-$6B61 DB_DATA 7
RANGE $6B61-$6B66 DB_DATA 5
RANGE $6B66-$6B6B DB_DATA 5
RANGE $6B6B-$6B70 DB_DATA 5
RANGE $6B70-$6B75 DB_DATA 5
RANGE $6B75-$6B7A DB_DATA 5
RANGE $6B7A-$6B81 DB_DATA 7
RANGE $6B81-$6B83 DW_DATA 1
RANGE $6B83-$6B85 DW_DATA 1
RANGE $6B85-$6B87 DW_DATA 1
RANGE $6B87-$6B89 DW_DATA 1
RANGE $6B89-$6B8B DW_DATA 1
RANGE $6B8B-$6B8D DW_DATA 1
RANGE $6B8D-$6B8F DW_DATA 1
RANGE $6B8F-$6B91 DW_DATA 1
RANGE $6B91-$6B93 DW_DATA 1
RANGE $6B93-$6B95 DW_DATA 1
RANGE $6B95-$6B97 DW_DATA 1
RANGE $6B97-$6B99 DW_DATA 1
RANGE $6B99-$6B9B DW_DATA 1
RANGE $6B9B-$6B9D DW_DATA 1
RANGE $6B9D-$6B9F DW_DATA 1
RANGE $6B9F-$6BA1 DW_DATA 1
RANGE $6BA1-$6BA3 DW_DATA 1
RANGE $6BA3-$6BA8 DB_DATA 5
RANGE $6BA8-$6BAD DB_DATA 5
RANGE $6BAD-$6BB2 DB_DATA 5
RANGE $6BB2-$6BB5 DB_DATA 3
RANGE $6BB5-$6BB8 DB_DATA 3
RANGE $6BB8-$6BBF DB_DATA 7
RANGE $6BBF-$6BC4 DB_DATA 5
RANGE $6BC4-$6BC9 DB_DATA 5
RANGE $6BC9-$6BCE DB_DATA 5
RANGE $6BCE-$6BD1 DB_DATA 3
RANGE $6BD1-$6BD4 DB_DATA 3
RANGE $6BD4-$6BDB DB_DATA 7
RANGE $6BDB-$6BE0 DB_DATA 5
RANGE $6BE0-$6BE5 DB_DATA 5
RANGE $6BE5-$6BEA DB_DATA 5
RANGE $6BEA-$6BED DB_DATA 3
RANGE $6BED-$6BF0 DB_DATA 3
RANGE $6BF0-$6BF7 DB_DATA 7
RANGE $6BF7-$6BFC DB_DATA 5
RANGE $6BFC-$6C01 DB_DATA 5
RANGE $6C01-$6C06 DB_DATA 5
RANGE $6C06-$6C09 DB_DATA 3
RANGE $6C09-$6C0C DB_DATA 3
RANGE $6C0C-$6C13 DB_DATA 7
RANGE $6C13-$6C18 DB_DATA 5
RANGE $6C18-$6C1D DB_DATA 5
RANGE $6C1D-$6C22 DB_DATA 5
RANGE $6C22-$6C25 DB_DATA 3
RANGE $6C25-$6C2C DB_DATA 7
RANGE $6C2C-$6C31 DB_DATA 5
RANGE $6C31-$6C36 DB_DATA 5
RANGE $6C36-$6C3B DB_DATA 5
RANGE $6C3B-$6C3E DB_DATA 3
RANGE $6C3E-$6C41 DB_DATA 3
RANGE $6C41-$6C48 DB_DATA 7
RANGE $6C48-$6C4D DB_DATA 5
RANGE $6C4D-$6C52 DB_DATA 5
RANGE $6C52-$6C57 DB_DATA 5
RANGE $6C57-$6C5A DB_DATA 3
RANGE $6C5A-$6C5D DB_DATA 3
RANGE $6C5D-$6C64 DB_DATA 7
RANGE $6C64-$6C69 DB_DATA 5
RANGE $6C69-$6C6E DB_DATA 5
RANGE $6C6E-$6C73 DB_DATA 5
RANGE $6C73-$6C76 DB_DATA 3
RANGE $6C76-$6C79 DB_DATA 3
RANGE $6C79-$6C80 DB_DATA 7
RANGE $6C80-$6C85 DB_DATA 5
RANGE $6C85-$6C8A DB_DATA 5
RANGE $6C8A-$6C8F DB_DATA 5
RANGE $6C8F-$6C92 DB_DATA 3
RANGE $6C92-$6C95 DB_DATA 3
RANGE $6C95-$6C9C DB_DATA 7
RANGE $6C9C-$6C9E DW_DATA 1
RANGE $6C9E-$6CA0 DW_DATA 1
RANGE $6CA0-$6CA2 DW_DATA 1
RANGE $6CA2-$6CA4 DW_DATA 1
RANGE $6CA4-$6CA6 DW_DATA 1
RANGE $6CA6-$6CA8 DW_DATA 1
RANGE $6CA8-$6CAA DW_DATA 1
RANGE $6CAA-$6CAC DW_DATA 1
RANGE $6CAC-$6CAE DW_DATA 1
RANGE $6CAE-$6CB0 DW_DATA 1
RANGE $6CB0-$6CB2 DW_DATA 1
RANGE $6CB2-$6CB4 DW_DATA 1
RANGE $6CB4-$6CB6 DW_DATA 1
RANGE $6CB6-$6CB8 DW_DATA 1
RANGE $6CB8-$6CBA DW_DATA 1
RANGE $6CBA-$6CBC DW_DATA 1
RANGE $6CBC-$6CBE DW_DATA 1
RANGE $6CBE-$6CC3 DB_DATA 5
RANGE $6CC3-$6CC8 DB_DATA 5
RANGE $6CC8-$6CCD DB_DATA 5
RANGE $6CCD-$6CD2 DB_DATA 5
RANGE $6CD2-$6CD9 DB_DATA 7
RANGE $6CD9-$6CDE DB_DATA 5
RANGE $6CDE-$6CE3 DB_DATA 5
RANGE $6CE3-$6CE8 DB_DATA 5
RANGE $6CE8-$6CED DB_DATA 5
RANGE $6CED-$6CF4 DB_DATA 7
RANGE $6CF4-$6CF9 DB_DATA 5
RANGE $6CF9-$6CFE DB_DATA 5
RANGE $6CFE-$6D03 DB_DATA 5
RANGE $6D03-$6D08 DB_DATA 5
RANGE $6D08-$6D0F DB_DATA 7
RANGE $6D0F-$6D14 DB_DATA 5
RANGE $6D14-$6D19 DB_DATA 5
RANGE $6D19-$6D1E DB_DATA 5
RANGE $6D1E-$6D23 DB_DATA 5
RANGE $6D23-$6D2A DB_DATA 7
RANGE $6D2A-$6D2F DB_DATA 5
RANGE $6D2F-$6D34 DB_DATA 5
RANGE $6D34-$6D39 DB_DATA 5
RANGE $6D39-$6D40 DB_DATA 7
RANGE $6D40-$6D45 DB_DATA 5
RANGE $6D45-$6D4A DB_DATA 5
RANGE $6D4A-$6D4F DB_DATA 5
RANGE $6D4F-$6D54 DB_DATA 5
RANGE $6D54-$6D5B DB_DATA 7
RANGE $6D5B-$6D60 DB_DATA 5
RANGE $6D60-$6D65 DB_DATA 5
RANGE $6D65-$6D6A DB_DATA 5
RANGE $6D6A-$6D6F DB_DATA 5
RANGE $6D6F-$6D76 DB_DATA 7
RANGE $6D76-$6D7B DB_DATA 5
RANGE $6D7B-$6D80 DB_DATA 5
RANGE $6D80-$6D85 DB_DATA 5
RANGE $6D85-$6D8A DB_DATA 5
RANGE $6D8A-$6D91 DB_DATA 7
RANGE $6D91-$6D96 DB_DATA 5
RANGE $6D96-$6D9B DB_DATA 5
RANGE $6D9B-$6DA0 DB_DATA 5
RANGE $6DA0-$6DA5 DB_DATA 5
RANGE $6DA5-$6DAC DB_DATA 7
RANGE $6DAC-$6DAE DW_DATA 1
RANGE $6DAE-$6DB0 DW_DATA 1
RANGE $6DB0-$6DB2 DW_DATA 1
RANGE $6DB2-$6DB4 DW_DATA 1
RANGE $6DB4-$6DB6 DW_DATA 1
RANGE $6DB6-$6DB8 DW_DATA 1
RANGE $6DB8-$6DBA DW_DATA 1
RANGE $6DBA-$6DBC DW_DATA 1
RANGE $6DBC-$6DBE DW_DATA 1
RANGE $6DBE-$6DC0 DW_DATA 1
RANGE $6DC0-$6DC2 DW_DATA 1
RANGE $6DC2-$6DC4 DW_DATA 1
RANGE $6DC4-$6DC6 DW_DATA 1
RANGE $6DC6-$6DC8 DW_DATA 1
RANGE $6DC8-$6DCA DW_DATA 1
RANGE $6DCA-$6DCC DW_DATA 1
RANGE $6DCC-$6DCE DW_DATA 1
RANGE $6DCE-$6DD3 DB_DATA 5
RANGE $6DD3-$6DD8 DB_DATA 5
RANGE $6DD8-$6DDD DB_DATA 5
RANGE $6DDD-$6DE2 DB_DATA 5
RANGE $6DE2-$6DE9 DB_DATA 7
RANGE $6DE9-$6DEE DB_DATA 5
RANGE $6DEE-$6DF3 DB_DATA 5
RANGE $6DF3-$6DF8 DB_DATA 5
RANGE $6DF8-$6DFD DB_DATA 5
RANGE $6DFD-$6E04 DB_DATA 7
RANGE $6E04-$6E09 DB_DATA 5
RANGE $6E09-$6E0E DB_DATA 5
RANGE $6E0E-$6E13 DB_DATA 5
RANGE $6E13-$6E18 DB_DATA 5
RANGE $6E18-$6E1F DB_DATA 7
RANGE $6E1F-$6E24 DB_DATA 5
RANGE $6E24-$6E29 DB_DATA 5
RANGE $6E29-$6E2E DB_DATA 5
RANGE $6E2E-$6E33 DB_DATA 5
RANGE $6E33-$6E3A DB_DATA 7
RANGE $6E3A-$6E3F DB_DATA 5
RANGE $6E3F-$6E44 DB_DATA 5
RANGE $6E44-$6E49 DB_DATA 5
RANGE $6E49-$6E4E DB_DATA 5
RANGE $6E4E-$6E55 DB_DATA 7
RANGE $6E55-$6E5A DB_DATA 5
RANGE $6E5A-$6E5F DB_DATA 5
RANGE $6E5F-$6E64 DB_DATA 5
RANGE $6E64-$6E69 DB_DATA 5
RANGE $6E69-$6E70 DB_DATA 7
RANGE $6E70-$6E75 DB_DATA 5
RANGE $6E75-$6E7A DB_DATA 5
RANGE $6E7A-$6E7F DB_DATA 5
RANGE $6E7F-$6E84 DB_DATA 5
RANGE $6E84-$6E8B DB_DATA 7
RANGE $6E8B-$6E90 DB_DATA 5
RANGE $6E90-$6E95 DB_DATA 5
RANGE $6E95-$6E9A DB_DATA 5
RANGE $6E9A-$6E9F DB_DATA 5
RANGE $6E9F-$6EA6 DB_DATA 7
RANGE $6EA6-$6EAB DB_DATA 5
RANGE $6EAB-$6EB0 DB_DATA 5
RANGE $6EB0-$6EB5 DB_DATA 5
RANGE $6EB5-$6EBA DB_DATA 5
RANGE $6EBA-$6EC1 DB_DATA 7
RANGE $6EC1-$6EC3 DW_DATA 1
RANGE $6EC3-$6EC5 DW_DATA 1
RANGE $6EC5-$6EC7 DW_DATA 1
RANGE $6EC7-$6EC9 DW_DATA 1
RANGE $6EC9-$6ECB DW_DATA 1
RANGE $6ECB-$6ECD DW_DATA 1
RANGE $6ECD-$6ECF DW_DATA 1
RANGE $6ECF-$6ED1 DW_DATA 1
RANGE $6ED1-$6ED3 DW_DATA 1
RANGE $6ED3-$6ED5 DW_DATA 1
RANGE $6ED5-$6ED7 DW_DATA 1
RANGE $6ED7-$6ED9 DW_DATA 1
RANGE $6ED9-$6EDB DW_DATA 1
RANGE $6EDB-$6EDD DW_DATA 1
RANGE $6EDD-$6EDF DW_DATA 1
RANGE $6EDF-$6EE1 DW_DATA 1
RANGE $6EE1-$6EE3 DW_DATA 1
RANGE $6EE3-$6EE8 DB_DATA 5
RANGE $6EE8-$6EED DB_DATA 5
RANGE $6EED-$6EF2 DB_DATA 5
RANGE $6EF2-$6EF5 DB_DATA 3
RANGE $6EF5-$6EFA DB_DATA 5
RANGE $6EFA-$6EFF DB_DATA 5
RANGE $6EFF-$6F06 DB_DATA 7
RANGE $6F06-$6F0B DB_DATA 5
RANGE $6F0B-$6F10 DB_DATA 5
RANGE $6F10-$6F15 DB_DATA 5
RANGE $6F15-$6F18 DB_DATA 3
RANGE $6F18-$6F1D DB_DATA 5
RANGE $6F1D-$6F22 DB_DATA 5
RANGE $6F22-$6F29 DB_DATA 7
RANGE $6F29-$6F2E DB_DATA 5
RANGE $6F2E-$6F33 DB_DATA 5
RANGE $6F33-$6F38 DB_DATA 5
RANGE $6F38-$6F3B DB_DATA 3
RANGE $6F3B-$6F40 DB_DATA 5
RANGE $6F40-$6F45 DB_DATA 5
RANGE $6F45-$6F4C DB_DATA 7
RANGE $6F4C-$6F51 DB_DATA 5
RANGE $6F51-$6F56 DB_DATA 5
RANGE $6F56-$6F5B DB_DATA 5
RANGE $6F5B-$6F5E DB_DATA 3
RANGE $6F5E-$6F63 DB_DATA 5
RANGE $6F63-$6F68 DB_DATA 5
RANGE $6F68-$6F6F DB_DATA 7
RANGE $6F6F-$6F74 DB_DATA 5
RANGE $6F74-$6F79 DB_DATA 5
RANGE $6F79-$6F7E DB_DATA 5
RANGE $6F7E-$6F83 DB_DATA 5
RANGE $6F83-$6F88 DB_DATA 5
RANGE $6F88-$6F8F DB_DATA 7
RANGE $6F8F-$6F94 DB_DATA 5
RANGE $6F94-$6F99 DB_DATA 5
RANGE $6F99-$6F9E DB_DATA 5
RANGE $6F9E-$6FA1 DB_DATA 3
RANGE $6FA1-$6FA6 DB_DATA 5
RANGE $6FA6-$6FAB DB_DATA 5
RANGE $6FAB-$6FB2 DB_DATA 7
RANGE $6FB2-$6FB7 DB_DATA 5
RANGE $6FB7-$6FBC DB_DATA 5
RANGE $6FBC-$6FC1 DB_DATA 5
RANGE $6FC1-$6FC4 DB_DATA 3
RANGE $6FC4-$6FC9 DB_DATA 5
RANGE $6FC9-$6FCE DB_DATA 5
RANGE $6FCE-$6FD5 DB_DATA 7
RANGE $6FD5-$6FDA DB_DATA 5
RANGE $6FDA-$6FDF DB_DATA 5
RANGE $6FDF-$6FE4 DB_DATA 5
RANGE $6FE4-$6FE7 DB_DATA 3
RANGE $6FE7-$6FEC DB_DATA 5
RANGE $6FEC-$6FF1 DB_DATA 5
RANGE $6FF1-$6FF8 DB_DATA 7
RANGE $6FF8-$6FFD DB_DATA 5
RANGE $6FFD-$7002 DB_DATA 5
RANGE $7002-$7007 DB_DATA 5
RANGE $7007-$700A DB_DATA 3
RANGE $700A-$700F DB_DATA 5
RANGE $700F-$7014 DB_DATA 5
RANGE $7014-$701B DB_DATA 7
RANGE $701B-$701D DW_DATA 1
RANGE $701D-$701E DB_DATA 1
RANGE $701E-$7020 DW_DATA 1
RANGE $7020-$7021 DB_DATA 1
RANGE $7021-$7023 DW_DATA 1
RANGE $7023-$7024 DB_DATA 1
RANGE $7024-$7026 DW_DATA 1
RANGE $7026-$7027 DB_DATA 1
RANGE $7027-$7029 DW_DATA 1
RANGE $7029-$702B DW_DATA 1
RANGE $702B-$702D DW_DATA 1
RANGE $702D-$702F DW_DATA 1
RANGE $702F-$7031 DW_DATA 1
RANGE $7031-$7033 DW_DATA 1
RANGE $7033-$7035 DW_DATA 1
RANGE $7035-$7037 DW_DATA 1
RANGE $7037-$7039 DW_DATA 1
RANGE $7039-$703E DB_DATA 5
RANGE $703E-$7043 DB_DATA 5
RANGE $7043-$7048 DB_DATA 5
RANGE $7048-$704B DB_DATA 3
RANGE $704B-$704E DB_DATA 3
RANGE $704E-$7051 DB_DATA 3
RANGE $7051-$7058 DB_DATA 7
RANGE $7058-$705D DB_DATA 5
RANGE $705D-$7062 DB_DATA 5
RANGE $7062-$7067 DB_DATA 5
RANGE $7067-$706A DB_DATA 3
RANGE $706A-$706D DB_DATA 3
RANGE $706D-$7070 DB_DATA 3
RANGE $7070-$7077 DB_DATA 7
RANGE $7077-$707C DB_DATA 5
RANGE $707C-$7081 DB_DATA 5
RANGE $7081-$7086 DB_DATA 5
RANGE $7086-$7089 DB_DATA 3
RANGE $7089-$708C DB_DATA 3
RANGE $708C-$708F DB_DATA 3
RANGE $708F-$7096 DB_DATA 7
RANGE $7096-$709B DB_DATA 5
RANGE $709B-$70A0 DB_DATA 5
RANGE $70A0-$70A5 DB_DATA 5
RANGE $70A5-$70A8 DB_DATA 3
RANGE $70A8-$70AB DB_DATA 3
RANGE $70AB-$70AE DB_DATA 3
RANGE $70AE-$70B5 DB_DATA 7
RANGE $70B5-$70BA DB_DATA 5
RANGE $70BA-$70BF DB_DATA 5
RANGE $70BF-$70C4 DB_DATA 5
RANGE $70C4-$70C7 DB_DATA 3
RANGE $70C7-$70CA DB_DATA 3
RANGE $70CA-$70CD DB_DATA 3
RANGE $70CD-$70D4 DB_DATA 7
RANGE $70D4-$70D9 DB_DATA 5
RANGE $70D9-$70DE DB_DATA 5
RANGE $70DE-$70E3 DB_DATA 5
RANGE $70E3-$70E6 DB_DATA 3
RANGE $70E6-$70E9 DB_DATA 3
RANGE $70E9-$70EC DB_DATA 3
RANGE $70EC-$70F3 DB_DATA 7
RANGE $70F3-$70F8 DB_DATA 5
RANGE $70F8-$70FD DB_DATA 5
RANGE $70FD-$7102 DB_DATA 5
RANGE $7102-$7105 DB_DATA 3
RANGE $7105-$7108 DB_DATA 3
RANGE $7108-$710B DB_DATA 3
RANGE $710B-$7112 DB_DATA 7
RANGE $7112-$7117 DB_DATA 5
RANGE $7117-$711C DB_DATA 5
RANGE $711C-$7121 DB_DATA 5
RANGE $7121-$7124 DB_DATA 3
RANGE $7124-$7127 DB_DATA 3
RANGE $7127-$712A DB_DATA 3
RANGE $712A-$7131 DB_DATA 7
RANGE $7131-$7133 DW_DATA 1
RANGE $7133-$7135 DW_DATA 1
RANGE $7135-$7137 DW_DATA 1
RANGE $7137-$7139 DW_DATA 1
RANGE $7139-$713B DW_DATA 1
RANGE $713B-$713D DW_DATA 1
RANGE $713D-$713F DW_DATA 1
RANGE $713F-$7141 DW_DATA 1
RANGE $7141-$7143 DW_DATA 1
RANGE $7143-$7145 DW_DATA 1
RANGE $7145-$7147 DW_DATA 1
RANGE $7147-$7149 DW_DATA 1
RANGE $7149-$714B DW_DATA 1
RANGE $714B-$714D DW_DATA 1
RANGE $714D-$714F DW_DATA 1
RANGE $714F-$7151 DW_DATA 1
RANGE $7151-$7153 DW_DATA 1
RANGE $7153-$7158 DB_DATA 5
RANGE $7158-$715D DB_DATA 5
RANGE $715D-$7162 DB_DATA 5
RANGE $7162-$7165 DB_DATA 3
RANGE $7165-$7168 DB_DATA 3
RANGE $7168-$716B DB_DATA 3
RANGE $716B-$7170 DB_DATA 5
RANGE $7170-$7175 DB_DATA 5
RANGE $7175-$717A DB_DATA 5
RANGE $717A-$717D DB_DATA 3
RANGE $717D-$7180 DB_DATA 3
RANGE $7180-$7187 DB_DATA 7
RANGE $7187-$718C DB_DATA 5
RANGE $718C-$7191 DB_DATA 5
RANGE $7191-$7196 DB_DATA 5
RANGE $7196-$7199 DB_DATA 3
RANGE $7199-$719C DB_DATA 3
RANGE $719C-$719F DB_DATA 3
RANGE $719F-$71A4 DB_DATA 5
RANGE $71A4-$71A9 DB_DATA 5
RANGE $71A9-$71AE DB_DATA 5
RANGE $71AE-$71B1 DB_DATA 3
RANGE $71B1-$71B4 DB_DATA 3
RANGE $71B4-$71BB DB_DATA 7
RANGE $71BB-$71C0 DB_DATA 5
RANGE $71C0-$71C5 DB_DATA 5
RANGE $71C5-$71CA DB_DATA 5
RANGE $71CA-$71CD DB_DATA 3
RANGE $71CD-$71D0 DB_DATA 3
RANGE $71D0-$71D3 DB_DATA 3
RANGE $71D3-$71D8 DB_DATA 5
RANGE $71D8-$71DD DB_DATA 5
RANGE $71DD-$71E2 DB_DATA 5
RANGE $71E2-$71E5 DB_DATA 3
RANGE $71E5-$71E8 DB_DATA 3
RANGE $71E8-$71EF DB_DATA 7
RANGE $71EF-$71F4 DB_DATA 5
RANGE $71F4-$71F9 DB_DATA 5
RANGE $71F9-$71FE DB_DATA 5
RANGE $71FE-$7201 DB_DATA 3
RANGE $7201-$7204 DB_DATA 3
RANGE $7204-$7207 DB_DATA 3
RANGE $7207-$720C DB_DATA 5
RANGE $720C-$7211 DB_DATA 5
RANGE $7211-$7216 DB_DATA 5
RANGE $7216-$7219 DB_DATA 3
RANGE $7219-$721C DB_DATA 3
RANGE $721C-$7223 DB_DATA 7
RANGE $7223-$7228 DB_DATA 5
RANGE $7228-$722D DB_DATA 5
RANGE $722D-$7232 DB_DATA 5
RANGE $7232-$7235 DB_DATA 3
RANGE $7235-$7238 DB_DATA 3
RANGE $7238-$723B DB_DATA 3
RANGE $723B-$7240 DB_DATA 5
RANGE $7240-$7245 DB_DATA 5
RANGE $7245-$724A DB_DATA 5
RANGE $724A-$724D DB_DATA 3
RANGE $724D-$7250 DB_DATA 3
RANGE $7250-$7257 DB_DATA 7
RANGE $7257-$725C DB_DATA 5
RANGE $725C-$7261 DB_DATA 5
RANGE $7261-$7266 DB_DATA 5
RANGE $7266-$7269 DB_DATA 3
RANGE $7269-$726C DB_DATA 3
RANGE $726C-$726F DB_DATA 3
RANGE $726F-$7274 DB_DATA 5
RANGE $7274-$7279 DB_DATA 5
RANGE $7279-$727E DB_DATA 5
RANGE $727E-$7281 DB_DATA 3
RANGE $7281-$7284 DB_DATA 3
RANGE $7284-$728B DB_DATA 7
RANGE $728B-$7290 DB_DATA 5
RANGE $7290-$7295 DB_DATA 5
RANGE $7295-$729A DB_DATA 5
RANGE $729A-$729D DB_DATA 3
RANGE $729D-$72A0 DB_DATA 3
RANGE $72A0-$72A3 DB_DATA 3
RANGE $72A3-$72A8 DB_DATA 5
RANGE $72A8-$72AD DB_DATA 5
RANGE $72AD-$72B2 DB_DATA 5
RANGE $72B2-$72B5 DB_DATA 3
RANGE $72B5-$72B8 DB_DATA 3
RANGE $72B8-$72BF DB_DATA 7
RANGE $72BF-$72C4 DB_DATA 5
RANGE $72C4-$72C9 DB_DATA 5
RANGE $72C9-$72CE DB_DATA 5
RANGE $72CE-$72D1 DB_DATA 3
RANGE $72D1-$72D4 DB_DATA 3
RANGE $72D4-$72D7 DB_DATA 3
RANGE $72D7-$72DC DB_DATA 5
RANGE $72DC-$72E1 DB_DATA 5
RANGE $72E1-$72E6 DB_DATA 5
RANGE $72E6-$72E9 DB_DATA 3
RANGE $72E9-$72EC DB_DATA 3
RANGE $72EC-$72F3 DB_DATA 7
RANGE $72F3-$72F8 DB_DATA 5
RANGE $72F8-$72FD DB_DATA 5
RANGE $72FD-$7302 DB_DATA 5
RANGE $7302-$7305 DB_DATA 3
RANGE $7305-$7308 DB_DATA 3
RANGE $7308-$730B DB_DATA 3
RANGE $730B-$7310 DB_DATA 5
RANGE $7310-$7315 DB_DATA 5
RANGE $7315-$731A DB_DATA 5
RANGE $731A-$731D DB_DATA 3
RANGE $731D-$7320 DB_DATA 3
RANGE $7320-$7327 DB_DATA 7
RANGE $7327-$732C DB_DATA 5
RANGE $732C-$7331 DB_DATA 5
RANGE $7331-$7336 DB_DATA 5
RANGE $7336-$7339 DB_DATA 3
RANGE $7339-$733C DB_DATA 3
RANGE $733C-$733F DB_DATA 3
RANGE $733F-$7344 DB_DATA 5
RANGE $7344-$7349 DB_DATA 5
RANGE $7349-$734E DB_DATA 5
RANGE $734E-$7351 DB_DATA 3
RANGE $7351-$7354 DB_DATA 3
RANGE $7354-$735B DB_DATA 7
RANGE $735B-$7360 DB_DATA 5
RANGE $7360-$7365 DB_DATA 5
RANGE $7365-$736A DB_DATA 5
RANGE $736A-$736D DB_DATA 3
RANGE $736D-$7370 DB_DATA 3
RANGE $7370-$7373 DB_DATA 3
RANGE $7373-$7378 DB_DATA 5
RANGE $7378-$737D DB_DATA 5
RANGE $737D-$7382 DB_DATA 5
RANGE $7382-$7385 DB_DATA 3
RANGE $7385-$7388 DB_DATA 3
RANGE $7388-$738F DB_DATA 7
RANGE $738F-$7394 DB_DATA 5
RANGE $7394-$7399 DB_DATA 5
RANGE $7399-$739E DB_DATA 5
RANGE $739E-$73A1 DB_DATA 3
RANGE $73A1-$73A4 DB_DATA 3
RANGE $73A4-$73A7 DB_DATA 3
RANGE $73A7-$73AC DB_DATA 5
RANGE $73AC-$73B1 DB_DATA 5
RANGE $73B1-$73B6 DB_DATA 5
RANGE $73B6-$73B9 DB_DATA 3
RANGE $73B9-$73BC DB_DATA 3
RANGE $73BC-$73C3 DB_DATA 7
RANGE $73C3-$73C8 DB_DATA 5
RANGE $73C8-$73CD DB_DATA 5
RANGE $73CD-$73D2 DB_DATA 5
RANGE $73D2-$73D5 DB_DATA 3
RANGE $73D5-$73D8 DB_DATA 3
RANGE $73D8-$73DB DB_DATA 3
RANGE $73DB-$73E0 DB_DATA 5
RANGE $73E0-$73E5 DB_DATA 5
RANGE $73E5-$73EA DB_DATA 5
RANGE $73EA-$73ED DB_DATA 3
RANGE $73ED-$73F0 DB_DATA 3
RANGE $73F0-$73F7 DB_DATA 7
RANGE $73F7-$73FC DB_DATA 5
RANGE $73FC-$7401 DB_DATA 5
RANGE $7401-$7406 DB_DATA 5
RANGE $7406-$7409 DB_DATA 3
RANGE $7409-$740C DB_DATA 3
RANGE $740C-$740F DB_DATA 3
RANGE $740F-$7414 DB_DATA 5
RANGE $7414-$7419 DB_DATA 5
RANGE $7419-$741E DB_DATA 5
RANGE $741E-$7421 DB_DATA 3
RANGE $7421-$7424 DB_DATA 3
RANGE $7424-$742B DB_DATA 7
RANGE $742B-$7430 DB_DATA 5
RANGE $7430-$7435 DB_DATA 5
RANGE $7435-$743A DB_DATA 5
RANGE $743A-$743D DB_DATA 3
RANGE $743D-$7440 DB_DATA 3
RANGE $7440-$7443 DB_DATA 3
RANGE $7443-$7448 DB_DATA 5
RANGE $7448-$744D DB_DATA 5
RANGE $744D-$7452 DB_DATA 5
RANGE $7452-$7455 DB_DATA 3
RANGE $7455-$7458 DB_DATA 3
RANGE $7458-$745F DB_DATA 7
RANGE $745F-$7464 DB_DATA 5
RANGE $7464-$7469 DB_DATA 5
RANGE $7469-$746E DB_DATA 5
RANGE $746E-$7471 DB_DATA 3
RANGE $7471-$7474 DB_DATA 3
RANGE $7474-$7477 DB_DATA 3
RANGE $7477-$747C DB_DATA 5
RANGE $747C-$7481 DB_DATA 5
RANGE $7481-$7486 DB_DATA 5
RANGE $7486-$7489 DB_DATA 3
RANGE $7489-$748C DB_DATA 3
RANGE $748C-$7493 DB_DATA 7
RANGE $7493-$7495 DW_DATA 1
RANGE $7495-$7497 DW_DATA 1
RANGE $7497-$7499 DW_DATA 1
RANGE $7499-$749B DW_DATA 1
RANGE $749B-$749D DW_DATA 1
RANGE $749D-$749F DW_DATA 1
RANGE $749F-$74A1 DW_DATA 1
RANGE $74A1-$74A3 DW_DATA 1
RANGE $74A3-$74A5 DW_DATA 1
RANGE $74A5-$74A7 DW_DATA 1
RANGE $74A7-$74A9 DW_DATA 1
RANGE $74A9-$74AB DW_DATA 1
RANGE $74AB-$74AD DW_DATA 1
RANGE $74AD-$74AF DW_DATA 1
RANGE $74AF-$74B1 DW_DATA 1
RANGE $74B1-$74B3 DW_DATA 1
RANGE $74B3-$74B5 DW_DATA 1
RANGE $74B5-$74BA DB_DATA 5
RANGE $74BA-$74BF DB_DATA 5
RANGE $74BF-$74C4 DB_DATA 5
RANGE $74C4-$74C7 DB_DATA 3
RANGE $74C7-$74CA DB_DATA 3
RANGE $74CA-$74CD DB_DATA 3
RANGE $74CD-$74D2 DB_DATA 5
RANGE $74D2-$74D7 DB_DATA 5
RANGE $74D7-$74DC DB_DATA 5
RANGE $74DC-$74DF DB_DATA 3
RANGE $74DF-$74E2 DB_DATA 3
RANGE $74E2-$74E9 DB_DATA 7
RANGE $74E9-$74EE DB_DATA 5
RANGE $74EE-$74F3 DB_DATA 5
RANGE $74F3-$74F8 DB_DATA 5
RANGE $74F8-$74FB DB_DATA 3
RANGE $74FB-$74FE DB_DATA 3
RANGE $74FE-$7501 DB_DATA 3
RANGE $7501-$7506 DB_DATA 5
RANGE $7506-$750B DB_DATA 5
RANGE $750B-$7510 DB_DATA 5
RANGE $7510-$7513 DB_DATA 3
RANGE $7513-$7516 DB_DATA 3
RANGE $7516-$751D DB_DATA 7
RANGE $751D-$7522 DB_DATA 5
RANGE $7522-$7527 DB_DATA 5
RANGE $7527-$752C DB_DATA 5
RANGE $752C-$752F DB_DATA 3
RANGE $752F-$7532 DB_DATA 3
RANGE $7532-$7535 DB_DATA 3
RANGE $7535-$753A DB_DATA 5
RANGE $753A-$753F DB_DATA 5
RANGE $753F-$7544 DB_DATA 5
RANGE $7544-$7547 DB_DATA 3
RANGE $7547-$754A DB_DATA 3
RANGE $754A-$7551 DB_DATA 7
RANGE $7551-$7556 DB_DATA 5
RANGE $7556-$755B DB_DATA 5
RANGE $755B-$7560 DB_DATA 5
RANGE $7560-$7563 DB_DATA 3
RANGE $7563-$7566 DB_DATA 3
RANGE $7566-$7569 DB_DATA 3
RANGE $7569-$756E DB_DATA 5
RANGE $756E-$7573 DB_DATA 5
RANGE $7573-$7578 DB_DATA 5
RANGE $7578-$757B DB_DATA 3
RANGE $757B-$757E DB_DATA 3
RANGE $757E-$7585 DB_DATA 7
RANGE $7585-$758A DB_DATA 5
RANGE $758A-$758F DB_DATA 5
RANGE $758F-$7594 DB_DATA 5
RANGE $7594-$7597 DB_DATA 3
RANGE $7597-$759A DB_DATA 3
RANGE $759A-$759D DB_DATA 3
RANGE $759D-$75A2 DB_DATA 5
RANGE $75A2-$75A7 DB_DATA 5
RANGE $75A7-$75AC DB_DATA 5
RANGE $75AC-$75AF DB_DATA 3
RANGE $75AF-$75B2 DB_DATA 3
RANGE $75B2-$75B9 DB_DATA 7
RANGE $75B9-$75BE DB_DATA 5
RANGE $75BE-$75C3 DB_DATA 5
RANGE $75C3-$75C8 DB_DATA 5
RANGE $75C8-$75CB DB_DATA 3
RANGE $75CB-$75CE DB_DATA 3
RANGE $75CE-$75D1 DB_DATA 3
RANGE $75D1-$75D6 DB_DATA 5
RANGE $75D6-$75DB DB_DATA 5
RANGE $75DB-$75E0 DB_DATA 5
RANGE $75E0-$75E3 DB_DATA 3
RANGE $75E3-$75E6 DB_DATA 3
RANGE $75E6-$75ED DB_DATA 7
RANGE $75ED-$75F2 DB_DATA 5
RANGE $75F2-$75F7 DB_DATA 5
RANGE $75F7-$75FC DB_DATA 5
RANGE $75FC-$75FF DB_DATA 3
RANGE $75FF-$7602 DB_DATA 3
RANGE $7602-$7605 DB_DATA 3
RANGE $7605-$760A DB_DATA 5
RANGE $760A-$760F DB_DATA 5
RANGE $760F-$7614 DB_DATA 5
RANGE $7614-$7617 DB_DATA 3
RANGE $7617-$761A DB_DATA 3
RANGE $761A-$7621 DB_DATA 7
RANGE $7621-$7626 DB_DATA 5
RANGE $7626-$762B DB_DATA 5
RANGE $762B-$7630 DB_DATA 5
RANGE $7630-$7633 DB_DATA 3
RANGE $7633-$7636 DB_DATA 3
RANGE $7636-$7639 DB_DATA 3
RANGE $7639-$763E DB_DATA 5
RANGE $763E-$7643 DB_DATA 5
RANGE $7643-$7648 DB_DATA 5
RANGE $7648-$764B DB_DATA 3
RANGE $764B-$764E DB_DATA 3
RANGE $764E-$7655 DB_DATA 7
RANGE $7655-$765A DB_DATA 5
RANGE $765A-$765F DB_DATA 5
RANGE $765F-$7664 DB_DATA 5
RANGE $7664-$7667 DB_DATA 3
RANGE $7667-$766A DB_DATA 3
RANGE $766A-$766D DB_DATA 3
RANGE $766D-$7672 DB_DATA 5
RANGE $7672-$7677 DB_DATA 5
RANGE $7677-$767C DB_DATA 5
RANGE $767C-$767F DB_DATA 3
RANGE $767F-$7682 DB_DATA 3
RANGE $7682-$7689 DB_DATA 7
RANGE $7689-$768E DB_DATA 5
RANGE $768E-$7693 DB_DATA 5
RANGE $7693-$7698 DB_DATA 5
RANGE $7698-$769B DB_DATA 3
RANGE $769B-$769E DB_DATA 3
RANGE $769E-$76A1 DB_DATA 3
RANGE $76A1-$76A6 DB_DATA 5
RANGE $76A6-$76AB DB_DATA 5
RANGE $76AB-$76B0 DB_DATA 5
RANGE $76B0-$76B3 DB_DATA 3
RANGE $76B3-$76B6 DB_DATA 3
RANGE $76B6-$76BD DB_DATA 7
RANGE $76BD-$76C2 DB_DATA 5
RANGE $76C2-$76C7 DB_DATA 5
RANGE $76C7-$76CC DB_DATA 5
RANGE $76CC-$76CF DB_DATA 3
RANGE $76CF-$76D2 DB_DATA 3
RANGE $76D2-$76D5 DB_DATA 3
RANGE $76D5-$76DA DB_DATA 5
RANGE $76DA-$76DF DB_DATA 5
RANGE $76DF-$76E4 DB_DATA 5
RANGE $76E4-$76E7 DB_DATA 3
RANGE $76E7-$76EA DB_DATA 3
RANGE $76EA-$76F1 DB_DATA 7
RANGE $76F1-$76F6 DB_DATA 5
RANGE $76F6-$76FB DB_DATA 5
RANGE $76FB-$7700 DB_DATA 5
RANGE $7700-$7703 DB_DATA 3
RANGE $7703-$7706 DB_DATA 3
RANGE $7706-$7709 DB_DATA 3
RANGE $7709-$770E DB_DATA 5
RANGE $770E-$7713 DB_DATA 5
RANGE $7713-$7718 DB_DATA 5
RANGE $7718-$771B DB_DATA 3
RANGE $771B-$771E DB_DATA 3
RANGE $771E-$7725 DB_DATA 7
RANGE $7725-$772A DB_DATA 5
RANGE $772A-$772F DB_DATA 5
RANGE $772F-$7734 DB_DATA 5
RANGE $7734-$7737 DB_DATA 3
RANGE $7737-$773A DB_DATA 3
RANGE $773A-$773D DB_DATA 3
RANGE $773D-$7742 DB_DATA 5
RANGE $7742-$7747 DB_DATA 5
RANGE $7747-$774C DB_DATA 5
RANGE $774C-$774F DB_DATA 3
RANGE $774F-$7752 DB_DATA 3
RANGE $7752-$7759 DB_DATA 7
RANGE $7759-$775E DB_DATA 5
RANGE $775E-$7763 DB_DATA 5
RANGE $7763-$7768 DB_DATA 5
RANGE $7768-$776B DB_DATA 3
RANGE $776B-$776E DB_DATA 3
RANGE $776E-$7771 DB_DATA 3
RANGE $7771-$7776 DB_DATA 5
RANGE $7776-$777B DB_DATA 5
RANGE $777B-$7780 DB_DATA 5
RANGE $7780-$7783 DB_DATA 3
RANGE $7783-$7786 DB_DATA 3
RANGE $7786-$778D DB_DATA 7
RANGE $778D-$7792 DB_DATA 5
RANGE $7792-$7797 DB_DATA 5
RANGE $7797-$779C DB_DATA 5
RANGE $779C-$779F DB_DATA 3
RANGE $779F-$77A2 DB_DATA 3
RANGE $77A2-$77A5 DB_DATA 3
RANGE $77A5-$77AA DB_DATA 5
RANGE $77AA-$77AF DB_DATA 5
RANGE $77AF-$77B4 DB_DATA 5
RANGE $77B4-$77B7 DB_DATA 3
RANGE $77B7-$77BA DB_DATA 3
RANGE $77BA-$77C1 DB_DATA 7
RANGE $77C1-$77C6 DB_DATA 5
RANGE $77C6-$77CB DB_DATA 5
RANGE $77CB-$77D0 DB_DATA 5
RANGE $77D0-$77D3 DB_DATA 3
RANGE $77D3-$77D6 DB_DATA 3
RANGE $77D6-$77D9 DB_DATA 3
RANGE $77D9-$77DE DB_DATA 5
RANGE $77DE-$77E3 DB_DATA 5
RANGE $77E3-$77E8 DB_DATA 5
RANGE $77E8-$77EB DB_DATA 3
RANGE $77EB-$77EE DB_DATA 3
RANGE $77EE-$77F5 DB_DATA 7
RANGE $77F5-$77F7 DW_DATA 1
RANGE $77F7-$77F9 DW_DATA 1
RANGE $77F9-$77FB DW_DATA 1
RANGE $77FB-$77FD DW_DATA 1
RANGE $77FD-$77FF DW_DATA 1
RANGE $77FF-$7801 DW_DATA 1
RANGE $7801-$7803 DW_DATA 1
RANGE $7803-$7805 DW_DATA 1
RANGE $7805-$7807 DW_DATA 1
RANGE $7807-$7809 DW_DATA 1
RANGE $7809-$780B DW_DATA 1
RANGE $780B-$780D DW_DATA 1
RANGE $780D-$780F DW_DATA 1
RANGE $780F-$7811 DW_DATA 1
RANGE $7811-$7813 DW_DATA 1
RANGE $7813-$7815 DW_DATA 1
RANGE $7815-$7817 DW_DATA 1
RANGE $7817-$781C DB_DATA 5
RANGE $781C-$7821 DB_DATA 5
RANGE $7821-$7826 DB_DATA 5
RANGE $7826-$7829 DB_DATA 3
RANGE $7829-$782C DB_DATA 3
RANGE $782C-$782F DB_DATA 3
RANGE $782F-$7834 DB_DATA 5
RANGE $7834-$7839 DB_DATA 5
RANGE $7839-$783E DB_DATA 5
RANGE $783E-$7841 DB_DATA 3
RANGE $7841-$7844 DB_DATA 3
RANGE $7844-$7849 DB_DATA 5
RANGE $7849-$784E DB_DATA 5
RANGE $784E-$7853 DB_DATA 5
RANGE $7853-$7856 DB_DATA 3
RANGE $7856-$7859 DB_DATA 3
RANGE $7859-$7860 DB_DATA 7
RANGE $7860-$7865 DB_DATA 5
RANGE $7865-$786A DB_DATA 5
RANGE $786A-$786F DB_DATA 5
RANGE $786F-$7872 DB_DATA 3
RANGE $7872-$7875 DB_DATA 3
RANGE $7875-$7878 DB_DATA 3
RANGE $7878-$787D DB_DATA 5
RANGE $787D-$7882 DB_DATA 5
RANGE $7882-$7887 DB_DATA 5
RANGE $7887-$788A DB_DATA 3
RANGE $788A-$788D DB_DATA 3
RANGE $788D-$7892 DB_DATA 5
RANGE $7892-$7897 DB_DATA 5
RANGE $7897-$789C DB_DATA 5
RANGE $789C-$789F DB_DATA 3
RANGE $789F-$78A2 DB_DATA 3
RANGE $78A2-$78A9 DB_DATA 7
RANGE $78A9-$78AE DB_DATA 5
RANGE $78AE-$78B3 DB_DATA 5
RANGE $78B3-$78B8 DB_DATA 5
RANGE $78B8-$78BB DB_DATA 3
RANGE $78BB-$78BE DB_DATA 3
RANGE $78BE-$78C1 DB_DATA 3
RANGE $78C1-$78C6 DB_DATA 5
RANGE $78C6-$78CB DB_DATA 5
RANGE $78CB-$78D0 DB_DATA 5
RANGE $78D0-$78D3 DB_DATA 3
RANGE $78D3-$78D6 DB_DATA 3
RANGE $78D6-$78DB DB_DATA 5
RANGE $78DB-$78E0 DB_DATA 5
RANGE $78E0-$78E5 DB_DATA 5
RANGE $78E5-$78E8 DB_DATA 3
RANGE $78E8-$78EB DB_DATA 3
RANGE $78EB-$78F2 DB_DATA 7
RANGE $78F2-$78F7 DB_DATA 5
RANGE $78F7-$78FC DB_DATA 5
RANGE $78FC-$7901 DB_DATA 5
RANGE $7901-$7904 DB_DATA 3
RANGE $7904-$7907 DB_DATA 3
RANGE $7907-$790A DB_DATA 3
RANGE $790A-$790F DB_DATA 5
RANGE $790F-$7914 DB_DATA 5
RANGE $7914-$7919 DB_DATA 5
RANGE $7919-$791C DB_DATA 3
RANGE $791C-$791F DB_DATA 3
RANGE $791F-$7924 DB_DATA 5
RANGE $7924-$7929 DB_DATA 5
RANGE $7929-$792E DB_DATA 5
RANGE $792E-$7931 DB_DATA 3
RANGE $7931-$7934 DB_DATA 3
RANGE $7934-$793B DB_DATA 7
RANGE $793B-$7940 DB_DATA 5
RANGE $7940-$7945 DB_DATA 5
RANGE $7945-$794A DB_DATA 5
RANGE $794A-$794D DB_DATA 3
RANGE $794D-$7950 DB_DATA 3
RANGE $7950-$7953 DB_DATA 3
RANGE $7953-$7958 DB_DATA 5
RANGE $7958-$795D DB_DATA 5
RANGE $795D-$7962 DB_DATA 5
RANGE $7962-$7965 DB_DATA 3
RANGE $7965-$7968 DB_DATA 3
RANGE $7968-$796D DB_DATA 5
RANGE $796D-$7972 DB_DATA 5
RANGE $7972-$7977 DB_DATA 5
RANGE $7977-$797A DB_DATA 3
RANGE $797A-$797D DB_DATA 3
RANGE $797D-$7984 DB_DATA 7
RANGE $7984-$7989 DB_DATA 5
RANGE $7989-$798E DB_DATA 5
RANGE $798E-$7993 DB_DATA 5
RANGE $7993-$7996 DB_DATA 3
RANGE $7996-$7999 DB_DATA 3
RANGE $7999-$799C DB_DATA 3
RANGE $799C-$79A1 DB_DATA 5
RANGE $79A1-$79A6 DB_DATA 5
RANGE $79A6-$79AB DB_DATA 5
RANGE $79AB-$79AE DB_DATA 3
RANGE $79AE-$79B1 DB_DATA 3
RANGE $79B1-$79B6 DB_DATA 5
RANGE $79B6-$79BB DB_DATA 5
RANGE $79BB-$79C0 DB_DATA 5
RANGE $79C0-$79C3 DB_DATA 3
RANGE $79C3-$79C6 DB_DATA 3
RANGE $79C6-$79CD DB_DATA 7
RANGE $79CD-$79D2 DB_DATA 5
RANGE $79D2-$79D7 DB_DATA 5
RANGE $79D7-$79DC DB_DATA 5
RANGE $79DC-$79DF DB_DATA 3
RANGE $79DF-$79E2 DB_DATA 3
RANGE $79E2-$79E5 DB_DATA 3
RANGE $79E5-$79EA DB_DATA 5
RANGE $79EA-$79EF DB_DATA 5
RANGE $79EF-$79F4 DB_DATA 5
RANGE $79F4-$79F7 DB_DATA 3
RANGE $79F7-$79FA DB_DATA 3
RANGE $79FA-$79FF DB_DATA 5
RANGE $79FF-$7A04 DB_DATA 5
RANGE $7A04-$7A09 DB_DATA 5
RANGE $7A09-$7A0C DB_DATA 3
RANGE $7A0C-$7A0F DB_DATA 3
RANGE $7A0F-$7A16 DB_DATA 7
RANGE $7A16-$7A1B DB_DATA 5
RANGE $7A1B-$7A20 DB_DATA 5
RANGE $7A20-$7A25 DB_DATA 5
RANGE $7A25-$7A28 DB_DATA 3
RANGE $7A28-$7A2B DB_DATA 3
RANGE $7A2B-$7A2E DB_DATA 3
RANGE $7A2E-$7A33 DB_DATA 5
RANGE $7A33-$7A38 DB_DATA 5
RANGE $7A38-$7A3D DB_DATA 5
RANGE $7A3D-$7A40 DB_DATA 3
RANGE $7A40-$7A43 DB_DATA 3
RANGE $7A43-$7A48 DB_DATA 5
RANGE $7A48-$7A4D DB_DATA 5
RANGE $7A4D-$7A52 DB_DATA 5
RANGE $7A52-$7A55 DB_DATA 3
RANGE $7A55-$7A58 DB_DATA 3
RANGE $7A58-$7A5F DB_DATA 7
RANGE $7A5F-$7A64 DB_DATA 5
RANGE $7A64-$7A69 DB_DATA 5
RANGE $7A69-$7A6E DB_DATA 5
RANGE $7A6E-$7A71 DB_DATA 3
RANGE $7A71-$7A74 DB_DATA 3
RANGE $7A74-$7A77 DB_DATA 3
RANGE $7A77-$7A7C DB_DATA 5
RANGE $7A7C-$7A81 DB_DATA 5
RANGE $7A81-$7A86 DB_DATA 5
RANGE $7A86-$7A89 DB_DATA 3
RANGE $7A89-$7A8C DB_DATA 3
RANGE $7A8C-$7A91 DB_DATA 5
RANGE $7A91-$7A96 DB_DATA 5
RANGE $7A96-$7A9B DB_DATA 5
RANGE $7A9B-$7A9E DB_DATA 3
RANGE $7A9E-$7AA1 DB_DATA 3
RANGE $7AA1-$7AA8 DB_DATA 7
RANGE $7AA8-$7AAD DB_DATA 5
RANGE $7AAD-$7AB2 DB_DATA 5
RANGE $7AB2-$7AB7 DB_DATA 5
RANGE $7AB7-$7ABA DB_DATA 3
RANGE $7ABA-$7ABD DB_DATA 3
RANGE $7ABD-$7AC0 DB_DATA 3
RANGE $7AC0-$7AC5 DB_DATA 5
RANGE $7AC5-$7ACA DB_DATA 5
RANGE $7ACA-$7ACF DB_DATA 5
RANGE $7ACF-$7AD2 DB_DATA 3
RANGE $7AD2-$7AD5 DB_DATA 3
RANGE $7AD5-$7ADA DB_DATA 5
RANGE $7ADA-$7ADF DB_DATA 5
RANGE $7ADF-$7AE4 DB_DATA 5
RANGE $7AE4-$7AE7 DB_DATA 3
RANGE $7AE7-$7AEA DB_DATA 3
RANGE $7AEA-$7AF1 DB_DATA 7
RANGE $7AF1-$7AF6 DB_DATA 5
RANGE $7AF6-$7AFB DB_DATA 5
RANGE $7AFB-$7B00 DB_DATA 5
RANGE $7B00-$7B03 DB_DATA 3
RANGE $7B03-$7B06 DB_DATA 3
RANGE $7B06-$7B09 DB_DATA 3
RANGE $7B09-$7B0E DB_DATA 5
RANGE $7B0E-$7B13 DB_DATA 5
RANGE $7B13-$7B18 DB_DATA 5
RANGE $7B18-$7B1B DB_DATA 3
RANGE $7B1B-$7B1E DB_DATA 3
RANGE $7B1E-$7B23 DB_DATA 5
RANGE $7B23-$7B28 DB_DATA 5
RANGE $7B28-$7B2D DB_DATA 5
RANGE $7B2D-$7B30 DB_DATA 3
RANGE $7B30-$7B33 DB_DATA 3
RANGE $7B33-$7B3A DB_DATA 7
RANGE $7B3A-$7B3F DB_DATA 5
RANGE $7B3F-$7B44 DB_DATA 5
RANGE $7B44-$7B49 DB_DATA 5
RANGE $7B49-$7B4C DB_DATA 3
RANGE $7B4C-$7B4F DB_DATA 3
RANGE $7B4F-$7B52 DB_DATA 3
RANGE $7B52-$7B57 DB_DATA 5
RANGE $7B57-$7B5C DB_DATA 5
RANGE $7B5C-$7B61 DB_DATA 5
RANGE $7B61-$7B64 DB_DATA 3
RANGE $7B64-$7B67 DB_DATA 3
RANGE $7B67-$7B6C DB_DATA 5
RANGE $7B6C-$7B71 DB_DATA 5
RANGE $7B71-$7B76 DB_DATA 5
RANGE $7B76-$7B79 DB_DATA 3
RANGE $7B79-$7B7C DB_DATA 3
RANGE $7B7C-$7B83 DB_DATA 7
RANGE $7B83-$7B88 DB_DATA 5
RANGE $7B88-$7B8D DB_DATA 5
RANGE $7B8D-$7B92 DB_DATA 5
RANGE $7B92-$7B95 DB_DATA 3
RANGE $7B95-$7B98 DB_DATA 3
RANGE $7B98-$7B9B DB_DATA 3
RANGE $7B9B-$7BA0 DB_DATA 5
RANGE $7BA0-$7BA5 DB_DATA 5
RANGE $7BA5-$7BAA DB_DATA 5
RANGE $7BAA-$7BAD DB_DATA 3
RANGE $7BAD-$7BB0 DB_DATA 3
RANGE $7BB0-$7BB5 DB_DATA 5
RANGE $7BB5-$7BBA DB_DATA 5
RANGE $7BBA-$7BBF DB_DATA 5
RANGE $7BBF-$7BC2 DB_DATA 3
RANGE $7BC2-$7BC5 DB_DATA 3
RANGE $7BC5-$7BCC DB_DATA 7
RANGE $7BCC-$7BD1 DB_DATA 5
RANGE $7BD1-$7BD6 DB_DATA 5
RANGE $7BD6-$7BDB DB_DATA 5
RANGE $7BDB-$7BDE DB_DATA 3
RANGE $7BDE-$7BE1 DB_DATA 3
RANGE $7BE1-$7BE4 DB_DATA 3
RANGE $7BE4-$7BE9 DB_DATA 5
RANGE $7BE9-$7BEE DB_DATA 5
RANGE $7BEE-$7BF3 DB_DATA 5
RANGE $7BF3-$7BF6 DB_DATA 3
RANGE $7BF6-$7BF9 DB_DATA 3
RANGE $7BF9-$7BFE DB_DATA 5
RANGE $7BFE-$7C03 DB_DATA 5
RANGE $7C03-$7C08 DB_DATA 5
RANGE $7C08-$7C0B DB_DATA 3
RANGE $7C0B-$7C0E DB_DATA 3
RANGE $7C0E-$7C15 DB_DATA 7
RANGE $7C15-$7C1A DB_DATA 5
RANGE $7C1A-$7C1F DB_DATA 5
RANGE $7C1F-$7C24 DB_DATA 5
RANGE $7C24-$7C27 DB_DATA 3
RANGE $7C27-$7C2A DB_DATA 3
RANGE $7C2A-$7C2D DB_DATA 3
RANGE $7C2D-$7C32 DB_DATA 5
RANGE $7C32-$7C37 DB_DATA 5
RANGE $7C37-$7C3C DB_DATA 5
RANGE $7C3C-$7C3F DB_DATA 3
RANGE $7C3F-$7C42 DB_DATA 3
RANGE $7C42-$7C47 DB_DATA 5
RANGE $7C47-$7C4C DB_DATA 5
RANGE $7C4C-$7C51 DB_DATA 5
RANGE $7C51-$7C54 DB_DATA 3
RANGE $7C54-$7C57 DB_DATA 3
RANGE $7C57-$7C5E DB_DATA 7
RANGE $7C5E-$7C63 DB_DATA 5
RANGE $7C63-$7C68 DB_DATA 5
RANGE $7C68-$7C6D DB_DATA 5
RANGE $7C6D-$7C70 DB_DATA 3
RANGE $7C70-$7C73 DB_DATA 3
RANGE $7C73-$7C76 DB_DATA 3
RANGE $7C76-$7C7B DB_DATA 5
RANGE $7C7B-$7C80 DB_DATA 5
RANGE $7C80-$7C85 DB_DATA 5
RANGE $7C85-$7C88 DB_DATA 3
RANGE $7C88-$7C8B DB_DATA 3
RANGE $7C8B-$7C90 DB_DATA 5
RANGE $7C90-$7C95 DB_DATA 5
RANGE $7C95-$7C9A DB_DATA 5
RANGE $7C9A-$7C9D DB_DATA 3
RANGE $7C9D-$7CA0 DB_DATA 3
RANGE $7CA0-$7CA7 DB_DATA 7
RANGE $7CA7-$7CA9 DW_DATA 1
RANGE $7CA9-$7CAA DB_DATA 1
RANGE $7CAA-$7CAC DW_DATA 1
RANGE $7CAC-$7CAD DB_DATA 1
RANGE $7CAD-$7CAF DW_DATA 1
RANGE $7CAF-$7CB1 DW_DATA 1
RANGE $7CB1-$7CB3 DW_DATA 1
RANGE $7CB3-$7CB5 DW_DATA 1
RANGE $7CB5-$7CB7 DW_DATA 1
RANGE $7CB7-$7CB9 DW_DATA 1
RANGE $7CB9-$7CBB DW_DATA 1
RANGE $7CBB-$7CBD DW_DATA 1
RANGE $7CBD-$7CBF DW_DATA 1
RANGE $7CBF-$7CC1 DW_DATA 1
RANGE $7CC1-$7CC3 DW_DATA 1
RANGE $7CC3-$7CC5 DW_DATA 1
RANGE $7CC5-$7CC7 DW_DATA 1
RANGE $7CC7-$7CC9 DW_DATA 1
RANGE $7CC9-$7CCB DW_DATA 1
RANGE $7CCB-$7CCD DW_DATA 1
RANGE $7CCD-$7CCF DW_DATA 1
RANGE $7CCF-$7CD4 DB_DATA 5
RANGE $7CD4-$7CD9 DB_DATA 5
RANGE $7CD9-$7CDE DB_DATA 5
RANGE $7CDE-$7CE1 DB_DATA 3
RANGE $7CE1-$7CE4 DB_DATA 3
RANGE $7CE4-$7CE7 DB_DATA 3
RANGE $7CE7-$7CEE DB_DATA 7
RANGE $7CEE-$7CF3 DB_DATA 5
RANGE $7CF3-$7CF8 DB_DATA 5
RANGE $7CF8-$7CFD DB_DATA 5
RANGE $7CFD-$7D00 DB_DATA 3
RANGE $7D00-$7D03 DB_DATA 3
RANGE $7D03-$7D06 DB_DATA 3
RANGE $7D06-$7D0D DB_DATA 7
RANGE $7D0D-$7D12 DB_DATA 5
RANGE $7D12-$7D17 DB_DATA 5
RANGE $7D17-$7D1C DB_DATA 5
RANGE $7D1C-$7D1F DB_DATA 3
RANGE $7D1F-$7D22 DB_DATA 3
RANGE $7D22-$7D25 DB_DATA 3
RANGE $7D25-$7D2C DB_DATA 7
RANGE $7D2C-$7D31 DB_DATA 5
RANGE $7D31-$7D36 DB_DATA 5
RANGE $7D36-$7D3B DB_DATA 5
RANGE $7D3B-$7D3E DB_DATA 3
RANGE $7D3E-$7D41 DB_DATA 3
RANGE $7D41-$7D44 DB_DATA 3
RANGE $7D44-$7D4B DB_DATA 7
RANGE $7D4B-$7D50 DB_DATA 5
RANGE $7D50-$7D55 DB_DATA 5
RANGE $7D55-$7D5A DB_DATA 5
RANGE $7D5A-$7D5D DB_DATA 3
RANGE $7D5D-$7D60 DB_DATA 3
RANGE $7D60-$7D63 DB_DATA 3
RANGE $7D63-$7D6A DB_DATA 7
RANGE $7D6A-$7D6F DB_DATA 5
RANGE $7D6F-$7D74 DB_DATA 5
RANGE $7D74-$7D79 DB_DATA 5
RANGE $7D79-$7D7C DB_DATA 3
RANGE $7D7C-$7D7F DB_DATA 3
RANGE $7D7F-$7D82 DB_DATA 3
RANGE $7D82-$7D89 DB_DATA 7
RANGE $7D89-$7D8E DB_DATA 5
RANGE $7D8E-$7D93 DB_DATA 5
RANGE $7D93-$7D98 DB_DATA 5
RANGE $7D98-$7D9B DB_DATA 3
RANGE $7D9B-$7D9E DB_DATA 3
RANGE $7D9E-$7DA1 DB_DATA 3
RANGE $7DA1-$7DA8 DB_DATA 7
RANGE $7DA8-$7DAD DB_DATA 5
RANGE $7DAD-$7DB2 DB_DATA 5
RANGE $7DB2-$7DB7 DB_DATA 5
RANGE $7DB7-$7DBA DB_DATA 3
RANGE $7DBA-$7DBD DB_DATA 3
RANGE $7DBD-$7DC0 DB_DATA 3
RANGE $7DC0-$7DC7 DB_DATA 7
RANGE $7DC7-$7DCC DB_DATA 5
RANGE $7DCC-$7DD1 DB_DATA 5
RANGE $7DD1-$7DD6 DB_DATA 5
RANGE $7DD6-$7DD9 DB_DATA 3
RANGE $7DD9-$7DDC DB_DATA 3
RANGE $7DDC-$7DDF DB_DATA 3
RANGE $7DDF-$7DE6 DB_DATA 7
RANGE $7DE6-$7DE8 DW_DATA 1
RANGE $7DE8-$7DEA DW_DATA 1
RANGE $7DEA-$7DEC DW_DATA 1
RANGE $7DEC-$7DEE DW_DATA 1
RANGE $7DEE-$7DF0 DW_DATA 1
RANGE $7DF0-$7DF2 DW_DATA 1
RANGE $7DF2-$7DF4 DW_DATA 1
RANGE $7DF4-$7DF6 DW_DATA 1
RANGE $7DF6-$7DF8 DW_DATA 1
RANGE $7DF8-$7DFA DW_DATA 1
RANGE $7DFA-$7DFC DW_DATA 1
RANGE $7DFC-$7DFE DW_DATA 1
RANGE $7DFE-$7E00 DW_DATA 1
RANGE $7E00-$7E02 DW_DATA 1
RANGE $7E02-$7E04 DW_DATA 1
RANGE $7E04-$7E06 DW_DATA 1
RANGE $7E06-$7E08 DW_DATA 1
RANGE $7E08-$7E0D DB_DATA 5
RANGE $7E0D-$7E12 DB_DATA 5
RANGE $7E12-$7E17 DB_DATA 5
RANGE $7E17-$7E1A DB_DATA 3
RANGE $7E1A-$7E1D DB_DATA 3
RANGE $7E1D-$7E20 DB_DATA 3
RANGE $7E20-$7E25 DB_DATA 5
RANGE $7E25-$7E2A DB_DATA 5
RANGE $7E2A-$7E31 DB_DATA 7
RANGE $7E31-$7E36 DB_DATA 5
RANGE $7E36-$7E3B DB_DATA 5
RANGE $7E3B-$7E40 DB_DATA 5
RANGE $7E40-$7E43 DB_DATA 3
RANGE $7E43-$7E46 DB_DATA 3
RANGE $7E46-$7E49 DB_DATA 3
RANGE $7E49-$7E4E DB_DATA 5
RANGE $7E4E-$7E53 DB_DATA 5
RANGE $7E53-$7E5A DB_DATA 7
RANGE $7E5A-$7E5F DB_DATA 5
RANGE $7E5F-$7E64 DB_DATA 5
RANGE $7E64-$7E69 DB_DATA 5
RANGE $7E69-$7E6C DB_DATA 3
RANGE $7E6C-$7E6F DB_DATA 3
RANGE $7E6F-$7E72 DB_DATA 3
RANGE $7E72-$7E77 DB_DATA 5
RANGE $7E77-$7E7C DB_DATA 5
RANGE $7E7C-$7E83 DB_DATA 7
RANGE $7E83-$7E88 DB_DATA 5
RANGE $7E88-$7E8D DB_DATA 5
RANGE $7E8D-$7E92 DB_DATA 5
RANGE $7E92-$7E95 DB_DATA 3
RANGE $7E95-$7E98 DB_DATA 3
RANGE $7E98-$7E9B DB_DATA 3
RANGE $7E9B-$7EA0 DB_DATA 5
RANGE $7EA0-$7EA5 DB_DATA 5
RANGE $7EA5-$7EAC DB_DATA 7
RANGE $7EAC-$7EB1 DB_DATA 5
RANGE $7EB1-$7EB6 DB_DATA 5
RANGE $7EB6-$7EBB DB_DATA 5
RANGE $7EBB-$7EC0 DB_DATA 5
RANGE $7EC0-$7EC5 DB_DATA 5
RANGE $7EC5-$7ECA DB_DATA 5
RANGE $7ECA-$7ED1 DB_DATA 7
RANGE $7ED1-$7ED6 DB_DATA 5
RANGE $7ED6-$7EDB DB_DATA 5
RANGE $7EDB-$7EE0 DB_DATA 5
RANGE $7EE0-$7EE3 DB_DATA 3
RANGE $7EE3-$7EE6 DB_DATA 3
RANGE $7EE6-$7EE9 DB_DATA 3
RANGE $7EE9-$7EEE DB_DATA 5
RANGE $7EEE-$7EF3 DB_DATA 5
RANGE $7EF3-$7EFA DB_DATA 7
RANGE $7EFA-$7EFF DB_DATA 5
RANGE $7EFF-$7F04 DB_DATA 5
RANGE $7F04-$7F09 DB_DATA 5
RANGE $7F09-$7F0C DB_DATA 3
RANGE $7F0C-$7F0F DB_DATA 3
RANGE $7F0F-$7F12 DB_DATA 3
RANGE $7F12-$7F17 DB_DATA 5
RANGE $7F17-$7F1C DB_DATA 5
RANGE $7F1C-$7F23 DB_DATA 7
RANGE $7F23-$7F28 DB_DATA 5
RANGE $7F28-$7F2D DB_DATA 5
RANGE $7F2D-$7F32 DB_DATA 5
RANGE $7F32-$7F35 DB_DATA 3
RANGE $7F35-$7F38 DB_DATA 3
RANGE $7F38-$7F3B DB_DATA 3
RANGE $7F3B-$7F40 DB_DATA 5
RANGE $7F40-$7F45 DB_DATA 5
RANGE $7F45-$7F4C DB_DATA 7
RANGE $7F4C-$7F51 DB_DATA 5
RANGE $7F51-$7F56 DB_DATA 5
RANGE $7F56-$7F5B DB_DATA 5
RANGE $7F5B-$7F5E DB_DATA 3
RANGE $7F5E-$7F61 DB_DATA 3
RANGE $7F61-$7F64 DB_DATA 3
RANGE $7F64-$7F69 DB_DATA 5
RANGE $7F69-$7F6E DB_DATA 5
RANGE $7F6E-$7F75 DB_DATA 7
RANGE $7F75-$7F77 DW_DATA 1
RANGE $7F77-$7F78 DB_DATA 1
RANGE $7F78-$7F7A DW_DATA 1
RANGE $7F7A-$7F7B DB_DATA 1
RANGE $7F7B-$7F7D DW_DATA 1
RANGE $7F7D-$7F7F DW_DATA 1
RANGE $7F7F-$7F81 DW_DATA 1
RANGE $7F81-$7F83 DW_DATA 1
RANGE $7F83-$7F85 DW_DATA 1
RANGE $7F85-$7F87 DW_DATA 1
RANGE $7F87-$7F89 DW_DATA 1
RANGE $7F89-$7F8B DW_DATA 1
RANGE $7F8B-$7F8D DW_DATA 1
RANGE $7F8D-$7F8F DW_DATA 1
RANGE $7F8F-$7F91 DW_DATA 1
RANGE $7F91-$7F93 DW_DATA 1
RANGE $7F93-$7F95 DW_DATA 1
RANGE $7F95-$7F97 DW_DATA 1
RANGE $7F97-$7F99 DW_DATA 1
RANGE $7F99-$7F9B DW_DATA 1
RANGE $7F9B-$7F9D DW_DATA 1
RANGE $7F9D-$7FA2 DB_DATA 5
RANGE $7FA2-$7FA7 DB_DATA 5
RANGE $7FA7-$7FAC DB_DATA 5
RANGE $7FAC-$7FB1 DB_DATA 5
RANGE $7FB1-$7FB6 DB_DATA 5
RANGE $7FB6-$7FBB DB_DATA 5
RANGE $7FBB-$7FC2 DB_DATA 7
RANGE $7FC2-$7FC7 DB_DATA 5
RANGE $7FC7-$7FCC DB_DATA 5
RANGE $7FCC-$7FD1 DB_DATA 5
RANGE $7FD1-$7FD6 DB_DATA 5
RANGE $7FD6-$7FDB DB_DATA 5
RANGE $7FDB-$7FE0 DB_DATA 5
RANGE $7FE0-$7FE7 DB_DATA 7
RANGE $7FE7-$7FEC DB_DATA 5
RANGE $7FEC-$7FF1 DB_DATA 5
RANGE $7FF1-$7FF6 DB_DATA 5
RANGE $7FF6-$7FFB DB_DATA 5
RANGE $7FFB-$8000 DB_DATA 5
RANGE $8000-$8005 DB_DATA 5
RANGE $8005-$800C DB_DATA 7
RANGE $800C-$8011 DB_DATA 5
RANGE $8011-$8016 DB_DATA 5
RANGE $8016-$801B DB_DATA 5
RANGE $801B-$8020 DB_DATA 5
RANGE $8020-$8025 DB_DATA 5
RANGE $8025-$802A DB_DATA 5
RANGE $802A-$8031 DB_DATA 7
RANGE $8031-$8036 DB_DATA 5
RANGE $8036-$803B DB_DATA 5
RANGE $803B-$8040 DB_DATA 5
RANGE $8040-$8045 DB_DATA 5
RANGE $8045-$804A DB_DATA 5
RANGE $804A-$804F DB_DATA 5
RANGE $804F-$8056 DB_DATA 7
RANGE $8056-$805B DB_DATA 5
RANGE $805B-$8060 DB_DATA 5
RANGE $8060-$8065 DB_DATA 5
RANGE $8065-$806A DB_DATA 5
RANGE $806A-$806F DB_DATA 5
RANGE $806F-$8074 DB_DATA 5
RANGE $8074-$807B DB_DATA 7
RANGE $807B-$8080 DB_DATA 5
RANGE $8080-$8085 DB_DATA 5
RANGE $8085-$808A DB_DATA 5
RANGE $808A-$808F DB_DATA 5
RANGE $808F-$8094 DB_DATA 5
RANGE $8094-$8099 DB_DATA 5
RANGE $8099-$80A0 DB_DATA 7
RANGE $80A0-$80A5 DB_DATA 5
RANGE $80A5-$80AA DB_DATA 5
RANGE $80AA-$80AF DB_DATA 5
RANGE $80AF-$80B4 DB_DATA 5
RANGE $80B4-$80B9 DB_DATA 5
RANGE $80B9-$80BE DB_DATA 5
RANGE $80BE-$80C5 DB_DATA 7
RANGE $80C5-$80CA DB_DATA 5
RANGE $80CA-$80CF DB_DATA 5
RANGE $80CF-$80D4 DB_DATA 5
RANGE $80D4-$80D9 DB_DATA 5
RANGE $80D9-$80DE DB_DATA 5
RANGE $80DE-$80E3 DB_DATA 5
RANGE $80E3-$80EA DB_DATA 7
RANGE $80EA-$80EC DW_DATA 1
RANGE $80EC-$80EE DW_DATA 1
RANGE $80EE-$80F0 DW_DATA 1
RANGE $80F0-$80F2 DW_DATA 1
RANGE $80F2-$80F4 DW_DATA 1
RANGE $80F4-$80F6 DW_DATA 1
RANGE $80F6-$80F8 DW_DATA 1
RANGE $80F8-$80FA DW_DATA 1
RANGE $80FA-$80FC DW_DATA 1
RANGE $80FC-$80FE DW_DATA 1
RANGE $80FE-$8100 DW_DATA 1
RANGE $8100-$8102 DW_DATA 1
RANGE $8102-$8104 DW_DATA 1
RANGE $8104-$8106 DW_DATA 1
RANGE $8106-$8108 DW_DATA 1
RANGE $8108-$810A DW_DATA 1
RANGE $810A-$810C DW_DATA 1
RANGE $810C-$8111 DB_DATA 5
RANGE $8111-$8116 DB_DATA 5
RANGE $8116-$811B DB_DATA 5
RANGE $811B-$8120 DB_DATA 5
RANGE $8120-$8125 DB_DATA 5
RANGE $8125-$812A DB_DATA 5
RANGE $812A-$812F DB_DATA 5
RANGE $812F-$8136 DB_DATA 7
RANGE $8136-$813B DB_DATA 5
RANGE $813B-$8140 DB_DATA 5
RANGE $8140-$8145 DB_DATA 5
RANGE $8145-$814A DB_DATA 5
RANGE $814A-$814F DB_DATA 5
RANGE $814F-$8154 DB_DATA 5
RANGE $8154-$8159 DB_DATA 5
RANGE $8159-$8160 DB_DATA 7
RANGE $8160-$8165 DB_DATA 5
RANGE $8165-$816A DB_DATA 5
RANGE $816A-$816F DB_DATA 5
RANGE $816F-$8174 DB_DATA 5
RANGE $8174-$8179 DB_DATA 5
RANGE $8179-$817E DB_DATA 5
RANGE $817E-$8183 DB_DATA 5
RANGE $8183-$818A DB_DATA 7
RANGE $818A-$818F DB_DATA 5
RANGE $818F-$8194 DB_DATA 5
RANGE $8194-$8199 DB_DATA 5
RANGE $8199-$819E DB_DATA 5
RANGE $819E-$81A3 DB_DATA 5
RANGE $81A3-$81A8 DB_DATA 5
RANGE $81A8-$81AD DB_DATA 5
RANGE $81AD-$81B4 DB_DATA 7
RANGE $81B4-$81B9 DB_DATA 5
RANGE $81B9-$81BE DB_DATA 5
RANGE $81BE-$81C3 DB_DATA 5
RANGE $81C3-$81C8 DB_DATA 5
RANGE $81C8-$81CD DB_DATA 5
RANGE $81CD-$81D2 DB_DATA 5
RANGE $81D2-$81D7 DB_DATA 5
RANGE $81D7-$81DE DB_DATA 7
RANGE $81DE-$81E3 DB_DATA 5
RANGE $81E3-$81E8 DB_DATA 5
RANGE $81E8-$81ED DB_DATA 5
RANGE $81ED-$81F2 DB_DATA 5
RANGE $81F2-$81F7 DB_DATA 5
RANGE $81F7-$81FC DB_DATA 5
RANGE $81FC-$8201 DB_DATA 5
RANGE $8201-$8208 DB_DATA 7
RANGE $8208-$820D DB_DATA 5
RANGE $820D-$8212 DB_DATA 5
RANGE $8212-$8217 DB_DATA 5
RANGE $8217-$821C DB_DATA 5
RANGE $821C-$8221 DB_DATA 5
RANGE $8221-$8226 DB_DATA 5
RANGE $8226-$822B DB_DATA 5
RANGE $822B-$8232 DB_DATA 7
RANGE $8232-$8237 DB_DATA 5
RANGE $8237-$823C DB_DATA 5
RANGE $823C-$8241 DB_DATA 5
RANGE $8241-$8246 DB_DATA 5
RANGE $8246-$824B DB_DATA 5
RANGE $824B-$8250 DB_DATA 5
RANGE $8250-$8255 DB_DATA 5
RANGE $8255-$825C DB_DATA 7
RANGE $825C-$8261 DB_DATA 5
RANGE $8261-$8266 DB_DATA 5
RANGE $8266-$826B DB_DATA 5
RANGE $826B-$8270 DB_DATA 5
RANGE $8270-$8275 DB_DATA 5
RANGE $8275-$827A DB_DATA 5
RANGE $827A-$827F DB_DATA 5
RANGE $827F-$8286 DB_DATA 7
RANGE $8286-$8288 DW_DATA 1
RANGE $8288-$8289 DB_DATA 1
RANGE $8289-$828B DW_DATA 1
RANGE $828B-$828C DB_DATA 1
RANGE $828C-$828E DW_DATA 1
RANGE $828E-$8290 DW_DATA 1
RANGE $8290-$8292 DW_DATA 1
RANGE $8292-$8294 DW_DATA 1
RANGE $8294-$8296 DW_DATA 1
RANGE $8296-$8298 DW_DATA 1
RANGE $8298-$829A DW_DATA 1
RANGE $829A-$829C DW_DATA 1
RANGE $829C-$829E DW_DATA 1
RANGE $829E-$82A0 DW_DATA 1
RANGE $82A0-$82A2 DW_DATA 1
RANGE $82A2-$82A4 DW_DATA 1
RANGE $82A4-$82A6 DW_DATA 1
RANGE $82A6-$82A8 DW_DATA 1
RANGE $82A8-$82AA DW_DATA 1
RANGE $82AA-$82AC DW_DATA 1
RANGE $82AC-$82AE DW_DATA 1
RANGE $82AE-$82B3 DB_DATA 5
RANGE $82B3-$82B8 DB_DATA 5
RANGE $82B8-$82BD DB_DATA 5
RANGE $82BD-$82C0 DB_DATA 3
RANGE $82C0-$82C5 DB_DATA 5
RANGE $82C5-$82CA DB_DATA 5
RANGE $82CA-$82D1 DB_DATA 7
RANGE $82D1-$82D6 DB_DATA 5
RANGE $82D6-$82DB DB_DATA 5
RANGE $82DB-$82E0 DB_DATA 5
RANGE $82E0-$82E3 DB_DATA 3
RANGE $82E3-$82E8 DB_DATA 5
RANGE $82E8-$82ED DB_DATA 5
RANGE $82ED-$82F4 DB_DATA 7
RANGE $82F4-$82F9 DB_DATA 5
RANGE $82F9-$82FE DB_DATA 5
RANGE $82FE-$8303 DB_DATA 5
RANGE $8303-$8306 DB_DATA 3
RANGE $8306-$830B DB_DATA 5
RANGE $830B-$8310 DB_DATA 5
RANGE $8310-$8317 DB_DATA 7
RANGE $8317-$831C DB_DATA 5
RANGE $831C-$8321 DB_DATA 5
RANGE $8321-$8326 DB_DATA 5
RANGE $8326-$8329 DB_DATA 3
RANGE $8329-$832E DB_DATA 5
RANGE $832E-$8333 DB_DATA 5
RANGE $8333-$833A DB_DATA 7
RANGE $833A-$833F DB_DATA 5
RANGE $833F-$8344 DB_DATA 5
RANGE $8344-$8349 DB_DATA 5
RANGE $8349-$834C DB_DATA 3
RANGE $834C-$8351 DB_DATA 5
RANGE $8351-$8356 DB_DATA 5
RANGE $8356-$835D DB_DATA 7
RANGE $835D-$8362 DB_DATA 5
RANGE $8362-$8367 DB_DATA 5
RANGE $8367-$836C DB_DATA 5
RANGE $836C-$836F DB_DATA 3
RANGE $836F-$8374 DB_DATA 5
RANGE $8374-$8379 DB_DATA 5
RANGE $8379-$8380 DB_DATA 7
RANGE $8380-$8385 DB_DATA 5
RANGE $8385-$838A DB_DATA 5
RANGE $838A-$838F DB_DATA 5
RANGE $838F-$8392 DB_DATA 3
RANGE $8392-$8397 DB_DATA 5
RANGE $8397-$839C DB_DATA 5
RANGE $839C-$83A3 DB_DATA 7
RANGE $83A3-$83A8 DB_DATA 5
RANGE $83A8-$83AD DB_DATA 5
RANGE $83AD-$83B2 DB_DATA 5
RANGE $83B2-$83B5 DB_DATA 3
RANGE $83B5-$83BA DB_DATA 5
RANGE $83BA-$83BF DB_DATA 5
RANGE $83BF-$83C6 DB_DATA 7
RANGE $83C6-$83CB DB_DATA 5
RANGE $83CB-$83D0 DB_DATA 5
RANGE $83D0-$83D5 DB_DATA 5
RANGE $83D5-$83D8 DB_DATA 3
RANGE $83D8-$83DD DB_DATA 5
RANGE $83DD-$83E2 DB_DATA 5
RANGE $83E2-$83E9 DB_DATA 7
RANGE $83E9-$83EB DW_DATA 1
RANGE $83EB-$83ED DW_DATA 1
RANGE $83ED-$83EF DW_DATA 1
RANGE $83EF-$83F1 DW_DATA 1
RANGE $83F1-$83F3 DW_DATA 1
RANGE $83F3-$83F5 DW_DATA 1
RANGE $83F5-$83F7 DW_DATA 1
RANGE $83F7-$83F9 DW_DATA 1
RANGE $83F9-$83FB DW_DATA 1
RANGE $83FB-$83FD DW_DATA 1
RANGE $83FD-$83FF DW_DATA 1
RANGE $83FF-$8401 DW_DATA 1
RANGE $8401-$8403 DW_DATA 1
RANGE $8403-$8405 DW_DATA 1
RANGE $8405-$8407 DW_DATA 1
RANGE $8407-$8409 DW_DATA 1
RANGE $8409-$840B DW_DATA 1
RANGE $840B-$8410 DB_DATA 5
RANGE $8410-$8415 DB_DATA 5
RANGE $8415-$841A DB_DATA 5
RANGE $841A-$841D DB_DATA 3
RANGE $841D-$8420 DB_DATA 3
RANGE $8420-$8423 DB_DATA 3
RANGE $8423-$8428 DB_DATA 5
RANGE $8428-$842D DB_DATA 5
RANGE $842D-$8434 DB_DATA 7
RANGE $8434-$8439 DB_DATA 5
RANGE $8439-$843E DB_DATA 5
RANGE $843E-$8443 DB_DATA 5
RANGE $8443-$8446 DB_DATA 3
RANGE $8446-$8449 DB_DATA 3
RANGE $8449-$844C DB_DATA 3
RANGE $844C-$8451 DB_DATA 5
RANGE $8451-$8456 DB_DATA 5
RANGE $8456-$845D DB_DATA 7
RANGE $845D-$8462 DB_DATA 5
RANGE $8462-$8467 DB_DATA 5
RANGE $8467-$846C DB_DATA 5
RANGE $846C-$846F DB_DATA 3
RANGE $846F-$8472 DB_DATA 3
RANGE $8472-$8475 DB_DATA 3
RANGE $8475-$847A DB_DATA 5
RANGE $847A-$847F DB_DATA 5
RANGE $847F-$8486 DB_DATA 7
RANGE $8486-$848B DB_DATA 5
RANGE $848B-$8490 DB_DATA 5
RANGE $8490-$8495 DB_DATA 5
RANGE $8495-$8498 DB_DATA 3
RANGE $8498-$849B DB_DATA 3
RANGE $849B-$849E DB_DATA 3
RANGE $849E-$84A3 DB_DATA 5
RANGE $84A3-$84A8 DB_DATA 5
RANGE $84A8-$84AF DB_DATA 7
RANGE $84AF-$84B4 DB_DATA 5
RANGE $84B4-$84B9 DB_DATA 5
RANGE $84B9-$84BE DB_DATA 5
RANGE $84BE-$84C1 DB_DATA 3
RANGE $84C1-$84C6 DB_DATA 5
RANGE $84C6-$84CD DB_DATA 7
RANGE $84CD-$84D2 DB_DATA 5
RANGE $84D2-$84D7 DB_DATA 5
RANGE $84D7-$84DC DB_DATA 5
RANGE $84DC-$84DF DB_DATA 3
RANGE $84DF-$84E2 DB_DATA 3
RANGE $84E2-$84E5 DB_DATA 3
RANGE $84E5-$84EA DB_DATA 5
RANGE $84EA-$84EF DB_DATA 5
RANGE $84EF-$84F6 DB_DATA 7
RANGE $84F6-$84FB DB_DATA 5
RANGE $84FB-$8500 DB_DATA 5
RANGE $8500-$8505 DB_DATA 5
RANGE $8505-$8508 DB_DATA 3
RANGE $8508-$850B DB_DATA 3
RANGE $850B-$850E DB_DATA 3
RANGE $850E-$8513 DB_DATA 5
RANGE $8513-$8518 DB_DATA 5
RANGE $8518-$851F DB_DATA 7
RANGE $851F-$8524 DB_DATA 5
RANGE $8524-$8529 DB_DATA 5
RANGE $8529-$852E DB_DATA 5
RANGE $852E-$8531 DB_DATA 3
RANGE $8531-$8534 DB_DATA 3
RANGE $8534-$8537 DB_DATA 3
RANGE $8537-$853C DB_DATA 5
RANGE $853C-$8541 DB_DATA 5
RANGE $8541-$8548 DB_DATA 7
RANGE $8548-$854D DB_DATA 5
RANGE $854D-$8552 DB_DATA 5
RANGE $8552-$8557 DB_DATA 5
RANGE $8557-$855A DB_DATA 3
RANGE $855A-$855D DB_DATA 3
RANGE $855D-$8560 DB_DATA 3
RANGE $8560-$8565 DB_DATA 5
RANGE $8565-$856A DB_DATA 5
RANGE $856A-$8571 DB_DATA 7
RANGE $8571-$8573 DW_DATA 1
RANGE $8573-$8574 DB_DATA 1
RANGE $8574-$8576 DW_DATA 1
RANGE $8576-$8578 DW_DATA 1
RANGE $8578-$857A DW_DATA 1
RANGE $857A-$857C DW_DATA 1
RANGE $857C-$857E DW_DATA 1
RANGE $857E-$8580 DW_DATA 1
RANGE $8580-$8582 DW_DATA 1
RANGE $8582-$8584 DW_DATA 1
RANGE $8584-$8586 DW_DATA 1
RANGE $8586-$8588 DW_DATA 1
RANGE $8588-$858A DW_DATA 1
RANGE $858A-$858C DW_DATA 1
RANGE $858C-$858E DW_DATA 1
RANGE $858E-$8590 DW_DATA 1
RANGE $8590-$8592 DW_DATA 1
RANGE $8592-$8594 DW_DATA 1
RANGE $8594-$8596 DW_DATA 1
RANGE $8596-$859B DB_DATA 5
RANGE $859B-$85A0 DB_DATA 5
RANGE $85A0-$85A5 DB_DATA 5
RANGE $85A5-$85AA DB_DATA 5
RANGE $85AA-$85AF DB_DATA 5
RANGE $85AF-$85B4 DB_DATA 5
RANGE $85B4-$85B9 DB_DATA 5
RANGE $85B9-$85BE DB_DATA 5
RANGE $85BE-$85C5 DB_DATA 7
RANGE $85C5-$85CA DB_DATA 5
RANGE $85CA-$85CF DB_DATA 5
RANGE $85CF-$85D4 DB_DATA 5
RANGE $85D4-$85D9 DB_DATA 5
RANGE $85D9-$85DE DB_DATA 5
RANGE $85DE-$85E3 DB_DATA 5
RANGE $85E3-$85E8 DB_DATA 5
RANGE $85E8-$85ED DB_DATA 5
RANGE $85ED-$85F4 DB_DATA 7
RANGE $85F4-$85F9 DB_DATA 5
RANGE $85F9-$85FE DB_DATA 5
RANGE $85FE-$8603 DB_DATA 5
RANGE $8603-$8608 DB_DATA 5
RANGE $8608-$860D DB_DATA 5
RANGE $860D-$8612 DB_DATA 5
RANGE $8612-$8617 DB_DATA 5
RANGE $8617-$861C DB_DATA 5
RANGE $861C-$8623 DB_DATA 7
RANGE $8623-$8628 DB_DATA 5
RANGE $8628-$862D DB_DATA 5
RANGE $862D-$8632 DB_DATA 5
RANGE $8632-$8637 DB_DATA 5
RANGE $8637-$863C DB_DATA 5
RANGE $863C-$8641 DB_DATA 5
RANGE $8641-$8646 DB_DATA 5
RANGE $8646-$864B DB_DATA 5
RANGE $864B-$8652 DB_DATA 7
RANGE $8652-$8657 DB_DATA 5
RANGE $8657-$865C DB_DATA 5
RANGE $865C-$8661 DB_DATA 5
RANGE $8661-$8666 DB_DATA 5
RANGE $8666-$866B DB_DATA 5
RANGE $866B-$8670 DB_DATA 5
RANGE $8670-$8675 DB_DATA 5
RANGE $8675-$867A DB_DATA 5
RANGE $867A-$8681 DB_DATA 7
RANGE $8681-$8686 DB_DATA 5
RANGE $8686-$868B DB_DATA 5
RANGE $868B-$8690 DB_DATA 5
RANGE $8690-$8695 DB_DATA 5
RANGE $8695-$869A DB_DATA 5
RANGE $869A-$869F DB_DATA 5
RANGE $869F-$86A4 DB_DATA 5
RANGE $86A4-$86A9 DB_DATA 5
RANGE $86A9-$86B0 DB_DATA 7
RANGE $86B0-$86B5 DB_DATA 5
RANGE $86B5-$86BA DB_DATA 5
RANGE $86BA-$86BF DB_DATA 5
RANGE $86BF-$86C4 DB_DATA 5
RANGE $86C4-$86C9 DB_DATA 5
RANGE $86C9-$86CE DB_DATA 5
RANGE $86CE-$86D3 DB_DATA 5
RANGE $86D3-$86D8 DB_DATA 5
RANGE $86D8-$86DF DB_DATA 7
RANGE $86DF-$86E4 DB_DATA 5
RANGE $86E4-$86E9 DB_DATA 5
RANGE $86E9-$86EE DB_DATA 5
RANGE $86EE-$86F3 DB_DATA 5
RANGE $86F3-$86F8 DB_DATA 5
RANGE $86F8-$86FD DB_DATA 5
RANGE $86FD-$8702 DB_DATA 5
RANGE $8702-$8707 DB_DATA 5
RANGE $8707-$870E DB_DATA 7
RANGE $870E-$8713 DB_DATA 5
RANGE $8713-$8718 DB_DATA 5
RANGE $8718-$871D DB_DATA 5
RANGE $871D-$8722 DB_DATA 5
RANGE $8722-$8727 DB_DATA 5
RANGE $8727-$872C DB_DATA 5
RANGE $872C-$8731 DB_DATA 5
RANGE $8731-$8736 DB_DATA 5
RANGE $8736-$873D DB_DATA 7
RANGE $873D-$873F DW_DATA 1
RANGE $873F-$8740 DB_DATA 1
RANGE $8740-$8742 DW_DATA 1
RANGE $8742-$8744 DW_DATA 1
RANGE $8744-$8746 DW_DATA 1
RANGE $8746-$8748 DW_DATA 1
RANGE $8748-$874A DW_DATA 1
RANGE $874A-$874C DW_DATA 1
RANGE $874C-$874E DW_DATA 1
RANGE $874E-$8750 DW_DATA 1
RANGE $8750-$8752 DW_DATA 1
RANGE $8752-$8754 DW_DATA 1
RANGE $8754-$8756 DW_DATA 1
RANGE $8756-$8758 DW_DATA 1
RANGE $8758-$875A DW_DATA 1
RANGE $875A-$875C DW_DATA 1
RANGE $875C-$875E DW_DATA 1
RANGE $875E-$8760 DW_DATA 1
RANGE $8760-$8762 DW_DATA 1
RANGE $8762-$8767 DB_DATA 5
RANGE $8767-$876C DB_DATA 5
RANGE $876C-$8771 DB_DATA 5
RANGE $8771-$8774 DB_DATA 3
RANGE $8774-$8777 DB_DATA 3
RANGE $8777-$877A DB_DATA 3
RANGE $877A-$8781 DB_DATA 7
RANGE $8781-$8786 DB_DATA 5
RANGE $8786-$878B DB_DATA 5
RANGE $878B-$8790 DB_DATA 5
RANGE $8790-$8793 DB_DATA 3
RANGE $8793-$8796 DB_DATA 3
RANGE $8796-$8799 DB_DATA 3
RANGE $8799-$87A0 DB_DATA 7
RANGE $87A0-$87A5 DB_DATA 5
RANGE $87A5-$87AA DB_DATA 5
RANGE $87AA-$87AF DB_DATA 5
RANGE $87AF-$87B2 DB_DATA 3
RANGE $87B2-$87B5 DB_DATA 3
RANGE $87B5-$87B8 DB_DATA 3
RANGE $87B8-$87BF DB_DATA 7
RANGE $87BF-$87C4 DB_DATA 5
RANGE $87C4-$87C9 DB_DATA 5
RANGE $87C9-$87CE DB_DATA 5
RANGE $87CE-$87D1 DB_DATA 3
RANGE $87D1-$87D4 DB_DATA 3
RANGE $87D4-$87D7 DB_DATA 3
RANGE $87D7-$87DE DB_DATA 7
RANGE $87DE-$87E3 DB_DATA 5
RANGE $87E3-$87E8 DB_DATA 5
RANGE $87E8-$87ED DB_DATA 5
RANGE $87ED-$87F0 DB_DATA 3
RANGE $87F0-$87F3 DB_DATA 3
RANGE $87F3-$87F6 DB_DATA 3
RANGE $87F6-$87FD DB_DATA 7
RANGE $87FD-$8802 DB_DATA 5
RANGE $8802-$8807 DB_DATA 5
RANGE $8807-$880C DB_DATA 5
RANGE $880C-$880F DB_DATA 3
RANGE $880F-$8812 DB_DATA 3
RANGE $8812-$8815 DB_DATA 3
RANGE $8815-$881C DB_DATA 7
RANGE $881C-$8821 DB_DATA 5
RANGE $8821-$8826 DB_DATA 5
RANGE $8826-$882B DB_DATA 5
RANGE $882B-$882E DB_DATA 3
RANGE $882E-$8831 DB_DATA 3
RANGE $8831-$8834 DB_DATA 3
RANGE $8834-$883B DB_DATA 7
RANGE $883B-$8840 DB_DATA 5
RANGE $8840-$8845 DB_DATA 5
RANGE $8845-$884A DB_DATA 5
RANGE $884A-$884D DB_DATA 3
RANGE $884D-$8850 DB_DATA 3
RANGE $8850-$8853 DB_DATA 3
RANGE $8853-$885A DB_DATA 7
RANGE $885A-$885F DB_DATA 5
RANGE $885F-$8864 DB_DATA 5
RANGE $8864-$8869 DB_DATA 5
RANGE $8869-$886C DB_DATA 3
RANGE $886C-$886F DB_DATA 3
RANGE $886F-$8872 DB_DATA 3
RANGE $8872-$8879 DB_DATA 7
RANGE $8879-$887B DW_DATA 1
RANGE $887B-$887C DB_DATA 1
RANGE $887C-$887E DW_DATA 1
RANGE $887E-$8880 DW_DATA 1
RANGE $8880-$8882 DW_DATA 1
RANGE $8882-$8884 DW_DATA 1
RANGE $8884-$8886 DW_DATA 1
RANGE $8886-$8888 DW_DATA 1
RANGE $8888-$888A DW_DATA 1
RANGE $888A-$888C DW_DATA 1
RANGE $888C-$888E DW_DATA 1
RANGE $888E-$8890 DW_DATA 1
RANGE $8890-$8892 DW_DATA 1
RANGE $8892-$8894 DW_DATA 1
RANGE $8894-$8896 DW_DATA 1
RANGE $8896-$8898 DW_DATA 1
RANGE $8898-$889A DW_DATA 1
RANGE $889A-$889C DW_DATA 1
RANGE $889C-$889E DW_DATA 1
RANGE $889E-$88A3 DB_DATA 5
RANGE $88A3-$88A8 DB_DATA 5
RANGE $88A8-$88AD DB_DATA 5
RANGE $88AD-$88B0 DB_DATA 3
RANGE $88B0-$88B3 DB_DATA 3
RANGE $88B3-$88B6 DB_DATA 3
RANGE $88B6-$88B9 DB_DATA 3
RANGE $88B9-$88C0 DB_DATA 7
RANGE $88C0-$88C5 DB_DATA 5
RANGE $88C5-$88CA DB_DATA 5
RANGE $88CA-$88CF DB_DATA 5
RANGE $88CF-$88D2 DB_DATA 3
RANGE $88D2-$88D5 DB_DATA 3
RANGE $88D5-$88D8 DB_DATA 3
RANGE $88D8-$88DB DB_DATA 3
RANGE $88DB-$88E2 DB_DATA 7
RANGE $88E2-$88E7 DB_DATA 5
RANGE $88E7-$88EC DB_DATA 5
RANGE $88EC-$88F1 DB_DATA 5
RANGE $88F1-$88F4 DB_DATA 3
RANGE $88F4-$88F7 DB_DATA 3
RANGE $88F7-$88FA DB_DATA 3
RANGE $88FA-$88FD DB_DATA 3
RANGE $88FD-$8904 DB_DATA 7
RANGE $8904-$8909 DB_DATA 5
RANGE $8909-$890E DB_DATA 5
RANGE $890E-$8913 DB_DATA 5
RANGE $8913-$8916 DB_DATA 3
RANGE $8916-$8919 DB_DATA 3
RANGE $8919-$891C DB_DATA 3
RANGE $891C-$891F DB_DATA 3
RANGE $891F-$8926 DB_DATA 7
RANGE $8926-$892B DB_DATA 5
RANGE $892B-$8930 DB_DATA 5
RANGE $8930-$8935 DB_DATA 5
RANGE $8935-$8938 DB_DATA 3
RANGE $8938-$893B DB_DATA 3
RANGE $893B-$893E DB_DATA 3
RANGE $893E-$8941 DB_DATA 3
RANGE $8941-$8948 DB_DATA 7
RANGE $8948-$894D DB_DATA 5
RANGE $894D-$8952 DB_DATA 5
RANGE $8952-$8957 DB_DATA 5
RANGE $8957-$895A DB_DATA 3
RANGE $895A-$895D DB_DATA 3
RANGE $895D-$8960 DB_DATA 3
RANGE $8960-$8963 DB_DATA 3
RANGE $8963-$896A DB_DATA 7
RANGE $896A-$896F DB_DATA 5
RANGE $896F-$8974 DB_DATA 5
RANGE $8974-$8979 DB_DATA 5
RANGE $8979-$897C DB_DATA 3
RANGE $897C-$897F DB_DATA 3
RANGE $897F-$8982 DB_DATA 3
RANGE $8982-$8985 DB_DATA 3
RANGE $8985-$898C DB_DATA 7
RANGE $898C-$8991 DB_DATA 5
RANGE $8991-$8996 DB_DATA 5
RANGE $8996-$899B DB_DATA 5
RANGE $899B-$899E DB_DATA 3
RANGE $899E-$89A1 DB_DATA 3
RANGE $89A1-$89A4 DB_DATA 3
RANGE $89A4-$89A7 DB_DATA 3
RANGE $89A7-$89AE DB_DATA 7
RANGE $89AE-$89B3 DB_DATA 5
RANGE $89B3-$89B8 DB_DATA 5
RANGE $89B8-$89BD DB_DATA 5
RANGE $89BD-$89C0 DB_DATA 3
RANGE $89C0-$89C3 DB_DATA 3
RANGE $89C3-$89C6 DB_DATA 3
RANGE $89C6-$89C9 DB_DATA 3
RANGE $89C9-$89D0 DB_DATA 7
RANGE $89D0-$89D2 DW_DATA 1
RANGE $89D2-$89D3 DB_DATA 1
RANGE $89D3-$89D5 DW_DATA 1
RANGE $89D5-$89D6 DB_DATA 1
RANGE $89D6-$89D8 DW_DATA 1
RANGE $89D8-$89D9 DB_DATA 1
RANGE $89D9-$89DB DW_DATA 1
RANGE $89DB-$89DC DB_DATA 1
RANGE $89DC-$89DE DW_DATA 1
RANGE $89DE-$89E0 DW_DATA 1
RANGE $89E0-$89E2 DW_DATA 1
RANGE $89E2-$89E4 DW_DATA 1
RANGE $89E4-$89E6 DW_DATA 1
RANGE $89E6-$89E8 DW_DATA 1
RANGE $89E8-$89EA DW_DATA 1
RANGE $89EA-$89EC DW_DATA 1
RANGE $89EC-$89EE DW_DATA 1
RANGE $89EE-$89F0 DW_DATA 1
RANGE $89F0-$89F2 DW_DATA 1
RANGE $89F2-$89F4 DW_DATA 1
RANGE $89F4-$89F6 DW_DATA 1
RANGE $89F6-$89F8 DW_DATA 1
RANGE $89F8-$89FA DW_DATA 1
RANGE $89FA-$89FC DW_DATA 1
RANGE $89FC-$89FE DW_DATA 1
RANGE $89FE-$8A03 DB_DATA 5
RANGE $8A03-$8A08 DB_DATA 5
RANGE $8A08-$8A0F DB_DATA 7
RANGE $8A0F-$8A14 DB_DATA 5
RANGE $8A14-$8A19 DB_DATA 5
RANGE $8A19-$8A20 DB_DATA 7
RANGE $8A20-$8A25 DB_DATA 5
RANGE $8A25-$8A2A DB_DATA 5
RANGE $8A2A-$8A31 DB_DATA 7
RANGE $8A31-$8A36 DB_DATA 5
RANGE $8A36-$8A3B DB_DATA 5
RANGE $8A3B-$8A42 DB_DATA 7
RANGE $8A42-$8A47 DB_DATA 5
RANGE $8A47-$8A4C DB_DATA 5
RANGE $8A4C-$8A53 DB_DATA 7
RANGE $8A53-$8A58 DB_DATA 5
RANGE $8A58-$8A5D DB_DATA 5
RANGE $8A5D-$8A64 DB_DATA 7
RANGE $8A64-$8A69 DB_DATA 5
RANGE $8A69-$8A6E DB_DATA 5
RANGE $8A6E-$8A75 DB_DATA 7
RANGE $8A75-$8A7A DB_DATA 5
RANGE $8A7A-$8A7F DB_DATA 5
RANGE $8A7F-$8A86 DB_DATA 7
RANGE $8A86-$8A8B DB_DATA 5
RANGE $8A8B-$8A90 DB_DATA 5
RANGE $8A90-$8A97 DB_DATA 7
RANGE $8A97-$8A99 DW_DATA 1
RANGE $8A99-$8A9B DW_DATA 1
RANGE $8A9B-$8A9D DW_DATA 1
RANGE $8A9D-$8A9F DW_DATA 1
RANGE $8A9F-$8AA1 DW_DATA 1
RANGE $8AA1-$8AA3 DW_DATA 1
RANGE $8AA3-$8AA5 DW_DATA 1
RANGE $8AA5-$8AA7 DW_DATA 1
RANGE $8AA7-$8AA9 DW_DATA 1
RANGE $8AA9-$8AAB DW_DATA 1
RANGE $8AAB-$8AAD DW_DATA 1
RANGE $8AAD-$8AAF DW_DATA 1
RANGE $8AAF-$8AB1 DW_DATA 1
RANGE $8AB1-$8AB3 DW_DATA 1
RANGE $8AB3-$8AB5 DW_DATA 1
RANGE $8AB5-$8AB7 DW_DATA 1
RANGE $8AB7-$8AB9 DW_DATA 1
RANGE $8AB9-$8ABE DB_DATA 5
RANGE $8ABE-$8AC3 DB_DATA 5
RANGE $8AC3-$8AC8 DB_DATA 5
RANGE $8AC8-$8ACD DB_DATA 5
RANGE $8ACD-$8AD4 DB_DATA 7
RANGE $8AD4-$8AD9 DB_DATA 5
RANGE $8AD9-$8ADE DB_DATA 5
RANGE $8ADE-$8AE3 DB_DATA 5
RANGE $8AE3-$8AE8 DB_DATA 5
RANGE $8AE8-$8AEF DB_DATA 7
RANGE $8AEF-$8AF4 DB_DATA 5
RANGE $8AF4-$8AF9 DB_DATA 5
RANGE $8AF9-$8AFE DB_DATA 5
RANGE $8AFE-$8B03 DB_DATA 5
RANGE $8B03-$8B0A DB_DATA 7
RANGE $8B0A-$8B0F DB_DATA 5
RANGE $8B0F-$8B14 DB_DATA 5
RANGE $8B14-$8B19 DB_DATA 5
RANGE $8B19-$8B1E DB_DATA 5
RANGE $8B1E-$8B25 DB_DATA 7
RANGE $8B25-$8B2A DB_DATA 5
RANGE $8B2A-$8B2F DB_DATA 5
RANGE $8B2F-$8B34 DB_DATA 5
RANGE $8B34-$8B39 DB_DATA 5
RANGE $8B39-$8B40 DB_DATA 7
RANGE $8B40-$8B45 DB_DATA 5
RANGE $8B45-$8B4A DB_DATA 5
RANGE $8B4A-$8B4F DB_DATA 5
RANGE $8B4F-$8B54 DB_DATA 5
RANGE $8B54-$8B5B DB_DATA 7
RANGE $8B5B-$8B60 DB_DATA 5
RANGE $8B60-$8B65 DB_DATA 5
RANGE $8B65-$8B6A DB_DATA 5
RANGE $8B6A-$8B6F DB_DATA 5
RANGE $8B6F-$8B76 DB_DATA 7
RANGE $8B76-$8B7B DB_DATA 5
RANGE $8B7B-$8B80 DB_DATA 5
RANGE $8B80-$8B85 DB_DATA 5
RANGE $8B85-$8B8A DB_DATA 5
RANGE $8B8A-$8B91 DB_DATA 7
RANGE $8B91-$8B96 DB_DATA 5
RANGE $8B96-$8B9B DB_DATA 5
RANGE $8B9B-$8BA0 DB_DATA 5
RANGE $8BA0-$8BA5 DB_DATA 5
RANGE $8BA5-$8BAC DB_DATA 7
RANGE $8BAC-$8BAE DW_DATA 1
RANGE $8BAE-$8BB0 DW_DATA 1
RANGE $8BB0-$8BB2 DW_DATA 1
RANGE $8BB2-$8BB4 DW_DATA 1
RANGE $8BB4-$8BB6 DW_DATA 1
RANGE $8BB6-$8BB8 DW_DATA 1
RANGE $8BB8-$8BBA DW_DATA 1
RANGE $8BBA-$8BBC DW_DATA 1
RANGE $8BBC-$8BBE DW_DATA 1
RANGE $8BBE-$8BC0 DW_DATA 1
RANGE $8BC0-$8BC2 DW_DATA 1
RANGE $8BC2-$8BC4 DW_DATA 1
RANGE $8BC4-$8BC6 DW_DATA 1
RANGE $8BC6-$8BC8 DW_DATA 1
RANGE $8BC8-$8BCA DW_DATA 1
RANGE $8BCA-$8BCC DW_DATA 1
RANGE $8BCC-$8BCE DW_DATA 1
RANGE $8BCE-$8BD3 DB_DATA 5
RANGE $8BD3-$8BD8 DB_DATA 5
RANGE $8BD8-$8BDD DB_DATA 5
RANGE $8BDD-$8BE2 DB_DATA 5
RANGE $8BE2-$8BE7 DB_DATA 5
RANGE $8BE7-$8BEC DB_DATA 5
RANGE $8BEC-$8BF3 DB_DATA 7
RANGE $8BF3-$8BF8 DB_DATA 5
RANGE $8BF8-$8BFD DB_DATA 5
RANGE $8BFD-$8C02 DB_DATA 5
RANGE $8C02-$8C07 DB_DATA 5
RANGE $8C07-$8C0C DB_DATA 5
RANGE $8C0C-$8C11 DB_DATA 5
RANGE $8C11-$8C18 DB_DATA 7
RANGE $8C18-$8C1D DB_DATA 5
RANGE $8C1D-$8C22 DB_DATA 5
RANGE $8C22-$8C27 DB_DATA 5
RANGE $8C27-$8C2C DB_DATA 5
RANGE $8C2C-$8C31 DB_DATA 5
RANGE $8C31-$8C36 DB_DATA 5
RANGE $8C36-$8C3D DB_DATA 7
RANGE $8C3D-$8C42 DB_DATA 5
RANGE $8C42-$8C47 DB_DATA 5
RANGE $8C47-$8C4C DB_DATA 5
RANGE $8C4C-$8C51 DB_DATA 5
RANGE $8C51-$8C56 DB_DATA 5
RANGE $8C56-$8C5B DB_DATA 5
RANGE $8C5B-$8C62 DB_DATA 7
RANGE $8C62-$8C67 DB_DATA 5
RANGE $8C67-$8C6C DB_DATA 5
RANGE $8C6C-$8C71 DB_DATA 5
RANGE $8C71-$8C76 DB_DATA 5
RANGE $8C76-$8C7B DB_DATA 5
RANGE $8C7B-$8C80 DB_DATA 5
RANGE $8C80-$8C87 DB_DATA 7
RANGE $8C87-$8C8C DB_DATA 5
RANGE $8C8C-$8C91 DB_DATA 5
RANGE $8C91-$8C96 DB_DATA 5
RANGE $8C96-$8C9B DB_DATA 5
RANGE $8C9B-$8CA0 DB_DATA 5
RANGE $8CA0-$8CA5 DB_DATA 5
RANGE $8CA5-$8CAC DB_DATA 7
RANGE $8CAC-$8CB1 DB_DATA 5
RANGE $8CB1-$8CB6 DB_DATA 5
RANGE $8CB6-$8CBB DB_DATA 5
RANGE $8CBB-$8CC0 DB_DATA 5
RANGE $8CC0-$8CC5 DB_DATA 5
RANGE $8CC5-$8CCA DB_DATA 5
RANGE $8CCA-$8CD1 DB_DATA 7
RANGE $8CD1-$8CD6 DB_DATA 5
RANGE $8CD6-$8CDB DB_DATA 5
RANGE $8CDB-$8CE0 DB_DATA 5
RANGE $8CE0-$8CE5 DB_DATA 5
RANGE $8CE5-$8CEA DB_DATA 5
RANGE $8CEA-$8CEF DB_DATA 5
RANGE $8CEF-$8CF6 DB_DATA 7
RANGE $8CF6-$8CFB DB_DATA 5
RANGE $8CFB-$8D00 DB_DATA 5
RANGE $8D00-$8D05 DB_DATA 5
RANGE $8D05-$8D0A DB_DATA 5
RANGE $8D0A-$8D0F DB_DATA 5
RANGE $8D0F-$8D14 DB_DATA 5
RANGE $8D14-$8D1B DB_DATA 7
RANGE $8D1B-$8D1D DW_DATA 1
RANGE $8D1D-$8D1F DW_DATA 1
RANGE $8D1F-$8D24 DB_DATA 5
RANGE $8D24-$8D29 DB_DATA 5
RANGE $8D29-$8D2E DB_DATA 5
RANGE $8D2E-$8D33 DB_DATA 5
RANGE $8D33-$8D38 DB_DATA 5
RANGE $8D38-$8D3D DB_DATA 5
RANGE $8D3D-$8D42 DB_DATA 5
RANGE $8D42-$8D47 DB_DATA 5
RANGE $8D47-$8D4E DB_DATA 7
RANGE $8D4E-$8D50 DW_DATA 1
RANGE $8D50-$8D51 DB_DATA 1
RANGE $8D51-$8D53 DW_DATA 1
RANGE $8D53-$8D55 DW_DATA 1
RANGE $8D55-$8D57 DW_DATA 1
RANGE $8D57-$8D59 DW_DATA 1
RANGE $8D59-$8D5B DW_DATA 1
RANGE $8D5B-$8D5D DW_DATA 1
RANGE $8D5D-$8D5F DW_DATA 1
RANGE $8D5F-$8D61 DW_DATA 1
RANGE $8D61-$8D63 DW_DATA 1
RANGE $8D63-$8D65 DW_DATA 1
RANGE $8D65-$8D67 DW_DATA 1
RANGE $8D67-$8D69 DW_DATA 1
RANGE $8D69-$8D6B DW_DATA 1
RANGE $8D6B-$8D6D DW_DATA 1
RANGE $8D6D-$8D6F DW_DATA 1
RANGE $8D6F-$8D71 DW_DATA 1
RANGE $8D71-$8D73 DW_DATA 1
RANGE $8D73-$8D78 DB_DATA 5
RANGE $8D78-$8D7D DB_DATA 5
RANGE $8D7D-$8D82 DB_DATA 5
RANGE $8D82-$8D87 DB_DATA 5
RANGE $8D87-$8D8C DB_DATA 5
RANGE $8D8C-$8D91 DB_DATA 5
RANGE $8D91-$8D96 DB_DATA 5
RANGE $8D96-$8D9B DB_DATA 5
RANGE $8D9B-$8DA2 DB_DATA 7
RANGE $8DA2-$8DA7 DB_DATA 5
RANGE $8DA7-$8DAC DB_DATA 5
RANGE $8DAC-$8DB1 DB_DATA 5
RANGE $8DB1-$8DB6 DB_DATA 5
RANGE $8DB6-$8DBB DB_DATA 5
RANGE $8DBB-$8DC0 DB_DATA 5
RANGE $8DC0-$8DC5 DB_DATA 5
RANGE $8DC5-$8DCA DB_DATA 5
RANGE $8DCA-$8DD1 DB_DATA 7
RANGE $8DD1-$8DD6 DB_DATA 5
RANGE $8DD6-$8DDB DB_DATA 5
RANGE $8DDB-$8DE0 DB_DATA 5
RANGE $8DE0-$8DE5 DB_DATA 5
RANGE $8DE5-$8DEA DB_DATA 5
RANGE $8DEA-$8DEF DB_DATA 5
RANGE $8DEF-$8DF4 DB_DATA 5
RANGE $8DF4-$8DF9 DB_DATA 5
RANGE $8DF9-$8E00 DB_DATA 7
RANGE $8E00-$8E05 DB_DATA 5
RANGE $8E05-$8E0A DB_DATA 5
RANGE $8E0A-$8E0F DB_DATA 5
RANGE $8E0F-$8E14 DB_DATA 5
RANGE $8E14-$8E19 DB_DATA 5
RANGE $8E19-$8E1E DB_DATA 5
RANGE $8E1E-$8E23 DB_DATA 5
RANGE $8E23-$8E28 DB_DATA 5
RANGE $8E28-$8E2F DB_DATA 7
RANGE $8E2F-$8E34 DB_DATA 5
RANGE $8E34-$8E39 DB_DATA 5
RANGE $8E39-$8E3E DB_DATA 5
RANGE $8E3E-$8E43 DB_DATA 5
RANGE $8E43-$8E48 DB_DATA 5
RANGE $8E48-$8E4D DB_DATA 5
RANGE $8E4D-$8E52 DB_DATA 5
RANGE $8E52-$8E57 DB_DATA 5
RANGE $8E57-$8E5E DB_DATA 7
RANGE $8E5E-$8E63 DB_DATA 5
RANGE $8E63-$8E68 DB_DATA 5
RANGE $8E68-$8E6D DB_DATA 5
RANGE $8E6D-$8E72 DB_DATA 5
RANGE $8E72-$8E77 DB_DATA 5
RANGE $8E77-$8E7C DB_DATA 5
RANGE $8E7C-$8E81 DB_DATA 5
RANGE $8E81-$8E86 DB_DATA 5
RANGE $8E86-$8E8D DB_DATA 7
RANGE $8E8D-$8E92 DB_DATA 5
RANGE $8E92-$8E97 DB_DATA 5
RANGE $8E97-$8E9C DB_DATA 5
RANGE $8E9C-$8EA1 DB_DATA 5
RANGE $8EA1-$8EA6 DB_DATA 5
RANGE $8EA6-$8EAB DB_DATA 5
RANGE $8EAB-$8EB0 DB_DATA 5
RANGE $8EB0-$8EB5 DB_DATA 5
RANGE $8EB5-$8EBC DB_DATA 7
RANGE $8EBC-$8EC1 DB_DATA 5
RANGE $8EC1-$8EC6 DB_DATA 5
RANGE $8EC6-$8ECB DB_DATA 5
RANGE $8ECB-$8ED0 DB_DATA 5
RANGE $8ED0-$8ED5 DB_DATA 5
RANGE $8ED5-$8EDA DB_DATA 5
RANGE $8EDA-$8EDF DB_DATA 5
RANGE $8EDF-$8EE4 DB_DATA 5
RANGE $8EE4-$8EEB DB_DATA 7
RANGE $8EEB-$8EF0 DB_DATA 5
RANGE $8EF0-$8EF5 DB_DATA 5
RANGE $8EF5-$8EFA DB_DATA 5
RANGE $8EFA-$8EFF DB_DATA 5
RANGE $8EFF-$8F04 DB_DATA 5
RANGE $8F04-$8F09 DB_DATA 5
RANGE $8F09-$8F0E DB_DATA 5
RANGE $8F0E-$8F13 DB_DATA 5
RANGE $8F13-$8F1A DB_DATA 7
RANGE $8F1A-$8F1C DW_DATA 1
RANGE $8F1C-$8F1D DB_DATA 1
RANGE $8F1D-$8F1F DW_DATA 1
RANGE $8F1F-$8F20 DB_DATA 1
RANGE $8F20-$8F22 DW_DATA 1
RANGE $8F22-$8F24 DW_DATA 1
RANGE $8F24-$8F26 DW_DATA 1
RANGE $8F26-$8F28 DW_DATA 1
RANGE $8F28-$8F2A DW_DATA 1
RANGE $8F2A-$8F2C DW_DATA 1
RANGE $8F2C-$8F2E DW_DATA 1
RANGE $8F2E-$8F30 DW_DATA 1
RANGE $8F30-$8F32 DW_DATA 1
RANGE $8F32-$8F34 DW_DATA 1
RANGE $8F34-$8F36 DW_DATA 1
RANGE $8F36-$8F38 DW_DATA 1
RANGE $8F38-$8F3A DW_DATA 1
RANGE $8F3A-$8F3C DW_DATA 1
RANGE $8F3C-$8F3E DW_DATA 1
RANGE $8F3E-$8F40 DW_DATA 1
RANGE $8F40-$8F42 DW_DATA 1
RANGE $8F42-$8F47 DB_DATA 5
RANGE $8F47-$8F4C DB_DATA 5
RANGE $8F4C-$8F51 DB_DATA 5
RANGE $8F51-$8F56 DB_DATA 5
RANGE $8F56-$8F5B DB_DATA 5
RANGE $8F5B-$8F60 DB_DATA 5
RANGE $8F60-$8F65 DB_DATA 5
RANGE $8F65-$8F6A DB_DATA 5
RANGE $8F6A-$8F71 DB_DATA 7
RANGE $8F71-$8F76 DB_DATA 5
RANGE $8F76-$8F7B DB_DATA 5
RANGE $8F7B-$8F80 DB_DATA 5
RANGE $8F80-$8F85 DB_DATA 5
RANGE $8F85-$8F8A DB_DATA 5
RANGE $8F8A-$8F8F DB_DATA 5
RANGE $8F8F-$8F94 DB_DATA 5
RANGE $8F94-$8F99 DB_DATA 5
RANGE $8F99-$8FA0 DB_DATA 7
RANGE $8FA0-$8FA5 DB_DATA 5
RANGE $8FA5-$8FAA DB_DATA 5
RANGE $8FAA-$8FAF DB_DATA 5
RANGE $8FAF-$8FB4 DB_DATA 5
RANGE $8FB4-$8FB9 DB_DATA 5
RANGE $8FB9-$8FBE DB_DATA 5
RANGE $8FBE-$8FC3 DB_DATA 5
RANGE $8FC3-$8FC8 DB_DATA 5
RANGE $8FC8-$8FCF DB_DATA 7
RANGE $8FCF-$8FD4 DB_DATA 5
RANGE $8FD4-$8FD9 DB_DATA 5
RANGE $8FD9-$8FDE DB_DATA 5
RANGE $8FDE-$8FE3 DB_DATA 5
RANGE $8FE3-$8FE8 DB_DATA 5
RANGE $8FE8-$8FED DB_DATA 5
RANGE $8FED-$8FF2 DB_DATA 5
RANGE $8FF2-$8FF7 DB_DATA 5
RANGE $8FF7-$8FFE DB_DATA 7
RANGE $8FFE-$9003 DB_DATA 5
RANGE $9003-$9008 DB_DATA 5
RANGE $9008-$900D DB_DATA 5
RANGE $900D-$9012 DB_DATA 5
RANGE $9012-$9017 DB_DATA 5
RANGE $9017-$901C DB_DATA 5
RANGE $901C-$9021 DB_DATA 5
RANGE $9021-$9026 DB_DATA 5
RANGE $9026-$902D DB_DATA 7
RANGE $902D-$9032 DB_DATA 5
RANGE $9032-$9037 DB_DATA 5
RANGE $9037-$903C DB_DATA 5
RANGE $903C-$9041 DB_DATA 5
RANGE $9041-$9046 DB_DATA 5
RANGE $9046-$904B DB_DATA 5
RANGE $904B-$9050 DB_DATA 5
RANGE $9050-$9055 DB_DATA 5
RANGE $9055-$905C DB_DATA 7
RANGE $905C-$9061 DB_DATA 5
RANGE $9061-$9066 DB_DATA 5
RANGE $9066-$906B DB_DATA 5
RANGE $906B-$9070 DB_DATA 5
RANGE $9070-$9075 DB_DATA 5
RANGE $9075-$907A DB_DATA 5
RANGE $907A-$907F DB_DATA 5
RANGE $907F-$9084 DB_DATA 5
RANGE $9084-$908B DB_DATA 7
RANGE $908B-$9090 DB_DATA 5
RANGE $9090-$9095 DB_DATA 5
RANGE $9095-$909A DB_DATA 5
RANGE $909A-$909F DB_DATA 5
RANGE $909F-$90A4 DB_DATA 5
RANGE $90A4-$90A9 DB_DATA 5
RANGE $90A9-$90AE DB_DATA 5
RANGE $90AE-$90B3 DB_DATA 5
RANGE $90B3-$90BA DB_DATA 7
RANGE $90BA-$90BF DB_DATA 5
RANGE $90BF-$90C4 DB_DATA 5
RANGE $90C4-$90C9 DB_DATA 5
RANGE $90C9-$90CE DB_DATA 5
RANGE $90CE-$90D3 DB_DATA 5
RANGE $90D3-$90D8 DB_DATA 5
RANGE $90D8-$90DD DB_DATA 5
RANGE $90DD-$90E2 DB_DATA 5
RANGE $90E2-$90E9 DB_DATA 7
RANGE $90E9-$90EB DW_DATA 1
RANGE $90EB-$90ED DW_DATA 1
RANGE $90ED-$90EF DW_DATA 1
RANGE $90EF-$90F1 DW_DATA 1
RANGE $90F1-$90F3 DW_DATA 1
RANGE $90F3-$90F5 DW_DATA 1
RANGE $90F5-$90F7 DW_DATA 1
RANGE $90F7-$90F9 DW_DATA 1
RANGE $90F9-$90FB DW_DATA 1
RANGE $90FB-$90FD DW_DATA 1
RANGE $90FD-$90FF DW_DATA 1
RANGE $90FF-$9101 DW_DATA 1
RANGE $9101-$9103 DW_DATA 1
RANGE $9103-$9105 DW_DATA 1
RANGE $9105-$9107 DW_DATA 1
RANGE $9107-$9109 DW_DATA 1
RANGE $9109-$910B DW_DATA 1
RANGE $910B-$9110 DB_DATA 5
RANGE $9110-$9115 DB_DATA 5
RANGE $9115-$911A DB_DATA 5
RANGE $911A-$911F DB_DATA 5
RANGE $911F-$9124 DB_DATA 5
RANGE $9124-$9129 DB_DATA 5
RANGE $9129-$912E DB_DATA 5
RANGE $912E-$9135 DB_DATA 7
RANGE $9135-$913A DB_DATA 5
RANGE $913A-$913F DB_DATA 5
RANGE $913F-$9144 DB_DATA 5
RANGE $9144-$9149 DB_DATA 5
RANGE $9149-$914E DB_DATA 5
RANGE $914E-$9153 DB_DATA 5
RANGE $9153-$9158 DB_DATA 5
RANGE $9158-$915F DB_DATA 7
RANGE $915F-$9164 DB_DATA 5
RANGE $9164-$9169 DB_DATA 5
RANGE $9169-$916E DB_DATA 5
RANGE $916E-$9173 DB_DATA 5
RANGE $9173-$9178 DB_DATA 5
RANGE $9178-$917D DB_DATA 5
RANGE $917D-$9182 DB_DATA 5
RANGE $9182-$9189 DB_DATA 7
RANGE $9189-$918E DB_DATA 5
RANGE $918E-$9193 DB_DATA 5
RANGE $9193-$9198 DB_DATA 5
RANGE $9198-$919D DB_DATA 5
RANGE $919D-$91A2 DB_DATA 5
RANGE $91A2-$91A7 DB_DATA 5
RANGE $91A7-$91AC DB_DATA 5
RANGE $91AC-$91B3 DB_DATA 7
RANGE $91B3-$91B8 DB_DATA 5
RANGE $91B8-$91BD DB_DATA 5
RANGE $91BD-$91C2 DB_DATA 5
RANGE $91C2-$91C7 DB_DATA 5
RANGE $91C7-$91CC DB_DATA 5
RANGE $91CC-$91D1 DB_DATA 5
RANGE $91D1-$91D6 DB_DATA 5
RANGE $91D6-$91DD DB_DATA 7
RANGE $91DD-$91E2 DB_DATA 5
RANGE $91E2-$91E7 DB_DATA 5
RANGE $91E7-$91EC DB_DATA 5
RANGE $91EC-$91F1 DB_DATA 5
RANGE $91F1-$91F6 DB_DATA 5
RANGE $91F6-$91FB DB_DATA 5
RANGE $91FB-$9200 DB_DATA 5
RANGE $9200-$9207 DB_DATA 7
RANGE $9207-$920C DB_DATA 5
RANGE $920C-$9211 DB_DATA 5
RANGE $9211-$9216 DB_DATA 5
RANGE $9216-$921B DB_DATA 5
RANGE $921B-$9220 DB_DATA 5
RANGE $9220-$9225 DB_DATA 5
RANGE $9225-$922A DB_DATA 5
RANGE $922A-$9231 DB_DATA 7
RANGE $9231-$9236 DB_DATA 5
RANGE $9236-$923B DB_DATA 5
RANGE $923B-$9240 DB_DATA 5
RANGE $9240-$9245 DB_DATA 5
RANGE $9245-$924A DB_DATA 5
RANGE $924A-$924F DB_DATA 5
RANGE $924F-$9254 DB_DATA 5
RANGE $9254-$925B DB_DATA 7
RANGE $925B-$9260 DB_DATA 5
RANGE $9260-$9265 DB_DATA 5
RANGE $9265-$926A DB_DATA 5
RANGE $926A-$926F DB_DATA 5
RANGE $926F-$9274 DB_DATA 5
RANGE $9274-$9279 DB_DATA 5
RANGE $9279-$927E DB_DATA 5
RANGE $927E-$9285 DB_DATA 7
RANGE $9285-$9287 DW_DATA 1
RANGE $9287-$9288 DB_DATA 1
RANGE $9288-$928A DW_DATA 1
RANGE $928A-$928B DB_DATA 1
RANGE $928B-$928D DW_DATA 1
RANGE $928D-$928F DW_DATA 1
RANGE $928F-$9291 DW_DATA 1
RANGE $9291-$9293 DW_DATA 1
RANGE $9293-$9295 DW_DATA 1
RANGE $9295-$9297 DW_DATA 1
RANGE $9297-$9299 DW_DATA 1
RANGE $9299-$929B DW_DATA 1
RANGE $929B-$929D DW_DATA 1
RANGE $929D-$929F DW_DATA 1
RANGE $929F-$92A1 DW_DATA 1
RANGE $92A1-$92A3 DW_DATA 1
RANGE $92A3-$92A5 DW_DATA 1
RANGE $92A5-$92A7 DW_DATA 1
RANGE $92A7-$92A9 DW_DATA 1
RANGE $92A9-$92AB DW_DATA 1
RANGE $92AB-$92AD DW_DATA 1
RANGE $92AD-$92B2 DB_DATA 5
RANGE $92B2-$92B7 DB_DATA 5
RANGE $92B7-$92BC DB_DATA 5
RANGE $92BC-$92BF DB_DATA 3
RANGE $92BF-$92C2 DB_DATA 3
RANGE $92C2-$92C5 DB_DATA 3
RANGE $92C5-$92CA DB_DATA 5
RANGE $92CA-$92CF DB_DATA 5
RANGE $92CF-$92D4 DB_DATA 5
RANGE $92D4-$92D9 DB_DATA 5
RANGE $92D9-$92E0 DB_DATA 7
RANGE $92E0-$92E5 DB_DATA 5
RANGE $92E5-$92EA DB_DATA 5
RANGE $92EA-$92EF DB_DATA 5
RANGE $92EF-$92F2 DB_DATA 3
RANGE $92F2-$92F5 DB_DATA 3
RANGE $92F5-$92F8 DB_DATA 3
RANGE $92F8-$92FD DB_DATA 5
RANGE $92FD-$9302 DB_DATA 5
RANGE $9302-$9307 DB_DATA 5
RANGE $9307-$930C DB_DATA 5
RANGE $930C-$9313 DB_DATA 7
RANGE $9313-$9318 DB_DATA 5
RANGE $9318-$931D DB_DATA 5
RANGE $931D-$9322 DB_DATA 5
RANGE $9322-$9325 DB_DATA 3
RANGE $9325-$9328 DB_DATA 3
RANGE $9328-$932B DB_DATA 3
RANGE $932B-$9330 DB_DATA 5
RANGE $9330-$9335 DB_DATA 5
RANGE $9335-$933A DB_DATA 5
RANGE $933A-$933F DB_DATA 5
RANGE $933F-$9346 DB_DATA 7
RANGE $9346-$934B DB_DATA 5
RANGE $934B-$9350 DB_DATA 5
RANGE $9350-$9355 DB_DATA 5
RANGE $9355-$9358 DB_DATA 3
RANGE $9358-$935B DB_DATA 3
RANGE $935B-$935E DB_DATA 3
RANGE $935E-$9363 DB_DATA 5
RANGE $9363-$9368 DB_DATA 5
RANGE $9368-$936D DB_DATA 5
RANGE $936D-$9372 DB_DATA 5
RANGE $9372-$9379 DB_DATA 7
RANGE $9379-$937E DB_DATA 5
RANGE $937E-$9383 DB_DATA 5
RANGE $9383-$9388 DB_DATA 5
RANGE $9388-$938B DB_DATA 3
RANGE $938B-$938E DB_DATA 3
RANGE $938E-$9391 DB_DATA 3
RANGE $9391-$9396 DB_DATA 5
RANGE $9396-$939B DB_DATA 5
RANGE $939B-$93A0 DB_DATA 5
RANGE $93A0-$93A5 DB_DATA 5
RANGE $93A5-$93AC DB_DATA 7
RANGE $93AC-$93B1 DB_DATA 5
RANGE $93B1-$93B6 DB_DATA 5
RANGE $93B6-$93BB DB_DATA 5
RANGE $93BB-$93BE DB_DATA 3
RANGE $93BE-$93C1 DB_DATA 3
RANGE $93C1-$93C4 DB_DATA 3
RANGE $93C4-$93C9 DB_DATA 5
RANGE $93C9-$93CE DB_DATA 5
RANGE $93CE-$93D3 DB_DATA 5
RANGE $93D3-$93D8 DB_DATA 5
RANGE $93D8-$93DF DB_DATA 7
RANGE $93DF-$93E4 DB_DATA 5
RANGE $93E4-$93E9 DB_DATA 5
RANGE $93E9-$93EE DB_DATA 5
RANGE $93EE-$93F1 DB_DATA 3
RANGE $93F1-$93F4 DB_DATA 3
RANGE $93F4-$93F7 DB_DATA 3
RANGE $93F7-$93FC DB_DATA 5
RANGE $93FC-$9401 DB_DATA 5
RANGE $9401-$9406 DB_DATA 5
RANGE $9406-$940B DB_DATA 5
RANGE $940B-$9412 DB_DATA 7
RANGE $9412-$9417 DB_DATA 5
RANGE $9417-$941C DB_DATA 5
RANGE $941C-$9421 DB_DATA 5
RANGE $9421-$9424 DB_DATA 3
RANGE $9424-$9427 DB_DATA 3
RANGE $9427-$942A DB_DATA 3
RANGE $942A-$942F DB_DATA 5
RANGE $942F-$9434 DB_DATA 5
RANGE $9434-$9439 DB_DATA 5
RANGE $9439-$943E DB_DATA 5
RANGE $943E-$9445 DB_DATA 7
RANGE $9445-$944A DB_DATA 5
RANGE $944A-$944F DB_DATA 5
RANGE $944F-$9454 DB_DATA 5
RANGE $9454-$9457 DB_DATA 3
RANGE $9457-$945A DB_DATA 3
RANGE $945A-$945D DB_DATA 3
RANGE $945D-$9462 DB_DATA 5
RANGE $9462-$9467 DB_DATA 5
RANGE $9467-$946C DB_DATA 5
RANGE $946C-$9471 DB_DATA 5
RANGE $9471-$9478 DB_DATA 7
RANGE $9478-$947A DW_DATA 1
RANGE $947A-$947C DW_DATA 1
RANGE $947C-$947E DW_DATA 1
RANGE $947E-$9480 DW_DATA 1
RANGE $9480-$9482 DW_DATA 1
RANGE $9482-$9484 DW_DATA 1
RANGE $9484-$9486 DW_DATA 1
RANGE $9486-$9488 DW_DATA 1
RANGE $9488-$948A DW_DATA 1
RANGE $948A-$948C DW_DATA 1
RANGE $948C-$948E DW_DATA 1
RANGE $948E-$9490 DW_DATA 1
RANGE $9490-$9492 DW_DATA 1
RANGE $9492-$9494 DW_DATA 1
RANGE $9494-$9496 DW_DATA 1
RANGE $9496-$9498 DW_DATA 1
RANGE $9498-$949A DW_DATA 1
RANGE $949A-$949F DB_DATA 5
RANGE $949F-$94A4 DB_DATA 5
RANGE $94A4-$94A9 DB_DATA 5
RANGE $94A9-$94AC DB_DATA 3
RANGE $94AC-$94AF DB_DATA 3
RANGE $94AF-$94B2 DB_DATA 3
RANGE $94B2-$94B9 DB_DATA 7
RANGE $94B9-$94BE DB_DATA 5
RANGE $94BE-$94C3 DB_DATA 5
RANGE $94C3-$94C8 DB_DATA 5
RANGE $94C8-$94CB DB_DATA 3
RANGE $94CB-$94CE DB_DATA 3
RANGE $94CE-$94D1 DB_DATA 3
RANGE $94D1-$94D8 DB_DATA 7
RANGE $94D8-$94DD DB_DATA 5
RANGE $94DD-$94E2 DB_DATA 5
RANGE $94E2-$94E7 DB_DATA 5
RANGE $94E7-$94EA DB_DATA 3
RANGE $94EA-$94ED DB_DATA 3
RANGE $94ED-$94F0 DB_DATA 3
RANGE $94F0-$94F7 DB_DATA 7
RANGE $94F7-$94FC DB_DATA 5
RANGE $94FC-$9501 DB_DATA 5
RANGE $9501-$9506 DB_DATA 5
RANGE $9506-$9509 DB_DATA 3
RANGE $9509-$950C DB_DATA 3
RANGE $950C-$950F DB_DATA 3
RANGE $950F-$9516 DB_DATA 7
RANGE $9516-$951B DB_DATA 5
RANGE $951B-$9520 DB_DATA 5
RANGE $9520-$9525 DB_DATA 5
RANGE $9525-$9528 DB_DATA 3
RANGE $9528-$952B DB_DATA 3
RANGE $952B-$952E DB_DATA 3
RANGE $952E-$9535 DB_DATA 7
RANGE $9535-$953A DB_DATA 5
RANGE $953A-$953F DB_DATA 5
RANGE $953F-$9544 DB_DATA 5
RANGE $9544-$9547 DB_DATA 3
RANGE $9547-$954A DB_DATA 3
RANGE $954A-$954D DB_DATA 3
RANGE $954D-$9554 DB_DATA 7
RANGE $9554-$9559 DB_DATA 5
RANGE $9559-$955E DB_DATA 5
RANGE $955E-$9563 DB_DATA 5
RANGE $9563-$9566 DB_DATA 3
RANGE $9566-$9569 DB_DATA 3
RANGE $9569-$956C DB_DATA 3
RANGE $956C-$9573 DB_DATA 7
RANGE $9573-$9578 DB_DATA 5
RANGE $9578-$957D DB_DATA 5
RANGE $957D-$9582 DB_DATA 5
RANGE $9582-$9585 DB_DATA 3
RANGE $9585-$9588 DB_DATA 3
RANGE $9588-$958B DB_DATA 3
RANGE $958B-$9592 DB_DATA 7
RANGE $9592-$9597 DB_DATA 5
RANGE $9597-$959C DB_DATA 5
RANGE $959C-$95A1 DB_DATA 5
RANGE $95A1-$95A4 DB_DATA 3
RANGE $95A4-$95A7 DB_DATA 3
RANGE $95A7-$95AA DB_DATA 3
RANGE $95AA-$95B1 DB_DATA 7
RANGE $95B1-$95B3 DW_DATA 1
RANGE $95B3-$95B4 DB_DATA 1
RANGE $95B4-$95B6 DW_DATA 1
RANGE $95B6-$95B8 DW_DATA 1
RANGE $95B8-$95BA DW_DATA 1
RANGE $95BA-$95BC DW_DATA 1
RANGE $95BC-$95BE DW_DATA 1
RANGE $95BE-$95C0 DW_DATA 1
RANGE $95C0-$95C2 DW_DATA 1
RANGE $95C2-$95C4 DW_DATA 1
RANGE $95C4-$95C6 DW_DATA 1
RANGE $95C6-$95C8 DW_DATA 1
RANGE $95C8-$95CA DW_DATA 1
RANGE $95CA-$95CC DW_DATA 1
RANGE $95CC-$95CE DW_DATA 1
RANGE $95CE-$95D0 DW_DATA 1
RANGE $95D0-$95D2 DW_DATA 1
RANGE $95D2-$95D4 DW_DATA 1
RANGE $95D4-$95D6 DW_DATA 1
RANGE $95D6-$95DB DB_DATA 5
RANGE $95DB-$95E0 DB_DATA 5
RANGE $95E0-$95E5 DB_DATA 5
RANGE $95E5-$95EC DB_DATA 7
RANGE $95EC-$95F1 DB_DATA 5
RANGE $95F1-$95F6 DB_DATA 5
RANGE $95F6-$95FB DB_DATA 5
RANGE $95FB-$9602 DB_DATA 7
RANGE $9602-$9607 DB_DATA 5
RANGE $9607-$960C DB_DATA 5
RANGE $960C-$9611 DB_DATA 5
RANGE $9611-$9618 DB_DATA 7
RANGE $9618-$961D DB_DATA 5
RANGE $961D-$9622 DB_DATA 5
RANGE $9622-$9627 DB_DATA 5
RANGE $9627-$962E DB_DATA 7
RANGE $962E-$9633 DB_DATA 5
RANGE $9633-$9638 DB_DATA 5
RANGE $9638-$963D DB_DATA 5
RANGE $963D-$9644 DB_DATA 7
RANGE $9644-$9649 DB_DATA 5
RANGE $9649-$964E DB_DATA 5
RANGE $964E-$9653 DB_DATA 5
RANGE $9653-$965A DB_DATA 7
RANGE $965A-$965F DB_DATA 5
RANGE $965F-$9664 DB_DATA 5
RANGE $9664-$9669 DB_DATA 5
RANGE $9669-$9670 DB_DATA 7
RANGE $9670-$9675 DB_DATA 5
RANGE $9675-$967A DB_DATA 5
RANGE $967A-$967F DB_DATA 5
RANGE $967F-$9686 DB_DATA 7
RANGE $9686-$968B DB_DATA 5
RANGE $968B-$9690 DB_DATA 5
RANGE $9690-$9695 DB_DATA 5
RANGE $9695-$969C DB_DATA 7
RANGE $969C-$969E DW_DATA 1
RANGE $969E-$969F DB_DATA 1
RANGE $969F-$96A4 DB_DATA 5
RANGE $96A4-$96A9 DB_DATA 5
RANGE $96A9-$96AE DB_DATA 5
RANGE $96AE-$96B1 DB_DATA 3
RANGE $96B1-$96B6 DB_DATA 5
RANGE $96B6-$96BB DB_DATA 5
RANGE $96BB-$96C0 DB_DATA 5
RANGE $96C0-$96C5 DB_DATA 5
RANGE $96C5-$96CA DB_DATA 5
RANGE $96CA-$96CF DB_DATA 5
RANGE $96CF-$96D2 DB_DATA 3
RANGE $96D2-$96D7 DB_DATA 5
RANGE $96D7-$96DC DB_DATA 5
RANGE $96DC-$96E1 DB_DATA 5
RANGE $96E1-$96E6 DB_DATA 5
RANGE $96E6-$96EB DB_DATA 5
RANGE $96EB-$96F0 DB_DATA 5
RANGE $96F0-$96F5 DB_DATA 5
RANGE $96F5-$96FA DB_DATA 5
RANGE $96FA-$96FF DB_DATA 5
RANGE $96FF-$9704 DB_DATA 5
RANGE $9704-$9709 DB_DATA 5
RANGE $9709-$970E DB_DATA 5
RANGE $970E-$9713 DB_DATA 5
RANGE $9713-$9716 DB_DATA 3
RANGE $9716-$971B DB_DATA 5
RANGE $971B-$9720 DB_DATA 5
RANGE $9720-$9725 DB_DATA 5
RANGE $9725-$972A DB_DATA 5
RANGE $972A-$972F DB_DATA 5
RANGE $972F-$9734 DB_DATA 5
RANGE $9734-$9739 DB_DATA 5
RANGE $9739-$973E DB_DATA 5
RANGE $973E-$9741 DB_DATA 3
RANGE $9741-$9744 DB_DATA 3
RANGE $9744-$9749 DB_DATA 5
RANGE $9749-$974E DB_DATA 5
RANGE $974E-$9753 DB_DATA 5
RANGE $9753-$9758 DB_DATA 5
RANGE $9758-$975B DB_DATA 3
RANGE $975B-$975E DB_DATA 3
RANGE $975E-$9761 DB_DATA 3
RANGE $9761-$9766 DB_DATA 5
RANGE $9766-$976B DB_DATA 5
RANGE $976B-$9770 DB_DATA 5
RANGE $9770-$9775 DB_DATA 5
RANGE $9775-$977A DB_DATA 5
RANGE $977A-$977D DB_DATA 3
RANGE $977D-$9780 DB_DATA 3
RANGE $9780-$9783 DB_DATA 3
RANGE $9783-$9786 DB_DATA 3
RANGE $9786-$9789 DB_DATA 3
RANGE $9789-$978C DB_DATA 3
RANGE $978C-$9791 DB_DATA 5
RANGE $9791-$9794 DB_DATA 3
RANGE $9794-$9799 DB_DATA 5
RANGE $9799-$979E DB_DATA 5
RANGE $979E-$97A3 DB_DATA 5
RANGE $97A3-$97A8 DB_DATA 5
RANGE $97A8-$97AD DB_DATA 5
RANGE $97AD-$97B0 DB_DATA 3
RANGE $97B0-$97B3 DB_DATA 3
RANGE $97B3-$97B6 DB_DATA 3
RANGE $97B6-$97B9 DB_DATA 3
RANGE $97B9-$97BC DB_DATA 3
RANGE $97BC-$97BF DB_DATA 3
RANGE $97BF-$97C4 DB_DATA 5
RANGE $97C4-$97C7 DB_DATA 3
RANGE $97C7-$97CC DB_DATA 5
RANGE $97CC-$97D1 DB_DATA 5
RANGE $97D1-$97D6 DB_DATA 5
RANGE $97D6-$97D9 DB_DATA 3
RANGE $97D9-$97DC DB_DATA 3
RANGE $97DC-$97DF DB_DATA 3
RANGE $97DF-$97E2 DB_DATA 3
RANGE $97E2-$97E5 DB_DATA 3
RANGE $97E5-$97E8 DB_DATA 3
RANGE $97E8-$97ED DB_DATA 5
RANGE $97ED-$97F0 DB_DATA 3
RANGE $97F0-$97F5 DB_DATA 5
RANGE $97F5-$97FA DB_DATA 5
RANGE $97FA-$97FC DW_DATA 1
RANGE $97FC-$97FE DW_DATA 1
RANGE $97FE-$9800 DW_DATA 1
RANGE $9800-$9802 DW_DATA 1
RANGE $9802-$9804 DW_DATA 1
RANGE $9804-$9806 DW_DATA 1
RANGE $9806-$9808 DW_DATA 1
RANGE $9808-$980A DW_DATA 1
RANGE $980A-$980C DW_DATA 1
RANGE $980C-$980E DW_DATA 1
RANGE $980E-$9810 DW_DATA 1
RANGE $9810-$9812 DW_DATA 1
RANGE $9812-$9814 DW_DATA 1
RANGE $9814-$9819 DB_DATA 5
RANGE $9819-$981E DB_DATA 5
RANGE $981E-$9823 DB_DATA 5
RANGE $9823-$9826 DB_DATA 3
RANGE $9826-$9829 DB_DATA 3
RANGE $9829-$982C DB_DATA 3
RANGE $982C-$982F DB_DATA 3
RANGE $982F-$9832 DB_DATA 3
RANGE $9832-$9835 DB_DATA 3
RANGE $9835-$983A DB_DATA 5
RANGE $983A-$983D DB_DATA 3
RANGE $983D-$9840 DB_DATA 3
RANGE $9840-$9843 DB_DATA 3
RANGE $9843-$9846 DB_DATA 3
RANGE $9846-$9849 DB_DATA 3
RANGE $9849-$984C DB_DATA 3
RANGE $984C-$9851 DB_DATA 5
RANGE $9851-$9854 DB_DATA 3
RANGE $9854-$9857 DB_DATA 3
RANGE $9857-$985A DB_DATA 3
RANGE $985A-$985D DB_DATA 3
RANGE $985D-$9862 DB_DATA 5
RANGE $9862-$9867 DB_DATA 5
RANGE $9867-$986C DB_DATA 5
RANGE $986C-$9871 DB_DATA 5
RANGE $9871-$9874 DB_DATA 3
RANGE $9874-$9877 DB_DATA 3
RANGE $9877-$987A DB_DATA 3
RANGE $987A-$987D DB_DATA 3
RANGE $987D-$9880 DB_DATA 3
RANGE $9880-$9883 DB_DATA 3
RANGE $9883-$9888 DB_DATA 5
RANGE $9888-$988B DB_DATA 3
RANGE $988B-$988E DB_DATA 3
RANGE $988E-$9891 DB_DATA 3
RANGE $9891-$9894 DB_DATA 3
RANGE $9894-$9897 DB_DATA 3
RANGE $9897-$989A DB_DATA 3
RANGE $989A-$989F DB_DATA 5
RANGE $989F-$98A2 DB_DATA 3
RANGE $98A2-$98A5 DB_DATA 3
RANGE $98A5-$98A8 DB_DATA 3
RANGE $98A8-$98AB DB_DATA 3
RANGE $98AB-$98B0 DB_DATA 5
RANGE $98B0-$98B5 DB_DATA 5
RANGE $98B5-$98BA DB_DATA 5
RANGE $98BA-$98BF DB_DATA 5
RANGE $98BF-$98C2 DB_DATA 3
RANGE $98C2-$98C5 DB_DATA 3
RANGE $98C5-$98C8 DB_DATA 3
RANGE $98C8-$98CB DB_DATA 3
RANGE $98CB-$98CE DB_DATA 3
RANGE $98CE-$98D1 DB_DATA 3
RANGE $98D1-$98D6 DB_DATA 5
RANGE $98D6-$98D9 DB_DATA 3
RANGE $98D9-$98DC DB_DATA 3
RANGE $98DC-$98DF DB_DATA 3
RANGE $98DF-$98E2 DB_DATA 3
RANGE $98E2-$98E5 DB_DATA 3
RANGE $98E5-$98E8 DB_DATA 3
RANGE $98E8-$98ED DB_DATA 5
RANGE $98ED-$98F0 DB_DATA 3
RANGE $98F0-$98F3 DB_DATA 3
RANGE $98F3-$98F6 DB_DATA 3
RANGE $98F6-$98F9 DB_DATA 3
RANGE $98F9-$98FE DB_DATA 5
RANGE $98FE-$9903 DB_DATA 5
RANGE $9903-$9908 DB_DATA 5
RANGE $9908-$990D DB_DATA 5
RANGE $990D-$9910 DB_DATA 3
RANGE $9910-$9913 DB_DATA 3
RANGE $9913-$9916 DB_DATA 3
RANGE $9916-$9919 DB_DATA 3
RANGE $9919-$991C DB_DATA 3
RANGE $991C-$991F DB_DATA 3
RANGE $991F-$9924 DB_DATA 5
RANGE $9924-$9927 DB_DATA 3
RANGE $9927-$992A DB_DATA 3
RANGE $992A-$992D DB_DATA 3
RANGE $992D-$9930 DB_DATA 3
RANGE $9930-$9933 DB_DATA 3
RANGE $9933-$9936 DB_DATA 3
RANGE $9936-$993B DB_DATA 5
RANGE $993B-$993E DB_DATA 3
RANGE $993E-$9941 DB_DATA 3
RANGE $9941-$9944 DB_DATA 3
RANGE $9944-$9947 DB_DATA 3
RANGE $9947-$994C DB_DATA 5
RANGE $994C-$9951 DB_DATA 5
RANGE $9951-$9956 DB_DATA 5
RANGE $9956-$995B DB_DATA 5
RANGE $995B-$995E DB_DATA 3
RANGE $995E-$9961 DB_DATA 3
RANGE $9961-$9964 DB_DATA 3
RANGE $9964-$9967 DB_DATA 3
RANGE $9967-$996A DB_DATA 3
RANGE $996A-$996D DB_DATA 3
RANGE $996D-$9972 DB_DATA 5
RANGE $9972-$9975 DB_DATA 3
RANGE $9975-$9978 DB_DATA 3
RANGE $9978-$997B DB_DATA 3
RANGE $997B-$997E DB_DATA 3
RANGE $997E-$9981 DB_DATA 3
RANGE $9981-$9984 DB_DATA 3
RANGE $9984-$9989 DB_DATA 5
RANGE $9989-$998C DB_DATA 3
RANGE $998C-$998F DB_DATA 3
RANGE $998F-$9992 DB_DATA 3
RANGE $9992-$9995 DB_DATA 3
RANGE $9995-$999A DB_DATA 5
RANGE $999A-$999F DB_DATA 5
RANGE $999F-$99A4 DB_DATA 5
RANGE $99A4-$99A9 DB_DATA 5
RANGE $99A9-$99AC DB_DATA 3
RANGE $99AC-$99AF DB_DATA 3
RANGE $99AF-$99B2 DB_DATA 3
RANGE $99B2-$99B5 DB_DATA 3
RANGE $99B5-$99B8 DB_DATA 3
RANGE $99B8-$99BB DB_DATA 3
RANGE $99BB-$99C0 DB_DATA 5
RANGE $99C0-$99C3 DB_DATA 3
RANGE $99C3-$99C6 DB_DATA 3
RANGE $99C6-$99C9 DB_DATA 3
RANGE $99C9-$99CC DB_DATA 3
RANGE $99CC-$99CF DB_DATA 3
RANGE $99CF-$99D2 DB_DATA 3
RANGE $99D2-$99D7 DB_DATA 5
RANGE $99D7-$99DA DB_DATA 3
RANGE $99DA-$99DD DB_DATA 3
RANGE $99DD-$99E0 DB_DATA 3
RANGE $99E0-$99E3 DB_DATA 3
RANGE $99E3-$99E8 DB_DATA 5
RANGE $99E8-$99ED DB_DATA 5
RANGE $99ED-$99F2 DB_DATA 5
RANGE $99F2-$99F7 DB_DATA 5
RANGE $99F7-$99F9 DW_DATA 1
RANGE $99F9-$99FA DB_DATA 1
RANGE $99FA-$99FC DW_DATA 1
RANGE $99FC-$99FE DW_DATA 1
RANGE $99FE-$9A00 DW_DATA 1
RANGE $9A00-$9A02 DW_DATA 1
RANGE $9A02-$9A04 DW_DATA 1
RANGE $9A04-$9A06 DW_DATA 1
RANGE $9A06-$9A08 DW_DATA 1
RANGE $9A08-$9A0A DW_DATA 1
RANGE $9A0A-$9A0C DW_DATA 1
RANGE $9A0C-$9A0E DW_DATA 1
RANGE $9A0E-$9A10 DW_DATA 1
RANGE $9A10-$9A12 DW_DATA 1
RANGE $9A12-$9A14 DW_DATA 1
RANGE $9A14-$9A16 DW_DATA 1
RANGE $9A16-$9A18 DW_DATA 1
RANGE $9A18-$9A1A DW_DATA 1
RANGE $9A1A-$9A1C DW_DATA 1
RANGE $9A1C-$9A21 DB_DATA 5
RANGE $9A21-$9A26 DB_DATA 5
RANGE $9A26-$9A2B DB_DATA 5
RANGE $9A2B-$9A2E DB_DATA 3
RANGE $9A2E-$9A31 DB_DATA 3
RANGE $9A31-$9A34 DB_DATA 3
RANGE $9A34-$9A37 DB_DATA 3
RANGE $9A37-$9A3E DB_DATA 7
RANGE $9A3E-$9A43 DB_DATA 5
RANGE $9A43-$9A48 DB_DATA 5
RANGE $9A48-$9A4D DB_DATA 5
RANGE $9A4D-$9A50 DB_DATA 3
RANGE $9A50-$9A53 DB_DATA 3
RANGE $9A53-$9A56 DB_DATA 3
RANGE $9A56-$9A59 DB_DATA 3
RANGE $9A59-$9A60 DB_DATA 7
RANGE $9A60-$9A65 DB_DATA 5
RANGE $9A65-$9A6A DB_DATA 5
RANGE $9A6A-$9A6F DB_DATA 5
RANGE $9A6F-$9A72 DB_DATA 3
RANGE $9A72-$9A75 DB_DATA 3
RANGE $9A75-$9A78 DB_DATA 3
RANGE $9A78-$9A7B DB_DATA 3
RANGE $9A7B-$9A82 DB_DATA 7
RANGE $9A82-$9A87 DB_DATA 5
RANGE $9A87-$9A8C DB_DATA 5
RANGE $9A8C-$9A91 DB_DATA 5
RANGE $9A91-$9A94 DB_DATA 3
RANGE $9A94-$9A97 DB_DATA 3
RANGE $9A97-$9A9A DB_DATA 3
RANGE $9A9A-$9A9D DB_DATA 3
RANGE $9A9D-$9AA4 DB_DATA 7
RANGE $9AA4-$9AA9 DB_DATA 5
RANGE $9AA9-$9AAE DB_DATA 5
RANGE $9AAE-$9AB3 DB_DATA 5
RANGE $9AB3-$9AB6 DB_DATA 3
RANGE $9AB6-$9AB9 DB_DATA 3
RANGE $9AB9-$9ABC DB_DATA 3
RANGE $9ABC-$9ABF DB_DATA 3
RANGE $9ABF-$9AC6 DB_DATA 7
RANGE $9AC6-$9ACB DB_DATA 5
RANGE $9ACB-$9AD0 DB_DATA 5
RANGE $9AD0-$9AD5 DB_DATA 5
RANGE $9AD5-$9AD8 DB_DATA 3
RANGE $9AD8-$9ADB DB_DATA 3
RANGE $9ADB-$9ADE DB_DATA 3
RANGE $9ADE-$9AE1 DB_DATA 3
RANGE $9AE1-$9AE8 DB_DATA 7
RANGE $9AE8-$9AED DB_DATA 5
RANGE $9AED-$9AF2 DB_DATA 5
RANGE $9AF2-$9AF7 DB_DATA 5
RANGE $9AF7-$9AFA DB_DATA 3
RANGE $9AFA-$9AFD DB_DATA 3
RANGE $9AFD-$9B00 DB_DATA 3
RANGE $9B00-$9B03 DB_DATA 3
RANGE $9B03-$9B0A DB_DATA 7
RANGE $9B0A-$9B0F DB_DATA 5
RANGE $9B0F-$9B14 DB_DATA 5
RANGE $9B14-$9B19 DB_DATA 5
RANGE $9B19-$9B1C DB_DATA 3
RANGE $9B1C-$9B1F DB_DATA 3
RANGE $9B1F-$9B22 DB_DATA 3
RANGE $9B22-$9B25 DB_DATA 3
RANGE $9B25-$9B2C DB_DATA 7
RANGE $9B2C-$9B31 DB_DATA 5
RANGE $9B31-$9B36 DB_DATA 5
RANGE $9B36-$9B3B DB_DATA 5
RANGE $9B3B-$9B3E DB_DATA 3
RANGE $9B3E-$9B41 DB_DATA 3
RANGE $9B41-$9B44 DB_DATA 3
RANGE $9B44-$9B47 DB_DATA 3
RANGE $9B47-$9B4E DB_DATA 7
RANGE $9B4E-$9B50 DW_DATA 1
RANGE $9B50-$9B51 DB_DATA 1
RANGE $9B51-$9B53 DW_DATA 1
RANGE $9B53-$9B55 DW_DATA 1
RANGE $9B55-$9B57 DW_DATA 1
RANGE $9B57-$9B59 DW_DATA 1
RANGE $9B59-$9B5B DW_DATA 1
RANGE $9B5B-$9B5D DW_DATA 1
RANGE $9B5D-$9B5F DW_DATA 1
RANGE $9B5F-$9B61 DW_DATA 1
RANGE $9B61-$9B63 DW_DATA 1
RANGE $9B63-$9B65 DW_DATA 1
RANGE $9B65-$9B67 DW_DATA 1
RANGE $9B67-$9B69 DW_DATA 1
RANGE $9B69-$9B6B DW_DATA 1
RANGE $9B6B-$9B6D DW_DATA 1
RANGE $9B6D-$9B6F DW_DATA 1
RANGE $9B6F-$9B71 DW_DATA 1
RANGE $9B71-$9B73 DW_DATA 1
RANGE $9B73-$9B78 DB_DATA 5
RANGE $9B78-$9B7D DB_DATA 5
RANGE $9B7D-$9B82 DB_DATA 5
RANGE $9B82-$9B85 DB_DATA 3
RANGE $9B85-$9B88 DB_DATA 3
RANGE $9B88-$9B8B DB_DATA 3
RANGE $9B8B-$9B8E DB_DATA 3
RANGE $9B8E-$9B95 DB_DATA 7
RANGE $9B95-$9B9A DB_DATA 5
RANGE $9B9A-$9B9F DB_DATA 5
RANGE $9B9F-$9BA4 DB_DATA 5
RANGE $9BA4-$9BA7 DB_DATA 3
RANGE $9BA7-$9BAA DB_DATA 3
RANGE $9BAA-$9BAD DB_DATA 3
RANGE $9BAD-$9BB0 DB_DATA 3
RANGE $9BB0-$9BB7 DB_DATA 7
RANGE $9BB7-$9BBC DB_DATA 5
RANGE $9BBC-$9BC1 DB_DATA 5
RANGE $9BC1-$9BC6 DB_DATA 5
RANGE $9BC6-$9BC9 DB_DATA 3
RANGE $9BC9-$9BCC DB_DATA 3
RANGE $9BCC-$9BCF DB_DATA 3
RANGE $9BCF-$9BD2 DB_DATA 3
RANGE $9BD2-$9BD9 DB_DATA 7
RANGE $9BD9-$9BDE DB_DATA 5
RANGE $9BDE-$9BE3 DB_DATA 5
RANGE $9BE3-$9BE8 DB_DATA 5
RANGE $9BE8-$9BEB DB_DATA 3
RANGE $9BEB-$9BEE DB_DATA 3
RANGE $9BEE-$9BF1 DB_DATA 3
RANGE $9BF1-$9BF4 DB_DATA 3
RANGE $9BF4-$9BFB DB_DATA 7
RANGE $9BFB-$9C00 DB_DATA 5
RANGE $9C00-$9C05 DB_DATA 5
RANGE $9C05-$9C0A DB_DATA 5
RANGE $9C0A-$9C0D DB_DATA 3
RANGE $9C0D-$9C10 DB_DATA 3
RANGE $9C10-$9C13 DB_DATA 3
RANGE $9C13-$9C16 DB_DATA 3
RANGE $9C16-$9C1D DB_DATA 7
RANGE $9C1D-$9C22 DB_DATA 5
RANGE $9C22-$9C27 DB_DATA 5
RANGE $9C27-$9C2C DB_DATA 5
RANGE $9C2C-$9C2F DB_DATA 3
RANGE $9C2F-$9C32 DB_DATA 3
RANGE $9C32-$9C35 DB_DATA 3
RANGE $9C35-$9C38 DB_DATA 3
RANGE $9C38-$9C3F DB_DATA 7
RANGE $9C3F-$9C44 DB_DATA 5
RANGE $9C44-$9C49 DB_DATA 5
RANGE $9C49-$9C4E DB_DATA 5
RANGE $9C4E-$9C51 DB_DATA 3
RANGE $9C51-$9C54 DB_DATA 3
RANGE $9C54-$9C57 DB_DATA 3
RANGE $9C57-$9C5A DB_DATA 3
RANGE $9C5A-$9C61 DB_DATA 7
RANGE $9C61-$9C66 DB_DATA 5
RANGE $9C66-$9C6B DB_DATA 5
RANGE $9C6B-$9C70 DB_DATA 5
RANGE $9C70-$9C73 DB_DATA 3
RANGE $9C73-$9C76 DB_DATA 3
RANGE $9C76-$9C79 DB_DATA 3
RANGE $9C79-$9C7C DB_DATA 3
RANGE $9C7C-$9C83 DB_DATA 7
RANGE $9C83-$9C88 DB_DATA 5
RANGE $9C88-$9C8D DB_DATA 5
RANGE $9C8D-$9C92 DB_DATA 5
RANGE $9C92-$9C95 DB_DATA 3
RANGE $9C95-$9C98 DB_DATA 3
RANGE $9C98-$9C9B DB_DATA 3
RANGE $9C9B-$9C9E DB_DATA 3
RANGE $9C9E-$9CA5 DB_DATA 7
RANGE $9CA5-$9CA7 DW_DATA 1
RANGE $9CA7-$9CA8 DB_DATA 1
RANGE $9CA8-$9CAA DW_DATA 1
RANGE $9CAA-$9CAC DW_DATA 1
RANGE $9CAC-$9CAE DW_DATA 1
RANGE $9CAE-$9CB0 DW_DATA 1
RANGE $9CB0-$9CB2 DW_DATA 1
RANGE $9CB2-$9CB4 DW_DATA 1
RANGE $9CB4-$9CB6 DW_DATA 1
RANGE $9CB6-$9CB8 DW_DATA 1
RANGE $9CB8-$9CBA DW_DATA 1
RANGE $9CBA-$9CBC DW_DATA 1
RANGE $9CBC-$9CBE DW_DATA 1
RANGE $9CBE-$9CC0 DW_DATA 1
RANGE $9CC0-$9CC2 DW_DATA 1
RANGE $9CC2-$9CC4 DW_DATA 1
RANGE $9CC4-$9CC6 DW_DATA 1
RANGE $9CC6-$9CCB DB_DATA 5
RANGE $9CCB-$9CD0 DB_DATA 5
RANGE $9CD0-$9CD5 DB_DATA 5
RANGE $9CD5-$9CDA DB_DATA 5
RANGE $9CDA-$9CDF DB_DATA 5
RANGE $9CDF-$9CE4 DB_DATA 5
RANGE $9CE4-$9CE9 DB_DATA 5
RANGE $9CE9-$9CEE DB_DATA 5
RANGE $9CEE-$9CF3 DB_DATA 5
RANGE $9CF3-$9CF8 DB_DATA 5
RANGE $9CF8-$9CFD DB_DATA 5
RANGE $9CFD-$9D02 DB_DATA 5
RANGE $9D02-$9D07 DB_DATA 5
RANGE $9D07-$9D0C DB_DATA 5
RANGE $9D0C-$9D11 DB_DATA 5
RANGE $9D11-$9D14 DB_DATA 3
RANGE $9D14-$9D17 DB_DATA 3
RANGE $9D17-$9D1A DB_DATA 3
RANGE $9D1A-$9D1D DB_DATA 3
RANGE $9D1D-$9D20 DB_DATA 3
RANGE $9D20-$9D23 DB_DATA 3
RANGE $9D23-$9D28 DB_DATA 5
RANGE $9D28-$9D2B DB_DATA 3
RANGE $9D2B-$9D2E DB_DATA 3
RANGE $9D2E-$9D33 DB_DATA 5
RANGE $9D33-$9D38 DB_DATA 5
RANGE $9D38-$9D3D DB_DATA 5
RANGE $9D3D-$9D42 DB_DATA 5
RANGE $9D42-$9D45 DB_DATA 3
RANGE $9D45-$9D48 DB_DATA 3
RANGE $9D48-$9D4B DB_DATA 3
RANGE $9D4B-$9D4E DB_DATA 3
RANGE $9D4E-$9D51 DB_DATA 3
RANGE $9D51-$9D54 DB_DATA 3
RANGE $9D54-$9D59 DB_DATA 5
RANGE $9D59-$9D5C DB_DATA 3
RANGE $9D5C-$9D5F DB_DATA 3
RANGE $9D5F-$9D64 DB_DATA 5
RANGE $9D64-$9D69 DB_DATA 5
RANGE $9D69-$9D6E DB_DATA 5
RANGE $9D6E-$9D73 DB_DATA 5
RANGE $9D73-$9D78 DB_DATA 5
RANGE $9D78-$9D7D DB_DATA 5
RANGE $9D7D-$9D82 DB_DATA 5
RANGE $9D82-$9D87 DB_DATA 5
RANGE $9D87-$9D8C DB_DATA 5
RANGE $9D8C-$9D91 DB_DATA 5
RANGE $9D91-$9D96 DB_DATA 5
RANGE $9D96-$9D9B DB_DATA 5
RANGE $9D9B-$9DA0 DB_DATA 5
RANGE $9DA0-$9DA5 DB_DATA 5
RANGE $9DA5-$9DAA DB_DATA 5
RANGE $9DAA-$9DAF DB_DATA 5
RANGE $9DAF-$9DB2 DB_DATA 3
RANGE $9DB2-$9DB5 DB_DATA 3
RANGE $9DB5-$9DB8 DB_DATA 3
RANGE $9DB8-$9DBB DB_DATA 3
RANGE $9DBB-$9DBE DB_DATA 3
RANGE $9DBE-$9DC1 DB_DATA 3
RANGE $9DC1-$9DC6 DB_DATA 5
RANGE $9DC6-$9DC9 DB_DATA 3
RANGE $9DC9-$9DCC DB_DATA 3
RANGE $9DCC-$9DD1 DB_DATA 5
RANGE $9DD1-$9DD6 DB_DATA 5
RANGE $9DD6-$9DDB DB_DATA 5
RANGE $9DDB-$9DE0 DB_DATA 5
RANGE $9DE0-$9DE5 DB_DATA 5
RANGE $9DE5-$9DEA DB_DATA 5
RANGE $9DEA-$9DEF DB_DATA 5
RANGE $9DEF-$9DF4 DB_DATA 5
RANGE $9DF4-$9DF9 DB_DATA 5
RANGE $9DF9-$9DFE DB_DATA 5
RANGE $9DFE-$9E03 DB_DATA 5
RANGE $9E03-$9E08 DB_DATA 5
RANGE $9E08-$9E0D DB_DATA 5
RANGE $9E0D-$9E12 DB_DATA 5
RANGE $9E12-$9E17 DB_DATA 5
RANGE $9E17-$9E1C DB_DATA 5
RANGE $9E1C-$9E21 DB_DATA 5
RANGE $9E21-$9E26 DB_DATA 5
RANGE $9E26-$9E2B DB_DATA 5
RANGE $9E2B-$9E30 DB_DATA 5
RANGE $9E30-$9E35 DB_DATA 5
RANGE $9E35-$9E3A DB_DATA 5
RANGE $9E3A-$9E3F DB_DATA 5
RANGE $9E3F-$9E44 DB_DATA 5
RANGE $9E44-$9E47 DB_DATA 3
RANGE $9E47-$9E4A DB_DATA 3
RANGE $9E4A-$9E4D DB_DATA 3
RANGE $9E4D-$9E50 DB_DATA 3
RANGE $9E50-$9E53 DB_DATA 3
RANGE $9E53-$9E56 DB_DATA 3
RANGE $9E56-$9E5B DB_DATA 5
RANGE $9E5B-$9E5E DB_DATA 3
RANGE $9E5E-$9E61 DB_DATA 3
RANGE $9E61-$9E66 DB_DATA 5
RANGE $9E66-$9E6B DB_DATA 5
RANGE $9E6B-$9E70 DB_DATA 5
RANGE $9E70-$9E75 DB_DATA 5
RANGE $9E75-$9E7A DB_DATA 5
RANGE $9E7A-$9E7F DB_DATA 5
RANGE $9E7F-$9E84 DB_DATA 5
RANGE $9E84-$9E89 DB_DATA 5
RANGE $9E89-$9E8E DB_DATA 5
RANGE $9E8E-$9E93 DB_DATA 5
RANGE $9E93-$9E98 DB_DATA 5
RANGE $9E98-$9E9D DB_DATA 5
RANGE $9E9D-$9EA0 DB_DATA 3
RANGE $9EA0-$9EA3 DB_DATA 3
RANGE $9EA3-$9EA6 DB_DATA 3
RANGE $9EA6-$9EA9 DB_DATA 3
RANGE $9EA9-$9EAC DB_DATA 3
RANGE $9EAC-$9EAF DB_DATA 3
RANGE $9EAF-$9EB4 DB_DATA 5
RANGE $9EB4-$9EB7 DB_DATA 3
RANGE $9EB7-$9EBA DB_DATA 3
RANGE $9EBA-$9EBF DB_DATA 5
RANGE $9EBF-$9EC4 DB_DATA 5
RANGE $9EC4-$9EC9 DB_DATA 5
RANGE $9EC9-$9ECE DB_DATA 5
RANGE $9ECE-$9ED3 DB_DATA 5
RANGE $9ED3-$9ED8 DB_DATA 5
RANGE $9ED8-$9EDD DB_DATA 5
RANGE $9EDD-$9EE2 DB_DATA 5
RANGE $9EE2-$9EE5 DB_DATA 3
RANGE $9EE5-$9EE8 DB_DATA 3
RANGE $9EE8-$9EEB DB_DATA 3
RANGE $9EEB-$9EEE DB_DATA 3
RANGE $9EEE-$9EF1 DB_DATA 3
RANGE $9EF1-$9EF4 DB_DATA 3
RANGE $9EF4-$9EF9 DB_DATA 5
RANGE $9EF9-$9EFC DB_DATA 3
RANGE $9EFC-$9EFF DB_DATA 3
RANGE $9EFF-$9F04 DB_DATA 5
RANGE $9F04-$9F09 DB_DATA 5
RANGE $9F09-$9F0E DB_DATA 5
RANGE $9F0E-$9F13 DB_DATA 5
RANGE $9F13-$9F18 DB_DATA 5
RANGE $9F18-$9F1D DB_DATA 5
RANGE $9F1D-$9F22 DB_DATA 5
RANGE $9F22-$9F27 DB_DATA 5
RANGE $9F27-$9F2A DB_DATA 3
RANGE $9F2A-$9F2D DB_DATA 3
RANGE $9F2D-$9F30 DB_DATA 3
RANGE $9F30-$9F33 DB_DATA 3
RANGE $9F33-$9F36 DB_DATA 3
RANGE $9F36-$9F39 DB_DATA 3
RANGE $9F39-$9F3E DB_DATA 5
RANGE $9F3E-$9F41 DB_DATA 3
RANGE $9F41-$9F44 DB_DATA 3
RANGE $9F44-$9F49 DB_DATA 5
RANGE $9F49-$9F4E DB_DATA 5
RANGE $9F4E-$9F53 DB_DATA 5
RANGE $9F53-$9F58 DB_DATA 5
RANGE $9F58-$9F5B DB_DATA 3
RANGE $9F5B-$9F5E DB_DATA 3
RANGE $9F5E-$9F61 DB_DATA 3
RANGE $9F61-$9F64 DB_DATA 3
RANGE $9F64-$9F67 DB_DATA 3
RANGE $9F67-$9F6A DB_DATA 3
RANGE $9F6A-$9F6F DB_DATA 5
RANGE $9F6F-$9F72 DB_DATA 3
RANGE $9F72-$9F75 DB_DATA 3
RANGE $9F75-$9F7A DB_DATA 5
RANGE $9F7A-$9F7F DB_DATA 5
RANGE $9F7F-$9F84 DB_DATA 5
RANGE $9F84-$9F89 DB_DATA 5
RANGE $9F89-$9F8E DB_DATA 5
RANGE $9F8E-$9F93 DB_DATA 5
RANGE $9F93-$9F98 DB_DATA 5
RANGE $9F98-$9F9D DB_DATA 5
RANGE $9F9D-$9FA0 DB_DATA 3
RANGE $9FA0-$9FA3 DB_DATA 3
RANGE $9FA3-$9FA6 DB_DATA 3
RANGE $9FA6-$9FA9 DB_DATA 3
RANGE $9FA9-$9FAC DB_DATA 3
RANGE $9FAC-$9FAF DB_DATA 3
RANGE $9FAF-$9FB4 DB_DATA 5
RANGE $9FB4-$9FB7 DB_DATA 3
RANGE $9FB7-$9FBA DB_DATA 3
RANGE $9FBA-$9FBF DB_DATA 5
RANGE $9FBF-$9FC4 DB_DATA 5
RANGE $9FC4-$9FC9 DB_DATA 5
RANGE $9FC9-$9FCE DB_DATA 5
RANGE $9FCE-$9FD3 DB_DATA 5
RANGE $9FD3-$9FD8 DB_DATA 5
RANGE $9FD8-$9FDD DB_DATA 5
RANGE $9FDD-$9FE2 DB_DATA 5
RANGE $9FE2-$9FE5 DB_DATA 3
RANGE $9FE5-$9FE8 DB_DATA 3
RANGE $9FE8-$9FEB DB_DATA 3
RANGE $9FEB-$9FEE DB_DATA 3
RANGE $9FEE-$9FF1 DB_DATA 3
RANGE $9FF1-$9FF4 DB_DATA 3
RANGE $9FF4-$9FF9 DB_DATA 5
RANGE $9FF9-$9FFC DB_DATA 3
RANGE $9FFC-$9FFF DB_DATA 3
RANGE $9FFF-$A004 DB_DATA 5
RANGE $A004-$A009 DB_DATA 5
RANGE $A009-$A00E DB_DATA 5
RANGE $A00E-$A013 DB_DATA 5
RANGE $A013-$A018 DB_DATA 5
RANGE $A018-$A01D DB_DATA 5
RANGE $A01D-$A022 DB_DATA 5
RANGE $A022-$A027 DB_DATA 5
RANGE $A027-$A02C DB_DATA 5
RANGE $A02C-$A031 DB_DATA 5
RANGE $A031-$A036 DB_DATA 5
RANGE $A036-$A03B DB_DATA 5
RANGE $A03B-$A03E DB_DATA 3
RANGE $A03E-$A041 DB_DATA 3
RANGE $A041-$A044 DB_DATA 3
RANGE $A044-$A047 DB_DATA 3
RANGE $A047-$A04A DB_DATA 3
RANGE $A04A-$A04D DB_DATA 3
RANGE $A04D-$A052 DB_DATA 5
RANGE $A052-$A055 DB_DATA 3
RANGE $A055-$A058 DB_DATA 3
RANGE $A058-$A05D DB_DATA 5
RANGE $A05D-$A062 DB_DATA 5
RANGE $A062-$A067 DB_DATA 5
RANGE $A067-$A06C DB_DATA 5
RANGE $A06C-$A071 DB_DATA 5
RANGE $A071-$A076 DB_DATA 5
RANGE $A076-$A07B DB_DATA 5
RANGE $A07B-$A080 DB_DATA 5
RANGE $A080-$A085 DB_DATA 5
RANGE $A085-$A08A DB_DATA 5
RANGE $A08A-$A08F DB_DATA 5
RANGE $A08F-$A094 DB_DATA 5
RANGE $A094-$A097 DB_DATA 3
RANGE $A097-$A09A DB_DATA 3
RANGE $A09A-$A09D DB_DATA 3
RANGE $A09D-$A0A0 DB_DATA 3
RANGE $A0A0-$A0A3 DB_DATA 3
RANGE $A0A3-$A0A6 DB_DATA 3
RANGE $A0A6-$A0AB DB_DATA 5
RANGE $A0AB-$A0AE DB_DATA 3
RANGE $A0AE-$A0B1 DB_DATA 3
RANGE $A0B1-$A0B6 DB_DATA 5
RANGE $A0B6-$A0BB DB_DATA 5
RANGE $A0BB-$A0C0 DB_DATA 5
RANGE $A0C0-$A0C5 DB_DATA 5
RANGE $A0C5-$A0C8 DB_DATA 3
RANGE $A0C8-$A0CB DB_DATA 3
RANGE $A0CB-$A0CE DB_DATA 3
RANGE $A0CE-$A0D1 DB_DATA 3
RANGE $A0D1-$A0D4 DB_DATA 3
RANGE $A0D4-$A0D7 DB_DATA 3
RANGE $A0D7-$A0DC DB_DATA 5
RANGE $A0DC-$A0DF DB_DATA 3
RANGE $A0DF-$A0E2 DB_DATA 3
RANGE $A0E2-$A0E7 DB_DATA 5
RANGE $A0E7-$A0EC DB_DATA 5
RANGE $A0EC-$A0F1 DB_DATA 5
RANGE $A0F1-$A0F6 DB_DATA 5
RANGE $A0F6-$A0FB DB_DATA 5
RANGE $A0FB-$A100 DB_DATA 5
RANGE $A100-$A105 DB_DATA 5
RANGE $A105-$A10A DB_DATA 5
RANGE $A10A-$A10F DB_DATA 5
RANGE $A10F-$A114 DB_DATA 5
RANGE $A114-$A119 DB_DATA 5
RANGE $A119-$A11E DB_DATA 5
RANGE $A11E-$A123 DB_DATA 5
RANGE $A123-$A128 DB_DATA 5
RANGE $A128-$A12D DB_DATA 5
RANGE $A12D-$A132 DB_DATA 5
RANGE $A132-$A137 DB_DATA 5
RANGE $A137-$A13C DB_DATA 5
RANGE $A13C-$A141 DB_DATA 5
RANGE $A141-$A146 DB_DATA 5
RANGE $A146-$A14B DB_DATA 5
RANGE $A14B-$A150 DB_DATA 5
RANGE $A150-$A155 DB_DATA 5
RANGE $A155-$A15A DB_DATA 5
RANGE $A15A-$A15F DB_DATA 5
RANGE $A15F-$A164 DB_DATA 5
RANGE $A164-$A169 DB_DATA 5
RANGE $A169-$A16E DB_DATA 5
RANGE $A16E-$A171 DB_DATA 3
RANGE $A171-$A174 DB_DATA 3
RANGE $A174-$A177 DB_DATA 3
RANGE $A177-$A17A DB_DATA 3
RANGE $A17A-$A17D DB_DATA 3
RANGE $A17D-$A180 DB_DATA 3
RANGE $A180-$A185 DB_DATA 5
RANGE $A185-$A188 DB_DATA 3
RANGE $A188-$A18B DB_DATA 3
RANGE $A18B-$A190 DB_DATA 5
RANGE $A190-$A192 DW_DATA 1
RANGE $A192-$A193 DB_DATA 1
RANGE $A193-$A195 DW_DATA 1
RANGE $A195-$A197 DW_DATA 1
RANGE $A197-$A199 DW_DATA 1
RANGE $A199-$A19B DW_DATA 1
RANGE $A19B-$A19D DW_DATA 1
RANGE $A19D-$A19F DW_DATA 1
RANGE $A19F-$A1A1 DW_DATA 1
RANGE $A1A1-$A1A3 DW_DATA 1
RANGE $A1A3-$A1A5 DW_DATA 1
RANGE $A1A5-$A1A7 DW_DATA 1
RANGE $A1A7-$A1A9 DW_DATA 1
RANGE $A1A9-$A1AB DW_DATA 1
RANGE $A1AB-$A1AD DW_DATA 1
RANGE $A1AD-$A1AF DW_DATA 1
RANGE $A1AF-$A1B1 DW_DATA 1
RANGE $A1B1-$A1B3 DW_DATA 1
RANGE $A1B3-$A1B5 DW_DATA 1
RANGE $A1B5-$A1BA DB_DATA 5
RANGE $A1BA-$A1BF DB_DATA 5
RANGE $A1BF-$A1C4 DB_DATA 5
RANGE $A1C4-$A1C9 DB_DATA 5
RANGE $A1C9-$A1CE DB_DATA 5
RANGE $A1CE-$A1D3 DB_DATA 5
RANGE $A1D3-$A1DA DB_DATA 7
RANGE $A1DA-$A1DF DB_DATA 5
RANGE $A1DF-$A1E4 DB_DATA 5
RANGE $A1E4-$A1E9 DB_DATA 5
RANGE $A1E9-$A1EE DB_DATA 5
RANGE $A1EE-$A1F3 DB_DATA 5
RANGE $A1F3-$A1F8 DB_DATA 5
RANGE $A1F8-$A1FF DB_DATA 7
RANGE $A1FF-$A204 DB_DATA 5
RANGE $A204-$A209 DB_DATA 5
RANGE $A209-$A20E DB_DATA 5
RANGE $A20E-$A213 DB_DATA 5
RANGE $A213-$A218 DB_DATA 5
RANGE $A218-$A21D DB_DATA 5
RANGE $A21D-$A224 DB_DATA 7
RANGE $A224-$A229 DB_DATA 5
RANGE $A229-$A22E DB_DATA 5
RANGE $A22E-$A233 DB_DATA 5
RANGE $A233-$A238 DB_DATA 5
RANGE $A238-$A23D DB_DATA 5
RANGE $A23D-$A242 DB_DATA 5
RANGE $A242-$A249 DB_DATA 7
RANGE $A249-$A24E DB_DATA 5
RANGE $A24E-$A253 DB_DATA 5
RANGE $A253-$A258 DB_DATA 5
RANGE $A258-$A25D DB_DATA 5
RANGE $A25D-$A262 DB_DATA 5
RANGE $A262-$A267 DB_DATA 5
RANGE $A267-$A26E DB_DATA 7
RANGE $A26E-$A273 DB_DATA 5
RANGE $A273-$A278 DB_DATA 5
RANGE $A278-$A27D DB_DATA 5
RANGE $A27D-$A282 DB_DATA 5
RANGE $A282-$A287 DB_DATA 5
RANGE $A287-$A28C DB_DATA 5
RANGE $A28C-$A293 DB_DATA 7
RANGE $A293-$A298 DB_DATA 5
RANGE $A298-$A29D DB_DATA 5
RANGE $A29D-$A2A2 DB_DATA 5
RANGE $A2A2-$A2A7 DB_DATA 5
RANGE $A2A7-$A2AC DB_DATA 5
RANGE $A2AC-$A2B1 DB_DATA 5
RANGE $A2B1-$A2B8 DB_DATA 7
RANGE $A2B8-$A2BD DB_DATA 5
RANGE $A2BD-$A2C2 DB_DATA 5
RANGE $A2C2-$A2C7 DB_DATA 5
RANGE $A2C7-$A2CC DB_DATA 5
RANGE $A2CC-$A2D1 DB_DATA 5
RANGE $A2D1-$A2D6 DB_DATA 5
RANGE $A2D6-$A2DD DB_DATA 7
RANGE $A2DD-$A2E2 DB_DATA 5
RANGE $A2E2-$A2E7 DB_DATA 5
RANGE $A2E7-$A2EC DB_DATA 5
RANGE $A2EC-$A2F1 DB_DATA 5
RANGE $A2F1-$A2F6 DB_DATA 5
RANGE $A2F6-$A2FB DB_DATA 5
RANGE $A2FB-$A302 DB_DATA 7
RANGE $A302-$A304 DB_DATA 2
RANGE $A304-$A306 DB_DATA 2
RANGE $A306-$A308 DB_DATA 2
RANGE $A308-$A30A DB_DATA 2
RANGE $A30A-$A30C DB_DATA 2
RANGE $A30C-$A30E DW_DATA 1
RANGE $A30E-$A310 DW_DATA 1
RANGE $A310-$A312 DW_DATA 1
RANGE $A312-$A314 DW_DATA 1
RANGE $A314-$A316 DW_DATA 1
RANGE $A316-$A318 DW_DATA 1
RANGE $A318-$A31A DW_DATA 1
RANGE $A31A-$A31C DW_DATA 1
RANGE $A31C-$A31E DW_DATA 1
RANGE $A31E-$A320 DW_DATA 1
RANGE $A320-$A322 DW_DATA 1
RANGE $A322-$A324 DW_DATA 1
RANGE $A324-$A326 DW_DATA 1
RANGE $A326-$A328 DW_DATA 1
RANGE $A328-$A32A DW_DATA 1
RANGE $A32A-$A32C DW_DATA 1
RANGE $A32C-$A32E DW_DATA 1
RANGE $A32E-$A330 DW_DATA 1
RANGE $A330-$A332 DW_DATA 1
RANGE $A332-$A334 DW_DATA 1
RANGE $A334-$A336 DW_DATA 1
RANGE $A336-$A338 DW_DATA 1
RANGE $A338-$A33A DW_DATA 1
RANGE $A33A-$A33C DW_DATA 1
RANGE $A33C-$A33E DW_DATA 1
RANGE $A33E-$A340 DW_DATA 1
RANGE $A340-$A342 DW_DATA 1
RANGE $A342-$A344 DW_DATA 1
RANGE $A344-$A346 DW_DATA 1
RANGE $A346-$A348 DW_DATA 1
RANGE $A348-$A34A DW_DATA 1
RANGE $A34A-$A34C DW_DATA 1
RANGE $A34C-$A34E DW_DATA 1
RANGE $A34E-$A350 DW_DATA 1
RANGE $A350-$A52A CODE
RANGE $A52A-$A52C DW_DATA 1
RANGE $A52C-$A52E DW_DATA 1
RANGE $A52E-$A530 DW_DATA 1
RANGE $A530-$A532 DW_DATA 1
RANGE $A532-$A534 DW_DATA 1
RANGE $A534-$A536 DW_DATA 1
RANGE $A536-$A538 DW_DATA 1
RANGE $A538-$A53A DW_DATA 1
RANGE $A53A-$A53C DW_DATA 1
RANGE $A53C-$A53E DW_DATA 1
RANGE $A53E-$A540 DW_DATA 1
RANGE $A540-$A542 DW_DATA 1
RANGE $A542-$A544 DW_DATA 1
RANGE $A544-$A546 DW_DATA 1
RANGE $A546-$A548 DW_DATA 1
RANGE $A548-$A54A DW_DATA 1
RANGE $A54A-$A54C DW_DATA 1
RANGE $A54C-$A54E DW_DATA 1
RANGE $A54E-$A550 DW_DATA 1
RANGE $A550-$A552 DW_DATA 1
RANGE $A552-$A554 DW_DATA 1
RANGE $A554-$A556 DW_DATA 1
RANGE $A556-$A558 DW_DATA 1
RANGE $A558-$A55A DW_DATA 1
RANGE $A55A-$A55C DW_DATA 1
RANGE $A55C-$A55E DW_DATA 1
RANGE $A55E-$A560 DW_DATA 1
RANGE $A560-$A562 DW_DATA 1
RANGE $A562-$A564 DW_DATA 1
RANGE $A564-$A566 DW_DATA 1
RANGE $A566-$A568 DW_DATA 1
RANGE $A568-$A56A DW_DATA 1
RANGE $A56A-$A56C DW_DATA 1
RANGE $A56C-$A56E DW_DATA 1
RANGE $A56E-$A570 DW_DATA 1
RANGE $A570-$A572 DW_DATA 1
RANGE $A572-$A574 DW_DATA 1
RANGE $A574-$A576 DW_DATA 1
RANGE $A576-$A578 DW_DATA 1
RANGE $A578-$A57A DW_DATA 1
RANGE $A57A-$A57C DW_DATA 1
RANGE $A57C-$A57E DW_DATA 1
RANGE $A57E-$A580 DW_DATA 1
RANGE $A580-$A582 DW_DATA 1
RANGE $A582-$A584 DW_DATA 1
RANGE $A584-$A586 DW_DATA 1
RANGE $A586-$A588 DW_DATA 1
RANGE $A588-$A58A DW_DATA 1
RANGE $A58A-$A58C DW_DATA 1
RANGE $A58C-$A58E DW_DATA 1
RANGE $A58E-$A590 DW_DATA 1
RANGE $A590-$A592 DW_DATA 1
RANGE $A592-$A594 DW_DATA 1
RANGE $A594-$A596 DW_DATA 1
RANGE $A596-$A598 DW_DATA 1
RANGE $A598-$A59A DW_DATA 1
RANGE $A59A-$A59C DW_DATA 1
RANGE $A59C-$A59E DW_DATA 1
RANGE $A59E-$A5A0 DW_DATA 1
RANGE $A5A0-$A5A2 DW_DATA 1
RANGE $A5A2-$A5A4 DW_DATA 1
RANGE $A5A4-$A5A6 DW_DATA 1
RANGE $A5A6-$A5A8 DW_DATA 1
RANGE $A5A8-$A5AB DB_DATA 3
RANGE $A5AB-$A5AE DB_DATA 3
RANGE $A5AE-$A5B1 DB_DATA 3
RANGE $A5B1-$A5B4 DB_DATA 3
RANGE $A5B4-$A5B7 DB_DATA 3
RANGE $A5B7-$A5BA DB_DATA 3
RANGE $A5BA-$A5BD DB_DATA 3
RANGE $A5BD-$A5C0 DB_DATA 3
RANGE $A5C0-$A5C1 DB_DATA 1
RANGE $A5C1-$A5C4 DB_DATA 3
RANGE $A5C4-$A5C7 DB_DATA 3
RANGE $A5C7-$A5CA DB_DATA 3
RANGE $A5CA-$A5CD DB_DATA 3
RANGE $A5CD-$A5D0 DB_DATA 3
RANGE $A5D0-$A5D3 DB_DATA 3
RANGE $A5D3-$A5D6 DB_DATA 3
RANGE $A5D6-$A5D9 DB_DATA 3
RANGE $A5D9-$A5DA DB_DATA 1
RANGE $A5DA-$A5DD DB_DATA 3
RANGE $A5DD-$A5E0 DB_DATA 3
RANGE $A5E0-$A5E3 DB_DATA 3
RANGE $A5E3-$A5E6 DB_DATA 3
RANGE $A5E6-$A5E9 DB_DATA 3
RANGE $A5E9-$A5EC DB_DATA 3
RANGE $A5EC-$A5EF DB_DATA 3
RANGE $A5EF-$A5F2 DB_DATA 3
RANGE $A5F2-$A5F5 DB_DATA 3
RANGE $A5F5-$A5F6 DB_DATA 1
RANGE $A5F6-$A5F9 DB_DATA 3
RANGE $A5F9-$A5FC DB_DATA 3
RANGE $A5FC-$A5FF DB_DATA 3
RANGE $A5FF-$A602 DB_DATA 3
RANGE $A602-$A605 DB_DATA 3
RANGE $A605-$A608 DB_DATA 3
RANGE $A608-$A60B DB_DATA 3
RANGE $A60B-$A60C DB_DATA 1
RANGE $A60C-$A60F DB_DATA 3
RANGE $A60F-$A612 DB_DATA 3
RANGE $A612-$A615 DB_DATA 3
RANGE $A615-$A618 DB_DATA 3
RANGE $A618-$A61B DB_DATA 3
RANGE $A61B-$A61E DB_DATA 3
RANGE $A61E-$A621 DB_DATA 3
RANGE $A621-$A624 DB_DATA 3
RANGE $A624-$A625 DB_DATA 1
RANGE $A625-$A628 DB_DATA 3
RANGE $A628-$A62B DB_DATA 3
RANGE $A62B-$A62E DB_DATA 3
RANGE $A62E-$A631 DB_DATA 3
RANGE $A631-$A634 DB_DATA 3
RANGE $A634-$A637 DB_DATA 3
RANGE $A637-$A638 DB_DATA 1
RANGE $A638-$A63B DB_DATA 3
RANGE $A63B-$A63E DB_DATA 3
RANGE $A63E-$A641 DB_DATA 3
RANGE $A641-$A644 DB_DATA 3
RANGE $A644-$A647 DB_DATA 3
RANGE $A647-$A64A DB_DATA 3
RANGE $A64A-$A64D DB_DATA 3
RANGE $A64D-$A650 DB_DATA 3
RANGE $A650-$A653 DB_DATA 3
RANGE $A653-$A656 DB_DATA 3
RANGE $A656-$A659 DB_DATA 3
RANGE $A659-$A65A DB_DATA 1
RANGE $A65A-$A65D DB_DATA 3
RANGE $A65D-$A660 DB_DATA 3
RANGE $A660-$A663 DB_DATA 3
RANGE $A663-$A666 DB_DATA 3
RANGE $A666-$A669 DB_DATA 3
RANGE $A669-$A66C DB_DATA 3
RANGE $A66C-$A66D DB_DATA 1
RANGE $A66D-$A670 DB_DATA 3
RANGE $A670-$A673 DB_DATA 3
RANGE $A673-$A676 DB_DATA 3
RANGE $A676-$A679 DB_DATA 3
RANGE $A679-$A67C DB_DATA 3
RANGE $A67C-$A67F DB_DATA 3
RANGE $A67F-$A680 DB_DATA 1
RANGE $A680-$A683 DB_DATA 3
RANGE $A683-$A686 DB_DATA 3
RANGE $A686-$A689 DB_DATA 3
RANGE $A689-$A68C DB_DATA 3
RANGE $A68C-$A68F DB_DATA 3
RANGE $A68F-$A692 DB_DATA 3
RANGE $A692-$A695 DB_DATA 3
RANGE $A695-$A696 DB_DATA 1
RANGE $A696-$A699 DB_DATA 3
RANGE $A699-$A69C DB_DATA 3
RANGE $A69C-$A69F DB_DATA 3
RANGE $A69F-$A6A2 DB_DATA 3
RANGE $A6A2-$A6A5 DB_DATA 3
RANGE $A6A5-$A6A8 DB_DATA 3
RANGE $A6A8-$A6A9 DB_DATA 1
RANGE $A6A9-$A6AC DB_DATA 3
RANGE $A6AC-$A6AF DB_DATA 3
RANGE $A6AF-$A6B2 DB_DATA 3
RANGE $A6B2-$A6B5 DB_DATA 3
RANGE $A6B5-$A6B6 DB_DATA 1
RANGE $A6B6-$A6B9 DB_DATA 3
RANGE $A6B9-$A6BC DB_DATA 3
RANGE $A6BC-$A6BF DB_DATA 3
RANGE $A6BF-$A6C2 DB_DATA 3
RANGE $A6C2-$A6C5 DB_DATA 3
RANGE $A6C5-$A6C6 DB_DATA 1
RANGE $A6C6-$A6C9 DB_DATA 3
RANGE $A6C9-$A6CC DB_DATA 3
RANGE $A6CC-$A6CF DB_DATA 3
RANGE $A6CF-$A6D2 DB_DATA 3
RANGE $A6D2-$A6D3 DB_DATA 1
RANGE $A6D3-$A6D6 DB_DATA 3
RANGE $A6D6-$A6D9 DB_DATA 3
RANGE $A6D9-$A6DC DB_DATA 3
RANGE $A6DC-$A6DF DB_DATA 3
RANGE $A6DF-$A6E2 DB_DATA 3
RANGE $A6E2-$A6E5 DB_DATA 3
RANGE $A6E5-$A6E8 DB_DATA 3
RANGE $A6E8-$A6EB DB_DATA 3
RANGE $A6EB-$A6EE DB_DATA 3
RANGE $A6EE-$A6F1 DB_DATA 3
RANGE $A6F1-$A6F2 DB_DATA 1
RANGE $A6F2-$A6F5 DB_DATA 3
RANGE $A6F5-$A6F8 DB_DATA 3
RANGE $A6F8-$A6FB DB_DATA 3
RANGE $A6FB-$A6FE DB_DATA 3
RANGE $A6FE-$A701 DB_DATA 3
RANGE $A701-$A704 DB_DATA 3
RANGE $A704-$A707 DB_DATA 3
RANGE $A707-$A708 DB_DATA 1
RANGE $A708-$A70B DB_DATA 3
RANGE $A70B-$A70E DB_DATA 3
RANGE $A70E-$A711 DB_DATA 3
RANGE $A711-$A714 DB_DATA 3
RANGE $A714-$A717 DB_DATA 3
RANGE $A717-$A71A DB_DATA 3
RANGE $A71A-$A71D DB_DATA 3
RANGE $A71D-$A720 DB_DATA 3
RANGE $A720-$A723 DB_DATA 3
RANGE $A723-$A726 DB_DATA 3
RANGE $A726-$A729 DB_DATA 3
RANGE $A729-$A72C DB_DATA 3
RANGE $A72C-$A72D DB_DATA 1
RANGE $A72D-$A730 DB_DATA 3
RANGE $A730-$A733 DB_DATA 3
RANGE $A733-$A736 DB_DATA 3
RANGE $A736-$A739 DB_DATA 3
RANGE $A739-$A73C DB_DATA 3
RANGE $A73C-$A73F DB_DATA 3
RANGE $A73F-$A742 DB_DATA 3
RANGE $A742-$A745 DB_DATA 3
RANGE $A745-$A746 DB_DATA 1
RANGE $A746-$A749 DB_DATA 3
RANGE $A749-$A74C DB_DATA 3
RANGE $A74C-$A74F DB_DATA 3
RANGE $A74F-$A752 DB_DATA 3
RANGE $A752-$A755 DB_DATA 3
RANGE $A755-$A758 DB_DATA 3
RANGE $A758-$A75B DB_DATA 3
RANGE $A75B-$A75E DB_DATA 3
RANGE $A75E-$A761 DB_DATA 3
RANGE $A761-$A764 DB_DATA 3
RANGE $A764-$A767 DB_DATA 3
RANGE $A767-$A768 DB_DATA 1
RANGE $A768-$A76B DB_DATA 3
RANGE $A76B-$A76E DB_DATA 3
RANGE $A76E-$A771 DB_DATA 3
RANGE $A771-$A774 DB_DATA 3
RANGE $A774-$A777 DB_DATA 3
RANGE $A777-$A778 DB_DATA 1
RANGE $A778-$A77B DB_DATA 3
RANGE $A77B-$A77E DB_DATA 3
RANGE $A77E-$A781 DB_DATA 3
RANGE $A781-$A784 DB_DATA 3
RANGE $A784-$A787 DB_DATA 3
RANGE $A787-$A78A DB_DATA 3
RANGE $A78A-$A78D DB_DATA 3
RANGE $A78D-$A78E DB_DATA 1
RANGE $A78E-$A791 DB_DATA 3
RANGE $A791-$A794 DB_DATA 3
RANGE $A794-$A797 DB_DATA 3
RANGE $A797-$A79A DB_DATA 3
RANGE $A79A-$A79B DB_DATA 1
RANGE $A79B-$A79E DB_DATA 3
RANGE $A79E-$A7A1 DB_DATA 3
RANGE $A7A1-$A7A4 DB_DATA 3
RANGE $A7A4-$A7A7 DB_DATA 3
RANGE $A7A7-$A7AA DB_DATA 3
RANGE $A7AA-$A7AD DB_DATA 3
RANGE $A7AD-$A7AE DB_DATA 1
RANGE $A7AE-$A7B1 DB_DATA 3
RANGE $A7B1-$A7B4 DB_DATA 3
RANGE $A7B4-$A7B7 DB_DATA 3
RANGE $A7B7-$A7BA DB_DATA 3
RANGE $A7BA-$A7BB DB_DATA 1
RANGE $A7BB-$A7BE DB_DATA 3
RANGE $A7BE-$A7C1 DB_DATA 3
RANGE $A7C1-$A7C4 DB_DATA 3
RANGE $A7C4-$A7C7 DB_DATA 3
RANGE $A7C7-$A7CA DB_DATA 3
RANGE $A7CA-$A7CD DB_DATA 3
RANGE $A7CD-$A7CE DB_DATA 1
RANGE $A7CE-$A7D1 DB_DATA 3
RANGE $A7D1-$A7D4 DB_DATA 3
RANGE $A7D4-$A7D7 DB_DATA 3
RANGE $A7D7-$A7DA DB_DATA 3
RANGE $A7DA-$A7DD DB_DATA 3
RANGE $A7DD-$A7DE DB_DATA 1
RANGE $A7DE-$A7E1 DB_DATA 3
RANGE $A7E1-$A7E4 DB_DATA 3
RANGE $A7E4-$A7E7 DB_DATA 3
RANGE $A7E7-$A7EA DB_DATA 3
RANGE $A7EA-$A7ED DB_DATA 3
RANGE $A7ED-$A7EE DB_DATA 1
RANGE $A7EE-$A7F1 DB_DATA 3
RANGE $A7F1-$A7F2 DB_DATA 1
RANGE $A7F2-$A7F5 DB_DATA 3
RANGE $A7F5-$A7F8 DB_DATA 3
RANGE $A7F8-$A7FB DB_DATA 3
RANGE $A7FB-$A7FE DB_DATA 3
RANGE $A7FE-$A801 DB_DATA 3
RANGE $A801-$A804 DB_DATA 3
RANGE $A804-$A807 DB_DATA 3
RANGE $A807-$A80A DB_DATA 3
RANGE $A80A-$A80B DB_DATA 1
RANGE $A80B-$A80E DB_DATA 3
RANGE $A80E-$A811 DB_DATA 3
RANGE $A811-$A814 DB_DATA 3
RANGE $A814-$A817 DB_DATA 3
RANGE $A817-$A818 DB_DATA 1
RANGE $A818-$A81B DB_DATA 3
RANGE $A81B-$A81E DB_DATA 3
RANGE $A81E-$A821 DB_DATA 3
RANGE $A821-$A824 DB_DATA 3
RANGE $A824-$A827 DB_DATA 3
RANGE $A827-$A82A DB_DATA 3
RANGE $A82A-$A82D DB_DATA 3
RANGE $A82D-$A82E DB_DATA 1
RANGE $A82E-$A831 DB_DATA 3
RANGE $A831-$A834 DB_DATA 3
RANGE $A834-$A837 DB_DATA 3
RANGE $A837-$A83A DB_DATA 3
RANGE $A83A-$A83D DB_DATA 3
RANGE $A83D-$A840 DB_DATA 3
RANGE $A840-$A843 DB_DATA 3
RANGE $A843-$A846 DB_DATA 3
RANGE $A846-$A849 DB_DATA 3
RANGE $A849-$A84C DB_DATA 3
RANGE $A84C-$A84D DB_DATA 1
RANGE $A84D-$A850 DB_DATA 3
RANGE $A850-$A853 DB_DATA 3
RANGE $A853-$A856 DB_DATA 3
RANGE $A856-$A859 DB_DATA 3
RANGE $A859-$A85C DB_DATA 3
RANGE $A85C-$A85F DB_DATA 3
RANGE $A85F-$A860 DB_DATA 1
RANGE $A860-$A863 DB_DATA 3
RANGE $A863-$A866 DB_DATA 3
RANGE $A866-$A869 DB_DATA 3
RANGE $A869-$A86C DB_DATA 3
RANGE $A86C-$A86F DB_DATA 3
RANGE $A86F-$A872 DB_DATA 3
RANGE $A872-$A873 DB_DATA 1
RANGE $A873-$A876 DB_DATA 3
RANGE $A876-$A879 DB_DATA 3
RANGE $A879-$A87C DB_DATA 3
RANGE $A87C-$A87F DB_DATA 3
RANGE $A87F-$A882 DB_DATA 3
RANGE $A882-$A885 DB_DATA 3
RANGE $A885-$A888 DB_DATA 3
RANGE $A888-$A889 DB_DATA 1
RANGE $A889-$A88C DB_DATA 3
RANGE $A88C-$A88F DB_DATA 3
RANGE $A88F-$A892 DB_DATA 3
RANGE $A892-$A893 DB_DATA 1
RANGE $A893-$A896 DB_DATA 3
RANGE $A896-$A899 DB_DATA 3
RANGE $A899-$A89C DB_DATA 3
RANGE $A89C-$A89F DB_DATA 3
RANGE $A89F-$A8A2 DB_DATA 3
RANGE $A8A2-$A8A5 DB_DATA 3
RANGE $A8A5-$A8A8 DB_DATA 3
RANGE $A8A8-$A8A9 DB_DATA 1
RANGE $A8A9-$A8AC DB_DATA 3
RANGE $A8AC-$A8AF DB_DATA 3
RANGE $A8AF-$A8B2 DB_DATA 3
RANGE $A8B2-$A8B5 DB_DATA 3
RANGE $A8B5-$A8B8 DB_DATA 3
RANGE $A8B8-$A8BB DB_DATA 3
RANGE $A8BB-$A8BC DB_DATA 1
RANGE $A8BC-$A8BF DB_DATA 3
RANGE $A8BF-$A8C2 DB_DATA 3
RANGE $A8C2-$A8C5 DB_DATA 3
RANGE $A8C5-$A8C8 DB_DATA 3
RANGE $A8C8-$A8CB DB_DATA 3
RANGE $A8CB-$A8CC DB_DATA 1
RANGE $A8CC-$B639 CODE
RANGE $B639-$B63A DB_DATA 1
RANGE $B63A-$B63B DB_DATA 1
RANGE $B63B-$B63C DB_DATA 1
RANGE $B63C-$B63D DB_DATA 1
RANGE $B63D-$B63E DB_DATA 1
RANGE $B63E-$B63F DB_DATA 1
RANGE $B63F-$B640 DB_DATA 1
RANGE $B640-$B641 DB_DATA 1
RANGE $B641-$B642 DB_DATA 1
RANGE $B642-$B643 DB_DATA 1
RANGE $B643-$B644 DB_DATA 1
RANGE $B644-$B645 DB_DATA 1
RANGE $B645-$B646 DB_DATA 1
RANGE $B646-$B647 DB_DATA 1
RANGE $B647-$B648 DB_DATA 1
RANGE $B648-$B649 DB_DATA 1
RANGE $B649-$B64A DB_DATA 1
RANGE $B64A-$B64B DB_DATA 1
RANGE $B64B-$B64C DB_DATA 1
RANGE $B64C-$B64D DB_DATA 1
RANGE $B64D-$B7BD CODE
RANGE $B7BD-$B7BF DB_DATA 2
RANGE $B7BF-$B7C1 DB_DATA 2
RANGE $B7C1-$B7C3 DB_DATA 2
RANGE $B7C3-$B7C5 DB_DATA 2
RANGE $B7C5-$B7C7 DB_DATA 2
RANGE $B7C7-$B7C9 DB_DATA 2
RANGE $B7C9-$B7CB DB_DATA 2
RANGE $B7CB-$B7CD DB_DATA 2
RANGE $B7CD-$B7CF DB_DATA 2
RANGE $B7CF-$B7D1 DB_DATA 2
RANGE $B7D1-$B7D3 DB_DATA 2
RANGE $B7D3-$B7D5 DB_DATA 2
RANGE $B7D5-$B7D7 DB_DATA 2
RANGE $B7D7-$B7D9 DB_DATA 2
RANGE $B7D9-$B7DB DB_DATA 2
RANGE $B7DB-$B7DD DB_DATA 2
RANGE $B7DD-$B7DF DB_DATA 2
RANGE $B7DF-$B7E1 DB_DATA 2
RANGE $B7E1-$B7E3 DB_DATA 2
RANGE $B7E3-$B7E5 DB_DATA 2
RANGE $B7E5-$B7E7 DB_DATA 2
RANGE $B7E7-$B7E9 DB_DATA 2
RANGE $B7E9-$B7EB DB_DATA 2
RANGE $B7EB-$B7ED DB_DATA 2
RANGE $B7ED-$B7EF DB_DATA 2
RANGE $B7EF-$B7F1 DB_DATA 2
RANGE $B7F1-$B7F3 DB_DATA 2
RANGE $B7F3-$B7F5 DB_DATA 2
RANGE $B7F5-$B7F7 DB_DATA 2
RANGE $B7F7-$B7F9 DB_DATA 2
RANGE $B7F9-$B7FB DB_DATA 2
RANGE $B7FB-$B7FD DB_DATA 2
RANGE $B7FD-$B7FF DB_DATA 2
RANGE $B7FF-$B801 DB_DATA 2
RANGE $B801-$B803 DB_DATA 2
RANGE $B803-$B805 DB_DATA 2
RANGE $B805-$B807 DB_DATA 2
RANGE $B807-$B809 DB_DATA 2
RANGE $B809-$B80B DB_DATA 2
RANGE $B80B-$B80D DB_DATA 2
RANGE $B80D-$B80F DB_DATA 2
RANGE $B80F-$B811 DB_DATA 2
RANGE $B811-$B813 DB_DATA 2
RANGE $B813-$B815 DB_DATA 2
RANGE $B815-$B817 DB_DATA 2
RANGE $B817-$B819 DB_DATA 2
RANGE $B819-$B81B DB_DATA 2
RANGE $B81B-$B81D DB_DATA 2
RANGE $B81D-$B81F DB_DATA 2
RANGE $B81F-$B821 DB_DATA 2
RANGE $B821-$B823 DB_DATA 2
RANGE $B823-$B825 DB_DATA 2
RANGE $B825-$B827 DB_DATA 2
RANGE $B827-$B829 DB_DATA 2
RANGE $B829-$B82B DB_DATA 2
RANGE $B82B-$B82D DB_DATA 2
RANGE $B82D-$B82F DB_DATA 2
RANGE $B82F-$B831 DB_DATA 2
RANGE $B831-$B833 DB_DATA 2
RANGE $B833-$B835 DB_DATA 2
RANGE $B835-$B837 DB_DATA 2
RANGE $B837-$B839 DB_DATA 2
RANGE $B839-$B83B DB_DATA 2
RANGE $B83B-$B83D DB_DATA 2
RANGE $B83D-$B83F DB_DATA 2
RANGE $B83F-$B841 DB_DATA 2
RANGE $B841-$B843 DB_DATA 2
RANGE $B843-$B845 DB_DATA 2
RANGE $B845-$B847 DB_DATA 2
RANGE $B847-$B849 DB_DATA 2
RANGE $B849-$B84B DB_DATA 2
RANGE $B84B-$B84D DB_DATA 2
RANGE $B84D-$B84F DB_DATA 2
RANGE $B84F-$B851 DB_DATA 2
RANGE $B851-$B853 DB_DATA 2
RANGE $B853-$B855 DB_DATA 2
RANGE $B855-$B857 DB_DATA 2
RANGE $B857-$B859 DB_DATA 2
RANGE $B859-$B85B DB_DATA 2
RANGE $B85B-$B85D DB_DATA 2
RANGE $B85D-$B85F DB_DATA 2
RANGE $B85F-$B861 DB_DATA 2
RANGE $B861-$B863 DB_DATA 2
RANGE $B863-$B865 DB_DATA 2
RANGE $B865-$B867 DB_DATA 2
RANGE $B867-$B869 DB_DATA 2
RANGE $B869-$B86B DB_DATA 2
RANGE $B86B-$B86D DB_DATA 2
RANGE $B86D-$B86F DB_DATA 2
RANGE $B86F-$B871 DB_DATA 2
RANGE $B871-$B873 DB_DATA 2
RANGE $B873-$B875 DB_DATA 2
RANGE $B875-$B877 DB_DATA 2
RANGE $B877-$B879 DB_DATA 2
RANGE $B879-$B87B DB_DATA 2
RANGE $B87B-$B87D DB_DATA 2
RANGE $B87D-$B87F DB_DATA 2
RANGE $B87F-$B881 DB_DATA 2
RANGE $B881-$B883 DB_DATA 2
RANGE $B883-$B885 DB_DATA 2
RANGE $B885-$B887 DB_DATA 2
RANGE $B887-$B889 DB_DATA 2
RANGE $B889-$B88B DB_DATA 2
RANGE $B88B-$B88D DB_DATA 2
RANGE $B88D-$B88F DB_DATA 2
RANGE $B88F-$B891 DB_DATA 2
RANGE $B891-$B893 DB_DATA 2
RANGE $B893-$B895 DB_DATA 2
RANGE $B895-$B897 DB_DATA 2
RANGE $B897-$B899 DB_DATA 2
RANGE $B899-$B89B DB_DATA 2
RANGE $B89B-$B89D DB_DATA 2
RANGE $B89D-$B89F DB_DATA 2
RANGE $B89F-$B8A1 DB_DATA 2
RANGE $B8A1-$B8A3 DB_DATA 2
RANGE $B8A3-$B8A5 DB_DATA 2
RANGE $B8A5-$B8A7 DB_DATA 2
RANGE $B8A7-$B8A9 DB_DATA 2
RANGE $B8A9-$B8AB DB_DATA 2
RANGE $B8AB-$B8AD DB_DATA 2
RANGE $B8AD-$B8AF DB_DATA 2
RANGE $B8AF-$B8B1 DB_DATA 2
RANGE $B8B1-$B8B3 DB_DATA 2
RANGE $B8B3-$B8B5 DB_DATA 2
RANGE $B8B5-$B8B7 DB_DATA 2
RANGE $B8B7-$B8B9 DB_DATA 2
RANGE $B8B9-$B8BB DB_DATA 2
RANGE $B8BB-$B8BD DB_DATA 2
RANGE $B8BD-$B8BF DB_DATA 2
RANGE $B8BF-$B8C1 DB_DATA 2
RANGE $B8C1-$B8C3 DB_DATA 2
RANGE $B8C3-$B8C5 DB_DATA 2
RANGE $B8C5-$B8C7 DB_DATA 2
RANGE $B8C7-$B8C9 DB_DATA 2
RANGE $B8C9-$B8CB DB_DATA 2
RANGE $B8CB-$B8CD DB_DATA 2
RANGE $B8CD-$B8CF DB_DATA 2
RANGE $B8CF-$B8D1 DB_DATA 2
RANGE $B8D1-$B8D3 DB_DATA 2
RANGE $B8D3-$B8D5 DB_DATA 2
RANGE $B8D5-$B8D7 DB_DATA 2
RANGE $B8D7-$B8D9 DB_DATA 2
RANGE $B8D9-$B8DB DB_DATA 2
RANGE $B8DB-$B8DD DB_DATA 2
RANGE $B8DD-$B8DF DB_DATA 2
RANGE $B8DF-$B8E1 DB_DATA 2
RANGE $B8E1-$B8E3 DB_DATA 2
RANGE $B8E3-$B8E5 DB_DATA 2
RANGE $B8E5-$B8E7 DB_DATA 2
RANGE $B8E7-$B8E9 DB_DATA 2
RANGE $B8E9-$B8EB DB_DATA 2
RANGE $B8EB-$B8ED DB_DATA 2
RANGE $B8ED-$B8EF DB_DATA 2
RANGE $B8EF-$B8F1 DB_DATA 2
RANGE $B8F1-$B8F3 DB_DATA 2
RANGE $B8F3-$B8F5 DB_DATA 2
RANGE $B8F5-$B8F7 DB_DATA 2
RANGE $B8F7-$B8F9 DB_DATA 2
RANGE $B8F9-$B8FB DB_DATA 2
RANGE $B8FB-$B8FD DB_DATA 2
RANGE $B8FD-$B8FF DB_DATA 2
RANGE $B8FF-$B901 DB_DATA 2
RANGE $B901-$B903 DB_DATA 2
RANGE $B903-$B905 DB_DATA 2
RANGE $B905-$B907 DB_DATA 2
RANGE $B907-$B909 DB_DATA 2
RANGE $B909-$B90B DB_DATA 2
RANGE $B90B-$B90D DB_DATA 2
RANGE $B90D-$B90F DB_DATA 2
RANGE $B90F-$B911 DB_DATA 2
RANGE $B911-$B913 DB_DATA 2
RANGE $B913-$B915 DB_DATA 2
RANGE $B915-$B917 DB_DATA 2
RANGE $B917-$B919 DB_DATA 2
RANGE $B919-$B91B DB_DATA 2
RANGE $B91B-$B91D DB_DATA 2
RANGE $B91D-$B91F DB_DATA 2
RANGE $B91F-$B921 DB_DATA 2
RANGE $B921-$B923 DB_DATA 2
RANGE $B923-$B925 DB_DATA 2
RANGE $B925-$B927 DB_DATA 2
RANGE $B927-$B929 DB_DATA 2
RANGE $B929-$B92B DB_DATA 2
RANGE $B92B-$B92D DB_DATA 2
RANGE $B92D-$B92F DB_DATA 2
RANGE $B92F-$B931 DB_DATA 2
RANGE $B931-$B933 DB_DATA 2
RANGE $B933-$B935 DB_DATA 2
RANGE $B935-$B937 DB_DATA 2
RANGE $B937-$B939 DB_DATA 2
RANGE $B939-$B93B DB_DATA 2
RANGE $B93B-$B93D DB_DATA 2
RANGE $B93D-$B93F DB_DATA 2
RANGE $B93F-$B941 DB_DATA 2
RANGE $B941-$B943 DB_DATA 2
RANGE $B943-$B945 DB_DATA 2
RANGE $B945-$B947 DB_DATA 2
RANGE $B947-$B949 DB_DATA 2
RANGE $B949-$B94B DB_DATA 2
RANGE $B94B-$B94D DB_DATA 2
RANGE $B94D-$B94F DB_DATA 2
RANGE $B94F-$B951 DB_DATA 2
RANGE $B951-$B953 DB_DATA 2
RANGE $B953-$B955 DB_DATA 2
RANGE $B955-$B957 DB_DATA 2
RANGE $B957-$B959 DB_DATA 2
RANGE $B959-$B95B DB_DATA 2
RANGE $B95B-$B95D DB_DATA 2
RANGE $B95D-$B95F DB_DATA 2
RANGE $B95F-$B961 DB_DATA 2
RANGE $B961-$B963 DB_DATA 2
RANGE $B963-$B965 DB_DATA 2
RANGE $B965-$B967 DB_DATA 2
RANGE $B967-$B969 DB_DATA 2
RANGE $B969-$B96B DB_DATA 2
RANGE $B96B-$B96D DB_DATA 2
RANGE $B96D-$B96F DB_DATA 2
RANGE $B96F-$B971 DB_DATA 2
RANGE $B971-$B973 DB_DATA 2
RANGE $B973-$B975 DB_DATA 2
RANGE $B975-$B977 DB_DATA 2
RANGE $B977-$B979 DB_DATA 2
RANGE $B979-$B97B DB_DATA 2
RANGE $B97B-$B97D DB_DATA 2
RANGE $B97D-$B97F DB_DATA 2
RANGE $B97F-$B981 DB_DATA 2
RANGE $B981-$B983 DB_DATA 2
RANGE $B983-$B985 DB_DATA 2
RANGE $B985-$B987 DB_DATA 2
RANGE $B987-$B989 DB_DATA 2
RANGE $B989-$B98B DB_DATA 2
RANGE $B98B-$B98D DB_DATA 2
RANGE $B98D-$B98F DB_DATA 2
RANGE $B98F-$B991 DB_DATA 2
RANGE $B991-$B993 DB_DATA 2
RANGE $B993-$B995 DB_DATA 2
RANGE $B995-$B997 DB_DATA 2
RANGE $B997-$B999 DB_DATA 2
RANGE $B999-$B99B DB_DATA 2
RANGE $B99B-$B99D DB_DATA 2
RANGE $B99D-$B99F DB_DATA 2
RANGE $B99F-$B9A1 DB_DATA 2
RANGE $B9A1-$B9A3 DB_DATA 2
RANGE $B9A3-$B9A5 DB_DATA 2
RANGE $B9A5-$B9A7 DB_DATA 2
RANGE $B9A7-$B9A9 DB_DATA 2
RANGE $B9A9-$B9AB DB_DATA 2
RANGE $B9AB-$B9AD DB_DATA 2
RANGE $B9AD-$B9AF DB_DATA 2
RANGE $B9AF-$B9B1 DB_DATA 2
RANGE $B9B1-$B9B3 DB_DATA 2
RANGE $B9B3-$B9B5 DB_DATA 2
RANGE $B9B5-$B9B7 DB_DATA 2
RANGE $B9B7-$B9B9 DB_DATA 2
RANGE $B9B9-$B9BB DB_DATA 2
RANGE $B9BB-$B9BD DB_DATA 2
RANGE $B9BD-$BBC4 CODE
RANGE $BBC4-$BBCC CHAR_DATA 8
RANGE $BBCC-$BBD4 CHAR_DATA 8
RANGE $BBD4-$BBDC CHAR_DATA 8
RANGE $BBDC-$BBEC CHAR_DATA 16
RANGE $BBEC-$BBF6 CHAR_DATA 10
RANGE $BBF6-$BE02 CODE
RANGE $BE02-$BE06 DW_DATA 2
RANGE $BE06-$BE0A DW_DATA 2
RANGE $BE0A-$BE0E DW_DATA 2
RANGE $BE0E-$BE12 DW_DATA 2
RANGE $BE12-$BE16 DW_DATA 2
RANGE $BE16-$BE1A DW_DATA 2
RANGE $BE1A-$BE1E DW_DATA 2
RANGE $BE1E-$BE22 DW_DATA 2
RANGE $BE22-$BE26 DW_DATA 2
RANGE $BE26-$BE2A DW_DATA 2
RANGE $BE2A-$BE2E DW_DATA 2
RANGE $BE2E-$BE32 DW_DATA 2
RANGE $BE32-$BE36 DW_DATA 2
RANGE $BE36-$BE3A DW_DATA 2
RANGE $BE3A-$BE3E DW_DATA 2
RANGE $BE3E-$BE42 DW_DATA 2
RANGE $BE42-$BE4A CHAR_DATA 8
RANGE $BE4A-$BE52 CHAR_DATA 8
RANGE $BE52-$BE5A CHAR_DATA 8
RANGE $BE5A-$BE62 CHAR_DATA 8
RANGE $BE62-$BE6A CHAR_DATA 8
RANGE $BE6A-$BE72 CHAR_DATA 8
RANGE $BE72-$BE7A CHAR_DATA 8
RANGE $BE7A-$BE82 CHAR_DATA 8
RANGE $BE82-$BE8A CHAR_DATA 8
RANGE $BE8A-$BE92 CHAR_DATA 8
RANGE $BE92-$BE9A CHAR_DATA 8
RANGE $BE9A-$BF6E CODE
RANGE $BF6E-$BF7C DW_DATA 7

