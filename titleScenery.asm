;BANK 0
; generated by vecci, but changed by hand afterwards
NO_OF_LANES         =        (1 +1)                       ; plus one for ZERO 
BEHAVIOUR_NONE      equ      0 
BEHAVIOUR_PAUSE     equ      4 
BEHAVIOUR_ANIMATION_LOOP  equ  8 
ELEMENT_ANIM        EQU      0 
ELEMENT_PAUSE       EQU      1 
ELEMENT_LIST        EQU      2 
ELEMENT_YM          EQU      3 
ELEMENT_GOTO        EQU      4 
                    bss      
                    org      arkosPlayerMemEnd 
; V2
                    struct   laneData 
                    ds       LANE_CURRENT_ELEMENT,1 
                    ds       LANE_DELAY_COUNT,1 
                    ds       LANE_ANIM_COUNT,1 
                    ds       LANE_ANIM_LOOP,1 
                    ds       LANE_CURRENT_MOVE_SCALE, 1 
                    ds       LANE_CURRENT_DRAW_SCALE, 1 
                    ds       LANE_SCALE_TO,1 
                    ds       LANE_SCALE_DELAY,1 
                    ds       LANE_SCALE_INCREASE,1 
                    ds       LANE_CURRENT_INTENSITY, 1 
                    ds       LANE_INTENSITY_DELAY,1 
                    ds       LANE_INTENSITY_TO,1 
                    ds       LANE_INTENSITY_INCREASE,1 
                    ds       LANE_CURRENT_POSITION, 0 
                    ds       LANE_CURRENT_POSITION_Y, 1 
                    ds       LANE_CURRENT_POSITION_X, 1 
                    ds       LANE_POS_TO, 0 
                    ds       LANE_POS_Y_TO,1 
                    ds       LANE_POS_X_TO,1 
                    ds       LANE_POS_DELAY, 0 
                    ds       LANE_POS_DELAY_Y,1 
                    ds       LANE_POS_DELAY_X,1 
                    ds       LANE_POS_INCREASE, 0 
                    ds       LANE_POS_INCREASE_Y,1 
                    ds       LANE_POS_INCREASE_X,1 
                    ds       LANE_ELEMENT_COUNT,2 
                    ds       LANE_DRAW,2 
                    ds       LANE_ROM_DATA,2 
                    end struct 
                    struct   elementData 
                    ds       ELEMENT_ANIM_LIST,2 
                    ds       ELEMENT_ANIM_DELAY,1 
                    ds       ELEMENT_SCALE_FROM,1 
                    ds       ELEMENT_SCALE_TO,1 
                    ds       ELEMENT_SCALE_DELAY,1 
                    ds       ELEMENT_SCALE_INCREASE,1 
                    ds       ELEMENT_INTENSITY_FROM,1 
                    ds       ELEMENT_INTENSITY_TO,1 
                    ds       ELEMENT_INTENSITY_DELAY,1 
                    ds       ELEMENT_INTENSITY_INCREASE,1 
                    ds       ELEMENT_POS_FROM,0 
                    ds       ELEMENT_POS_FROM_Y,1 
                    ds       ELEMENT_POS_FROM_X,1 
                    ds       ELEMENT_POS_TO,0 
                    ds       ELEMENT_POS_TO_Y,1 
                    ds       ELEMENT_POS_TO_X,1 
                    ds       ELEMENT_POS_DELAY,0 
                    ds       ELEMENT_POS_DELAY_Y,1 
                    ds       ELEMENT_POS_DELAY_X,1 
                    ds       ELEMENT_POS_INCREASE,0 
                    ds       ELEMENT_POS_INCREASE_Y,1 
                    ds       ELEMENT_POS_INCREASE_X,1 
                    ds       ELEMENT_MOVE_SCALE,1 
                    ds       ELEMENT_DRAW,2 
                    ds       ELEMENT_BEHAVIOUR,1 
                    ds       ELEMENT_END_COUNT,2 
                    ds       ELEMENT_TYPE, 1 
                    end struct 
;
; .....................................................
;
laneRAM             ds       laneData*NO_OF_LANES 
roundCounter        ds       2 
stageCounter        ds       1 
;
; .....................................................
;
_INTENSITY_A        macro    
                    STA      <VIA_port_a                  ;Store intensity in D/A 
                    LDD      #$0504                       ;mux disabled channel 2 
                    STA      <VIA_port_b                  ; 
                    STB      <VIA_port_b                  ;mux enabled channel 2 
                    STA      <VIA_port_b                  ;turn off mux 
                    endm     
;
; .....................................................
;
MY_MOVE_TO_D_START  macro    
                    STA      <VIA_port_a                  ;Store Y in D/A register 
                    LDA      #$CE                         ;Blank low, zero high? 
                    STA      <VIA_cntl                    ; 
                    CLRA     
                    STA      <VIA_port_b                  ;Enable mux ; hey dis si "break integratorzero 440" 
                    STA      <VIA_shift_reg               ;Clear shift regigster 
 if  IS_VIA_FAULTY_RESISTENT = 1 
                    inca     
                    sta      <VIA_port_b 
                    deca     
 else  
                    inc      <VIA_port_b 
 endif  
                    STB      <VIA_port_a                  ;Store X in D/A register 
                    STA      <VIA_t1_cnt_hi               ;enable timer 
                    endm     
;
; .....................................................
;
MY_MOVE_TO_A_END    macro    
                    local    LF33D 
                    LDA      #$40                         ; 
LF33D:              BITA     <VIA_int_flags               ; 
                    BEQ      LF33D                        ; 
                    endm     
MY_MOVE_TO_B_END    macro    
                    local    LF33D 
                    LDB      #$40                         ; 
LF33D:              BITB     <VIA_int_flags               ; 
                    BEQ      LF33D                        ; 
                    endm     
;
; .....................................................
;
MY_MOVE_TO_D        macro    
; optimzed, tweaked not perfect... 'MOVE TO D' makro
                    MY_MOVE_TO_D_START  
                    MY_MOVE_TO_B_END  
                    endm     
                    CODE                                  ; end of game header 
;***************************************************************************
; CODE SECTION
;***************************************************************************
; here the cartridge program starts off
oneScenarioStep1: 
                                                          ; JSR Wait_Recal ; Vectrex BIOS recalibration 
                    clr      sceneryLooped 
                    ldy      #laneRAM 
doNextLane 
                    ldd      ,y 
                    beq      lanesDone 
                    jsr      doLane 
                    leay     laneData,y 
                    bra      doNextLane 

lanesDone: 
; increase round counter!
                    ldx      roundCounter 
                    leax     1,x 
                    stx      roundCounter 
                    rts      

; V2
;***************************************************************************
; in U pointer to lane RAM
; in X pointer to lane Data
initLane: 
                    stx      LANE_ROM_DATA, u 
                    ldx      ,x                           ; first element 
                    clr      LANE_CURRENT_ELEMENT,u 
init_element: 
                    lda      ELEMENT_BEHAVIOUR,x 
                    anda     #BEHAVIOUR_ANIMATION_LOOP 
                    sta      LANE_ANIM_LOOP,u 
                    lda      ELEMENT_MOVE_SCALE,x         ; 
                    sta      LANE_CURRENT_MOVE_SCALE,u 
                    lda      ELEMENT_ANIM_DELAY ,x 
                    sta      LANE_DELAY_COUNT, u 
                    clr      LANE_ANIM_COUNT, u 
; SCALE
                    lda      ELEMENT_SCALE_FROM,x         ; 
                    sta      LANE_CURRENT_DRAW_SCALE,u 
                    lda      ELEMENT_SCALE_DELAY,x 
                    sta      LANE_SCALE_DELAY,u 
                    lda      ELEMENT_SCALE_INCREASE,x 
                    sta      LANE_SCALE_INCREASE,u 
                    lda      ELEMENT_SCALE_TO,x           ; 
                    sta      LANE_SCALE_TO,u 
; INTENSITY
                    lda      ELEMENT_INTENSITY_FROM,x     ; 
                    sta      LANE_CURRENT_INTENSITY,u 
                    lda      ELEMENT_INTENSITY_DELAY,x 
                    sta      LANE_INTENSITY_DELAY,u 
                    lda      ELEMENT_INTENSITY_INCREASE,x 
                    sta      LANE_INTENSITY_INCREASE,u 
                    lda      ELEMENT_INTENSITY_TO,x       ; 
                    sta      LANE_INTENSITY_TO,u 
; POS
                    ldd      ELEMENT_POS_FROM,x           ; 
                    std      LANE_CURRENT_POSITION,u 
                    ldd      ELEMENT_POS_DELAY,x 
                    std      LANE_POS_DELAY,u 
                    ldd      ELEMENT_POS_INCREASE,x 
                    std      LANE_POS_INCREASE,u 
                    ldd      ELEMENT_POS_TO,x             ; 
                    std      LANE_POS_TO,u 
                    ldd      ELEMENT_DRAW,x 
                    std      LANE_DRAW,u 
                    ldd      ELEMENT_END_COUNT, x 
                    std      LANE_ELEMENT_COUNT, u 
draw_pause:                                               ;        some direct RTS 
scenarioBreak 
                    rts      

; pointer to lane RAM in Y
initNextElementSilent 
                    ldx      LANE_ROM_DATA,y 
                    lda      LANE_CURRENT_ELEMENT, y 
                    asla     
                    ldx      a,x 
not_gotoElement_s: 
                    tfr      y,u 
                    inc      LANE_CURRENT_ELEMENT,y 
                    inc      stageCounter 
                    lda      LANE_CURRENT_ELEMENT,y 
                    ldx      LANE_ROM_DATA,y 
                    asla     
                    ldx      a,x 
                    bne      not_last_element_s 
                    lda      #$ff 
                    sta      LANE_CURRENT_ELEMENT,y 
                    sta      stageCounter 
                    inc      sceneryLooped 
                    bra      scenarioBreak                ; wehen it should end immeadialty 

                    bra      not_gotoElement_s 

not_last_element_s 
                    bra      init_element 

; pointer to lane RAM in Y
initNextElement 
                    ldx      LANE_ROM_DATA,y 
                    lda      LANE_CURRENT_ELEMENT, y 
                    asla     
                    ldx      a,x 
not_gotoElement: 
                    tfr      y,u 
                    inc      LANE_CURRENT_ELEMENT,y 
                    inc      stageCounter 
                    lda      LANE_CURRENT_ELEMENT,y 
                    ldx      LANE_ROM_DATA,y 
                    asla     
                    ldx      a,x 
                    bne      not_last_element 
                    lda      #$ff 
                    sta      LANE_CURRENT_ELEMENT,y 
                    sta      stageCounter 
                    inc      sceneryLooped 
                    bra      scenarioBreak                ; wehen it should end immeadialty 

                    bra      not_gotoElement 

not_last_element 
                    jsr      init_element 
;***************************************************************************
; pointer to lane RAM in Y
doLane 
                    ldx      LANE_ELEMENT_COUNT,y 
                    leax     -1,x 
                    stx      LANE_ELEMENT_COUNT,y         ; dec element counter 
                    beq      initNextElement 
continueWithElement 
                    ldx      LANE_ROM_DATA,y 
                    lda      LANE_CURRENT_ELEMENT, y 
                    asla     
                    ldx      a,x 
; in x pointer to ROM element data struct
                    dec      LANE_DELAY_COUNT,y 
                    bne      drawCurrentAnimationFrame 
                    lda      ELEMENT_ANIM_DELAY ,x 
                    sta      LANE_DELAY_COUNT, y 
                    inc      LANE_ANIM_COUNT, y 
                    CLRA     
                    LDB      LANE_ANIM_COUNT,y            ; current animation frame 
                    ASLB                                  ; times two since it is a word pointer 
                    ROLA     
                    LDU      ,x                           ; address of data 
                    LDU      d,U 
                    bne      drawCurrentAnimationFrame 
; otherwise this animation is done
; check for loop - or init next lane element!
                    tst      LANE_ANIM_LOOP,y 
                    bne      loopAnim 
                                                          ; stay at current frame 
                    dec      LANE_ANIM_COUNT, y 
                    bra      drawCurrentAnimationFrame 

loopAnim: 
                    clr      LANE_ANIM_COUNT, y           ; for now reset animation 
; todo check for "stay"continueWithElement
drawCurrentAnimationFrame: 
                    lda      LANE_SCALE_INCREASE,y 
                    beq      noScaleChange 
                    dec      LANE_SCALE_DELAY,y 
                    bne      noScaleChange 
                    adda     LANE_CURRENT_DRAW_SCALE,y 
                    sta      LANE_CURRENT_DRAW_SCALE,y 
                    suba     LANE_SCALE_TO,y 
                    bne      scale_final_not_reached 
                    clr      LANE_SCALE_INCREASE,y        ; zero means no change 
                    bra      noScaleChange 

scale_final_not_reached 
                    lda      ELEMENT_SCALE_DELAY,x 
                    sta      LANE_SCALE_DELAY,y 
noScaleChange 
                    lda      LANE_INTENSITY_INCREASE,y 
                    beq      noIntensityChange 
                    dec      LANE_INTENSITY_DELAY,y 
                    bne      noIntensityChange 
                    adda     LANE_CURRENT_INTENSITY,y 
                    sta      LANE_CURRENT_INTENSITY,y 
                    suba     LANE_INTENSITY_TO,y 
                    bne      intensity_final_not_reached 
                    clr      LANE_INTENSITY_INCREASE,y    ; zero means no change 
                    bra      noIntensityChange 

intensity_final_not_reached 
                    lda      ELEMENT_INTENSITY_DELAY,x 
                    sta      LANE_INTENSITY_DELAY,y 
noIntensityChange 
                    lda      LANE_POS_INCREASE_X,y 
                    beq      noXChange 
                    dec      LANE_POS_DELAY_X,y 
                    bne      noXChange 
                    adda     LANE_CURRENT_POSITION_X,y 
                    sta      LANE_CURRENT_POSITION_X,y 
                    suba     LANE_POS_X_TO,y 
                    bne      X_final_not_reached 
                    clr      LANE_POS_INCREASE_X,y        ; zero means no change 
                    bra      noXChange 

X_final_not_reached 
                    lda      ELEMENT_POS_DELAY_X,x 
                    sta      LANE_POS_DELAY_X,y 
noXChange 
                    lda      LANE_POS_INCREASE_Y,y 
                    beq      noYChange 
                    dec      LANE_POS_DELAY_Y,y 
                    bne      noYChange 
                    adda     LANE_CURRENT_POSITION_Y,y 
                    sta      LANE_CURRENT_POSITION_Y,y 
                    suba     LANE_POS_Y_TO,y 
                    bne      Y_final_not_reached 
                    clr      LANE_POS_INCREASE_Y,y        ; zero means no change 
                    bra      noYChange 

Y_final_not_reached 
                    lda      ELEMENT_POS_DELAY_Y,x 
                    sta      LANE_POS_DELAY_Y,y 
noYChange 
                    lda      LANE_CURRENT_INTENSITY,y 
                    bmi      noIntensity 
                    _INTENSITY_A  
noIntensity 
; todo set intensity - when another vlist that extended sync is done
                    CLRA     
                    LDB      LANE_ANIM_COUNT,y            ; current animation frame 
                    ASLB                                  ; times two since it is a word pointer 
                    ROLA     
                    LDU      ,x                           ; address of data 
                    LDU      d,U 
                    LDd      LANE_CURRENT_POSITION,y      ; current animation frame 
                    tfr      d,x                          ; in x position of list 
; A scale positioning 
; N scale move in list 
                    ldd      LANE_CURRENT_MOVE_SCALE, y 
                    JSR      [LANE_DRAW, y]               ; Vectrex BIOS print routine 
                    rts      

;
; .....................................................
;
;SUB_START
;SUB_END
;########
;########
;########
lane1Data: 
                    dw       element_11 
                    dw       element_12 
                    dw       element_13 
                    dw       element_Bonus1 
                    dw       element_Bonus2 
                    dw       element_Bonus3 
                    dw       element_Bonus4 
                    dw       element_Bonus5 
                    dw       element_Bonus6 
                    dw       element_Bonus7 
                    dw       element_Bonus8 
                    dw       element_Bonus9 
                    dw       element_Bonus10 
                    dw       element_Bonus11 
                    dw       element_Bonus12 
                    dw       element_Bonus13 
                    dw       element_Bonus14 
                    dw       element_Bonus15 
                    dw       element_Bonus16 
                    dw       element_Bonus17 
                    dw       element_Bonus18 
                    dw       element_Bonus19 
                    dw       element_Bonus20 
                    dw       element_15 
                    dw       element_16 
                    dw       0 
element_11: 
                    dw       AnimList_114 
                    db       5                            ; delay 
                    db       9                            ; scale from 
                    db       9                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       -70-Y_OFFSET_DESKTOP, -120   ; -80 ; position from (y,x) 
                    db       -70-Y_OFFSET_DESKTOP, 70     ; position to (y,x) 
                    db       0, 1                         ; position delay (y,x) 
                    db       0, 1                         ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       draw_synced_list             ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       150+40                       ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_12: 
                    dw       AnimList_115 
                    db       8                            ; delay 
                    db       9                            ; scale from 
                    db       9                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       -70-Y_OFFSET_DESKTOP, 60     ; position from (y,x) 
                    db       -70-Y_OFFSET_DESKTOP, 60     ; position to (y,x) 
                    db       0, 0                         ; position delay (y,x) 
                    db       0, 0                         ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       draw_synced_list             ; draw jsr 
                    db       BEHAVIOUR_NONE               ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       30                           ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_13: 
                    dw       0 
                    db       3                            ; delay 
                    db       80                           ; scale from 
                    db       0                            ; scale to 
                    db       1                            ; scale delay 
                    db       -3                           ; scale increase 
                    db       127                          ; intensityFrom 
                    db       0                            ; intensityTo 
                    db       1                            ; intensityDelay 
                    db       -5                           ; intensityIncrease 
                    db       0, 0                         ; position from (y,x) 
                    db       0, 0                         ; position to (y,x) 
                    db       0, 0                         ; position delay (y,x) 
                    db       0, 0                         ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       draw_pause                   ; draw pause 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_PAUSE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       60                           ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_15: 
                    dw       AnimList_118 
                    db       8                            ; delay 
                    db       9                            ; scale from 
                    db       9                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       -70-Y_OFFSET_DESKTOP, 62     ; position from (y,x) 
                    db       -70-Y_OFFSET_DESKTOP, 65     ; position to (y,x) 
                    db       0, 11                        ; position delay (y,x) 
                    db       0, 1                         ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       draw_synced_list             ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       30                           ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_16: 
                    dw       AnimList_119 
                    db       5                            ; delay 
                    db       9                            ; scale from 
                    db       9                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       0                            ; intensityTo 
                    db       5                            ;3 ; intensityDelay 
                    db       -1                           ; intensityIncrease 
                    db       -70-Y_OFFSET_DESKTOP, 70     ; position from (y,x) 
                    db       -70-Y_OFFSET_DESKTOP, -120   ;-80 ; position to (y,x) 
                    db       0, 1                         ; position delay (y,x) 
                    db       0, -1                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       draw_synced_list             ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       150 +40                      ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
BLOW_UP_115         EQU      1 
AnimList_114: 
                    DW       AnimList_114_0               ; list of all single vectorlists in this 
                    DW       AnimList_114_1 
                    DW       AnimList_114_2 
                    DW       AnimList_114_3 
                    DW       AnimList_114_4 
                    DW       AnimList_114_5 
                    DW       AnimList_114_6 
                    DW       AnimList_114_7 
                    DW       0 
AnimList_114_0: 
                    DB       $01, -$43*BLOW_UP_115, -$42*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, -$22*BLOW_UP_115, +$00*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, -$15*BLOW_UP_115, -$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_115, +$43*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2E*BLOW_UP_115, +$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$05*BLOW_UP_115, +$02*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$14*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_115, -$0F*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$18*BLOW_UP_115, +$16*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$22*BLOW_UP_115, -$21*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_115, +$2B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_115, -$28*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_115, -$35*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_115, -$0F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$04*BLOW_UP_115, +$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_115, +$29*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$11*BLOW_UP_115, -$37*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$20*BLOW_UP_115, -$40*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$1C*BLOW_UP_115, -$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_115, +$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_115, +$1C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$11*BLOW_UP_115, +$25*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$21*BLOW_UP_115, -$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_115, +$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_115, +$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_115, +$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1C*BLOW_UP_115, -$14*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$02*BLOW_UP_115, -$13*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_115, +$25*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$27*BLOW_UP_115, -$0E*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$43*BLOW_UP_115, +$0D*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$0C*BLOW_UP_115, +$00*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, -$0F*BLOW_UP_115, +$18*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$38*BLOW_UP_115, +$19*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$33*BLOW_UP_115, -$2A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$21*BLOW_UP_115, -$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_115, -$06*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_115, +$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_115, +$18*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$43*BLOW_UP_115, +$3E*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$07*BLOW_UP_115, +$00*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$15*BLOW_UP_115, +$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$02*BLOW_UP_115, +$10*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_1: 
                    DB       $01, -$14*BLOW_UP_115, -$34*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$16*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_115, +$02*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_115, -$20*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_115, +$13*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_115, +$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$16*BLOW_UP_115, -$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$12*BLOW_UP_115, +$11*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2F*BLOW_UP_115, +$06*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_115, +$17*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_115, +$1C*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$35*BLOW_UP_115, +$22*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$23*BLOW_UP_115, -$1E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_115, +$20*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$42*BLOW_UP_115, +$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$12*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_115, -$28*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$15*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_115, +$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_115, +$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$06*BLOW_UP_115, -$05*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$12*BLOW_UP_115, +$05*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$11*BLOW_UP_115, +$21*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$1D*BLOW_UP_115, +$26*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$34*BLOW_UP_115, -$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_115, -$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_115, -$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0D*BLOW_UP_115, -$28*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_115, -$26*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$38*BLOW_UP_115, -$06*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_115, +$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_115, +$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0A*BLOW_UP_115, +$14*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$24*BLOW_UP_115, +$00*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$0E*BLOW_UP_115, +$11*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$1D*BLOW_UP_115, +$05*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$1B*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_115, +$0F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$05*BLOW_UP_115, +$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_115, +$17*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$24*BLOW_UP_115, -$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$10*BLOW_UP_115, +$18*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$14*BLOW_UP_115, -$06*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_115, +$12*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_2: 
                    DB       $01, +$3A*BLOW_UP_115, +$3A*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$31*BLOW_UP_115, +$12*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$00*BLOW_UP_115, -$14*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$11*BLOW_UP_115, -$1C*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$03*BLOW_UP_115, +$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$22*BLOW_UP_115, +$0C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$15*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$02*BLOW_UP_115, -$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_115, -$11*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_115, +$03*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$35*BLOW_UP_115, +$19*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$0C*BLOW_UP_115, +$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_115, -$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$31*BLOW_UP_115, -$1E*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$29*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_115, -$2E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$16*BLOW_UP_115, -$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_115, +$12*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$3A*BLOW_UP_115, -$3A*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, -$19*BLOW_UP_115, -$16*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$17*BLOW_UP_115, +$20*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_115, +$06*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_115, +$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1F*BLOW_UP_115, +$0F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_115, +$07*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$05*BLOW_UP_115, +$0F*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$07*BLOW_UP_115, -$27*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$37*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_115, +$39*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$3A*BLOW_UP_115, +$09*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$1A*BLOW_UP_115, +$00*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, -$0F*BLOW_UP_115, +$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$35*BLOW_UP_115, -$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_115, +$2A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$39*BLOW_UP_115, +$23*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_115, -$13*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_115, -$11*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$3A*BLOW_UP_115, -$0D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_115, -$2F*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_3: 
                    DB       $01, +$40*BLOW_UP_115, +$40*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$29*BLOW_UP_115, +$07*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$01*BLOW_UP_115, -$13*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_115, +$09*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$14*BLOW_UP_115, -$17*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$05*BLOW_UP_115, +$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$25*BLOW_UP_115, +$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_115, -$21*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$07*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_115, -$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1C*BLOW_UP_115, +$07*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$13*BLOW_UP_115, +$03*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$15*BLOW_UP_115, -$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_115, +$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$13*BLOW_UP_115, -$0F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_115, -$07*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$26*BLOW_UP_115, +$27*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0F*BLOW_UP_115, +$25*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$29*BLOW_UP_115, +$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_115, +$0D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$05*BLOW_UP_115, +$24*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$12*BLOW_UP_115, -$07*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_115, -$03*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$14*BLOW_UP_115, +$04*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$3F*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$2D*BLOW_UP_115, +$2C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$40*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_115, -$2A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_115, +$09*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_115, +$09*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_115, -$2B*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$19*BLOW_UP_115, +$19*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$10*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_115, -$2F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$05*BLOW_UP_115, -$1B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1F*BLOW_UP_115, +$04*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_115, +$23*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$12*BLOW_UP_115, +$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_115, -$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_115, +$09*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_4: 
                    DB       $01, +$48*BLOW_UP_115, +$48*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$1D*BLOW_UP_115, +$05*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$02*BLOW_UP_115, -$14*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_115, +$05*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$01*BLOW_UP_115, -$35*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$1E*BLOW_UP_115, -$02*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_115, +$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$07*BLOW_UP_115, +$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_115, +$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$24*BLOW_UP_115, -$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$14*BLOW_UP_115, -$09*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$1F*BLOW_UP_115, -$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_115, +$1C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_115, -$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_115, +$05*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_115, +$05*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$31*BLOW_UP_115, +$0F*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$1D*BLOW_UP_115, +$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$16*BLOW_UP_115, +$02*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$3D*BLOW_UP_115, +$24*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$13*BLOW_UP_115, -$20*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$12*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$48*BLOW_UP_115, -$2D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$16*BLOW_UP_115, +$05*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_115, +$25*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_115, -$11*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$2B*BLOW_UP_115, -$1F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_115, +$2F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2B*BLOW_UP_115, +$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2C*BLOW_UP_115, -$0D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0A*BLOW_UP_115, +$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$0F*BLOW_UP_115, -$05*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$1E*BLOW_UP_115, +$24*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_115, -$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_115, -$10*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$16*BLOW_UP_115, -$29*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$08*BLOW_UP_115, -$17*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$32*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_5: 
                    DB       $01, +$58*BLOW_UP_115, +$5A*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$00*BLOW_UP_115, +$02*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$05*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$19*BLOW_UP_115, +$01*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$11*BLOW_UP_115, -$1B*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$0A*BLOW_UP_115, +$1C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_115, +$0D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$04*BLOW_UP_115, -$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_115, -$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0F*BLOW_UP_115, +$04*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$01*BLOW_UP_115, -$06*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$12*BLOW_UP_115, +$24*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$25*BLOW_UP_115, -$5A*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$19*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_115, +$34*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$50*BLOW_UP_115, -$46*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$34*BLOW_UP_115, +$0E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_115, -$30*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$5A*BLOW_UP_115, -$5A*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, -$10*BLOW_UP_115, -$02*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, -$11*BLOW_UP_115, +$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_115, +$27*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$11*BLOW_UP_115, -$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_115, +$22*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$3D*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$28*BLOW_UP_115, +$22*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$0A*BLOW_UP_115, -$04*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$15*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0C*BLOW_UP_115, +$04*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$07*BLOW_UP_115, -$1E*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$14*BLOW_UP_115, +$1F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_115, +$20*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0F*BLOW_UP_115, -$07*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$31*BLOW_UP_115, -$1E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_115, -$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$27*BLOW_UP_115, +$22*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_115, -$1E*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$0C*BLOW_UP_115, +$32*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$21*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$00*BLOW_UP_115, +$56*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$0C*BLOW_UP_115, -$24*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$02*BLOW_UP_115, +$2D*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$02*BLOW_UP_115, +$29*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$02*BLOW_UP_115, +$1C*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, +$00*BLOW_UP_115, +$11*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_6: 
                    DB       $01, +$4F*BLOW_UP_115, +$4F*BLOW_UP_115 ; sync and move to y, x 
                    DB       $00, +$1F*BLOW_UP_115, +$0C*BLOW_UP_115 ; additional sync move to y, x 
                    DB       $FF, +$00*BLOW_UP_115, -$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_115, +$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$13*BLOW_UP_115, -$20*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$07*BLOW_UP_115, +$1E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$23*BLOW_UP_115, +$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_115, -$19*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_115, -$1D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_115, -$12*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$19*BLOW_UP_115, +$04*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$27*BLOW_UP_115, +$05*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$2B*BLOW_UP_115, +$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_115, +$14*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_115, -$13*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$07*BLOW_UP_115, -$03*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$22*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_115, -$27*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$12*BLOW_UP_115, -$2C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_115, -$07*BLOW_UP_115 ; draw, y, x 
                    DB       $01, +$28*BLOW_UP_115, -$25*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$24*BLOW_UP_115, -$07*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$30*BLOW_UP_115, +$1F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_115, +$0B*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$0B*BLOW_UP_115, +$0B*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$4F*BLOW_UP_115, -$31*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_115, +$02*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_115, -$3A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_115, +$0D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$25*BLOW_UP_115, +$3E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$26*BLOW_UP_115, +$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$3C*BLOW_UP_115, +$20*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$1C*BLOW_UP_115, -$0B*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$16*BLOW_UP_115, +$30*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_115, +$0E*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$2F*BLOW_UP_115, +$14*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_115, -$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$37*BLOW_UP_115, -$10*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_115, -$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_115, -$20*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_114_7: 
                    DB       $01, +$63*BLOW_UP_115, +$5B*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$02*BLOW_UP_115, -$11*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_115, +$07*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$10*BLOW_UP_115, -$1D*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, +$02*BLOW_UP_115, +$1B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$26*BLOW_UP_115, +$0A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_115, -$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_115, -$1A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_115, -$11*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1C*BLOW_UP_115, +$01*BLOW_UP_115 ; draw, y, x 
                    DB       $00, -$7C*BLOW_UP_115, -$0B*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$17*BLOW_UP_115, +$04*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_115, -$63*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_115, +$07*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$38*BLOW_UP_115, -$4C*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$01*BLOW_UP_115, +$38*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_115, -$0C*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_115, -$01*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_115, +$0F*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$3B*BLOW_UP_115, +$2A*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_115, +$17*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_115, +$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_115, -$18*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$21*BLOW_UP_115, +$16*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_115, -$2B*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2F*BLOW_UP_115, +$15*BLOW_UP_115 ; draw, y, x 
                    DB       $00, +$0F*BLOW_UP_115, -$0A*BLOW_UP_115 ; mode, y, x 
                    DB       $FF, -$20*BLOW_UP_115, -$28*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_115, +$00*BLOW_UP_115 ; draw, y, x 
                    DB       $01, -$02*BLOW_UP_115, +$15*BLOW_UP_115 ; sync and move to y, x 
                    DB       $FF, -$16*BLOW_UP_115, -$0D*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_115, +$04*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$0F*BLOW_UP_115, +$15*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$33*BLOW_UP_115, -$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, -$04*BLOW_UP_115, +$28*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$41*BLOW_UP_115, -$08*BLOW_UP_115 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_115, -$27*BLOW_UP_115 ; draw, y, x 
                    DB       $02                          ; endmarker 
BLOW_UP_116         EQU      1 
AnimList_115: 
                    DW       AnimList_115_0               ; list of all single vectorlists in this 
                    DW       AnimList_115_1 
                    DW       AnimList_115_2 
                    DW       AnimList_115_3 
                    DW       0 
AnimList_115_0: 
                    DB       $01, +$40*BLOW_UP_116, +$2F*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$26*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$0A*BLOW_UP_116, +$02*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_116, -$08*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_116, +$29*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$1A*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$13*BLOW_UP_116, -$02*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$12*BLOW_UP_116, -$0E*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$32*BLOW_UP_116, +$2B*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$28*BLOW_UP_116, +$0F*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_116, +$0F*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_116, -$19*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_116, -$10*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$26*BLOW_UP_116, +$23*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$29*BLOW_UP_116, -$14*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$40*BLOW_UP_116, +$0B*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$32*BLOW_UP_116, +$2B*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, +$04*BLOW_UP_116, -$08*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_116, -$17*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_116, -$18*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_116, -$26*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_116, -$0C*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$1D*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, +$13*BLOW_UP_116, +$1A*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_116, +$21*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$22*BLOW_UP_116, -$16*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$36*BLOW_UP_116, -$10*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$1F*BLOW_UP_116, +$1A*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_116, -$22*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$28*BLOW_UP_116, -$0D*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$13*BLOW_UP_116, -$17*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$29*BLOW_UP_116, -$0E*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$31*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $01, -$40*BLOW_UP_116, +$1A*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, -$03*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$37*BLOW_UP_116, -$0F*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, -$27*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_116, +$1C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_116, +$09*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$21*BLOW_UP_116, -$06*BLOW_UP_116 ; draw, y, x 
                    DB       $01, -$40*BLOW_UP_116, -$1B*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, -$32*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, +$1A*BLOW_UP_116, -$13*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_116, -$0C*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$1D*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$1C*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_116, +$06*BLOW_UP_116 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_115_1: 
                    DB       $01, +$40*BLOW_UP_116, +$03*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, +$09*BLOW_UP_116, -$17*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$27*BLOW_UP_116, +$03*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$42*BLOW_UP_116, -$0E*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$01*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$09*BLOW_UP_116, -$14*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_116, -$1D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$24*BLOW_UP_116, -$01*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_116, +$0D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, +$20*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$30*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$2D*BLOW_UP_116, -$12*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$3D*BLOW_UP_116, -$14*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_116, +$0B*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$04*BLOW_UP_116, +$15*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_116, +$08*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_116, +$0F*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_116, +$0D*BLOW_UP_116 ; draw, y, x 
                    DB       $01, -$27*BLOW_UP_116, +$06*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$14*BLOW_UP_116, +$12*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$35*BLOW_UP_116, -$10*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_116, +$09*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_116, +$16*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$42*BLOW_UP_116, +$0F*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$31*BLOW_UP_116, -$1D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2E*BLOW_UP_116, +$10*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$20*BLOW_UP_116, +$2A*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$0D*BLOW_UP_116, +$0E*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_116, +$13*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$22*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1B*BLOW_UP_116, -$0D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_116, -$0A*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$06*BLOW_UP_116, -$14*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$04*BLOW_UP_116, -$13*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_116, -$1B*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$42*BLOW_UP_116, +$27*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$02*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, +$27*BLOW_UP_116, +$02*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_116, -$17*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_116, -$23*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$3F*BLOW_UP_116, +$12*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, +$05*BLOW_UP_116, +$15*BLOW_UP_116 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_115_2: 
                    DB       $01, +$40*BLOW_UP_116, -$12*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$38*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$08*BLOW_UP_116, -$0C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_116, -$22*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$07*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$08*BLOW_UP_116, -$23*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$05*BLOW_UP_116, -$09*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$3F*BLOW_UP_116, -$05*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1B*BLOW_UP_116, +$0D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$13*BLOW_UP_116, +$05*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_116, +$1B*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$2F*BLOW_UP_116, -$27*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$2D*BLOW_UP_116, +$11*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$3C*BLOW_UP_116, -$22*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$40*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, +$24*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$3D*BLOW_UP_116, -$10*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_116, +$21*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$16*BLOW_UP_116, +$1E*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$3E*BLOW_UP_116, -$0E*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, +$24*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$3F*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$3B*BLOW_UP_116, -$21*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2B*BLOW_UP_116, +$08*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$22*BLOW_UP_116, +$17*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, +$09*BLOW_UP_116, +$08*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$03*BLOW_UP_116, +$0C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$0D*BLOW_UP_116, +$19*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_116, +$0C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_116, -$32*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$07*BLOW_UP_116, -$21*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_116, -$1F*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_116, +$18*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$06*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, +$27*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_116, -$0D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, -$1D*BLOW_UP_116 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_115_3: 
                    DB       $01, +$62*BLOW_UP_116, -$12*BLOW_UP_116 ; sync and move to y, x 
                    DB       $00, +$16*BLOW_UP_116, +$00*BLOW_UP_116 ; additional sync move to y, x 
                    DB       $FF, -$08*BLOW_UP_116, -$0C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$48*BLOW_UP_116, -$27*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$10*BLOW_UP_116, -$14*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_116, -$05*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$2E*BLOW_UP_116, +$05*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_116, +$0C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_116, +$09*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$2F*BLOW_UP_116, -$27*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, -$2D*BLOW_UP_116, +$11*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$5D*BLOW_UP_116, -$11*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_116, -$10*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, +$24*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$38*BLOW_UP_116, +$01*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$1B*BLOW_UP_116, +$0F*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_116, +$0E*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$35*BLOW_UP_116, +$02*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, +$24*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_116, -$0C*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$62*BLOW_UP_116, -$14*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2B*BLOW_UP_116, +$08*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$22*BLOW_UP_116, +$17*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, +$02*BLOW_UP_116, +$05*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$10*BLOW_UP_116, +$03*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_116, -$0A*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2C*BLOW_UP_116, +$1B*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$2E*BLOW_UP_116, -$0E*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, -$07*BLOW_UP_116, -$26*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_116, -$24*BLOW_UP_116 ; draw, y, x 
                    DB       $01, +$46*BLOW_UP_116, +$18*BLOW_UP_116 ; sync and move to y, x 
                    DB       $FF, +$27*BLOW_UP_116, +$00*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_116, -$0D*BLOW_UP_116 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_116, -$1D*BLOW_UP_116 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_116: 
                    DW       0 
BLOW_UP_118         EQU      1 
BLOW_UP_119         EQU      1 
AnimList_118: 
                    DW       AnimList_118_0               ; list of all single vectorlists in this 
                    DW       AnimList_118_1 
                    DW       AnimList_118_2 
                    DW       AnimList_118_3 
                    DW       0 
AnimList_118_0: 
                    DB       $01, +$62*BLOW_UP_119, +$12*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$16*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$08*BLOW_UP_119, +$0C*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$48*BLOW_UP_119, +$27*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$10*BLOW_UP_119, +$14*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_119, +$05*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$2E*BLOW_UP_119, -$05*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_119, -$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_119, +$01*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$11*BLOW_UP_119, -$09*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$2F*BLOW_UP_119, +$27*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$2D*BLOW_UP_119, -$11*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$5D*BLOW_UP_119, +$12*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$1F*BLOW_UP_119, +$10*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, -$24*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$38*BLOW_UP_119, -$02*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_119, -$0F*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_119, -$0E*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$36*BLOW_UP_119, -$02*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, -$24*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_119, +$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$62*BLOW_UP_119, +$14*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2B*BLOW_UP_119, -$08*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$22*BLOW_UP_119, -$17*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, +$03*BLOW_UP_119, -$06*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_119, -$03*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_119, +$0A*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2C*BLOW_UP_119, -$1B*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2F*BLOW_UP_119, +$0E*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_119, +$26*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_119, +$24*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$46*BLOW_UP_119, -$18*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, +$27*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_119, +$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, +$1D*BLOW_UP_119 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_118_1: 
                    DB       $01, +$40*BLOW_UP_119, +$12*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$38*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$08*BLOW_UP_119, +$0C*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_119, +$22*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$07*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$08*BLOW_UP_119, +$23*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$05*BLOW_UP_119, +$09*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$3F*BLOW_UP_119, +$05*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1B*BLOW_UP_119, -$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$13*BLOW_UP_119, -$05*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_119, -$1B*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$2F*BLOW_UP_119, +$27*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$2D*BLOW_UP_119, -$11*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$3C*BLOW_UP_119, +$22*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$40*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, -$24*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$3D*BLOW_UP_119, +$10*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_119, -$21*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$16*BLOW_UP_119, -$1E*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$3E*BLOW_UP_119, +$0E*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, -$24*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$3F*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$3B*BLOW_UP_119, +$21*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2B*BLOW_UP_119, -$08*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$22*BLOW_UP_119, -$17*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, +$09*BLOW_UP_119, -$08*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$03*BLOW_UP_119, -$0C*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$0D*BLOW_UP_119, -$19*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_119, -$0C*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_119, +$32*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$07*BLOW_UP_119, +$21*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_119, +$1F*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_119, -$18*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$06*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, +$27*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_119, +$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, +$1D*BLOW_UP_119 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_118_2: 
                    DB       $01, +$40*BLOW_UP_119, -$03*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, +$09*BLOW_UP_119, +$17*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$27*BLOW_UP_119, -$03*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$42*BLOW_UP_119, +$0E*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$01*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$09*BLOW_UP_119, +$14*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_119, +$1D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$24*BLOW_UP_119, +$01*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_119, -$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, -$20*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$30*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$2D*BLOW_UP_119, +$12*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$3D*BLOW_UP_119, +$14*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_119, -$0B*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$04*BLOW_UP_119, -$15*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_119, -$08*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_119, -$0F*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_119, -$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $01, -$27*BLOW_UP_119, -$06*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$14*BLOW_UP_119, -$12*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$35*BLOW_UP_119, +$10*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_119, -$09*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_119, -$16*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$42*BLOW_UP_119, -$0F*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$31*BLOW_UP_119, +$1D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2E*BLOW_UP_119, -$10*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$20*BLOW_UP_119, -$2A*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$0D*BLOW_UP_119, -$0E*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_119, -$13*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$22*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1B*BLOW_UP_119, +$0D*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_119, +$0A*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$06*BLOW_UP_119, +$14*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$04*BLOW_UP_119, +$13*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_119, +$1B*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$42*BLOW_UP_119, -$27*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$02*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, +$27*BLOW_UP_119, -$02*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_119, +$17*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_119, +$23*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$3F*BLOW_UP_119, -$12*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, +$05*BLOW_UP_119, -$15*BLOW_UP_119 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_118_3: 
                    DB       $01, +$40*BLOW_UP_119, -$2F*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$26*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$0A*BLOW_UP_119, -$02*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_119, +$08*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_119, -$29*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$1A*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$13*BLOW_UP_119, +$02*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$12*BLOW_UP_119, +$0E*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$32*BLOW_UP_119, -$2B*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$28*BLOW_UP_119, -$0F*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_119, -$0F*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_119, +$19*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_119, +$10*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$26*BLOW_UP_119, -$23*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$29*BLOW_UP_119, +$14*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$40*BLOW_UP_119, -$0B*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$32*BLOW_UP_119, -$2B*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, +$04*BLOW_UP_119, +$08*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_119, +$17*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_119, +$18*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_119, +$26*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_119, +$0C*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$1D*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, +$13*BLOW_UP_119, -$1A*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_119, -$21*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$22*BLOW_UP_119, +$16*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$36*BLOW_UP_119, +$10*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$1F*BLOW_UP_119, -$1A*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_119, +$22*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$28*BLOW_UP_119, +$0D*BLOW_UP_119 ; sync and move to y, x 
                    DB       $FF, -$13*BLOW_UP_119, +$17*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$29*BLOW_UP_119, +$0E*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$31*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $01, -$40*BLOW_UP_119, -$1A*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, -$03*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$37*BLOW_UP_119, +$0F*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_119, +$27*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_119, -$1C*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_119, -$09*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, +$21*BLOW_UP_119, +$06*BLOW_UP_119 ; draw, y, x 
                    DB       $01, -$40*BLOW_UP_119, +$1B*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, -$32*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, +$1A*BLOW_UP_119, +$13*BLOW_UP_119 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_119, +$0C*BLOW_UP_119 ; sync and move to y, x 
                    DB       $00, +$1D*BLOW_UP_119, +$00*BLOW_UP_119 ; additional sync move to y, x 
                    DB       $FF, -$1C*BLOW_UP_119, +$00*BLOW_UP_119 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_119, -$06*BLOW_UP_119 ; draw, y, x 
                    DB       $02                          ; endmarker 
BLOW_UP_120         EQU      1 
AnimList_119: 
                    DW       AnimList_119_0               ; list of all single vectorlists in this 
                    DW       AnimList_119_1 
                    DW       AnimList_119_2 
                    DW       AnimList_119_3 
                    DW       AnimList_119_4 
                    DW       AnimList_119_5 
                    DW       AnimList_119_6 
                    DW       AnimList_119_7 
                    DW       0 
AnimList_119_0: 
                    DB       $01, +$48*BLOW_UP_120, -$48*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, +$1C*BLOW_UP_120, -$04*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, +$02*BLOW_UP_120, +$13*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_120, -$05*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$00*BLOW_UP_120, +$35*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, +$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$13*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_120, -$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$23*BLOW_UP_120, +$14*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$14*BLOW_UP_120, +$09*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$1F*BLOW_UP_120, +$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_120, -$1C*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_120, +$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_120, -$05*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_120, -$05*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$31*BLOW_UP_120, -$0F*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$1D*BLOW_UP_120, -$1A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$16*BLOW_UP_120, -$02*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$3D*BLOW_UP_120, -$24*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$13*BLOW_UP_120, +$20*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$12*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$48*BLOW_UP_120, +$2D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$16*BLOW_UP_120, -$05*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$27*BLOW_UP_120, -$25*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$08*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$2B*BLOW_UP_120, +$1F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$2F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2B*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2C*BLOW_UP_120, +$0D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0A*BLOW_UP_120, -$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$0F*BLOW_UP_120, +$05*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$1E*BLOW_UP_120, -$24*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_120, +$10*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$16*BLOW_UP_120, +$29*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$08*BLOW_UP_120, +$17*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$32*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_1: 
                    DB       $01, +$58*BLOW_UP_120, -$5A*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, +$00*BLOW_UP_120, -$01*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, +$04*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$19*BLOW_UP_120, -$01*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$10*BLOW_UP_120, +$1B*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$0A*BLOW_UP_120, -$1C*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_120, -$0C*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_120, +$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$04*BLOW_UP_120, +$1A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0F*BLOW_UP_120, -$04*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$01*BLOW_UP_120, +$05*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$12*BLOW_UP_120, -$23*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$25*BLOW_UP_120, +$5A*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$19*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, -$34*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$50*BLOW_UP_120, +$4D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$34*BLOW_UP_120, -$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_120, +$29*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$5A*BLOW_UP_120, +$5A*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, -$10*BLOW_UP_120, +$02*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, -$11*BLOW_UP_120, -$10*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$27*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$11*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_120, -$22*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$3D*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$28*BLOW_UP_120, -$22*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$0A*BLOW_UP_120, +$04*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$15*BLOW_UP_120, -$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0C*BLOW_UP_120, -$04*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$04*BLOW_UP_120, +$1C*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$13*BLOW_UP_120, -$20*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_120, -$21*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_120, +$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$36*BLOW_UP_120, +$21*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$27*BLOW_UP_120, -$22*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_120, +$1E*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$0C*BLOW_UP_120, -$32*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$21*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$00*BLOW_UP_120, -$56*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$0C*BLOW_UP_120, +$24*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$02*BLOW_UP_120, -$2D*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$02*BLOW_UP_120, -$29*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$02*BLOW_UP_120, -$1C*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$11*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_2: 
                    DB       $01, +$48*BLOW_UP_120, -$48*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, +$25*BLOW_UP_120, -$13*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, +$00*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_120, -$09*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$12*BLOW_UP_120, +$1F*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$07*BLOW_UP_120, -$1E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$23*BLOW_UP_120, -$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$17*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, +$1D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$19*BLOW_UP_120, -$04*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$20*BLOW_UP_120, +$02*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$32*BLOW_UP_120, -$1D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_120, -$14*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_120, +$13*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$07*BLOW_UP_120, +$03*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$22*BLOW_UP_120, -$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_120, +$27*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_120, +$0F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_120, +$37*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_120, -$03*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$29*BLOW_UP_120, +$35*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$24*BLOW_UP_120, +$07*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_120, -$1B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$0D*BLOW_UP_120, -$0B*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$48*BLOW_UP_120, +$2F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$30*BLOW_UP_120, +$03*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$24*BLOW_UP_120, +$34*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_120, -$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_120, -$3D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$29*BLOW_UP_120, -$20*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$27*BLOW_UP_120, -$04*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$38*BLOW_UP_120, -$1E*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$10*BLOW_UP_120, +$08*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$0B*BLOW_UP_120, -$14*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$12*BLOW_UP_120, -$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_120, -$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$2E*BLOW_UP_120, -$14*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_120, +$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$34*BLOW_UP_120, +$13*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0A*BLOW_UP_120, +$23*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_3: 
                    DB       $01, +$63*BLOW_UP_120, -$5B*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$02*BLOW_UP_120, +$14*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_120, -$09*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$10*BLOW_UP_120, +$1C*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$02*BLOW_UP_120, -$1B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$26*BLOW_UP_120, -$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_120, +$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1C*BLOW_UP_120, -$01*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$7B*BLOW_UP_120, +$0B*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$17*BLOW_UP_120, -$04*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_120, +$75*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_120, -$07*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_120, -$45*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$29*BLOW_UP_120, +$0D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, -$0F*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$0C*BLOW_UP_120, +$17*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$3C*BLOW_UP_120, -$2F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_120, -$17*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_120, -$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1E*BLOW_UP_120, -$1C*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_120, +$23*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_120, +$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2F*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$0E*BLOW_UP_120, +$09*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$1E*BLOW_UP_120, +$2D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$19*BLOW_UP_120, +$01*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$0F*BLOW_UP_120, -$2A*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$07*BLOW_UP_120, +$08*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$06*BLOW_UP_120, -$05*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$09*BLOW_UP_120, +$06*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$19*BLOW_UP_120, -$04*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0C*BLOW_UP_120, -$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$2F*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$3A*BLOW_UP_120, -$46*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$32*BLOW_UP_120, +$3D*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$7B*BLOW_UP_120, -$49*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$41*BLOW_UP_120, +$03*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$78*BLOW_UP_120, -$17*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$03*BLOW_UP_120, -$32*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$72*BLOW_UP_120, -$0B*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$06*BLOW_UP_120, -$0C*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$6B*BLOW_UP_120, -$19*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$07*BLOW_UP_120, +$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_4: 
                    DB       $01, -$56*BLOW_UP_120, +$42*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, -$0F*BLOW_UP_120, +$00*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, -$15*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$43*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2E*BLOW_UP_120, -$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$56*BLOW_UP_120, -$05*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$0E*BLOW_UP_120, -$03*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_120, +$14*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$07*BLOW_UP_120, -$01*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$1C*BLOW_UP_120, -$2A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$15*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_120, +$28*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_120, +$35*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_120, +$0F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$04*BLOW_UP_120, -$1A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_120, -$29*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$11*BLOW_UP_120, +$37*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, -$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_120, -$1C*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$3E*BLOW_UP_120, +$17*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$11*BLOW_UP_120, -$25*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$20*BLOW_UP_120, +$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_120, -$1A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$05*BLOW_UP_120, -$17*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_120, -$10*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_120, +$14*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$02*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$02*BLOW_UP_120, +$0E*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$30*BLOW_UP_120, +$22*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_120, +$05*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$10*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0C*BLOW_UP_120, +$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$27*BLOW_UP_120, +$0D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_120, +$02*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$18*BLOW_UP_120, -$0F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1D*BLOW_UP_120, -$0C*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$04*BLOW_UP_120, -$41*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$15*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$02*BLOW_UP_120, -$10*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$18*BLOW_UP_120, -$17*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$0E*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$40*BLOW_UP_120, -$25*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$28*BLOW_UP_120, +$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$4F*BLOW_UP_120, -$0D*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$0F*BLOW_UP_120, -$18*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_5: 
                    DB       $01, -$14*BLOW_UP_120, +$34*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$16*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_120, -$02*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$17*BLOW_UP_120, +$20*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_120, -$13*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$16*BLOW_UP_120, +$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$12*BLOW_UP_120, -$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2F*BLOW_UP_120, -$06*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0B*BLOW_UP_120, -$17*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_120, -$1C*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$35*BLOW_UP_120, -$22*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$23*BLOW_UP_120, +$1E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1D*BLOW_UP_120, -$20*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$42*BLOW_UP_120, -$1A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$12*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_120, +$28*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$15*BLOW_UP_120, -$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_120, -$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$08*BLOW_UP_120, -$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$06*BLOW_UP_120, +$05*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$12*BLOW_UP_120, -$05*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$11*BLOW_UP_120, -$21*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, -$1D*BLOW_UP_120, -$26*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$34*BLOW_UP_120, +$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_120, +$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$09*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0D*BLOW_UP_120, +$28*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_120, +$26*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$38*BLOW_UP_120, +$06*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$2D*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_120, -$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0A*BLOW_UP_120, -$14*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$24*BLOW_UP_120, +$00*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$0E*BLOW_UP_120, -$11*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$1C*BLOW_UP_120, -$05*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$1B*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_120, -$0E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$05*BLOW_UP_120, -$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_120, -$17*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$23*BLOW_UP_120, +$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$03*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$10*BLOW_UP_120, -$18*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$14*BLOW_UP_120, +$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$13*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_6: 
                    DB       $01, +$3A*BLOW_UP_120, -$3A*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, +$30*BLOW_UP_120, -$11*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, +$00*BLOW_UP_120, +$13*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$13*BLOW_UP_120, -$07*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$10*BLOW_UP_120, +$1B*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$02*BLOW_UP_120, -$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$22*BLOW_UP_120, -$0C*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$01*BLOW_UP_120, +$19*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$18*BLOW_UP_120, -$03*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$34*BLOW_UP_120, -$19*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$0C*BLOW_UP_120, -$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$14*BLOW_UP_120, +$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0C*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$31*BLOW_UP_120, +$1E*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$29*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_120, +$2E*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0E*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$16*BLOW_UP_120, +$10*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0D*BLOW_UP_120, -$12*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$3A*BLOW_UP_120, +$3A*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, -$19*BLOW_UP_120, +$16*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, +$17*BLOW_UP_120, -$20*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, -$06*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, -$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1F*BLOW_UP_120, -$0F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0F*BLOW_UP_120, -$07*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$05*BLOW_UP_120, -$0F*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$07*BLOW_UP_120, +$27*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$28*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$37*BLOW_UP_120, -$08*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_120, -$39*BLOW_UP_120 ; draw, y, x 
                    DB       $01, +$3A*BLOW_UP_120, -$09*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, +$1A*BLOW_UP_120, +$00*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, -$0F*BLOW_UP_120, -$1A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1A*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$35*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_120, -$2A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$39*BLOW_UP_120, -$23*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_120, +$13*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_120, +$11*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$3A*BLOW_UP_120, +$0D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$07*BLOW_UP_120, +$2F*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
AnimList_119_7: 
                    DB       $01, +$40*BLOW_UP_120, -$40*BLOW_UP_120 ; sync and move to y, x 
                    DB       $00, +$29*BLOW_UP_120, -$06*BLOW_UP_120 ; additional sync move to y, x 
                    DB       $FF, +$00*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$16*BLOW_UP_120, -$08*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$14*BLOW_UP_120, +$17*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, +$05*BLOW_UP_120, -$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$25*BLOW_UP_120, -$0A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$14*BLOW_UP_120, +$20*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$06*BLOW_UP_120, +$15*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$11*BLOW_UP_120, +$10*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1C*BLOW_UP_120, -$07*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$13*BLOW_UP_120, -$03*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$15*BLOW_UP_120, +$18*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$1B*BLOW_UP_120, -$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$13*BLOW_UP_120, +$0F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0B*BLOW_UP_120, +$07*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$26*BLOW_UP_120, -$27*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0F*BLOW_UP_120, -$25*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$29*BLOW_UP_120, -$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$25*BLOW_UP_120, -$0D*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$0E*BLOW_UP_120, +$12*BLOW_UP_120 ; draw, y, x 
                    DB       $01, -$05*BLOW_UP_120, -$24*BLOW_UP_120 ; sync and move to y, x 
                    DB       $FF, +$12*BLOW_UP_120, +$07*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$10*BLOW_UP_120, +$03*BLOW_UP_120 ; draw, y, x 
                    DB       $00, +$14*BLOW_UP_120, -$04*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$3F*BLOW_UP_120, +$16*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$2D*BLOW_UP_120, -$2C*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$40*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$01*BLOW_UP_120, +$2A*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$19*BLOW_UP_120, -$09*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1C*BLOW_UP_120, -$09*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$24*BLOW_UP_120, +$2B*BLOW_UP_120 ; draw, y, x 
                    DB       $00, -$19*BLOW_UP_120, -$19*BLOW_UP_120 ; mode, y, x 
                    DB       $FF, -$10*BLOW_UP_120, +$00*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$0A*BLOW_UP_120, +$2F*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, -$05*BLOW_UP_120, +$1B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1F*BLOW_UP_120, -$04*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$00*BLOW_UP_120, -$23*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$12*BLOW_UP_120, -$01*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1A*BLOW_UP_120, +$0B*BLOW_UP_120 ; draw, y, x 
                    DB       $FF, +$1E*BLOW_UP_120, -$09*BLOW_UP_120 ; draw, y, x 
                    DB       $02                          ; endmarker 
; must react like a draw sync
drawSmart2 
;U = address of vectorlist
;X = (y,x) position of vectorlist (this will be point 0,0), positioning on screen
;A = scalefactor "Move" (after sync)
;B = scalefactor "Vector" (vectors in vectorlist)
; for now I assum scale == 7
; scale = gamescale
                    lda      gameScale 
                    sta      <VIA_t1_cnt_lo 
                    jsr      calibrationZero7 
                    tfr      x,d 
                    MY_MOVE_TO_D_START_NO_SHIFT  
                    lda      #7 
                    sta      <VIA_t1_cnt_lo 
REPLACE_1_2_SMVBdrawSmart70_varFrom0_1 
                    ldx      #0                           ; SMVBdrawSmart70 
                    MY_MOVE_TO_A_END  
                    jmp      jsrBank2_fromShift_0 

element_Bonus1: 
                    dw       Bonus1AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus2: 
                    dw       Bonus2AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus3: 
                    dw       Bonus3AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus4: 
                    dw       Bonus4AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus5: 
                    dw       Bonus5AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus6: 
                    dw       Bonus6AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus7: 
                    dw       Bonus7AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus8: 
                    dw       Bonus8AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus9: 
                    dw       Bonus9AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus10: 
                    dw       Bonus10AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus11: 
                    dw       Bonus11AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus12: 
                    dw       Bonus12AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus13: 
                    dw       Bonus13AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus14: 
                    dw       Bonus14AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus15: 
                    dw       Bonus15AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus16: 
                    dw       Bonus16AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus17: 
                    dw       Bonus17AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus18: 
                    dw       Bonus18AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus19: 
                    dw       Bonus19AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
element_Bonus20: 
                    dw       Bonus20AnimList 
                    db       3                            ; delay 
                    db       7                            ; scale from 
                    db       7                            ; scale to 
                    db       0                            ; scale delay 
                    db       0                            ; scale increase 
                    db       60                           ; intensityFrom 
                    db       60                           ; intensityTo 
                    db       0                            ; intensityDelay 
                    db       0                            ; intensityIncrease 
                    db       50, 0                        ; position from (y,x) 
                    db       10, 0                        ; position to (y,x) 
                    db       6, 0                         ; position delay (y,x) 
                    db       -1, 0                        ; position increase (y,x) 
                    db       80                           ; move scale 
                    dw       drawSmart2                   ; draw jsr 
                    db       BEHAVIOUR_NONE+BEHAVIOUR_ANIMATION_LOOP ; BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP 
                    dw       200                          ; element end count 
                    db       ELEMENT_ANIM                 ; type of element 
Bonus1AnimList 
REPLACE_0_2_BonusShot1Inner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot1Inner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot1Inner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot1Inner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot1Inner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot1Inner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot1Inner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot1Inner1_varFrom0_2  dw  0 
                    dw       0 
Bonus2AnimList 
REPLACE_0_2_BonusShot2Inner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusShot2Inner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot2Inner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot2Inner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot2Inner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot2Inner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot2Inner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusShot2Inner1_varFrom0_2  dw  0 
                    dw       0 
Bonus3AnimList 
REPLACE_0_2_BonusFasterInner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterInner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterInner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterInner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterInner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterInner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterInner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterInner1_varFrom0_2  dw  0 
                    dw       0 
Bonus4AnimList 
REPLACE_0_2_MalusSpeed0_varFrom0_1  dw  0                 ; MalusSpeed0 
REPLACE_0_2_MalusSpeed1_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed2_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed3_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed4_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed5_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed6_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed7_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed8_varFrom0_1  dw  0 
REPLACE_0_2_MalusSpeed7_varFrom0_2  dw  0 
REPLACE_0_2_MalusSpeed6_varFrom0_2  dw  0 
REPLACE_0_2_MalusSpeed5_varFrom0_2  dw  0 
REPLACE_0_2_MalusSpeed4_varFrom0_2  dw  0 
REPLACE_0_2_MalusSpeed3_varFrom0_2  dw  0 
REPLACE_0_2_MalusSpeed2_varFrom0_2  dw  0 
REPLACE_0_2_MalusSpeed1_varFrom0_2  dw  0 
                    dw       0 
Bonus5AnimList 
REPLACE_0_2_BonusFasterShotInner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusFasterShotInner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterShotInner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterShotInner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterShotInner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterShotInner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterShotInner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusFasterShotInner1_varFrom0_2  dw  0 
                    dw       0 
Bonus6AnimList 
REPLACE_0_2_BonusSlowerShot0_varFrom0_1  dw  0            ; BonusSlowerShot0 
REPLACE_0_2_BonusSlowerShot1_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot2_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot3_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot4_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot5_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot6_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot7_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot8_varFrom0_1  dw  0 
REPLACE_0_2_BonusSlowerShot7_varFrom0_2  dw  0 
REPLACE_0_2_BonusSlowerShot6_varFrom0_2  dw  0 
REPLACE_0_2_BonusSlowerShot5_varFrom0_2  dw  0 
REPLACE_0_2_BonusSlowerShot4_varFrom0_2  dw  0 
REPLACE_0_2_BonusSlowerShot3_varFrom0_2  dw  0 
REPLACE_0_2_BonusSlowerShot2_varFrom0_2  dw  0 
REPLACE_0_2_BonusSlowerShot1_varFrom0_2  dw  0 
                    dw       0 
Bonus7AnimList 
REPLACE_0_2_BonusExtraBulletInner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusExtraBulletInner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusExtraBulletInner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusExtraBulletInner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusExtraBulletInner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusExtraBulletInner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusExtraBulletInner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusExtraBulletInner1_varFrom0_2  dw  0 
                    dw       0 
Bonus8AnimList 
REPLACE_0_2_MalusShot0_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot1_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot2_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot3_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot4_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot5_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot6_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot7_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot8_varFrom0_1  dw  0 
REPLACE_0_2_MalusShot7_varFrom0_2  dw  0 
REPLACE_0_2_MalusShot6_varFrom0_2  dw  0 
REPLACE_0_2_MalusShot5_varFrom0_2  dw  0 
REPLACE_0_2_MalusShot4_varFrom0_2  dw  0 
REPLACE_0_2_MalusShot3_varFrom0_2  dw  0 
REPLACE_0_2_MalusShot2_varFrom0_2  dw  0 
REPLACE_0_2_MalusShot1_varFrom0_2  dw  0 
                    dw       0 
Bonus9AnimList 
REPLACE_0_2_BonusScoopInner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusScoopInner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusScoopInner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusScoopInner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusScoopInner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusScoopInner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusScoopInner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusScoopInner1_varFrom0_2  dw  0 
                    dw       0 
Bonus10AnimList 
REPLACE_0_2_BonusShieldInner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusShieldInner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusShieldInner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusShieldInner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusShieldInner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusShieldInner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusShieldInner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusShieldInner1_varFrom0_2  dw  0 
                    dw       0 
Bonus11AnimList 
REPLACE_0_2_BonusArmorInner0_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner1_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner2_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner3_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner4_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner5_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner6_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner7_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner8_varFrom0_1  dw  0 
REPLACE_0_2_BonusArmorInner7_varFrom0_2  dw  0 
REPLACE_0_2_BonusArmorInner6_varFrom0_2  dw  0 
REPLACE_0_2_BonusArmorInner5_varFrom0_2  dw  0 
REPLACE_0_2_BonusArmorInner4_varFrom0_2  dw  0 
REPLACE_0_2_BonusArmorInner3_varFrom0_2  dw  0 
REPLACE_0_2_BonusArmorInner2_varFrom0_2  dw  0 
REPLACE_0_2_BonusArmorInner1_varFrom0_2  dw  0 
                    dw       0 
Bonus12AnimList 
REPLACE_0_2_MineStorm0_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm1_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm2_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm3_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm4_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm5_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm6_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm7_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm8_varFrom0_1  dw  0 
REPLACE_0_2_MineStorm7_varFrom0_2  dw  0 
REPLACE_0_2_MineStorm6_varFrom0_2  dw  0 
REPLACE_0_2_MineStorm5_varFrom0_2  dw  0 
REPLACE_0_2_MineStorm4_varFrom0_2  dw  0 
REPLACE_0_2_MineStorm3_varFrom0_2  dw  0 
REPLACE_0_2_MineStorm2_varFrom0_2  dw  0 
REPLACE_0_2_MineStorm1_varFrom0_2  dw  0 
                    dw       0 
Bonus13AnimList 
REPLACE_0_2_BonusMult20_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult21_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult22_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult23_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult24_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult25_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult26_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult27_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult28_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult27_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult26_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult25_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult24_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult23_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult22_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult21_varFrom0_2  dw  0 
                    dw       0 
Bonus14AnimList 
REPLACE_0_2_BonusMult50_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult51_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult52_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult53_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult54_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult55_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult56_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult57_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult58_varFrom0_1  dw  0 
REPLACE_0_2_BonusMult57_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult56_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult55_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult54_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult53_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult52_varFrom0_2  dw  0 
REPLACE_0_2_BonusMult51_varFrom0_2  dw  0 
                    dw       0 
Bonus15AnimList 
REPLACE_0_2_BonusBombCash0_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash1_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash2_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash3_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash4_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash5_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash6_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash7_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash8_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombCash7_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombCash6_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombCash5_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombCash4_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombCash3_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombCash2_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombCash1_varFrom0_2  dw  0 
                    dw       0 
Bonus16AnimList 
REPLACE_0_2_BonusBombDiamond0_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond1_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond2_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond3_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond4_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond5_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond6_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond7_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond8_varFrom0_1  dw  0 
REPLACE_0_2_BonusBombDiamond7_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombDiamond6_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombDiamond5_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombDiamond4_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombDiamond3_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombDiamond2_varFrom0_2  dw  0 
REPLACE_0_2_BonusBombDiamond1_varFrom0_2  dw  0 
                    dw       0 
Bonus17AnimList 
REPLACE_0_2_BonusTimer0_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer1_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer2_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer3_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer4_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer5_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer6_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer7_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer8_varFrom0_1  dw  0 
REPLACE_0_2_BonusTimer7_varFrom0_2  dw  0 
REPLACE_0_2_BonusTimer6_varFrom0_2  dw  0 
REPLACE_0_2_BonusTimer5_varFrom0_2  dw  0 
REPLACE_0_2_BonusTimer4_varFrom0_2  dw  0 
REPLACE_0_2_BonusTimer3_varFrom0_2  dw  0 
REPLACE_0_2_BonusTimer2_varFrom0_2  dw  0 
REPLACE_0_2_BonusTimer1_varFrom0_2  dw  0 
                    dw       0 
Bonus18AnimList 
REPLACE_0_2_BonusCashDoubler0_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler1_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler2_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler3_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler4_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler5_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler6_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler7_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler8_varFrom0_1  dw  0 
REPLACE_0_2_BonusCashDoubler7_varFrom0_2  dw  0 
REPLACE_0_2_BonusCashDoubler6_varFrom0_2  dw  0 
REPLACE_0_2_BonusCashDoubler5_varFrom0_2  dw  0 
REPLACE_0_2_BonusCashDoubler4_varFrom0_2  dw  0 
REPLACE_0_2_BonusCashDoubler3_varFrom0_2  dw  0 
REPLACE_0_2_BonusCashDoubler2_varFrom0_2  dw  0 
REPLACE_0_2_BonusCashDoubler1_varFrom0_2  dw  0 
                    dw       0 
Bonus19AnimList 
REPLACE_0_2_BonusShotPowerup0_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup1_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup2_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup3_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup4_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup5_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup6_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup7_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup8_varFrom0_1  dw  0 
REPLACE_0_2_BonusShotPowerup7_varFrom0_2  dw  0 
REPLACE_0_2_BonusShotPowerup6_varFrom0_2  dw  0 
REPLACE_0_2_BonusShotPowerup5_varFrom0_2  dw  0 
REPLACE_0_2_BonusShotPowerup4_varFrom0_2  dw  0 
REPLACE_0_2_BonusShotPowerup3_varFrom0_2  dw  0 
REPLACE_0_2_BonusShotPowerup2_varFrom0_2  dw  0 
REPLACE_0_2_BonusShotPowerup1_varFrom0_2  dw  0 
                    dw       0 
Bonus20AnimList 
REPLACE_0_2_LifeBonus0_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus1_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus2_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus3_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus4_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus5_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus6_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus7_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus8_varFrom0_1  dw  0 
REPLACE_0_2_LifeBonus7_varFrom0_2  dw  0 
REPLACE_0_2_LifeBonus6_varFrom0_2  dw  0 
REPLACE_0_2_LifeBonus5_varFrom0_2  dw  0 
REPLACE_0_2_LifeBonus4_varFrom0_2  dw  0 
REPLACE_0_2_LifeBonus3_varFrom0_2  dw  0 
REPLACE_0_2_LifeBonus2_varFrom0_2  dw  0 
REPLACE_0_2_LifeBonus1_varFrom0_2  dw  0 
                    dw       0 
