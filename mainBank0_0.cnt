BANK 0
EQU $01 QUAD_BANK
EQU $00 CURRENT_BANK
EQU $00 TESTING
COMMENT_LABEL $00 switch between usiong TEST/Debug values (defined below)
EQU $00 TIMER_LEVEL
COMMENT_LABEL $00 if defined there is a time trialmodus, but implementaion not finished.
EQU $01 DO_DYING_BONUS
COMMENT_LABEL $01 on death sprawl up to 5 bonus items, whoch might be lost upon a death
EQU $01 ERRATIC_STARTING_WITH_HARD
COMMENT_LABEL $01 else startng with NORMAL
EQU $01 REDUCED_OBJECT_SIZE
COMMENT_LABEL $01 TODO: ram object use only 1 byte to encode the following object (not finished)
EQU $00 USE_BIG_STACK
COMMENT_LABEL $00 this reduces bonus on screen from 6 to 4 gives 16 bytes more stack
EQU $00 NMI_HANDLER
COMMENT_LABEL $00 NMI handler is not faulty resistent!
EQU $00 RECORD_GAME_DATA
COMMENT_LABEL $00 if enabled game and gameplay will be saved each level to "gamesave" location ($a000)
EQU $00 INCLUDE_NMI_TIMING
COMMENT_LABEL $00 NMI handler also displays T1 / T2 (after NMI is entered)
EQU $01 DRAW_FIGHTER_IN_BANK0
COMMENT_LABEL $01 than different "evolving" fighters are drawn (each shot) ... tiny bit slower than in bank 3
EQU $00 IS_VIA_FAULTY_RESISTENT
COMMENT_LABEL $00 no DEC, INC on VIA_Port_b, no BIOS calls - there are 1 or 2 "new" instances, where this is not correctly handled!
LABEL $CBFC MY_STACK
COMMENT_LABEL $CBFC overall stack frame start, uses (obviously) also interrupt vectors etc
EQU $01 SCOOPY_HIT_LARGE_OBJECT
COMMENT_LABEL $01 if defined, "center" hits on large enemies, also devour scoopy hits automatically
EQU $00 TEST_ALL_SHOTS
COMMENT_LABEL $00 makes all sorts of trouble with different enemy/size types ; if one, than from a certain enemy count all shots are tested, if not defined than always test with two saelected shots
EQU $03 ENEMY_THRESHOLD
COMMENT_LABEL $03 or less enemies are tested with ALL shots, more enemies are only tested with 2 selected shots
EQU $00 USE_NEW_SHOTS
COMMENT_LABEL $00 use vertical shots instead of horizontal shots -> slightly faster but way more ugly!
EQU $00 BIOS_WR
COMMENT_LABEL $00 use BIOS WR in main loop, slower but more easy to measure!
EQU $01 ENABLE_STAR_TACSCAN
COMMENT_LABEL $01 if joytick moves - star move opposite
EQU $01 TEST_VOX
COMMENT_LABEL $01 if enabled Vec Vox is used in game
EQU $00 CORRECT_START_LEVEL
COMMENT_LABEL $00 if 1, than level 25 == level 25, not boss!
EQU $00 VECFEVER
EQU $01 ALLOW_SAVING
EQU $00 EASY
EQU $01 NORMAL
EQU $02 HARD
EQU $03 IMPOSSIBLE
EQU $04 SUPER_IMPOSSIBLE
EQU -$01 HARDCORE
EQU $7F DRUNKEN_TIME
COMMENT_LABEL $7F positive - or code for "countdown display must be changed! (bank 0 Fighter Prep)
EQU $00 DEFAULT_DIFFICULTY
EQU $01 SHORT_INVULNERABILITY
LABEL $00DC WARP_FAILURE_BORDER
EQU $00 IMMUNITY_START
EQU $00 LOCK_START
EQU $00 START_LEVEL
EQU $02 START_SHOT_NUMBER
COMMENT_LABEL $02 2
EQU $01 START_SHOT_WIDTH
COMMENT_LABEL $01 1-4 normal shots, 5 triangle shot, 6 lazer
LABEL $01F4 START_FIGHTER_SPEED
LABEL $01F4 START_SHOT_SPEED
EQU $19 SPEED_DELTA
COMMENT_LABEL $19 both shot and player
LABEL $01F4 START_TIMER_MAX
COMMENT_LABEL $01F4 10 seconds
LABEL $012C MEGAFIEND_HP
LABEL $012C MONEYSUCKER_HP
EQU $00 DEAFULT_START_MONEY
EQU $03 PLAYER_START_LIVES
EQU $00 START_POWER
EQU $00 INGAMESECRETS
EQU $32 SUPER_DIAMOND_BORDER
EQU $01 UP
EQU $03 RIGHT
EQU $05 DOWN
EQU $07 LEFT
EQU $00 NONE
EQU $00 START_BANK
EQU $19 EXPLOSION_MAX_SCALE
EQU $06 MAX_BULLET_POWER_ADJUST
EQU $00 SHOT_RADIUS0
EQU $09 SHOT_RADIUS1
COMMENT_LABEL $09 all Radius must be different
EQU $0E SHOT_RADIUS2
COMMENT_LABEL $0E the radius is also used to determine the current shot type!
EQU $12 SHOT_RADIUS3
EQU $18 SHOT_RADIUS4
COMMENT_LABEL $18 maximum, otherwise col detect fucks up!
EQU $0A SHOT_RADIUS5
COMMENT_LABEL $0A all Radius must be different
EQU $08 SHOT_RADIUS6
COMMENT_LABEL $08 all Radius must be different
EQU $01 COLLECTED_RANK1
EQU $02 COLLECTED_RANK2
EQU $04 COLLECTED_RANK3
EQU $08 COLLECTED_RANK4
EQU $10 COLLECTED_RANK5
EQU $20 COLLECTED_RANK6
EQU $40 COLLECTED_RANK_NEGATIVE
COMMENT_LABEL $40 not implemented
EQU $0A SAUCER_START_DELAY
COMMENT_LABEL $0A seconds
LABEL $00D0 SUCKER_YPOS
EQU $0A MONEY_SUCK_WAIT
COMMENT_LABEL $0A rounds = 1/5 second
EQU $23 MAX_PLAYER_EXPLOSION_SIZE
EQU $00 MESSAGE_STATE_STAY
EQU $01 MESSAGE_STATE_SCROLL_NORMAL_OUT
EQU $02 MESSAGE_STATE_SCROLL_MESSAGE_IN
EQU $03 MESSAGE_STATE_STAY_TIMED
EQU $04 MESSAGE_STATE_SCROLL_MESSAGE_OUT
EQU $05 MESSAGE_STATE_SCROLL_NORMAL_IN
LABEL $0080 PLAYER_YPOS
LABEL $03E8 MAX_PLAYER_SPEED
LABEL $00C8 MIN_PLAYER_SPEED
LABEL $03E8 MAX_SHOT_SPEED
LABEL $00C8 MIN_SHOT_SPEED
EQU $32 DELAY_TO_REAPEAR
COMMENT_LABEL $32 1 s - how long the enemies "disappear" after their initial attack phase
EQU $07 OBJECT_SCALE
COMMENT_LABEL $07 9
EQU $19 STRING_SCALE
EQU $03 ANIMATION_DELAY
COMMENT_LABEL $03 for ALL animation in game
EQU $3F DEFAULT_ENEMY_INTENSITY
EQU $02 ATTACK_PATTERN_PROBABILITY
EQU $05 HIT_FLASH_LENGTH
COMMENT_LABEL $05 should be smaller than smallest P_START_DELAY_OF_PATTERN
EQU $32 VB_SPRITE_SCALE50
EQU $32 BOSS_SPRITE_SCALE
EQU $01 LEVEL_TYPE_NORMAL
EQU $02 LEVEL_TYPE_KAMIKAZE
EQU $03 LEVEL_TYPE_BIGGY
EQU $04 LEVEL_TYPE_BONUS
COMMENT_LABEL $04 akill all to get special bonus, enemies don't shoot
EQU $05 LEVEL_TYPE_BOSS1
EQU $06 LEVEL_TYPE_BOSS2
EQU $07 LEVEL_TYPE_BOSS3
EQU $08 LEVEL_TYPE_BOSS4
EQU $09 LEVEL_TYPE_FAILURE
LABEL $0080 LEVEL_TYPE_SHOP_AFTER
EQU $40 LEVEL_TYPE_WARP_AFTER
EQU $20 LEVEL_TYPE_DONT_SHOOT_WHILE_WAITING
EQU $10 LEVEL_APPEAR_AT_WAITING
EQU $0C CLONE_MAX_ENEMY_DISPLAYED
COMMENT_LABEL $0C only allow cloning when maximum 12 enemies are visible!
EQU $00 TYPE_NONE
EQU $01 TYPE_DIRECT_WAIT
COMMENT_LABEL $01 they don't delay after attack pattern in "off" but move directly to their waiting position
EQU $02 TYPE_DONT_SHOOT
COMMENT_LABEL $02 they never shhot
EQU $04 TYPE_DONT_ATTACK
COMMENT_LABEL $04 they never enter an attack pattern
EQU $08 TYPE_DONT_WAIT
COMMENT_LABEL $08 kamikaze type attackers which do never wait
EQU $10 _UNUSED_TYPE_SINGLE_ANIMATION
COMMENT_LABEL $10 this enemy has no "angle" it always animates the "same" (not implemented
EQU $20 TYPE_CAN_CLONE
COMMENT_LABEL $20 while starting an attack pattern, enemy can clone itself
EQU $40 TYPE_DEBRIS_BOMBER
COMMENT_LABEL $40 does not explode while dying, but drops a "debris" bomb :-)
LABEL $0080 TYPE_SHIELD
COMMENT_LABEL $0080 can not be destroyed, doesn't count as "level finsih enemy", they don't wobble while waiting
EQU $00 SINGLE_ATTACK_RELATIVE_PATTERN
COMMENT_LABEL $00 relative means - it uses the current position of the enemy as start
EQU $01 SINGLE_ATTACK_TARGET_ENEMY_PATTERN
COMMENT_LABEL $01 TARGET - uses somehow the players coordinate as coordinate info
EQU $02 SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LABEL $02 moves from current position to an absolut screen position
EQU $03 SINGLE_ATTACK_JUMP
COMMENT_LABEL $03 init another pattern , position int speed, subposition = to 0
EQU $64 BOSS2_HITPOINTS
COMMENT_LABEL $64 Insect Queen
LABEL $00C8 BOSS1_HITPOINTS
COMMENT_LABEL $00C8 Mecha
LABEL $017C BOSS3_HITPOINTS
COMMENT_LABEL $017C Sinistar
LABEL $00C8 BOSS4_HITPOINTS
COMMENT_LABEL $00C8 Death star
EQU -$20 SWARM_MIN_X
COMMENT_LABEL -$20 rectangle where the swarm will move in (or is headed to)
EQU $20 SWARM_MAX_X
EQU -$40 SWARM_MIN_Y
EQU -$10 SWARM_MAX_Y
EQU $01 SWARM_HP
COMMENT_LABEL $01 hit points of a single swarm member
EQU -$40 TRIBBLE_MIN_X
COMMENT_LABEL -$40 rectangle where the tribbles will move in (or is headed to)
EQU $40 TRIBBLE_MAX_X
EQU -$40 TRIBBLE_MIN_Y
EQU $40 TRIBBLE_MAX_Y
EQU $00 A_SNIPER_RANK3
EQU $02 A_SNIPER_RANK2
EQU $04 A_SNIPER_RANK1
EQU $06 A_SCORE_RANK5
EQU $08 A_SCORE_RANK4
EQU $0A A_SCORE_RANK3
EQU $0C A_SCORE_RANK2
EQU $0E A_SCORE_RANK1
EQU $10 A_MONEY_RANK5
EQU $12 A_MONEY_RANK4
EQU $14 A_MONEY_RANK3
EQU $16 A_MONEY_RANK2
EQU $18 A_MONEY_RANK1
EQU $1A A_GREEDY
EQU $1C A_9LIVES
EQU $1E A_ALL
EQU $20 A_BLADEMASTER_RANK_5
EQU $22 A_BLADEMASTER_RANK_4
EQU $24 A_BLADEMASTER_RANK_3
EQU $26 A_BLADEMASTER_RANK_2
EQU $28 A_BLADEMASTER_RANK_1
EQU $2A A_TRIPPLE
EQU $2C A_QUADRO
EQU $2E A_LASER
EQU $30 A_OFFICER_RANK4
EQU $32 A_OFFICER_RANK3
EQU $34 A_OFFICER_RANK2
EQU $36 A_OFFICER_RANK1
EQU $38 A_SPY_RANK4
EQU $3A A_SPY_RANK3
EQU $3C A_SPY_RANK2
EQU $3E A_SPY_RANK1
EQU $40 A_BONUS_RANK4
EQU $42 A_BONUS_RANK3
EQU $44 A_BONUS_RANK2
EQU $46 A_BONUS_RANK1
EQU $48 A_LOSS
EQU $4A A_FALCON
EQU $4C A_DRUNKEN
EQU $01 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3
COMMENT_LABEL $01 checked at the end of each game
EQU $02 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2
EQU $04 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1
EQU $08 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5
COMMENT_LABEL $08 checked at the end of each game
EQU $10 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4
EQU $20 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3
EQU $40 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2
LABEL $0080 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1
EQU $01 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5
COMMENT_LABEL $01 checked at the start of each shop
EQU $02 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4
EQU $04 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3
EQU $08 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2
EQU $10 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1
EQU $20 ACHIEVEMENT_FLAG_BYTE2_GREEDY
COMMENT_LABEL $20 check when collected / bought
EQU $40 ACHIEVEMENT_FLAG_BYTE2_9LIVES
COMMENT_LABEL $40 checked when a live is bought
LABEL $0080 ACHIEVEMENT_FLAG_BYTE2_ALL
COMMENT_LABEL $0080 checked at the end of each game
EQU $01 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK5
COMMENT_LABEL $01 checked each roll over
EQU $02 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK4
EQU $04 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK3
EQU $08 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK2
EQU $10 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK1
EQU $20 ACHIEVEMENT_FLAG_BYTE3_TRIPPLE
COMMENT_LABEL $20 checked on EXTRA / level finish
EQU $40 ACHIEVEMENT_FLAG_BYTE3_QUADRO
LABEL $0080 ACHIEVEMENT_FLAG_BYTE3_LASER
EQU $01 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4
COMMENT_LABEL $01 checked on officer level up! (after shop)
EQU $02 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK3
EQU $04 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2
EQU $08 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1
EQU $10 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4
COMMENT_LABEL $10 check when secret is discovered / end of game
EQU $20 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3
EQU $40 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK2
LABEL $0080 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1
EQU $01 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE1
COMMENT_LABEL $01 bit "number" 0-7
EQU $02 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE2
COMMENT_LABEL $02 up that "secret message" was read already!
EQU $04 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE3
EQU $08 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4
COMMENT_LABEL $08 check after challenge
EQU $10 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3
EQU $20 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2
EQU $40 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1
LABEL $0080 ACHIEVEMENT_FLAG_BYTE5_BIGGEST_LOSS
COMMENT_LABEL $0080 check on shot on collect
EQU $01 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_FALCON
COMMENT_LABEL $01 checked at the end of each minestorm
EQU $02 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_DRUNKEN
EQU $17 SCOOP_RIGHT_PLAYER_XOFFSET
EQU -$17 SCOOP_LEFT_PLAYER_XOFFSET
LABEL $0082 SCOOP_PLAYER_YPOS
EQU -$02 BONUS_MONEY_200
EQU $00 BONUS_E
EQU $02 BONUS_X
EQU $04 BONUS_T
EQU $06 BONUS_R
EQU $08 BONUS_A
EQU $0A BONUS_SHOTPLUS
EQU $0C BONUS_FASTER
EQU $0E BONUS_FASTER_SHOT
EQU $10 BONUS_SLOWER
EQU $12 BONUS_SHOTMINUS
EQU $14 BONUS_MONEY_5
EQU $16 BONUS_MONEY_20
EQU $18 BONUS_MONEY_50
EQU $1A BONUS_ARMOR
EQU $1C BONUS_SHIELD
EQU $1E BONUS_SCOOP
EQU $20 BONUS_SHOT1
EQU $22 BONUS_SHOT2
EQU $24 BONUS_SHOT3
EQU $26 BONUS_SHOT4
EQU $28 BONUS_MINESTORM
EQU $2A BONUS_MULT2
EQU $2C BONUS_MULT5
EQU $2E BONUS_BOMB_CASH
EQU $30 BONUS_BOMB_DIAMOND
EQU $32 BONUS_TIMER
EQU $34 BONUS_SLOWER_SHOT
EQU $36 BONUS_CASH_DOUBLER
EQU $38 BONUS_SHOT_POWERUP
EQU $3A BONUS_EXTRA_LIFE
EQU $3C BONUS_DRUNKEN
EQU $3E BONUS_AUTOFIRE
LABEL $C800 Vec_Snd_Shadow
COMMENT_LABEL $C800 Shadow of sound chip registers (15 bytes)
LABEL $C80F Vec_Btn_State
COMMENT_LABEL $C80F Current state of all joystick buttons
LABEL $C810 Vec_Prev_Btns
COMMENT_LABEL $C810 Previous state of all joystick buttons
LABEL $C811 Vec_Buttons
COMMENT_LABEL $C811 Current toggle state of all buttons
LABEL $C812 Vec_Button_1_1
COMMENT_LABEL $C812 Current toggle state of stick 1 button 1
LABEL $C813 Vec_Button_1_2
COMMENT_LABEL $C813 Current toggle state of stick 1 button 2
LABEL $C814 Vec_Button_1_3
COMMENT_LABEL $C814 Current toggle state of stick 1 button 3
LABEL $C815 Vec_Button_1_4
COMMENT_LABEL $C815 Current toggle state of stick 1 button 4
LABEL $C816 Vec_Button_2_1
COMMENT_LABEL $C816 Current toggle state of stick 2 button 1
LABEL $C817 Vec_Button_2_2
COMMENT_LABEL $C817 Current toggle state of stick 2 button 2
LABEL $C818 Vec_Button_2_3
COMMENT_LABEL $C818 Current toggle state of stick 2 button 3
LABEL $C819 Vec_Button_2_4
COMMENT_LABEL $C819 Current toggle state of stick 2 button 4
LABEL $C81A Vec_Joy_Resltn
COMMENT_LABEL $C81A Joystick A/D resolution ($80=min $00=max)
LABEL $C81B Vec_Joy_1_X
COMMENT_LABEL $C81B Joystick 1 left/right
LABEL $C81C Vec_Joy_1_Y
COMMENT_LABEL $C81C Joystick 1 up/down
LABEL $C81D Vec_Joy_2_X
COMMENT_LABEL $C81D Joystick 2 left/right
LABEL $C81E Vec_Joy_2_Y
COMMENT_LABEL $C81E Joystick 2 up/down
LABEL $C81F Vec_Joy_Mux
COMMENT_LABEL $C81F Joystick enable/mux flags (4 bytes)
LABEL $C81F Vec_Joy_Mux_1_X
COMMENT_LABEL $C81F Joystick 1 X enable/mux flag (=1)
LABEL $C820 Vec_Joy_Mux_1_Y
COMMENT_LABEL $C820 Joystick 1 Y enable/mux flag (=3)
LABEL $C821 Vec_Joy_Mux_2_X
COMMENT_LABEL $C821 Joystick 2 X enable/mux flag (=5)
LABEL $C822 Vec_Joy_Mux_2_Y
COMMENT_LABEL $C822 Joystick 2 Y enable/mux flag (=7)
LABEL $C823 Vec_Misc_Count
COMMENT_LABEL $C823 Misc counter/flag byte, zero when not in use
LABEL $C824 Vec_0Ref_Enable
COMMENT_LABEL $C824 Check0Ref enable flag
LABEL $C825 Vec_Loop_Count
COMMENT_LABEL $C825 Loop counter word (incremented in Wait_Recal)
LABEL $C827 Vec_Brightness
COMMENT_LABEL $C827 Default brightness
LABEL $C828 Vec_Dot_Dwell
COMMENT_LABEL $C828 Dot dwell time?
LABEL $C829 Vec_Pattern
COMMENT_LABEL $C829 Dot pattern (bits)
LABEL $C82A Vec_Text_HW
COMMENT_LABEL $C82A Default text height and width
LABEL $C82A Vec_Text_Height
COMMENT_LABEL $C82A Default text height
LABEL $C82B Vec_Text_Width
COMMENT_LABEL $C82B Default text width
LABEL $C82C _Vec_Str_Ptr
COMMENT_LABEL $C82C Temporary string pointer for Print_Str
LABEL $C82E Vec_Counters
COMMENT_LABEL $C82E Six bytes of counters
LABEL $C82E Vec_Counter_1
COMMENT_LABEL $C82E First counter byte
LABEL $C82F Vec_Counter_2
COMMENT_LABEL $C82F Second counter byte
LABEL $C830 Vec_Counter_3
COMMENT_LABEL $C830 Third counter byte
LABEL $C831 Vec_Counter_4
COMMENT_LABEL $C831 Fourth counter byte
LABEL $C832 Vec_Counter_5
COMMENT_LABEL $C832 Fifth counter byte
LABEL $C833 Vec_Counter_6
COMMENT_LABEL $C833 Sixth counter byte
LABEL $C834 Vec_RiseRun_Tmp
COMMENT_LABEL $C834 Temp storage word for rise/run
LABEL $C836 Vec_Angle
COMMENT_LABEL $C836 Angle for rise/run and rotation calculations
LABEL $C837 Vec_Run_Index
COMMENT_LABEL $C837 Index pair for run
LABEL $C839 Vec_Rise_Index
COMMENT_LABEL $C839 Index pair for rise
LABEL $C83B Vec_RiseRun_Len
COMMENT_LABEL $C83B length for rise/run
LABEL $C83D Vec_Rfrsh
COMMENT_LABEL $C83D Refresh time (divided by 1.5MHz)
LABEL $C83D Vec_Rfrsh_lo
COMMENT_LABEL $C83D Refresh time low byte
LABEL $C83E Vec_Rfrsh_hi
COMMENT_LABEL $C83E Refresh time high byte
LABEL $C83F Vec_Music_Work
COMMENT_LABEL $C83F 13 Music work buffer (14 bytes, backwards?)
LABEL $C842 Vec_Music_Wk_A
COMMENT_LABEL $C842 register 10
LABEL $C845 Vec_Music_Wk_7
COMMENT_LABEL $C845 register 7
LABEL $C846 Vec_Music_Wk_6
COMMENT_LABEL $C846 register 6
LABEL $C847 Vec_Music_Wk_5
COMMENT_LABEL $C847 register 5
LABEL $C84B Vec_Music_Wk_1
COMMENT_LABEL $C84B register 1
LABEL $C84D Vec_Freq_Table
COMMENT_LABEL $C84D Pointer to note-to-frequency table (normally $FC8D)
LABEL $C84F Vec_Max_Players
COMMENT_LABEL $C84F Maximum number of players for Select_Game
LABEL $C850 Vec_Max_Games
COMMENT_LABEL $C850 Maximum number of games for Select_Game
LABEL $C84F Vec_ADSR_Table
COMMENT_LABEL $C84F Storage for first music header word (ADSR table)
LABEL $C851 Vec_Twang_Table
COMMENT_LABEL $C851 Storage for second music header word ('twang' table)
LABEL $C853 Vec_Music_Ptr
COMMENT_LABEL $C853 Music data pointer
LABEL $C853 Vec_Expl_ChanA
COMMENT_LABEL $C853 Used by Explosion_Snd - bit for first channel used?
LABEL $C854 Vec_Expl_Chans
COMMENT_LABEL $C854 Used by Explosion_Snd - bits for all channels used?
LABEL $C855 Vec_Music_Chan
COMMENT_LABEL $C855 Current sound channel number for Init_Music
LABEL $C856 Vec_Music_Flag
COMMENT_LABEL $C856 Music active flag ($00=off $01=start $80=on)
LABEL $C857 Vec_Duration
COMMENT_LABEL $C857 Duration counter for Init_Music
LABEL $C858 Vec_Music_Twang
COMMENT_LABEL $C858 3 word 'twang' table used by Init_Music
LABEL $C858 Vec_Expl_1
COMMENT_LABEL $C858 Four bytes copied from Explosion_Snd's U-reg parameters
LABEL $C859 Vec_Expl_2
LABEL $C85A Vec_Expl_3
LABEL $C85B Vec_Expl_4
LABEL $C85C Vec_Expl_Chan
COMMENT_LABEL $C85C Used by Explosion_Snd - channel number in use?
LABEL $C85D Vec_Expl_ChanB
COMMENT_LABEL $C85D Used by Explosion_Snd - bit for second channel used?
LABEL $C85E Vec_ADSR_Timers
COMMENT_LABEL $C85E ADSR timers for each sound channel (3 bytes)
LABEL $C861 Vec_Music_Freq
COMMENT_LABEL $C861 Storage for base frequency of each channel (3 words)
LABEL $C867 Vec_Expl_Flag
COMMENT_LABEL $C867 Explosion_Snd initialization flag?
LABEL $C877 Vec_Expl_Timer
COMMENT_LABEL $C877 Used by Explosion_Snd
LABEL $C879 Vec_Num_Players
COMMENT_LABEL $C879 Number of players selected in Select_Game
LABEL $C87A Vec_Num_Game
COMMENT_LABEL $C87A Game number selected in Select_Game
LABEL $C87B Vec_Seed_Ptr
COMMENT_LABEL $C87B Pointer to 3-byte random number seed (=$C87D)
LABEL $C87D Vec_Random_Seed
COMMENT_LABEL $C87D Default 3-byte random number seed
LABEL $CBEA Vec_Default_Stk
COMMENT_LABEL $CBEA Default top-of-stack
LABEL $CBEB Vec_High_Score
COMMENT_LABEL $CBEB High score storage (7 bytes)
LABEL $CBF2 Vec_SWI3_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF2 Vec_SWI2_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF5 Vec_FIRQ_Vector
COMMENT_LABEL $CBF5 FIRQ interrupt vector (3 bytes)
LABEL $CBF8 Vec_IRQ_Vector
COMMENT_LABEL $CBF8 IRQ interrupt vector (3 bytes)
LABEL $CBFB Vec_SWI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFB Vec_NMI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFE Vec_Cold_Flag
COMMENT_LABEL $CBFE Cold start flag (warm start if = $7321)
LABEL $D000 VIA_port_b
COMMENT_LABEL $D000 VIA port B data I/O register
LABEL $D001 VIA_port_a
COMMENT_LABEL $D001 VIA port A data I/O register (handshaking)
LABEL $D002 VIA_DDR_b
COMMENT_LABEL $D002 VIA port B data direction register (0=input 1=output)
LABEL $D003 VIA_DDR_a
COMMENT_LABEL $D003 VIA port A data direction register (0=input 1=output)
LABEL $D004 VIA_t1_cnt_lo
COMMENT_LABEL $D004 VIA timer 1 count register lo (scale factor)
LABEL $D005 VIA_t1_cnt_hi
COMMENT_LABEL $D005 VIA timer 1 count register hi
LABEL $D006 VIA_t1_lch_lo
COMMENT_LABEL $D006 VIA timer 1 latch register lo
LABEL $D007 VIA_t1_lch_hi
COMMENT_LABEL $D007 VIA timer 1 latch register hi
LABEL $D008 VIA_t2_lo
COMMENT_LABEL $D008 VIA timer 2 count/latch register lo (refresh)
LABEL $D009 VIA_t2_hi
COMMENT_LABEL $D009 VIA timer 2 count/latch register hi
LABEL $D00A VIA_shift_reg
COMMENT_LABEL $D00A VIA shift register
LABEL $D00B VIA_aux_cntl
COMMENT_LABEL $D00B VIA auxiliary control register
LABEL $D00C VIA_cntl
COMMENT_LABEL $D00C VIA control register
LABEL $D00D VIA_int_flags
COMMENT_LABEL $D00D VIA interrupt flags register
LABEL $D00E VIA_int_enable
COMMENT_LABEL $D00E VIA interrupt enable register
LABEL $D00F VIA_port_a_nohs
COMMENT_LABEL $D00F VIA port A data I/O register (no handshaking)
LABEL $F000 Cold_Start
LABEL $F06C Warm_Start
LABEL $F14C Init_VIA
LABEL $F164 Init_OS_RAM
LABEL $F18B Init_OS
LABEL $F1A2 Set_Refresh
LABEL $F1AA DP_to_D0
LABEL $F1AF DP_to_C8
LABEL $F1B4 Read_Btns_Mask
LABEL $F1BA Read_Btns
LABEL $F256 Sound_Byte
LABEL $F259 Sound_Byte_x
LABEL $F25B Sound_Byte_raw
LABEL $F272 _Clear_Sound
LABEL $F27D Sound_Bytes
LABEL $F284 Sound_Bytes_x
LABEL $F289 Do_Sound
LABEL $F28C Do_Sound_x
LABEL $F29D Intensity_1F
LABEL $F2A1 Intensity_3F
LABEL $F2A5 Intensity_5F
LABEL $F2A9 Intensity_7F
LABEL $F2AB Intensity_a
LABEL $F2BE Dot_ix_b
LABEL $F2C1 Dot_ix
LABEL $F2C3 Dot_d
LABEL $F2C5 Dot_here
LABEL $F2D5 Dot_List
LABEL $F2DE Dot_List_Reset
LABEL $F34A Reset0Ref_D0
LABEL $F34F Check0Ref
LABEL $F354 Reset0Ref
LABEL $F35B Reset_Pen
LABEL $F36B Reset0Int
LABEL $F511 Random_3
LABEL $F517 Random
LABEL $F533 Init_Music_Buf
LABEL $F53F Clear_x_b
LABEL $F542 Clear_C8_RAM
COMMENT_LABEL $F542 never used by GCE carts?
LABEL $F545 Clear_x_256
LABEL $F548 Clear_x_d
LABEL $F550 Clear_x_b_80
LABEL $F552 Clear_x_b_a
LABEL $F55A Dec_3_Counters
LABEL $F55E Dec_6_Counters
LABEL $F563 Dec_Counters
LABEL $F56D Delay_3
COMMENT_LABEL $F56D 30 cycles
LABEL $F571 Delay_2
COMMENT_LABEL $F571 25 cycles
LABEL $F575 Delay_1
COMMENT_LABEL $F575 20 cycles
LABEL $F579 Delay_0
COMMENT_LABEL $F579 12 cycles
LABEL $F57A Delay_b
COMMENT_LABEL $F57A 5*B + 10 cycles
LABEL $F57D Delay_RTS
COMMENT_LABEL $F57D 5 cycles
LABEL $F57E Bitmask_a
LABEL $F584 Abs_a_b
LABEL $F58B Abs_b
LABEL $F593 Rise_Run_Angle
LABEL $F5D9 Get_Rise_Idx
LABEL $F5DB Get_Run_Idx
LABEL $F5EF Get_Rise_Run
LABEL $F5FF Rise_Run_X
LABEL $F601 Rise_Run_Y
LABEL $F603 Rise_Run_Len
LABEL $F610 Rot_VL_ab
LABEL $F616 Rot_VL
LABEL $F61F Rot_VL_Mode
LABEL $F62B Rot_VL_M_dft
LABEL $F65B Xform_Run_a
LABEL $F65D Xform_Run
LABEL $F661 Xform_Rise_a
LABEL $F663 Xform_Rise
LABEL $F67F Move_Mem_a_1
LABEL $F683 Move_Mem_a
LABEL $F687 Init_Music_chk
LABEL $F68D Init_Music
LABEL $F692 Init_Music_x
LABEL $F7A9 Select_Game
LABEL $F84F Clear_Score
LABEL $F85E Add_Score_a
LABEL $F87C Add_Score_d
LABEL $F8B7 Strip_Zeros
LABEL $F8C7 Compare_Score
LABEL $F8D8 New_High_Score
LABEL $F8E5 Obj_Will_Hit_u
LABEL $F8F3 Obj_Will_Hit
LABEL $F8FF Obj_Hit
LABEL $F92E Explosion_Snd
LABEL $FF9F Draw_Grid_VL
LABEL $FD0D music1
LABEL $FD1D music2
LABEL $FD81 music3
LABEL $FDD3 music4
LABEL $FE38 music5
LABEL $FE76 music6
LABEL $FEC6 music7
LABEL $FEF8 music8
LABEL $FF26 music9
LABEL $FF44 musica
LABEL $FF62 musicb
LABEL $FF7A musicc
LABEL $FF8F musicd
LABEL $F9F4 Char_Table
LABEL $FBD4 Char_Table_End
LABEL $F192 Wait_Recal
LABEL $F1F5 Joy_Analog
LABEL $F1F8 Joy_Digital
LABEL $F2E6 Recalibrate
LABEL $F2F2 Moveto_x_7F
LABEL $F2FC Moveto_d_7F
LABEL $F308 Moveto_ix_FF
LABEL $F30C Moveto_ix_7F
LABEL $F30E Moveto_ix_b
LABEL $F310 Moveto_ix
LABEL $F312 Moveto_d
LABEL $F373 Print_Str_hwyx
LABEL $F378 Print_Str_yx
LABEL $F37A Print_Str_d
LABEL $F385 Print_List_hw
LABEL $F38A Print_List
LABEL $F38C Print_List_chk
LABEL $F391 Print_Ships_x
LABEL $F393 Print_Ships
LABEL $F3AD Mov_Draw_VLc_a
COMMENT_LABEL $F3AD count y x y x ...
LABEL $F3B1 Mov_Draw_VL_b
COMMENT_LABEL $F3B1 y x y x ...
LABEL $F3B5 Mov_Draw_VLcs
COMMENT_LABEL $F3B5 count scale y x y x ...
LABEL $F3B7 Mov_Draw_VL_ab
COMMENT_LABEL $F3B7 y x y x ...
LABEL $F3B9 Mov_Draw_VL_a
COMMENT_LABEL $F3B9 y x y x ...
LABEL $F3BC Mov_Draw_VL
COMMENT_LABEL $F3BC y x y x ...
LABEL $F3BE Mov_Draw_VL_d
COMMENT_LABEL $F3BE y x y x ...
LABEL $F3CE Draw_VLc
COMMENT_LABEL $F3CE count y x y x ...
LABEL $F3D2 Draw_VL_b
COMMENT_LABEL $F3D2 y x y x ...
LABEL $F3D6 Draw_VLcs
COMMENT_LABEL $F3D6 count scale y x y x ...
LABEL $F3D8 Draw_VL_ab
COMMENT_LABEL $F3D8 y x y x ...
LABEL $F3DA Draw_VL_a
COMMENT_LABEL $F3DA y x y x ...
LABEL $F3DD Draw_VL
COMMENT_LABEL $F3DD y x y x ...
LABEL $F3DF Draw_Line_d
COMMENT_LABEL $F3DF y x y x ...
LABEL $F404 Draw_VLp_FF
COMMENT_LABEL $F404 pattern y x pattern y x ... $01
LABEL $F408 Draw_VLp_7F
COMMENT_LABEL $F408 pattern y x pattern y x ... $01
LABEL $F40C Draw_VLp_scale
COMMENT_LABEL $F40C scale pattern y x pattern y x ... $01
LABEL $F40E Draw_VLp_b
COMMENT_LABEL $F40E pattern y x pattern y x ... $01
LABEL $F410 Draw_VLp
COMMENT_LABEL $F410 pattern y x pattern y x ... $01
LABEL $F434 Draw_Pat_VL_a
COMMENT_LABEL $F434 y x y x ...
LABEL $F437 Draw_Pat_VL
COMMENT_LABEL $F437 y x y x ...
LABEL $F439 Draw_Pat_VL_d
COMMENT_LABEL $F439 y x y x ...
LABEL $F46E Draw_VL_mode
COMMENT_LABEL $F46E mode y x mode y x ... $01
LABEL $F495 Print_Str
COMMENT_LABEL $F495 endif
EQU $0A UNIVERSAL_PLAYER_SHOT_RADIUS
EQU $06 SCOOP_INTERVALL_ADD
COMMENT_LABEL $06 7
EQU $0A CORRECTION
EQU $0A SwarmEnemy
EQU $00 Y_POS
EQU $01 X_POS
EQU $02 BEHAVIOUR
EQU $04 NEXT_ENEMY_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 SWARM_ALL_PURPOSE
COMMENT_LABEL $06 flash length when hit (might be bits) 3 bits max
EQU $07 SWARM_MOVEMENT_INFO
EQU $08 SWARM_ANIM_POS
EQU $09 SWARM_HIT_POINTS
EQU $0A ExplodingEnemySwarm
LABEL $C8FE filler
COMMENT_LABEL $C8FE #noDoubleWarn
EQU $08 SWARM_EXPLOSION_INTENSITY
COMMENT_LABEL $08 #noDoubleWarn
EQU $09 SWARM_EXPLOSION_SCALE
COMMENT_LABEL $09 #noDoubleWarn
EQU $0B TribbleEnemyStruct
EQU $06 TRIBBLE_ALL_PURPOSE
COMMENT_LABEL $06 flash length when hit (might be bits) 3 bits max
EQU $07 TRIBBLE_MOVEMENT_INFO
EQU $08 TRIBBLE_ANIM_POS
EQU $09 TRIBBLE_HIT_POINTS
EQU $0A TRIBBLE_LIFE_TIME
EQU $15 EnemyStruct
EQU $00 RELATIVE_HI_Y
EQU $01 RELATIVE_HI_X
EQU $06 RELATIVE_LO_Y
EQU $07 RELATIVE_LO_X
EQU $06 Y_POS16
EQU $08 TARGET_RELATIVE_Y
EQU $09 TARGET_RELATIVE_X
EQU $08 X_POS16
EQU $0A TARGET_ABSOLUT_Y
COMMENT_LABEL $0A if attack pattern is absolut - than here go the target coordinates
EQU $0A SUB_PATTERN
COMMENT_LABEL $0A is 2 bytes, but shares second byte with ANIM count
EQU $0B TARGET_ABSOLUT_X
EQU $0C BUG_SHOT_DELAY
EQU $0C INVERSE_INTRO_PATTERN
EQU $0C ANGLE_HOMEFLIGHT
COMMENT_LABEL $0C in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
EQU $0D BUG_ADDS_YX
EQU $0D MY_PATTERN
EQU $0F ANIM_POSITION
COMMENT_LABEL $0F current position in animation table of vectorlists
EQU $0F SUB_PATTERN_POSITION
COMMENT_LABEL $0F lower nibble when attack pattern
EQU $0F PATTERN_POSITION
COMMENT_LABEL $0F where in the current pattern are we?
EQU $10 BUG_APPEARING_INTENSITY
EQU $10 BUG_MOVEMENT_DOUBLER
EQU $10 POSITION
COMMENT_LABEL $10 UID of curretn enemies -> defines position in waiting state
EQU $11 ALL_PURPOSE
COMMENT_LABEL $11 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
EQU $12 HITPOINTS
COMMENT_LABEL $12 hit points = upper 5 bits
EQU $12 BUG_ENEMY_HITPOINTS
COMMENT_LABEL $12 all 8 bits
EQU $12 BIT_MASK
COMMENT_LABEL $12 shot delay = lower 3 bits
EQU $13 ENEMY_STRUCT
COMMENT_LABEL $13 this can be reduced to one byte!
EQU $15 ExplodingEnemyStruct
EQU $06 SMARTLIST_ORG
EQU $10 EXPLOSION_INTENSITY
COMMENT_LABEL $10 #noDoubleWarn
EQU $12 EXPLOSION_SCALE
COMMENT_LABEL $12 #noDoubleWarn
EQU $15 EnemyStructRepell
EQU $0A XPOS_LOCKED
COMMENT_LABEL $0A #
EQU $0B WAS_ANIM_COUNT
COMMENT_LABEL $0B count down to next animation sequence
EQU $0C ANGLE_REPELL
EQU $0D Y_ADD16
EQU $0F X_ADD16
EQU $15 SaucerStruct
EQU $06 BIG_HP
COMMENT_LABEL $06 D current position for calculation only , Y is pos, y low is addy
EQU $08 STAY_HERE_LOOP_COUNTER
COMMENT_LABEL $08 1 byte ; D current position for calculation only
EQU $09 LASER_X
COMMENT_LABEL $09 1 byte ; D current position for calculation only
EQU $0A MONEY_SUCK_TIMER
COMMENT_LABEL $0A is 2 bytes, but shares second byte with ANIM count
EQU $0B BACK_OR_FORTH
EQU $0C ShotStruct
EQU $00 Y_POS_NOW16
EQU $04 NEXT_SHOT_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $0A SHOT_SPEED
EQU $0A X_POS_NOW16
EQU $0C MissileShotStruct
EQU $06 DIRECTION_CHANGE_COUNTER
EQU $07 MISSILE_X_ADD
EQU $0B fillerMissile
EQU $08 BonusStruct
EQU $04 NEXT_BONUS_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 TYPE
EQU $07 BONUS_ANIM_POSITION
COMMENT_LABEL $07 low 6 bit - anim, hi 2 bit speed
EQU $0D StarStruct
EQU $00 Y1_POS
COMMENT_LABEL $00 D current position
EQU $01 X1_POS
COMMENT_LABEL $01 D
EQU $04 NEXT_STAR_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 RADIUS
EQU $06 TWINKLE
EQU $07 Y2_POS
EQU $08 X2_POS
EQU $09 Y3_POS
EQU $0A X3_POS
EQU $0B Y4_POS
EQU $0C X4_POS
EQU $0A PlayerShotStruct
EQU $00 Y_POS_REL
EQU $01 X_POS_REL
EQU $04 NEXT_PLAYERSHOT_OBJECT
EQU $08 SHOT_RADIUS
EQU $09 SCOOP_SHOTS
COMMENT_LABEL $09 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
EQU $0A PlayerLazerShotStruct
EQU $06 LAZER_WOBBLE
COMMENT_LABEL $06 alternating 0 and != 0, left or right slope starting
EQU $07 LAZER_TIMER
EQU $10 LevelDefinition
EQU $00 LEVEL_ENEMY_COUNT
COMMENT_LABEL $00 or in case of direct appearence the number of enemies!
EQU $00 LEVEL_INTRO_PATTERN
COMMENT_LABEL $00 or in case of direct appearence the number of enemies!
EQU $02 LEVEL_WAITING_PATTERN
EQU $04 LEVEL_ATTACK_PATTERN
COMMENT_LABEL $04 pointer to attack pattern list - pointer to 4 pointers to attack patterns
EQU $06 LEVEL_ENEMY_DEFINITION
EQU $08 LEVEL_MAX_ITEMS
COMMENT_LABEL $08 high nibble max shots, low nibble max attack patterns
EQU $09 LEVEL_TYPE
EQU $0A LEVEL_BULLET_BORDER
COMMENT_LABEL $0A how probable is it that enemies shoots
EQU $0B LEVEL_BONUS_BORDER
COMMENT_LABEL $0B how probable is it that bonus drops
EQU $0C LEVEL_BUG_DEFINITION
EQU $0E LEVEL_BUG_COUNT
EQU $0F LEVEL_SHOT_DELAY_BUG
EQU $04 IntroLine
EQU $00 LINE_PATTERN_DEF
EQU $02 LINE_PATTERN_INVERS
EQU $03 LINE_PATTERN_ENEMY_COUNT
EQU $08 PatternLine
EQU $00 P_YPOS
EQU $01 P_XPOS
EQU $02 P_YADD
EQU $04 P_XADD
EQU $06 P_ANGLE
EQU $07 P_PATTERN_TARGET_RADIUS
COMMENT_LABEL $07 depending on speed
EQU $07 P_PAD
COMMENT_LABEL $07 this is now SPEED offset for compare!
EQU $02 IntroPattern
EQU $00 P_DELAY_BETWEEN_ENEMIES
EQU $01 P_START_DELAY_OF_PATTERN
EQU $02 P_PATTERN_PATTERN_START
EQU $04 SingleAttackPatternLine
EQU $00 SINGLE_ATTACK_PATTERN_NEXT_NO
EQU $00 SINGLE_ATTACK_SPEED
EQU $01 SINGLE_ATTACK_PATTERN_TYPE
EQU $02 SINGLE_ATTACK_PATTERN_POINTER
COMMENT_LABEL $02 when pointer = 0, than end of list
EQU $08 EnemyDefinition
EQU $00 ANGLE8_TABLE
COMMENT_LABEL $00 if zero -> BigBug
EQU $02 BUG_ENEMY_HP
EQU $02 ENEMY_STRENGTH
COMMENT_LABEL $02 see above
EQU $03 WAIT_ANIM_TABLE
EQU $05 ENEMY_DEBRIS_SPEED
EQU $05 ENEMY_BULLET_SPEED
COMMENT_LABEL $05 bug only (for now), lower nibble speed, uppernibble
EQU $06 ADDITIONAL_TYPE_INFO
EQU $07 CLONE_INFO
COMMENT_LABEL $07 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
EQU $0E RocketEmitter
EQU $00 FW_Y_POS
EQU $02 FW_BEHAVIOUR
EQU $04 FW_NEXT_OBJECT
EQU $06 FW_X_POS
EQU $08 FW_Y_VEL
EQU $0A FW_X_VEL
EQU $0C FW_AGE
EQU $0D FW_ZERO_RGAL
EQU $0E VelocityParticle
EQU $0D FW_ZERO
EQU -$04 u_offset1
COMMENT_LABEL -$04 behaviour offset is determined by next structure element
EQU $08 HighScoreEntry
EQU $00 HS_NAME
EQU $03 HS_BCD_SCORE
EQU $07 HS_LEVEL
EQU $0E FlameParameter
EQU $00 POS
EQU $02 Y_UPDATE
EQU $03 Y_OFFSET
EQU $04 X_OFFSET
EQU $05 X_WAITER
EQU $06 Y_WAITER
EQU $07 X_RESET
EQU $08 Y_RESET
EQU $09 SCALE_POS
EQU $0A FLAME_INT_MAX
EQU $0B COUNTER
EQU $0C VALUES
EQU $03 XWAIT
EQU $04 YWAIT
LABEL $C80E diamondCount
LABEL $C80F isBugShot
LABEL $C810 nextBugEnemyCount
LABEL $C811 lastJoyMove
LABEL $C811 enemyMINY
LABEL $C812 bonusHitCount
LABEL $C813 bonusSpawnCount
LABEL $C814 lastCollectedBonus
LABEL $C815 globalPatternWobble
LABEL $C816 globalPatternWobbleDirection
LABEL $C817 levelBulletBorder
LABEL $C818 levelBonusBorder
LABEL $C819 attackPatternCount
LABEL $C81A attackPatternInitiated
LABEL $C81B Vec_Joy_1_X_
LABEL $C81C Vec_Joy_1_Y_
LABEL $C81D sfx_pointer_1
LABEL $C81F sfx_pointer_2
LABEL $C821 t2_rest
LABEL $C822 tacScan
LABEL $C823 levelCount
LABEL $C824 random_seed2
LABEL $C825 _Vec_Loop_Count
LABEL $C827 introWaveEnemyCount
LABEL $C828 suckerAddress
LABEL $C82C levelTimer
LABEL $C82E tmp_div1
LABEL $C82E bonusSpawnPosition
LABEL $C830 STARS_DONE_A
LABEL $C832 ENEMY_DONE_A
LABEL $C834 SHOTS_DONE_A
LABEL $C836 BONUS_DONE_A
LABEL $C838 PLAYERSHOTS_DONE_A
LABEL $C82E STARS_DONE
LABEL $C830 ENEMY_DONE
LABEL $C832 SHOTS_DONE
LABEL $C836 PLAYERSHOTS_DONE
LABEL $C834 BONUS_DONE
LABEL $C830 FW_PARTICLES_DONE
LABEL $C832 FW_PARTICLES_DONE_A
LABEL $C83A OBJECT_LIST_COMPARE_ADDRESS
LABEL $C83A warpSpeed
LABEL $C83A bonusAnimCount
LABEL $C83A lightningOn
LABEL $C83B shotYRadius
LABEL $C83C levelEnemyCountUID
LABEL $C83D _Vec_Rfrsh
LABEL $C84D allowBossShots
LABEL $C84D introWaveEnemyDelayCount
LABEL $C84E superDiamondAnimCounter
LABEL $C84E levelEnemyCount
LABEL $C84F superDiamondPosition
LABEL $C84F introWaveCurrentPattern
LABEL $C851 superDiamondAnimCounter2
LABEL $C851 introWaveCurrentPatternCount
LABEL $C852 scoopEnemy1
LABEL $C854 current_button_state
LABEL $C855 last_button_state
LABEL $C856 playerAnim
LABEL $C857 playAnimDelayCounter
LABEL $C858 player_score
LABEL $C858 player_score_6
LABEL $C859 player_score_5
LABEL $C85A player_score_4
LABEL $C85B player_score_3
LABEL $C85C player_score_2
LABEL $C85D player_score_1
LABEL $C85E player_score_0
LABEL $C85F player_score_80
LABEL $C860 scoreExtraBuffer
LABEL $C862 playerCashW
LABEL $0080 BITFIELD_ARMOR
EQU $40 BITFIELD_SHIELD
EQU $20 BITFIELD_SCOOP
LABEL $00DF BITFIELD_NOT_SCOOP
LABEL $C864 playerBonusActive
LABEL $C865 colorCycleCount
LABEL $C866 animDelayCounter
LABEL $C867 patternDelayCounter
LABEL $C868 scoopEnemy2
LABEL $C86A bugsSpawnedInLevel
LABEL $C86B random_seed
LABEL $C86C bonusCollect
LABEL $C86D bulletSpawnAt
LABEL $C86F sfx_pointer_3
LABEL $C871 playerShotCountW
LABEL $C873 playerHitCountW
LABEL $C875 playerXpos
LABEL $C877 playerSpeed
LABEL $C879 playerMaxShotInAir
LABEL $C87A playerNumberOfBulletsPerShot
LABEL $C87B playerShotSpeed
LABEL $C87D playerWasHitFor
LABEL $C87E selected
LABEL $C87E tmp1
LABEL $C87F calibButton
LABEL $C87F shotSpeed
LABEL $C880 warpLen
LABEL $C880 explosionSound
LABEL $C881 starlist_empty_head
LABEL $C883 starlist_objects_head
LABEL $C885 starCount
LABEL $C886 enemylist_empty_head
LABEL $C888 enemylist_objects_head
LABEL $C88A enemyCount
LABEL $C886 fwlist_empty_head
LABEL $C888 fwlist_objects_head
LABEL $C88B playershotlist_empty_head
LABEL $C88D playershotlist_objects_head
LABEL $C88F playerShotCount
LABEL $C890 shotlist_empty_head
LABEL $C892 shotlist_objects_head
LABEL $C894 shotCount
LABEL $C895 bonuslist_empty_head
LABEL $C897 bonuslist_objects_head
LABEL $C899 bonusCount
LABEL $C8B1 tmp_debug
LABEL $C89A joystickDir
LABEL $C89A in_moveFlag
LABEL $C89B tmp2_tmp_unique
EQU $01 FLASH_AVAILABLE_BIT
EQU $02 SAVEGAME_AVAILABLE_BIT
EQU $04 SAVEGAME_IS_ACTIVE_BIT
LABEL $C89C flashAvailable
LABEL $0080 BIT_FLAG_PLAY_YM
EQU $40 BIT_FLAG_PLAY_FORCE_SFX
COMMENT_LABEL $40 -> three voices sfx (e.g. secret chime)
EQU $01 BIT_FLAG_AUTOFIRE
EQU $0E BIT_FLAG_IS_BOSSFIGHT_ANY
EQU $10 BIT_BIG_ENEMY_IN_PLAY
EQU $20 BIT_FLAG_CASH_ROLLOVER
LABEL $C89D playSoundFlags
LABEL $C89D diverseFlags
EQU $01 SHOP_TRIPPLE_WEAPON
EQU $02 SHOP_QUAD_WEAPON
EQU $04 SHOP_SUPER_WEAPON
EQU $08 SHOP_LASER_WEAPON
EQU $10 SHOP_LOCK
EQU $20 SHOP_SUPER_BOMB_L
EQU $40 SHOP_RANK
LABEL $0080 SHOP_IMMUN1
LABEL $C89E Ram_Options_Start
LABEL $C89E calibrationValue6
LABEL $C89F calibrationValue7
LABEL $C8A0 calibrationValue16
LABEL $C8A1 calibrationValueString
LABEL $C8A2 calibrationValue50
LABEL $C8A3 gameScale
LABEL $C8A4 shopAllowFlags
EQU $02 BIT_RAN_CALIBRATION
EQU $01 BIT_BUZZ_NOBUZZ
LABEL $0080 BIT_TITLE_SEEN
EQU $20 BIT_VOX_FULL
COMMENT_LABEL $20 if zero -> vox full
LABEL $C8A5 additionalFlags
LABEL $C8A6 achievements
LABEL $C8AC secretFlags
LABEL $C8AD maxLevelReached
LABEL $C8AE Ram_Options_End
EQU $01 IMUNITY_1_BIT
EQU $02 IMUNITY_2_BIT
EQU $01 IMUNITY_1
EQU $02 IMUNITY_2
EQU $03 IMUNITY_BITS
LABEL $00FC MULTIPLYER_BITS
COMMENT_LABEL $00FC Max 63
EQU $03 NON_MULTIPLYER_BITS
EQU $03 MULTIPLY_0_AND
EQU $07 MULTIPLY_1_AND
EQU $0B MULTIPLY_2_AND
EQU $17 MULTIPLY_5_AND
EQU $04 MULTIPLY_1_OR
EQU $08 MULTIPLY_2_OR
EQU $14 MULTIPLY_5_OR
EQU $1C MULTIPLY_5_ALL_AND
LABEL $C8AE multiplyer
LABEL $C8AE downgradeImmunity
LABEL $C8AF currentFlashROMStart
EQU $10 OptionStruct
EQU $00 O_CALIB_SWARM
EQU $01 O_CALIB_VECTOR
EQU $02 O_CALIB_MH
EQU $03 O_CALIB_TEXT
EQU $04 O_CALIB_BOSS
EQU $05 O_GAMESCALE
EQU $06 O_SHOP_ALLOW
EQU $07 O_ADDITIONAL_FLAGS
EQU $08 O_ACHIEVEMENTS
EQU $0E O_SECRETS
EQU $0F O_MAX_LEVEL
EQU $50 FlashBlock
EQU $00 OPTION_BLOCK
COMMENT_LABEL $00 OptionStruct
EQU $10 HIGHSCORE_BLOCK
COMMENT_LABEL $10 or more
EQU $30 HARDCORE_BLOCK
COMMENT_LABEL $30 or more
LABEL $C8B1 tmp16_tmp
LABEL $C8B3 tmp16_tmp2
COMMENT_LABEL $C8B3 end of game count only
LABEL $C8B7 bonusDisplay
LABEL $C8B3 playerLivesString
COMMENT_LABEL $C8B3 ds 4
LABEL $C8B5 playerLives
LABEL $C8B8 messageState
LABEL $C8B9 messageTimer
LABEL $C8BA messagePointer
LABEL $C8BC playerBonusCounter
EQU $03 PlayerExplosion
EQU $00 EX_MAX_SIZE
EQU $01 EX_START_SIZE
EQU $02 EX_STEP
EQU $05 BossExplosion
EQU $03 EXPLOSION_POS
LABEL $C8BE playerExplosionSpace
LABEL $C8BE StringOutputBuffer
LABEL $C8BE StringOutputBuffer_6
LABEL $C8BF StringOutputBuffer_5
LABEL $C8C0 levelConversionString
LABEL $C8C0 laserTag
LABEL $C8C0 StringOutputBuffer_4
LABEL $C8C1 laserTmp
LABEL $C8C1 _tmpY
LABEL $C8C1 tmp1_tmp
LABEL $C8C1 StringOutputBuffer_3
LABEL $C8C2 _tmpX
LABEL $C8C2 tmp2_tmp
LABEL $C8C2 StringOutputBuffer_2
LABEL $C8C3 tmp3_tmp
LABEL $C8C3 vox_tmp1
LABEL $C8C3 StringOutputBuffer_1
LABEL $C8C4 tmp_count
LABEL $C8C4 tmp_isSupershot
LABEL $C8C4 tmp4_tmp
LABEL $C8C4 vox_tmp2
LABEL $C8C4 StringOutputBuffer_0
LABEL $C8C5 laserTmp2
LABEL $C8C5 vox_tmp3
LABEL $C8C5 StringOutputBuffer_80
EQU $07 TestShot
EQU $00 SHOT_ORG
EQU $02 T_YPOS
EQU $03 T_XPOS0_MINUS_1_RADIUS
EQU $04 T_XPOS0_PLUS_1_RADIUS
EQU $05 T_XPOS0_MINUS_3_RADIUS
EQU $06 T_XPOS0_PLUS_3_RADIUS
LABEL $C8C6 testShot
LABEL $C8CD test2Shot
LABEL $C8D4 Vec_Str_Ptr
LABEL $C8D4 tmp4
LABEL $C8D4 stringScale
LABEL $C8D4 backJump
LABEL $C8D6 inversePatttern
LABEL $C8D7 patternEnemyCount
LABEL $C8D7 tmp8_tmp
COMMENT_LABEL $C8D7 tmp 8 is only used in failure behaviour - no collision with pattern
LABEL $C8DB laserLowestYLeft
LABEL $C8DA laserLowestY
LABEL $C8D8 laserEnemyPointer
LABEL $C8DC laserEnemyPointerLeft
LABEL $C8D9 currentLetterDirection
LABEL $C8D8 currentLetterPos
LABEL $C8DA selectedOption
LABEL $C8DB currentPrintedOption
LABEL $C8DC optionDir
LABEL $C8DE laserLowestYRight
LABEL $C8DF laserEnemyPointerRight
LABEL $C8E1 difficulty
LABEL $C8E2 levelMaxAttackPatterns
LABEL $C8E3 levelMaxEnemyShots
LABEL $C8E4 bulletDamage
LABEL $C8E5 shiftBulletDamage
LABEL $C8E6 shiftDoubleBulletDamage
LABEL $C8E7 bonusTimerLength
LABEL $C8E9 currentLevelPointer
LABEL $C8EB multTimer
LABEL $0080 GAMEPHASE_INTRO
COMMENT_LABEL $0080 level attack wave phase
EQU $40 ENEMY_DESTRUCTED_FLAG
LABEL $C8ED lockPurchased
LABEL $C8EE smartBombsAvailable
LABEL $C8EF saucerCount
LABEL $C8EF bossIntroStage
LABEL $C8F0 levelMaxEnemy
LABEL $C8F1 rankDrop
LABEL $C8F2 rankCollected
LABEL $C8F3 officerRankTmp
LABEL $C8F4 doWarpFailure
LABEL $C8F5 bulletDamageAdjust
EQU $01 SECRET_3_SPEED_SUCKERS
EQU $02 SECRET_RATE_SUCKERS
EQU $04 SECRET_3_BULLET_SUCKERS
EQU $08 SECRET_3_RATE_SUCKERS
EQU $10 SECRET_ORDERED_EXTRA
EQU $20 SECRET_3_FIFTY
EQU $40 SECRET_ORDERED_RANKS
LABEL $0080 BIGGEST_LOSS_FLAG
LABEL $C8F6 inGameSecrets
LABEL $C8F7 perfectBonus
LABEL $C8F8 secretBonusCounter
LABEL $C8F9 levelsPlayed
LABEL $C8FB drunkTimer
LABEL $C8FC vox_addr
LABEL $C8FE end_static_ram
LABEL $CBFD chosenStartLevel
LABEL $CBFE isDemoMode
LABEL $CBFF realEnemyCount
EQU $13 MAX_SHOT_OBJECTS_BOSS
COMMENT_LABEL $13 shots are extended over stars and bonus during boss fight!
EQU $0A MAX_SHOT_OBJECTS
LABEL $C8FE shotobject_list
LABEL $C976 shotobject_list_end
LABEL $C9E2 shotobject_list_end19
LABEL $C8FE shotobject1
LABEL $C90A shotobject2
LABEL $C916 shotobject3
LABEL $C922 shotobject4
LABEL $C92E shotobject5
LABEL $C93A shotobject6
LABEL $C946 shotobject7
LABEL $C952 shotobject8
LABEL $C95E shotobject9
LABEL $C96A shotobject10
EQU $06 MAX_BONUS_OBJECTS
LABEL $C976 bonusobject_list
LABEL $C9A6 bonusobject_list_end
LABEL $C976 bonusobject1
LABEL $C97E bonusobject2
LABEL $C986 bonusobject3
LABEL $C98E bonusobject4
LABEL $C996 bonusobject5
LABEL $C99E bonusobject6
EQU $13 MAX_STAR_OBJECTS_WARP
COMMENT_LABEL $13 20 ; stars are expanded in warp into the enemy region
EQU $05 MAX_STAR_OBJECTS
LABEL $C9A6 starobject_list
LABEL $C9E7 starobject_list_end
LABEL $C9A6 starobject1
LABEL $C9B3 starobject2
LABEL $C9C0 starobject3
LABEL $C9CD starobject4
LABEL $C9DA starobject5
EQU $0F MAX_ENEMY_OBJECTS_BOSS3
EQU $05 MAX_ENEMY_OBJECTS_BOSS4
EQU $14 MAX_ENEMY_OBJECTS
LABEL $C9E7 enemyobject_list
LABEL $CB8B enemyobject_list_end
LABEL $C9E7 enemyobject1
LABEL $C9FC enemyobject2
LABEL $CA11 enemyobject3
LABEL $CA26 enemyobject4
LABEL $CA3B enemyobject5
LABEL $CA50 enemyobject6
LABEL $CA65 enemyobject7
LABEL $CA7A enemyobject8
LABEL $CA8F enemyobject9
LABEL $CAA4 enemyobjecta
LABEL $CAB9 enemyobjectb
LABEL $CACE enemyobjectc
LABEL $CAE3 enemyobjectd
LABEL $CAF8 enemyobjecte
LABEL $CB0D enemyobjectf
LABEL $CB22 enemyobjectg
LABEL $CB37 enemyobjecth
LABEL $CB4C enemyobjecti
LABEL $CB61 enemyobjectj
LABEL $CB76 enemyobjectk
EQU $0A MAX_PLAYERSHOT_OBJECTS
LABEL $CB8B playershotobject_list
LABEL $CBEF playershotobject_list_end
LABEL $CB8B playerShotobject1
LABEL $CB95 playerShotobject2
LABEL $CB9F playerShotobject3
LABEL $CBA9 playerShotobject4
LABEL $CBB3 playerShotobject5
LABEL $CBBD playerShotobject6
LABEL $CBC7 playerShotobject7
LABEL $CBD1 playerShotobject8
LABEL $CBDB playerShotobject9
LABEL $CBE5 playerShotobjecta
EQU $1E FIREWOKRS_PARTICLE_COUNT
LABEL $C9E7 fwobject_list
LABEL $CB8B fwobject_list_end
EQU $1E MAX_SWARM_OBJECTS
COMMENT_LABEL $1E 7
LABEL $C976 swarmobject_list
LABEL $CCB7 swarmobject_list_end
LABEL $CBBD candle1
LABEL $CBB3 ccounter
LABEL $CBB4 cDisplayCounter
LABEL $CBB5 baseLight
LABEL $CBB6 waiterVal
LABEL $CBB7 BIGGESTX
COMMENT_LABEL $CBB7 = 10
LABEL $CBB8 LOWESTX
COMMENT_LABEL $CBB8 = -10
LABEL $CBB9 BIGGESTY
COMMENT_LABEL $CBB9 = 10
LABEL $CBBA LOWESTY
COMMENT_LABEL $CBBA = 0 ;-5 -10
LABEL $CBBB phase
LABEL $CBBD smoke
LABEL $C83F PLY_PSGREGISTERSARRAY
COMMENT_LABEL $C83F #isfunction
LABEL $C83F PLY_PSGREG0
LABEL $C840 PLY_PSGREG1
LABEL $C841 PLY_PSGREG2
LABEL $C842 PLY_PSGREG3
LABEL $C843 PLY_PSGREG4
LABEL $C844 PLY_PSGREG5
LABEL $C845 PLY_PSGREG6
LABEL $C847 PLY_PSGREG8
LABEL $C848 PLY_PSGREG9
LABEL $C849 PLY_PSGREG10
LABEL $C84A PLY_PSGREG11
LABEL $C84B PLY_PSGREG12
LABEL $C84D PLY_PSGREGISTERSARRAY_END
LABEL $C8FE hs_place_edit
LABEL $C8FF hs_blink_count
LABEL $C900 hs_blink_state
LABEL $C901 hs_place_got
LABEL $C902 tmp_count2
LABEL $C903 last_joy_x
LABEL $C904 last_joy_y
LABEL $C905 buttonWait
EQU $0A MAX_ENEMY_OBJECTS_TITLE
LABEL $C906 enemyobject_list_title
LABEL $C9D8 enemyobject_list_title_end
LABEL $C9D8 ramfunction
LABEL $C9D8 arkosPlayerMemStart
LABEL $C9D8 songLoop
LABEL $C9D9 tmp_track_param
LABEL $C9DA tmp_track_instrument
LABEL $C9DB tmp_instrument_second_byte
LABEL $C9DC PLY_HEIGHT
LABEL $C9DD PLY_SPEED
LABEL $C9DE PLY_SPEEDCPT
LABEL $C9DF PLY_HEIGHTCPT
LABEL $C9E0 PLY_TRACK_INSTRUMENTSTABLEPT
LABEL $C9E2 PLY_LINKER_PT
LABEL $C9E4 PLY_PSGREG13_RETRIG
LABEL $C9E5 PLY_SAVESPECIALTRACK
LABEL $C9E7 PLY_SPECIALTRACK_PT
LABEL $C9E9 PLY_SPECIALTRACK_WAITCOUNTER
EQU $11 ArkosChannel
EQU $00 PLY_TRANSPOSITION
EQU $01 PLY_TRACK_SAVEPTINSTRUMENT
EQU $03 PLY_TRACK_INSTRUMENT
EQU $05 PLY_TRACK_INSTRUMENTSPEED
EQU $06 PLY_TRACK_INSTRUMENTSPEEDCPT
EQU $07 PLY_TRACK_PT
EQU $09 PLY_TRACK_WAITCOUNTER
EQU $0A PLY_TRACK_NOTE
EQU $0B PLY_TRACK_VOLUME
EQU $0C PLY_TRACK_PITCH
EQU $0E PLY_TRACK_PITCHADD
EQU $10 PLY_TRACK_REG_7
LABEL $C9EA Channel1Data
LABEL $C9FB Channel2Data
LABEL $CA0C Channel3Data
LABEL $CA1D ChannelDataEnd
LABEL $CA1D PLY_PSGREG13
LABEL $CA1E PLY_VOL_REG
LABEL $CA20 PLY_FREQ_REG
LABEL $CA22 songOver
LABEL $CA23 arkosPlayerMemEnd
EQU $04 CompareTile
EQU $02 TILE_POINTER
COMMENT_LABEL $02 pointer to the actual MAP tile in the map (the Macro)
LABEL $CA23 compareUp
LABEL $CA27 compareDown
LABEL $CA2B highScorePosition
LABEL $CA2B compareLeftBottom
LABEL $CA2F compareRightBottom
LABEL $CA33 compareLeftTop
LABEL $CA37 compareRightTop
LABEL $CA3B intensityTile
LABEL $CA3C yCoarse
LABEL $CA3D xCoarse
LABEL $CA3E xCoarseCheck
LABEL $CA3F yFine
LABEL $CA40 xFine
LABEL $CA41 currentLevel
LABEL $CA43 levelLineStart
LABEL $CA45 levelYSize
LABEL $CA46 levelXSize
LABEL $CA47 displayPosY
LABEL $CA48 displayPosX
LABEL $CA49 skipDrawFlag
EQU $04 MAXTILES_COLLECTABLE
LABEL $CA4A tilesCollected
LABEL $CA4E speedy
LABEL $CA4F speedx
LABEL $CA50 anay
LABEL $CA51 anax
LABEL $CA52 counter0
LABEL $CA53 counter1
LABEL $CA54 counter2
LABEL $CA55 counter3
LABEL $CA56 counter4
LABEL $CA57 counter5
LABEL $CA58 counter6
LABEL $CA59 counter7
LABEL $CA5A animationDelay
LABEL $CA5B nextDisplayPos
LABEL $CA5B nextDisplayPosY
LABEL $CA5C nextDisplayPosX
LABEL $CA5D endVerticalcompare
LABEL $CA5E divide_tmp
LABEL $CA60 v0
LABEL $CA60 y0
LABEL $CA61 x0
LABEL $CA62 v1
LABEL $CA62 y1
LABEL $CA63 x1
LABEL $CA64 v2
LABEL $CA64 y2
LABEL $CA65 x2
EQU $06 CLIP_VECTORS
EQU $00 _pat1
EQU $01 _y1
EQU $02 _x1
EQU $03 _pat2
EQU $04 _y2
EQU $05 _x2
LABEL $CA66 scrollReset
LABEL $CA67 neggi
LABEL $CA68 clip_test
LABEL $CA6A clip_line_counter
LABEL $CA6B clip_counter
LABEL $CA6D clip_pattern
LABEL $CA6F firstVector
LABEL $CA70 BORDER
LABEL $CA72 is_first_letter
LABEL $CA73 do_another_letter
LABEL $CA74 topclip
LABEL $CA74 bottomclip
LABEL $CA76 rightclip
LABEL $CA76 leftclip
LABEL $CA78 current_type
LABEL $CA79 verticalBuffer
LABEL $CA7A horizontalLeftBuffer
LABEL $CA7B horizontalRightBuffer
LABEL $CA7C clipped_vector_vertical_type
LABEL $CA7D clipped_vector_vertical
LABEL $CAD7 clipped_vector_left
LABEL $CB31 clipped_vector_final
LABEL $CB31 clipped_vector_right
LABEL $CB8B xFineObject
LABEL $CB8C yFineObject
LABEL $CB8D clip_end
EQU $7F VERTICAL_MAX
EQU -$7F VERTICAL_MIN
EQU $7F HORIZONTAL_MAX
EQU -$7F HORIZONTAL_MIN
EQU $7B SCALE_MOVE
COMMENT_LABEL $7B 93
EQU $10 SCALE_VLIST
COMMENT_LABEL $10 16; 11
EQU $0C FULL_TILES_HORIZONTAL
EQU $0C FULL_TILES_VERTICAL
LABEL $00FE GRID_HEIGHT
LABEL $00FE GRID_WIDTH
EQU $0E ALL_TILES_HORIZONTAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $0E ALL_TILES_VERTICAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $12 TILE_WIDTH
EQU $12 TILE_HEIGHT
EQU $07 STEP_HORIZONTAL_TILE_IN_PIXEL
EQU $07 STEP_VERTICAL_TILE_IN_PIXEL
EQU $6C START_POS_VERTICAL
EQU -$6C START_POS_HORIZONTAL
LABEL $6C94 START_POS
EQU $05 FULL_TILES_VERTICAL_END_CHANGED
COMMENT_LABEL $05 FULL_TILES_VERTICAL;
EQU $0C FULL_TILES_VERTICAL_END_CHANGED_BIG
COMMENT_LABEL $0C FULL_TILES_VERTICAL;
EQU -$6C END_POS_VERTICAL_BIG
EQU $12 END_POS_VERTICAL
LABEL $0132 SECOND_END_POS_VERTICAL_BIG
EQU $6C END_POS_HORIZONTAL
EQU $5A SECOND_END_POS_HORIZONTAL
EQU $00 END_POS_VERTICAL_TEST
EQU $7E END_POS_HORIZONTAL_TEST
EQU $12 FINE_MAX_VERTICAL
EQU $12 FINE_MAX_HORIZONTAL
EQU $00 TYPE_SIMPLE
COMMENT_LABEL $00 can do simple clipping
EQU $01 TYPE_EXPONENTIAL
COMMENT_LABEL $01 no easy clipping
EQU -$01 TYPE_EXACT
COMMENT_LABEL -$01 can do simple clipping
EQU $02 TYPE_CONTINUE_RESET
COMMENT_LABEL $02 if = continue is possible after this tile, position is = to next start point
EQU $04 TYPE_CONTINUE_HERE
COMMENT_LABEL $04 if = continue is possible, leaving at some arbitrary point
EQU $08 TYPE_DOUBLE_SCALE
COMMENT_LABEL $08 if = continue is possible, leaving at some arbitrary point
EQU $10 TYPE_QUAD_SCALE
COMMENT_LABEL $10 if = continue is possible, leaving at some arbitrary point
LABEL $CB8D tiler_END_POS_VERTICAL
LABEL $CB8E mh_playerAnimList
LABEL $CB90 mh_playerAnimCounter
LABEL $CB91 mh_playerAnimDelayCounter
LABEL $CB92 mh_playerTouchesGround
LABEL $CB93 mh_playerXSpeed
LABEL $CB94 mh_playerYSpeed
LABEL $CB95 mh_playerWantDir
LABEL $CB96 mh_lastPlayerWantDir
LABEL $CB97 mh_currentPossibleDirections
EQU $01 PLAYER_WANTS_RIGHT
EQU $02 PLAYER_WANTS_LEFT
EQU $04 PLAYER_WANTS_DOWN
EQU $08 PLAYER_WANTS_UP
EQU $01 PLAYER_CAN_RIGHT
EQU $02 PLAYER_CAN_LEFT
EQU $04 PLAYER_CAN_DOWN
EQU $08 PLAYER_CAN_UP
EQU $01 COL_RIGHT
EQU $02 COL_LEFT
EQU $04 COL_DOWN
EQU $08 COL_UP
EQU $10 COL_COLLECT
COMMENT_LABEL $10 tile can be collected!
EQU $0E TileMOB
EQU $00 T_SCREEN_Y
EQU $01 T_SCREEN_X
EQU $02 T_BEHAVIOUR
COMMENT_LABEL $02 PC
EQU $04 T_NEXT_TILE_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 T_YCOARSE
EQU $07 T_XCOARSE
EQU $08 T_YFINE
EQU $09 T_XFINE
EQU $0A T_ANIM
EQU $0B T_ANIM_COUNTER
EQU $0C T_DEFINITION_POINTER
LABEL $C830 TILE_OBJECT_DONE_A
LABEL $C82E TILE_OBJECT
EQU $0A COUNT_TILE_MOBS
LABEL $C906 tileobject_list
LABEL $C992 tileobject_list_end
LABEL $C881 tileobject_empty_head
LABEL $C883 tileobject_objects_head
LABEL $C885 tileobjectCount
LABEL $CA7D highScoreBlock
LABEL $CA7D Ram_HighScore_Start
LABEL $CA7D highScoreTable
LABEL $CA9D Ram_HighScore_End
LABEL $CA9D Ram_HardcoreScore_Start
LABEL $CA9D HardcoreScoreTable
LABEL $CABD Ram_HardcoreScore_End
LABEL $CABD highScoreTableEnd
LABEL $CABD tmpHiStart
LABEL $CABF tmpHiMode
LABEL $CAC0 tmpButtonMode
LABEL $CABD flashUserRAM
EQU $10 MAX_DODGE_OBJECTS
COMMENT_LABEL $10 must be smaller ENEMY OBJECT
LABEL $C9CD dodgeObject_list
LABEL $CB1D dodgeObject_list_end
LABEL $CB1D oldString
LABEL $CB20 bonusCollectSave
LABEL $CB21 levelCountSave
LABEL $CB22 dodgerGotKilled
LABEL $CB23 isDiamondRun
LABEL $CB24 textIntensity
LABEL $CB24 dodgerAngle1
LABEL $CB25 textFadeDirection
LABEL $CB25 dodgerAngle2
LABEL $CB26 landingbayPos
LABEL $CB26 fighterPos
LABEL $CB26 textPointer
LABEL $CB26 dodgerAngle3
LABEL $CB27 dodgerAngle4
LABEL $CB28 textDisplayDone
LABEL $CB28 dodgerAccel
LABEL $CB27 dodgeResult
LABEL $CB2A dodgerProgress
LABEL $CB2C dodgerFinishedIndicator
LABEL $CB2D rotateBuf
LABEL $CB2D landingFighterXSpeed16
LABEL $CB2D ROT_MINE1
COMMENT_LABEL $CB2D 'DUMB' MINE
LABEL $CB43 ROT_MINE2
COMMENT_LABEL $CB43 'MAGNETIC' MINE
LABEL $CB5F ROT_MINE3
COMMENT_LABEL $CB5F 'DUMB FIRE-BALL' MINE
LABEL $CB7E ROT_MINE4
COMMENT_LABEL $CB7E 'MAGNETIC FIRE-BALL' MINE
LABEL $CB63 bossfightStart
COMMENT_LABEL $CB63 enemyobject_list+ 10 *MAX_ENEMY_OBJECTS
LABEL $CB63 bossPosY
LABEL $CB64 bossPosX
LABEL $CB63 introBossX
LABEL $CB64 introPlayerX
LABEL $CB65 bossMoveDir
LABEL $CB66 bossTimer
LABEL $CB68 explosionCount
LABEL $CB68 bossHP
LABEL $CB6A bossExtroPointer
LABEL $CB6A bossWasHit
LABEL $CB6B tmp3
LABEL $CB6C bossfightStart_second
LABEL $C9A6 bossExplosionSpace1
COMMENT_LABEL $C9A6 ??? bossMoveDir
LABEL $C9AB bossExplosionSpace2
LABEL $C9B0 bossExplosionSpace3
LABEL $CB61 boss3Xpos16
LABEL $CB6C leftSmallGunAnimDelayCounter
LABEL $CB6D eyeLeftAnimDelayCounter
LABEL $CB6E eyeLeftAnimCounter
LABEL $CB6F leftSmallGunAnimCounter
LABEL $CB70 leftSmallGunAnimStart
LABEL $CB71 rightSmallGunAnimDelayCounter
LABEL $CB72 rightSmallGunAnimCounter
LABEL $CB73 rightSmallGunAnimStart
LABEL $CB74 leftBigGunAnimDelayCounter
LABEL $CB75 leftBigGunAnimCounter
LABEL $CB76 leftBigGunAnimStart
LABEL $CB77 rightBigGunAnimDelayCounter
LABEL $CB78 rightBigGunAnimCounter
LABEL $CB79 rightBigGunAnimStart
LABEL $CB7A calibrationStage
LABEL $CB6C swarmCounter
LABEL $CB6D intensityBoss2Intro
LABEL $CB6E antennaDelayCounter
LABEL $CB6F antennaAnimCounter
LABEL $CB70 boss2Scale
LABEL $CB71 boss2Direction
LABEL $CB72 maxSwarmAttacker
LABEL $CB6C boss3MouthAnimCounter
LABEL $CB6D boss3AttachmentScale
LABEL $CB6E boss3LetterCannonPointer
LABEL $CB70 boss3LetterCannonWait
LABEL $CB71 boss3ShieldCount
LABEL $CB72 boss3HPCompare
LABEL $CB74 boss3MovementPointer
LABEL $CB76 boss3YposNow16
LABEL $CB78 boss3XposNow16
LABEL $CB5F boss3Ypos16
LABEL $CB61 boss1Scale
LABEL $CAB9 boss4WeaponAnimCounter
LABEL $CABA boss4WeaponActive
LABEL $CABB boss4ShotStage
LABEL $CABC boss4ShotStageDelayCounter
LABEL $CABD boss4ShotLineCounter
LABEL $CABE boss4LaserStartTmp
LABEL $CAC0 boss4LaserTargetTmp
LABEL $CAC2 maxYSum
LABEL $CAC3 lukeX
LABEL $CAC4 displayExplosions
EQU $03 BOSS4_LASER_COUNT
EQU $04 Boss4LaserBeam
EQU $00 boss4LaserTarget
EQU $02 boss4shotMax
EQU $03 boss4shotMin
EQU $04 Boss4GroundExplosion
EQU $00 ExPosy
EQU $01 ExPosx
EQU $02 ExSizeCounter
EQU $03 ExSize
LABEL $CAC5 signFlag
LABEL $CAC6 b4_divide_tmp
LABEL $CAC7 b4_tmp1
LABEL $CAC9 b4_tmp2
LABEL $CACA boss4laserData
LABEL $CAD6 boss4explosionData
EQU $1D version
EQU $2E zeroPointer
LABEL $0294 main
EQU $32 jmpBankIRQ0T1
EQU $49 jsrBank1_fromBank2_T1
EQU $76 jsrBank0_fromBank3_T1
LABEL $009E jsrBank0_fromBank3_Shift
LABEL $00C9 jsrBank0_fromBank2_T1
LABEL $00E1 jsrBank0_fromBank2_Shift
LABEL $00FC jmpBankIRQ0Shift
LABEL $010E doShiftIRQ
LABEL $0106 jmpBankIRQ1Shift
LABEL $0120 jmpBankIRQ2X
LABEL $0132 jmpBankIRQ3X
LABEL $0147 jsrBank2_fromShift_0
LABEL $0147 jsrBank3_fromShift_1
LABEL $0162 jsrBank1_fromBank3_T1
LABEL $017A jsrBank1_fromBank0_T1
LABEL $018D jsrBank2_fromT1_1
LABEL $01B5 jsrBank2_from1_SHIFT
LABEL $01E0 jsrBank3_from0_SHIFT
LABEL $020B jmpBank2_from1
LABEL $021D jmpBank2_from0
LABEL $021D jmpBank3_from1
LABEL $0227 jsrBank0X
LABEL $0236 jmpBank0X
LABEL $0240 jsrBank1X
LABEL $024F jmpBank1X
LABEL $0255 jsrBank1X_d
LABEL $0269 jmpBackBonusChallenge
LABEL $0270 jmpBack1BonusIngame
LABEL $0277 jmpBack3BonusDying
LABEL $027E doMainBank0
LABEL $0289 doMainBank0_m
EQU $00 DRAW_VLP_BANK
LABEL $0294 queryJoystick
COMMENT_LABEL $0294 #isfunction
LABEL $0294 queryHW48
EQU $08 DIGITAL_JOYTICK_LOOP_MIN
LABEL $029D waitLoopV48
LABEL $02B5 yReadDone48
LABEL $02B8 noymove48
LABEL $02C1 waitLoopH48
LABEL $02D9 xReadDone48
LABEL $02DE noxmove48
LABEL $02DF Wait_Recal_noShift
LABEL $02F0 LF19E_1
LABEL $02FA getButtonState
COMMENT_LABEL $02FA #isfunction
LABEL $0324 noButtonPressed
EQU $07 ZERO_DELAY
COMMENT_LABEL $07 delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $032A draw_synced_list
LABEL $032A draw_synced_list_noshift
COMMENT_LABEL $032A #isfunction
LABEL $0330 sync
LABEL $03A1 drawdone
LABEL $033D zeroLoop
LABEL $035C LF33D5151
LABEL $0364 moveTo
LABEL $037E nextListEntry
LABEL $037A LF33D5353
LABEL $0396 setPatternLoop
LABEL $03A3 drawdone0
LABEL $03A4 draw_synced_list_fromzero__noshift
COMMENT_LABEL $03A4 #isfunction
LABEL $03BD moveTo0
LABEL $03A8 sync0
LABEL $03B5 zeroLoop0
LABEL $03D3 LF33D5555
LABEL $03D7 nextListEntry0
LABEL $03DF drawTo0
LABEL $03F1 setPatternLoop0
LABEL $C856 playerOneOffsetDifference
LABEL $C857 playerOneOffsetCurrent
LABEL $03F9 readyPlayerOne
COMMENT_LABEL $03F9 #isfunction
LABEL $0DC5 ReadyPlayerOneData
LABEL $0438 rpl1Loop
LABEL $0D93 do_ym_sound2
COMMENT_LABEL $0D93 #isfunction
LABEL $050A rpoString
LABEL $0458 nodifinc
LABEL $0464 normalPrint
LABEL $0473 sync_Print_Str_d_fixed_8_offsets
LABEL $0467 contPrint
LABEL $0750 sync_Print_Str_d_fixed_8
LABEL $0540 FONT_START_A_8
COMMENT_LABEL $0540 // space is 1
LABEL $047F next_line_a_8_of
LABEL $0002 ZERO_DELAY_P
COMMENT_LABEL $0002 delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $048B zeroLoop_a_8_of
LABEL $04A5 LF33D5858
LABEL $04C8 LF33D6060
LABEL $04CC Print_Str_a_8_of
EQU $58 PLAYERONESIZE
LABEL $04E6 LF4CB_a8_of
LABEL $04E2 LF4C7_a8_of
LABEL $06EA FONT_END_8
LABEL $0501 LF50A_a8_of
LABEL $0047 FONT_LENGTH_8
LABEL $051C gopoString
LABEL $0526 buttonString
LABEL $0533 showGameOver
COMMENT_LABEL $0533 #isfunction
LABEL $0559 REPLACE_1_2_backFromGameOver0_varFromIRQ1_1
LABEL $055F FontRow1_8
LABEL $05A6 FontRow2_8
LABEL $05ED FontRow3_8
LABEL $0634 FontRow4_8
LABEL $067B FontRow5_8
LABEL $06C2 FontRow6_8
LABEL $0709 FontRow7_8
LABEL $0750 sync_Print_Str_d_8
COMMENT_LABEL $0750 #isfunction
LABEL $075C next_line_a_8
LABEL $0768 zeroLoop_a_8
LABEL $0782 LF33D6363
LABEL $0786 Print_Str_a_8
LABEL $07A0 LF4CB_a8
LABEL $079C LF4C7_a8
LABEL $07BA LF50A_a8
LABEL $07C3 initAchievementValues
COMMENT_LABEL $07C3 #isfunction
LABEL $07D2 notSniperRank3
LABEL $07D9 notSniperRank2
LABEL $07E0 notSniperRank1
LABEL $07F3 notScorerRank5
LABEL $0806 notScorerRank4
LABEL $0819 notScorerRank3
LABEL $082C notScorerRank2
LABEL $083F notScorerRank1
LABEL $084F notCollectorRank5
LABEL $085F notCollectorRank4
LABEL $086F notCollectorRank3
LABEL $087F notCollectorRank2
LABEL $088F notCollectorRank1
LABEL $0899 notGreedy
LABEL $08A3 notFalcon
LABEL $08AF notOfficerRank4
LABEL $08BE notOfficerRank2
LABEL $08CE notOfficerRank1
LABEL $08D8 notSpyRank4
LABEL $08EB notChallengerRank4
LABEL $08FE notChallengerRank3
LABEL $0911 notChallengerRank2
LABEL $0924 notChallengerRank1
LABEL $0925 initLevelInt0
LABEL $0981 calcHitPercentage
LABEL $09B7 divide_by_zero66
LABEL $09AF divide_next66
LABEL $09A1 divide_next166
LABEL $09A9 divide_by_zero166
LABEL $09BA divide_end66
LABEL $09EE divide_by_zero69
LABEL $09E6 divide_next69
LABEL $09D8 divide_next169
LABEL $09E0 divide_by_zero169
LABEL $09F1 divide_end69
LABEL $09F5 getSecretCount
LABEL $09FD noSecret1
LABEL $0A01 noSecret2
LABEL $0A05 noSecret3
LABEL $0A09 noSecret4
LABEL $0A0D noSecret5
LABEL $0A11 noSecret6
LABEL $0A15 noSecret7
LABEL $C88A secretCount
LABEL $0A19 doWheelReward
LABEL $0A1B rewardTable
LABEL $0B01 laserReward
LABEL $0ADF moneyReward
LABEL $0A31 secretReward
COMMENT_LABEL $0A31 reward three sectrets
LABEL $0A5D equipReward
LABEL $0AC1 livesReward
LABEL $0AB6 powerReward
LABEL $0AA8 lockReward
LABEL $0A4F immunReward
LABEL $0ACC scoreReward
LABEL $0A94 timeReward
LABEL $0A89 bombReward
LABEL $0A49 REPLACE_1_2_goBackBandint_varFrom0_1
LABEL $0A57 REPLACE_1_2_goBackBandint_varFrom0_2
LABEL $0A83 REPLACE_1_2_goBackBandint_varFrom0_3
LABEL $0A8E REPLACE_1_2_goBackBandint_varFrom0_41
LABEL $0A9F timeOkoo
LABEL $0AA2 REPLACE_1_2_goBackBandint_varFrom0_43
LABEL $0AB0 REPLACE_1_2_goBackBandint_varFrom0_55
LABEL $0ABB REPLACE_1_2_goBackBandint_varFrom0_6
LABEL $0AC6 REPLACE_1_2_goBackBandint_varFrom0_7
LABEL $0AD3 REPLACE_1_2_addScoreBack11_varFrom1_701
COMMENT_LABEL $0AD3 make sure score is in printable format
LABEL $0AD9 REPLACE_1_2_goBackBandint_varFrom0_8
LABEL $0AF8 noRollOver_170
LABEL $0AFB back70
LABEL $0AFB REPLACE_1_2_goBackBandint_varFrom0_9
LABEL $0B0E REPLACE_1_2_goBackBandint_varFrom0_10
LABEL $0B14 initDemo
COMMENT_LABEL $0B14 #isfunction
LABEL $0B45 noMul71
EQU $00 ENDLESS_DEMO
LABEL $0B67 initGame0
COMMENT_LABEL $0B67 #isfunction
LABEL $0BA0 noImmunDelta
LABEL $0BD1 nonhclives
EQU $00 AUTO_FIRE
LABEL $0C3C noMul72
LABEL $C83F SHADOW_BASE
LABEL $0C55 sfx_endofeffect_1
LABEL $0C66 noay1
LABEL $0C67 sfx_doframe_intern_1
COMMENT_LABEL $0C67 #isfunction
LABEL $0C78 sfx_checktonefreq_1
LABEL $0C81 sfx_checknoisefreq_1
LABEL $0C8A sfx_checkvolume_1
LABEL $0C91 sfx_checktonedisable_1
LABEL $0CA7 sfx_enabletone_1
LABEL $0C98 sfx_disabletone_1
LABEL $0CB6 sfx_enablenoise_1
LABEL $0CA9 sfx_checknoisedisable_1
LABEL $0CAD sfx_disablenoise_1
LABEL $0CBF sfx_endofeffect_2
LABEL $0CD0 noay2
LABEL $0CD1 sfx_doframe_intern_2
COMMENT_LABEL $0CD1 #isfunction
LABEL $0CE2 sfx_checktonefreq_2
LABEL $0CEB sfx_checknoisefreq_2
LABEL $0CF4 sfx_checkvolume_2
LABEL $0CFB sfx_checktonedisable_2
LABEL $0D11 sfx_enabletone_2
LABEL $0D02 sfx_disabletone_2
LABEL $0D20 sfx_enablenoise_2
LABEL $0D13 sfx_checknoisedisable_2
LABEL $0D17 sfx_disablenoise_2
LABEL $0D29 sfx_endofeffect_3
LABEL $0D3A noay3
LABEL $0D3B sfx_doframe_intern_3
COMMENT_LABEL $0D3B #isfunction
LABEL $0D4C sfx_checktonefreq_3
LABEL $0D55 sfx_checknoisefreq_3
LABEL $0D5E sfx_checkvolume_3
LABEL $0D65 sfx_checktonedisable_3
LABEL $0D7B sfx_enabletone_3
LABEL $0D6C sfx_disabletone_3
LABEL $0D8A sfx_enablenoise_3
LABEL $0D7D sfx_checknoisedisable_3
LABEL $0D81 sfx_disablenoise_3
LABEL $0D93 doymsound100
LABEL $0D9B copySoundRegs
LABEL $0DA3 next_reg_dsy
LABEL $0DC1 inc_reg_dsy
LABEL $0DC4 doneSound_2
EQU $01 VECTREX_SAVE_DELAY
EQU $07 VB_SPRITE_SCALE
LABEL $0E61 SMVB_drawSmart
COMMENT_LABEL $0E61 #isfunction
LABEL $0E64 SMVB_setScale
COMMENT_LABEL $0E64 #isfunction
LABEL $0E68 SMVB_continue_yStays_single
COMMENT_LABEL $0E68 #isfunction
LABEL $0E6E SMVB_continue7_single
COMMENT_LABEL $0E6E #isfunction
LABEL $0E79 SMVB_continue6_single
COMMENT_LABEL $0E79 #isfunction
LABEL $0E84 SMVB_continue5_single
COMMENT_LABEL $0E84 #isfunction
LABEL $0E8F SMVB_continue4_single
COMMENT_LABEL $0E8F #isfunction
LABEL $0E9A SMVB_continue3_single
COMMENT_LABEL $0E9A #isfunction
LABEL $0EA5 SMVB_continue2_single
COMMENT_LABEL $0EA5 #isfunction
LABEL $0EB0 SMVB_continue_yd4_single
LABEL $0EBD SMVB_continue_single
COMMENT_LABEL $0EBD #isfunction
LABEL $0EBF SMVB_continue_newY_eq_oldX_single
COMMENT_LABEL $0EBF #isfunction
LABEL $0EC8 SMVB_continue_single_w
COMMENT_LABEL $0EC8 #isfunction
LABEL $0ED5 SMVB_continue_single_sj
COMMENT_LABEL $0ED5 #isfunction
LABEL $0ED7 SMVB_continue_newY_eq_oldX_single_sj
COMMENT_LABEL $0ED7 #isfunction
LABEL $0EE3 SMVB_continue_yEqx_single
COMMENT_LABEL $0EE3 #isfunction
LABEL $0EEE SMVB_continue_tripple
COMMENT_LABEL $0EEE #isfunction
LABEL $0F64 cont2
LABEL $0EF9 SMVB_continue_quadro
COMMENT_LABEL $0EF9 #isfunction
LABEL $0F5C cont3
LABEL $0F04 SMVB_startDraw_quadro
COMMENT_LABEL $0F04 #isfunction
LABEL $0F13 SMVB_startDraw_hex
COMMENT_LABEL $0F13 #isfunction
LABEL $0F4C cont5
LABEL $0F22 SMVB_startDraw_octo
COMMENT_LABEL $0F22 #isfunction
LABEL $0F3C cont7
LABEL $0F31 SMVB_continue_octo
COMMENT_LABEL $0F31 #isfunction
LABEL $0F44 cont6
LABEL $0F54 cont4
LABEL $0F77 SMVB_repeat_same
COMMENT_LABEL $0F77 #isfunction
LABEL $0F6C SMVB_continue_hex
COMMENT_LABEL $0F6C #isfunction
LABEL $0F7D SMVB_startDraw_tripple
COMMENT_LABEL $0F7D #isfunction
LABEL $0F8C SMVB_continue_double
LABEL $0F97 SMVB_startMove_single
COMMENT_LABEL $0F97 #isfunction
LABEL $0FA6 SMVB_startMove_single_sj
COMMENT_LABEL $0FA6 #isfunction
LABEL $0FB7 SMVB_startMove_tripple
COMMENT_LABEL $0FB7 #isfunction
LABEL $0FC6 SMVB_startMove_quadro
COMMENT_LABEL $0FC6 #isfunction
LABEL $0FD5 SMVB_startMove_hex
COMMENT_LABEL $0FD5 #isfunction
LABEL $0FE5 SMVB_startMove_double
COMMENT_LABEL $0FE5 #isfunction
LABEL $101A SM_repeat_same2
COMMENT_LABEL $101A #isfunction
LABEL $0FF4 SMVB_startMove_double_sj
COMMENT_LABEL $0FF4 #isfunction
LABEL $100B SMVB_startDraw_double
COMMENT_LABEL $100B #isfunction
LABEL $1020 SMVB_startMove_yStays_single
COMMENT_LABEL $1020 #isfunction
LABEL $102B SMVB_startMove_yStays_single_sj
LABEL $1037 SMVB_startDraw_yStays_single
COMMENT_LABEL $1037 #isfunction
LABEL $103F SMVB_startDraw_xyStays_single
COMMENT_LABEL $103F #isfunction
LABEL $1045 SMVB_startDraw_yStays_single_sj
COMMENT_LABEL $1045 #isfunction
LABEL $104F SMVB_startDraw_single
COMMENT_LABEL $104F #isfunction
LABEL $105E SMVB_startDraw_single_sj
COMMENT_LABEL $105E #isfunction
LABEL $106F SMVB_startDraw_yEqx_single_sj
COMMENT_LABEL $106F #isfunction
LABEL $1080 SMVB_startDraw_yEqx_single
COMMENT_LABEL $1080 #isfunction
LABEL $108F SMVB_startMove_yEqx_single
COMMENT_LABEL $108F #isfunction
LABEL $109D SMVB_startMove_yEqx_single_sj
COMMENT_LABEL $109D #isfunction
LABEL $10AD SMVB_startMove_newY_eq_oldX_single_sj
COMMENT_LABEL $10AD #isfunction
LABEL $10BC SMVB_startMove_newY_eq_oldX_single
COMMENT_LABEL $10BC #isfunction
LABEL $10C9 SMVB_startDraw_newY_eq_oldX_single
COMMENT_LABEL $10C9 #isfunction
LABEL $10D6 SMVB_startDraw_newY_eq_oldX_single_sj
COMMENT_LABEL $10D6 #isfunction
LABEL $10E5 SMVB_lastDraw_rts
COMMENT_LABEL $10E5 #isfunction
LABEL $10E7 SMVB_FlagWait
LABEL $10E9 SMVB_rts
COMMENT_LABEL $10E9 #isfunction
LABEL $10F7 SMVB_rts3
COMMENT_LABEL $10F7 #isfunction
LABEL $1106 SMVB_lastDraw_rts_stay
COMMENT_LABEL $1106 #isfunction
LABEL $1108 SMVB_FlagWait3
LABEL $1111 SMVB_lastMove_rts_stay
COMMENT_LABEL $1111 #isfunction
LABEL $1113 SMVB_FlagWait3_2
LABEL $1118 SMVB_lastDraw_rts2
COMMENT_LABEL $1118 #isfunction
LABEL $1121 SMVB_rts2
COMMENT_LABEL $1121 #isfunction
LABEL $112B SMVB_LightOff_Intensity
COMMENT_LABEL $112B #isfunction
LABEL $113F calibrationZero7
COMMENT_LABEL $113F #isfunction
LABEL $1143 calibrationZero7_NZ
LABEL $1160 buzzVectrex7
EQU $10 VB_SPRITE_SCALE_16
LABEL $116E SMVB16_drawSmart
COMMENT_LABEL $116E #isfunction
LABEL $1171 SMVB16_continue_yStays_single
COMMENT_LABEL $1171 #isfunction
LABEL $117A SMVB16_continue7_single
COMMENT_LABEL $117A #isfunction
LABEL $1189 SMVB16_continue6_single
COMMENT_LABEL $1189 #isfunction
LABEL $1198 SMVB16_continue5_single
COMMENT_LABEL $1198 #isfunction
LABEL $11A7 SMVB16_continue4_single
COMMENT_LABEL $11A7 #isfunction
LABEL $11B6 SMVB16_continue3_single
COMMENT_LABEL $11B6 #isfunction
LABEL $11C5 SMVB16_continue2_single
COMMENT_LABEL $11C5 #isfunction
LABEL $11D4 SMVB16_continue_single
COMMENT_LABEL $11D4 #isfunction
LABEL $11D6 SMVB16_continue_newY_eq_oldX_single
COMMENT_LABEL $11D6 #isfunction
LABEL $11E3 SMVB16_continue_yd4_single
COMMENT_LABEL $11E3 #isfunction
LABEL $11E5 SMVB16_continue_newY_y4d_eq_oldX_single
COMMENT_LABEL $11E5 #isfunction
LABEL $11F3 SMVB16_continue_single_sj
COMMENT_LABEL $11F3 #isfunction
LABEL $11F5 SMVB16_continue_newY_eq_oldX_single_sj
COMMENT_LABEL $11F5 #isfunction
LABEL $1202 SMVB16_continue_yEqx_single
COMMENT_LABEL $1202 #isfunction
LABEL $1210 SMVB16_continue_quadro
COMMENT_LABEL $1210 #isfunction
LABEL $127C cont3_16
LABEL $121F SMVB16_startDraw_quadro
COMMENT_LABEL $121F #isfunction
LABEL $1230 SMVB16_startDraw_octo
COMMENT_LABEL $1230 #isfunction
LABEL $1250 cont7_16
LABEL $1241 SMVB16_continue_octo
COMMENT_LABEL $1241 #isfunction
LABEL $125B cont6_16
LABEL $1266 cont5_16
LABEL $1271 cont4_16
LABEL $1287 cont2_16
LABEL $12C1 SMVB16_repeat_same
COMMENT_LABEL $12C1 #isfunction
LABEL $1292 SMVB16_continue_hex
COMMENT_LABEL $1292 #isfunction
LABEL $12A1 SMVB16_continue_tripple
COMMENT_LABEL $12A1 #isfunction
LABEL $12B0 SMVB16_startMove_quadro
COMMENT_LABEL $12B0 #isfunction
LABEL $12CA SMVB16_startDraw_tripple
COMMENT_LABEL $12CA #isfunction
LABEL $12DB SMVB16_startMove_tripple
COMMENT_LABEL $12DB #isfunction
LABEL $12EC SMVB16_continue_double
LABEL $12FB SMVB16_startMove_yd4_single
LABEL $130D SMVB16_startMove_single
COMMENT_LABEL $130D #isfunction
LABEL $131E SMVB16_startMove_double
COMMENT_LABEL $131E #isfunction
LABEL $135A SMVB16_repeat_same2
COMMENT_LABEL $135A #isfunction
LABEL $132F SMVB16_startMove_double_sj
COMMENT_LABEL $132F #isfunction
LABEL $1349 SMVB16_startDraw_double
COMMENT_LABEL $1349 #isfunction
LABEL $1363 SMVB16_startMove_yStays_single
COMMENT_LABEL $1363 #isfunction
LABEL $1370 _SMVB16_startMove_yStays_single_sj
LABEL $137D SMVB16_startDraw_yStays_single
COMMENT_LABEL $137D #isfunction
LABEL $1387 SMVB16_startDraw_xyStays_single
COMMENT_LABEL $1387 #isfunction
LABEL $138F SMVB16_startDraw_yd4_single
LABEL $13A1 SMVB16_startDraw_single
COMMENT_LABEL $13A1 #isfunction
LABEL $13B2 SMVB16_startDraw_yEqx_single
COMMENT_LABEL $13B2 #isfunction
LABEL $13C3 SMVB16_startMove_yd4_yEqx_single
LABEL $13D4 SMVB16_startMove_yEqx_single
COMMENT_LABEL $13D4 #isfunction
LABEL $13E4 SMVB16_startMove_yd4_newY_eq_oldX_single
LABEL $13F4 SMVB16_startMove_newY_eq_oldX_single
COMMENT_LABEL $13F4 #isfunction
LABEL $1403 SMVB16_startDraw_newY_eq_oldX_single
COMMENT_LABEL $1403 #isfunction
LABEL $1412 SMVB16_lastDraw_rts
COMMENT_LABEL $1412 #isfunction
LABEL $1414 SMVB16_FlagWait
LABEL $1418 SMVB16_rts
COMMENT_LABEL $1418 #isfunction
LABEL $1426 SMVB16_lastDraw_rts_stay
COMMENT_LABEL $1426 #isfunction
LABEL $1428 SMVB16_FlagWait3
LABEL $1431 SMVB16_lastDraw_rts2
COMMENT_LABEL $1431 #isfunction
LABEL $143A SMVB16_rts2
COMMENT_LABEL $143A #isfunction
LABEL $1443 calibrationZero16
COMMENT_LABEL $1443 #isfunction
LABEL $1464 buzzVectrex16
LABEL $1472 SMVB50_drawSmart
COMMENT_LABEL $1472 #isfunction
LABEL $1475 SMVB50_setScale
COMMENT_LABEL $1475 #isfunction
LABEL $1479 SMVB50_continue_yStays_single
COMMENT_LABEL $1479 #isfunction
LABEL $148B SMVB50_continue7_single
COMMENT_LABEL $148B #isfunction
LABEL $14A3 SMVB50_continue6_single
COMMENT_LABEL $14A3 #isfunction
LABEL $14BB SMVB50_continue5_single
COMMENT_LABEL $14BB #isfunction
LABEL $14D3 SMVB50_continue4_single
COMMENT_LABEL $14D3 #isfunction
LABEL $14EB SMVB50_continue3_single
COMMENT_LABEL $14EB #isfunction
LABEL $1503 SMVB50_continue2_single
COMMENT_LABEL $1503 #isfunction
LABEL $151B SMVB50_continue_single
COMMENT_LABEL $151B #isfunction
LABEL $151D SMVB50_continue_newY_eq_oldX_single
COMMENT_LABEL $151D #isfunction
LABEL $1533 SMVB50_continue_single_w
COMMENT_LABEL $1533 #isfunction
LABEL $154D SMVB50_continue_newY_eq_oldX_single_sj
COMMENT_LABEL $154D #isfunction
LABEL $1564 SMVB50_continue_yEqx_single
COMMENT_LABEL $1564 #isfunction
LABEL $157B SMVB50_startDraw_octo
COMMENT_LABEL $157B #isfunction
LABEL $15F7 cont7_50
LABEL $1595 SMVB50_startDraw_hex
COMMENT_LABEL $1595 #isfunction
LABEL $161F cont5_50
LABEL $15AF SMVB50_continue_hex
COMMENT_LABEL $15AF #isfunction
LABEL $15C7 SMVB50_continue_tripple
COMMENT_LABEL $15C7 #isfunction
LABEL $165B cont2_50
LABEL $15DF SMVB50_continue_octo
COMMENT_LABEL $15DF #isfunction
LABEL $160B cont6_50
LABEL $1633 cont4_50
LABEL $1647 cont3_50
LABEL $16D5 SMVB50_repeat_same
COMMENT_LABEL $16D5 #isfunction
LABEL $166F SMVB50_continue_quadro
COMMENT_LABEL $166F #isfunction
LABEL $1687 SMVB50_startDraw_quadro
COMMENT_LABEL $1687 #isfunction
LABEL $16A1 SMVB50_startMove_quadro
COMMENT_LABEL $16A1 #isfunction
LABEL $16BB SMVB50_startDraw_tripple
COMMENT_LABEL $16BB #isfunction
LABEL $16E7 SMVB50_startMove_tripple
COMMENT_LABEL $16E7 #isfunction
LABEL $1701 cont2_50_2
LABEL $1715 SMVB50_continue_double
LABEL $172D SMVB50_startMove_single
COMMENT_LABEL $172D #isfunction
LABEL $1747 SMVB50_startMove_double
COMMENT_LABEL $1747 #isfunction
LABEL $177B SMVB50_repeat_same20
COMMENT_LABEL $177B #isfunction
LABEL $1761 SMVB50_startDraw_double
COMMENT_LABEL $1761 #isfunction
LABEL $178D SMVB50_startMove_yStays_single
COMMENT_LABEL $178D #isfunction
LABEL $17A3 SMVB50_startDraw_yStays_single
COMMENT_LABEL $17A3 #isfunction
LABEL $17B6 SMVB50_startDraw_xyStays_single
COMMENT_LABEL $17B6 #isfunction
LABEL $17B6 SMVB50_startMove_xyStays_single
LABEL $17C7 SMVB50_startDraw_single
COMMENT_LABEL $17C7 #isfunction
LABEL $17E1 SMVB50_startDraw_yEqx_single
COMMENT_LABEL $17E1 #isfunction
LABEL $17FB SMVB50_startMove_yEqx_single
COMMENT_LABEL $17FB #isfunction
LABEL $1814 SMVB50_startMove_newY_eq_oldX_single
COMMENT_LABEL $1814 #isfunction
LABEL $182C SMVB50_startDraw_newY_eq_oldX_single
COMMENT_LABEL $182C #isfunction
LABEL $1844 SMVB50_lastDraw_rts
COMMENT_LABEL $1844 #isfunction
LABEL $1846 SMVB50_FlagWait
LABEL $184A SMVB50_rts
COMMENT_LABEL $184A #isfunction
LABEL $1858 SMVB50_rts3
COMMENT_LABEL $1858 #isfunction
LABEL $1867 SMVB50_lastDraw_rts_stay
COMMENT_LABEL $1867 #isfunction
LABEL $1869 SMVB50_FlagWait3
LABEL $1872 SMVB50_lastMove_rts_stay
COMMENT_LABEL $1872 #isfunction
LABEL $1874 SMVB50_FlagWait3_2
LABEL $1879 SMVB50_lastDraw_rts2
COMMENT_LABEL $1879 #isfunction
LABEL $1882 SMVB50_rts2
COMMENT_LABEL $1882 #isfunction
LABEL $188C SMVB50_LightOff_Intensity
COMMENT_LABEL $188C #isfunction
LABEL $18A0 calibrationZero50
COMMENT_LABEL $18A0 #isfunction
LABEL $18C1 buzzVectrex50
LABEL $18CF drawPlayerDodger
LABEL $1EFA SM_Fighter_AnimList
LABEL $1916 animCounterFighterOk_dodge
LABEL $1913 resetAnim_dodge
LABEL $191C drawFighter_dodge
LABEL $191E LF33D11181118
LABEL $1934 doTexterStep
LABEL $1961 goBrighter
LABEL $193F goDarker
LABEL $1976 continueDisplayText
LABEL $1C6F syncPrintStrd
LABEL $1994 doBHText
LABEL $19D4 blackhole_texts
LABEL $19AD dodger_loop2
LABEL $19B0 REPLACE_1_2_doymsound100_varFromIRQ1_112
LABEL $19C8 stagetwo12
LABEL $19CE REPLACE_1_2_returnFromBHText_varFromIRQ1_2
LABEL $19E2 dodger_nh1
LABEL $1A02 dodger_nh2
LABEL $1A1E dodger_nh3
LABEL $1A3D dodger_nh4
LABEL $1A5E dodger_nh5
LABEL $1A84 dodger_nh6
LABEL $1AA8 font_5_data_shift_0
LABEL $1AA8 font5a_line1
LABEL $1B03 font5a_line2
EQU $05 FONT_HEIGHT
EQU $5B FONT_LENGTH
LABEL $1A88 FONT_START_A
COMMENT_LABEL $1A88 // space is 1
LABEL $1BF4 FONT_END
EQU $02 ZERO_DELAY_P2
COMMENT_LABEL $02 2 ; delay 7 counter is exactly 111 cycles delay between zero SETTING and zero unsetting (in moveto_d)
LABEL $1C6F sync_Print_Str_d
LABEL $1C7D zeroLoop_a_2
LABEL $1CA6 LF33D11211121
LABEL $1CAA printsyncAgain
LABEL $1CAF zeroLoop_a1122
LABEL $1CD2 LF33D11241124
LABEL $1CE4 LF4C7_a1122
LABEL $1CE8 LF4CB_a1122
LABEL $1CF7 zeroLoop_a1125
LABEL $1D1A LF33D11271127
LABEL $1D2C LF4C7_a1125
LABEL $1D30 LF4CB_a1125
LABEL $1D3F zeroLoop_a1128
LABEL $1D62 LF33D11301130
LABEL $1D74 LF4C7_a1128
LABEL $1D78 LF4CB_a1128
LABEL $1D87 zeroLoop_a1131
LABEL $1DAA LF33D11331133
LABEL $1DBC LF4C7_a1131
LABEL $1DC0 LF4CB_a1131
LABEL $1DCF zeroLoop_a
LABEL $1DF0 LF33D11351135
LABEL $1E02 LF4C7_a
LABEL $1E06 LF4CB_a
EQU $00 USE_FIGHTER_ANIM
LABEL $1E13 SM_Armor_Anim
LABEL $1E2D SM_Armor_0
LABEL $1E4C SM_Shield_Anim
LABEL $1E66 SM_Shield_0
LABEL $1E8B SM_Shield_1
LABEL $1EB0 SM_Shield_2
LABEL $1ED5 SM_Shield_3
LABEL $1F06 SM_FighterShot1_Anim
LABEL $1F92 SM_FighterShot2_Anim
LABEL $2056 SM_FighterShot3_Anim
LABEL $211A SM_FighterShot4_Anim
LABEL $2202 SM_FighterShot5_Anim
LABEL $229A SM_FighterShot6_Anim
LABEL $1F0C SM_FighterShot1_0
LABEL $1F4F SM_FighterShot1_1
LABEL $1F98 SM_FighterShot2_0
LABEL $1FF7 SM_FighterShot2_1
LABEL $205C SM_FighterShot3_0
LABEL $20BB SM_FighterShot3_1
LABEL $211A SM_Fighter_Anim
LABEL $2120 SM_FighterShot4_0
LABEL $2191 SM_FighterShot4_1
LABEL $2208 SM_FighterShot5_0
LABEL $2251 SM_FighterShot5_1
LABEL $22B4 SM_FighterShot6_0
LABEL $231A SM_FighterShot6_1
LABEL $2380 SM_FighterShot6_2
LABEL $23E6 SM_FighterShot6_3
LABEL $244C SM_FighterShot6_4
LABEL $24B2 SM_FighterShot6_5
LABEL $2518 SM_FighterShot6_6
EQU $28 Y_OFFSET_DESKTOP
EQU $02 NO_OF_LANES
COMMENT_LABEL $02 plus one for ZERO
EQU $00 BEHAVIOUR_NONE
EQU $04 BEHAVIOUR_PAUSE
EQU $08 BEHAVIOUR_ANIMATION_LOOP
EQU $00 ELEMENT_ANIM
EQU $01 ELEMENT_PAUSE
EQU $02 ELEMENT_LIST
EQU $03 ELEMENT_YM
EQU $04 ELEMENT_GOTO
EQU $1B laneData
EQU $00 LANE_CURRENT_ELEMENT
EQU $01 LANE_DELAY_COUNT
EQU $02 LANE_ANIM_COUNT
EQU $03 LANE_ANIM_LOOP
EQU $04 LANE_CURRENT_MOVE_SCALE
EQU $05 LANE_CURRENT_DRAW_SCALE
EQU $06 LANE_SCALE_TO
EQU $07 LANE_SCALE_DELAY
EQU $08 LANE_SCALE_INCREASE
EQU $09 LANE_CURRENT_INTENSITY
EQU $0A LANE_INTENSITY_DELAY
EQU $0B LANE_INTENSITY_TO
EQU $0C LANE_INTENSITY_INCREASE
EQU $0D LANE_CURRENT_POSITION
EQU $0D LANE_CURRENT_POSITION_Y
EQU $0E LANE_CURRENT_POSITION_X
EQU $0F LANE_POS_TO
EQU $0F LANE_POS_Y_TO
EQU $10 LANE_POS_X_TO
EQU $11 LANE_POS_DELAY
EQU $11 LANE_POS_DELAY_Y
EQU $12 LANE_POS_DELAY_X
EQU $13 LANE_POS_INCREASE
EQU $13 LANE_POS_INCREASE_Y
EQU $14 LANE_POS_INCREASE_X
EQU $15 LANE_ELEMENT_COUNT
EQU $17 LANE_DRAW
EQU $19 LANE_ROM_DATA
EQU $1A elementData
EQU $00 ELEMENT_ANIM_LIST
EQU $02 ELEMENT_ANIM_DELAY
EQU $03 ELEMENT_SCALE_FROM
EQU $04 ELEMENT_SCALE_TO
EQU $05 ELEMENT_SCALE_DELAY
EQU $06 ELEMENT_SCALE_INCREASE
EQU $07 ELEMENT_INTENSITY_FROM
EQU $08 ELEMENT_INTENSITY_TO
EQU $09 ELEMENT_INTENSITY_DELAY
EQU $0A ELEMENT_INTENSITY_INCREASE
EQU $0B ELEMENT_POS_FROM
EQU $0B ELEMENT_POS_FROM_Y
EQU $0C ELEMENT_POS_FROM_X
EQU $0D ELEMENT_POS_TO
EQU $0D ELEMENT_POS_TO_Y
EQU $0E ELEMENT_POS_TO_X
EQU $0F ELEMENT_POS_DELAY
EQU $0F ELEMENT_POS_DELAY_Y
EQU $10 ELEMENT_POS_DELAY_X
EQU $11 ELEMENT_POS_INCREASE
EQU $11 ELEMENT_POS_INCREASE_Y
EQU $12 ELEMENT_POS_INCREASE_X
EQU $13 ELEMENT_MOVE_SCALE
EQU $14 ELEMENT_DRAW
EQU $16 ELEMENT_BEHAVIOUR
EQU $17 ELEMENT_END_COUNT
EQU $19 ELEMENT_TYPE
LABEL $CA23 laneRAM
LABEL $CA59 roundCounter
LABEL $CA5B stageCounter
LABEL $257E oneScenarioStep1
LABEL $CA64 sceneryLooped
LABEL $2585 doNextLane
LABEL $2591 lanesDone
LABEL $2646 doLane
LABEL $259A initLane
LABEL $25A1 init_element
LABEL $25F2 draw_pause
COMMENT_LABEL $25F2 some direct RTS
LABEL $25F2 scenarioBreak
LABEL $25F3 initNextElementSilent
LABEL $25FB not_gotoElement_s
LABEL $261A not_last_element_s
LABEL $261C initNextElement
LABEL $2624 not_gotoElement
LABEL $2643 not_last_element
LABEL $2650 continueWithElement
LABEL $2677 drawCurrentAnimationFrame
LABEL $2675 loopAnim
LABEL $268F noScaleChange
LABEL $268B scale_final_not_reached
LABEL $26A7 noIntensityChange
LABEL $26A3 intensity_final_not_reached
LABEL $26C5 noXChange
LABEL $26BF X_final_not_reached
LABEL $26E1 noYChange
LABEL $26DC Y_final_not_reached
LABEL $26F0 noIntensity
LABEL $2703 lane1Data
LABEL $2737 element_11
LABEL $2751 element_12
LABEL $276B element_13
LABEL $343E element_Bonus1
LABEL $3458 element_Bonus2
LABEL $3472 element_Bonus3
LABEL $348C element_Bonus4
LABEL $34A6 element_Bonus5
LABEL $34C0 element_Bonus6
LABEL $34DA element_Bonus7
LABEL $34F4 element_Bonus8
LABEL $350E element_Bonus9
LABEL $3528 element_Bonus10
LABEL $3542 element_Bonus11
LABEL $355C element_Bonus12
LABEL $3576 element_Bonus13
LABEL $3590 element_Bonus14
LABEL $35AA element_Bonus15
LABEL $35C4 element_Bonus16
LABEL $35DE element_Bonus17
LABEL $35F8 element_Bonus18
LABEL $3612 element_Bonus19
LABEL $362C element_Bonus20
LABEL $2785 element_15
LABEL $279F element_16
LABEL $27B9 AnimList_114
LABEL $2BDB AnimList_115
LABEL $2DD4 AnimList_118
LABEL $2FCB AnimList_119
EQU $01 BLOW_UP_115
LABEL $27CB AnimList_114_0
LABEL $2856 AnimList_114_1
LABEL $28DE AnimList_114_2
LABEL $2966 AnimList_114_3
LABEL $29E2 AnimList_114_4
LABEL $2A5E AnimList_114_5
LABEL $2AEF AnimList_114_6
LABEL $2B68 AnimList_114_7
EQU $01 BLOW_UP_116
LABEL $2BE5 AnimList_115_0
LABEL $2C73 AnimList_115_1
LABEL $2CF2 AnimList_115_2
LABEL $2D65 AnimList_115_3
LABEL $2DD2 AnimList_116
EQU $01 BLOW_UP_118
EQU $01 BLOW_UP_119
LABEL $2DDE AnimList_118_0
LABEL $2E4B AnimList_118_1
LABEL $2EBE AnimList_118_2
LABEL $2F3D AnimList_118_3
EQU $01 BLOW_UP_120
LABEL $2FDD AnimList_119_0
LABEL $3059 AnimList_119_1
LABEL $30EA AnimList_119_2
LABEL $316C AnimList_119_3
LABEL $31FA AnimList_119_4
LABEL $3288 AnimList_119_5
LABEL $3310 AnimList_119_6
LABEL $3398 AnimList_119_7
LABEL $3414 drawSmart2
LABEL $3432 REPLACE_1_2_SMVBdrawSmart70_varFrom0_1
LABEL $3437 LF33D1138
LABEL $3646 Bonus1AnimList
LABEL $3668 Bonus2AnimList
LABEL $368A Bonus3AnimList
LABEL $36AC Bonus4AnimList
LABEL $36CE Bonus5AnimList
LABEL $36F0 Bonus6AnimList
LABEL $3712 Bonus7AnimList
LABEL $3734 Bonus8AnimList
LABEL $3756 Bonus9AnimList
LABEL $3778 Bonus10AnimList
LABEL $379A Bonus11AnimList
LABEL $37BC Bonus12AnimList
LABEL $37DE Bonus13AnimList
LABEL $3800 Bonus14AnimList
LABEL $3822 Bonus15AnimList
LABEL $3844 Bonus16AnimList
LABEL $3866 Bonus17AnimList
LABEL $3888 Bonus18AnimList
LABEL $38AA Bonus19AnimList
LABEL $38CC Bonus20AnimList
LABEL $3646 REPLACE_0_2_BonusShot1Inner0_varFrom0_1
LABEL $3648 REPLACE_0_2_BonusShot1Inner1_varFrom0_1
LABEL $364A REPLACE_0_2_BonusShot1Inner2_varFrom0_1
LABEL $364C REPLACE_0_2_BonusShot1Inner3_varFrom0_1
LABEL $364E REPLACE_0_2_BonusShot1Inner4_varFrom0_1
LABEL $3650 REPLACE_0_2_BonusShot1Inner5_varFrom0_1
LABEL $3652 REPLACE_0_2_BonusShot1Inner6_varFrom0_1
LABEL $3654 REPLACE_0_2_BonusShot1Inner7_varFrom0_1
LABEL $3656 REPLACE_0_2_BonusShot1Inner8_varFrom0_1
LABEL $3658 REPLACE_0_2_BonusShot1Inner7_varFrom0_2
LABEL $365A REPLACE_0_2_BonusShot1Inner6_varFrom0_2
LABEL $365C REPLACE_0_2_BonusShot1Inner5_varFrom0_2
LABEL $365E REPLACE_0_2_BonusShot1Inner4_varFrom0_2
LABEL $3660 REPLACE_0_2_BonusShot1Inner3_varFrom0_2
LABEL $3662 REPLACE_0_2_BonusShot1Inner2_varFrom0_2
LABEL $3664 REPLACE_0_2_BonusShot1Inner1_varFrom0_2
LABEL $3668 REPLACE_0_2_BonusShot2Inner0_varFrom0_1
LABEL $366A REPLACE_0_2_BonusShot2Inner1_varFrom0_1
LABEL $366C REPLACE_0_2_BonusShot2Inner2_varFrom0_1
LABEL $366E REPLACE_0_2_BonusShot2Inner3_varFrom0_1
LABEL $3670 REPLACE_0_2_BonusShot2Inner4_varFrom0_1
LABEL $3672 REPLACE_0_2_BonusShot2Inner5_varFrom0_1
LABEL $3674 REPLACE_0_2_BonusShot2Inner6_varFrom0_1
LABEL $3676 REPLACE_0_2_BonusShot2Inner7_varFrom0_1
LABEL $3678 REPLACE_0_2_BonusShot2Inner8_varFrom0_1
LABEL $367A REPLACE_0_2_BonusShot2Inner7_varFrom0_2
LABEL $367C REPLACE_0_2_BonusShot2Inner6_varFrom0_2
LABEL $367E REPLACE_0_2_BonusShot2Inner5_varFrom0_2
LABEL $3680 REPLACE_0_2_BonusShot2Inner4_varFrom0_2
LABEL $3682 REPLACE_0_2_BonusShot2Inner3_varFrom0_2
LABEL $3684 REPLACE_0_2_BonusShot2Inner2_varFrom0_2
LABEL $3686 REPLACE_0_2_BonusShot2Inner1_varFrom0_2
LABEL $368A REPLACE_0_2_BonusFasterInner0_varFrom0_1
LABEL $368C REPLACE_0_2_BonusFasterInner1_varFrom0_1
LABEL $368E REPLACE_0_2_BonusFasterInner2_varFrom0_1
LABEL $3690 REPLACE_0_2_BonusFasterInner3_varFrom0_1
LABEL $3692 REPLACE_0_2_BonusFasterInner4_varFrom0_1
LABEL $3694 REPLACE_0_2_BonusFasterInner5_varFrom0_1
LABEL $3696 REPLACE_0_2_BonusFasterInner6_varFrom0_1
LABEL $3698 REPLACE_0_2_BonusFasterInner7_varFrom0_1
LABEL $369A REPLACE_0_2_BonusFasterInner8_varFrom0_1
LABEL $369C REPLACE_0_2_BonusFasterInner7_varFrom0_2
LABEL $369E REPLACE_0_2_BonusFasterInner6_varFrom0_2
LABEL $36A0 REPLACE_0_2_BonusFasterInner5_varFrom0_2
LABEL $36A2 REPLACE_0_2_BonusFasterInner4_varFrom0_2
LABEL $36A4 REPLACE_0_2_BonusFasterInner3_varFrom0_2
LABEL $36A6 REPLACE_0_2_BonusFasterInner2_varFrom0_2
LABEL $36A8 REPLACE_0_2_BonusFasterInner1_varFrom0_2
LABEL $36AC REPLACE_0_2_MalusSpeed0_varFrom0_1
LABEL $36AE REPLACE_0_2_MalusSpeed1_varFrom0_1
LABEL $36B0 REPLACE_0_2_MalusSpeed2_varFrom0_1
LABEL $36B2 REPLACE_0_2_MalusSpeed3_varFrom0_1
LABEL $36B4 REPLACE_0_2_MalusSpeed4_varFrom0_1
LABEL $36B6 REPLACE_0_2_MalusSpeed5_varFrom0_1
LABEL $36B8 REPLACE_0_2_MalusSpeed6_varFrom0_1
LABEL $36BA REPLACE_0_2_MalusSpeed7_varFrom0_1
LABEL $36BC REPLACE_0_2_MalusSpeed8_varFrom0_1
LABEL $36BE REPLACE_0_2_MalusSpeed7_varFrom0_2
LABEL $36C0 REPLACE_0_2_MalusSpeed6_varFrom0_2
LABEL $36C2 REPLACE_0_2_MalusSpeed5_varFrom0_2
LABEL $36C4 REPLACE_0_2_MalusSpeed4_varFrom0_2
LABEL $36C6 REPLACE_0_2_MalusSpeed3_varFrom0_2
LABEL $36C8 REPLACE_0_2_MalusSpeed2_varFrom0_2
LABEL $36CA REPLACE_0_2_MalusSpeed1_varFrom0_2
LABEL $36CE REPLACE_0_2_BonusFasterShotInner0_varFrom0_1
LABEL $36D0 REPLACE_0_2_BonusFasterShotInner1_varFrom0_1
LABEL $36D2 REPLACE_0_2_BonusFasterShotInner2_varFrom0_1
LABEL $36D4 REPLACE_0_2_BonusFasterShotInner3_varFrom0_1
LABEL $36D6 REPLACE_0_2_BonusFasterShotInner4_varFrom0_1
LABEL $36D8 REPLACE_0_2_BonusFasterShotInner5_varFrom0_1
LABEL $36DA REPLACE_0_2_BonusFasterShotInner6_varFrom0_1
LABEL $36DC REPLACE_0_2_BonusFasterShotInner7_varFrom0_1
LABEL $36DE REPLACE_0_2_BonusFasterShotInner8_varFrom0_1
LABEL $36E0 REPLACE_0_2_BonusFasterShotInner7_varFrom0_2
LABEL $36E2 REPLACE_0_2_BonusFasterShotInner6_varFrom0_2
LABEL $36E4 REPLACE_0_2_BonusFasterShotInner5_varFrom0_2
LABEL $36E6 REPLACE_0_2_BonusFasterShotInner4_varFrom0_2
LABEL $36E8 REPLACE_0_2_BonusFasterShotInner3_varFrom0_2
LABEL $36EA REPLACE_0_2_BonusFasterShotInner2_varFrom0_2
LABEL $36EC REPLACE_0_2_BonusFasterShotInner1_varFrom0_2
LABEL $36F0 REPLACE_0_2_BonusSlowerShot0_varFrom0_1
LABEL $36F2 REPLACE_0_2_BonusSlowerShot1_varFrom0_1
LABEL $36F4 REPLACE_0_2_BonusSlowerShot2_varFrom0_1
LABEL $36F6 REPLACE_0_2_BonusSlowerShot3_varFrom0_1
LABEL $36F8 REPLACE_0_2_BonusSlowerShot4_varFrom0_1
LABEL $36FA REPLACE_0_2_BonusSlowerShot5_varFrom0_1
LABEL $36FC REPLACE_0_2_BonusSlowerShot6_varFrom0_1
LABEL $36FE REPLACE_0_2_BonusSlowerShot7_varFrom0_1
LABEL $3700 REPLACE_0_2_BonusSlowerShot8_varFrom0_1
LABEL $3702 REPLACE_0_2_BonusSlowerShot7_varFrom0_2
LABEL $3704 REPLACE_0_2_BonusSlowerShot6_varFrom0_2
LABEL $3706 REPLACE_0_2_BonusSlowerShot5_varFrom0_2
LABEL $3708 REPLACE_0_2_BonusSlowerShot4_varFrom0_2
LABEL $370A REPLACE_0_2_BonusSlowerShot3_varFrom0_2
LABEL $370C REPLACE_0_2_BonusSlowerShot2_varFrom0_2
LABEL $370E REPLACE_0_2_BonusSlowerShot1_varFrom0_2
LABEL $3712 REPLACE_0_2_BonusExtraBulletInner0_varFrom0_1
LABEL $3714 REPLACE_0_2_BonusExtraBulletInner1_varFrom0_1
LABEL $3716 REPLACE_0_2_BonusExtraBulletInner2_varFrom0_1
LABEL $3718 REPLACE_0_2_BonusExtraBulletInner3_varFrom0_1
LABEL $371A REPLACE_0_2_BonusExtraBulletInner4_varFrom0_1
LABEL $371C REPLACE_0_2_BonusExtraBulletInner5_varFrom0_1
LABEL $371E REPLACE_0_2_BonusExtraBulletInner6_varFrom0_1
LABEL $3720 REPLACE_0_2_BonusExtraBulletInner7_varFrom0_1
LABEL $3722 REPLACE_0_2_BonusExtraBulletInner8_varFrom0_1
LABEL $3724 REPLACE_0_2_BonusExtraBulletInner7_varFrom0_2
LABEL $3726 REPLACE_0_2_BonusExtraBulletInner6_varFrom0_2
LABEL $3728 REPLACE_0_2_BonusExtraBulletInner5_varFrom0_2
LABEL $372A REPLACE_0_2_BonusExtraBulletInner4_varFrom0_2
LABEL $372C REPLACE_0_2_BonusExtraBulletInner3_varFrom0_2
LABEL $372E REPLACE_0_2_BonusExtraBulletInner2_varFrom0_2
LABEL $3730 REPLACE_0_2_BonusExtraBulletInner1_varFrom0_2
LABEL $3734 REPLACE_0_2_MalusShot0_varFrom0_1
LABEL $3736 REPLACE_0_2_MalusShot1_varFrom0_1
LABEL $3738 REPLACE_0_2_MalusShot2_varFrom0_1
LABEL $373A REPLACE_0_2_MalusShot3_varFrom0_1
LABEL $373C REPLACE_0_2_MalusShot4_varFrom0_1
LABEL $373E REPLACE_0_2_MalusShot5_varFrom0_1
LABEL $3740 REPLACE_0_2_MalusShot6_varFrom0_1
LABEL $3742 REPLACE_0_2_MalusShot7_varFrom0_1
LABEL $3744 REPLACE_0_2_MalusShot8_varFrom0_1
LABEL $3746 REPLACE_0_2_MalusShot7_varFrom0_2
LABEL $3748 REPLACE_0_2_MalusShot6_varFrom0_2
LABEL $374A REPLACE_0_2_MalusShot5_varFrom0_2
LABEL $374C REPLACE_0_2_MalusShot4_varFrom0_2
LABEL $374E REPLACE_0_2_MalusShot3_varFrom0_2
LABEL $3750 REPLACE_0_2_MalusShot2_varFrom0_2
LABEL $3752 REPLACE_0_2_MalusShot1_varFrom0_2
LABEL $3756 REPLACE_0_2_BonusScoopInner0_varFrom0_1
LABEL $3758 REPLACE_0_2_BonusScoopInner1_varFrom0_1
LABEL $375A REPLACE_0_2_BonusScoopInner2_varFrom0_1
LABEL $375C REPLACE_0_2_BonusScoopInner3_varFrom0_1
LABEL $375E REPLACE_0_2_BonusScoopInner4_varFrom0_1
LABEL $3760 REPLACE_0_2_BonusScoopInner5_varFrom0_1
LABEL $3762 REPLACE_0_2_BonusScoopInner6_varFrom0_1
LABEL $3764 REPLACE_0_2_BonusScoopInner7_varFrom0_1
LABEL $3766 REPLACE_0_2_BonusScoopInner8_varFrom0_1
LABEL $3768 REPLACE_0_2_BonusScoopInner7_varFrom0_2
LABEL $376A REPLACE_0_2_BonusScoopInner6_varFrom0_2
LABEL $376C REPLACE_0_2_BonusScoopInner5_varFrom0_2
LABEL $376E REPLACE_0_2_BonusScoopInner4_varFrom0_2
LABEL $3770 REPLACE_0_2_BonusScoopInner3_varFrom0_2
LABEL $3772 REPLACE_0_2_BonusScoopInner2_varFrom0_2
LABEL $3774 REPLACE_0_2_BonusScoopInner1_varFrom0_2
LABEL $3778 REPLACE_0_2_BonusShieldInner0_varFrom0_1
LABEL $377A REPLACE_0_2_BonusShieldInner1_varFrom0_1
LABEL $377C REPLACE_0_2_BonusShieldInner2_varFrom0_1
LABEL $377E REPLACE_0_2_BonusShieldInner3_varFrom0_1
LABEL $3780 REPLACE_0_2_BonusShieldInner4_varFrom0_1
LABEL $3782 REPLACE_0_2_BonusShieldInner5_varFrom0_1
LABEL $3784 REPLACE_0_2_BonusShieldInner6_varFrom0_1
LABEL $3786 REPLACE_0_2_BonusShieldInner7_varFrom0_1
LABEL $3788 REPLACE_0_2_BonusShieldInner8_varFrom0_1
LABEL $378A REPLACE_0_2_BonusShieldInner7_varFrom0_2
LABEL $378C REPLACE_0_2_BonusShieldInner6_varFrom0_2
LABEL $378E REPLACE_0_2_BonusShieldInner5_varFrom0_2
LABEL $3790 REPLACE_0_2_BonusShieldInner4_varFrom0_2
LABEL $3792 REPLACE_0_2_BonusShieldInner3_varFrom0_2
LABEL $3794 REPLACE_0_2_BonusShieldInner2_varFrom0_2
LABEL $3796 REPLACE_0_2_BonusShieldInner1_varFrom0_2
LABEL $379A REPLACE_0_2_BonusArmorInner0_varFrom0_1
LABEL $379C REPLACE_0_2_BonusArmorInner1_varFrom0_1
LABEL $379E REPLACE_0_2_BonusArmorInner2_varFrom0_1
LABEL $37A0 REPLACE_0_2_BonusArmorInner3_varFrom0_1
LABEL $37A2 REPLACE_0_2_BonusArmorInner4_varFrom0_1
LABEL $37A4 REPLACE_0_2_BonusArmorInner5_varFrom0_1
LABEL $37A6 REPLACE_0_2_BonusArmorInner6_varFrom0_1
LABEL $37A8 REPLACE_0_2_BonusArmorInner7_varFrom0_1
LABEL $37AA REPLACE_0_2_BonusArmorInner8_varFrom0_1
LABEL $37AC REPLACE_0_2_BonusArmorInner7_varFrom0_2
LABEL $37AE REPLACE_0_2_BonusArmorInner6_varFrom0_2
LABEL $37B0 REPLACE_0_2_BonusArmorInner5_varFrom0_2
LABEL $37B2 REPLACE_0_2_BonusArmorInner4_varFrom0_2
LABEL $37B4 REPLACE_0_2_BonusArmorInner3_varFrom0_2
LABEL $37B6 REPLACE_0_2_BonusArmorInner2_varFrom0_2
LABEL $37B8 REPLACE_0_2_BonusArmorInner1_varFrom0_2
LABEL $37BC REPLACE_0_2_MineStorm0_varFrom0_1
LABEL $37BE REPLACE_0_2_MineStorm1_varFrom0_1
LABEL $37C0 REPLACE_0_2_MineStorm2_varFrom0_1
LABEL $37C2 REPLACE_0_2_MineStorm3_varFrom0_1
LABEL $37C4 REPLACE_0_2_MineStorm4_varFrom0_1
LABEL $37C6 REPLACE_0_2_MineStorm5_varFrom0_1
LABEL $37C8 REPLACE_0_2_MineStorm6_varFrom0_1
LABEL $37CA REPLACE_0_2_MineStorm7_varFrom0_1
LABEL $37CC REPLACE_0_2_MineStorm8_varFrom0_1
LABEL $37CE REPLACE_0_2_MineStorm7_varFrom0_2
LABEL $37D0 REPLACE_0_2_MineStorm6_varFrom0_2
LABEL $37D2 REPLACE_0_2_MineStorm5_varFrom0_2
LABEL $37D4 REPLACE_0_2_MineStorm4_varFrom0_2
LABEL $37D6 REPLACE_0_2_MineStorm3_varFrom0_2
LABEL $37D8 REPLACE_0_2_MineStorm2_varFrom0_2
LABEL $37DA REPLACE_0_2_MineStorm1_varFrom0_2
LABEL $37DE REPLACE_0_2_BonusMult20_varFrom0_1
LABEL $37E0 REPLACE_0_2_BonusMult21_varFrom0_1
LABEL $37E2 REPLACE_0_2_BonusMult22_varFrom0_1
LABEL $37E4 REPLACE_0_2_BonusMult23_varFrom0_1
LABEL $37E6 REPLACE_0_2_BonusMult24_varFrom0_1
LABEL $37E8 REPLACE_0_2_BonusMult25_varFrom0_1
LABEL $37EA REPLACE_0_2_BonusMult26_varFrom0_1
LABEL $37EC REPLACE_0_2_BonusMult27_varFrom0_1
LABEL $37EE REPLACE_0_2_BonusMult28_varFrom0_1
LABEL $37F0 REPLACE_0_2_BonusMult27_varFrom0_2
LABEL $37F2 REPLACE_0_2_BonusMult26_varFrom0_2
LABEL $37F4 REPLACE_0_2_BonusMult25_varFrom0_2
LABEL $37F6 REPLACE_0_2_BonusMult24_varFrom0_2
LABEL $37F8 REPLACE_0_2_BonusMult23_varFrom0_2
LABEL $37FA REPLACE_0_2_BonusMult22_varFrom0_2
LABEL $37FC REPLACE_0_2_BonusMult21_varFrom0_2
LABEL $3800 REPLACE_0_2_BonusMult50_varFrom0_1
LABEL $3802 REPLACE_0_2_BonusMult51_varFrom0_1
LABEL $3804 REPLACE_0_2_BonusMult52_varFrom0_1
LABEL $3806 REPLACE_0_2_BonusMult53_varFrom0_1
LABEL $3808 REPLACE_0_2_BonusMult54_varFrom0_1
LABEL $380A REPLACE_0_2_BonusMult55_varFrom0_1
LABEL $380C REPLACE_0_2_BonusMult56_varFrom0_1
LABEL $380E REPLACE_0_2_BonusMult57_varFrom0_1
LABEL $3810 REPLACE_0_2_BonusMult58_varFrom0_1
LABEL $3812 REPLACE_0_2_BonusMult57_varFrom0_2
LABEL $3814 REPLACE_0_2_BonusMult56_varFrom0_2
LABEL $3816 REPLACE_0_2_BonusMult55_varFrom0_2
LABEL $3818 REPLACE_0_2_BonusMult54_varFrom0_2
LABEL $381A REPLACE_0_2_BonusMult53_varFrom0_2
LABEL $381C REPLACE_0_2_BonusMult52_varFrom0_2
LABEL $381E REPLACE_0_2_BonusMult51_varFrom0_2
LABEL $3822 REPLACE_0_2_BonusBombCash0_varFrom0_1
LABEL $3824 REPLACE_0_2_BonusBombCash1_varFrom0_1
LABEL $3826 REPLACE_0_2_BonusBombCash2_varFrom0_1
LABEL $3828 REPLACE_0_2_BonusBombCash3_varFrom0_1
LABEL $382A REPLACE_0_2_BonusBombCash4_varFrom0_1
LABEL $382C REPLACE_0_2_BonusBombCash5_varFrom0_1
LABEL $382E REPLACE_0_2_BonusBombCash6_varFrom0_1
LABEL $3830 REPLACE_0_2_BonusBombCash7_varFrom0_1
LABEL $3832 REPLACE_0_2_BonusBombCash8_varFrom0_1
LABEL $3834 REPLACE_0_2_BonusBombCash7_varFrom0_2
LABEL $3836 REPLACE_0_2_BonusBombCash6_varFrom0_2
LABEL $3838 REPLACE_0_2_BonusBombCash5_varFrom0_2
LABEL $383A REPLACE_0_2_BonusBombCash4_varFrom0_2
LABEL $383C REPLACE_0_2_BonusBombCash3_varFrom0_2
LABEL $383E REPLACE_0_2_BonusBombCash2_varFrom0_2
LABEL $3840 REPLACE_0_2_BonusBombCash1_varFrom0_2
LABEL $3844 REPLACE_0_2_BonusBombDiamond0_varFrom0_1
LABEL $3846 REPLACE_0_2_BonusBombDiamond1_varFrom0_1
LABEL $3848 REPLACE_0_2_BonusBombDiamond2_varFrom0_1
LABEL $384A REPLACE_0_2_BonusBombDiamond3_varFrom0_1
LABEL $384C REPLACE_0_2_BonusBombDiamond4_varFrom0_1
LABEL $384E REPLACE_0_2_BonusBombDiamond5_varFrom0_1
LABEL $3850 REPLACE_0_2_BonusBombDiamond6_varFrom0_1
LABEL $3852 REPLACE_0_2_BonusBombDiamond7_varFrom0_1
LABEL $3854 REPLACE_0_2_BonusBombDiamond8_varFrom0_1
LABEL $3856 REPLACE_0_2_BonusBombDiamond7_varFrom0_2
LABEL $3858 REPLACE_0_2_BonusBombDiamond6_varFrom0_2
LABEL $385A REPLACE_0_2_BonusBombDiamond5_varFrom0_2
LABEL $385C REPLACE_0_2_BonusBombDiamond4_varFrom0_2
LABEL $385E REPLACE_0_2_BonusBombDiamond3_varFrom0_2
LABEL $3860 REPLACE_0_2_BonusBombDiamond2_varFrom0_2
LABEL $3862 REPLACE_0_2_BonusBombDiamond1_varFrom0_2
LABEL $3866 REPLACE_0_2_BonusTimer0_varFrom0_1
LABEL $3868 REPLACE_0_2_BonusTimer1_varFrom0_1
LABEL $386A REPLACE_0_2_BonusTimer2_varFrom0_1
LABEL $386C REPLACE_0_2_BonusTimer3_varFrom0_1
LABEL $386E REPLACE_0_2_BonusTimer4_varFrom0_1
LABEL $3870 REPLACE_0_2_BonusTimer5_varFrom0_1
LABEL $3872 REPLACE_0_2_BonusTimer6_varFrom0_1
LABEL $3874 REPLACE_0_2_BonusTimer7_varFrom0_1
LABEL $3876 REPLACE_0_2_BonusTimer8_varFrom0_1
LABEL $3878 REPLACE_0_2_BonusTimer7_varFrom0_2
LABEL $387A REPLACE_0_2_BonusTimer6_varFrom0_2
LABEL $387C REPLACE_0_2_BonusTimer5_varFrom0_2
LABEL $387E REPLACE_0_2_BonusTimer4_varFrom0_2
LABEL $3880 REPLACE_0_2_BonusTimer3_varFrom0_2
LABEL $3882 REPLACE_0_2_BonusTimer2_varFrom0_2
LABEL $3884 REPLACE_0_2_BonusTimer1_varFrom0_2
LABEL $3888 REPLACE_0_2_BonusCashDoubler0_varFrom0_1
LABEL $388A REPLACE_0_2_BonusCashDoubler1_varFrom0_1
LABEL $388C REPLACE_0_2_BonusCashDoubler2_varFrom0_1
LABEL $388E REPLACE_0_2_BonusCashDoubler3_varFrom0_1
LABEL $3890 REPLACE_0_2_BonusCashDoubler4_varFrom0_1
LABEL $3892 REPLACE_0_2_BonusCashDoubler5_varFrom0_1
LABEL $3894 REPLACE_0_2_BonusCashDoubler6_varFrom0_1
LABEL $3896 REPLACE_0_2_BonusCashDoubler7_varFrom0_1
LABEL $3898 REPLACE_0_2_BonusCashDoubler8_varFrom0_1
LABEL $389A REPLACE_0_2_BonusCashDoubler7_varFrom0_2
LABEL $389C REPLACE_0_2_BonusCashDoubler6_varFrom0_2
LABEL $389E REPLACE_0_2_BonusCashDoubler5_varFrom0_2
LABEL $38A0 REPLACE_0_2_BonusCashDoubler4_varFrom0_2
LABEL $38A2 REPLACE_0_2_BonusCashDoubler3_varFrom0_2
LABEL $38A4 REPLACE_0_2_BonusCashDoubler2_varFrom0_2
LABEL $38A6 REPLACE_0_2_BonusCashDoubler1_varFrom0_2
LABEL $38AA REPLACE_0_2_BonusShotPowerup0_varFrom0_1
LABEL $38AC REPLACE_0_2_BonusShotPowerup1_varFrom0_1
LABEL $38AE REPLACE_0_2_BonusShotPowerup2_varFrom0_1
LABEL $38B0 REPLACE_0_2_BonusShotPowerup3_varFrom0_1
LABEL $38B2 REPLACE_0_2_BonusShotPowerup4_varFrom0_1
LABEL $38B4 REPLACE_0_2_BonusShotPowerup5_varFrom0_1
LABEL $38B6 REPLACE_0_2_BonusShotPowerup6_varFrom0_1
LABEL $38B8 REPLACE_0_2_BonusShotPowerup7_varFrom0_1
LABEL $38BA REPLACE_0_2_BonusShotPowerup8_varFrom0_1
LABEL $38BC REPLACE_0_2_BonusShotPowerup7_varFrom0_2
LABEL $38BE REPLACE_0_2_BonusShotPowerup6_varFrom0_2
LABEL $38C0 REPLACE_0_2_BonusShotPowerup5_varFrom0_2
LABEL $38C2 REPLACE_0_2_BonusShotPowerup4_varFrom0_2
LABEL $38C4 REPLACE_0_2_BonusShotPowerup3_varFrom0_2
LABEL $38C6 REPLACE_0_2_BonusShotPowerup2_varFrom0_2
LABEL $38C8 REPLACE_0_2_BonusShotPowerup1_varFrom0_2
LABEL $38CC REPLACE_0_2_LifeBonus0_varFrom0_1
LABEL $38CE REPLACE_0_2_LifeBonus1_varFrom0_1
LABEL $38D0 REPLACE_0_2_LifeBonus2_varFrom0_1
LABEL $38D2 REPLACE_0_2_LifeBonus3_varFrom0_1
LABEL $38D4 REPLACE_0_2_LifeBonus4_varFrom0_1
LABEL $38D6 REPLACE_0_2_LifeBonus5_varFrom0_1
LABEL $38D8 REPLACE_0_2_LifeBonus6_varFrom0_1
LABEL $38DA REPLACE_0_2_LifeBonus7_varFrom0_1
LABEL $38DC REPLACE_0_2_LifeBonus8_varFrom0_1
LABEL $38DE REPLACE_0_2_LifeBonus7_varFrom0_2
LABEL $38E0 REPLACE_0_2_LifeBonus6_varFrom0_2
LABEL $38E2 REPLACE_0_2_LifeBonus5_varFrom0_2
LABEL $38E4 REPLACE_0_2_LifeBonus4_varFrom0_2
LABEL $38E6 REPLACE_0_2_LifeBonus3_varFrom0_2
LABEL $38E8 REPLACE_0_2_LifeBonus2_varFrom0_2
LABEL $38EA REPLACE_0_2_LifeBonus1_varFrom0_2
EQU $01 TITLE_DISPLAY_MAN
LABEL $0080 TITLE_MUST_INIT_STAGE
EQU $02 TITLE_DESKTOP_LIT
LABEL $CA5C titleRoundCounter
LABEL $CA5E desktop_flags
LABEL $CA5F screenSize
LABEL $CA60 screenIntensity
LABEL $CA61 iconIntensity
LABEL $CA62 interStageCounter
LABEL $CA63 introStage
LABEL $CA64 stageRAM_start
LABEL $38EE initAllTitle
LABEL $3905 initScenery1
COMMENT_LABEL $3905 #isfunction
LABEL $3926 oneVBTitleStep
COMMENT_LABEL $3926 #isfunction
LABEL $3941 notLeftt
LABEL $393A notRightt
LABEL $3954 joystickDone
LABEL $394F notUpt
LABEL $3954 notDownt
LABEL $4532 CommandCenter_0
LABEL $3979 notRight2t
LABEL $454E CommandCenter_1
LABEL $3996 notUp2t
LABEL $4561 CommandCenter_2
LABEL $39B3 notLeft2t
LABEL $4571 CommandCenter_3
LABEL $39D0 notDown2t
LABEL $4584 CommandCenter_4
LABEL $39F0 notDown2t_icon
LABEL $4591 HSStairs
LABEL $3A17 LF33D1146
LABEL $3A2A notUp2t_icon
LABEL $3A59 zeroF
LABEL $3A5D LF33D1149
LABEL $3A79 notRight2t_icon
LABEL $4604 HSOptions
LABEL $3AA0 LF33D1153
LABEL $3AB3 notLeft2t_icon
LABEL $465C HSAchievements
LABEL $3ADA LF33D1156
LABEL $3AEC notLit
LABEL $4748 HSConsole
LABEL $3B0B LF33D1159
LABEL $3B44 doAStage
LABEL $47DE HSMJStandingBack
LABEL $3B3A LF33D1161
LABEL $3B5B stagesPointer
LABEL $3B59 stageOk
LABEL $3BB5 doStageSwitchLightsOn
COMMENT_LABEL $3BB5 #isfunction
LABEL $3E67 doStageManComes
LABEL $3D87 doStageScroller
COMMENT_LABEL $3D87 #isfunction
LABEL $3E29 doStageManGoes
LABEL $3B7C doStageWait
LABEL $3EFC doStageBonusExplain
COMMENT_LABEL $3EFC #isfunction
LABEL $44EF doStageParticles
LABEL $4520 doStageDemo
LABEL $3B6D initStageStageWait
COMMENT_LABEL $3B6D #isfunction
LABEL $3B83 initIsDoneStageWait
LABEL $3B9D exitWait
LABEL $3B9E initStageStageSwitchLightsOn
COMMENT_LABEL $3B9E #isfunction
LABEL $3BBC initIsDoneStageSwitchLightsOn
LABEL $3C3E exitThis
LABEL $3BDB not25
LABEL $3BE9 not30
LABEL $3BF7 not35
LABEL $3C05 not40
LABEL $3C13 not45
LABEL $3C1E not70
LABEL $3C29 noLighter
EQU $35 SCROLLTEXTSIZE
EQU $23 BITMAP_LINES_TITLE
COMMENT_LABEL $23 45 ; if higher, the positioning has 8 bit problems, than the "spacing" (4/8) must be adjusted to fit 8 bit ; 25
EQU $02 SPACE_BETWEEN_LINES
COMMENT_LABEL $02 2
EQU $0C SPACE_BETWEEN_STRINGS
COMMENT_LABEL $0C must be multiplyer of lines
LABEL $3C3F printStringList_25_Sync_direct
COMMENT_LABEL $3C3F #isfunction
LABEL $3C44 overstepOtherFontLine2
LABEL $3C4C fontPosOk2
LABEL $CA68 tmp2_lc
LABEL $CA67 it_xlinePrintOffset
LABEL $3C72 LF33D1163
LABEL $3CB5 continuePrinting1164
LABEL $3CA8 nextOne1164
LABEL $3CBF skipWait1164
LABEL $3CD6 decodeChar1164
LABEL $3CE3 repeatTillBreak
LABEL $3D5A breakDueTo25Lines
LABEL $3D29 nextLineToPrint1173
LABEL $3D25 continueNormalLinePrinting1173
LABEL $3D32 continuePrinting1173
LABEL $3D65 completelyOutOfHere
LABEL $3D4B decodeChar1173
LABEL $3D5D LF33D1175
LABEL $3D67 LF33D1176
LABEL $CA64 it_stringCounter
LABEL $CA65 it_lineCounter
LABEL $CA66 it_linePrintOffset
LABEL $CA69 tmp3_lc
LABEL $3D72 initStageScroller
COMMENT_LABEL $3D72 #isfunction
LABEL $485E IntroTextScrollPointers
EQU $59 MAX_STRING_NO_DISPLAY
COMMENT_LABEL $59 64
LABEL $3D8E initIsDoneStageScroller
LABEL $3DDF noChangeStageScroller
LABEL $3DE0 offsetChangeOnly
LABEL $3DDC staLineCounter
LABEL $3DD9 keepStrinGlines
LABEL $3DE9 StageScrollerFinished
LABEL $3DF5 initStageManGoes
LABEL $3E13 doNextLane2
LABEL $3E17 doNextLane1
LABEL $3E23 lanesDone1
LABEL $3E30 initIsDoneStageManGoes
LABEL $3E43 checkOn_st2
LABEL $3E4E initStageManComes
LABEL $3E6E initIsDoneStageManComes
LABEL $3E81 checkOn_st
LABEL $3EDD lowerStageManComes
LABEL $3EC8 higherStageManComes
LABEL $3E8A drawStageManComes
LABEL $3EB8 sizeiscok_2
EQU $03 LAST_STAGES_1
COMMENT_LABEL $03 +19
LABEL $3EE8 initStageBonusExplain
COMMENT_LABEL $3EE8 #isfunction
LABEL $3F03 initIsDoneStageBonusExplain
LABEL $3F16 checkOn_1
LABEL $3FAC lowerStageBonusExplain
LABEL $3F48 higherStageBonusExplain
LABEL $3F21 drawStageBonusExplain
LABEL $3F37 sizeiscok_1
LABEL $3F4D fromlower2_1
EQU $16 LAST_STAGES
LABEL $3F5C noMan_1
LABEL $3FAC noTextDisplay_1
LABEL $3FD0 textPointer2
LABEL $3FCF returnnow1_1
LABEL $400A shot1
LABEL $4014 shot2
LABEL $401E faster
LABEL $402B slower
LABEL $4038 sfaster
LABEL $4045 sslower
LABEL $4052 extrabullet
LABEL $4060 lessbullet
LABEL $406E scoopEnemy
LABEL $407B shielding
LABEL $4083 armoring
LABEL $408A mining
LABEL $4095 mul2
LABEL $40A3 mul5
LABEL $40B1 cashbomb
LABEL $40BC diamondbomb
LABEL $40CA timering
LABEL $40D6 doubleCash
LABEL $40E3 powerUp
LABEL $40ED liveup
EQU $02 ONE_CHAR
EQU $03 HALF_ONE_CHAR
EQU $04 TWO_CHAR
EQU $05 HALF_TWO_CHAR
EQU $06 THREE_CHAR
EQU $08 FOUR_CHAR
EQU $09 HALF_FOUR_CHAR
EQU $05 CHAR_WIDTH
EQU -$42 ORIGIN_TEXT
EQU $39 PARTICLE1_MAX_COUNT
COMMENT_LABEL $39 8 ; max with below RAM
EQU $06 Emitter
EQU $00 EMITTER_DATA
EQU $04 NEXT_OBJECT
EQU $06 EmitterData
EQU $00 YPOS
EQU $01 XPOS
EQU $02 ECOUNTER_RESET
EQU $03 EDATA
EQU $04 ECOUNTER
EQU $05 EANGLE_INC
EQU $06 Particle
EQU $00 P_SCALE
EQU $01 PA_ANGLE
LABEL $40F9 initParticle1
LABEL $CA7F pCount
LABEL $4198 objectsFinished1_pa
LABEL $CA64 PARTICLES_DONE_A
LABEL $CA80 pobject_list
LABEL $CA7B plist_empty_head
LABEL $CA62 PARTICLES_DONE
LABEL $410E next_list_exentry_11186
LABEL $CA7D plist_objects_head
EQU $04 EMITT_ANGLE_ADD
EQU $00 EMITT_DELAY
LABEL $CA69 emitterData1
LABEL $41F1 buildStationaryEmitter
LABEL $CA6F emitterData2
LABEL $CA75 emitterData3
LABEL $CA66 anglechangeCountDown
LABEL $4199 angleAddData
LABEL $CA67 angleChangePointer
LABEL $4169 playParticle1
LABEL $418F noAngleChange
LABEL $41F1 angleAddDataEnd
LABEL $4181 noAngleReset
LABEL $42DD circleData
LABEL $422C newObject
COMMENT_LABEL $422C #isfunction
LABEL $CA66 PLIST_COMPARE_ADDRESS
LABEL $4200 noNewEmitter
LABEL $4201 stationaryEmitterBehaviour
LABEL $4228 noNewParticle
LABEL $4226 noNewParticle2
LABEL $4246 scaledAngleParticleBehaviour
LABEL $4245 cs_done_no
LABEL $4264 LF33D1189
LABEL $42A1 destroyPObject
COMMENT_LABEL $42A1 #isfunction
LABEL $42AF was_not_first_enem
COMMENT_LABEL $42AF find previous, go thru all objects from first and look where "I" am the next...
LABEL $42A8 was_first_enem
LABEL $42CD pRemoveDone
LABEL $42B3 try_next_enem
LABEL $42BC found_next_switch_enem
LABEL $42D7 LF33D1196
EQU $01 DIVIDER_P
LABEL $CA66 startParticleRAM
LABEL $CBD6 pobject_list_end
LABEL $44DD initStageParticles
LABEL $44F6 initIsDoneStageParticles
LABEL $450D stayWithParticels
LABEL $4517 initStageDemo
LABEL $4527 initIsDoneStageDemo
LABEL $452C REPLACE_1_2_main11_varFrom1_21
COMMENT_LABEL $452C bank 1 replace
LABEL $4926 line01a_it
LABEL $4929 line01b_it
LABEL $492C line01_it
LABEL $492F line02_it
LABEL $4932 line03_it
LABEL $4935 line04_it
LABEL $4938 line05_it
LABEL $493B line06_it
LABEL $493E line07_it
LABEL $494B line08_it
LABEL $494E line09_it
LABEL $4951 line10_it
LABEL $4954 line11_it
LABEL $4957 line12_it
LABEL $4962 line13_it
LABEL $496A line14_it
LABEL $4974 line15_it
LABEL $4977 line16_it
LABEL $497A line17_it
LABEL $497D line18_it
LABEL $4980 line19_it
LABEL $498A line20_it
LABEL $4992 line21_it
LABEL $499B line22_it
LABEL $499E line23_it
LABEL $49A1 line24_it
LABEL $49A4 line25_it
LABEL $49A7 line18_ita
LABEL $49B4 line19_ita
LABEL $49BD line20_ita
LABEL $49C5 line51_ita
LABEL $49D0 line22_ita
LABEL $49D3 line23_ita
LABEL $49D6 line24_ita
LABEL $49D9 line25_ita
LABEL $49DC line26_it
LABEL $49E8 line27_it
LABEL $49F2 line28_it
LABEL $49F5 line29_it
LABEL $49F8 line30_it
LABEL $49FB line31_it
LABEL $49FE line32_it
LABEL $4A0A line33_it
LABEL $4A12 line34_it
LABEL $4A15 line35_it
LABEL $4A1E line36_it
LABEL $4A28 line37_it
LABEL $4A35 line38_it
LABEL $4A40 line39_it
LABEL $4A4A line40_it
LABEL $4A53 line41_it
LABEL $4A5E line42_it
LABEL $4A69 line43_it
LABEL $4A74 line44_it
LABEL $4A7F line45_it
LABEL $4A8A line46_it
LABEL $4A94 line47_it
LABEL $4A9E line48_it
LABEL $4AA7 line49_it
LABEL $4AB0 line50_it
LABEL $4AB9 line51_it
LABEL $4AC4 line52_it
LABEL $4AD1 line52_1_it
LABEL $4ADB line52_2_it
LABEL $4AE5 line52_3_it
LABEL $4AEF line52_4_it
LABEL $4AF8 line52ae1_it
LABEL $4AFB line52ae2_it
LABEL $4AFE line52a1_it
LABEL $4B09 line52a2_it
LABEL $4B13 line52a3_it
LABEL $4B1E line52a4_it
LABEL $4B2B line52a_it
LABEL $4B2E line52c_it
LABEL $4B38 line52d_it
LABEL $4B42 line52e_it
LABEL $4B4B line52f_it
LABEL $4B54 line52g_it
LABEL $4B5D line53_it
LABEL $4B60 line54_it
LABEL $4B63 line55_it
LABEL $4B66 line56_it
LABEL $4B69 line57_it
LABEL $4B6C line58_it
LABEL $4B6F line59_it
LABEL $4B7A line60_it
LABEL $4B85 line61_it
LABEL $4B8F line62_it
LABEL $4B92 line63_it
LABEL $4B95 line64_it
LABEL $4B98 line65_it
LABEL $4B9B line66_it
LABEL $4B9E line67_it
LABEL $4BA1 line68_it
LABEL $4BA4 line69_it
LABEL $4BA7 line70_it
LABEL $4BAA line71_it
LABEL $4BAD line72_it
LABEL $4BB0 line73_it
EQU $00 NONE_CHAR
EQU $0A HALF_CHAR
EQU $05 QUAR_CHAR
LABEL $4926 scrollTextsDirect
LABEL $4BB4 doBoss1Intro00
COMMENT_LABEL $4BB4 #isfunction
LABEL $4BB4 doBoss1Intro0_0
COMMENT_LABEL $4BB4 #isfunction
LABEL $4BC2 REPLACE_1_2_boss1Music_varFromIRQ1_1
LABEL $4BC5 REPLACE_1_2_PLYINIT_varFromIRQ1_18
LABEL $4BEC Boss1IntroLoop
LABEL $4BEF REPLACE_1_2_playAKSMusicNoLoop_varFromIRQ1_173
LABEL $4CB4 bosssIntroMain
LABEL $4BFC nextScenePart_b1
LABEL $4C27 lastDraw
LABEL $4C1E LF33D11991199
LABEL $4C29 LF33D12001200
LABEL $4C30 contBoss1Draw
LABEL $4C5C middleShots
LABEL $4C61 lastShots
LABEL $50D6 bossShots_0
LABEL $4C64 ShotsCont
LABEL $5167 bossShots_1
LABEL $51F8 bossShots_2
LABEL $4C66 LF33D12021202
LABEL $5379 drawBossPlayerOnly
LABEL $4C86 noPosChangeb1
LABEL $4CA2 noWait_b1
LABEL $4C98 no100sh
LABEL $4C9F no50sh
LABEL $4CA2 REPLACE_1_2_getButtonState_varFromIRQ1_129
LABEL $4CC8 boss_0
LABEL $4D48 boss_1
LABEL $4DDA boss_2
LABEL $4E2D boss_3
LABEL $4E87 boss_4
LABEL $4EFF boss_5
LABEL $4F89 boss_6
LABEL $4FE1 boss_7
LABEL $5073 boss_8
LABEL $5289 doBoss2Intro00
LABEL $5289 doBoss2Intro0_0
COMMENT_LABEL $5289 #isfunction
LABEL $52A2 REPLACE_1_2_boss2Music_varFromIRQ1_1
LABEL $52A5 REPLACE_1_2_PLYINIT_varFromIRQ1_9
LABEL $52BB boss2IntroLoop
LABEL $52C1 REPLACE_1_2_playAKSMusicNoLoop_varFromIRQ1_9
LABEL $54AA Boss2IntroList
LABEL $52CE nextScenePart_b2
LABEL $52F5 contBoss2Draw
LABEL $52EC LF33D12051205
LABEL $5306 middleAntenna
LABEL $530C closedAntenna
LABEL $53F3 AntennaOpened
LABEL $5310 antennaCont
LABEL $5430 AntennaMiddle
LABEL $546D AntennaClosed
LABEL $5310 nextScenePart_b2o
LABEL $5337 contBoss2ODraw
LABEL $532E LF33D12071207
LABEL $534B noPosChangeB2
LABEL $5367 noWait_b2
LABEL $535D no100
LABEL $5364 no50
LABEL $5367 REPLACE_1_2_getButtonState_varFromIRQ1_49
LABEL $55A4 BossPlayer
LABEL $5380 nextScenePlayerPart
LABEL $53A9 lastDrawBossPlayer
LABEL $53A0 LF33D12091209
LABEL $53BD nonoBPChange
LABEL $53BA noAnimChange_m1_bp
LABEL $53BF LF33D12101210
LABEL $5709 PlayerShipAccelAnim
LABEL $53D2 notEndYet_bp
LABEL $53EC LF33D12121212
LABEL $53F9 AntennaOpened_0
LABEL $5412 AntennaOpened_1
LABEL $5436 AntennaMiddle_0
LABEL $544F AntennaMiddle_1
LABEL $5473 AntennaClosed_0
LABEL $548C AntennaClosed_1
LABEL $54B4 MantisMain_0
LABEL $54FE MantisMain_1
LABEL $553B MantisMain_2
LABEL $5581 MantisMain_3
LABEL $55B2 BossPlayer_0
LABEL $55F7 BossPlayer_1
LABEL $5623 BossPlayer_2
LABEL $565A BossPlayer_3
LABEL $56A7 BossPlayer_4
LABEL $56E2 BossPlayer_5
LABEL $5805 PlayerShipAccel_4
LABEL $57C4 PlayerShipAccel_3
LABEL $5797 PlayerShipAccel_2
LABEL $5756 PlayerShipAccel_1
LABEL $5715 PlayerShipAccel_0
LABEL $5828 doBoss3Intro00
COMMENT_LABEL $5828 #isfunction
LABEL $5828 doBoss3Intro0_0
COMMENT_LABEL $5828 #isfunction
LABEL $5836 REPLACE_1_2_boss3Music_varFromIRQ1_1
LABEL $5839 REPLACE_1_2_PLYINIT_varFromIRQ1_8
LABEL $5860 boss3IntroLoop
LABEL $5866 REPLACE_1_2_playAKSMusicNoLoop_varFromIRQ1_73
LABEL $5B26 SinsitarIntroMain
LABEL $5873 nextScenePart_b3
LABEL $589A contBoss3Draw
LABEL $5891 LF33D12151215
LABEL $58AB middleMouth
LABEL $58B1 closedMouth
LABEL $591F SinsitarIntroClosed
LABEL $58B5 MouthCont
LABEL $59CC SinsitarIntroMiddle
LABEL $5A79 SinsitarIntroOpen
LABEL $58B5 nextScenePart_b3o
LABEL $58DC contBoss3ODraw
LABEL $58D3 LF33D12171217
LABEL $58F1 noPosChangeB3
LABEL $590D noWait_b3
LABEL $5903 no100_sin
LABEL $590A no50_sin
LABEL $590D REPLACE_1_2_getButtonState_varFromIRQ1_29
LABEL $5927 SinsitarIntroClosed_0
LABEL $595E SinsitarIntroClosed_1
LABEL $5987 SinsitarIntroClosed_2
LABEL $59D4 SinsitarIntroMiddle_0
LABEL $5A19 SinsitarIntroMiddle_1
LABEL $5A42 SinsitarIntroMiddle_2
LABEL $5A81 SinsitarIntroOpen_0
LABEL $5AB8 SinsitarIntroOpen_1
LABEL $5AE1 SinsitarIntroOpen_2
LABEL $5B38 SinsitarIntroMain_0
LABEL $5B84 SinsitarIntroMain_1
LABEL $5BBE SinsitarIntroMain_2
LABEL $5C0C SinsitarIntroMain_3
LABEL $5C55 SinsitarIntroMain_4
LABEL $5C9F SinsitarIntroMain_5
LABEL $5CE1 SinsitarIntroMain_6
LABEL $5D23 SinsitarIntroMain_7
LABEL $5D65 boss4Intro
LABEL $5D71 REPLACE_1_2_boss4Music_varFromIRQ1_1
LABEL $5D74 REPLACE_1_2_PLYINIT_varFromIRQ1_19
LABEL $5D9B boss4IntroLoop
LABEL $5DA1 REPLACE_1_2_playAKSMusicNoLoop_varFromIRQ1_19
LABEL $5EC7 Boss4IntroList
LABEL $5DAE nextScenePart_b4
LABEL $5DD5 contBoss4Draw
LABEL $5DCC LF33D12201220
LABEL $5DF1 noEOR1222
LABEL $6047 Boss4IntroTwinklerAnim
LABEL $5DFE LF33D12231223
LABEL $5E0D noEOR1224
LABEL $5E2E LF33D12261226
LABEL $5E3D noEOR1227
LABEL $5E5E LF33D12291229
LABEL $5E6D noEOR1230
LABEL $5E8E LF33D12321232
LABEL $5EAA noPosChangeB4
LABEL $5EB5 noWait_b4
LABEL $5EB5 REPLACE_1_2_getButtonState_varFromIRQ1_19
LABEL $5ED3 Boss4IntroList_0
LABEL $5F00 Boss4IntroList_1
LABEL $5F58 Boss4IntroList_2
LABEL $5F99 Boss4IntroList_3
LABEL $5FF3 Boss4IntroList_4
LABEL $6089 Boss4IntroTwinkler_0
LABEL $6098 Boss4IntroTwinkler_1
LABEL $60A7 Boss4IntroTwinkler_2
LABEL $60B6 Boss4IntroTwinkler_3
LABEL $60C5 Boss4IntroTwinkler_4
LABEL $60D4 Boss4IntroTwinkler_5
LABEL $60E3 Boss4IntroTwinkler_6
LABEL $60F2 Boss4IntroTwinkler_7
LABEL $6101 Boss4IntroTwinkler_8
LABEL $6110 Boss4IntroTwinkler_9
LABEL $611F Boss4IntroTwinkler_10
LABEL $612E Boss4IntroTwinkler_11
LABEL $613D Boss4IntroTwinkler_12
LABEL $614C Boss4IntroTwinkler_13
LABEL $615B Boss4IntroTwinkler_14
LABEL $616A Boss4IntroTwinkler_15
LABEL $6179 Boss4IntroTwinkler_16
LABEL $6188 Boss4IntroTwinkler_17
LABEL $6197 Boss4IntroTwinkler_18
LABEL $61A6 Boss4IntroTwinkler_19
LABEL $61B5 Boss4IntroTwinkler_20
LABEL $61C4 Boss4IntroTwinkler_21
LABEL $61D3 Boss4IntroTwinkler_22
LABEL $61E2 Boss4IntroTwinkler_23
LABEL $61F1 Boss4IntroTwinkler_24
LABEL $6200 Boss4IntroTwinkler_25
LABEL $620F Boss4IntroTwinkler_26
LABEL $621E Boss4IntroTwinkler_27
LABEL $622D Boss4IntroTwinkler_28
LABEL $623C Boss4IntroTwinkler_29
LABEL $624B Boss4IntroTwinkler_30
LABEL $625A showMESSAGE
COMMENT_LABEL $625A #isfunction
LABEL $6263 waitTollReleaseLoop2
LABEL $626E showMESSAGELoop
LABEL $62A2 printMessageAgain
LABEL $62B1 printDoneMessage
LABEL $62C1 button4Pressed
LABEL $62BC button3Pressed
LABEL $62C4 waitTollReleaseLoop
LABEL $62D0 calStringD1
LABEL $62EC calStringD2
LABEL $6309 calStringD3
LABEL $6324 calStringD4
LABEL $6341 calStringD5
LABEL $6355 calStringD6
LABEL $636D calStringD7
LABEL $637A displayList1
LABEL $6398 acalStringD1
LABEL $63B5 acalStringD2
LABEL $63D1 acalStringD3
LABEL $63E2 acalStringD4
LABEL $63E7 acalStringD5
LABEL $63FA acalStringD6
LABEL $6410 displayList2
LABEL $6426 bcalStringD1
LABEL $643F bcalStringD2
LABEL $6457 bcalStringD3
LABEL $6474 bcalStringD4
LABEL $6493 bcalStringD5
LABEL $649B bcalStringD6
LABEL $64B8 bcalStringD7
LABEL $64D4 displayList3
LABEL $64F2 scalStringD1
LABEL $650F scalStringD2
LABEL $6519 scalStringD3
LABEL $6538 scalStringD4
LABEL $6555 scalStringD5
LABEL $656B scalStringD6
LABEL $6589 scalStringD7
LABEL $65A7 displayListSize
LABEL $65C5 swcalStringD1
LABEL $65DF swcalStringD2
LABEL $65FB swcalStringD3
LABEL $6616 swcalStringD4
LABEL $6621 swcalStringD5
LABEL $663D swcalStringD6
LABEL $6657 displayListSwarm
LABEL $6671 bscalStringD1
LABEL $668D bscalStringD2
LABEL $66AD bscalStringD3
LABEL $66CA bscalStringD4
LABEL $66DF displayListBoss
LABEL $66F1 nbscalStringD1
LABEL $670E nbscalStringD2
LABEL $672B nbscalStringD3
LABEL $674B nbscalStringD4
LABEL $676A nbscalStringD5
LABEL $677F nbscalStringD6
LABEL $6785 displayListNormal
LABEL $679F b2calStringD1
LABEL $67BA b2calStringD2
LABEL $67D6 b2calStringD3
LABEL $67E0 b2calStringD4
LABEL $67FC b2calStringD5
LABEL $6819 displayList4
LABEL $682F hsStringD1
LABEL $684C hsStringD2
LABEL $6862 hsStringD3
LABEL $687B hsStringD4
LABEL $688F hsStringD5
LABEL $68A9 hsStringD6
LABEL $68B1 displayListHS
LABEL $68CB showHSHelp
LABEL $68D2 REPLACE_1_2_HSloop1_varFromIRQ1_3
COMMENT_LABEL $68D2 bank 1 replace
LABEL $68D8 hspStringD1
LABEL $68ED hspStringD2
LABEL $6901 hspStringD3
LABEL $691A displayListHSPure
LABEL $6928 showHSPureHelp
LABEL $692F REPLACE_1_2_edithighscoreinner_varFromIRQ1_3
COMMENT_LABEL $692F bank 1 replace
LABEL $6935 psStringD1
LABEL $694E psStringD2
LABEL $6962 psStringD3
LABEL $697C psStringD4
LABEL $6995 psStringD5
LABEL $69AA psStringD6
LABEL $69BA displayListPS
LABEL $69D4 ps1StringD1
LABEL $69DE ps1StringD2
LABEL $69F9 ps1StringD3
LABEL $6A0E ps1StringD4
LABEL $6A1C displayListPS1
LABEL $6A2E showPSHelp
LABEL $6A3C REPLACE_1_2_PSloop1_varFrom0_3
COMMENT_LABEL $6A3C bank 2 replace
LABEL $6A42 msStringD1
LABEL $6A5B msStringD2
LABEL $6A66 msStringD3
LABEL $6A81 msStringD4
LABEL $6A97 msStringD5
LABEL $6AAC msStringD6
LABEL $6ACB msStringD7
LABEL $6ADC displayListMS
LABEL $6AFA showMSHelp
LABEL $6B07 REPLACE_1_2_MSloop1_varFrom1_3
COMMENT_LABEL $6B07 bank 3 replace
LABEL $6B0D vbStringt1
LABEL $6B2A vbStringt2
LABEL $6B47 vbStringt3
LABEL $6B68 vbStringt4
LABEL $6B83 vbStringt5
LABEL $6B90 displayListTI1
LABEL $6BA6 vb2Stringt1
LABEL $6BC4 vb2Stringt2
LABEL $6BE2 vb2Stringt3
LABEL $6BFC vb2Stringt4
LABEL $6C1A vb2Stringt5
LABEL $6C32 vb2Stringt6
LABEL $6C4D vb2Stringt7
LABEL $6C5A displayListTI2
LABEL $6C78 showTitleHelp
LABEL $6C86 REPLACE_1_2_Titleloop1_varFrom0_3
COMMENT_LABEL $6C86 bank 3 replace
LABEL $6C8C asStringD1
LABEL $6CA7 asStringD2
LABEL $6CC1 asStringD3
LABEL $6CE0 asStringD4
LABEL $6CF9 asStringD5
LABEL $6D18 asStringD6
LABEL $6D33 asStringD7
LABEL $6D4F displayListAS1
LABEL $6D6D as2StringD1a
LABEL $6D88 as2StringD2a
LABEL $6DA2 as2StringD3a
LABEL $6DBA displayListAS2a
LABEL $6DC8 as2StringD1
LABEL $6DE6 as2StringD2
LABEL $6E01 as2StringD3
LABEL $6E16 as2StringD4
LABEL $6E31 as2StringD5
LABEL $6E4F as2StringD6
LABEL $6E56 displayListAS2
LABEL $6E70 showASHelp
LABEL $6E85 REPLACE_1_2_displayAchievementReturn_varFromIRQ1_3
COMMENT_LABEL $6E85 bank 1 replace
LABEL $6E8B ssStringD1
LABEL $6EA7 ssStringD2
LABEL $6EC0 ssStringD3
LABEL $6ED9 ssStringD4
LABEL $6EF2 ssStringD5
LABEL $6F0E ssStringD6
LABEL $6F27 ssStringD7
LABEL $6F3B displayListShop1
LABEL $6F59 ss2StringD1
LABEL $6F74 ss2StringD2
LABEL $6F92 ss2StringD3
LABEL $6FA3 ss2StringD4
LABEL $6FBF ss2StringD5
LABEL $6FD0 ss2StringD6
LABEL $6FE9 ss2StringD7
LABEL $7005 displayListShop2
LABEL $7023 ss3StringD1
LABEL $7040 ss3StringD2
LABEL $705E ss3StringD3
LABEL $7071 ss3StringD4
LABEL $708F ss3StringD5
LABEL $709E displayListShop3
LABEL $70B4 ss4StringD1
LABEL $70BD ss4StringD2
LABEL $70D8 ss4StringD3
LABEL $70F4 ss4StringD4
LABEL $70FA ss4StringD5
LABEL $7117 ss4StringD6
LABEL $7126 displayListShop4
LABEL $7140 ss5StringD1
LABEL $7145 ss5StringD2
LABEL $7161 ss5StringD3
LABEL $717E ss5StringD4
LABEL $718E ss5StringD5
LABEL $7193 ss5StringD6
LABEL $71AF ss5StringD7
LABEL $71CA displayListShop5
LABEL $71E8 ss6StringD1
LABEL $71EF ss6StringD2
LABEL $7208 ss6StringD3
LABEL $720E ss6StringD4
LABEL $7215 ss6StringD5
LABEL $7233 ss6StringD6
LABEL $724F ss6StringD7
LABEL $725F displayListShop6
LABEL $727D showShopHelp
LABEL $72AD REPLACE_1_2_shopLoop_varFromIRQ1_3
COMMENT_LABEL $72AD bank 1 replace
LABEL $72B3 opStringt1
LABEL $72CD opStringt2
LABEL $72E9 opStringt3
LABEL $72FB opStringt4
LABEL $7316 opStringt5
LABEL $7326 opStringt6
LABEL $733E opStringt7
LABEL $734E displayListOP1
LABEL $736C op2Stringt1
LABEL $7377 op2Stringt2
LABEL $7393 op2Stringt3
LABEL $73B1 op2Stringt4
LABEL $73CD op2Stringt5
LABEL $73D7 op2Stringt6
LABEL $73DC op2Stringt7
LABEL $73F1 op2Stringt8
LABEL $7404 displayListOP2
LABEL $7426 op3Stringt1
LABEL $7430 op3Stringt2
LABEL $744E op3Stringt3
LABEL $7469 op3Stringt4
LABEL $747B op3Stringt5
LABEL $7481 op3Stringt6
LABEL $749B op3Stringt7
LABEL $74B4 displayListOP3
LABEL $74D2 op4Stringt1
LABEL $74E2 op4Stringt2
LABEL $74FE op4Stringt3
LABEL $7516 displayListOP4
LABEL $7524 op5Stringt1
LABEL $7534 op5Stringt2
LABEL $754F op5Stringt3
LABEL $7567 op5Stringt4
LABEL $757A displayListOP5
LABEL $758C showOptionHelp
LABEL $75AF REPLACE_1_2_optionsLoop_varFrom0_3
COMMENT_LABEL $75AF bank 2 replace
LABEL $75B5 firstStringt1
LABEL $75C9 firstStringt2
LABEL $75E6 firstStringt3
LABEL $7600 firstStringt4
LABEL $761B firstStringt5
LABEL $7626 firstStringt6
LABEL $763D displayListFirst1
LABEL $7657 showFirstHelp
LABEL $765E REPLACE_1_2_doCalib0_varFrom0_3
COMMENT_LABEL $765E bank 2 replace
LABEL $7664 bdfirstStringt1
LABEL $767D bdfirstStringt2
LABEL $768D bdfirstStringt3
LABEL $76A5 bdfirstStringt4
LABEL $76C1 bdfirstStringt5
LABEL $76D4 bdfirstStringt6
LABEL $76F0 displayListFirst1bd
LABEL $770A showBossDeath
LABEL $7717 REPLACE_1_2_backFromBothDeathMessage_varFrom1_3
COMMENT_LABEL $7717 bank 3 replace
LABEL $771D smNoString
LABEL $7735 displaySecretMessageNone
LABEL $773B showSecretMessageNone
LABEL $7749 sm11String
LABEL $775A sm12String
LABEL $7774 sm13String
LABEL $778D sm14String
LABEL $779E displaySecretMessage1
LABEL $77B0 showSecretMessage1
LABEL $77BE sm21String
LABEL $77CF sm22String
LABEL $77E8 sm23String
LABEL $7800 sm24String
LABEL $7810 displaySecretMessage2
LABEL $7822 showSecretMessage2
LABEL $7830 sm31String
LABEL $7841 sm32String
LABEL $7859 sm33String
LABEL $7871 sm34String
LABEL $7881 displaySecretMessage3
LABEL $7893 showSecretMessage3
LABEL $78A1 sm41String
LABEL $78B2 sm42String
LABEL $78CC sm43String
LABEL $78E8 sm44String
LABEL $78FD sm45String
LABEL $7918 sm46String
LABEL $7931 displaySecretMessage4
LABEL $794B showSecretMessage4
LABEL $7959 sm51String
LABEL $796A sm52String
LABEL $7981 sm53String
LABEL $798B sm54String
LABEL $79A0 displaySecretMessage5
LABEL $79B2 showSecretMessage5
LABEL $79C0 sm61String
LABEL $79D1 sm62String
LABEL $79E6 sm63String
LABEL $79FB sm64String
LABEL $7A09 displaySecretMessage6
LABEL $7A1B showSecretMessage6
LABEL $7A29 sm71String
LABEL $7A3A sm72String
LABEL $7A52 sm73String
LABEL $7A61 sm74String
LABEL $7A74 sm75String
LABEL $7A8C sm76String
LABEL $7A9D sm77String
LABEL $7AB0 displaySecretMessage7
LABEL $7ACE showSecretMessage7
LABEL $7ADC rsm71String
LABEL $7AE3 rsm72String
LABEL $7AF8 rsm73String
LABEL $7B06 rsm74String
LABEL $7B15 rsm75String
LABEL $7B24 rsm76String
LABEL $7B32 rsm77String
LABEL $7B4E rdisplayResetMessage
LABEL $7B6C showResetMessage
LABEL $7B7A svg71String
LABEL $7B85 svg72String
LABEL $7B99 svg73String
LABEL $7BAB svg74String
LABEL $7BC7 displaySaveMessage
LABEL $7BD9 showSaveMessage
LABEL $7BE7 ldg71String
LABEL $7BF2 ldg72String
LABEL $7C06 ldg73String
LABEL $7C16 ldg74String
LABEL $7C2E ldg75String
LABEL $7C48 ldg76String
LABEL $7C64 displayLoadMessage
LABEL $7C7E showLoadMessage
LABEL $7C8C yes71String
LABEL $7C91 YesMessage
LABEL $7C97 showYesMessage
LABEL $7CA5 no71String
LABEL $7CA9 NoMessage
LABEL $7CAF showNoMessage
LABEL $7CBD calString1
LABEL $7CC9 questionVectrex
LABEL $7CDB buzzVectrex
LABEL $7CE0 nobuzzVectrex
LABEL $7CE8 buttonToConfirm
LABEL $7CFC buzzOrNoBuzz
COMMENT_LABEL $7CFC #isfunction
LABEL $7CFC showbuzzOrNoBuzzLoop
LABEL $7D65 isNoBuzz
LABEL $7D5D isBuzz
LABEL $7D5D REPLACE_1_2_drawBuzzBox_varFromIRQ1_1
LABEL $7D6B buzzdrawDone
LABEL $7D65 REPLACE_1_2_drawNoBuzzBox_varFromIRQ1_1
LABEL $7D87 noJoyChange
LABEL $7D7F buzGoRight
LABEL $7DA3 noCalibHelp1
LABEL $7DAD initCalibration1
COMMENT_LABEL $7DAD #isfunction
LABEL $7DB0 REPLACE_1_2_initPlayerShotList_varFrom1_1
LABEL $7DB6 REPLACE_1_2_playerShotsDoneBoss01_varFrom0_1
LABEL $7DE2 nextCalibration
LABEL $8033 calibrationLopp
LABEL $8025 calibrationSubs
LABEL $9B11 saveBlockOnChange
COMMENT_LABEL $9B11 #isfunction
LABEL $7E0A againB
LABEL $7E17 REPLACE_1_2_main01_varFrom0_3
COMMENT_LABEL $7E17 bank 0 replace
LABEL $7E1D calib50
COMMENT_LABEL $7E1D #isfunction
LABEL $7E2E noBossHelp
LABEL $7F39 adjustCalibration
LABEL $7E4C REPLACE_1_2_displayBoss1L_varFrom0_7
COMMENT_LABEL $7E4C bank 0 replace
LABEL $7E58 calibText
COMMENT_LABEL $7E58 #isfunction
LABEL $7E70 noTextHelp
LABEL $80A5 MoveToD
LABEL $80BD DrawLined
LABEL $7E87 REPLACE_1_2_displayCalibrationText_varFrom0_0
COMMENT_LABEL $7E87 bank 0 replace
LABEL $7E90 calib16
COMMENT_LABEL $7E90 #isfunction
LABEL $7EA1 noTextHelp2
LABEL $7EB8 REPLACE_1_2_displayHSCalibrationText_varFromIRQ1_3
COMMENT_LABEL $7EB8 bank 0 replace
LABEL $7ED3 REPLACE_1_2_printCalibrationOptionText_varFrom0_3
COMMENT_LABEL $7ED3 bank 0 replace
LABEL $7EE9 calib09
COMMENT_LABEL $7EE9 #isfunction
LABEL $7EFA noNormalHelp
LABEL $7F0C REPLACE_1_2_displaySpriteCalibration_varFrom1_1
LABEL $7F15 calibSwarm
COMMENT_LABEL $7F15 #isfunction
LABEL $7F26 noSwarmHelp
LABEL $7F30 REPLACE_1_2_displaySwarmCalibration_varFrom1_1
LABEL $7F4F joyDoneSwarm
LABEL $7F4B left_moveSwarm
LABEL $7F47 right_moveSwarm
LABEL $7F5A buttonsDone1_6
LABEL $7F63 buttonsDone__16
LABEL $7F64 calibSize
COMMENT_LABEL $7F64 #isfunction
LABEL $7F75 noSizeHelp
LABEL $7FAA joyDoneCalibSize
LABEL $7F99 left_moveSize
LABEL $7F88 right_moveSize
LABEL $8090 no_button
LABEL $8089 buttonPressed
LABEL $809C buttonPressedDone
LABEL $80B8 LF33D1251
LABEL $80D3 FlagWaitdld
LABEL $9C00 SER_BITTIME
COMMENT_LABEL $9C00 $009c = 156 cycles = 9615 baud
LABEL $80DE delayOutput
LABEL $80E5 sertxbit_loop_delay
LABEL $C8C3 vox_input_data
COMMENT_LABEL $C8C3 2,s
LABEL $C8C4 vox_reg7
COMMENT_LABEL $C8C4 ,s
LABEL $C8C5 vox_loop_counter
COMMENT_LABEL $C8C5 1,s
LABEL $80EA ser_txbyte
LABEL $811D sertxbit_loop1252
LABEL $812C sertx_loop
LABEL $814F ser_tx1
LABEL $8131 ser_tx0
LABEL $813E sertxbit_loop1261
LABEL $8169 sertx_next
LABEL $815A sertxbit_loop1270
LABEL $8179 sertxbit_loop1279
LABEL $00EF VOX_DATAMASK
COMMENT_LABEL $00EF bit mask for data line
EQU $20 VOX_STATUSMASK
COMMENT_LABEL $20 bit mask for status line
LABEL $00FF VOX_TERM
COMMENT_LABEL $00FF speech string terminator
LABEL $8196 voxInit
LABEL $81A0 vox_init2
LABEL $81B7 vox_silence
LABEL $81A7 voxSpeak
LABEL $81A7 vox_speak
LABEL $81B6 vox_exit
LABEL $81B9 copySpeechPattern_xu
LABEL $81C5 copySpeechDone
LABEL $81C6 do_0_99
LABEL $81D4 normalVox
LABEL $849B one
LABEL $8587 hundred
LABEL $8266 none_0_99
LABEL $81EA noNinety
LABEL $8576 ninety
LABEL $8268 doSingles
LABEL $81FB noEighty
LABEL $8570 eighty
LABEL $820C noSeventy
LABEL $8563 seventy
LABEL $821D noSixty
LABEL $8559 sixty
LABEL $822E noFifty
LABEL $8552 fifty
LABEL $8240 noFourty
LABEL $854B fourty
LABEL $8252 noThrirty
LABEL $8543 thirty
LABEL $8264 noTwenty
LABEL $8537 twenty
LABEL $8277 noSingles
LABEL $8593 tab1
LABEL $8278 levelSpeech
LABEL $848D voxLevel
LABEL $828B lNextByte
LABEL $8297 levelOutPutDone
LABEL $82AA levelOk
LABEL $82AE voxRun
LABEL $82B8 voxCoward
LABEL $82C5 voxIHunger
LABEL $82E7 voxBeware
LABEL $82F9 voxBonus
LABEL $8306 voSingleShot
LABEL $831B voxDoubleShot
LABEL $8332 voxMoney
LABEL $8333 voxScoop
LABEL $833E voxRankMarker
LABEL $834F voxExtraLetter
LABEL $8366 voxFighterSpeed
LABEL $8376 voxShotSpeed
LABEL $8388 voxExtraBullet
LABEL $839F voxSucker
LABEL $83AD voxShield
LABEL $83BB voxArmor
LABEL $83C8 voxMinestorm
LABEL $83DE voxMultiply
LABEL $83EF voxCashBomb
LABEL $83FF voxDiamondBomb
LABEL $8415 voxTime
LABEL $8421 voxDoubleCash
LABEL $8434 voxShotPower
LABEL $8449 voxExtraLife
LABEL $845C voxDrunken
LABEL $8469 voxAutofire
LABEL $8478 voxTrippleShot
LABEL $0080 IY
COMMENT_LABEL $0080 See, Even, Feed
LABEL $0081 IH
COMMENT_LABEL $0081 Sit, Fix, Pin
LABEL $0082 EY
COMMENT_LABEL $0082 Hair, Gate, Beige
LABEL $0083 EH
COMMENT_LABEL $0083 Met, Check, Red
LABEL $0084 AY
COMMENT_LABEL $0084 Hat, Fast, Fan
LABEL $0085 AX
COMMENT_LABEL $0085 Cotten
LABEL $0086 UX
COMMENT_LABEL $0086 Luck, Up, Uncle
LABEL $0087 OH
COMMENT_LABEL $0087 Hot, Clock, Fox
LABEL $0088 AW
COMMENT_LABEL $0088 Father, Fall
LABEL $0089 OW
COMMENT_LABEL $0089 Comb, Over, Hold
LABEL $008A UH
COMMENT_LABEL $008A Book, Could, Should
LABEL $008B UW
COMMENT_LABEL $008B Food, June
LABEL $008C MM
COMMENT_LABEL $008C Milk, Famous,
LABEL $008D NE
COMMENT_LABEL $008D Nip, Danger, Thin
LABEL $008E NO
COMMENT_LABEL $008E No, Snow, On
LABEL $008F NGE
COMMENT_LABEL $008F Think, Ping
LABEL $0090 NGO
COMMENT_LABEL $0090 Hung, Song
LABEL $0091 LE
COMMENT_LABEL $0091 Lake, Alarm, Lapel
LABEL $0092 LO
COMMENT_LABEL $0092 Clock, Plus, Hello
LABEL $0093 WW
COMMENT_LABEL $0093 Wool, Sweat
LABEL $0094 RR
COMMENT_LABEL $0094 Ray, Brain, Over
LABEL $0095 IYRR
COMMENT_LABEL $0095 Clear, Hear, Year
LABEL $0096 EYRR
COMMENT_LABEL $0096 Hair, Stair, Repair
LABEL $0097 AXRR
COMMENT_LABEL $0097 Fir, Bird, Burn
LABEL $0098 AWRR
COMMENT_LABEL $0098 Part, Farm, Yarn
LABEL $0099 OWRR
COMMENT_LABEL $0099 Corn, Four, Your
LABEL $009A EYIY
COMMENT_LABEL $009A Gate, Ate, Ray
LABEL $009B OHIY
COMMENT_LABEL $009B Mice, Fight, White
LABEL $009C OWIY
COMMENT_LABEL $009C Boy, Toy, Voice
LABEL $009D OHIH
COMMENT_LABEL $009D Sky, Five, I
LABEL $009E IYEH
COMMENT_LABEL $009E Yes, Yarn, Million
LABEL $009F EHLL
COMMENT_LABEL $009F Saddle, Angle, Spell
LABEL $00A0 IYUW
COMMENT_LABEL $00A0 Cute, Few,
LABEL $00A1 AXUW
COMMENT_LABEL $00A1 Brown, Clown, Thousan
LABEL $00A2 IHWW
COMMENT_LABEL $00A2 Two, New, Zoo
LABEL $00A3 AYWW
COMMENT_LABEL $00A3 Our, Ouch, Owl
LABEL $00A4 OWWW
COMMENT_LABEL $00A4 Go, Hello, Snow
LABEL $00A5 JH
COMMENT_LABEL $00A5 Dodge, Jet, Savage
LABEL $00A6 VV
COMMENT_LABEL $00A6 Vest, Even,
LABEL $00A7 ZZ
COMMENT_LABEL $00A7 Zoo, Zap
LABEL $00A8 ZH
COMMENT_LABEL $00A8 Azure, Treasure
LABEL $00A9 DH
COMMENT_LABEL $00A9 There, That, This
LABEL $00AA BE
COMMENT_LABEL $00AA Bear, Bird, Beed
LABEL $00AB BO
COMMENT_LABEL $00AB Bone, Book Brown
LABEL $00AC EB
COMMENT_LABEL $00AC Cab, Crib, Web
LABEL $00AD OB
COMMENT_LABEL $00AD Bob, Sub, Tub
LABEL $00AE DE
COMMENT_LABEL $00AE Deep, Date, Divide
LABEL $00AF DO
COMMENT_LABEL $00AF Do, Dust, Dog
LABEL $00B0 ED
COMMENT_LABEL $00B0 Could, Bird
LABEL $00B1 OD
COMMENT_LABEL $00B1 Bud, Food
LABEL $00B2 GE
COMMENT_LABEL $00B2 Get, Gate, Guest,
LABEL $00B3 GO
COMMENT_LABEL $00B3 Got, Glue, Goo
LABEL $00B4 EG
COMMENT_LABEL $00B4 Peg, Wig
LABEL $00B5 OG
COMMENT_LABEL $00B5 Dog, Peg
LABEL $00B6 CH
COMMENT_LABEL $00B6 Church, Feature, March
LABEL $00B7 HE
COMMENT_LABEL $00B7 Help, Hand, Hair
LABEL $00B8 HO
COMMENT_LABEL $00B8 Hoe, Hot, Hug
LABEL $00B9 WH
COMMENT_LABEL $00B9 Who, Whale, White
LABEL $00BA FF
COMMENT_LABEL $00BA Food, Effort, Off
LABEL $00BB SE
COMMENT_LABEL $00BB See, Vest, Plus
LABEL $00BC SO
COMMENT_LABEL $00BC So, Sweat
LABEL $00BD SH
COMMENT_LABEL $00BD Ship, Fiction, Leash
LABEL $00BE TH
COMMENT_LABEL $00BE Thin, month
LABEL $00BF TT
COMMENT_LABEL $00BF Part, Little, Sit
LABEL $00C0 TU
COMMENT_LABEL $00C0 To, Talk, Ten
LABEL $00C1 TS
COMMENT_LABEL $00C1 Parts, Costs, Robots
LABEL $00C2 KE
COMMENT_LABEL $00C2 Can't, Clown, Key
LABEL $00C3 KO
COMMENT_LABEL $00C3 Comb, Quick, Fox
LABEL $00C4 EK
COMMENT_LABEL $00C4 Speak, Task
LABEL $00C5 OK
COMMENT_LABEL $00C5 Book, Took, October
LABEL $00C6 PE
COMMENT_LABEL $00C6 People, Computer
LABEL $00C7 PO
COMMENT_LABEL $00C7 Paw, Copy
LABEL $00C8 R0
LABEL $00C9 R1
LABEL $00CA R2
LABEL $00CB R3
LABEL $00CC R4
LABEL $00CD R5
LABEL $00CE R6
LABEL $00CF R7
LABEL $00D0 R8
LABEL $00D1 R9
LABEL $00D2 A0
COMMENT_LABEL $00D2 Sounds a bit like the Jungle Hunt rope noise
LABEL $00D3 A1
COMMENT_LABEL $00D3 Rising "Giggle Stick" (remember the Giggle Stick?)
LABEL $00D4 A2
COMMENT_LABEL $00D4 Falling "Giggle Stick"
LABEL $00D5 A3
COMMENT_LABEL $00D5 Rising "Giggle Stick" (higher)
LABEL $00D6 A4
COMMENT_LABEL $00D6 Rising sweep
LABEL $00D7 A5
COMMENT_LABEL $00D7 Siren (fall, then rise)
LABEL $00D8 A6
COMMENT_LABEL $00D8 Fast rising siren
LABEL $00D9 A7
COMMENT_LABEL $00D9 Slow rising siren
LABEL $00DA A8
COMMENT_LABEL $00DA Whoot-wheet
LABEL $00DB A9
COMMENT_LABEL $00DB High-pitched falling siren
LABEL $00DC B0
COMMENT_LABEL $00DC High beep
LABEL $00DD B1
COMMENT_LABEL $00DD R2D2 falling
LABEL $00DE B2
COMMENT_LABEL $00DE R2D2 talking 1
LABEL $00DF B3
COMMENT_LABEL $00DF R2D2 talking 2
LABEL $00E0 B4
COMMENT_LABEL $00E0 AM radio tuning (long)
LABEL $00E1 B5
COMMENT_LABEL $00E1 AM radio tuning (short)
LABEL $00E2 B6
COMMENT_LABEL $00E2 Bleep (sci-fi button press)
LABEL $00E3 B7
COMMENT_LABEL $00E3 2-tone
LABEL $00E4 B8
COMMENT_LABEL $00E4 Air leaking from a balloon
LABEL $00E5 B9
COMMENT_LABEL $00E5 Sci-fi "computing" noise
LABEL $00E6 C0
COMMENT_LABEL $00E6 Laser gun [*]
LABEL $00E7 C1
COMMENT_LABEL $00E7 Sound like "Cry"
LABEL $00E8 C2
COMMENT_LABEL $00E8 Sounds like "Words" [*]
LABEL $00E9 C3
COMMENT_LABEL $00E9 Cricket [*]
LABEL $00EA C4
COMMENT_LABEL $00EA Oui [*]
LABEL $00EB C5
LABEL $00EC C6
COMMENT_LABEL $00EC "Yoink" [*]
LABEL $00ED C7
LABEL $00EE C8
COMMENT_LABEL $00EE R2D2 raspberry
LABEL $00EF C9
COMMENT_LABEL $00EF R2D2 chirp
LABEL $00FC M0
COMMENT_LABEL $00FC Sonar Ping
LABEL $00FD M1
COMMENT_LABEL $00FD Pistol Shot (actually, sounds more like a snare drum)
LABEL $00FE M2
COMMENT_LABEL $00FE WOW [*]
LABEL $00FC PING
LABEL $00FD SHOT
LABEL $00FE WOW
LABEL $00F0 D0
COMMENT_LABEL $00F0 0
LABEL $00F1 D1
COMMENT_LABEL $00F1 1
LABEL $00F2 D2
COMMENT_LABEL $00F2 2
LABEL $00F3 D3
COMMENT_LABEL $00F3 3
LABEL $00F4 D4
COMMENT_LABEL $00F4 4
LABEL $00F5 D5
COMMENT_LABEL $00F5 5
LABEL $00F6 D6
COMMENT_LABEL $00F6 6
LABEL $00F7 D7
COMMENT_LABEL $00F7 7
LABEL $00F8 D8
COMMENT_LABEL $00F8 8
LABEL $00F9 D9
COMMENT_LABEL $00F9 9
LABEL $00FA D10
COMMENT_LABEL $00FA *
LABEL $00FB D11
COMMENT_LABEL $00FB #
EQU $00 PAUSE0
COMMENT_LABEL $00 Pause 0 (0ms, the SpeakJet equivalent of NOP?)
EQU $01 PAUSE1
COMMENT_LABEL $01 Pause 1 (100ms, don't wait for silence)
EQU $02 PAUSE2
COMMENT_LABEL $02 Pause 2 (200ms, don't wait for silence)
EQU $03 PAUSE3
COMMENT_LABEL $03 Pause 3 (700ms, don't wait for silence)
EQU $04 PAUSE4
COMMENT_LABEL $04 Pause 4 (30ms, wait for silence)
EQU $05 PAUSE5
COMMENT_LABEL $05 Pause 5 (60ms, wait for silence)
EQU $06 PAUSE6
COMMENT_LABEL $06 Pause 6 (90ms, wait for silence)
LABEL $00FF EOP
COMMENT_LABEL $00FF End of Phrase
LABEL $00FF END
EQU $07 FAST
COMMENT_LABEL $07 Play Next Sound Fast
EQU $08 SLOW
COMMENT_LABEL $08 Play Next Sound Slow
EQU $0E STRESS
COMMENT_LABEL $0E Play Next Sound High Tone
EQU $0F RELAX
COMMENT_LABEL $0F Play Next Sound Low Tone
EQU $10 WAIT
COMMENT_LABEL $10 Wait
EQU $14 VOLUME
COMMENT_LABEL $14 Volume, X = 0-127, default 96
EQU $15 SPEED
COMMENT_LABEL $15 Speed, X = 0-127, default 114
EQU $16 PITCH
COMMENT_LABEL $16 Pitch, X = 0-255 (in Hz), default 88
EQU $17 BEND
COMMENT_LABEL $17 Bend, X = 0-15, default 5
EQU $1A RPT
COMMENT_LABEL $1A Repeat, X = 0-255 (# of times to repeat next code)
EQU $1E DELAY
COMMENT_LABEL $1E Delay, X = 0-255 (in 10ms intervals)
EQU $1F RESET
COMMENT_LABEL $1F Reset Defaults for Volume, Speed, Pitch, Bend
LABEL $84A2 two
LABEL $84A7 three
LABEL $84AE four
LABEL $84B4 five
LABEL $84B9 six
LABEL $84C2 seven
LABEL $84CB eight
LABEL $84D0 nine
LABEL $84D6 ten
LABEL $84DC eleven
LABEL $84E6 twelve
LABEL $84EF thirteen
LABEL $84F8 fourteen
LABEL $8501 fifteen
LABEL $8509 sixteen
LABEL $8516 seventeen
LABEL $8525 eighteen
LABEL $852C nineteen
LABEL $857F zero
LABEL $85BB tab2
LABEL $85CB doFighterPrep
LABEL $85EB noTimerActive
LABEL $8611 animCounterFighterOk
LABEL $860E resetAnim
LABEL $8617 drawFighter
LABEL $8619 LF33D1313
LABEL $8683 notDrunk
LABEL $863C LF33D1315
LABEL $867F LF33D1323
LABEL $8695 drawFighterDoneShort
LABEL $86A6 testNext1
LABEL $8786 continueDrawFighter
LABEL $86CC testNext2
LABEL $86C6 endBonusShield
LABEL $86C3 noFlickerShield
LABEL $8781 endBonusScoop
LABEL $86E8 noFlickerScoop
LABEL $86F8 anotherScoopLoop1324
LABEL $8713 LF33D1325
LABEL $8732 LF33D1326
LABEL $8753 LF33D1327
LABEL $8772 LF33D1328
LABEL $878F drawFighterDone
LABEL $879F drawEND
LABEL $C8E3 titletextIntensity
LABEL $C817 titletextFadeDirection
LABEL $C818 titletextDisplayDone
LABEL $87A0 showLevelTitleStep
LABEL $8809 warpFailureOnly
LABEL $001F TITLE_TEXT_LENGTH
LABEL $8856 level00Title
LABEL $87DD goBrighter_tt
LABEL $87C5 goDarker_tt
LABEL $87EE continueDisplayText_tt
LABEL $8835 notLastLive
LABEL $8826 noLight
LABEL $8829 yesLight
LABEL $883C lastLiveWarning
LABEL $8856 level01Title
LABEL $8875 level02Title
LABEL $8894 level03Title
LABEL $88B3 level04Title
LABEL $88D2 level05Title
LABEL $88F1 level06Title
LABEL $8910 level07Title
LABEL $892F level08Title
LABEL $894E level09Title
LABEL $896D level10Title
LABEL $898C level11Title
LABEL $89AB level12Title
LABEL $89CA level13Title
LABEL $89E9 level14Title
LABEL $8A08 level15Title
LABEL $8A27 level16Title
LABEL $8A46 level17Title
LABEL $8A65 level18Title
LABEL $8A84 level19Title
LABEL $8AA3 level20Title
LABEL $8AC2 level21Title
LABEL $8AE1 level22Title
LABEL $8B00 level23Title
LABEL $8B1F level24Title
LABEL $8B3E level2XTitle
LABEL $8B5D level25Title
LABEL $8B7C level26Title
LABEL $8B9B level27Title
LABEL $8BBA level28Title
LABEL $8BD9 level29Title
LABEL $8BF8 level30Title
LABEL $8C17 level31Title
LABEL $8C36 level32Title
LABEL $8C55 level33Title
LABEL $8C74 level34Title
LABEL $8C93 level35Title
LABEL $8CB2 level36Title
LABEL $8CD1 level37Title
LABEL $8CF0 level38Title
LABEL $8D0F level39Title
LABEL $8D2E level40Title
LABEL $8D4D level41Title
LABEL $8D6C level42Title
LABEL $8D8B level43Title
LABEL $8DAA level44Title
LABEL $8DC9 level45Title
LABEL $8DE8 level46Title
LABEL $8E07 level47Title
LABEL $8E26 level48Title
LABEL $8E45 level49Title
LABEL $8E64 level5XTitle
LABEL $8E83 level50Title
LABEL $8EA2 level51Title
LABEL $8EC1 level52Title
LABEL $8EE0 level53Title
LABEL $8EFF level54Title
LABEL $8F1E level55Title
LABEL $8F3D level56Title
LABEL $8F5C level57Title
LABEL $8F7B level58Title
LABEL $8F9A level59Title
LABEL $8FB9 level60Title
LABEL $8FD8 level61Title
LABEL $8FF7 level62Title
LABEL $9016 level63Title
LABEL $9035 level64Title
LABEL $9054 level65Title
LABEL $9073 level66Title
LABEL $9092 level67Title
LABEL $90B1 level68Title
LABEL $90D0 level69Title
LABEL $90EF level70Title
LABEL $910E level71Title
LABEL $912D level72Title
LABEL $914C level73Title
LABEL $916B level74Title
LABEL $918A level7XTitle
LABEL $91A9 level75Title
LABEL $91C8 level76Title
LABEL $91E7 level77Title
LABEL $9206 level78Title
LABEL $9225 level79Title
LABEL $9244 level80Title
LABEL $9263 level81Title
LABEL $9282 level82Title
LABEL $92A1 level83Title
LABEL $92C0 level84Title
LABEL $92DF level85Title
LABEL $92FE level86Title
LABEL $931D level87Title
LABEL $933C level88Title
LABEL $935B level89Title
LABEL $937A level90Title
LABEL $9399 level91Title
LABEL $93B8 level92Title
LABEL $93D7 level93Title
LABEL $93F6 level94Title
LABEL $9415 level95Title
LABEL $9434 level96Title
LABEL $9453 level97Title
LABEL $9472 level98Title
LABEL $9491 level99Title
LABEL $94B0 level9XTitle
LABEL $94CF initDeathBonus
LABEL $954F behaviourData
LABEL $94E0 doNextBonusSpawn
LABEL $954A bonusData1
LABEL $94EE okokok
LABEL $94F7 okokokok
LABEL $9509 nobonusAvailableCheck
LABEL $9539 overStepBonusGeneration
LABEL $9509 bonusAvailable
LABEL $9509 REPLACE_1_2_spawnBonus_varFrom0_112
LABEL $953E noBonusToSpawn
LABEL $9533 notfasterBonus
LABEL $952D not2shot
LABEL $9533 not3shot
LABEL $9544 REPLACE_1_2_returnDeathBonus_varFrom1_1
LABEL $954F REPLACE_0_2_risingBonusBehaviourX0_varFrom0_1
LABEL $9551 REPLACE_0_2_risingBonusBehaviourXp1_varFrom0_1
LABEL $9553 REPLACE_0_2_risingBonusBehaviourXn1_varFrom0_1
LABEL $9555 REPLACE_0_2_risingBonusBehaviourXp2_varFrom0_1
LABEL $9557 REPLACE_0_2_risingBonusBehaviourXn2_varFrom0_1
LABEL $9559 drawCandleStepComplete
LABEL $96B3 drawStump
LABEL $9577 phase0
LABEL $9585 phase1
LABEL $95A0 phase2
LABEL $95BF phase3
LABEL $95FE phase4
LABEL $9582 startPhase1
LABEL $971B drawCandleStep
LABEL $9599 noWindUpdate
LABEL $959D startPhase2
LABEL $95BC startPhase3
LABEL $95CD noEOR1331
LABEL $95F8 startPhase4
LABEL $95E1 noEOR1332
LABEL $9678 initSmoke
LABEL $9609 okok
LABEL $9619 noValChange
LABEL $962A smokIntOk
LABEL $97C3 drawSmokeStep
LABEL $962E initCandle
LABEL $9929 xUpdate
LABEL $0013 COUNTER_X
LABEL $993D smokeValues
LABEL $995F Candle_0
LABEL $9996 Candle_1
LABEL $99D9 Candle_2
LABEL $9A04 Candle_3
LABEL $971A goBackCandle
LABEL $9726 flame
LABEL $972E noEOR1337
LABEL $9753 LF33D1339
LABEL $9860 drawCandle
LABEL $978F xdoneAll
LABEL $9768 noEOR1340
LABEL $977D xneg
LABEL $978B xDone
LABEL $97C2 ydoneAll
LABEL $979B noEOR1341
LABEL $97B0 yneg
LABEL $97BE yDone
LABEL $97CB noEOR1342
LABEL $97F0 LF33D1344
LABEL $98DF drawSmoke
LABEL $982C xdoneAll_sm
LABEL $9805 noEOR1345
LABEL $981A xneg_sm
LABEL $9828 xDone_sm
LABEL $985F ydoneAll_sm
LABEL $9838 noEOR1346
LABEL $984D yneg_sm
LABEL $985B yDone_sm
LABEL $9885 x_update_loop_init
LABEL $988A x_update_loop
LABEL $9898 finnish_x_update
LABEL $989D secondHalf
LABEL $98BF x_update_loop2
LABEL $98CD finnish_x_update2
LABEL $9909 x_update_loop_sm
LABEL $9917 finnish_x_update_sm
EQU $05 SS
LABEL $9A29 initFlash
COMMENT_LABEL $9A29 #isfunction
LABEL $9B3C checkFlash
COMMENT_LABEL $9B3C #isfunction
LABEL $9A58 flashErrorOut
LABEL $B000 flashRAMROM
LABEL $9A39 checkNextBlock
LABEL $9A4F flashBlockFound
LABEL $9A59 readOptionsOnly
COMMENT_LABEL $9A59 #isfunction
LABEL $9A72 readHighscore
LABEL $9A5F copyOptionsLoop
LABEL $9A7D copyHSLoop
LABEL $9A85 eraseSector
COMMENT_LABEL $9A85 #isfunction
LABEL $9AC9 flashErrorOutR1
LABEL $9A91 eraseSector_2RAM
LABEL $9AA1 eraseSector_Start
LABEL $9A97 eraseSector_copyNextWord
LABEL $9ACA eraseSector_End
LABEL $9ABF eraseToggleWait
LABEL $9ACA findNextFlashBlock
COMMENT_LABEL $9ACA #isfunction
LABEL $9ADA blockAddressOk
LABEL $9ADE saveCurrentBlock
COMMENT_LABEL $9ADE #isfunction
LABEL $9B87 writeFlashByte_2RAM
LABEL $9AF3 writeNextOptionByte
LABEL $9B03 writeNextHSByte
LABEL $9B20 compareOptionsNextByte
LABEL $9B2F compareHSNextByte
LABEL $9D81 checkForSavedGameFlash
LABEL $9B44 checkFlash_2RAM
LABEL $9B54 checkFlash_Start
LABEL $9B4A checkFlash_copyNextWord
LABEL $9B87 checkFlash_End
LABEL $9B7E flashOk_out
LABEL $9B75 flashNotOk_out
LABEL $9B97 writeFlashByte_Start
LABEL $9B8D writeFlashByte_copyNextWord
LABEL $9BB1 writeFlashByte_End
LABEL $9BA8 writeByteToggleLoop
LABEL $9BB1 eraseSector_Startra000
LABEL $9BCF eraseToggleWaitra000
LABEL $9BD9 flashErrorOutra000
LABEL $9BDA eraseSector_Endra000
LABEL $9BDA eraseSectora000
COMMENT_LABEL $9BDA #isfunction
LABEL $9BE8 eraseSector_2RAMra000
LABEL $C9AA bank0flashUserRAM
LABEL $9BEE eraseSector_copyNextWordra000
LABEL $9BF8 writeFlashByte_2RAMA000
LABEL $9BFE writeFlashByte_copyNextWordA000
LABEL $9C08 displayFlashError
LABEL $B000 defaultValuesStart
LABEL $9C14 flashErrorLoop
LABEL $9C51 error1
LABEL $9C61 error2
LABEL $9C76 error3
LABEL $9C4B REPLACE_1_2_doCalib0_varFrom0_31
LABEL $9C86 noChosen
LABEL $9C86 REPLACE_1_2_optionsLoop_varFrom0_321
LABEL $9C8C doReset
LABEL $9D9A resetOptionsStart
LABEL $9C9B copyOptionLoop1
LABEL $9DAA resetOptionsEnd
LABEL $9DAA resetHighScoreStart
LABEL $9CAA copyHighScoreLoop
LABEL $9DCA resetHighScoreEnd
LABEL $9CB9 copyHighScoreLoop2
LABEL $9CC5 REPLACE_1_2_main00_varFrom0_321
LABEL $9CCB saveGameToFlashNMI
COMMENT_LABEL $9CCB #isfunction
LABEL $000C SAVE_GAME_MARKER
COMMENT_LABEL $000C some number != 0 and != ff
LABEL $9CDB writeNextRAMByteNMI
LABEL $C9A6 saveUREG
LABEL $C9A8 saveSREG
LABEL $9CE9 saveGameToFlash
COMMENT_LABEL $9CE9 #isfunction
LABEL $9D5A saveCurrentGame
COMMENT_LABEL $9D5A #isfunction
LABEL $9D41 backFromStorage
LABEL $9D01 loadGameFromFlash
COMMENT_LABEL $9D01 #isfunction
LABEL $9D5A thereIsNoSavedGame
LABEL $9D10 copyGameLoop
LABEL $9D1E noflashStart
LABEL $9D30 notCopy2
LABEL $9D2E copyOk2
LABEL $9D48 REPLACE_1_2_initStars_varFrom1_31
LABEL $9D4E REPLACE_1_2_spawnStar_varFrom1_31
LABEL $9D54 REPLACE_1_2_pauseLoop_varFrom0_3
COMMENT_LABEL $9D54 bank 2 replace
LABEL $9D73 writeNextRAMByte
LABEL $9D91 yesAvailable
EQU $00 ASSUME_CALIBRATION
EQU $00 LEVEL_SELECT
LABEL $B030 hardcore
LABEL $B050 defaultValuesEnd
LABEL $C1D7 *
COMMENT_LINE $0000 ; hey dissi "watch $circleHalf 2 0"
COMMENT_LINE $0000 before is free for any "shit"
COMMENT_LINE $0000 a000 4k save game
COMMENT_LINE $0000 b000 4k highscore saves
COMMENT_LINE $0000 about 9k free
COMMENT_LINE $0000 xxxx bytes free
COMMENT_LINE $0000 following is needed for VIDE
COMMENT_LINE $0000 to replace "vars" in this bank with values from the other bank
COMMENT_LINE $0000 #genVarlist# varFromIRQ0
COMMENT_LINE $0000 TODO:
COMMENT_LINE $0000 und zwar ist mir bei mir und in bildern/videos anderer aufgefallen, dass das bild leicht nach links verschoben ist,
COMMENT_LINE $0000 zumindest aber das quadrat in der kalibration
COMMENT_LINE $0000 DB       "VERSION 1.00"              ; Cartridges 1-30
COMMENT_LINE $0000 DB       "VERSION 1.01"              ; Cartridges 1-31 - "all" fixed: Immunity 2 games by wheel, was ovewritten bei level rollover
COMMENT_LINE $0000 DB       "VERSION 1.02"              ; fixed: Immunity setting could overwrite multiplyer, that caused the mulitplyer to
COMMENT_LINE $0000 be "0" whiech effectively was 256 -> huge scores!
COMMENT_LINE $0000 DB       "VERSION 1.03"              ; fixed: bug in boss 4, gamescale positive -> endless loop
COMMENT_LINE $0000 fixed: pause mode glitch, shots can go thru shields
COMMENT_LINE $0000 fixed:in dodger was potential to get the multiplyers mixed up
COMMENT_LINE $0000 added version number to title
COMMENT_LINE $0000 todo: no warp, difficulty up, some more powerm no achievements, different high score, no warp
COMMENT_LINE $0000 Enemies have one bullet less (need RAM)
COMMENT_LINE $0000 song: introMusic is replaced with title music (one song less), needed ROM space
COMMENT_LINE $0000 so if "nmi" testing is done, STACK this must be changed
COMMENT_LINE $0000 but beware!!! if lower than $CBFC
COMMENT_LINE $0000 Stack underflow will occur at some stage!!! - unless precaution is taken!
COMMENT_LINE $0000 no save game possible
COMMENT_LINE $0000 not enabled with VecFever
COMMENT_LINE $0000 if enabled "normal" save game is disabled!
COMMENT_LINE $0000 less stars
COMMENT_LINE $0000 1 less player shot
COMMENT_LINE $0000 wheel does not show, and gives random results
COMMENT_LINE $0000 ................
COMMENT_LINE $0000 . VecFever Start
COMMENT_LINE $0000 ................
COMMENT_LINE $0000 if  VecFever = 1
COMMENT_LINE $0000 Vectorblade ASSUMES a VecFever is present!
COMMENT_LINE $0000 no Further testing is done, VecFever facilities are used without questions... or answers!
COMMENT_LINE $0000 Also VecFever with a IRQ (address-)line and Firmware >= 1.21 is assumed.
COMMENT_LINE $0000 In that case options and highscores are saved using the
COMMENT_LINE $0000 ShadowRAM and copy to ROM feature (upper 16k)
COMMENT_LINE $0000 The V4E structure lies in Bank 1 ($8030) - followed by options and the highscore table(s).
COMMENT_LINE $0000 VECFEVER_FAKE = 1 ; don't execute any RAM/ROM copy for persistency
COMMENT_LINE $0000 COLOR LED not working due to timing issues in VecFever
COMMENT_LINE $0000 Thomas disabled LED with IRQ-rom access (V4E type 10)
COMMENT_LINE $0000 ...............
COMMENT_LINE $0000 . VecFever End
COMMENT_LINE $0000 ...............
COMMENT_LINE $0000 defines for game difficulties
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . Test values Start
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . REAL values Start
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 LEVEL_SELECT        =        1 ; enable select difficulty levek (by adding achievements
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . REAL values End
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 directions
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 all banks start with this!
COMMENT_LINE $0000 this file is part of Vectorblade, written by Malban in 2018-2020
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 DEFINE SECTION
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 load vectrex bios routine definitions
COMMENT $C800 RAM and defines
COMMENT_LINE $C800 all banks
COMMENT_LINE $C800 this file is part of Vectorblade, written by Malban in 2018-2020
COMMENT $C800 if = 0, than old "INIT_SHOT_TEST" must be used!
COMMENT_LINE $C800 ;;;;
COMMENT_LINE $C800 enemy behaviour defines
COMMENT_LINE $C800 Single attack pattern
COMMENT_LINE $C800 TYPE of pattern, pattern address/data
COMMENT_LINE $C800 can not drop randomly - only frommoney mothership!
COMMENT_LINE $C800 random drops
COMMENT_LINE $C800 load vectrex bios routine definitions
COMMENT $C800 vectrex function includes
COMMENT_LINE $C800 commented out, all functions that are hurtfull to cranky VIA
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C800 this file contains includes for vectrex BIOS functions and variables      ;
COMMENT_LINE $C800 it was written by Bruce Tomlin, slighte changed by Malban                 ;
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C800 $C839                             ;Pointer to copyright string during startup
COMMENT_LINE $C800 $C83B                             ;High score cold-start flag (=0 if valid)
COMMENT_LINE $C800 $C83C                             ;temp byte
COMMENT_LINE $C800 $C840                             ;        register 12
COMMENT_LINE $C800 $C841                             ;        register 11
COMMENT_LINE $C800 $C843                             ;        register 9
COMMENT_LINE $C800 $C844                             ;        register 8
COMMENT_LINE $C800 $C848                             ;        register 4
COMMENT_LINE $C800 $C849                             ;        register 3
COMMENT_LINE $C800 $C84A                             ;        register 2
COMMENT_LINE $C800 $C84C                             ;        register 0
COMMENT_LINE $C800 $C85E                             ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $C800 $C868...$C876                             ;Unused?
COMMENT_LINE $C800 $C878                             ;Unused?
COMMENT_LINE $C800 $C880 - $CBEA is user RAM                            ;
COMMENT_LINE $C800 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $C800 1 mux sel 0
COMMENT_LINE $C800 2 mux sel 1
COMMENT_LINE $C800 3 sound BC1
COMMENT_LINE $C800 4 sound BDIR
COMMENT_LINE $C800 5 comparator input
COMMENT_LINE $C800 6 external device (slot pin 35) initialized to input
COMMENT_LINE $C800 7 /RAMP
COMMENT_LINE $C800 0 PA latch enable
COMMENT_LINE $C800 1 PB latch enable
COMMENT_LINE $C800 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $C800 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $C800 4 /
COMMENT_LINE $C800 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $C800 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $C800 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $C800 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $C800 1 \
COMMENT_LINE $C800 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $C800 3 /
COMMENT_LINE $C800 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $C800 5 \
COMMENT_LINE $C800 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $C800 7 /
COMMENT_LINE $C800 bit                             cleared by
COMMENT_LINE $C800 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $C800 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $C800 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $C800 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $C800 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $C800 0 CA2 interrupt enable
COMMENT_LINE $C800 1 CA1 interrupt enable
COMMENT_LINE $C800 2 shift register interrupt enable
COMMENT_LINE $C800 3 CB2 interrupt enable
COMMENT_LINE $C800 4 CB1 interrupt enable
COMMENT_LINE $C800 5 timer 2 interrupt enable
COMMENT_LINE $C800 6 timer 1 interrupt enable
COMMENT_LINE $C800 7 IER set/clear control
COMMENT_LINE $C800 Rot_VL_dft      EQU     $F637   ;
COMMENT_LINE $C800 Rot_VL_ab       EQU     $F610   ;
COMMENT_LINE $C800 Rot_VL          EQU     $F616   ;
COMMENT_LINE $C800 Rot_VL_Mode_a   EQU     $F61F   ;
COMMENT_LINE $C800 Rot_VL_Mode     EQU     $F62B   ;
COMMENT_LINE $C800 Rot_VL_dft      EQU     $F637   ;
COMMENT $C800 vectrex macro includes
COMMENT_LINE $C800 all banks
COMMENT_LINE $C800 PC not usable :-)
COMMENT_LINE $C800 cmpx #4
COMMENT_LINE $C800 pshs d,y,x,pc,u,cc;16
COMMENT_LINE $C800 puls d,y,x,pc,u,cc; 16
COMMENT_LINE $C800 pshs y,x,pc,u,d;15
COMMENT_LINE $C800 puls y,x,pc,u,d; 15
COMMENT_LINE $C800 pshs y,x,pc,u,cc;14
COMMENT_LINE $C800 puls y,x,pc,u,cc; 14
COMMENT_LINE $C800 pshs a,x,pc,u,cc;13
COMMENT_LINE $C800 puls a,x,pc,u,cc;13
COMMENT_LINE $C800 pshs x,pc,u,cc;12
COMMENT_LINE $C800 puls x,pc,u,cc;12
COMMENT_LINE $C800 pshs pc,u,d;11
COMMENT_LINE $C800 puls pc,u,d;11
COMMENT_LINE $C800 pshs pc,u,cc;10
COMMENT_LINE $C800 puls pc,u,cc;10
COMMENT_LINE $C800 pshs u,d;9
COMMENT_LINE $C800 puls u,d;9
COMMENT_LINE $C800 pshs u,cc;8
COMMENT_LINE $C800 puls u,cc;8
COMMENT_LINE $C800 pshs u;7
COMMENT_LINE $C800 puls u;7
COMMENT_LINE $C800 pshs cc;6
COMMENT_LINE $C800 puls cc;6
COMMENT_LINE $C800 tfr a,a; 6
COMMENT_LINE $C800 brn 0; 3
COMMENT_LINE $C800 NOP ; 2
COMMENT_LINE $C800 for usigae in vectorblade
COMMENT_LINE $C800 the "massive" stack usage is forbidden -> since stack is rare and
COMMENT_LINE $C800 can overwrite data
COMMENT_LINE $C800 max 3 byte PUSH!
COMMENT $0000 wait 2 cycles
COMMENT $0000 wait 3 cycles
COMMENT $0000 wait 6 cycles
COMMENT $0000 wait 12 cycles
COMMENT $0000 wait 14 cycles
COMMENT $0000 wait 16 cycles
COMMENT $0000 wait 18 cycles
COMMENT $0000 wait 20 cycles
COMMENT $0000 wait 22 cycles
COMMENT $0000 wait 24 cycles
COMMENT $0000 wait 26 cycles
COMMENT $0000 wait 28 cycles
COMMENT_LINE $0000 nop      (SPRITE_SCALE-8)/2
COMMENT $0000 1 secpnd
COMMENT_LINE $0000 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 a = $18, b = $83 disable RAMP, muxsel=false, channel 1 (integrators offsets)
COMMENT $0000 Clear D/A output
COMMENT $0000 set mux to channel 1, leave mux disabled
COMMENT $0000 enable mux, reset integrator offset values
COMMENT_LINE $0000 nop 4
COMMENT $0000 /BLANK high and /ZERO low
COMMENT $0000 Disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 scale for placing first point
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 move to time 1 lo, this means scaling
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 recal counter, about 21 Minutes befor roll over
COMMENT $0000 Wait for timer t2
COMMENT $0000 Store refresh value
COMMENT $0000 into timer t2
COMMENT $0000 blank low and zero low
COMMENT $0000 clear shift register
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D *2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D /2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 "random" Galois LFSR
COMMENT $0000 27, 28 is different is still same
COMMENT_LINE $0000 hey dissi "pri nt a = #a"
COMMENT_LINE $0000 hey dissi "pri nt a = #a"
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 expect DP = d0
COMMENT_LINE $0000 playes one piece of music, that is given as param
COMMENT $0000 this piece of music
COMMENT $0000 NOW
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 y must be set more than xx cycles on some vectrex
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT_LINE $0000 nop
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT_LINE $0000 uses x and d
COMMENT_LINE $0000 prints the numbers in a and b at a location given
COMMENT_LINE $0000 prints in hex
COMMENT_LINE $0000 need 6 bytes RAM starting with tmp_debug
COMMENT $0000 save the numbers
COMMENT $0000 save the numbers
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 DIGITAL_JOYTICK_LOOP_MIN  EQU  $08
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT $0000 mux disabled, mux sel = 01 (vertical pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive y)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value y was pushed UP
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved up
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved down
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 beq noymove\?
COMMENT_LINE $0000 bra noxmove\? ; if y moved I assume no X move
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $C800 ***************************************************************************
COMMENT_LINE $C800 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 this whole block does the player movement according to current joystick data
COMMENT_LINE $0000 the testing whether the end of the screen is reached seems dumb - can I do that better?
COMMENT $0000 half a pixel per "move"
COMMENT $0000 half a pixel per "move"
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 this whole block does the player movement according to current joystick data
COMMENT_LINE $0000 the testing whether the end of the screen is reached seems dumb - can I do that better?
COMMENT $0000 half a pixel per "move"
COMMENT $0000 half a pixel per "move"
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 do the "wobbling" of enemies in waiting position
COMMENT $0000 was tst
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 reg u can be used!
COMMENT $0000 bank 1 replace
COMMENT $0000 enemyTribble
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 times 8 == 1600 points a biggy, times 5 = 8000 points max
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 following is "old shot"
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 if last time something was hit and
COMMENT_LINE $0000 the bullet is still active
COMMENT_LINE $0000 do not switch - we probably will hit again!
COMMENT $0000 was tst
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 use next shot that "fits
COMMENT $0000 was tst
COMMENT_LINE $0000 new
COMMENT_LINE $0000 new end
COMMENT $0000 was tst
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 always use testShot + 5 for testShot 2
COMMENT $0000 was tst
COMMENT_LINE $0000 new
COMMENT_LINE $0000 new end
COMMENT $0000 was tst
COMMENT_LINE $0000 veryify that testShot is not the same
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 loop count
COMMENT $0000 scale width
COMMENT $0000 go ++ to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 -CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go left
COMMENT_LINE $0000 draw
COMMENT $0000 switch to y int, enable mux
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 go +- to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 +CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go right
COMMENT_LINE $0000 draw
COMMENT $0000 Store Y in D/A register
COMMENT $0000 switch to y int, enable mux
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 draws the fighter (anim) and all that goes with it (armor, shield or scoop)
COMMENT_LINE $0000 only one addition at any given time at once
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT $0000 dec playerBonusCounter
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT_LINE $0000 draw cleanup
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 position
COMMENT $0000 position
COMMENT $0000 start at 0
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte?
COMMENT $0000 Advance to next point in list
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 brn 0 ; max ten scale
COMMENT_LINE $0000 NOP                     ;Wait a moment more
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 *******
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 LDA      #$40                         ;B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT_LINE $0000 LF425_lg\?
COMMENT_LINE $0000 BITA     >VIA_int_flags               ;Wait for T1 to time out
COMMENT_LINE $0000 BEQ      LF425_lg\?
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next coordinate pair
COMMENT_LINE $0000 LDA      ,X                           ;Get next pattern byte
COMMENT_LINE $0000 BLE      Draw_VLp_lessGap_1\?           ;Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 tst ,x+
COMMENT $0000 faster than tst?
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 there are never to 0 after another
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 nop
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 tst ,x+
COMMENT $0000 faster than tst?
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 there are never to 0 after another
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 position to explosion
COMMENT $0000 * If the scale factor for the explosion
COMMENT $0000 * has not surpassed the max value, then
COMMENT $0000 max 63
COMMENT_LINE $0000 get position of dot and move there
COMMENT $0000 DRAW_VLP
COMMENT_LINE $0000 ldb EX_START_SIZE+u_offset1,u    ;
COMMENT_LINE $0000 return to center of explosion
COMMENT $0000 max 63
COMMENT_LINE $0000 complete explosion done
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 easy
COMMENT $0000 5
COMMENT $0000 6
COMMENT $0000 7
COMMENT_LINE $0000 bullet 0 - 4 = standard damage
COMMENT $0000 easy
COMMENT $0000 1
COMMENT $0000 2
COMMENT_LINE $0000 with damage adjust no negative weapon damage allowed anymore!
COMMENT_LINE $0000 (negative was damage each second round only)
COMMENT_LINE $0000 boss fight must be hard! They don't resprect extra damage!
COMMENT $0000 max non negative damage
COMMENT_LINE $0000 im warp failure non working on impossible
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 +10 new since, enemies now start at the bottom
COMMENT $0000 y wise a fixed compare is used, since y wise all shots are equal
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 one time macro
COMMENT_LINE $0000 biggies only above level 25
COMMENT_LINE $0000 bra noMoneyStealer\?
COMMENT_LINE $0000 here possibly a special BIGGY spawn
COMMENT_LINE $0000 lbne isIntroNoBug ; statistically 1/255 = every 2.5 seconds -> to many!
COMMENT $0000 statistically each about *25 = 60 seconds .. lets try that
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** CASH STEALER *****************
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 init money stealer
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** BIG FIEND ********************
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 init super alien
COMMENT_LINE $0000 -------
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 -------
COMMENT $0000 one time macro
COMMENT $0000 no saucer in the first five level
COMMENT $0000 bonusTimerLength
COMMENT_LINE $0000 timer saucer!
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** TIME OUT - SAUCER ************
COMMENT_LINE $0000 *********************************
COMMENT $0000 start at upper right (for now)
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** TIME OUT - MOTHERSHIP ********
COMMENT_LINE $0000 *********************************
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 ;; saucer init done
COMMENT_LINE $0000 -------
COMMENT $0000 one time macro
COMMENT $0000 was tst
COMMENT_LINE $0000 init bug
COMMENT_LINE $0000 big bugs only appear if a reduced count of normal enemies are on screen
COMMENT_LINE $0000 each bug with (atm) 4 enemies less (actually 3 - since the bug counts too)
COMMENT $0000 allow more than 4 bugs *shudder*
COMMENT_LINE $0000 lsra
COMMENT $0000 all 8 bits
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 ;; bug init done
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 do not allow playing of any other "sfx" till this is over
COMMENT $0000 secretChannel1
COMMENT $0000 secretChannel2
COMMENT $0000 secretChannel3
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 do not allow playing of any other "sfx" till this is over
COMMENT $0000 achievementChannel1
COMMENT $0000 achievementChannel2
COMMENT $0000 achievementChannel3
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 a = 0, and stays 0
COMMENT $0000 Copy the byte
COMMENT $0000 Decrement the count
COMMENT $0000 Go back until finished
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 copy block
COMMENT $0000 jsr Move_Mem_a
COMMENT_LINE $0000 copy block end
COMMENT_LINE $0000 copy block
COMMENT $0000 jsr Move_Mem_a
COMMENT_LINE $0000 copy block end
COMMENT_LINE $0000 all "linkage" and enemy list stuff is done after warp!
COMMENT_LINE $0000 .....................................................
COMMENT $0000 and remember that we created a new object
COMMENT_LINE $0000 set the new empty head
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 head of our empty list
COMMENT_LINE $0000 load last of current object list
COMMENT_LINE $0000 the old head is always our next
COMMENT $0000 enemyPlayerControlledLeftBehaviour
COMMENT $0000 enemyPlayerControlledRightBehaviour
COMMENT $0000 enemyPlayerControlledRightBehaviour
COMMENT $0000 enemyPlayerControlledLeftBehaviour
COMMENT_LINE $0000 newobject is always head
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 ensure scoopy1 is lower scoopy 2
COMMENT $0000 jsr newEnemyObject
COMMENT $0000 this is no enemy - in the level sense!
COMMENT_LINE $0000 object struct in u
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr Move_Mem_a
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr newEnemyObject
COMMENT $0000 this is no enemy - in the level sense!
COMMENT_LINE $0000 object struct in u
COMMENT_LINE $0000 x dest
COMMENT_LINE $0000 us source
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr Move_Mem_a
COMMENT $0000 the next in out empty list will be the new
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 used in COL_DETECT_ALL
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 ldd ,u
COMMENT_LINE $0000 cmpd #lazerPlayerShotBehaviour
COMMENT_LINE $0000 bne normalShot\?
COMMENT_LINE $0000 ldd #-1
COMMENT_LINE $0000 std testBase
COMMENT_LINE $0000 bra      endm\?
COMMENT_LINE $0000 normalShot\?
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 used in TEST_ALL_SHOTS
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 ldd ,u
COMMENT_LINE $0000 cmpd #lazerPlayerShotBehaviour
COMMENT_LINE $0000 bne normalShot\?
COMMENT_LINE $0000 ldd #-1
COMMENT_LINE $0000 std testBase
COMMENT_LINE $0000 bra      endm\?
COMMENT_LINE $0000 normalShot\?
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 definition of bank switch macros
COMMENT $0000 Prepare DDR Registers % 1101 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT $0000 Prepare DDR Registers % 1001 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT $0000 interrupt DISABLED - clear ALL interrupts to ensure other bank
COMMENT $0000 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
COMMENT_LINE $0000 ensure shift is "normal"
COMMENT $0000 0 = shift,
COMMENT $0000 interrupt ENABLED
COMMENT_LINE $0000 todo
COMMENT_LINE $0000 ensure T1 setup correctly
COMMENT_LINE $0000 - it usually is
COMMENT $0000 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
COMMENT_LINE $0000 and now "trigger a interrupt
COMMENT $0000 a VERY short T1 timer
COMMENT $0000 start timer
COMMENT $0000 Peer Test
COMMENT_LINE $0000 by the time, the macros "leaves" the interrupt is set!
COMMENT $0000 interrupt ENABLED
COMMENT $0000 ensure that shift can generate interrupt
COMMENT_LINE $0000 for some reason or another, VIA doesn't like a
COMMENT_LINE $0000 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0000 (only on a real vectrex, not Vide)
COMMENT $0000 and write 0 to shift (a) and $98 to aux (shift out enable)
COMMENT $0000 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
COMMENT_LINE $0000 wait 20 cycles till store of aux (these are 23)
COMMENT $0000 12
COMMENT $0000 3
COMMENT_LINE $0000 nop      10
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 ********************** STRUCTRUES *********************************
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 10 bytes
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 flash length when hit (might be bits) 3 bits max
COMMENT_LINE $C801 SWARM_ALL_PURPOSE
COMMENT_LINE $C801 high bits have movemnt info
COMMENT_LINE $C801 vvhh xfff
COMMENT_LINE $C801 f = flash counter
COMMENT_LINE $C801 vertical
COMMENT_LINE $C801 v0 0 = no vertical movement
COMMENT_LINE $C801 11 = up
COMMENT_LINE $C801 01 = down
COMMENT_LINE $C801 00 = not used
COMMENT_LINE $C801 horizontal
COMMENT_LINE $C801 h0 0 = no horzontal movement
COMMENT_LINE $C801 11 = left
COMMENT_LINE $C801 01 = right
COMMENT_LINE $C801 00 = not used
COMMENT_LINE $C801 SWARM_MOVEMENT_INFO = -1 go to startpos
COMMENT_LINE $C801 sxxx cccc = counter till movement changes
COMMENT_LINE $C801 s = 1 -> start -> move to startposition
COMMENT_LINE $C801 x = not used
COMMENT_LINE $C800 10 bytes
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 SWARM_ALL_PURPOSE,1 ; #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 11 bytes - "like" swarm
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 flash length when hit (might be bits) 3 bits max
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 21 byte
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 D current position for calculation only
COMMENT $C800 if attack pattern is absolut - than here go the target coordinates
COMMENT $C800 is 2 bytes, but shares second byte with ANIM count
COMMENT $C800 in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
COMMENT $C800 current position in animation table of vectorlists
COMMENT $C800 lower nibble when attack pattern
COMMENT $C800 where in the current pattern are we?
COMMENT_LINE $C801 uper nibble, when attack pattern
COMMENT_LINE $C801 which pattern "trail" to follow
COMMENT $C800 UID of curretn enemies -> defines position in waiting state
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT_LINE $C801 speed of falling debris
COMMENT $C800 hit points = upper 5 bits
COMMENT $C800 all 8 bits
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT $C800 #noDoubleWarn
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 D current position for calculation only
COMMENT $C800 #
COMMENT $C800 count down to next animation sequence
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 1 byte ; D current position for calculation only
COMMENT $C800 1 byte ; D current position for calculation only
COMMENT $C800 is 2 bytes, but shares second byte with ANIM count
COMMENT $C800 in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
COMMENT $C800 where in the current pattern are we?
COMMENT_LINE $C801 uper nibble, when attack pattern
COMMENT_LINE $C801 which pattern "trail" to follow
COMMENT $C800 UID of curretn enemies -> defines position in waiting state
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT_LINE $C801 speed of falling debris
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 only missile and "normal"
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 #noDoubleWarn
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 low 6 bit - anim, hi 2 bit speed
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 13 for 4 stars
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 10 bytes
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 alternating 0 and != 0, left or right slope starting
COMMENT $C800 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 or in case of direct appearence the number of enemies!
COMMENT $C800 or in case of direct appearence the number of enemies!
COMMENT $C800 pointer to attack pattern list - pointer to 4 pointers to attack patterns
COMMENT $C800 high nibble max shots, low nibble max attack patterns
COMMENT_LINE $C801 ds       LEVEL_MAX_SHOTS_IN_AIR, 1
COMMENT_LINE $C801 ds       LEVEL_MAX_ATTACK_PATTERNS, 1
COMMENT $C800 how probable is it that enemies shoots
COMMENT $C800 how probable is it that bonus drops
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 when flight pattern definition
COMMENT_LINE $C800 how enemies enter the level
COMMENT_LINE $C800 calcs are done in an Excel sheet
COMMENT $C800 depending on speed
COMMENT $C800 this is now SPEED offset for compare!
COMMENT_LINE $C800 arbitraty number of PatternLine, end with both y and xadder = 0
COMMENT $C800 when pointer = 0, than end of list
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 if zero -> BigBug
COMMENT $C800 see above
COMMENT $C800 bug only (for now), lower nibble speed, uppernibble
COMMENT_LINE $C801 #mt3n, m= 1 can fire missiles, t = 1 can fire target shots, 3 = 1 can fire tripples
COMMENT_LINE $C801 if m = 1 than always missile
COMMENT_LINE $C801 if 3 = 1 than always tripple (if not missile)
COMMENT_LINE $C801 t else
COMMENT_LINE $C801 if debris - than ALSO speed of falling debris
COMMENT $C800 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT_LINE $C800 ;;;;
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 RAM that is "always" the same
COMMENT_LINE $C800 CBFC as TOP Stack is as yet unused RAM!
COMMENT_LINE $C800 still possible RAM savings!
COMMENT_LINE $C800 flashAvailable     only 1 bit needed!
COMMENT_LINE $C800 I don't really want to touch those:
COMMENT_LINE $C800 tacScan             ds       1 ; only two values +1/-1
COMMENT_LINE $C800 difficulty          ds       1 ; really only the lowest 4 bits
COMMENT_LINE $C800 SAVE2_ENEMY_ADDRESS = cbc0
COMMENT_LINE $C800 SAVE1_ENEMY_ADDRESS = cbd5
COMMENT $C80F speed of bugshot, and "flag" if bugshot
COMMENT $C811 only used in shop
COMMENT_LINE $C814 GAMEPHASE_INTRO     =        0                            ; level attack wave phase
COMMENT_LINE $C814 GAMEPHASE_INGAME    =        1                            ; in game phase (not attack waves)
COMMENT_LINE $C814 game_phase          ds       1
COMMENT $C815 offset of enemies in "waiting" position -16 - + 16
COMMENT $C816 direction of wobble movemnt positive = add, negative = sub
COMMENT $C81A BIT FLAG only one attack pattern initiated per round
COMMENT_LINE $C81B Vec Joys should not be moved
COMMENT_LINE $C81B lastJoyMove         ds       0
COMMENT $C81B EQU $C81B ;Joystick 1 left/right; #noDoubleWarn
COMMENT $C81C EQU $C81C ;Joystick 1 up/down; #noDoubleWarn
COMMENT $C81D sfx player used
COMMENT $C81F sfx player used
COMMENT $C821 how much time is left in level
COMMENT $C822 only two values +1/-1
COMMENT_LINE $C825 0 bytes left! next is Vec_Loop_Count -> which I use
COMMENT $C825 $c825 / $c826 Vec_Loop_Count
COMMENT $C827 for the current intro pattern the # of spawned, enemies, ; VecBightness
COMMENT $C828 Vec_Dot_Dwell, Vec_Pattern
COMMENT_LINE $C82A after that some "String stuff" I use wihtin print sync String
COMMENT_LINE $C82A ;;;;;;;;;;
COMMENT $C82A Vec_Counters ; $c82e 17 byte
COMMENT_LINE $C830 following 5 definitions are the jmp (on stack) addresses back to the main game loop
COMMENT_LINE $C830 from the 5 different linked lists
COMMENT_LINE $C830 these can be = in RAM, since lists can be reused in different game sections
COMMENT $C838 #handle_after
COMMENT_LINE $C83A reuse!
COMMENT $C83A compare value to above 5 addresses - these must be greater than above addreses,
COMMENT_LINE $C83A compare is used to decide whether list is empty or not
COMMENT $C83A BIT FLAG when an enemy is hit by bullet - but not destroyed - the enemy "flashes", this indicates a current flash (reset by next normal colored enemy)
COMMENT $C83B is allways negated value -> easier/faster compare!
COMMENT $C83C during level intro - each "permanent" enemy receives a UID, this is the counter for that
COMMENT $C83D $C83d / $C83e when using Wait Recal -> than this is Vec_Rfrsh -> not to be overwritten!
COMMENT_LINE $C83F than follows the Vec_Music double buffer
COMMENT_LINE $C83F I use that also to optimize PSG writing
COMMENT_LINE $C83F ;;;;;;;;;;
COMMENT $C84D 1 = allow, 0, = no allow
COMMENT $C84D delay countdown between appearance of enemies in current intro pattern
COMMENT_LINE $C84E IntroPattern->P_DELAY_BETWEEN_ENEMIES
COMMENT $C84E UID counter for each enemy per level, used only during intro to position each spawned enemy
COMMENT $C84F pointer to current active intro pattern
COMMENT $C851 number of current pattern in level structure (from 0 terminated list)
COMMENT $C852 right
COMMENT $C854 state of joystick button only bit 0 for current and bit 1 for last, ANY button
COMMENT $C855 for convenience - a copy of above for the last gameround
COMMENT $C858 7 digit score
COMMENT_LINE $C864 still only one Fighter direct bonus active at any one given time
COMMENT_LINE $C864 newer bonus trumps older bonus
COMMENT $C864 bitfield for SHIELD, SUCKER ...
COMMENT_LINE $C865 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C865 ;;; Game vars
COMMENT_LINE $C865 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $C865 messenger
COMMENT $C867 count down value to when the next intro pattern starts (value defined in pattern)
COMMENT $C868 left
COMMENT $C86A if zero, than no bugs, otherwise count of bugs yet to spawn
COMMENT $C86C the current "letter" bonus are remembered here per "bit"
COMMENT $C86D one enemy is allowed to shoot per round, the one and only allowed shots start coordinates (0 - no shot)
COMMENT $C86F sfx player used
COMMENT $C871 statistics
COMMENT $C875 16 bit current x position of player - hi byte is used to position
COMMENT $C877 16 bit left/right speed of player 255 = 1 "pixel"
COMMENT $C879 maximum number of shots player is currently allowed to have in the air
COMMENT $C87A current number of bullets per shot (1-4)
COMMENT $C87B speed of shots fired by player (16 bit)
COMMENT $C87E Vec_Music_Flag - used in pasue! ; used in objectEnemy for sign checks of coordinates
COMMENT_LINE $C87F used as size in level intro display!; used as scale and counter...
COMMENT_LINE $C87F ;;;;;;;
COMMENT_LINE $C880 0 bytes left?
COMMENT_LINE $C880 ;;;;;;;;;;
COMMENT_LINE $C880 this is $c880                    ORG      $c880                        ; start of our ram space
COMMENT $C880 each round = to 0, when an enemy is hit during round this is "inc"ed. And a sound played in next round
COMMENT_LINE $C881 all kinds of object list, partly reused
COMMENT $C881 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C883 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C886 Four different "stack" linked lists for Objects
COMMENT_LINE $C886 1) all enemies (and explosions)
COMMENT $C886 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C888 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C88B reuse
COMMENT_LINE $C88B 2) all Player shots
COMMENT $C88B if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C88D if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C890 3) all Enemy shots
COMMENT $C890 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C892 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C895 4) all Bonus "things"
COMMENT $C895 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C897 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C89A ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C89A following two can be used in game
COMMENT_LINE $C89A before usage they must be reinit however!
COMMENT $C89A only used in desktop/title ; also stores on easy the destroyed warp enemy count
COMMENT $C89A indicates this is the first batch of start to be displayed -> does in move macro stuff
COMMENT $C89C bit: 1 yes, 0 no
COMMENT_LINE $C89D use this as bitfiled for sound (and other things)
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ********************************************************************
COMMENT_LINE $C89E save to eEprom Starts here!
COMMENT_LINE $C89E one "direct" copy of current OptionStruct from flash
COMMENT $C89E swarm
COMMENT $C89F Calibration ZeroRef value (Kristof Tuts) stored here
COMMENT $C8A0 major havoc
COMMENT $C8A1 text -> STRING_SCALE
COMMENT $C8A2 boss
COMMENT $C8A4 can be calculated from achievements and in game secrets!
COMMENT_LINE $C8A5 saved bits
COMMENT_LINE $C8A5 lowest 4 bits are saved
COMMENT_LINE $C8A5 highest 4 bits are erased with load
COMMENT_LINE $C8A5 variable bits (only used per game - not saved)
COMMENT $C8A5 %00000001 = 1 No Buzz, 0 = buzz
COMMENT $C8A6 40 bitflags
COMMENT $C8AD saved - but not shown (yet?)
COMMENT_LINE $C8AE is BITSAVE
COMMENT_LINE $C8AE MMMM MMII
COMMENT_LINE $C8AE II = 1 imunity to 1 shot, = 2 imunity to 1 and 2 shot
COMMENT_LINE $C8AE M = Multiplyer bits, max 63
COMMENT $C8AE current multiply factor (1 = default)
COMMENT $C8AE only 1 or 2 can also be calculated
COMMENT $C8AF located in old HS block
COMMENT $C8B1 OptionStruct
COMMENT $C8B1 or more
COMMENT $C8B1 or more
COMMENT $C8B1 bug behaviour internal ; end of game word
COMMENT $C8B1 attation before dumping -> resued below
COMMENT $C8B7 the current "letter" bonus are remembered here per "bit" for DISPLAY
COMMENT_LINE $C8B8 MUST not be reused!
COMMENT_LINE $C8B8 ;;
COMMENT $C8BC countdown each 2 round, thus 255 about 10s
COMMENT $C8C0 needed between start of enemy objects and laser test
COMMENT $C8C1 really only temporary not accross round
COMMENT $C8C2 really only temporary not accross round, used by boss2 to indicate boss hit in shot tests
COMMENT $C8C3 really only temporary not accross round ; 3 is "INNER" of 1 and 2
COMMENT $C8C4 really only temporary not accross round
COMMENT_LINE $C8C6 per game round only two of the player shots are tested
COMMENT_LINE $C8C6 agains the enemies
COMMENT_LINE $C8C6 the current to be tested shot is pointer stored in "testShot"
COMMENT $C8D4 ATTENTION!!!
COMMENT $C8D4 bossfight stores DS (bank 0), while player shots are displayed
COMMENT $C8D4 used while printing string with vectors
COMMENT $C8D6 only used during intro patterns
COMMENT_LINE $C8D8 9 bytes of RAM for the damned restricted laser
COMMENT $C8E1 really only the lowest 4 bits , highest bit hardcore = 1, not hardcore = 0
COMMENT $C8E4 damage one bullet does, if negative than only damage in even rounds (laser) (not supported any longer!)
COMMENT $C8E5 same as above, shifted to upper 5 bits for fast usage
COMMENT $C8E6 same as above, doubled and shifted
COMMENT $C8E7 time a bonus lasts
COMMENT $C8E9 pointer to current level structure
COMMENT $C8EB timer for score multiplyer
COMMENT_LINE $C8ED enemyDestructed     ds       1                            ;
COMMENT_LINE $C8ED lock handling is BITSAVE
COMMENT_LINE $C8ED not GAMEPHASE_INTRO     ; in game phase (not attack waves)
COMMENT $C8ED lower nibble is lock count, upper nibble is IDSW -
COMMENT_LINE $C8EE I - if set than INTRO phase of game!
COMMENT_LINE $C8EE D - enemyDestructed -a flag, indicates, that there are NO live enemies (boss/warp)
COMMENT_LINE $C8EE W = 1 keep scoopies in warp,
COMMENT_LINE $C8EE W = 0 lose scoopies in Warp,
COMMENT_LINE $C8EE S = 0 scoopies can be killed,
COMMENT_LINE $C8EE S = 1 scoopies are shielded,
COMMENT $C8F1 xpos
COMMENT $C8F4 0-3 ; negative hs stars
COMMENT_LINE $C8F6 hidden Secret 3 Scoops!
COMMENT $C8F7 doublings
COMMENT $C8F8 ERD0rrbb
COMMENT_LINE $C8F9 rr rate counter "overall",
COMMENT_LINE $C8F9 bb counter of consecutive same bonus
COMMENT_LINE $C8F9 E=1 extra still in order,
COMMENT_LINE $C8F9 R=1 rank still in order
COMMENT_LINE $C8F9 D=1 drunken master
COMMENT $C8FE 1 for continues save ; #noDoubleWarn
COMMENT_LINE $C8FE RAM for "in game"
COMMENT_LINE $C8FE ***************************************************************************
COMMENT_LINE $C8FE Variable / RAM SECTION
COMMENT_LINE $C8FE ***************************************************************************
COMMENT_LINE $C8FE insert your variables (RAM usage) in the BSS section
COMMENT_LINE $C8FE user RAM starts at $c880
COMMENT_LINE $C8FE ;;;;;;;;;
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE ;;; Game vars
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE followed by the storage area for abve defined lists
COMMENT_LINE $C8FE less shots with NMI to
COMMENT_LINE $C8FE prevent stack overflow!
COMMENT_LINE $C976 only to identify objects in RAM
COMMENT_LINE $C9A6 only to identify objects in RAM
COMMENT_LINE $C9E7 only to identify objects in RAM
COMMENT_LINE $CB8B only to identify objects in RAM
COMMENT_LINE $CBEF only to identify objects in RAM
COMMENT_LINE $CBEF reuse
COMMENT_LINE $CBEF must be smaller than  playershotobject_list_end  - (EnemyStruct*2)
COMMENT_LINE $CBEF game over candle
COMMENT_LINE $CBEF -----
COMMENT_LINE $CBEF here after comes directly the STACK
COMMENT_LINE $CBEF on occasion stack overwrite the last player shot,
COMMENT_LINE $CBEF but SUPPOSEDLY only when no player shots are active.
COMMENT_LINE $CBEF Known:
COMMENT_LINE $CBEF - Achievement display
COMMENT_LINE $CBEF - VecVox on level intro display
COMMENT_LINE $CBEF - playing music pieces (e.g. intro to boss)
COMMENT_LINE $CBEF - boss kills player (shots are not drawn anymore)
COMMENT_LINE $CBEF RAM used in title screen
COMMENT_LINE $C83F simple redefines for source compatability
COMMENT_LINE $C8FE ;;;;;;;;;
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE ;;; Game vars
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C906 followed by the storage area for abve defined lists
COMMENT_LINE $C9D8 space where VecFever functions can be executed
COMMENT_LINE $C9D8 this can be moved on RAM shortage to "object" definition space
COMMENT_LINE $C9D8 no RAM function should be necessary while in game
COMMENT_LINE $C9D8 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9D8 ;;; Arkos vars
COMMENT_LINE $C9D8 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9D8 if no in game music -> this can be moved on RAM shortage to "object" definition space
COMMENT_LINE $C9D8 start of some RAM Vars for Arkos Tracker
COMMENT_LINE $C9D8 below RAM usuage is 74 byte (without psh shadow/work registers, which are = to
COMMENT_LINE $C9D8 vectrex default RAM locations)
COMMENT $C9D8 $c9d9
COMMENT_LINE $C9DC following are player vars which are channel independend
COMMENT $C9DC height of pattern
COMMENT $C9DD speed of pattern
COMMENT $C9DE current speed position (count down to 0)
COMMENT $C9DF current height position (count down to 0)
COMMENT $C9E0 address of instrument table
COMMENT $C9E2 current linker position
COMMENT $C9E4 retrigger "flag" - if same as PLY_PSGREG13, than not retriggered, otherewise - yes
COMMENT $C9E5 start position of current special track
COMMENT $C9E7 current position in special track
COMMENT $C9E9 wait counter for special track (count down to 0)
COMMENT_LINE $C9EA in general in below player, y reg points to the start of
COMMENT_LINE $C9EA following structure (one for each channel)
COMMENT $CA1D special - this is used for retrigger activities
COMMENT $CA1E these two are used to stay "channel" independend
COMMENT $CA20 they are loaded befor the "work" routines with the corresponding regs of the current channel
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 VBTitle
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 Defines
COMMENT $CA23 pointer to the actual MAP tile in the map (the Macro)
COMMENT_LINE $CA2B top and bottom
COMMENT_LINE $CA2B since the sprite is taller than one tile high
COMMENT_LINE $CA2B we take a top and bottom tile collision
COMMENT_LINE $CA2B if both are clean - than no collision
COMMENT_LINE $CA2B if one is "not clean" than collision
COMMENT_LINE $CA3C last_joy_y          ds       1                            ; and Y, for checking, we don't want an autorun feature...
COMMENT_LINE $CA3C last_joy_x          ds       1                            ; last joystick position X,
COMMENT $CA3C position in level, that is the upper left corner
COMMENT $CA3D position in level, that is the upper left corner
COMMENT $CA3F fine "pixel" for scrolling
COMMENT $CA40 size depends on tile map definition
COMMENT $CA47 position where the next tile is printed at
COMMENT_LINE $CA4A tiles collected are stored with the x position
COMMENT_LINE $CA4A that means all collectable tiles must have a
COMMENT_LINE $CA4A different X position!
COMMENT_LINE $CA4E tmp_debug           ds       6
COMMENT_LINE $CA52 at max 8 different animation counters!
COMMENT_LINE $CA5B lookaHead buffers
COMMENT $CA5B position where the next tile is printed at, used by look ahead
COMMENT_LINE $CA5E clipping
COMMENT_LINE $CA60 tmp1 ds 2
COMMENT $CA66 "round" counter of scroll text -> if 1 (or higher) the scrolltext has been fully shown
COMMENT $CA7D maximum 20 vectors to clip - also used as buffer
COMMENT $CAD7 maximum 20 vectors to clip - also used as buffer
COMMENT $CB31 maximum 20 vectors to clip - also used as buffer
COMMENT $CB8D about $cbc2
COMMENT_LINE $CB8D the following values determine the "strength" of the
COMMENT_LINE $CB8D maximum move for the grid to be build
COMMENT_LINE $CB8D the size of the grid should always be chosen with maximum strength and manipulated via scale
COMMENT_LINE $CB8D max strength in anything is ALWAYS preferable to larger scale!
COMMENT_LINE $CB8D determines the number of tiles on screen
COMMENT_LINE $CB8D size of tiles in "pixel", size here means in relation to position in grid
COMMENT_LINE $CB8D a "pixel" is a 1 step move in the "SCALE_MOVE" scale
COMMENT_LINE $CB8D the "hardware" size of a tile is determinded by the scale "SCALE_VLIST", which should be much much smaller than
COMMENT_LINE $CB8D the move scale.
COMMENT_LINE $CB8D The relation between the two is experimentally determined!
COMMENT_LINE $CB8D e.g. 254 / 12 = 21 => tile width in scales
COMMENT_LINE $CB8D these are the values added by a single tile to the position
COMMENT_LINE $CB8D exact should be whats commented out
COMMENT_LINE $CB8D 16 for easier calc
COMMENT_LINE $CB8D start pos of draw is uper left corner
COMMENT_LINE $CB8D in cartesian minX, maxY
COMMENT_LINE $CB8D only 5 rows displayed!
COMMENT_LINE $CB8D END_POS_VERTICAL = START_POS_VERTICAL - (FULL_TILES_VERTICAL*TILE_HEIGHT)
COMMENT_LINE $CB8D following not done!
COMMENT $CB95 %0000UDLR
COMMENT $CB96 %0000UDLR
COMMENT_LINE $CB98 is when no more vars are added, and max 30 vectors in tile clipping zone!
COMMENT_LINE $CB98 THIS MUST END BEFORE SCOOPY SAVE POSITION!
COMMENT_LINE $CB98 --------------------------------------------------------------------------------
COMMENT_LINE $CB98 object structures and vars for tile mobs
COMMENT_LINE $CB98 reuses RAM
COMMENT $C906 PC
COMMENT $C906 positive = end of list
COMMENT_LINE $C992 --------------------------------------------------------------------------------
COMMENT_LINE $C992 RAM highscore
COMMENT $CA7D 8*4 = 32 byte
COMMENT $CA9D 8*4 = 32 byte
COMMENT $CABD 2 only when displaying hs
COMMENT_LINE $CB21 RAM used in dodger
COMMENT_LINE $C9CD ***************************************************************************
COMMENT_LINE $C9CD Variable / RAM SECTION
COMMENT_LINE $C9CD ***************************************************************************
COMMENT_LINE $C9CD insert your variables (RAM usage) in the BSS section
COMMENT_LINE $C9CD user RAM starts at $c880
COMMENT_LINE $C9CD ;;;;;;;;;
COMMENT_LINE $C9CD ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9CD ;;; Game vars
COMMENT_LINE $C9CD ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9CD followed by the storage area for abve defined lists
COMMENT $CB26 word 3 byte! x = word
COMMENT $CB26 word
COMMENT $CB26 word
COMMENT_LINE $CB9D RAM used in boss fights
COMMENT_LINE $CB63 23 byte following
COMMENT_LINE $CB6C BOSS 1
COMMENT_LINE $CB7A BOSS 2
COMMENT $CB71 1 = grow; 0 = shrink
COMMENT $CB72 1 = grow; 0 = shrink
COMMENT_LINE $CB73 BOSS 3
COMMENT_LINE $CB5F four to much!
COMMENT_LINE $CB63 BOSS 4
COMMENT_LINE $CAC5 org bossfightStart -4- BOSS4_LASER_COUNT*(Boss4LaserBeam+Boss4GroundExplosion)
COMMENT_LINE $CAE2 ***************************************************************************
COMMENT_LINE $CAE2 HEADER SECTION
COMMENT_LINE $CAE2 ***************************************************************************
COMMENT_LINE $CAE2 The cartridge ROM starts at address 0
COMMENT_LINE $0000 for dissi compatability I leave the header in for now!
COMMENT_LINE $0000 the first few bytes are mandatory, otherwise the BIOS will not load
COMMENT_LINE $0000 the ROM file, and will start MineStorm instead
COMMENT $0000 'g' is copyright sign
COMMENT $000B music from the rom
COMMENT $000D hight, width, rel y, rel x (from 0,0)
COMMENT $0011 some game information, ending with $80
COMMENT $001D hight, width, rel y, rel x (from 0,0)
COMMENT $0021 some game information
COMMENT_LINE $002E if  VECFEVER = 1
COMMENT_LINE $002E DB       $F8, $50, -$00, -$50           ; hight, width, rel y, rel x (from 0,0)
COMMENT_LINE $002E DB       "GOLD 5 (VF)", $80            ; some game information, ending with $80
COMMENT_LINE $002E else
COMMENT_LINE $002E DB       $F8, $50, -$00, -$30           ; hight, width, rel y, rel x (from 0,0)
COMMENT_LINE $002E DB       "GOLD 5", $80                 ; some game information, ending with $80
COMMENT_LINE $002E endif
COMMENT $002E end of game header
COMMENT_LINE $002F ***************************************************************************
COMMENT_LINE $002F CODE SECTION
COMMENT_LINE $002F ***************************************************************************
FORCE_SYMBOL $002F main
COMMENT_LINE $0032 .....................................................
COMMENT_LINE $0032 todo
COMMENT_LINE $0032 ensure T1 setup correctly
COMMENT_LINE $0032 - it usually is
COMMENT $0032 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0032
FORCE_SYMBOL $0034 VIA_int_enable
COMMENT_LINE $0036 and now "trigger a interrupt
COMMENT $0036 a VERY short T1 timer
FORCE_NO_SYMBOL $0036
FORCE_SYMBOL $0038 VIA_t1_cnt_lo
COMMENT $003B start timer
FORCE_SYMBOL $003B VIA_t1_cnt_hi
COMMENT $003D Peer Test
COMMENT_LINE $003F by the time, the macros "leaves" the interrupt is set!
COMMENT $003F Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $003F
COMMENT $0041 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0041 VIA_DDR_b
COMMENT $0043 A = $01, B = 0
FORCE_NO_SYMBOL $0043
COMMENT $0045 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0045 VIA_port_b
FORCE_NO_SYMBOL $0047
COMMENT_LINE $0049 PB6 1
COMMENT_LINE $0049 todo
COMMENT_LINE $0049 ensure T1 setup correctly
COMMENT_LINE $0049 - it usually is
COMMENT $0049 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0049
FORCE_SYMBOL $004B VIA_int_enable
COMMENT_LINE $004D and now "trigger a interrupt
COMMENT $004D a VERY short T1 timer
FORCE_NO_SYMBOL $004D
FORCE_SYMBOL $004F VIA_t1_cnt_lo
COMMENT $0052 start timer
FORCE_SYMBOL $0052 VIA_t1_cnt_hi
COMMENT $0054 Peer Test
COMMENT_LINE $0056 by the time, the macros "leaves" the interrupt is set!
COMMENT $0056 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0056
COMMENT $0058 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0058 VIA_DDR_b
COMMENT $005A A = $01, B = 0
FORCE_NO_SYMBOL $005A
COMMENT $005C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $005C VIA_port_b
FORCE_NO_SYMBOL $005E
COMMENT $0060 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0060
COMMENT $0062 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0062 VIA_DDR_b
COMMENT $0064 A = $01, B = 0
FORCE_NO_SYMBOL $0064
COMMENT $0066 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0066 VIA_port_b
COMMENT $0068 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0068
FORCE_SYMBOL $006A VIA_int_enable
COMMENT_LINE $006C ensure shift is "normal"
COMMENT $006C 0 = shift,
FORCE_NO_SYMBOL $006C
FORCE_SYMBOL $006E VIA_aux_cntl
FORCE_SYMBOL $0070 gameScale
FORCE_SYMBOL $0073 VIA_t1_cnt_lo
COMMENT_LINE $0076 todo
COMMENT_LINE $0076 ensure T1 setup correctly
COMMENT_LINE $0076 - it usually is
COMMENT $0076 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0076
FORCE_SYMBOL $0078 VIA_int_enable
COMMENT_LINE $007A and now "trigger a interrupt
COMMENT $007A a VERY short T1 timer
FORCE_NO_SYMBOL $007A
FORCE_SYMBOL $007C VIA_t1_cnt_lo
COMMENT $007F start timer
FORCE_SYMBOL $007F VIA_t1_cnt_hi
COMMENT $0081 Peer Test
COMMENT_LINE $0083 by the time, the macros "leaves" the interrupt is set!
COMMENT $0083 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0083
COMMENT $0085 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0085 VIA_DDR_b
COMMENT $0087 A = $01, B = 0
FORCE_NO_SYMBOL $0087
COMMENT $0089 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0089 VIA_port_b
FORCE_NO_SYMBOL $008B
COMMENT $008D Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $008D
COMMENT $008F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $008F VIA_DDR_b
COMMENT $0091 A = $01, B = 0
FORCE_NO_SYMBOL $0091
COMMENT $0093 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0093 VIA_port_b
COMMENT $0095 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0095
FORCE_SYMBOL $0097 VIA_int_enable
COMMENT_LINE $0099 ensure shift is "normal"
COMMENT $0099 0 = shift,
FORCE_NO_SYMBOL $0099
FORCE_SYMBOL $009B VIA_aux_cntl
COMMENT $009E ensure that shift can generate interrupt
FORCE_NO_SYMBOL $009E
COMMENT_LINE $00A1 for some reason or another, VIA doesn't like a
COMMENT_LINE $00A1 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00A1 (only on a real vectrex, not Vide)
FORCE_SYMBOL $00A1 VIA_aux_cntl
COMMENT $00A3 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00A3 VIA_shift_reg
COMMENT $00A5 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00A5
FORCE_SYMBOL $00A7 VIA_int_enable
COMMENT_LINE $00A9 wait 20 cycles till store of aux (these are 23)
COMMENT $00A9 12
COMMENT $00AA 3
FORCE_NO_SYMBOL $00AA
COMMENT_LINE $00AC nop      10
FORCE_SYMBOL $00AC VIA_aux_cntl
COMMENT $00AE Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00AE
COMMENT $00B0 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00B0 VIA_DDR_b
COMMENT $00B2 A = $01, B = 0
FORCE_NO_SYMBOL $00B2
COMMENT $00B4 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00B4 VIA_port_b
FORCE_NO_SYMBOL $00B6
COMMENT $00B8 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $00B8
COMMENT $00BA all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00BA VIA_DDR_b
COMMENT $00BC A = $01, B = 0
FORCE_NO_SYMBOL $00BC
COMMENT $00BE ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00BE VIA_port_b
COMMENT $00C0 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C0
FORCE_SYMBOL $00C2 VIA_int_enable
COMMENT_LINE $00C4 ensure shift is "normal"
COMMENT $00C4 0 = shift,
FORCE_NO_SYMBOL $00C4
FORCE_SYMBOL $00C6 VIA_aux_cntl
COMMENT_LINE $00C9 PB6 stays
COMMENT_LINE $00C9 todo
COMMENT_LINE $00C9 ensure T1 setup correctly
COMMENT_LINE $00C9 - it usually is
COMMENT $00C9 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C9
FORCE_SYMBOL $00CB VIA_int_enable
COMMENT_LINE $00CD and now "trigger a interrupt
COMMENT $00CD a VERY short T1 timer
FORCE_NO_SYMBOL $00CD
FORCE_SYMBOL $00CF VIA_t1_cnt_lo
COMMENT $00D2 start timer
FORCE_SYMBOL $00D2 VIA_t1_cnt_hi
COMMENT $00D4 Peer Test
COMMENT_LINE $00D6 by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $00D6
COMMENT $00D8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00D8
FORCE_SYMBOL $00DA VIA_int_enable
COMMENT_LINE $00DC ensure shift is "normal"
COMMENT $00DC 0 = shift,
FORCE_NO_SYMBOL $00DC
FORCE_SYMBOL $00DE VIA_aux_cntl
COMMENT_LINE $00E1 PB6 stays
COMMENT $00E1 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $00E1
COMMENT_LINE $00E4 for some reason or another, VIA doesn't like a
COMMENT_LINE $00E4 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00E4 (only on a real vectrex, not Vide)
FORCE_SYMBOL $00E4 VIA_aux_cntl
COMMENT $00E6 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00E6 VIA_shift_reg
COMMENT $00E8 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00E8
FORCE_SYMBOL $00EA VIA_int_enable
COMMENT_LINE $00EC wait 20 cycles till store of aux (these are 23)
COMMENT $00EC 12
COMMENT $00ED 3
FORCE_NO_SYMBOL $00ED
COMMENT_LINE $00EF nop      10
FORCE_SYMBOL $00EF VIA_aux_cntl
FORCE_NO_SYMBOL $00F1
COMMENT $00F3 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00F3
FORCE_SYMBOL $00F5 VIA_int_enable
COMMENT_LINE $00F7 ensure shift is "normal"
COMMENT $00F7 0 = shift,
FORCE_NO_SYMBOL $00F7
FORCE_SYMBOL $00F9 VIA_aux_cntl
COMMENT_LINE $00FC for now only changes IRQ and y reg
COMMENT_LINE $00FC ...........
COMMENT $00FC Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00FC
COMMENT $00FE all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00FE VIA_DDR_b
COMMENT $0100 A = $01, B = 0
FORCE_NO_SYMBOL $0100
COMMENT $0102 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0102 VIA_port_b
COMMENT_LINE $0106 ...........
COMMENT $0106 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0106
COMMENT $0108 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0108 VIA_DDR_b
COMMENT $010A A = $01, B = 0
FORCE_NO_SYMBOL $010A
COMMENT $010C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $010C VIA_port_b
COMMENT $010E ensure that shift can generate interrupt
FORCE_NO_SYMBOL $010E
COMMENT_LINE $0111 for some reason or another, VIA doesn't like a
COMMENT_LINE $0111 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0111 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0111 VIA_aux_cntl
COMMENT $0113 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0113 VIA_shift_reg
COMMENT $0115 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0115
FORCE_SYMBOL $0117 VIA_int_enable
COMMENT_LINE $0119 wait 20 cycles till store of aux (these are 23)
COMMENT $0119 12
COMMENT $011A 3
FORCE_NO_SYMBOL $011A
COMMENT_LINE $011C nop      10
FORCE_SYMBOL $011C VIA_aux_cntl
FORCE_NO_SYMBOL $011E
COMMENT_LINE $0120 ...........
COMMENT $0120 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0120
FORCE_SYMBOL $0122 VIA_int_enable
COMMENT_LINE $0124 ensure shift is "normal"
COMMENT $0124 0 = shift,
FORCE_NO_SYMBOL $0124
FORCE_SYMBOL $0126 VIA_aux_cntl
COMMENT $0128 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0128
COMMENT $012A all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $012A VIA_DDR_b
COMMENT $012C A = $01, B = 0
FORCE_NO_SYMBOL $012C
COMMENT $012E ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $012E VIA_port_b
FORCE_NO_SYMBOL $0130
COMMENT_LINE $0132 ...........
COMMENT_LINE $0132 _jmpBankIRQ3X
COMMENT_LINE $0132 ATTENTION!
COMMENT_LINE $0132 THIS DOES NOT WORK ON A REAL VECTREX
COMMENT_LINE $0132 DUNNO WHY?
COMMENT_LINE $0132 AUX setting is needed, when SHIFT was changed!
COMMENT_LINE $0132 IRQ_TO_1
COMMENT_LINE $0132 PB6_TO_1
COMMENT_LINE $0132 jmp      ,x
COMMENT_LINE $0132 ...........
COMMENT $0132 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0132
COMMENT $0134 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0134 VIA_DDR_b
COMMENT $0136 A = $01, B = 0
FORCE_NO_SYMBOL $0136
COMMENT $0138 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0138 VIA_port_b
COMMENT $013A 0 = shift,
FORCE_NO_SYMBOL $013A
FORCE_SYMBOL $013D VIA_shift_reg
FORCE_SYMBOL $013F VIA_aux_cntl
COMMENT $0141 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0141
FORCE_SYMBOL $0143 VIA_int_enable
FORCE_NO_SYMBOL $0145
COMMENT_LINE $0147 ...........
COMMENT $0147 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0147
FORCE_SYMBOL $0149 VIA_int_enable
COMMENT_LINE $014B ensure shift is "normal"
COMMENT $014B 0 = shift,
FORCE_NO_SYMBOL $014B
FORCE_SYMBOL $014D VIA_aux_cntl
FORCE_NO_SYMBOL $014F
COMMENT $0151 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $0151
COMMENT_LINE $0154 for some reason or another, VIA doesn't like a
COMMENT_LINE $0154 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0154 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0154 VIA_aux_cntl
COMMENT $0156 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0156 VIA_shift_reg
COMMENT $0158 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0158
FORCE_SYMBOL $015A VIA_int_enable
COMMENT_LINE $015C wait 20 cycles till store of aux (these are 23)
COMMENT $015C 12
COMMENT $015D 3
FORCE_NO_SYMBOL $015D
COMMENT_LINE $015F nop      10
FORCE_SYMBOL $015F VIA_aux_cntl
COMMENT_LINE $0162 ...........
COMMENT_LINE $0162 PB6 stays 1
COMMENT_LINE $0162 todo
COMMENT_LINE $0162 ensure T1 setup correctly
COMMENT_LINE $0162 - it usually is
COMMENT $0162 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0162
FORCE_SYMBOL $0164 VIA_int_enable
COMMENT_LINE $0166 and now "trigger a interrupt
COMMENT $0166 a VERY short T1 timer
FORCE_NO_SYMBOL $0166
FORCE_SYMBOL $0168 VIA_t1_cnt_lo
COMMENT $016B start timer
FORCE_SYMBOL $016B VIA_t1_cnt_hi
COMMENT $016D Peer Test
COMMENT_LINE $016F by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $016F
COMMENT $0171 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0171
FORCE_SYMBOL $0173 VIA_int_enable
COMMENT_LINE $0175 ensure shift is "normal"
COMMENT $0175 0 = shift,
FORCE_NO_SYMBOL $0175
FORCE_SYMBOL $0177 VIA_aux_cntl
COMMENT_LINE $017A ...........
COMMENT $017A Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $017A
COMMENT $017C all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $017C VIA_DDR_b
COMMENT $017E A = $01, B = 0
FORCE_NO_SYMBOL $017E
COMMENT $0180 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0180 VIA_port_b
FORCE_NO_SYMBOL $0182
COMMENT $0184 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0184
COMMENT $0186 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0186 VIA_DDR_b
COMMENT $0188 A = $01, B = 0
FORCE_NO_SYMBOL $0188
COMMENT $018A ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $018A VIA_port_b
COMMENT_LINE $018D ...........
COMMENT $018D Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $018D
COMMENT $018F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $018F VIA_DDR_b
COMMENT $0191 A = $01, B = 0
FORCE_NO_SYMBOL $0191
COMMENT $0193 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0193 VIA_port_b
COMMENT $0195 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0195
FORCE_SYMBOL $0197 VIA_int_enable
COMMENT_LINE $0199 ensure shift is "normal"
COMMENT $0199 0 = shift,
FORCE_NO_SYMBOL $0199
FORCE_SYMBOL $019B VIA_aux_cntl
FORCE_NO_SYMBOL $019D
COMMENT_LINE $019F todo
COMMENT_LINE $019F ensure T1 setup correctly
COMMENT_LINE $019F - it usually is
COMMENT $019F bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $019F
FORCE_SYMBOL $01A1 VIA_int_enable
COMMENT_LINE $01A3 and now "trigger a interrupt
COMMENT $01A3 a VERY short T1 timer
FORCE_NO_SYMBOL $01A3
FORCE_SYMBOL $01A5 VIA_t1_cnt_lo
COMMENT $01A8 start timer
FORCE_SYMBOL $01A8 VIA_t1_cnt_hi
COMMENT $01AA Peer Test
COMMENT_LINE $01AC by the time, the macros "leaves" the interrupt is set!
COMMENT $01AC Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01AC
COMMENT $01AE all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01AE VIA_DDR_b
COMMENT $01B0 A = $01, B = 0
FORCE_NO_SYMBOL $01B0
COMMENT $01B2 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01B2 VIA_port_b
COMMENT $01B5 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $01B5
COMMENT $01B7 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01B7 VIA_DDR_b
COMMENT $01B9 A = $01, B = 0
FORCE_NO_SYMBOL $01B9
COMMENT $01BB ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01BB VIA_port_b
COMMENT $01BD bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01BD
FORCE_SYMBOL $01BF VIA_int_enable
COMMENT_LINE $01C1 ensure shift is "normal"
COMMENT $01C1 0 = shift,
FORCE_NO_SYMBOL $01C1
FORCE_SYMBOL $01C3 VIA_aux_cntl
FORCE_NO_SYMBOL $01C5
COMMENT $01C7 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01C7
COMMENT_LINE $01CA for some reason or another, VIA doesn't like a
COMMENT_LINE $01CA std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01CA (only on a real vectrex, not Vide)
FORCE_SYMBOL $01CA VIA_aux_cntl
COMMENT $01CC and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01CC VIA_shift_reg
COMMENT $01CE bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01CE
FORCE_SYMBOL $01D0 VIA_int_enable
COMMENT_LINE $01D2 wait 20 cycles till store of aux (these are 23)
COMMENT $01D2 12
COMMENT $01D3 3
FORCE_NO_SYMBOL $01D3
COMMENT_LINE $01D5 nop      10
FORCE_SYMBOL $01D5 VIA_aux_cntl
COMMENT $01D7 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01D7
COMMENT $01D9 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01D9 VIA_DDR_b
COMMENT $01DB A = $01, B = 0
FORCE_NO_SYMBOL $01DB
COMMENT $01DD ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01DD VIA_port_b
COMMENT $01E0 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01E0
COMMENT $01E2 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01E2 VIA_DDR_b
COMMENT $01E4 A = $01, B = 0
FORCE_NO_SYMBOL $01E4
COMMENT $01E6 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01E6 VIA_port_b
COMMENT $01E8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01E8
FORCE_SYMBOL $01EA VIA_int_enable
COMMENT_LINE $01EC ensure shift is "normal"
COMMENT $01EC 0 = shift,
FORCE_NO_SYMBOL $01EC
FORCE_SYMBOL $01EE VIA_aux_cntl
FORCE_NO_SYMBOL $01F0
COMMENT $01F2 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01F2
COMMENT_LINE $01F5 for some reason or another, VIA doesn't like a
COMMENT_LINE $01F5 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01F5 (only on a real vectrex, not Vide)
FORCE_SYMBOL $01F5 VIA_aux_cntl
COMMENT $01F7 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01F7 VIA_shift_reg
COMMENT $01F9 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01F9
FORCE_SYMBOL $01FB VIA_int_enable
COMMENT_LINE $01FD wait 20 cycles till store of aux (these are 23)
COMMENT $01FD 12
COMMENT $01FE 3
FORCE_NO_SYMBOL $01FE
COMMENT_LINE $0200 nop      10
FORCE_SYMBOL $0200 VIA_aux_cntl
COMMENT $0202 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0202
COMMENT $0204 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0204 VIA_DDR_b
COMMENT $0206 A = $01, B = 0
FORCE_NO_SYMBOL $0206
COMMENT $0208 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0208 VIA_port_b
COMMENT $020B Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $020B
COMMENT $020D all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $020D VIA_DDR_b
COMMENT $020F A = $01, B = 0
FORCE_NO_SYMBOL $020F
COMMENT $0211 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0211 VIA_port_b
COMMENT $0213 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0213
FORCE_SYMBOL $0215 VIA_int_enable
COMMENT_LINE $0217 ensure shift is "normal"
COMMENT $0217 0 = shift,
FORCE_NO_SYMBOL $0217
FORCE_SYMBOL $0219 VIA_aux_cntl
FORCE_NO_SYMBOL $021B
COMMENT $021D bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $021D
FORCE_SYMBOL $021F VIA_int_enable
COMMENT_LINE $0221 ensure shift is "normal"
COMMENT $0221 0 = shift,
FORCE_NO_SYMBOL $0221
FORCE_SYMBOL $0223 VIA_aux_cntl
FORCE_NO_SYMBOL $0225
COMMENT_LINE $0227 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0227 initialize jumps across bank
COMMENT_LINE $0227 one accros bank JSR (inclusive all) takes 46 cycles!
COMMENT_LINE $0227 these are bank switches only from bank 2 / 3
COMMENT_LINE $0227 IRQ is allways not enabled!
COMMENT_LINE $0227 bank 0 here means bank 2
COMMENT_LINE $0227 bank 1 here means bank 3
COMMENT_LINE $0227 (remnants from using only 2 banks)
COMMENT_LINE $0227 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0227 ensure bank 0
COMMENT_LINE $0227 ensure bit 6 = 0
COMMENT_LINE $0227 PB6_TO_0
COMMENT $0227 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0227
COMMENT $0229 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0229 VIA_DDR_b
COMMENT $022B A = $01, B = 0
FORCE_NO_SYMBOL $022B
COMMENT $022D ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $022D VIA_port_b
FORCE_NO_SYMBOL $022F
COMMENT_LINE $0231 ensure bank1
COMMENT $0231 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0231
COMMENT $0233 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0233 VIA_DDR_b
COMMENT_LINE $0236 ...........
COMMENT_LINE $0236 ensure bank 0
COMMENT_LINE $0236 ensure bit 6 = 0
COMMENT $0236 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0236
COMMENT $0238 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0238 VIA_DDR_b
COMMENT $023A A = $01, B = 0
FORCE_NO_SYMBOL $023A
COMMENT $023C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $023C VIA_port_b
FORCE_NO_SYMBOL $023E
COMMENT_LINE $0240 ...........
COMMENT_LINE $0240 ensure bank1
COMMENT $0240 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0240
COMMENT $0242 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0242 VIA_DDR_b
FORCE_NO_SYMBOL $0244
COMMENT_LINE $0246 ensure bank 0
COMMENT_LINE $0246 ensure bit 6 = 0
COMMENT $0246 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0246
COMMENT $0248 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0248 VIA_DDR_b
COMMENT $024A A = $01, B = 0
FORCE_NO_SYMBOL $024A
COMMENT $024C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $024C VIA_port_b
COMMENT_LINE $024F ...........
COMMENT_LINE $024F ensure bank 0
COMMENT_LINE $024F ensure bit 6 = 0
COMMENT $024F Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $024F
COMMENT $0251 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0251 VIA_DDR_b
FORCE_NO_SYMBOL $0253
COMMENT_LINE $0255 ...........
COMMENT_LINE $0255 changes y instead of d
COMMENT_LINE $0255 ensure bank1
FORCE_NO_SYMBOL $0255
FORCE_SYMBOL $0259 VIA_port_a
FORCE_NO_SYMBOL $025C
COMMENT_LINE $025E ensure bank 0
COMMENT_LINE $025E ensure bit 6 = 0
FORCE_NO_SYMBOL $025E
FORCE_SYMBOL $0261 VIA_port_b
FORCE_NO_SYMBOL $0263
FORCE_SYMBOL $0266 VIA_port_a
COMMENT_LINE $0269 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0269 ensure bank1
COMMENT $0269 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0269
COMMENT $026B all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $026B VIA_DDR_b
FORCE_NO_SYMBOL $026D
COMMENT_LINE $0270 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0270 ensure bank1
COMMENT $0270 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0270
COMMENT $0272 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0272 VIA_DDR_b
FORCE_NO_SYMBOL $0274
COMMENT_LINE $0277 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0277 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0277
COMMENT $0279 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0279 VIA_DDR_b
FORCE_NO_SYMBOL $027B
COMMENT_LINE $027E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $027E A = $01, B = 0
FORCE_NO_SYMBOL $027E
COMMENT $0280 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0280 VIA_port_b
COMMENT $0282 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0282
COMMENT $0284 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0284 VIA_DDR_b
FORCE_NO_SYMBOL $0286
COMMENT_LINE $0289 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0289 A = $01, B = 0
FORCE_NO_SYMBOL $0289
COMMENT $028B ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $028B VIA_port_b
COMMENT $028D Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $028D
COMMENT $028F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $028F VIA_DDR_b
FORCE_NO_SYMBOL $0291
COMMENT_LINE $0294 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0294 ***************************************************************************
COMMENT_LINE $0294 CODE SECTION
COMMENT_LINE $0294 ***************************************************************************
COMMENT_LINE $0294 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0294 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0294 but with regard to input
COMMENT_LINE $0294 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0294 mux sel:
COMMENT_LINE $0294 xxxx x00x: port 0 horizontal
COMMENT_LINE $0294 xxxx x01x: port 0 vertical
COMMENT_LINE $0294 xxxx x10x: port 1 horizontal
COMMENT_LINE $0294 xxxx x11x: port 1 vertical
COMMENT_LINE $0294 the result of the pot reading is compared to the
COMMENT_LINE $0294 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0294 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT $0294 mux disabled, mux sel = 01 (vertical pot port 0)
FORCE_NO_SYMBOL $0294
FORCE_SYMBOL $0297 VIA_port_b
COMMENT $0299 mux enabled, mux sel = 01
FORCE_SYMBOL $0299 VIA_port_b
COMMENT $029B a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
FORCE_SYMBOL $029B DIGITAL_JOYTICK_LOOP_MIN
COMMENT $029D ...
COMMENT $029E wait...
COMMENT $02A0 disable mux
FORCE_SYMBOL $02A0 VIA_port_b
COMMENT $02A2 load a with test value (positive y)
FORCE_NO_SYMBOL $02A2
COMMENT $02A5 test value to DAC
FORCE_SYMBOL $02A5 VIA_port_a
COMMENT $02A7 default result value y was pushed UP
FORCE_NO_SYMBOL $02A7
COMMENT $02A9 test comparator
FORCE_SYMBOL $02A9 VIA_port_b
COMMENT $02AB if comparator cleared - joystick was moved up
COMMENT $02AD "load" with negative value
FORCE_SYMBOL $02AD VIA_port_a
COMMENT $02AF also switch the possible result in A
COMMENT $02B0 test comparator again
FORCE_SYMBOL $02B0 VIA_port_b
COMMENT $02B2 if cleared the joystick was moved down
COMMENT $02B4 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $02B5 remember the result in "our" joystick data
FORCE_SYMBOL $02B5 Vec_Joy_1_Y
COMMENT_LINE $02B8 beq noymove\?
COMMENT_LINE $02B8 bra noxmove\? ; if y moved I assume no X move
COMMENT_LINE $02B8 now the same for horizontal
COMMENT $02B8 mux disabled, mux sel = 00 (horizontal pot port 0)
FORCE_NO_SYMBOL $02B8
FORCE_SYMBOL $02BB VIA_port_b
COMMENT $02BD mux enabled, mux sel = 01
FORCE_SYMBOL $02BD VIA_port_b
COMMENT $02BF a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
FORCE_SYMBOL $02BF DIGITAL_JOYTICK_LOOP_MIN
COMMENT $02C1 ...
COMMENT $02C2 wait...
COMMENT $02C4 disable mux
FORCE_SYMBOL $02C4 VIA_port_b
COMMENT $02C6 load a with test value (positive x)
FORCE_NO_SYMBOL $02C6
COMMENT $02C9 test value to DAC
FORCE_SYMBOL $02C9 VIA_port_a
COMMENT $02CB default result value x was pushed right
FORCE_NO_SYMBOL $02CB
COMMENT $02CD test comparator
FORCE_SYMBOL $02CD VIA_port_b
COMMENT $02CF if comparator cleared - joystick was moved right
COMMENT $02D1 "load" with negative value
FORCE_SYMBOL $02D1 VIA_port_a
COMMENT $02D3 also switch the possible result in A
COMMENT $02D4 test comparator again
FORCE_SYMBOL $02D4 VIA_port_b
COMMENT $02D6 if cleared the joystick was moved left
COMMENT $02D8 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $02D9 remember the result in "our" joystick data
FORCE_SYMBOL $02D9 Vec_Joy_1_X
COMMENT_LINE $02DF ***************************************************************************
COMMENT $02DF Increment loop counter
FORCE_SYMBOL $02DF Vec_Loop_Count
FORCE_NO_SYMBOL $02E2
FORCE_SYMBOL $02E4 Vec_Loop_Count
COMMENT $02E7 DP to I/O
FORCE_SYMBOL $02E7 DP_to_D0
FORCE_NO_SYMBOL $02EA
COMMENT $02EC /BLANK low and /ZERO low
FORCE_SYMBOL $02EC VIA_cntl
FORCE_NO_SYMBOL $02EE
COMMENT $02F0 Wait for timer t2
FORCE_SYMBOL $02F0 VIA_int_flags
COMMENT $02F4 Store refresh value
FORCE_NO_SYMBOL $02F4
COMMENT $02F7 into timer t2
FORCE_SYMBOL $02F7 VIA_t2_lo
COMMENT_LINE $02F9 TODO JMP Recalibrate
COMMENT_LINE $02FA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $02FA Button 1-4
COMMENT_LINE $02FA returns in B the current button state in relation to last button state
COMMENT_LINE $02FA bit 0 represents current button state
COMMENT_LINE $02FA bit 1 last button state
COMMENT_LINE $02FA 1 = pressed
COMMENT_LINE $02FA 0 = not pressed
COMMENT_LINE $02FA in a state of current button 1-4
COMMENT_LINE $02FA bit == 0 = pressed
COMMENT_LINE $02FA bit == 1 = not pressed
COMMENT_LINE $02FA a = xxxx 0000
COMMENT_LINE $02FA 4321 - buttons
COMMENT_LINE $02FA save last states, and shift the old current one bit
COMMENT_LINE $02FA query buttons from psg
COMMENT $02FA Sound chip register 0E to port A
FORCE_NO_SYMBOL $02FA
FORCE_SYMBOL $02FC VIA_port_a
COMMENT $02FE sound BDIR on, BC1 on, mux off
FORCE_NO_SYMBOL $02FE
COMMENT $0301 VIA Port B = 99, mux disabled, RAMP disabled, BC1/BDIR = 11 (Latch address)
FORCE_SYMBOL $0301 VIA_port_b
COMMENT $0303 pause
COMMENT $0304 VIA Port B = 81, mux disabled, RAMP disabled, BC1/BDIR = 00 (PSG inactive)
FORCE_SYMBOL $0304 VIA_port_b
COMMENT $0306 DDR A to input
FORCE_SYMBOL $0306 VIA_DDR_a
COMMENT $0308 sound BDIR off, BC1 on, mux off
FORCE_NO_SYMBOL $0308
COMMENT $030B VIA Port B = 89, mux disabled, RAMP disabled, BC1/BDIR = 01 (PSG Read)
FORCE_SYMBOL $030B VIA_port_b
COMMENT $030D pause
COMMENT $030E Read buttons
FORCE_SYMBOL $030E VIA_port_a
COMMENT $0310 VIA Port B = 81, mux disabled, RAMP disabled, BC1/BDIR = 00 (PSG inactive)
FORCE_SYMBOL $0310 VIA_port_b
FORCE_NO_SYMBOL $0312
COMMENT $0314 DDR A to output
FORCE_SYMBOL $0314 VIA_DDR_a
COMMENT_LINE $0316 query done, in A current button state directly from psg
FORCE_SYMBOL $0316 current_button_state
FORCE_SYMBOL $0319 last_button_state
COMMENT $031D only joystick 1
FORCE_NO_SYMBOL $031D
FORCE_NO_SYMBOL $031F
FORCE_SYMBOL $0324 current_button_state
FORCE_NO_SYMBOL $0327
COMMENT_LINE $032A ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $032A If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $032A - scale $ff -> zero 110 cycles
COMMENT_LINE $032A - scale $7f -> zero 75 cycles
COMMENT_LINE $032A - scale $40 -> zero 57 cycles
COMMENT_LINE $032A - scale $20 -> zero 53 cycles
COMMENT_LINE $032A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $032A U = address of vectorlist
COMMENT_LINE $032A X = (y,x) position of vectorlist (this will be point 0,0), positioning on screen
COMMENT_LINE $032A B = scalefactor "Move" (after sync)
COMMENT_LINE $032A A = scalefactor "Vector" (vectors in vectorlist)
COMMENT_LINE $032A mode, rel y, rel x,
COMMENT_LINE $032A mode, rel y, rel x,
COMMENT_LINE $032A .      .      .
COMMENT_LINE $032A .      .      .
COMMENT_LINE $032A mode, rel y, rel x,
COMMENT_LINE $032A 0x02
COMMENT_LINE $032A where mode has the following meaning:
COMMENT_LINE $032A negative draw line
COMMENT_LINE $032A 0 move to specified endpoint
COMMENT_LINE $032A 1 sync (and move to list start and than to place in vectorlist)
COMMENT_LINE $032A 2 end
COMMENT_LINE $032A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $032A remember out different scale factors
COMMENT_LINE $032E first list entry (first will be a sync + moveto_d, so we just stay here!)
COMMENT $032E this will be a "1"
COMMENT $0330 test if real sync - or end of list (2)
COMMENT $0331 if end of list -> jump
COMMENT_LINE $0333 zero integrators
COMMENT $0333 zero the integrators
FORCE_NO_SYMBOL $0333
COMMENT $0335 store zeroing values to cntl
FORCE_SYMBOL $0335 VIA_cntl
COMMENT $0337 and wait for zeroing to be actually done
FORCE_SYMBOL $0337 ZERO_DELAY
COMMENT_LINE $0339 reset integrators
COMMENT $0339 reset integrator offset
FORCE_SYMBOL $0339 VIA_port_a
FORCE_NO_SYMBOL $033B
COMMENT_LINE $033D wait that zeroing surely has the desired effect!
COMMENT $033D while waiting, zero offsets
FORCE_SYMBOL $033D VIA_port_b
COMMENT $0342 Enable mux
FORCE_SYMBOL $0342 VIA_port_b
COMMENT_LINE $0344 unzero is done by moveto_d
COMMENT $0344 scalefactor move
FORCE_NO_SYMBOL $0344
COMMENT $0346 to timer t1 (lo=
FORCE_SYMBOL $0346 VIA_t1_cnt_lo
COMMENT $0348 load our coordinates of "entry" of vectorlist
COMMENT_LINE $034A uses shift
COMMENT_LINE $034A and resets the shift interrupt flag (and does not = again :-(
COMMENT_LINE $034A jsr      Moveto_d                     ; move there
COMMENT_LINE $034A replace with shift invariant movetod
COMMENT $034A Store Y in D/A register
FORCE_SYMBOL $034A VIA_port_a
COMMENT $034C Blank low, zero high?
FORCE_NO_SYMBOL $034C
FORCE_SYMBOL $034E VIA_cntl
COMMENT $0351 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0351 VIA_port_b
COMMENT_LINE $0354 nop
COMMENT $0354 Disable mux
FORCE_SYMBOL $0354 VIA_port_b
COMMENT $0356 Store X in D/A register
FORCE_SYMBOL $0356 VIA_port_a
COMMENT $0358 enable timer
FORCE_SYMBOL $0358 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $035A
FORCE_SYMBOL $035C VIA_int_flags
COMMENT $0360 scale factor vector
FORCE_NO_SYMBOL $0360
COMMENT $0362 to timer T1 (lo)
FORCE_SYMBOL $0362 VIA_t1_cnt_lo
COMMENT $0364 do our "internal" moveto d
COMMENT $0366 there was a move 0,0, if so
COMMENT $0368 Store Y in D/A register
FORCE_SYMBOL $0368 VIA_port_a
COMMENT $036A Blank low, zero high?
FORCE_NO_SYMBOL $036A
FORCE_SYMBOL $036C VIA_cntl
COMMENT $036F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $036F VIA_port_b
COMMENT_LINE $0372 nop
COMMENT $0372 Disable mux
FORCE_SYMBOL $0372 VIA_port_b
COMMENT $0374 Store X in D/A register
FORCE_SYMBOL $0374 VIA_port_a
COMMENT $0376 enable timer
FORCE_SYMBOL $0376 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $0378
FORCE_SYMBOL $037A VIA_int_flags
COMMENT $037E load next "mode" byte
COMMENT $0380 if 0, than we should move somewhere
COMMENT $0382 if still positive it is a 1 pr 2 _> goto sync
COMMENT_LINE $0384 now we should draw a vector
COMMENT $0384 Get next coordinate pair
COMMENT $0386 Send Y to A/D
FORCE_SYMBOL $0386 VIA_port_a
COMMENT $0388 Enable mux
FORCE_SYMBOL $0388 VIA_port_b
COMMENT $038A prepare for blank disabled
FORCE_NO_SYMBOL $038A
COMMENT $038C Disable mux
FORCE_SYMBOL $038C VIA_port_b
COMMENT $038E Send X to A/D
FORCE_SYMBOL $038E VIA_port_a
COMMENT $0390 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $0390
COMMENT $0392 Clear T1H
FORCE_SYMBOL $0392 VIA_t1_cnt_hi
COMMENT_LINE $0394 blank disabled
COMMENT $0394 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $0394 VIA_cntl
COMMENT $0396 Wait for T1 to time out
FORCE_SYMBOL $0396 VIA_int_flags
COMMENT $0398 wait till line is finished
COMMENT $039A prepare for blank disabled
FORCE_NO_SYMBOL $039A
COMMENT_LINE $039D blank enabled
COMMENT $039D [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $039D VIA_cntl
COMMENT $03A1 correct stack and go back
COMMENT_LINE $03A4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $03A4 no scale factors = in function
COMMENT_LINE $03A4 in u just the address of the list
COMMENT_LINE $03A4 if starting with sync -> it will return to zero first!
COMMENT_LINE $03A4 will NOT zero on exit
COMMENT_LINE $03A4 uses = scale for everything
COMMENT_LINE $03A4 first list entry (first will be a sync + moveto_d, so we just stay here!)
COMMENT $03A4 this will be a "1"
COMMENT_LINE $03A8 bne drawTo0 ; first can in this sync list even be a draw
COMMENT $03A8 test if real sync - or end of list (2)
COMMENT $03A9 if end of list -> jump
COMMENT_LINE $03AB zero integrators
COMMENT $03AB zero the integrators
FORCE_NO_SYMBOL $03AB
COMMENT $03AD store zeroing values to cntl
FORCE_SYMBOL $03AD VIA_cntl
COMMENT $03AF and wait for zeroing to be actually done
FORCE_SYMBOL $03AF ZERO_DELAY
COMMENT_LINE $03B1 reset integrators
COMMENT $03B1 reset integrator offset
FORCE_SYMBOL $03B1 VIA_port_a
FORCE_NO_SYMBOL $03B3
COMMENT_LINE $03B5 wait that zeroing surely has the desired effect!
COMMENT $03B5 while waiting, zero offsets
FORCE_SYMBOL $03B5 VIA_port_b
FORCE_SYMBOL $03BB VIA_port_b
COMMENT $03BD do our "internal" moveto d
COMMENT $03BF Store Y in D/A register
FORCE_SYMBOL $03BF VIA_port_a
COMMENT $03C1 Blank low, zero high?
FORCE_NO_SYMBOL $03C1
FORCE_SYMBOL $03C3 VIA_cntl
COMMENT $03C6 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $03C6 VIA_port_b
COMMENT_LINE $03C9 nop
COMMENT $03C9 Disable mux
FORCE_SYMBOL $03C9 VIA_port_b
COMMENT $03CB Store X in D/A register
FORCE_SYMBOL $03CB VIA_port_a
COMMENT $03CD enable timer
FORCE_SYMBOL $03CD VIA_t1_cnt_hi
COMMENT $03CF prepare for blank disabled
FORCE_NO_SYMBOL $03CF
FORCE_NO_SYMBOL $03D1
FORCE_SYMBOL $03D3 VIA_int_flags
COMMENT $03D7 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $03D7 VIA_cntl
COMMENT $03D9 load next "mode" byte
COMMENT $03DB if 0, than we should move somewhere
COMMENT $03DD if still positive it is a 1 pr 2 _> goto sync
COMMENT_LINE $0000 now we should draw a vector
COMMENT $03DF Get next coordinate pair
COMMENT $03E1 Send Y to A/D
FORCE_SYMBOL $03E1 VIA_port_a
COMMENT $03E3 Enable mux
FORCE_SYMBOL $03E3 VIA_port_b
COMMENT $03E5 prepare for blank disabled
FORCE_NO_SYMBOL $03E5
COMMENT $03E7 Disable mux
FORCE_SYMBOL $03E7 VIA_port_b
COMMENT $03E9 Send X to A/D
FORCE_SYMBOL $03E9 VIA_port_a
COMMENT $03EB B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $03EB
COMMENT $03ED Clear T1H
FORCE_SYMBOL $03ED VIA_t1_cnt_hi
COMMENT_LINE $03EF blank disabled
COMMENT $03EF [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $03EF VIA_cntl
COMMENT $03F1 Wait for T1 to time out
FORCE_SYMBOL $03F1 VIA_int_flags
COMMENT $03F3 wait till line is finished
COMMENT $03F5 prepare for blank disabled
FORCE_NO_SYMBOL $03F5
COMMENT_LINE $03F7 blank enabled
COMMENT_LINE $03F7 WAIT4 ; this closes some gaps in sync draw - but isobviously slower!
COMMENT_LINE $03F7 ;;                    sta      <VIA_cntl                    ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $03F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $03F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $03F9 "in instruction" bankswitch not supported by VIDE
FORCE_NO_SYMBOL $03F9
FORCE_SYMBOL $03FC sfx_pointer_3
FORCE_SYMBOL $03FF sfx_pointer_2
FORCE_SYMBOL $0402 sfx_pointer_1
COMMENT $0405 no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $0405 Vec_Music_Flag
COMMENT $0408 shadow regs
FORCE_SYMBOL $0408 Init_Music_Buf
COMMENT $040B ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $040B Do_Sound
FORCE_NO_SYMBOL $040E
FORCE_SYMBOL $0411 tmp16_tmp
FORCE_NO_SYMBOL $0414
FORCE_SYMBOL $0416 VIA_t1_cnt_lo
FORCE_SYMBOL $041A Vec_Text_Height
COMMENT $041D ensure that shift can generate interrupt
FORCE_NO_SYMBOL $041D
COMMENT_LINE $0420 for some reason or another, VIA doesn't like a
COMMENT_LINE $0420 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0420 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0420 VIA_aux_cntl
COMMENT $0422 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0422 VIA_shift_reg
COMMENT $0424 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0424
FORCE_SYMBOL $0426 VIA_int_enable
COMMENT_LINE $0428 wait 20 cycles till store of aux (these are 23)
COMMENT $0428 12
COMMENT $0429 3
FORCE_NO_SYMBOL $0429
COMMENT_LINE $042B nop      10
FORCE_SYMBOL $042B VIA_aux_cntl
FORCE_NO_SYMBOL $042D
FORCE_SYMBOL $042F playerOneOffsetDifference
FORCE_SYMBOL $0432 ReadyPlayerOneData
FORCE_SYMBOL $0435 sfx_pointer_1
COMMENT $0438 Vectrex BIOS recalibration
FORCE_SYMBOL $0438 Wait_Recal_noShift
FORCE_SYMBOL $043B do_ym_sound2
FORCE_SYMBOL $043E Intensity_5F
FORCE_SYMBOL $0441 rpoString
FORCE_SYMBOL $0444 playerOneOffsetDifference
FORCE_SYMBOL $0447 playerOneOffsetDifference
COMMENT $044A starting three above!
FORCE_SYMBOL $044A playerOneOffsetDifference
COMMENT $044D starting three above!
FORCE_SYMBOL $044D playerOneOffsetCurrent
FORCE_SYMBOL $0450 playerOneOffsetDifference
FORCE_SYMBOL $0455 playerOneOffsetDifference
FORCE_NO_SYMBOL $0458
FORCE_SYMBOL $045B playerOneOffsetDifference
FORCE_SYMBOL $0464 sync_Print_Str_d_fixed_8
FORCE_SYMBOL $0467 tmp16_tmp
FORCE_NO_SYMBOL $046A
FORCE_SYMBOL $046D tmp16_tmp
COMMENT_LINE $0473 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0473 put move position on stack put it so, that we can load "d" directly from stack
COMMENT $0475 Save string pointer
FORCE_SYMBOL $0475 Vec_Str_Ptr
COMMENT_LINE $0478 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0478 Point to start of chargen bitmaps
FORCE_SYMBOL $0478 FONT_START_A_8
FORCE_NO_SYMBOL $047B
COMMENT $047D store zeroing values to cntl
FORCE_SYMBOL $047D VIA_cntl
COMMENT_LINE $047F zero
COMMENT $047F zero the integrators
COMMENT_LINE $0482 reset integrators
COMMENT_LINE $0482 ;;; clr <VIA_port_a ; reset integrator offset
COMMENT_LINE $0482 lda #%10000010
COMMENT_LINE $0482 wait that zeroing surely has the desired effect!
FORCE_SYMBOL $0482 VIA_port_a
FORCE_SYMBOL $0484 VIA_port_b
COMMENT $0486 and wait for zeroing to be actually done
FORCE_SYMBOL $0486 ZERO_DELAY_P
FORCE_SYMBOL $0489 VIA_port_b
COMMENT_LINE $048B ;;; sta <VIA_port_b ; while waiting, zero offsets
COMMENT_LINE $048E ;;; inc <VIA_port_b
FORCE_NO_SYMBOL $048E
COMMENT_LINE $0490 ;;;;;;
COMMENT $0490 Store Y in D/A register
FORCE_SYMBOL $0490 VIA_port_a
COMMENT $0492 Blank low, zero high?
FORCE_NO_SYMBOL $0492
FORCE_SYMBOL $0494 VIA_cntl
COMMENT $0497 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0497 VIA_port_b
COMMENT_LINE $049A nop
COMMENT $049A Disable mux
FORCE_SYMBOL $049A VIA_port_b
COMMENT $049C Store X in D/A register
FORCE_SYMBOL $049C VIA_port_a
COMMENT $049E enable timer
FORCE_SYMBOL $049E VIA_t1_cnt_hi
COMMENT $04A0 Point to start of text string
FORCE_SYMBOL $04A0 Vec_Str_Ptr
FORCE_NO_SYMBOL $04A3
FORCE_SYMBOL $04A5 VIA_int_flags
FORCE_SYMBOL $04A9 playerOneOffsetCurrent
COMMENT $04AD Store Y in D/A register
FORCE_SYMBOL $04AD VIA_port_a
COMMENT $04AF Blank low, zero high?
FORCE_NO_SYMBOL $04AF
FORCE_SYMBOL $04B1 VIA_cntl
COMMENT $04B4 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $04B4 VIA_port_b
COMMENT_LINE $04B7 nop
COMMENT $04B7 Disable mux
FORCE_SYMBOL $04B7 VIA_port_b
COMMENT $04B9 Store X in D/A register
FORCE_SYMBOL $04B9 VIA_port_a
COMMENT $04BB enable timer
FORCE_SYMBOL $04BB VIA_t1_cnt_hi
FORCE_SYMBOL $04BD playerOneOffsetCurrent
FORCE_SYMBOL $04C0 playerOneOffsetDifference
FORCE_SYMBOL $04C3 playerOneOffsetCurrent
FORCE_NO_SYMBOL $04C6
FORCE_SYMBOL $04C8 VIA_int_flags
COMMENT_LINE $04CC ;;;;;;
COMMENT $04CC AUX: b→ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $04CC
COMMENT $04CF ramp off/on set mux to channel 1
FORCE_SYMBOL $04CF VIA_port_b
COMMENT $04D1 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $04D1 VIA_aux_cntl
COMMENT $04D3 Clear D/A output
FORCE_SYMBOL $04D3 VIA_port_a
COMMENT_LINE $04D5 first entry here, ramp is disabled
COMMENT_LINE $04D5 if there was a jump from below
COMMENT_LINE $04D5 ramp will be enabled by next line
COMMENT $04D5 Enable mux
FORCE_SYMBOL $04D5 VIA_port_b
COMMENT $04DA Disable mux
FORCE_SYMBOL $04DA VIA_port_b
COMMENT $04DC Send it to the D/A
FORCE_SYMBOL $04DC VIA_port_a
COMMENT $04DE [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $04DE VIA_port_b
COMMENT $04E0 [3]
COMMENT_LINE $04E2 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $04E2 13 cycles overhead
COMMENT_LINE $04E2 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $04E2 [+5]Get bitmap from chargen table
COMMENT $04E4 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $04E4 VIA_shift_reg
COMMENT $04E6 [+6]Get next character
COMMENT $04E8 [+3]Go back if not terminator
COMMENT $04EA [4]Check for last row
FORCE_SYMBOL $04EA FONT_END_8
COMMENT $04ED [3]Branch if last row
COMMENT $04EF [3]Point to next chargen row
FORCE_SYMBOL $04EF FONT_LENGTH_8
FORCE_NO_SYMBOL $04F2
COMMENT $04F5 PB7 enabled
FORCE_SYMBOL $04F5 VIA_aux_cntl
FORCE_SYMBOL $04F7 Vec_Text_Height
FORCE_NO_SYMBOL $04FA
FORCE_NO_SYMBOL $04FC
COMMENT $04FE Go back for next scan line
FORCE_SYMBOL $04FE next_line_a_8_of
FORCE_NO_SYMBOL $0501
FORCE_SYMBOL $0504 VIA_shift_reg
COMMENT $0506 T1→PB7 enabled
FORCE_SYMBOL $0506 VIA_aux_cntl
COMMENT $0508 all done, correct stack
COMMENT_LINE $050A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0533 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0533 gameScale
FORCE_SYMBOL $0536 VIA_t1_cnt_lo
FORCE_SYMBOL $053A Vec_Text_Height
COMMENT $053D ensure that shift can generate interrupt
FORCE_NO_SYMBOL $053D
COMMENT_LINE $0540 for some reason or another, VIA doesn't like a
COMMENT_LINE $0540 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0540 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0540 VIA_aux_cntl
COMMENT $0542 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0542 VIA_shift_reg
COMMENT $0544 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0544
FORCE_SYMBOL $0546 VIA_int_enable
COMMENT_LINE $0548 wait 20 cycles till store of aux (these are 23)
COMMENT $0548 12
COMMENT $0549 3
FORCE_NO_SYMBOL $0549
COMMENT_LINE $054B nop      10
FORCE_SYMBOL $054B VIA_aux_cntl
FORCE_SYMBOL $054D Intensity_5F
FORCE_SYMBOL $0550 gopoString
FORCE_NO_SYMBOL $0553
FORCE_SYMBOL $0556 sync_Print_Str_d_fixed_8
COMMENT_LINE $0559 return to caller
COMMENT $0559 backFromGameOver0
FORCE_NO_SYMBOL $0559
FORCE_SYMBOL $055C jmpBankIRQ1Shift
COMMENT_LINE $055F not needed?
COMMENT_LINE $055F showButtonToContinue ;#isfunction
COMMENT_LINE $055F lda      #$7f
COMMENT_LINE $055F sta      <VIA_t1_cnt_lo
COMMENT_LINE $055F lda      #-2
COMMENT_LINE $055F sta      Vec_Text_Height
COMMENT_LINE $055F lda      #-2
COMMENT_LINE $055F sta      Vec_Text_Width
COMMENT_LINE $055F IRQ_TO_0_SHIFT
COMMENT_LINE $055F jsr      Intensity_5F
COMMENT_LINE $055F ldu      #buttonString
COMMENT_LINE $055F ldd      #$b0b0
COMMENT_LINE $055F jsr      sync_Print_Str_d_fixed_8
COMMENT_LINE $055F return to caller
COMMENT_LINE $055F REPLACE_1_2_backshowButton_varFromIRQ1_1
COMMENT_LINE $055F ldx      #0                           ; backshowButton
COMMENT_LINE $055F jmp      jmpBankIRQ1Shift
COMMENT_LINE $0750 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0750 zero delay is needed for zeroing to work correctly
COMMENT_LINE $0750 depends on the distance of the current integrator position to actual zero point
COMMENT_LINE $0750 experiment with my vectri:
COMMENT_LINE $0750 ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $0750 If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $0750 - scale $ff -> zero 110 cycles
COMMENT_LINE $0750 - scale $7f -> zero 75 cycles
COMMENT_LINE $0750 - scale $40 -> zero 57 cycles
COMMENT_LINE $0750 - scale $20 -> zero 53 cycles
COMMENT_LINE $0750 put move position on stack put it so, that we can load "d" directly from stack
COMMENT $0752 Save string pointer
FORCE_SYMBOL $0752 Vec_Str_Ptr
COMMENT_LINE $0755 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0755 Point to start of chargen bitmaps
FORCE_SYMBOL $0755 FONT_START_A_8
FORCE_NO_SYMBOL $0758
COMMENT $075A store zeroing values to cntl
FORCE_SYMBOL $075A VIA_cntl
COMMENT_LINE $075C zero
COMMENT $075C zero the integrators
COMMENT_LINE $075F reset integrators
COMMENT_LINE $075F ;;; clr <VIA_port_a ; reset integrator offset
COMMENT_LINE $075F lda #%10000010
COMMENT_LINE $075F wait that zeroing surely has the desired effect!
FORCE_SYMBOL $075F VIA_port_a
FORCE_SYMBOL $0761 VIA_port_b
COMMENT $0763 and wait for zeroing to be actually done
FORCE_SYMBOL $0763 ZERO_DELAY_P
FORCE_SYMBOL $0766 VIA_port_b
COMMENT_LINE $0768 ;;; sta <VIA_port_b ; while waiting, zero offsets
COMMENT_LINE $076B ;;; inc <VIA_port_b
FORCE_NO_SYMBOL $076B
COMMENT_LINE $076D ;;;;;;
COMMENT $076D Store Y in D/A register
FORCE_SYMBOL $076D VIA_port_a
COMMENT $076F Blank low, zero high?
FORCE_NO_SYMBOL $076F
FORCE_SYMBOL $0771 VIA_cntl
COMMENT $0774 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0774 VIA_port_b
COMMENT_LINE $0777 nop
COMMENT $0777 Disable mux
FORCE_SYMBOL $0777 VIA_port_b
COMMENT $0779 Store X in D/A register
FORCE_SYMBOL $0779 VIA_port_a
COMMENT $077B enable timer
FORCE_SYMBOL $077B VIA_t1_cnt_hi
COMMENT $077D Point to start of text string
FORCE_SYMBOL $077D Vec_Str_Ptr
FORCE_NO_SYMBOL $0780
FORCE_SYMBOL $0782 VIA_int_flags
COMMENT_LINE $0786 ;;;;;;
COMMENT $0786 AUX: b→ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $0786
COMMENT $0789 ramp off/on set mux to channel 1
FORCE_SYMBOL $0789 VIA_port_b
COMMENT $078B Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $078B VIA_aux_cntl
COMMENT $078D Clear D/A output
FORCE_SYMBOL $078D VIA_port_a
COMMENT_LINE $078F first entry here, ramp is disabled
COMMENT_LINE $078F if there was a jump from below
COMMENT_LINE $078F ramp will be enabled by next line
COMMENT $078F Enable mux
FORCE_SYMBOL $078F VIA_port_b
COMMENT $0794 Disable mux
FORCE_SYMBOL $0794 VIA_port_b
COMMENT $0796 Send it to the D/A
FORCE_SYMBOL $0796 VIA_port_a
COMMENT $0798 [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $0798 VIA_port_b
COMMENT $079A [3]
COMMENT_LINE $079C one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $079C 13 cycles overhead
COMMENT_LINE $079C ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $079C [+5]Get bitmap from chargen table
COMMENT $079E [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $079E VIA_shift_reg
COMMENT $07A0 [+6]Get next character
COMMENT $07A2 [+3]Go back if not terminator
COMMENT $07A4 [4]Check for last row
FORCE_SYMBOL $07A4 FONT_END_8
COMMENT $07A7 [3]Branch if last row
COMMENT $07A9 [3]Point to next chargen row
FORCE_SYMBOL $07A9 FONT_LENGTH_8
FORCE_NO_SYMBOL $07AC
COMMENT $07AF PB7 enabled
FORCE_SYMBOL $07AF VIA_aux_cntl
FORCE_SYMBOL $07B1 Vec_Text_Height
FORCE_NO_SYMBOL $07B4
FORCE_NO_SYMBOL $07B6
COMMENT $07B8 Go back for next scan line
FORCE_NO_SYMBOL $07BA
FORCE_SYMBOL $07BD VIA_shift_reg
COMMENT $07BF T1→PB7 enabled
FORCE_SYMBOL $07BF VIA_aux_cntl
COMMENT $07C1 all done, correct stack
COMMENT_LINE $07C3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $07C3
FORCE_SYMBOL $07C5 playerNumberOfBulletsPerShot
FORCE_SYMBOL $07CB ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3
FORCE_SYMBOL $07CF playerMaxShotInAir
FORCE_SYMBOL $07D2 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2
FORCE_SYMBOL $07D6 playerMaxShotInAir
FORCE_SYMBOL $07D9 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1
FORCE_SYMBOL $07DD playerMaxShotInAir
FORCE_SYMBOL $07E0 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5
FORCE_SYMBOL $07E4 playerSpeed
FORCE_SYMBOL $07E7 SPEED_DELTA
FORCE_SYMBOL $07EA SPEED_DELTA
FORCE_SYMBOL $07ED playerSpeed
FORCE_SYMBOL $07F3 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4
FORCE_SYMBOL $07F7 playerSpeed
FORCE_SYMBOL $07FA SPEED_DELTA
FORCE_SYMBOL $07FD SPEED_DELTA
FORCE_SYMBOL $0800 playerSpeed
FORCE_SYMBOL $0806 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3
FORCE_SYMBOL $080A playerSpeed
FORCE_SYMBOL $080D SPEED_DELTA
FORCE_SYMBOL $0810 SPEED_DELTA
FORCE_SYMBOL $0813 playerSpeed
FORCE_SYMBOL $0819 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2
FORCE_SYMBOL $081D playerSpeed
FORCE_SYMBOL $0820 SPEED_DELTA
FORCE_SYMBOL $0823 SPEED_DELTA
FORCE_SYMBOL $0826 playerSpeed
FORCE_SYMBOL $082C ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1
FORCE_SYMBOL $0830 playerSpeed
FORCE_SYMBOL $0833 SPEED_DELTA
FORCE_SYMBOL $0836 SPEED_DELTA
FORCE_SYMBOL $0839 playerSpeed
FORCE_SYMBOL $0842 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5
FORCE_SYMBOL $0846 playerCashW
FORCE_NO_SYMBOL $0849
FORCE_SYMBOL $084C playerCashW
FORCE_SYMBOL $0852 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4
FORCE_SYMBOL $0856 playerCashW
FORCE_NO_SYMBOL $0859
FORCE_SYMBOL $085C playerCashW
FORCE_SYMBOL $0862 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3
FORCE_SYMBOL $0866 playerCashW
FORCE_NO_SYMBOL $0869
FORCE_SYMBOL $086C playerCashW
FORCE_SYMBOL $0872 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2
FORCE_SYMBOL $0876 playerCashW
FORCE_NO_SYMBOL $0879
FORCE_SYMBOL $087C playerCashW
FORCE_SYMBOL $0882 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1
FORCE_SYMBOL $0886 playerCashW
FORCE_NO_SYMBOL $0889
FORCE_SYMBOL $088C playerCashW
FORCE_SYMBOL $0892 ACHIEVEMENT_FLAG_BYTE2_GREEDY
FORCE_SYMBOL $0896 playerNumberOfBulletsPerShot
FORCE_SYMBOL $089C ACHIEVEMENT_FLAG_BYTE6_MINESTORM_FALCON
FORCE_SYMBOL $08A0 playerNumberOfBulletsPerShot
FORCE_SYMBOL $08A6 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4
FORCE_SYMBOL $08AA BITFIELD_ARMOR
FORCE_SYMBOL $08AC playerBonusActive
FORCE_SYMBOL $08B2 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2
FORCE_SYMBOL $08B6 diverseFlags
FORCE_SYMBOL $08B9 BIT_FLAG_AUTOFIRE
FORCE_SYMBOL $08BB diverseFlags
FORCE_SYMBOL $08C1 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1
FORCE_SYMBOL $08C5 bonusTimerLength
COMMENT $08C8 add 10 seconds
FORCE_NO_SYMBOL $08C8
FORCE_SYMBOL $08CB bonusTimerLength
FORCE_SYMBOL $08D1 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4
FORCE_SYMBOL $08D5 smartBombsAvailable
FORCE_SYMBOL $08DB ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4
FORCE_SYMBOL $08DF playerShotSpeed
FORCE_SYMBOL $08E2 SPEED_DELTA
FORCE_SYMBOL $08E5 SPEED_DELTA
FORCE_SYMBOL $08E8 playerShotSpeed
FORCE_SYMBOL $08EE ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3
FORCE_SYMBOL $08F2 playerShotSpeed
FORCE_SYMBOL $08F5 SPEED_DELTA
FORCE_SYMBOL $08F8 SPEED_DELTA
FORCE_SYMBOL $08FB playerShotSpeed
FORCE_SYMBOL $0901 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2
FORCE_SYMBOL $0905 playerShotSpeed
FORCE_SYMBOL $0908 SPEED_DELTA
FORCE_SYMBOL $090B SPEED_DELTA
FORCE_SYMBOL $090E playerShotSpeed
FORCE_SYMBOL $0914 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1
FORCE_SYMBOL $0918 playerShotSpeed
FORCE_SYMBOL $091B SPEED_DELTA
FORCE_SYMBOL $091E SPEED_DELTA
FORCE_SYMBOL $0921 playerShotSpeed
FORCE_SYMBOL $0925 ANIMATION_DELAY
FORCE_SYMBOL $0927 eyeLeftAnimDelayCounter
FORCE_SYMBOL $092A animDelayCounter
FORCE_SYMBOL $092D diverseFlags
COMMENT $0930 moneey rollover must be saved
FORCE_NO_SYMBOL $0930
FORCE_SYMBOL $0932 diverseFlags
FORCE_NO_SYMBOL $0935
FORCE_SYMBOL $0938 eyeLeftAnimCounter
FORCE_SYMBOL $093B bonusHitCount
FORCE_SYMBOL $093E bonusSpawnCount
FORCE_SYMBOL $0941 playerAnim
FORCE_SYMBOL $0944 playAnimDelayCounter
FORCE_SYMBOL $0947 testShot
FORCE_SYMBOL $094A test2Shot
FORCE_SYMBOL $094D bulletSpawnAt
FORCE_SYMBOL $0950 bonusSpawnPosition
FORCE_SYMBOL $0953 introWaveEnemyCount
FORCE_SYMBOL $0956 introWaveCurrentPatternCount
FORCE_SYMBOL $0959 levelEnemyCount
FORCE_SYMBOL $095C levelEnemyCountUID
FORCE_SYMBOL $095F playerShotCount
FORCE_SYMBOL $0962 starCount
FORCE_SYMBOL $0965 enemyCount
FORCE_SYMBOL $0968 patternDelayCounter
FORCE_SYMBOL $096B globalPatternWobble
FORCE_SYMBOL $096E globalPatternWobbleDirection
FORCE_SYMBOL $0971 explosionSound
FORCE_SYMBOL $0974 lightningOn
FORCE_SYMBOL $0977 playerWasHitFor
FORCE_SYMBOL $097A attackPatternCount
FORCE_SYMBOL $097D attackPatternInitiated
COMMENT_LINE $0981 ..................................................
COMMENT_LINE $0981 playerShotCountW    ds       2                            ; statistics
COMMENT_LINE $0981 playerHitCountW     ds       2
FORCE_SYMBOL $0981 tmp_div1
FORCE_NO_SYMBOL $0984
FORCE_SYMBOL $0989 playerShotCountW
COMMENT $098E divide by four - ensures divide by 100 is 8 bit value, max 164
COMMENT_LINE $0990 divide count by 100
FORCE_SYMBOL $0990 divide_tmp
FORCE_SYMBOL $0998 divide_tmp
FORCE_NO_SYMBOL $099B
FORCE_SYMBOL $09A1 divide_tmp
FORCE_SYMBOL $09A4 tmp_div1
FORCE_SYMBOL $09A9 divide_tmp
FORCE_SYMBOL $09AF divide_tmp
FORCE_SYMBOL $09B2 tmp_div1
FORCE_SYMBOL $09B7 divide_tmp
FORCE_SYMBOL $09BA tmp_div1
COMMENT $09BD that is our new divider
FORCE_SYMBOL $09C0 playerHitCountW
COMMENT $09C5 divide by four - same "size" as shot count
COMMENT_LINE $09C7 divide shotcount
FORCE_SYMBOL $09C7 divide_tmp
FORCE_SYMBOL $09CF divide_tmp
FORCE_NO_SYMBOL $09D2
FORCE_SYMBOL $09D8 divide_tmp
FORCE_SYMBOL $09DB tmp_div1
FORCE_SYMBOL $09E0 divide_tmp
FORCE_SYMBOL $09E6 divide_tmp
FORCE_SYMBOL $09E9 tmp_div1
FORCE_SYMBOL $09EE divide_tmp
COMMENT_LINE $09F1 in b percentage hit!
COMMENT $09F1 remember!
FORCE_SYMBOL $09F1 tmp_div1
COMMENT_LINE $09F5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $09F5 count seccrets found NOW
FORCE_SYMBOL $09F6 inGameSecrets
FORCE_SYMBOL $0A15 secretCount
COMMENT_LINE $0A19 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $0A19
COMMENT_LINE $0A31 todo do real reward
COMMENT_LINE $0A31 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0A31 scoopy lock
FORCE_SYMBOL $0A31 lockPurchased
FORCE_NO_SYMBOL $0A34
COMMENT $0A36 shield for scoopies! (once)
FORCE_SYMBOL $0A36 lockPurchased
COMMENT_LINE $0A39 money sucker
FORCE_SYMBOL $0A39 inGameSecrets
FORCE_SYMBOL $0A3C SECRET_3_FIFTY
FORCE_SYMBOL $0A3E inGameSecrets
COMMENT_LINE $0A41 extra stats
FORCE_SYMBOL $0A41 inGameSecrets
FORCE_SYMBOL $0A44 SECRET_3_BULLET_SUCKERS
FORCE_SYMBOL $0A46 inGameSecrets
COMMENT_LINE $0A49 jmp      goBackBandint
COMMENT $0A49 goBackBandint
FORCE_NO_SYMBOL $0A49
FORCE_SYMBOL $0A4C jmpBank2_from0
COMMENT_LINE $0A4F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0A4F downgradeImmunity
COMMENT $0A52 immunity 1+2
FORCE_NO_SYMBOL $0A52
FORCE_SYMBOL $0A54 downgradeImmunity
COMMENT_LINE $0A57 jmp      goBackBandint
COMMENT $0A57 goBackBandint
FORCE_NO_SYMBOL $0A57
FORCE_SYMBOL $0A5A jmpBank2_from0
COMMENT_LINE $0A5D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0A5D diverseFlags
FORCE_SYMBOL $0A60 BIT_FLAG_AUTOFIRE
FORCE_SYMBOL $0A62 diverseFlags
FORCE_SYMBOL $0A65 MAX_SHOT_SPEED
FORCE_SYMBOL $0A68 playerShotSpeed
FORCE_SYMBOL $0A6B MAX_PLAYERSHOT_OBJECTS
FORCE_SYMBOL $0A6D playerMaxShotInAir
FORCE_SYMBOL $0A70 MAX_PLAYER_SPEED
FORCE_SYMBOL $0A73 playerSpeed
FORCE_SYMBOL $0A76 smartBombsAvailable
FORCE_NO_SYMBOL $0A79
FORCE_SYMBOL $0A7B smartBombsAvailable
FORCE_SYMBOL $0A7E BITFIELD_ARMOR
FORCE_SYMBOL $0A80 playerBonusActive
COMMENT_LINE $0A83 jmp      goBackBandint
COMMENT $0A83 goBackBandint
FORCE_NO_SYMBOL $0A83
FORCE_SYMBOL $0A86 jmpBank2_from0
COMMENT_LINE $0A89 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $0A89
FORCE_SYMBOL $0A8B smartBombsAvailable
COMMENT $0A8E goBackBandint
FORCE_NO_SYMBOL $0A8E
FORCE_SYMBOL $0A91 jmpBank2_from0
COMMENT_LINE $0A94 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0A94 bonusTimerLength
COMMENT $0A97 add 1,5 minutes
FORCE_NO_SYMBOL $0A97
COMMENT $0A9C maximum timer!
FORCE_NO_SYMBOL $0A9C
FORCE_SYMBOL $0A9F bonusTimerLength
COMMENT_LINE $0AA2 jmp      goBackBandint
COMMENT $0AA2 goBackBandint
FORCE_NO_SYMBOL $0AA2
FORCE_SYMBOL $0AA5 jmpBank2_from0
COMMENT_LINE $0AA8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0AA8 lockPurchased
FORCE_NO_SYMBOL $0AAB
FORCE_SYMBOL $0AAD lockPurchased
COMMENT_LINE $0AB0 jmp      goBackBandint
COMMENT $0AB0 goBackBandint
FORCE_NO_SYMBOL $0AB0
FORCE_SYMBOL $0AB3 jmpBank2_from0
COMMENT_LINE $0AB6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0AB6 MAX_BULLET_POWER_ADJUST
FORCE_SYMBOL $0AB8 bulletDamageAdjust
COMMENT_LINE $0ABB jmp      goBackBandint
COMMENT $0ABB goBackBandint
FORCE_NO_SYMBOL $0ABB
FORCE_SYMBOL $0ABE jmpBank2_from0
COMMENT_LINE $0AC1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0AC3 not more than 9 lives!
FORCE_SYMBOL $0AC3 playerLives
COMMENT_LINE $0AC6 jmp      goBackBandint
COMMENT $0AC6 goBackBandint
FORCE_NO_SYMBOL $0AC6
FORCE_SYMBOL $0AC9 jmpBank2_from0
COMMENT_LINE $0ACC score instead of lives!
COMMENT_LINE $0ACC add one million (without multiply)
FORCE_SYMBOL $0ACC player_score_6
FORCE_SYMBOL $0ACF player_score
COMMENT $0AD3 addScoreBack11
FORCE_NO_SYMBOL $0AD3
FORCE_SYMBOL $0AD6 jsrBank3_from0_SHIFT
COMMENT_LINE $0AD9 jmp      goBackBandint
COMMENT $0AD9 goBackBandint
FORCE_NO_SYMBOL $0AD9
FORCE_SYMBOL $0ADC jmpBank2_from0
COMMENT_LINE $0ADF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0ADF playerCashW
FORCE_NO_SYMBOL $0AE2
FORCE_SYMBOL $0AE5 playerCashW
FORCE_SYMBOL $0AE8 playerCashW
FORCE_SYMBOL $0AEB playerCashW
FORCE_SYMBOL $0AF0 diverseFlags
FORCE_SYMBOL $0AF3 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $0AF5 diverseFlags
FORCE_SYMBOL $0AF8 playerCashW
COMMENT_LINE $0AFB jmp      goBackBandint
COMMENT $0AFB goBackBandint
FORCE_NO_SYMBOL $0AFB
FORCE_SYMBOL $0AFE jmpBank2_from0
COMMENT_LINE $0B01 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $0B01
FORCE_SYMBOL $0B03 playerNumberOfBulletsPerShot
FORCE_SYMBOL $0B06 diverseFlags
FORCE_SYMBOL $0B09 BIT_FLAG_AUTOFIRE
COMMENT $0B0B also enable autofire!
FORCE_SYMBOL $0B0B diverseFlags
COMMENT_LINE $0B0E jmp      goBackBandint
COMMENT $0B0E goBackBandint
FORCE_NO_SYMBOL $0B0E
FORCE_SYMBOL $0B11 jmpBank2_from0
COMMENT_LINE $0B14 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $0B14
FORCE_SYMBOL $0B17 Vec_Loop_Count
COMMENT_LINE $0B1A timer three minutes
FORCE_SYMBOL $0B1D bonusTimerLength
FORCE_SYMBOL $0B20 playerBonusCounter
COMMENT_LINE $0B23 enable shield
FORCE_SYMBOL $0B23 BITFIELD_SHIELD
FORCE_SYMBOL $0B25 playerBonusActive
COMMENT_LINE $0B28 enable scoopy shield
FORCE_NO_SYMBOL $0B28
COMMENT $0B2A shield for scoopies! (once)
FORCE_SYMBOL $0B2A lockPurchased
COMMENT_LINE $0B2D shot speed
FORCE_NO_SYMBOL $0B2D
FORCE_SYMBOL $0B30 playerShotSpeed
COMMENT_LINE $0B33 4 shot
COMMENT $0B33 6 max
FORCE_NO_SYMBOL $0B33
FORCE_SYMBOL $0B35 playerNumberOfBulletsPerShot
COMMENT_LINE $0B38 10 bullets
COMMENT $0B38 10 max
FORCE_SYMBOL $0B38 MAX_PLAYERSHOT_OBJECTS
FORCE_SYMBOL $0B3A playerMaxShotInAir
FORCE_NO_SYMBOL $0B3D
FORCE_SYMBOL $0B3F playerShotSpeed
COMMENT $0B45 +10 new since, enemies now start at the bottom
COMMENT $0B48 y wise a fixed compare is used, since y wise all shots are equal
FORCE_SYMBOL $0B48 shotYRadius
COMMENT_LINE $0B4B fighter speed
FORCE_NO_SYMBOL $0B4B
COMMENT $0B4E 255 = 1 "pixel" per move
FORCE_SYMBOL $0B4E playerSpeed
COMMENT_LINE $0B51 autofire
FORCE_NO_SYMBOL $0B51
COMMENT $0B53 that is autofire only
FORCE_SYMBOL $0B53 diverseFlags
COMMENT_LINE $0B56 difficulty - hard
FORCE_NO_SYMBOL $0B56
FORCE_SYMBOL $0B58 difficulty
COMMENT_LINE $0B5B level to play
FORCE_NO_SYMBOL $0B5B
FORCE_SYMBOL $0B5D levelCount
COMMENT $0B60 money that sucker can be seen!
FORCE_NO_SYMBOL $0B60
FORCE_SYMBOL $0B63 playerCashW
FORCE_SYMBOL $0B67 flashAvailable
COMMENT $0B6A a new game is no saved game!
FORCE_SYMBOL $0B6C flashAvailable
FORCE_NO_SYMBOL $0B6F
FORCE_SYMBOL $0B72 Vec_Text_HW
FORCE_SYMBOL $0B75 diamondCount
FORCE_NO_SYMBOL $0B78
FORCE_SYMBOL $0B7B levelsPlayed
FORCE_SYMBOL $0B7E inGameSecrets
FORCE_NO_SYMBOL $0B81
FORCE_SYMBOL $0B83 lastCollectedBonus
FORCE_SYMBOL $0B86 secretBonusCounter
FORCE_SYMBOL $0B89 bulletDamageAdjust
FORCE_SYMBOL $0B8C rankCollected
FORCE_SYMBOL $0B8F doWarpFailure
FORCE_SYMBOL $0B92 officerRankTmp
COMMENT_LINE $0B95 reset multiplyer
COMMENT_LINE $0B95 lda #MULTIPLY_1_OR
COMMENT_LINE $0B95 lda multiplyer ; !!! == downgradeImmunity
FORCE_SYMBOL $0B95 difficulty
FORCE_NO_SYMBOL $0B98
FORCE_NO_SYMBOL $0B9A
FORCE_NO_SYMBOL $0B9E
FORCE_SYMBOL $0BA0 MULTIPLY_1_OR
FORCE_SYMBOL $0BA2 downgradeImmunity
COMMENT_LINE $0BA5 todo setup correctly from SAVE
COMMENT_LINE $0BA5 clr downgradeImmunity ; 1 = immunity to downgrade from level 1 shots (on capture - not shop)
FORCE_SYMBOL $0BA5 START_TIMER_MAX
FORCE_SYMBOL $0BA8 bonusTimerLength
FORCE_SYMBOL $0BAE player_score_6
FORCE_SYMBOL $0BB1 player_score_4
FORCE_SYMBOL $0BB4 player_score_2
FORCE_SYMBOL $0BB7 player_score_0
FORCE_NO_SYMBOL $0BBA
FORCE_SYMBOL $0BBC player_score_80
FORCE_SYMBOL $0BC5 playerLivesString
FORCE_SYMBOL $0BCA difficulty
FORCE_SYMBOL $0BD1 playerLives
FORCE_SYMBOL $0BD4 DEAFULT_START_MONEY
FORCE_SYMBOL $0BD7 playerCashW
FORCE_SYMBOL $0BDA LOCK_START
COMMENT $0BDC lock + warp lock
FORCE_SYMBOL $0BDC lockPurchased
FORCE_NO_SYMBOL $0BDF
FORCE_SYMBOL $0BE2 drunkTimer
FORCE_SYMBOL $0BE5 perfectBonus
FORCE_SYMBOL $0BE8 multTimer
FORCE_SYMBOL $0BEB secretBonusCounter
FORCE_SYMBOL $0BEE smartBombsAvailable
FORCE_SYMBOL $0BF1 currentLevelPointer
FORCE_SYMBOL $0BF4 playerBonusActive
FORCE_SYMBOL $0BF7 diverseFlags
COMMENT_LINE $0000 inc diverseFlags ; that is autofire only
FORCE_SYMBOL $0BFA scoopEnemy1
FORCE_SYMBOL $0BFD scoopEnemy2
FORCE_SYMBOL $0C00 rightSmallGunAnimStart
FORCE_SYMBOL $0C03 leftSmallGunAnimStart
FORCE_SYMBOL $0C06 rightBigGunAnimStart
FORCE_SYMBOL $0C09 leftBigGunAnimStart
FORCE_SYMBOL $0C0C eyeLeftAnimCounter
COMMENT $0C0F normal
FORCE_SYMBOL $0C0F messageState
FORCE_SYMBOL $0C12 colorCycleCount
FORCE_SYMBOL $0C15 playerXpos
FORCE_SYMBOL $0C18 bonusDisplay
FORCE_SYMBOL $0C1B playerShotCountW
FORCE_SYMBOL $0C1E playerHitCountW
FORCE_SYMBOL $0C21 tmp1
COMMENT $0C24 10 max
FORCE_SYMBOL $0C24 START_SHOT_NUMBER
FORCE_SYMBOL $0C26 playerMaxShotInAir
COMMENT $0C29 6 max
FORCE_SYMBOL $0C29 START_SHOT_WIDTH
FORCE_SYMBOL $0C2B playerNumberOfBulletsPerShot
FORCE_SYMBOL $0C2E START_SHOT_SPEED
FORCE_SYMBOL $0C31 playerShotSpeed
FORCE_NO_SYMBOL $0C34
FORCE_SYMBOL $0C36 playerShotSpeed
COMMENT $0C3C +10 new since, enemies now start at the bottom
COMMENT $0C3F y wise a fixed compare is used, since y wise all shots are equal
FORCE_SYMBOL $0C3F shotYRadius
FORCE_SYMBOL $0C42 START_FIGHTER_SPEED
COMMENT $0C45 255 = 1 "pixel" per move
FORCE_SYMBOL $0C45 playerSpeed
COMMENT_LINE $0C48 initialize the empty object list
COMMENT_LINE $0C48 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0C48 BONUS
FORCE_SYMBOL $0C48 bonusCollect
FORCE_SYMBOL $0C4B bonusDisplay
FORCE_SYMBOL $0C4E chosenStartLevel
FORCE_SYMBOL $0C51 levelCount
COMMENT_LINE $0C55 bank 1 + a little bank 0
COMMENT_LINE $0C55 no priority, sounds get "overwritten" when new ones come
COMMENT_LINE $0C55 channel 1: player stuff is
COMMENT_LINE $0C55 and all things "shop"
COMMENT_LINE $0C55 channel 2: enemy shot sound is
COMMENT_LINE $0C55 enemy explosions
COMMENT_LINE $0C55 channel 3: dodger background hum
COMMENT_LINE $0C55 enemy shot spawn, enemy hit
COMMENT_LINE $0C55 bank 1
COMMENT_LINE $0C55 original vectrex routine were written by Richard Chadd
COMMENT_LINE $0C55 (optimized version!)
COMMENT_LINE $0C55 regs used by below implementation
COMMENT_LINE $0C55 U and D
COMMENT_LINE $0C55 X is also used, but can be spared - see below comments
COMMENT_LINE $0C55 this is only channel 1 is implemented
COMMENT_LINE $0C55 ;;;;;;;;;;;;;;;
COMMENT_LINE $0C55 ;;;;;;;;;;;;;;;
COMMENT_LINE $0C55 set volume off channel 3
COMMENT_LINE $0C55 set reg1sf0
COMMENT_LINE $0C55 Set volume
COMMENT $0C55 reset sfx
FORCE_NO_SYMBOL $0C55
FORCE_SYMBOL $0C5B sfx_pointer_1
COMMENT_LINE $0C5E allow playing of normal effects
FORCE_SYMBOL $0C5E playSoundFlags
FORCE_NO_SYMBOL $0C61
FORCE_SYMBOL $0C63 playSoundFlags
COMMENT $0C67 get current frame pointer
FORCE_SYMBOL $0C67 sfx_pointer_1
COMMENT $0C6E check first flag byte D0
FORCE_NO_SYMBOL $0C6E
COMMENT $0C70 no match - continue to process frame
FORCE_NO_SYMBOL $0C72
COMMENT $0C74 check second flag byte 20
FORCE_NO_SYMBOL $0C74
COMMENT $0C76 match - end of effect found so stop playing
COMMENT $0C78 if bit 5 of B is set
FORCE_NO_SYMBOL $0C78
COMMENT $0C7A skip as no tone freq data
COMMENT $0C7C alternative to destroying d load any 2 byte reg,
COMMENT $0C7E here I destroy d
COMMENT_LINE $0C81 or if x mus be preserved
COMMENT_LINE $0C81 ldd      ,u++ ; alternative to destroying d load any 2 byte reg,
COMMENT_LINE $0C81 std      SHADOW_BASE+00 ; here I destroy d
COMMENT_LINE $0C81 ldb -2,u ; and load b anew - one instruction to many,
COMMENT $0C81 if bit 6 of B is only set
FORCE_NO_SYMBOL $0C81
COMMENT $0C83 skip as no noise freq data
COMMENT $0C85 get next data byte and copy to noise freq reg
COMMENT $0C87 set noise freq
COMMENT $0C8C get volume from bits 0-3
FORCE_NO_SYMBOL $0C8C
COMMENT $0C8E set tone freq
COMMENT $0C91 in the following reg 7 will be altered - load once
COMMENT $0C94 if bit 4 of B is set disable the tone
FORCE_NO_SYMBOL $0C94
FORCE_NO_SYMBOL $0C98
COMMENT $0C9A if bit7 of B is set disable noise
FORCE_NO_SYMBOL $0C9A
FORCE_NO_SYMBOL $0C9E
COMMENT $0CA0 set tone freq
COMMENT $0CA3 update frame pointer to next flag byte in Y
FORCE_SYMBOL $0CA3 sfx_pointer_1
FORCE_NO_SYMBOL $0CA7
COMMENT $0CA9 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $0CA9
FORCE_NO_SYMBOL $0CAD
COMMENT $0CAF set tone freq
COMMENT $0CB2 update frame pointer to next flag byte in Y
FORCE_SYMBOL $0CB2 sfx_pointer_1
FORCE_NO_SYMBOL $0CB6
COMMENT $0CB8 set tone freq
COMMENT $0CBB update frame pointer to next flag byte in Y
FORCE_SYMBOL $0CBB sfx_pointer_1
COMMENT_LINE $0CBF bank 1
COMMENT_LINE $0CBF original vectrex routine were written by Richard Chadd
COMMENT_LINE $0CBF (optimized version!)
COMMENT_LINE $0CBF regs used by below implementation
COMMENT_LINE $0CBF U and D
COMMENT_LINE $0CBF X is also used, but can be spared - see below comments
COMMENT_LINE $0CBF this is only channel 2 is implemented
COMMENT_LINE $0CBF ;;;;;;;;;;;;;;;
COMMENT_LINE $0CBF ;;;;;;;;;;;;;;;
COMMENT_LINE $0CBF set volume off channel 3
COMMENT_LINE $0CBF set reg1sf0
COMMENT_LINE $0CBF Set volume
COMMENT $0CBF reset sfx
FORCE_NO_SYMBOL $0CBF
FORCE_SYMBOL $0CC5 sfx_pointer_2
COMMENT_LINE $0CC8 allow playing of normal effects
FORCE_SYMBOL $0CC8 playSoundFlags
FORCE_NO_SYMBOL $0CCB
FORCE_SYMBOL $0CCD playSoundFlags
COMMENT $0CD1 get current frame pointer
FORCE_SYMBOL $0CD1 sfx_pointer_2
COMMENT $0CD8 check first flag byte D0
FORCE_NO_SYMBOL $0CD8
COMMENT $0CDA no match - continue to process frame
FORCE_NO_SYMBOL $0CDC
COMMENT $0CDE check second flag byte 20
FORCE_NO_SYMBOL $0CDE
COMMENT $0CE0 match - end of effect found so stop playing
COMMENT $0CE2 if bit 5 of B is set
FORCE_NO_SYMBOL $0CE2
COMMENT $0CE4 skip as no tone freq data
COMMENT $0CE6 alternative to destroying d load any 2 byte reg,
COMMENT $0CE8 here I destroy d
COMMENT_LINE $0CEB or if x mus be preserved
COMMENT_LINE $0CEB ldd      ,u++ ; alternative to destroying d load any 2 byte reg,
COMMENT_LINE $0CEB std      SHADOW_BASE+02 ; here I destroy d
COMMENT_LINE $0CEB ldb -2,u ; and load b anew - one instruction to many,
COMMENT $0CEB if bit 6 of B is only set
FORCE_NO_SYMBOL $0CEB
COMMENT $0CED skip as no noise freq data
COMMENT $0CEF get next data byte and copy to noise freq reg
COMMENT $0CF1 set noise freq
COMMENT $0CF6 get volume from bits 0-3
FORCE_NO_SYMBOL $0CF6
COMMENT $0CF8 set tone freq
COMMENT $0CFB in the following reg 7 will be altered - load once
COMMENT $0CFE if bit 4 of B is set disable the tone
FORCE_NO_SYMBOL $0CFE
FORCE_NO_SYMBOL $0D02
COMMENT $0D04 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $0D04
FORCE_NO_SYMBOL $0D08
COMMENT $0D0A set tone freq
COMMENT $0D0D update frame pointer to next flag byte in Y
FORCE_SYMBOL $0D0D sfx_pointer_2
FORCE_NO_SYMBOL $0D11
COMMENT $0D13 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $0D13
FORCE_NO_SYMBOL $0D17
COMMENT $0D19 set tone freq
COMMENT $0D1C update frame pointer to next flag byte in Y
FORCE_SYMBOL $0D1C sfx_pointer_2
FORCE_NO_SYMBOL $0D20
COMMENT $0D22 set tone freq
COMMENT $0D25 update frame pointer to next flag byte in Y
FORCE_SYMBOL $0D25 sfx_pointer_2
COMMENT_LINE $0D29 bank 1
COMMENT_LINE $0D29 original vectrex routine were written by Richard Chadd
COMMENT_LINE $0D29 (optimized version!)
COMMENT_LINE $0D29 regs used by below implementation
COMMENT_LINE $0D29 U and D
COMMENT_LINE $0D29 X is also used, but can be spared - see below comments
COMMENT_LINE $0D29 this is only channel 3 is implemented
COMMENT_LINE $0D29 ;;;;;;;;;;;;;;;
COMMENT_LINE $0D29 ;;;;;;;;;;;;;;;
COMMENT_LINE $0D29 set volume off channel 3
COMMENT_LINE $0D29 set reg1sf0
COMMENT_LINE $0D29 Set volume
COMMENT $0D29 reset sfx
FORCE_NO_SYMBOL $0D29
FORCE_SYMBOL $0D2F sfx_pointer_3
COMMENT_LINE $0D32 allow playing of normal effects
FORCE_SYMBOL $0D32 playSoundFlags
FORCE_NO_SYMBOL $0D35
FORCE_SYMBOL $0D37 playSoundFlags
COMMENT $0D3B get current frame pointer
FORCE_SYMBOL $0D3B sfx_pointer_3
COMMENT $0D42 check first flag byte D0
FORCE_NO_SYMBOL $0D42
COMMENT $0D44 no match - continue to process frame
FORCE_NO_SYMBOL $0D46
COMMENT $0D48 check second flag byte 20
FORCE_NO_SYMBOL $0D48
COMMENT $0D4A match - end of effect found so stop playing
COMMENT $0D4C if bit 5 of B is set
FORCE_NO_SYMBOL $0D4C
COMMENT $0D4E skip as no tone freq data
COMMENT $0D50 alternative to destroying d load any 2 byte reg,
COMMENT $0D52 here I destroy d
COMMENT_LINE $0D55 or if x mus be preserved
COMMENT_LINE $0D55 ldd      ,u++ ; alternative to destroying d load any 2 byte reg,
COMMENT_LINE $0D55 std      SHADOW_BASE+04 ; here I destroy d
COMMENT_LINE $0D55 ldb -2,u ; and load b anew - one instruction to many,
COMMENT $0D55 if bit 6 of B is only set
FORCE_NO_SYMBOL $0D55
COMMENT $0D57 skip as no noise freq data
COMMENT $0D59 get next data byte and copy to noise freq reg
COMMENT $0D5B set tone freq
COMMENT $0D60 get volume from bits 0-3
FORCE_NO_SYMBOL $0D60
COMMENT $0D62 set tone freq
COMMENT $0D65 in the following reg 7 will be altered - load once
COMMENT $0D68 if bit 4 of B is set disable the tone
FORCE_NO_SYMBOL $0D68
FORCE_NO_SYMBOL $0D6C
COMMENT $0D6E if bit7 of B is set disable noise
FORCE_NO_SYMBOL $0D6E
FORCE_NO_SYMBOL $0D72
COMMENT $0D74 set tone freq
COMMENT $0D77 update frame pointer to next flag byte in Y
FORCE_SYMBOL $0D77 sfx_pointer_3
FORCE_NO_SYMBOL $0D7B
COMMENT $0D7D if bit7 of B is set disable noise
FORCE_NO_SYMBOL $0D7D
FORCE_NO_SYMBOL $0D81
COMMENT $0D83 set tone freq
COMMENT $0D86 update frame pointer to next flag byte in Y
FORCE_SYMBOL $0D86 sfx_pointer_3
FORCE_NO_SYMBOL $0D8A
COMMENT $0D8C set tone freq
COMMENT $0D8F update frame pointer to next flag byte in Y
FORCE_SYMBOL $0D8F sfx_pointer_3
COMMENT_LINE $0D93 ***************************************************************************
COMMENT $0000 a = reg, b = data
COMMENT $0000 store register select byte
COMMENT $0000 sound BDIR on, BC1 on, mux off _ LATCH
COMMENT $0000 sound BDIR off, BC1 off, mux off - INACTIVE
COMMENT $0000 read sound chip status (?)
COMMENT $0000 store data byte
COMMENT $0000 sound BDIR on, BC1 off, mux off - WRITE
COMMENT $0000 sound BDIR off, BC1 off, mux off - INACTIVE
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 store data in reg a in an
COMMENT_LINE $0000 appropriate way to PSG register (here: BIOS working buffer)
COMMENT_LINE $0000 ***************************************************************************
FORCE_SYMBOL $0D95 sfx_doframe_intern_2
FORCE_SYMBOL $0D98 sfx_doframe_intern_1
COMMENT_LINE $0D9B copy all shadows
COMMENT $0D9B number of regs to copy (+1)
FORCE_NO_SYMBOL $0D9B
COMMENT $0D9D music players write here
FORCE_SYMBOL $0D9D Vec_Music_Work
COMMENT $0DA0 shadow of actual PSG
FORCE_SYMBOL $0DA0 Vec_Snd_Shadow
COMMENT_LINE $0DA9 no put to psg
COMMENT $0DA9 ensure shadow has copy
COMMENT_LINE $0DAB a = register
COMMENT_LINE $0DAB b = value
COMMENT $0DAB store register select byte
FORCE_SYMBOL $0DAB VIA_port_a
COMMENT $0DAD sound BDIR on, BC1 on, mux off _ LATCH
FORCE_NO_SYMBOL $0DAD
FORCE_SYMBOL $0DAF VIA_port_b
COMMENT $0DB1 sound BDIR off, BC1 off, mux off - INACTIVE
FORCE_NO_SYMBOL $0DB1
FORCE_SYMBOL $0DB3 VIA_port_b
COMMENT $0DB5 read sound chip status (?)
FORCE_SYMBOL $0DB5 VIA_port_a
COMMENT $0DB7 store data byte
FORCE_SYMBOL $0DB7 VIA_port_a
COMMENT $0DB9 sound BDIR on, BC1 off, mux off - WRITE
FORCE_NO_SYMBOL $0DB9
FORCE_SYMBOL $0DBB VIA_port_b
COMMENT $0DBD sound BDIR off, BC1 off, mux off - INACTIVE
FORCE_NO_SYMBOL $0DBD
FORCE_SYMBOL $0DBF VIA_port_b
COMMENT_LINE $0DC5 *****************
COMMENT_LINE $0DC5 allSoundEffects
COMMENT_LINE $0E61 todo
COMMENT_LINE $0E61 last draw could contain $F in A
COMMENT_LINE $0E61 than load not needed - attention
COMMENT_LINE $0E61 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $0E61 also in X could be some sensible value in X for one of the other
COMMENT_LINE $0E61 SMVB_lastDraw_rts2                                ;#isfunction
COMMENT_LINE $0E61 list format
COMMENT_LINE $0E61 y pos byte -> REG A
COMMENT_LINE $0E61 VIA_B for x reg = 01 *256 + x pos byte -> REG X
COMMENT_LINE $0E61 pointer to draw function -> PC
COMMENT_LINE $0E61 5 bytes per "position" (except continuous)
COMMENT_LINE $0E61 reg A must be constantly == 0!
COMMENT_LINE $0E61 opti finding
COMMENT_LINE $0E61 a)  Findings T1 can be 2 cycles "off" -> smartlist max scale of "optimium" reduced from 9 to 7 scale :-(
COMMENT_LINE $0E61 b ) y and z sampling need up to 4 cycles to bare fruit (poke b reg)
COMMENT_LINE $0E61 90% vectrex (guess) need 0 cycles
COMMENT_LINE $0E61 95% vectrex are content with 2 cycles (1 nop)
COMMENT_LINE $0E61 some few vectrex NEED 4 cycles!!! ARGH!
COMMENT_LINE $0E61 c)  std to reg b of via (Y Reg) does not always / everywhere work
COMMENT_LINE $0E61 delays needed for 5% of vectrex
COMMENT_LINE $0E61 cost on a "full" screen
COMMENT_LINE $0E61 about 1900 cycles
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT $0000 4
COMMENT $0000 4 shift not changed, move might also be a draw
COMMENT $0000 5
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 NOPS add one less, since PULL X is one cycle more than pull a!
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0E64 ***************************************************************************
COMMENT_LINE $0E64 /* HIGHEST SCALE FOR SMARTLIST + CONTINUE is 16!
FORCE_SYMBOL $0E64 VIA_t1_cnt_lo
COMMENT $0E68 5
FORCE_SYMBOL $0E68 VIA_port_b
COMMENT $0E6A 4
FORCE_SYMBOL $0E6A VIA_t1_cnt_hi
COMMENT $0E6E 4
FORCE_SYMBOL $0E6E VIA_port_a
COMMENT $0E70 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0E70 VIA_port_b
COMMENT $0000 4
COMMENT $0E73 5
FORCE_SYMBOL $0E73 VIA_port_b
COMMENT $0E75 4
FORCE_SYMBOL $0E75 VIA_t1_cnt_hi
COMMENT $0E77 21
COMMENT_LINE $0000 this is one pulu cycle more!
COMMENT_LINE $0000 thus ADD_NOPS can be one cycle less!
COMMENT_LINE $0000 minus 6!
COMMENT $0E77 5+3
COMMENT $0E79 4
FORCE_SYMBOL $0E79 VIA_port_a
COMMENT $0E7B 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0E7B VIA_port_b
COMMENT $0000 4
COMMENT $0E7E 5
FORCE_SYMBOL $0E7E VIA_port_b
COMMENT $0E80 4
FORCE_SYMBOL $0E80 VIA_t1_cnt_hi
COMMENT $0E82 21
COMMENT $0E82 5+3
COMMENT $0E84 4
FORCE_SYMBOL $0E84 VIA_port_a
COMMENT $0E86 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0E86 VIA_port_b
COMMENT $0000 4
COMMENT $0E89 5
FORCE_SYMBOL $0E89 VIA_port_b
COMMENT $0E8B 4
FORCE_SYMBOL $0E8B VIA_t1_cnt_hi
COMMENT $0E8D 21
COMMENT $0E8D 5+3
COMMENT $0E8F 4
FORCE_SYMBOL $0E8F VIA_port_a
COMMENT $0E91 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0E91 VIA_port_b
COMMENT $0000 4
COMMENT $0E94 5
FORCE_SYMBOL $0E94 VIA_port_b
COMMENT $0E96 4
FORCE_SYMBOL $0E96 VIA_t1_cnt_hi
COMMENT $0E98 21
COMMENT $0E98 5+3
COMMENT $0E9A 4
FORCE_SYMBOL $0E9A VIA_port_a
COMMENT $0E9C 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0E9C VIA_port_b
COMMENT $0000 4
COMMENT $0E9F 5
FORCE_SYMBOL $0E9F VIA_port_b
COMMENT $0EA1 4
FORCE_SYMBOL $0EA1 VIA_t1_cnt_hi
COMMENT $0EA3 21
COMMENT $0EA3 5+3
COMMENT $0EA5 4
FORCE_SYMBOL $0EA5 VIA_port_a
COMMENT $0EA7 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EA7 VIA_port_b
COMMENT $0000 4
COMMENT $0EAA 5
FORCE_SYMBOL $0EAA VIA_port_b
COMMENT $0EAC 4
FORCE_SYMBOL $0EAC VIA_t1_cnt_hi
COMMENT $0EAE 21
COMMENT $0EAE 5+3
COMMENT $0EB0 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EB0 VIA_port_a
COMMENT_LINE $0EB2 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $0EB2 4
FORCE_SYMBOL $0EB2 VIA_port_b
COMMENT_LINE $0EB4 Y_DELAY                               ; 4
COMMENT_LINE $0EB7 Y_DELAY_HALF ; 4
COMMENT $0EB7 5
FORCE_SYMBOL $0EB7 VIA_port_b
FORCE_SYMBOL $0EB9 VIA_t1_cnt_hi
COMMENT_LINE $0EBD continue uses same shift
COMMENT $0EBD 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EBD VIA_port_a
COMMENT_LINE $0EBF y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $0EBF 4
FORCE_SYMBOL $0EBF VIA_port_b
COMMENT $0EC1 4
COMMENT $0EC2 5
FORCE_SYMBOL $0EC2 VIA_port_b
FORCE_SYMBOL $0EC4 VIA_t1_cnt_hi
COMMENT $0EC8 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EC8 VIA_port_a
COMMENT_LINE $0ECA y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $0ECA 4
FORCE_SYMBOL $0ECA VIA_port_b
COMMENT $0ECC 4
COMMENT $0ECF 5
FORCE_SYMBOL $0ECF VIA_port_b
FORCE_SYMBOL $0ED1 VIA_t1_cnt_hi
COMMENT $0ED5 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0ED5 VIA_port_a
COMMENT_LINE $0ED7 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $0ED7 4
FORCE_SYMBOL $0ED7 VIA_port_b
COMMENT $0ED9 4
COMMENT $0EDA 5
FORCE_SYMBOL $0EDA VIA_port_b
FORCE_SYMBOL $0EDC VIA_t1_cnt_hi
COMMENT $0EDE reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $0EDF
COMMENT_LINE $0EE3 continue uses same shift
COMMENT_LINE $0EE3 y is inherently known to be == x,
COMMENT $0EE3 4
FORCE_SYMBOL $0EE3 VIA_port_a
COMMENT $0EE5 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EE5 VIA_port_b
COMMENT $0000 4
FORCE_SYMBOL $0EE8 VIA_port_b
FORCE_SYMBOL $0EEA VIA_t1_cnt_hi
COMMENT $0EEE 4
FORCE_SYMBOL $0EEE VIA_port_a
COMMENT $0EF0 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EF0 VIA_port_b
COMMENT $0000 4
COMMENT $0EF3 5
FORCE_SYMBOL $0EF3 VIA_port_b
FORCE_SYMBOL $0EF5 VIA_t1_cnt_hi
COMMENT $0EF9 4
FORCE_SYMBOL $0EF9 VIA_port_a
COMMENT $0EFB 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0EFB VIA_port_b
COMMENT $0000 4
COMMENT $0EFE 5
FORCE_SYMBOL $0EFE VIA_port_b
FORCE_SYMBOL $0F00 VIA_t1_cnt_hi
COMMENT $0F04 4
FORCE_SYMBOL $0F04 VIA_port_a
COMMENT $0F06 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F06 VIA_port_b
COMMENT $0F08 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0F08
COMMENT $0F0B 5
FORCE_SYMBOL $0F0B VIA_port_b
FORCE_SYMBOL $0F0D VIA_t1_cnt_hi
FORCE_SYMBOL $0F0F VIA_cntl
COMMENT $0F13 4
FORCE_SYMBOL $0F13 VIA_port_a
COMMENT $0F15 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F15 VIA_port_b
COMMENT $0F17 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0F17
COMMENT $0F1A 5
FORCE_SYMBOL $0F1A VIA_port_b
FORCE_SYMBOL $0F1C VIA_t1_cnt_hi
FORCE_SYMBOL $0F1E VIA_cntl
COMMENT $0F22 4
FORCE_SYMBOL $0F22 VIA_port_a
COMMENT $0F24 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F24 VIA_port_b
COMMENT $0F26 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0F26
COMMENT $0F29 5
FORCE_SYMBOL $0F29 VIA_port_b
FORCE_SYMBOL $0F2B VIA_t1_cnt_hi
FORCE_SYMBOL $0F2D VIA_cntl
COMMENT $0F31 4
FORCE_SYMBOL $0F31 VIA_port_a
COMMENT $0F33 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F33 VIA_port_b
COMMENT $0000 4
COMMENT $0F36 5
FORCE_SYMBOL $0F36 VIA_port_b
FORCE_SYMBOL $0F38 VIA_t1_cnt_hi
COMMENT $0F3A wait 3 cycles
COMMENT $0F3C wait 3 cycles
COMMENT $0F3E wait 2 cycles
COMMENT $0F3F wait 2 cycles
FORCE_SYMBOL $0F40 VIA_t1_cnt_hi
COMMENT $0F42 wait 3 cycles
COMMENT $0F44 wait 3 cycles
COMMENT $0F46 wait 2 cycles
COMMENT $0F47 wait 2 cycles
FORCE_SYMBOL $0F48 VIA_t1_cnt_hi
COMMENT $0F4A wait 3 cycles
COMMENT $0F4C wait 3 cycles
COMMENT $0F4E wait 2 cycles
COMMENT $0F4F wait 2 cycles
FORCE_SYMBOL $0F50 VIA_t1_cnt_hi
COMMENT $0F52 wait 3 cycles
COMMENT $0F54 wait 3 cycles
COMMENT $0F56 wait 2 cycles
COMMENT $0F57 wait 2 cycles
FORCE_SYMBOL $0F58 VIA_t1_cnt_hi
COMMENT $0F5A wait 3 cycles
COMMENT $0F5C wait 3 cycles
COMMENT $0F5E wait 2 cycles
COMMENT $0F5F wait 2 cycles
FORCE_SYMBOL $0F60 VIA_t1_cnt_hi
COMMENT $0F62 wait 3 cycles
COMMENT $0F64 wait 3 cycles
COMMENT $0F66 wait 2 cycles
COMMENT $0F67 wait 2 cycles
FORCE_SYMBOL $0F68 VIA_t1_cnt_hi
COMMENT $0F6C 4
FORCE_SYMBOL $0F6C VIA_port_a
COMMENT $0F6E 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F6E VIA_port_b
COMMENT $0000 4
COMMENT $0F71 5
FORCE_SYMBOL $0F71 VIA_port_b
FORCE_SYMBOL $0F73 VIA_t1_cnt_hi
FORCE_SYMBOL $0F79 VIA_t1_cnt_hi
COMMENT $0F7D 4
FORCE_SYMBOL $0F7D VIA_port_a
COMMENT $0F7F 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F7F VIA_port_b
COMMENT $0F81 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0F81
COMMENT $0F84 5
FORCE_SYMBOL $0F84 VIA_port_b
FORCE_SYMBOL $0F86 VIA_t1_cnt_hi
FORCE_SYMBOL $0F88 VIA_cntl
COMMENT $0F8C 4
FORCE_SYMBOL $0F8C VIA_port_a
COMMENT $0F8E 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F8E VIA_port_b
COMMENT $0000 4
COMMENT $0F91 5
FORCE_SYMBOL $0F91 VIA_port_b
FORCE_SYMBOL $0F93 VIA_t1_cnt_hi
COMMENT $0F97 4
FORCE_SYMBOL $0F97 VIA_port_a
COMMENT $0F99 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0F99 VIA_port_b
COMMENT $0F9B light OFF, ZERO OFF
FORCE_NO_SYMBOL $0F9B
COMMENT $0F9E 5
FORCE_SYMBOL $0F9E VIA_port_b
FORCE_SYMBOL $0FA0 VIA_t1_cnt_hi
FORCE_SYMBOL $0FA2 VIA_cntl
COMMENT $0FA6 4
FORCE_SYMBOL $0FA6 VIA_port_a
COMMENT $0FA8 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0FA8 VIA_port_b
COMMENT $0FAA light OFF, ZERO OFF
FORCE_NO_SYMBOL $0FAA
COMMENT $0FAD 5
FORCE_SYMBOL $0FAD VIA_port_b
FORCE_SYMBOL $0FAF VIA_t1_cnt_hi
FORCE_SYMBOL $0FB1 VIA_cntl
COMMENT $0FB3 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $0FB3
COMMENT $0FB7 4
FORCE_SYMBOL $0FB7 VIA_port_a
COMMENT $0FB9 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0FB9 VIA_port_b
COMMENT $0FBB light OFF, ZERO OFF
FORCE_NO_SYMBOL $0FBB
COMMENT $0FBE 5
FORCE_SYMBOL $0FBE VIA_port_b
COMMENT $0FC0 4
FORCE_SYMBOL $0FC0 VIA_t1_cnt_hi
FORCE_SYMBOL $0FC2 VIA_cntl
COMMENT $0FC6 4
FORCE_SYMBOL $0FC6 VIA_port_a
COMMENT $0FC8 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0FC8 VIA_port_b
COMMENT $0FCA light OFF, ZERO OFF
FORCE_NO_SYMBOL $0FCA
COMMENT $0FCD 5
FORCE_SYMBOL $0FCD VIA_port_b
COMMENT $0FCF 4
FORCE_SYMBOL $0FCF VIA_t1_cnt_hi
FORCE_SYMBOL $0FD1 VIA_cntl
COMMENT $0FD5 4
FORCE_SYMBOL $0FD5 VIA_port_a
COMMENT $0FD7 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0FD7 VIA_port_b
COMMENT $0FD9 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0FD9
COMMENT $0FDC 5
FORCE_SYMBOL $0FDC VIA_port_b
COMMENT $0FDE 4
FORCE_SYMBOL $0FDE VIA_t1_cnt_hi
FORCE_SYMBOL $0FE0 VIA_cntl
FORCE_SYMBOL $0FE2 cont5
COMMENT $0FE5 4
FORCE_SYMBOL $0FE5 VIA_port_a
COMMENT $0FE7 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0FE7 VIA_port_b
COMMENT $0FE9 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0FE9
COMMENT $0FEC 5
FORCE_SYMBOL $0FEC VIA_port_b
FORCE_SYMBOL $0FEE VIA_t1_cnt_hi
FORCE_SYMBOL $0FF0 VIA_cntl
COMMENT $0FF4 4
FORCE_SYMBOL $0FF4 VIA_port_a
COMMENT $0FF6 4 shift not changed, move might also be a draw
FORCE_SYMBOL $0FF6 VIA_port_b
COMMENT $0FF8 light OFF, ZERO OFF
FORCE_NO_SYMBOL $0FF8
COMMENT $0FFB 5
FORCE_SYMBOL $0FFB VIA_port_b
COMMENT $0FFD 4
FORCE_SYMBOL $0FFD VIA_t1_cnt_hi
FORCE_SYMBOL $0FFF VIA_cntl
COMMENT $1005 5
FORCE_NO_SYMBOL $1005
FORCE_SYMBOL $1007 VIA_t1_cnt_hi
COMMENT $1009 reduced by ldu ,u - 5 cycles
COMMENT $1009 10
COMMENT $100B 4
FORCE_SYMBOL $100B VIA_port_a
COMMENT $100D 4 shift not changed, move might also be a draw
FORCE_SYMBOL $100D VIA_port_b
COMMENT $100F light OFF, ZERO OFF
FORCE_NO_SYMBOL $100F
COMMENT $1012 5
FORCE_SYMBOL $1012 VIA_port_b
COMMENT $1014 4
FORCE_SYMBOL $1014 VIA_t1_cnt_hi
FORCE_SYMBOL $1016 VIA_cntl
FORCE_SYMBOL $101C VIA_t1_cnt_hi
COMMENT $1020 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1020
COMMENT $1023 5
FORCE_SYMBOL $1023 VIA_port_b
COMMENT $1025 4
FORCE_SYMBOL $1025 VIA_t1_cnt_hi
FORCE_SYMBOL $1027 VIA_cntl
COMMENT $102B 5
FORCE_SYMBOL $102B VIA_port_b
COMMENT $102D light ON, ZERO OFF
FORCE_NO_SYMBOL $102D
COMMENT $102F 4
FORCE_SYMBOL $102F VIA_t1_cnt_hi
FORCE_SYMBOL $1031 VIA_cntl
COMMENT $1033 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $1033
COMMENT_LINE $1037 assuming b = $ee
COMMENT $1037 5
FORCE_SYMBOL $1037 VIA_port_b
COMMENT $1039 4
FORCE_SYMBOL $1039 VIA_t1_cnt_hi
FORCE_SYMBOL $103B VIA_cntl
COMMENT_LINE $103F assume b = $ee
FORCE_SYMBOL $103F VIA_t1_cnt_hi
FORCE_SYMBOL $1041 VIA_cntl
COMMENT_LINE $1045 assume b = $ee
COMMENT $1045 5
FORCE_SYMBOL $1045 VIA_port_b
COMMENT $1047 4
FORCE_SYMBOL $1047 VIA_t1_cnt_hi
FORCE_SYMBOL $1049 VIA_cntl
COMMENT $104B reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $104B
COMMENT $104F 4
FORCE_SYMBOL $104F VIA_port_a
COMMENT $1051 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1051 VIA_port_b
COMMENT $1054 light ON, ZERO OFF
FORCE_NO_SYMBOL $1054
COMMENT $1056 5
FORCE_SYMBOL $1056 VIA_port_b
COMMENT $1058 4
FORCE_SYMBOL $1058 VIA_t1_cnt_hi
FORCE_SYMBOL $105A VIA_cntl
COMMENT $105E 4
FORCE_SYMBOL $105E VIA_port_a
COMMENT $1060 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1060 VIA_port_b
COMMENT $1063 light ON, ZERO OFF
FORCE_NO_SYMBOL $1063
COMMENT $1065 5
FORCE_SYMBOL $1065 VIA_port_b
COMMENT $1067 4
FORCE_SYMBOL $1067 VIA_t1_cnt_hi
FORCE_SYMBOL $1069 VIA_cntl
COMMENT $106B reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $106B
COMMENT $106F 4
FORCE_SYMBOL $106F VIA_port_a
COMMENT $1071 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1071 VIA_port_b
FORCE_NO_SYMBOL $1073
FORCE_SYMBOL $1076 VIA_port_b
FORCE_SYMBOL $1078 VIA_t1_cnt_hi
FORCE_SYMBOL $107A VIA_cntl
COMMENT $107C reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $107C
COMMENT $1080 4
FORCE_SYMBOL $1080 VIA_port_a
COMMENT $1082 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1082 VIA_port_b
FORCE_NO_SYMBOL $1084
FORCE_SYMBOL $1087 VIA_port_b
FORCE_SYMBOL $1089 VIA_t1_cnt_hi
FORCE_SYMBOL $108B VIA_cntl
COMMENT $108F 4
FORCE_SYMBOL $108F VIA_port_a
COMMENT $1091 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1091 VIA_port_b
FORCE_SYMBOL $1093 VIA_port_b
FORCE_NO_SYMBOL $1095
FORCE_SYMBOL $1097 VIA_t1_cnt_hi
FORCE_SYMBOL $1099 VIA_cntl
COMMENT $109D 4
FORCE_SYMBOL $109D VIA_port_a
COMMENT $109F 4 shift not changed, move might also be a draw
FORCE_SYMBOL $109F VIA_port_b
FORCE_SYMBOL $10A1 VIA_port_b
FORCE_NO_SYMBOL $10A3
FORCE_SYMBOL $10A5 VIA_t1_cnt_hi
FORCE_SYMBOL $10A7 VIA_cntl
COMMENT $10A9 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $10A9
COMMENT $10AD 4
FORCE_SYMBOL $10AD VIA_port_b
FORCE_NO_SYMBOL $10AF
COMMENT $10B2 5
FORCE_SYMBOL $10B2 VIA_port_b
FORCE_SYMBOL $10B4 VIA_t1_cnt_hi
FORCE_SYMBOL $10B6 VIA_cntl
COMMENT $10B8 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $10B8
COMMENT $10BC 4
FORCE_SYMBOL $10BC VIA_port_b
FORCE_NO_SYMBOL $10BE
COMMENT $10C1 5
FORCE_SYMBOL $10C1 VIA_port_b
FORCE_SYMBOL $10C3 VIA_t1_cnt_hi
FORCE_SYMBOL $10C5 VIA_cntl
COMMENT $10C9 4
FORCE_SYMBOL $10C9 VIA_port_b
FORCE_NO_SYMBOL $10CB
COMMENT $10CE 5
FORCE_SYMBOL $10CE VIA_port_b
FORCE_SYMBOL $10D0 VIA_t1_cnt_hi
FORCE_SYMBOL $10D2 VIA_cntl
COMMENT $10D6 4
FORCE_SYMBOL $10D6 VIA_port_b
FORCE_NO_SYMBOL $10D8
COMMENT $10DB 5
FORCE_SYMBOL $10DB VIA_port_b
FORCE_SYMBOL $10DD VIA_t1_cnt_hi
FORCE_SYMBOL $10DF VIA_cntl
COMMENT $10E1 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $10E1
FORCE_NO_SYMBOL $10E5
FORCE_SYMBOL $10E7 VIA_int_flags
COMMENT_LINE $10E9 my new VIA
COMMENT_LINE $10E9 seems to = T1 falsely when = during a
COMMENT_LINE $10E9 specific event (e.g. timer = 0)
COMMENT_LINE $10E9 if that happens, either the I flags are not
COMMENT_LINE $10E9 reseted - or T1 Hi = to very hi,
COMMENT_LINE $10E9 anyway, when in warp, the last "SMVB_continue_yStays_single"
COMMENT_LINE $10E9 of the failure bugs
COMMENT_LINE $10E9 when the explosion has a growth of 4 that condition is
COMMENT_LINE $10E9 met and vectrex HALTS dure to this check
COMMENT_LINE $10E9 setting it to DISABLES
COMMENT_LINE $10E9 doesn't make much difference in a 7 scale Smart draw!
COMMENT_LINE $10E9 so for now I just disable it
COMMENT_LINE $10E9 beq      SMVB_FlagWait
FORCE_SYMBOL $10E9 gameScale
FORCE_SYMBOL $10EC VIA_cntl
FORCE_NO_SYMBOL $10EE
COMMENT $10F0 /BLANK low and /ZERO low
FORCE_SYMBOL $10F0 VIA_cntl
FORCE_SYMBOL $10F2 VIA_t1_cnt_lo
COMMENT_LINE $10F4 and ensures integrators are clean (good positioning!)
COMMENT $10F4 x = 0
FORCE_SYMBOL $10F4 VIA_port_b
FORCE_SYMBOL $10F7 gameScale
FORCE_SYMBOL $10FA VIA_cntl
FORCE_NO_SYMBOL $10FC
COMMENT $10FE /BLANK low and /ZERO low
FORCE_SYMBOL $10FE VIA_cntl
FORCE_SYMBOL $1100 VIA_t1_cnt_lo
COMMENT_LINE $1102 and ensures integrators are clean (good positioning!)
COMMENT_LINE $1102 ldd      #0
FORCE_SYMBOL $1102 VIA_port_b
COMMENT_LINE $1106 // TODO CHECK WITH SHIELD + CO
COMMENT_LINE $1106 SET_Y_INT
COMMENT_LINE $1106 Y_DELAY_HALF                          ; 4
COMMENT_LINE $1106 ldd      #$40E0
COMMENT_LINE $1106 stx      <VIA_port_b                  ; 5
COMMENT_LINE $1106 clr      <VIA_t1_cnt_hi
COMMENT_LINE $1106 ADD_NOPS
FORCE_NO_SYMBOL $1106
FORCE_SYMBOL $1108 VIA_int_flags
FORCE_SYMBOL $110C VIA_cntl
FORCE_NO_SYMBOL $1111
FORCE_SYMBOL $1113 VIA_int_flags
COMMENT_LINE $1118 todo
COMMENT_LINE $1118 last draw could contain $F in A
COMMENT_LINE $1118 than load not needed - attention
COMMENT_LINE $1118 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $1118 also in X could be some sensible value in X for one of the other
FORCE_NO_SYMBOL $1118
FORCE_SYMBOL $111A VIA_cntl
FORCE_SYMBOL $111C gameScale
FORCE_SYMBOL $111F VIA_t1_cnt_lo
COMMENT_LINE $1121 extended on purpose to gain one cycle of time
COMMENT_LINE $1121 to reset to
COMMENT_LINE $1121 a) swithc light off before zeroing
COMMENT_LINE $1121 b) zero
FORCE_NO_SYMBOL $1121
COMMENT $1123 /BLANK low and /ZERO low
FORCE_SYMBOL $1123 VIA_cntl
FORCE_SYMBOL $1126 VIA_port_b
COMMENT_LINE $1129 nop 10
COMMENT $1129 (D = y,x, pc = next object)
COMMENT $112B wait 6 cycles
COMMENT $112D wait 2 cycles
COMMENT $112E wait 2 cycles
COMMENT $112F %00000100
FORCE_NO_SYMBOL $112F
COMMENT $1131 /BLANK low and /ZERO low
FORCE_SYMBOL $1131 VIA_cntl
FORCE_SYMBOL $1133 VIA_port_a
FORCE_NO_SYMBOL $1135
FORCE_SYMBOL $1138 VIA_port_b
FORCE_SYMBOL $113A VIA_port_b
FORCE_NO_SYMBOL $113F
FORCE_SYMBOL $1141 VIA_cntl
FORCE_NO_SYMBOL $1143
FORCE_SYMBOL $1146 VIA_port_b
FORCE_SYMBOL $1148 VIA_port_b
FORCE_SYMBOL $114A calibrationValue7
FORCE_SYMBOL $114D additionalFlags
FORCE_NO_SYMBOL $1150
FORCE_NO_SYMBOL $1154
FORCE_SYMBOL $1156 VIA_port_b
COMMENT $1158 2 cycles
FORCE_NO_SYMBOL $1158
FORCE_SYMBOL $115B VIA_port_a
FORCE_SYMBOL $115D VIA_port_b
FORCE_NO_SYMBOL $1160
FORCE_SYMBOL $1162 VIA_port_b
COMMENT $1164 2 cycles
FORCE_NO_SYMBOL $1164
FORCE_SYMBOL $1167 VIA_port_a
FORCE_SYMBOL $116B VIA_port_b
COMMENT_LINE $116E todo
COMMENT_LINE $116E last draw could contain $F in A
COMMENT_LINE $116E than load not needed - attention
COMMENT_LINE $116E when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $116E also in X could be some sensible value in X for one of the other
COMMENT_LINE $116E SMVB16_lastDraw_rts2                                ;#isfunction
COMMENT_LINE $116E list format
COMMENT_LINE $116E y pos byte -> REG A
COMMENT_LINE $116E VIA_B for x reg = 01 *256 + x pos byte -> REG X
COMMENT_LINE $116E pointer to draw function -> PC
COMMENT_LINE $116E 5 bytes per "position" (except continuous)
COMMENT_LINE $116E reg A must be constantly == 0!
COMMENT_LINE $116E opti finding
COMMENT_LINE $116E a)  Findings T1 can be 2 cycles "off" -> smartlist max scale of "optimium" reduced from 9 to 7 scale :-(
COMMENT_LINE $116E b ) y and z sampling need up to 4 cycles to bare fruit (poke b reg)
COMMENT_LINE $116E 90% vectrex (guess) need 0 cycles
COMMENT_LINE $116E 95% vectrex are content with 2 cycles (1 nop)
COMMENT_LINE $116E some few vectrex NEED 4 cycles!!! ARGH!
COMMENT_LINE $116E c)  std to reg b of via (Y Reg) does not always / everywhere work
COMMENT_LINE $116E delays needed for 5% of vectrex
COMMENT_LINE $116E cost on a "full" screen
COMMENT_LINE $116E about 1900 cycles
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 ...; -----
COMMENT $0000 4
COMMENT $0000 4 shift not changed, move might also be a draw
COMMENT $0000 4
COMMENT $0000 4 shift not changed, move might also be a draw
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 NOPS add one less, since PULL X is one cycle more than pull a!
COMMENT_LINE $0000 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $0000 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $0000 endif
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $0000 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $0000 endif
COMMENT_LINE $0000 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $0000 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $0000 endif
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT $0000 5
COMMENT $0000 4 shift not changed, move might also be a draw
COMMENT $0000 4
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $1171 ***************************************************************************
COMMENT_LINE $1171 /* HIGHEST SCALE FOR SMARTLIST + CONTINUE is 16!
COMMENT_LINE $1171 SMVB16_setScale:                                          ;#isfunction
COMMENT_LINE $1171 stb      <VIA_t1_cnt_lo
COMMENT_LINE $1171 pulu     b,x,pc
COMMENT $1171 5
FORCE_SYMBOL $1171 VIA_port_b
COMMENT $1173 4
FORCE_SYMBOL $1173 VIA_t1_cnt_hi
COMMENT_LINE $1175 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1175 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1175 endif
COMMENT $1175 wait 6 cycles
COMMENT $1177 wait 2 cycles
COMMENT $117A 4
FORCE_SYMBOL $117A VIA_port_a
COMMENT $117C 4 shift not changed, move might also be a draw
FORCE_SYMBOL $117C VIA_port_b
COMMENT $117E 4
COMMENT $117E wait 2 cycles
COMMENT $117F wait 2 cycles
COMMENT $1180 5
FORCE_SYMBOL $1180 VIA_port_b
COMMENT $1182 4
FORCE_SYMBOL $1182 VIA_t1_cnt_hi
COMMENT $1184 21
COMMENT_LINE $1184 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1184 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1184 endif
COMMENT $1184 wait 6 cycles
COMMENT $1186 wait 2 cycles
COMMENT_LINE $1187 this is one pulu cycle more!
COMMENT_LINE $1187 thus ADD_NOPS_16 can be one cycle less!
COMMENT_LINE $1187 minus 6!
COMMENT $1187 5+3
COMMENT $1189 4
FORCE_SYMBOL $1189 VIA_port_a
COMMENT $118B 4 shift not changed, move might also be a draw
FORCE_SYMBOL $118B VIA_port_b
COMMENT $118D 4
COMMENT $118D wait 2 cycles
COMMENT $118E wait 2 cycles
COMMENT $118F 5
FORCE_SYMBOL $118F VIA_port_b
COMMENT $1191 4
FORCE_SYMBOL $1191 VIA_t1_cnt_hi
COMMENT $1193 21
COMMENT_LINE $1193 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1193 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1193 endif
COMMENT $1193 wait 6 cycles
COMMENT $1195 wait 2 cycles
COMMENT $1196 5+3
COMMENT $1198 4
FORCE_SYMBOL $1198 VIA_port_a
COMMENT $119A 4 shift not changed, move might also be a draw
FORCE_SYMBOL $119A VIA_port_b
COMMENT $119C 4
COMMENT $119C wait 2 cycles
COMMENT $119D wait 2 cycles
COMMENT $119E 5
FORCE_SYMBOL $119E VIA_port_b
COMMENT $11A0 4
FORCE_SYMBOL $11A0 VIA_t1_cnt_hi
COMMENT $11A2 21
COMMENT_LINE $11A2 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $11A2 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $11A2 endif
COMMENT $11A2 wait 6 cycles
COMMENT $11A4 wait 2 cycles
COMMENT $11A5 5+3
COMMENT $11A7 4
FORCE_SYMBOL $11A7 VIA_port_a
COMMENT $11A9 4 shift not changed, move might also be a draw
FORCE_SYMBOL $11A9 VIA_port_b
COMMENT $11AB 4
COMMENT $11AB wait 2 cycles
COMMENT $11AC wait 2 cycles
COMMENT $11AD 5
FORCE_SYMBOL $11AD VIA_port_b
COMMENT $11AF 4
FORCE_SYMBOL $11AF VIA_t1_cnt_hi
COMMENT $11B1 21
COMMENT_LINE $11B1 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $11B1 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $11B1 endif
COMMENT $11B1 wait 6 cycles
COMMENT $11B3 wait 2 cycles
COMMENT $11B4 5+3
COMMENT $11B6 4
FORCE_SYMBOL $11B6 VIA_port_a
COMMENT $11B8 4 shift not changed, move might also be a draw
FORCE_SYMBOL $11B8 VIA_port_b
COMMENT $11BA 4
COMMENT $11BA wait 2 cycles
COMMENT $11BB wait 2 cycles
COMMENT $11BC 5
FORCE_SYMBOL $11BC VIA_port_b
COMMENT $11BE 4
FORCE_SYMBOL $11BE VIA_t1_cnt_hi
COMMENT $11C0 21
COMMENT_LINE $11C0 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $11C0 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $11C0 endif
COMMENT $11C0 wait 6 cycles
COMMENT $11C2 wait 2 cycles
COMMENT $11C3 5+3
COMMENT $11C5 4
FORCE_SYMBOL $11C5 VIA_port_a
COMMENT $11C7 4 shift not changed, move might also be a draw
FORCE_SYMBOL $11C7 VIA_port_b
COMMENT $11C9 4
COMMENT $11C9 wait 2 cycles
COMMENT $11CA wait 2 cycles
COMMENT $11CB 5
FORCE_SYMBOL $11CB VIA_port_b
COMMENT $11CD 4
FORCE_SYMBOL $11CD VIA_t1_cnt_hi
COMMENT $11CF 21
COMMENT_LINE $11CF if VB_SPRITE_SCALE_16>8
COMMENT_LINE $11CF nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $11CF endif
COMMENT $11CF wait 6 cycles
COMMENT $11D1 wait 2 cycles
COMMENT $11D2 5+3
COMMENT_LINE $11D4 continue uses same shift
COMMENT $11D4 4 shift not changed, move might also be a draw
FORCE_SYMBOL $11D4 VIA_port_a
COMMENT_LINE $11D6 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $11D6 4
FORCE_SYMBOL $11D6 VIA_port_b
COMMENT $11D8 4
COMMENT $11D8 wait 2 cycles
COMMENT $11D9 wait 2 cycles
COMMENT $11DA 5
FORCE_SYMBOL $11DA VIA_port_b
FORCE_SYMBOL $11DC VIA_t1_cnt_hi
COMMENT_LINE $11DE if VB_SPRITE_SCALE_16>8
COMMENT_LINE $11DE nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $11DE endif
COMMENT $11DE wait 6 cycles
COMMENT $11E0 wait 2 cycles
COMMENT $11E3 4 shift not changed, move might also be a draw
FORCE_SYMBOL $11E3 VIA_port_a
COMMENT_LINE $11E5 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $11E5 4
FORCE_SYMBOL $11E5 VIA_port_b
COMMENT $11E7 4
COMMENT $11E7 wait 2 cycles
COMMENT $11E8 wait 2 cycles
COMMENT $11E9 wait 2 cycles
COMMENT $11EA 5
FORCE_SYMBOL $11EA VIA_port_b
FORCE_SYMBOL $11EC VIA_t1_cnt_hi
COMMENT_LINE $11EE if VB_SPRITE_SCALE_16>8
COMMENT_LINE $11EE nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $11EE endif
COMMENT $11EE wait 6 cycles
COMMENT $11F0 wait 2 cycles
COMMENT $11F3 4 shift not changed, move might also be a draw
FORCE_SYMBOL $11F3 VIA_port_a
COMMENT_LINE $11F5 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $11F5 4
FORCE_SYMBOL $11F5 VIA_port_b
COMMENT $11F7 4
COMMENT $11F7 wait 2 cycles
COMMENT $11F8 wait 2 cycles
COMMENT $11F9 5
FORCE_SYMBOL $11F9 VIA_port_b
FORCE_SYMBOL $11FB VIA_t1_cnt_hi
COMMENT $11FD reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $11FE
COMMENT_LINE $1202 continue uses same shift
COMMENT_LINE $1202 y is inherently known to be == x,
COMMENT $1202 4
FORCE_SYMBOL $1202 VIA_port_a
COMMENT $1204 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1204 VIA_port_b
COMMENT $1206 4
COMMENT $1206 wait 2 cycles
FORCE_SYMBOL $1207 VIA_port_b
FORCE_SYMBOL $1209 VIA_t1_cnt_hi
COMMENT_LINE $120B if VB_SPRITE_SCALE_16>8
COMMENT_LINE $120B nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $120B endif
COMMENT $120B wait 6 cycles
COMMENT $120D wait 2 cycles
COMMENT $1210 4
FORCE_SYMBOL $1210 VIA_port_a
COMMENT $1212 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1212 VIA_port_b
COMMENT $1214 4
COMMENT $1214 wait 2 cycles
COMMENT $1215 wait 2 cycles
COMMENT $1216 5
FORCE_SYMBOL $1216 VIA_port_b
FORCE_SYMBOL $1218 VIA_t1_cnt_hi
COMMENT_LINE $121A if VB_SPRITE_SCALE_16>8
COMMENT_LINE $121A nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $121A endif
COMMENT $121A wait 6 cycles
COMMENT $121C wait 2 cycles
COMMENT_LINE $121F bra      cont3_16
COMMENT $121F 4
FORCE_SYMBOL $121F VIA_port_a
COMMENT $1221 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1221 VIA_port_b
COMMENT $1223 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1223
COMMENT $1225 wait 2 cycles
COMMENT $1226 5
FORCE_SYMBOL $1226 VIA_port_b
FORCE_SYMBOL $1228 VIA_t1_cnt_hi
FORCE_SYMBOL $122A VIA_cntl
COMMENT_LINE $122C if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $122C nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $122C endif
COMMENT $122C wait 2 cycles
COMMENT $122D wait 2 cycles
COMMENT_LINE $1230 SMVB16_startDraw_hex                                      ;#isfunction
COMMENT_LINE $1230 SET_Y_INT_16
COMMENT_LINE $1230 ldb      #$ee                         ; light OFF, ZERO OFF
COMMENT_LINE $1230 Y_DELAY_16_HALF
COMMENT_LINE $1230 stx      <VIA_port_b                  ; 5
COMMENT_LINE $1230 sta      <VIA_t1_cnt_hi
COMMENT_LINE $1230 stb      <VIA_cntl                    ;
COMMENT_LINE $1230 ADD_NOPS_16_M4
COMMENT_LINE $1230 bra      cont5_16
COMMENT $1230 4
FORCE_SYMBOL $1230 VIA_port_a
COMMENT $1232 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1232 VIA_port_b
COMMENT $1234 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1234
COMMENT $1236 wait 2 cycles
COMMENT $1237 5
FORCE_SYMBOL $1237 VIA_port_b
FORCE_SYMBOL $1239 VIA_t1_cnt_hi
FORCE_SYMBOL $123B VIA_cntl
COMMENT_LINE $123D if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $123D nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $123D endif
COMMENT $123D wait 2 cycles
COMMENT $123E wait 2 cycles
COMMENT $1241 4
FORCE_SYMBOL $1241 VIA_port_a
COMMENT $1243 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1243 VIA_port_b
COMMENT $1245 4
COMMENT $1245 wait 2 cycles
COMMENT $1246 wait 2 cycles
COMMENT $1247 5
FORCE_SYMBOL $1247 VIA_port_b
FORCE_SYMBOL $1249 VIA_t1_cnt_hi
COMMENT_LINE $124B if VB_SPRITE_SCALE_16>8
COMMENT_LINE $124B nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $124B endif
COMMENT $124B wait 6 cycles
COMMENT $124D wait 2 cycles
COMMENT $124E wait 3 cycles
COMMENT $1250 wait 3 cycles
COMMENT $1252 wait 2 cycles
COMMENT $1253 wait 2 cycles
FORCE_SYMBOL $1254 VIA_t1_cnt_hi
COMMENT_LINE $1256 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1256 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1256 endif
COMMENT $1256 wait 6 cycles
COMMENT $1258 wait 2 cycles
COMMENT $1259 wait 3 cycles
COMMENT $125B wait 3 cycles
COMMENT $125D wait 2 cycles
COMMENT $125E wait 2 cycles
FORCE_SYMBOL $125F VIA_t1_cnt_hi
COMMENT_LINE $1261 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1261 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1261 endif
COMMENT $1261 wait 6 cycles
COMMENT $1263 wait 2 cycles
COMMENT $1264 wait 3 cycles
COMMENT $1266 wait 3 cycles
COMMENT $1268 wait 2 cycles
COMMENT $1269 wait 2 cycles
FORCE_SYMBOL $126A VIA_t1_cnt_hi
COMMENT_LINE $126C if VB_SPRITE_SCALE_16>8
COMMENT_LINE $126C nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $126C endif
COMMENT $126C wait 6 cycles
COMMENT $126E wait 2 cycles
COMMENT $126F wait 3 cycles
COMMENT $1271 wait 3 cycles
COMMENT $1273 wait 2 cycles
COMMENT $1274 wait 2 cycles
FORCE_SYMBOL $1275 VIA_t1_cnt_hi
COMMENT_LINE $1277 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1277 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1277 endif
COMMENT $1277 wait 6 cycles
COMMENT $1279 wait 2 cycles
COMMENT $127A wait 3 cycles
COMMENT $127C wait 3 cycles
COMMENT $127E wait 2 cycles
COMMENT $127F wait 2 cycles
FORCE_SYMBOL $1280 VIA_t1_cnt_hi
COMMENT_LINE $1282 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1282 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1282 endif
COMMENT $1282 wait 6 cycles
COMMENT $1284 wait 2 cycles
COMMENT $1285 wait 3 cycles
COMMENT $1287 wait 3 cycles
COMMENT $1289 wait 2 cycles
COMMENT $128A wait 2 cycles
FORCE_SYMBOL $128B VIA_t1_cnt_hi
COMMENT_LINE $128D if VB_SPRITE_SCALE_16>8
COMMENT_LINE $128D nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $128D endif
COMMENT $128D wait 6 cycles
COMMENT $128F wait 2 cycles
COMMENT $1292 4
FORCE_SYMBOL $1292 VIA_port_a
COMMENT $1294 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1294 VIA_port_b
COMMENT $1296 4
COMMENT $1296 wait 2 cycles
COMMENT $1297 wait 2 cycles
COMMENT $1298 5
FORCE_SYMBOL $1298 VIA_port_b
FORCE_SYMBOL $129A VIA_t1_cnt_hi
COMMENT_LINE $129C if VB_SPRITE_SCALE_16>8
COMMENT_LINE $129C nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $129C endif
COMMENT $129C wait 6 cycles
COMMENT $129E wait 2 cycles
COMMENT $12A1 4
FORCE_SYMBOL $12A1 VIA_port_a
COMMENT $12A3 4 shift not changed, move might also be a draw
FORCE_SYMBOL $12A3 VIA_port_b
COMMENT $12A5 4
COMMENT $12A5 wait 2 cycles
COMMENT $12A6 wait 2 cycles
COMMENT $12A7 5
FORCE_SYMBOL $12A7 VIA_port_b
FORCE_SYMBOL $12A9 VIA_t1_cnt_hi
COMMENT_LINE $12AB if VB_SPRITE_SCALE_16>8
COMMENT_LINE $12AB nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $12AB endif
COMMENT $12AB wait 6 cycles
COMMENT $12AD wait 2 cycles
COMMENT $12B0 4
FORCE_SYMBOL $12B0 VIA_port_a
COMMENT $12B2 4 shift not changed, move might also be a draw
FORCE_SYMBOL $12B2 VIA_port_b
COMMENT $12B4 light OFF, ZERO OFF
FORCE_NO_SYMBOL $12B4
COMMENT $12B6 wait 2 cycles
COMMENT $12B7 5
FORCE_SYMBOL $12B7 VIA_port_b
COMMENT $12B9 4
FORCE_SYMBOL $12B9 VIA_t1_cnt_hi
FORCE_SYMBOL $12BB VIA_cntl
COMMENT_LINE $12BD if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $12BD nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $12BD endif
COMMENT $12BD wait 2 cycles
COMMENT $12BE wait 2 cycles
FORCE_SYMBOL $12C3 VIA_t1_cnt_hi
COMMENT_LINE $12C5 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $12C5 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $12C5 endif
COMMENT $12C5 wait 6 cycles
COMMENT $12C7 wait 2 cycles
COMMENT $12CA 4
FORCE_SYMBOL $12CA VIA_port_a
COMMENT $12CC 4 shift not changed, move might also be a draw
FORCE_SYMBOL $12CC VIA_port_b
COMMENT $12CE light OFF, ZERO OFF
FORCE_NO_SYMBOL $12CE
COMMENT $12D0 wait 2 cycles
COMMENT $12D1 5
FORCE_SYMBOL $12D1 VIA_port_b
FORCE_SYMBOL $12D3 VIA_t1_cnt_hi
FORCE_SYMBOL $12D5 VIA_cntl
COMMENT_LINE $12D7 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $12D7 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $12D7 endif
COMMENT $12D7 wait 2 cycles
COMMENT $12D8 wait 2 cycles
COMMENT $12DB 4
FORCE_SYMBOL $12DB VIA_port_a
COMMENT $12DD 4 shift not changed, move might also be a draw
FORCE_SYMBOL $12DD VIA_port_b
COMMENT $12DF light OFF, ZERO OFF
FORCE_NO_SYMBOL $12DF
COMMENT $12E1 wait 2 cycles
COMMENT $12E2 5
FORCE_SYMBOL $12E2 VIA_port_b
COMMENT $12E4 4
FORCE_SYMBOL $12E4 VIA_t1_cnt_hi
FORCE_SYMBOL $12E6 VIA_cntl
COMMENT_LINE $12E8 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $12E8 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $12E8 endif
COMMENT $12E8 wait 2 cycles
COMMENT $12E9 wait 2 cycles
COMMENT $12EC 4
FORCE_SYMBOL $12EC VIA_port_a
COMMENT $12EE 4 shift not changed, move might also be a draw
FORCE_SYMBOL $12EE VIA_port_b
COMMENT $12F0 4
COMMENT $12F0 wait 2 cycles
COMMENT $12F1 wait 2 cycles
COMMENT $12F2 5
FORCE_SYMBOL $12F2 VIA_port_b
FORCE_SYMBOL $12F4 VIA_t1_cnt_hi
COMMENT_LINE $12F6 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $12F6 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $12F6 endif
COMMENT $12F6 wait 6 cycles
COMMENT $12F8 wait 2 cycles
COMMENT $12FB wait 2 cycles
COMMENT $12FC 4
FORCE_SYMBOL $12FC VIA_port_a
COMMENT $12FE 4 shift not changed, move might also be a draw
FORCE_SYMBOL $12FE VIA_port_b
COMMENT $1300 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1300
COMMENT $1302 wait 2 cycles
COMMENT $1303 5
FORCE_SYMBOL $1303 VIA_port_b
FORCE_SYMBOL $1305 VIA_t1_cnt_hi
FORCE_SYMBOL $1307 VIA_cntl
COMMENT_LINE $1309 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $1309 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $1309 endif
COMMENT $1309 wait 2 cycles
COMMENT $130A wait 2 cycles
COMMENT $130D 4
FORCE_SYMBOL $130D VIA_port_a
COMMENT $130F 4 shift not changed, move might also be a draw
FORCE_SYMBOL $130F VIA_port_b
COMMENT $1311 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1311
COMMENT $1313 wait 2 cycles
COMMENT $1314 5
FORCE_SYMBOL $1314 VIA_port_b
FORCE_SYMBOL $1316 VIA_t1_cnt_hi
FORCE_SYMBOL $1318 VIA_cntl
COMMENT_LINE $131A if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $131A nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $131A endif
COMMENT $131A wait 2 cycles
COMMENT $131B wait 2 cycles
COMMENT_LINE $131E SMVB16_startMove_single_sj:                               ;#isfunction
COMMENT_LINE $131E SET_Y_INT_16
COMMENT_LINE $131E ldb      #$ce                         ; light OFF, ZERO OFF
COMMENT_LINE $131E Y_DELAY_16_HALF
COMMENT_LINE $131E SET_X_INT_16
COMMENT_LINE $131E sta      <VIA_t1_cnt_hi
COMMENT_LINE $131E stb      <VIA_cntl                    ;
COMMENT_LINE $131E ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $131E ldu      ,u
COMMENT_LINE $131E pulu     b,x,pc
COMMENT $131E 4
FORCE_SYMBOL $131E VIA_port_a
COMMENT $1320 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1320 VIA_port_b
COMMENT $1322 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1322
COMMENT $1324 wait 2 cycles
COMMENT $1325 5
FORCE_SYMBOL $1325 VIA_port_b
FORCE_SYMBOL $1327 VIA_t1_cnt_hi
FORCE_SYMBOL $1329 VIA_cntl
COMMENT_LINE $132B if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $132B nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $132B endif
COMMENT $132B wait 2 cycles
COMMENT $132C wait 2 cycles
COMMENT $132F 4
FORCE_SYMBOL $132F VIA_port_a
COMMENT $1331 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1331 VIA_port_b
COMMENT $1333 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1333
COMMENT $1335 wait 2 cycles
COMMENT $1336 5
FORCE_SYMBOL $1336 VIA_port_b
COMMENT $1338 4
FORCE_SYMBOL $1338 VIA_t1_cnt_hi
FORCE_SYMBOL $133A VIA_cntl
COMMENT_LINE $133C if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $133C nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $133C endif
COMMENT $133C wait 2 cycles
COMMENT $133D wait 2 cycles
COMMENT $133E wait 6 cycles
COMMENT $1340 5
FORCE_NO_SYMBOL $1340
FORCE_SYMBOL $1342 VIA_t1_cnt_hi
COMMENT $1344 reduced by ldu ,u - 5 cycles
COMMENT_LINE $1344 if VB_SPRITE_SCALE_16>8
COMMENT_LINE $1344 nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $1344 endif
COMMENT $1344 wait 6 cycles
COMMENT $1346 wait 2 cycles
COMMENT $1347 10
COMMENT $1349 4
FORCE_SYMBOL $1349 VIA_port_a
COMMENT $134B 4 shift not changed, move might also be a draw
FORCE_SYMBOL $134B VIA_port_b
COMMENT $134D light OFF, ZERO OFF
FORCE_NO_SYMBOL $134D
COMMENT $134F wait 2 cycles
COMMENT $1350 5
FORCE_SYMBOL $1350 VIA_port_b
COMMENT $1352 4
FORCE_SYMBOL $1352 VIA_t1_cnt_hi
FORCE_SYMBOL $1354 VIA_cntl
COMMENT_LINE $1356 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $1356 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $1356 endif
COMMENT $1356 wait 2 cycles
COMMENT $1357 wait 2 cycles
FORCE_SYMBOL $135C VIA_t1_cnt_hi
COMMENT_LINE $135E if VB_SPRITE_SCALE_16>8
COMMENT_LINE $135E nop (VB_SPRITE_SCALE_16-8)/2
COMMENT_LINE $135E endif
COMMENT $135E wait 6 cycles
COMMENT $1360 wait 2 cycles
COMMENT $1363 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1363
COMMENT $1365 wait 2 cycles
COMMENT $1366 5
FORCE_SYMBOL $1366 VIA_port_b
COMMENT $1368 4
FORCE_SYMBOL $1368 VIA_t1_cnt_hi
FORCE_SYMBOL $136A VIA_cntl
COMMENT_LINE $136C if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $136C nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $136C endif
COMMENT $136C wait 2 cycles
COMMENT $136D wait 2 cycles
COMMENT $1370 5
FORCE_SYMBOL $1370 VIA_port_b
COMMENT $1372 light ON, ZERO OFF
FORCE_NO_SYMBOL $1372
COMMENT $1374 4
FORCE_SYMBOL $1374 VIA_t1_cnt_hi
FORCE_SYMBOL $1376 VIA_cntl
COMMENT $1378 reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $1379
COMMENT_LINE $137D assuming b = $ee
COMMENT $137D 5
FORCE_SYMBOL $137D VIA_port_b
COMMENT $137F 4
FORCE_SYMBOL $137F VIA_t1_cnt_hi
FORCE_SYMBOL $1381 VIA_cntl
COMMENT_LINE $1383 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $1383 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $1383 endif
COMMENT $1383 wait 2 cycles
COMMENT $1384 wait 2 cycles
COMMENT_LINE $1387 assume b = $ee
FORCE_SYMBOL $1387 VIA_t1_cnt_hi
FORCE_SYMBOL $1389 VIA_cntl
COMMENT_LINE $138B if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $138B nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $138B endif
COMMENT $138B wait 2 cycles
COMMENT $138C wait 2 cycles
COMMENT_LINE $138F assume b = $ee
COMMENT_LINE $138F SMVB16_startDraw_yStays_single_sj                         ;#isfunction
COMMENT_LINE $138F SET_X_INT_16
COMMENT_LINE $138F sta      <VIA_t1_cnt_hi               ; 4
COMMENT_LINE $138F stb      <VIA_cntl                    ;
COMMENT_LINE $138F ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $138F ldu      ,u
COMMENT_LINE $138F pulu     b,x,pc
COMMENT $138F wait 2 cycles
COMMENT $1390 4
FORCE_SYMBOL $1390 VIA_port_a
COMMENT $1392 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1392 VIA_port_b
COMMENT $1394 wait 2 cycles
COMMENT $1395 light ON, ZERO OFF
FORCE_NO_SYMBOL $1395
COMMENT $1397 5
FORCE_SYMBOL $1397 VIA_port_b
COMMENT $1399 4
FORCE_SYMBOL $1399 VIA_t1_cnt_hi
FORCE_SYMBOL $139B VIA_cntl
COMMENT_LINE $139D if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $139D nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $139D endif
COMMENT $139D wait 2 cycles
COMMENT $139E wait 2 cycles
COMMENT $13A1 4
FORCE_SYMBOL $13A1 VIA_port_a
COMMENT $13A3 4 shift not changed, move might also be a draw
FORCE_SYMBOL $13A3 VIA_port_b
COMMENT $13A5 wait 2 cycles
COMMENT $13A6 light ON, ZERO OFF
FORCE_NO_SYMBOL $13A6
COMMENT $13A8 5
FORCE_SYMBOL $13A8 VIA_port_b
COMMENT $13AA 4
FORCE_SYMBOL $13AA VIA_t1_cnt_hi
FORCE_SYMBOL $13AC VIA_cntl
COMMENT_LINE $13AE if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $13AE nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $13AE endif
COMMENT $13AE wait 2 cycles
COMMENT $13AF wait 2 cycles
COMMENT_LINE $13B2 SMVB16_startDraw_single_sj                                ;#isfunction
COMMENT_LINE $13B2 SET_Y_INT_16
COMMENT_LINE $13B2 Y_DELAY_16_HALF
COMMENT_LINE $13B2 ldb      #$ee                         ; light ON, ZERO OFF
COMMENT_LINE $13B2 SET_X_INT_16
COMMENT_LINE $13B2 sta      <VIA_t1_cnt_hi               ; 4
COMMENT_LINE $13B2 stb      <VIA_cntl                    ;
COMMENT_LINE $13B2 ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $13B2 ldu      ,u
COMMENT_LINE $13B2 pulu     b,x,pc
COMMENT_LINE $13B2 SMVB16_startDraw_yEqx_single_sj                           ;#isfunction
COMMENT_LINE $13B2 SET_Y_INT_16
COMMENT_LINE $13B2 ldb      #$ee
COMMENT_LINE $13B2 Y_DELAY_16_HALF
COMMENT_LINE $13B2 SET_X_INT_16
COMMENT_LINE $13B2 sta      <VIA_t1_cnt_hi
COMMENT_LINE $13B2 stb      <VIA_cntl                    ;
COMMENT_LINE $13B2 ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $13B2 ldu      ,u
COMMENT_LINE $13B2 pulu     b,x,pc
COMMENT $13B2 4
FORCE_SYMBOL $13B2 VIA_port_a
COMMENT $13B4 4 shift not changed, move might also be a draw
FORCE_SYMBOL $13B4 VIA_port_b
FORCE_NO_SYMBOL $13B6
COMMENT $13B8 wait 2 cycles
COMMENT $13B9 5
FORCE_SYMBOL $13B9 VIA_port_b
FORCE_SYMBOL $13BB VIA_t1_cnt_hi
FORCE_SYMBOL $13BD VIA_cntl
COMMENT_LINE $13BF if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $13BF nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $13BF endif
COMMENT $13BF wait 2 cycles
COMMENT $13C0 wait 2 cycles
COMMENT $13C3 wait 2 cycles
COMMENT $13C4 4
FORCE_SYMBOL $13C4 VIA_port_a
COMMENT $13C6 4 shift not changed, move might also be a draw
FORCE_SYMBOL $13C6 VIA_port_b
FORCE_SYMBOL $13C8 VIA_port_b
FORCE_NO_SYMBOL $13CA
FORCE_SYMBOL $13CC VIA_t1_cnt_hi
FORCE_SYMBOL $13CE VIA_cntl
COMMENT_LINE $13D0 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $13D0 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $13D0 endif
COMMENT $13D0 wait 2 cycles
COMMENT $13D1 wait 2 cycles
COMMENT $13D4 4
FORCE_SYMBOL $13D4 VIA_port_a
COMMENT $13D6 4 shift not changed, move might also be a draw
FORCE_SYMBOL $13D6 VIA_port_b
FORCE_SYMBOL $13D8 VIA_port_b
FORCE_NO_SYMBOL $13DA
FORCE_SYMBOL $13DC VIA_t1_cnt_hi
FORCE_SYMBOL $13DE VIA_cntl
COMMENT_LINE $13E0 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $13E0 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $13E0 endif
COMMENT $13E0 wait 2 cycles
COMMENT $13E1 wait 2 cycles
COMMENT_LINE $13E4 SMVB16_startMove_yEqx_single_sj                           ;#isfunction
COMMENT_LINE $13E4 SET_Y_INT_16
COMMENT_LINE $13E4 ldb #1
COMMENT_LINE $13E4 stb <VIA_port_b
COMMENT_LINE $13E4 ldb      #$ce
COMMENT_LINE $13E4 sta      <VIA_t1_cnt_hi
COMMENT_LINE $13E4 stb      <VIA_cntl                    ;
COMMENT_LINE $13E4 ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $13E4 ldu      ,u
COMMENT_LINE $13E4 pulu     b,x,pc
COMMENT_LINE $13E4 SMVB16_startMove_newY_eq_oldX_single_sj                   ;#isfunction
COMMENT_LINE $13E4 sta      <VIA_port_b                  ; 4
COMMENT_LINE $13E4 ldb      #$ce
COMMENT_LINE $13E4 Y_DELAY_16_HALF
COMMENT_LINE $13E4 SET_X_INT_16
COMMENT_LINE $13E4 sta      <VIA_t1_cnt_hi
COMMENT_LINE $13E4 stb      <VIA_cntl                    ;
COMMENT_LINE $13E4 ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $13E4 ldu      ,u
COMMENT_LINE $13E4 pulu     b,x,pc
COMMENT $13E4 4
FORCE_SYMBOL $13E4 VIA_port_b
FORCE_NO_SYMBOL $13E6
COMMENT $13E8 wait 2 cycles
COMMENT $13E9 wait 2 cycles
COMMENT $13EA 5
FORCE_SYMBOL $13EA VIA_port_b
FORCE_SYMBOL $13EC VIA_t1_cnt_hi
FORCE_SYMBOL $13EE VIA_cntl
COMMENT_LINE $13F0 if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $13F0 nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $13F0 endif
COMMENT $13F0 wait 2 cycles
COMMENT $13F1 wait 2 cycles
COMMENT $13F4 4
FORCE_SYMBOL $13F4 VIA_port_b
FORCE_NO_SYMBOL $13F6
COMMENT $13F8 wait 2 cycles
COMMENT $13F9 5
FORCE_SYMBOL $13F9 VIA_port_b
FORCE_SYMBOL $13FB VIA_t1_cnt_hi
FORCE_SYMBOL $13FD VIA_cntl
COMMENT_LINE $13FF if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $13FF nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $13FF endif
COMMENT $13FF wait 2 cycles
COMMENT $1400 wait 2 cycles
COMMENT $1403 4
FORCE_SYMBOL $1403 VIA_port_b
FORCE_NO_SYMBOL $1405
COMMENT $1407 wait 2 cycles
COMMENT $1408 5
FORCE_SYMBOL $1408 VIA_port_b
FORCE_SYMBOL $140A VIA_t1_cnt_hi
FORCE_SYMBOL $140C VIA_cntl
COMMENT_LINE $140E if       VB_SPRITE_SCALE_16-4>8
COMMENT_LINE $140E nop      (VB_SPRITE_SCALE_16-4-8)/2
COMMENT_LINE $140E endif
COMMENT $140E wait 2 cycles
COMMENT $140F wait 2 cycles
COMMENT_LINE $1412 SMVB16_startDraw_newY_eq_oldX_single_sj:                  ;#isfunction
COMMENT_LINE $1412 sta      <VIA_port_b                  ; 4
COMMENT_LINE $1412 ldb      #$ee
COMMENT_LINE $1412 Y_DELAY_16_HALF
COMMENT_LINE $1412 SET_X_INT_16
COMMENT_LINE $1412 sta      <VIA_t1_cnt_hi
COMMENT_LINE $1412 stb      <VIA_cntl                    ;
COMMENT_LINE $1412 ADD_NOPS_16_NOU_M4                    ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $1412 ldu      ,u
COMMENT_LINE $1412 pulu     b,x,pc
FORCE_NO_SYMBOL $1412
FORCE_SYMBOL $1414 VIA_int_flags
FORCE_SYMBOL $1418 gameScale
FORCE_SYMBOL $141B VIA_cntl
FORCE_NO_SYMBOL $141D
COMMENT $141F /BLANK low and /ZERO low
FORCE_SYMBOL $141F VIA_cntl
FORCE_SYMBOL $1421 VIA_t1_cnt_lo
COMMENT_LINE $1423 and ensures integrators are clean (good positioning!)
COMMENT_LINE $1423 ldd      #0
FORCE_SYMBOL $1423 VIA_port_b
COMMENT_LINE $1426 // TODO CHECK WITH SHIELD + CO
FORCE_NO_SYMBOL $1426
FORCE_SYMBOL $1428 VIA_int_flags
FORCE_SYMBOL $142C VIA_cntl
COMMENT $142E wait 2 cycles
COMMENT $142F wait 2 cycles
COMMENT_LINE $1431 SMVB16_lastMove_rts_stay                                  ;#isfunction
COMMENT_LINE $1431 lda      #$40
COMMENT_LINE $1431 SMVB16_FlagWait3_2:
COMMENT_LINE $1431 bita     <VIA_int_flags
COMMENT_LINE $1431 beq      SMVB16_FlagWait3_2
COMMENT_LINE $1431 rts
COMMENT_LINE $1431 todo
COMMENT_LINE $1431 last draw could contain $F in A
COMMENT_LINE $1431 than load not needed - attention
COMMENT_LINE $1431 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $1431 also in X could be some sensible value in X for one of the other
FORCE_NO_SYMBOL $1431
FORCE_SYMBOL $1433 VIA_cntl
FORCE_SYMBOL $1435 gameScale
FORCE_SYMBOL $1438 VIA_t1_cnt_lo
COMMENT_LINE $143A extended on purpose to gain one cycle of time
COMMENT_LINE $143A to reset to
COMMENT_LINE $143A a) swithc light off before zeroing
COMMENT_LINE $143A b) zero
FORCE_NO_SYMBOL $143A
COMMENT $143C /BLANK low and /ZERO low
FORCE_SYMBOL $143C VIA_cntl
COMMENT $143F 5
FORCE_SYMBOL $143F VIA_port_b
COMMENT $1441 (D = y,x, pc = next object)
COMMENT_LINE $1443 SMVB16_LightOff_Intensity:                                ;#isfunction
COMMENT_LINE $1443 WAIT10
COMMENT_LINE $1443 lda      #$ce
COMMENT_LINE $1443 STa      VIA_cntl                     ;/BLANK low and /ZERO low
COMMENT_LINE $1443 stb      <VIA_port_a
COMMENT_LINE $1443 ldd      #$0401
COMMENT_LINE $1443 sta      <VIA_port_b
COMMENT_LINE $1443 stb      <VIA_port_b
COMMENT_LINE $1443 clra
COMMENT_LINE $1443 pulu     b,x,pc
FORCE_NO_SYMBOL $1443
FORCE_SYMBOL $1445 VIA_cntl
FORCE_NO_SYMBOL $1447
FORCE_SYMBOL $144A VIA_port_b
FORCE_SYMBOL $144C VIA_port_b
FORCE_SYMBOL $144E calibrationValue16
FORCE_SYMBOL $1451 additionalFlags
FORCE_NO_SYMBOL $1454
FORCE_NO_SYMBOL $1458
FORCE_SYMBOL $145A VIA_port_b
COMMENT $145C 2 cycles
FORCE_NO_SYMBOL $145C
FORCE_SYMBOL $145F VIA_port_a
FORCE_SYMBOL $1461 VIA_port_b
FORCE_NO_SYMBOL $1464
FORCE_SYMBOL $1466 VIA_port_b
COMMENT $1468 2 cycles
FORCE_NO_SYMBOL $1468
FORCE_SYMBOL $146B VIA_port_a
COMMENT $146D wait 2 cycles
COMMENT $146E wait 2 cycles
FORCE_SYMBOL $146F VIA_port_b
COMMENT_LINE $1472 NOPS add one less, since PULL X is one cycle more than pull a!
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 -----
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $1475 ***************************************************************************
COMMENT_LINE $1475 /* HIGHEST SCALE FOR SMARTLIST + CONTINUE is 16!
FORCE_SYMBOL $1475 VIA_t1_cnt_lo
COMMENT $1479 5
FORCE_SYMBOL $1479 VIA_port_b
COMMENT $147B 4
FORCE_SYMBOL $147B VIA_t1_cnt_hi
COMMENT $147D wait 16 cycles
COMMENT $1481 wait 16 cycles
COMMENT $1485 wait 6 cycles
COMMENT $1487 wait 2 cycles
COMMENT $1488 wait 2 cycles
COMMENT $148B 4
FORCE_SYMBOL $148B VIA_port_a
COMMENT $148D 4 shift not changed, move might also be a draw
FORCE_SYMBOL $148D VIA_port_b
COMMENT $0000 4
COMMENT $1491 5
FORCE_SYMBOL $1491 VIA_port_b
COMMENT $1493 4
FORCE_SYMBOL $1493 VIA_t1_cnt_hi
COMMENT $1495 21
COMMENT $1495 wait 16 cycles
COMMENT $1499 wait 16 cycles
COMMENT $149D wait 6 cycles
COMMENT $149F wait 2 cycles
COMMENT $14A0 wait 2 cycles
COMMENT_LINE $14A1 this is one pulu cycle more!
COMMENT_LINE $14A1 thus ADD_NOPS_50 can be one cycle less!
COMMENT_LINE $14A1 minus 6!
COMMENT $14A1 5+3
COMMENT $14A3 4
FORCE_SYMBOL $14A3 VIA_port_a
COMMENT $14A5 4 shift not changed, move might also be a draw
FORCE_SYMBOL $14A5 VIA_port_b
COMMENT $0000 4
COMMENT $14A9 5
FORCE_SYMBOL $14A9 VIA_port_b
COMMENT $14AB 4
FORCE_SYMBOL $14AB VIA_t1_cnt_hi
COMMENT $14AD 21
COMMENT $14AD wait 16 cycles
COMMENT $14B1 wait 16 cycles
COMMENT $14B5 wait 6 cycles
COMMENT $14B7 wait 2 cycles
COMMENT $14B8 wait 2 cycles
COMMENT $14B9 5+3
COMMENT $14BB 4
FORCE_SYMBOL $14BB VIA_port_a
COMMENT $14BD 4 shift not changed, move might also be a draw
FORCE_SYMBOL $14BD VIA_port_b
COMMENT $0000 4
COMMENT $14C1 5
FORCE_SYMBOL $14C1 VIA_port_b
COMMENT $14C3 4
FORCE_SYMBOL $14C3 VIA_t1_cnt_hi
COMMENT $14C5 21
COMMENT $14C5 wait 16 cycles
COMMENT $14C9 wait 16 cycles
COMMENT $14CD wait 6 cycles
COMMENT $14CF wait 2 cycles
COMMENT $14D0 wait 2 cycles
COMMENT $14D1 5+3
COMMENT $14D3 4
FORCE_SYMBOL $14D3 VIA_port_a
COMMENT $14D5 4 shift not changed, move might also be a draw
FORCE_SYMBOL $14D5 VIA_port_b
COMMENT $0000 4
COMMENT $14D9 5
FORCE_SYMBOL $14D9 VIA_port_b
COMMENT $14DB 4
FORCE_SYMBOL $14DB VIA_t1_cnt_hi
COMMENT $14DD 21
COMMENT $14DD wait 16 cycles
COMMENT $14E1 wait 16 cycles
COMMENT $14E5 wait 6 cycles
COMMENT $14E7 wait 2 cycles
COMMENT $14E8 wait 2 cycles
COMMENT $14E9 5+3
COMMENT $14EB 4
FORCE_SYMBOL $14EB VIA_port_a
COMMENT $14ED 4 shift not changed, move might also be a draw
FORCE_SYMBOL $14ED VIA_port_b
COMMENT $0000 4
COMMENT $14F1 5
FORCE_SYMBOL $14F1 VIA_port_b
COMMENT $14F3 4
FORCE_SYMBOL $14F3 VIA_t1_cnt_hi
COMMENT $14F5 21
COMMENT $14F5 wait 16 cycles
COMMENT $14F9 wait 16 cycles
COMMENT $14FD wait 6 cycles
COMMENT $14FF wait 2 cycles
COMMENT $1500 wait 2 cycles
COMMENT $1501 5+3
COMMENT $1503 4
FORCE_SYMBOL $1503 VIA_port_a
COMMENT $1505 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1505 VIA_port_b
COMMENT $0000 4
COMMENT $1509 5
FORCE_SYMBOL $1509 VIA_port_b
COMMENT $150B 4
FORCE_SYMBOL $150B VIA_t1_cnt_hi
COMMENT $150D 21
COMMENT $150D wait 16 cycles
COMMENT $1511 wait 16 cycles
COMMENT $1515 wait 6 cycles
COMMENT $1517 wait 2 cycles
COMMENT $1518 wait 2 cycles
COMMENT $1519 5+3
COMMENT_LINE $151B continue uses same shift
COMMENT $151B 4 shift not changed, move might also be a draw
FORCE_SYMBOL $151B VIA_port_a
COMMENT_LINE $151D y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $151D 4
FORCE_SYMBOL $151D VIA_port_b
COMMENT $151F 4
COMMENT $1521 5
FORCE_SYMBOL $1521 VIA_port_b
FORCE_SYMBOL $1523 VIA_t1_cnt_hi
COMMENT $1525 wait 16 cycles
COMMENT $1529 wait 16 cycles
COMMENT $152D wait 6 cycles
COMMENT $152F wait 2 cycles
COMMENT $1530 wait 2 cycles
COMMENT_LINE $1533 SMVB50_continue_zero_single                                  ;#isfunction
COMMENT_LINE $1533 stb      <VIA_port_a                  ; 4 shift not changed, move might also be a draw
COMMENT_LINE $1533 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT_LINE $1533 sta      <VIA_port_b                  ; 4
COMMENT_LINE $1533 Y_DELAY_50                            ; 4
COMMENT_LINE $1533 stx      <VIA_port_b                  ; 5
COMMENT_LINE $1533 sta      <VIA_t1_cnt_hi
COMMENT_LINE $1533 ADD_NOPS_50
COMMENT_LINE $1533 pulu     b,x,pc
COMMENT $1533 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1533 VIA_port_a
COMMENT_LINE $1535 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $1535 4
FORCE_SYMBOL $1535 VIA_port_b
COMMENT $1537 4
COMMENT $153B 5
FORCE_SYMBOL $153B VIA_port_b
FORCE_SYMBOL $153D VIA_t1_cnt_hi
COMMENT $153F wait 16 cycles
COMMENT $1543 wait 16 cycles
COMMENT $1547 wait 6 cycles
COMMENT $1549 wait 2 cycles
COMMENT $154A wait 2 cycles
COMMENT_LINE $154D y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $154D 4
FORCE_SYMBOL $154D VIA_port_b
COMMENT $154F 4
COMMENT $1551 5
FORCE_SYMBOL $1551 VIA_port_b
FORCE_SYMBOL $1553 VIA_t1_cnt_hi
COMMENT $1555 reduced by ldu ,u - 5 cycles
COMMENT $1555 wait 16 cycles
COMMENT $1559 wait 16 cycles
COMMENT $155D wait 3 cycles
COMMENT $155F wait 2 cycles
FORCE_NO_SYMBOL $1560
COMMENT_LINE $1564 continue uses same shift
COMMENT_LINE $1564 y is inherently known to be == x,
COMMENT $1564 4
FORCE_SYMBOL $1564 VIA_port_a
COMMENT $1566 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1566 VIA_port_b
COMMENT $0000 4
FORCE_SYMBOL $1569 VIA_port_b
FORCE_SYMBOL $156B VIA_t1_cnt_hi
COMMENT $156D wait 16 cycles
COMMENT $1571 wait 16 cycles
COMMENT $1575 wait 6 cycles
COMMENT $1577 wait 2 cycles
COMMENT $1578 wait 2 cycles
COMMENT $157B 4
FORCE_SYMBOL $157B VIA_port_a
COMMENT $157D 4 shift not changed, move might also be a draw
FORCE_SYMBOL $157D VIA_port_b
COMMENT $157F light OFF, ZERO OFF
FORCE_NO_SYMBOL $157F
COMMENT $1582 5
FORCE_SYMBOL $1582 VIA_port_b
FORCE_SYMBOL $1584 VIA_t1_cnt_hi
FORCE_SYMBOL $1586 VIA_cntl
COMMENT $1588 wait 16 cycles
COMMENT $158C wait 16 cycles
COMMENT $1590 wait 6 cycles
COMMENT $1592 wait 2 cycles
COMMENT $1595 4
FORCE_SYMBOL $1595 VIA_port_a
COMMENT $1597 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1597 VIA_port_b
COMMENT $1599 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1599
COMMENT $159C 5
FORCE_SYMBOL $159C VIA_port_b
FORCE_SYMBOL $159E VIA_t1_cnt_hi
FORCE_SYMBOL $15A0 VIA_cntl
COMMENT $15A2 wait 16 cycles
COMMENT $15A6 wait 16 cycles
COMMENT $15AA wait 6 cycles
COMMENT $15AC wait 2 cycles
COMMENT $15AF 4
FORCE_SYMBOL $15AF VIA_port_a
COMMENT $15B1 4 shift not changed, move might also be a draw
FORCE_SYMBOL $15B1 VIA_port_b
COMMENT $0000 4
COMMENT $15B5 5
FORCE_SYMBOL $15B5 VIA_port_b
FORCE_SYMBOL $15B7 VIA_t1_cnt_hi
COMMENT $15B9 wait 16 cycles
COMMENT $15BD wait 16 cycles
COMMENT $15C1 wait 6 cycles
COMMENT $15C3 wait 2 cycles
COMMENT $15C4 wait 2 cycles
COMMENT $15C7 4
FORCE_SYMBOL $15C7 VIA_port_a
COMMENT $15C9 4 shift not changed, move might also be a draw
FORCE_SYMBOL $15C9 VIA_port_b
COMMENT $0000 4
COMMENT $15CD 5
FORCE_SYMBOL $15CD VIA_port_b
FORCE_SYMBOL $15CF VIA_t1_cnt_hi
COMMENT $15D1 wait 16 cycles
COMMENT $15D5 wait 16 cycles
COMMENT $15D9 wait 6 cycles
COMMENT $15DB wait 2 cycles
COMMENT $15DC wait 2 cycles
COMMENT $15DF 4
FORCE_SYMBOL $15DF VIA_port_a
COMMENT $15E1 4 shift not changed, move might also be a draw
FORCE_SYMBOL $15E1 VIA_port_b
COMMENT $0000 4
COMMENT $15E5 5
FORCE_SYMBOL $15E5 VIA_port_b
FORCE_SYMBOL $15E7 VIA_t1_cnt_hi
COMMENT $15E9 wait 16 cycles
COMMENT $15ED wait 16 cycles
COMMENT $15F1 wait 6 cycles
COMMENT $15F3 wait 2 cycles
COMMENT $15F4 wait 2 cycles
COMMENT $15F5 wait 3 cycles
COMMENT $15F7 wait 3 cycles
COMMENT $15F9 wait 2 cycles
COMMENT $15FA wait 2 cycles
FORCE_SYMBOL $15FB VIA_t1_cnt_hi
COMMENT $15FD wait 16 cycles
COMMENT $1601 wait 16 cycles
COMMENT $1605 wait 6 cycles
COMMENT $1607 wait 2 cycles
COMMENT $1608 wait 2 cycles
COMMENT $1609 wait 3 cycles
COMMENT $160B wait 3 cycles
COMMENT $160D wait 2 cycles
COMMENT $160E wait 2 cycles
FORCE_SYMBOL $160F VIA_t1_cnt_hi
COMMENT $1611 wait 16 cycles
COMMENT $1615 wait 16 cycles
COMMENT $1619 wait 6 cycles
COMMENT $161B wait 2 cycles
COMMENT $161C wait 2 cycles
COMMENT $161D wait 3 cycles
COMMENT $161F wait 3 cycles
COMMENT $1621 wait 2 cycles
COMMENT $1622 wait 2 cycles
FORCE_SYMBOL $1623 VIA_t1_cnt_hi
COMMENT $1625 wait 16 cycles
COMMENT $1629 wait 16 cycles
COMMENT $162D wait 6 cycles
COMMENT $162F wait 2 cycles
COMMENT $1630 wait 2 cycles
COMMENT $1631 wait 3 cycles
COMMENT $1633 wait 3 cycles
COMMENT $1635 wait 2 cycles
COMMENT $1636 wait 2 cycles
FORCE_SYMBOL $1637 VIA_t1_cnt_hi
COMMENT $1639 wait 16 cycles
COMMENT $163D wait 16 cycles
COMMENT $1641 wait 6 cycles
COMMENT $1643 wait 2 cycles
COMMENT $1644 wait 2 cycles
COMMENT $1645 wait 3 cycles
COMMENT $1647 wait 3 cycles
COMMENT $1649 wait 2 cycles
COMMENT $164A wait 2 cycles
FORCE_SYMBOL $164B VIA_t1_cnt_hi
COMMENT $164D wait 16 cycles
COMMENT $1651 wait 16 cycles
COMMENT $1655 wait 6 cycles
COMMENT $1657 wait 2 cycles
COMMENT $1658 wait 2 cycles
COMMENT $1659 wait 3 cycles
COMMENT $165B wait 3 cycles
COMMENT $165D wait 2 cycles
COMMENT $165E wait 2 cycles
FORCE_SYMBOL $165F VIA_t1_cnt_hi
COMMENT $1661 wait 16 cycles
COMMENT $1665 wait 16 cycles
COMMENT $1669 wait 6 cycles
COMMENT $166B wait 2 cycles
COMMENT $166C wait 2 cycles
COMMENT $166F 4
FORCE_SYMBOL $166F VIA_port_a
COMMENT $1671 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1671 VIA_port_b
COMMENT $0000 4
COMMENT $1675 5
FORCE_SYMBOL $1675 VIA_port_b
FORCE_SYMBOL $1677 VIA_t1_cnt_hi
COMMENT $1679 wait 16 cycles
COMMENT $167D wait 16 cycles
COMMENT $1681 wait 6 cycles
COMMENT $1683 wait 2 cycles
COMMENT $1684 wait 2 cycles
COMMENT $1687 4
FORCE_SYMBOL $1687 VIA_port_a
COMMENT $1689 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1689 VIA_port_b
COMMENT $168B light OFF, ZERO OFF
FORCE_NO_SYMBOL $168B
COMMENT $168E 5
FORCE_SYMBOL $168E VIA_port_b
FORCE_SYMBOL $1690 VIA_t1_cnt_hi
FORCE_SYMBOL $1692 VIA_cntl
COMMENT $1694 wait 16 cycles
COMMENT $1698 wait 16 cycles
COMMENT $169C wait 6 cycles
COMMENT $169E wait 2 cycles
COMMENT $16A1 4
FORCE_SYMBOL $16A1 VIA_port_a
COMMENT $16A3 4 shift not changed, move might also be a draw
FORCE_SYMBOL $16A3 VIA_port_b
COMMENT $16A5 light OFF, ZERO OFF
FORCE_NO_SYMBOL $16A5
COMMENT $16A8 5
FORCE_SYMBOL $16A8 VIA_port_b
COMMENT $16AA 4
FORCE_SYMBOL $16AA VIA_t1_cnt_hi
FORCE_SYMBOL $16AC VIA_cntl
COMMENT $16AE wait 16 cycles
COMMENT $16B2 wait 16 cycles
COMMENT $16B6 wait 6 cycles
COMMENT $16B8 wait 2 cycles
COMMENT $16BB 4
FORCE_SYMBOL $16BB VIA_port_a
COMMENT $16BD 4 shift not changed, move might also be a draw
FORCE_SYMBOL $16BD VIA_port_b
COMMENT $16BF light OFF, ZERO OFF
FORCE_NO_SYMBOL $16BF
COMMENT $16C2 5
FORCE_SYMBOL $16C2 VIA_port_b
FORCE_SYMBOL $16C4 VIA_t1_cnt_hi
FORCE_SYMBOL $16C6 VIA_cntl
COMMENT $16C8 wait 16 cycles
COMMENT $16CC wait 16 cycles
COMMENT $16D0 wait 6 cycles
COMMENT $16D2 wait 2 cycles
FORCE_SYMBOL $16D7 VIA_t1_cnt_hi
COMMENT $16D9 wait 16 cycles
COMMENT $16DD wait 16 cycles
COMMENT $16E1 wait 6 cycles
COMMENT $16E3 wait 2 cycles
COMMENT $16E4 wait 2 cycles
COMMENT $16E7 4
FORCE_SYMBOL $16E7 VIA_port_a
COMMENT $16E9 4 shift not changed, move might also be a draw
FORCE_SYMBOL $16E9 VIA_port_b
COMMENT $16EB light OFF, ZERO OFF
FORCE_NO_SYMBOL $16EB
COMMENT $16EE 5
FORCE_SYMBOL $16EE VIA_port_b
COMMENT $16F0 4
FORCE_SYMBOL $16F0 VIA_t1_cnt_hi
FORCE_SYMBOL $16F2 VIA_cntl
COMMENT $16F4 wait 16 cycles
COMMENT $16F8 wait 16 cycles
COMMENT $16FC wait 6 cycles
COMMENT $16FE wait 2 cycles
COMMENT $1701 wait 3 cycles
COMMENT $1703 wait 2 cycles
COMMENT $1704 wait 2 cycles
FORCE_SYMBOL $1705 VIA_t1_cnt_hi
COMMENT $1707 wait 16 cycles
COMMENT $170B wait 16 cycles
COMMENT $170F wait 6 cycles
COMMENT $1711 wait 2 cycles
COMMENT $1712 wait 2 cycles
COMMENT $1715 4
FORCE_SYMBOL $1715 VIA_port_a
COMMENT $1717 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1717 VIA_port_b
COMMENT $0000 4
COMMENT $171B 5
FORCE_SYMBOL $171B VIA_port_b
FORCE_SYMBOL $171D VIA_t1_cnt_hi
COMMENT $171F wait 16 cycles
COMMENT $1723 wait 16 cycles
COMMENT $1727 wait 6 cycles
COMMENT $1729 wait 2 cycles
COMMENT $172A wait 2 cycles
COMMENT $172D 4
FORCE_SYMBOL $172D VIA_port_a
COMMENT $172F 4 shift not changed, move might also be a draw
FORCE_SYMBOL $172F VIA_port_b
COMMENT $1731 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1731
COMMENT $1734 5
FORCE_SYMBOL $1734 VIA_port_b
FORCE_SYMBOL $1736 VIA_t1_cnt_hi
FORCE_SYMBOL $1738 VIA_cntl
COMMENT $173A wait 16 cycles
COMMENT $173E wait 16 cycles
COMMENT $1742 wait 6 cycles
COMMENT $1744 wait 2 cycles
COMMENT $1747 4
FORCE_SYMBOL $1747 VIA_port_a
COMMENT $1749 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1749 VIA_port_b
COMMENT $174B light OFF, ZERO OFF
FORCE_NO_SYMBOL $174B
COMMENT $174E 5
FORCE_SYMBOL $174E VIA_port_b
FORCE_SYMBOL $1750 VIA_t1_cnt_hi
FORCE_SYMBOL $1752 VIA_cntl
COMMENT $1754 wait 16 cycles
COMMENT $1758 wait 16 cycles
COMMENT $175C wait 6 cycles
COMMENT $175E wait 2 cycles
COMMENT $1761 4
FORCE_SYMBOL $1761 VIA_port_a
COMMENT $1763 4 shift not changed, move might also be a draw
FORCE_SYMBOL $1763 VIA_port_b
COMMENT $1765 light OFF, ZERO OFF
FORCE_NO_SYMBOL $1765
COMMENT $1768 5
FORCE_SYMBOL $1768 VIA_port_b
COMMENT $176A 4
FORCE_SYMBOL $176A VIA_t1_cnt_hi
FORCE_SYMBOL $176C VIA_cntl
COMMENT $176E wait 16 cycles
COMMENT $1772 wait 16 cycles
COMMENT $1776 wait 6 cycles
COMMENT $1778 wait 2 cycles
FORCE_SYMBOL $177D VIA_t1_cnt_hi
COMMENT $177F wait 16 cycles
COMMENT $1783 wait 16 cycles
COMMENT $1787 wait 6 cycles
COMMENT $1789 wait 2 cycles
COMMENT $178A wait 2 cycles
COMMENT $178D light OFF, ZERO OFF
FORCE_NO_SYMBOL $178D
COMMENT $1790 5
FORCE_SYMBOL $1790 VIA_port_b
COMMENT $1792 4
FORCE_SYMBOL $1792 VIA_t1_cnt_hi
FORCE_SYMBOL $1794 VIA_cntl
COMMENT $1796 wait 16 cycles
COMMENT $179A wait 16 cycles
COMMENT $179E wait 6 cycles
COMMENT $17A0 wait 2 cycles
COMMENT_LINE $17A3 assuming b = $ee
COMMENT $17A3 5
FORCE_SYMBOL $17A3 VIA_port_b
COMMENT $17A5 4
FORCE_SYMBOL $17A5 VIA_t1_cnt_hi
FORCE_SYMBOL $17A7 VIA_cntl
COMMENT $17A9 wait 16 cycles
COMMENT $17AD wait 16 cycles
COMMENT $17B1 wait 6 cycles
COMMENT $17B3 wait 2 cycles
COMMENT_LINE $17B6 assume b = $ee
FORCE_SYMBOL $17B6 VIA_t1_cnt_hi
FORCE_SYMBOL $17B8 VIA_cntl
COMMENT $17BA wait 16 cycles
COMMENT $17BE wait 16 cycles
COMMENT $17C2 wait 6 cycles
COMMENT $17C4 wait 2 cycles
COMMENT $17C7 4
FORCE_SYMBOL $17C7 VIA_port_a
COMMENT $17C9 4 shift not changed, move might also be a draw
FORCE_SYMBOL $17C9 VIA_port_b
COMMENT $17CC light ON, ZERO OFF
FORCE_NO_SYMBOL $17CC
COMMENT $17CE 5
FORCE_SYMBOL $17CE VIA_port_b
COMMENT $17D0 4
FORCE_SYMBOL $17D0 VIA_t1_cnt_hi
FORCE_SYMBOL $17D2 VIA_cntl
COMMENT $17D4 wait 16 cycles
COMMENT $17D8 wait 16 cycles
COMMENT $17DC wait 6 cycles
COMMENT $17DE wait 2 cycles
COMMENT $17E1 4
FORCE_SYMBOL $17E1 VIA_port_a
COMMENT $17E3 4 shift not changed, move might also be a draw
FORCE_SYMBOL $17E3 VIA_port_b
FORCE_NO_SYMBOL $17E5
FORCE_SYMBOL $17E8 VIA_port_b
FORCE_SYMBOL $17EA VIA_t1_cnt_hi
FORCE_SYMBOL $17EC VIA_cntl
COMMENT $17EE wait 16 cycles
COMMENT $17F2 wait 16 cycles
COMMENT $17F6 wait 6 cycles
COMMENT $17F8 wait 2 cycles
COMMENT $17FB 4
FORCE_SYMBOL $17FB VIA_port_a
COMMENT $17FD 4 shift not changed, move might also be a draw
FORCE_SYMBOL $17FD VIA_port_b
FORCE_SYMBOL $17FF VIA_port_b
FORCE_NO_SYMBOL $1801
FORCE_SYMBOL $1803 VIA_t1_cnt_hi
FORCE_SYMBOL $1805 VIA_cntl
COMMENT $1807 wait 16 cycles
COMMENT $180B wait 16 cycles
COMMENT $180F wait 6 cycles
COMMENT $1811 wait 2 cycles
COMMENT $1814 4
FORCE_SYMBOL $1814 VIA_port_b
FORCE_NO_SYMBOL $1816
COMMENT $1819 5
FORCE_SYMBOL $1819 VIA_port_b
FORCE_SYMBOL $181B VIA_t1_cnt_hi
FORCE_SYMBOL $181D VIA_cntl
COMMENT $181F wait 16 cycles
COMMENT $1823 wait 16 cycles
COMMENT $1827 wait 6 cycles
COMMENT $1829 wait 2 cycles
COMMENT $182C 4
FORCE_SYMBOL $182C VIA_port_b
FORCE_NO_SYMBOL $182E
COMMENT $1831 5
FORCE_SYMBOL $1831 VIA_port_b
FORCE_SYMBOL $1833 VIA_t1_cnt_hi
FORCE_SYMBOL $1835 VIA_cntl
COMMENT $1837 wait 16 cycles
COMMENT $183B wait 16 cycles
COMMENT $183F wait 6 cycles
COMMENT $1841 wait 2 cycles
FORCE_NO_SYMBOL $1844
FORCE_SYMBOL $1846 VIA_int_flags
FORCE_SYMBOL $184A gameScale
FORCE_SYMBOL $184D VIA_cntl
FORCE_NO_SYMBOL $184F
COMMENT $1851 /BLANK low and /ZERO low
FORCE_SYMBOL $1851 VIA_cntl
FORCE_SYMBOL $1853 VIA_t1_cnt_lo
COMMENT_LINE $1855 and ensures integrators are clean (good positioning!)
COMMENT_LINE $1855 ldd      #0
FORCE_SYMBOL $1855 VIA_port_b
FORCE_SYMBOL $1858 gameScale
FORCE_SYMBOL $185B VIA_cntl
FORCE_NO_SYMBOL $185D
COMMENT $185F /BLANK low and /ZERO low
FORCE_SYMBOL $185F VIA_cntl
FORCE_SYMBOL $1861 VIA_t1_cnt_lo
COMMENT_LINE $1863 and ensures integrators are clean (good positioning!)
COMMENT_LINE $1863 ldd      #0
FORCE_SYMBOL $1863 VIA_port_b
COMMENT_LINE $1867 // TODO CHECK WITH SHIELD + CO
COMMENT_LINE $1867 SET_Y_INT
COMMENT_LINE $1867 Y_DELAY_50_HALF                          ; 4
COMMENT_LINE $1867 ldd      #$40E0
COMMENT_LINE $1867 stx      <VIA_port_b                  ; 5
COMMENT_LINE $1867 clr      <VIA_t1_cnt_hi
COMMENT_LINE $1867 ADD_NOPS_50
FORCE_NO_SYMBOL $1867
FORCE_SYMBOL $1869 VIA_int_flags
FORCE_SYMBOL $186D VIA_cntl
FORCE_NO_SYMBOL $1872
FORCE_SYMBOL $1874 VIA_int_flags
COMMENT_LINE $1879 todo
COMMENT_LINE $1879 last draw could contain $F in A
COMMENT_LINE $1879 than load not needed - attention
COMMENT_LINE $1879 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $1879 also in X could be some sensible value in X for one of the other
FORCE_NO_SYMBOL $1879
FORCE_SYMBOL $187B VIA_cntl
FORCE_SYMBOL $187D gameScale
FORCE_SYMBOL $1880 VIA_t1_cnt_lo
COMMENT_LINE $1882 extended on purpose to gain one cycle of time
COMMENT_LINE $1882 to reset to
COMMENT_LINE $1882 a) swithc light off before zeroing
COMMENT_LINE $1882 b) zero
FORCE_NO_SYMBOL $1882
COMMENT $1884 /BLANK low and /ZERO low
FORCE_SYMBOL $1884 VIA_cntl
FORCE_SYMBOL $1887 VIA_port_b
COMMENT_LINE $188A nop 10
COMMENT $188A (D = y,x, pc = next object)
COMMENT $188C wait 6 cycles
COMMENT $188E wait 2 cycles
COMMENT $188F wait 2 cycles
FORCE_NO_SYMBOL $1890
COMMENT $1892 /BLANK low and /ZERO high
FORCE_SYMBOL $1892 VIA_cntl
FORCE_SYMBOL $1894 VIA_port_a
FORCE_NO_SYMBOL $1896
FORCE_SYMBOL $1899 VIA_port_b
FORCE_SYMBOL $189B VIA_port_b
FORCE_NO_SYMBOL $18A0
FORCE_SYMBOL $18A2 VIA_cntl
FORCE_NO_SYMBOL $18A4
FORCE_SYMBOL $18A7 VIA_port_b
FORCE_SYMBOL $18A9 VIA_port_b
FORCE_SYMBOL $18AB calibrationValue50
FORCE_SYMBOL $18AE additionalFlags
FORCE_NO_SYMBOL $18B1
FORCE_NO_SYMBOL $18B5
FORCE_SYMBOL $18B7 VIA_port_b
COMMENT $18B9 2 cycles
FORCE_NO_SYMBOL $18B9
FORCE_SYMBOL $18BC VIA_port_a
FORCE_SYMBOL $18BE VIA_port_b
FORCE_NO_SYMBOL $18C1
FORCE_SYMBOL $18C3 VIA_port_b
COMMENT $18C5 2 cycles
FORCE_NO_SYMBOL $18C5
FORCE_SYMBOL $18C8 VIA_port_a
FORCE_SYMBOL $18CC VIA_port_b
COMMENT_LINE $18CF bank 3 + bank 0
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $18CF calibrationZero7
FORCE_SYMBOL $18D2 PLAYER_YPOS
FORCE_SYMBOL $18D4 gameScale
FORCE_SYMBOL $18D7 VIA_t1_cnt_lo
FORCE_SYMBOL $18D9 playerXpos
COMMENT $18DC Store Y in D/A register
FORCE_SYMBOL $18DC VIA_port_a
COMMENT $18DE Blank low, zero high?
FORCE_NO_SYMBOL $18DE
FORCE_SYMBOL $18E0 VIA_cntl
COMMENT $18E3 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $18E3 VIA_port_b
COMMENT $18E5 y must be set more than xx cycles on some vectrex
COMMENT $18E6 Disable mux
FORCE_SYMBOL $18E6 VIA_port_b
COMMENT $18E8 Store X in D/A register
FORCE_SYMBOL $18E8 VIA_port_a
COMMENT $18EA enable timer
FORCE_SYMBOL $18EA VIA_t1_cnt_hi
COMMENT_LINE $18EC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $18EC draws the fighter (anim) and all that goes with it (armor, shield or scoop)
COMMENT_LINE $18EC only one addition at any given time at once
FORCE_SYMBOL $18EC OBJECT_SCALE
FORCE_SYMBOL $18EE VIA_t1_cnt_lo
COMMENT_LINE $18F0 ldu      #SM_Fighter_Anim
FORCE_SYMBOL $18F0 playerNumberOfBulletsPerShot
FORCE_SYMBOL $18F5 SM_Fighter_AnimList
FORCE_SYMBOL $18FA playAnimDelayCounter
FORCE_SYMBOL $18FF ANIMATION_DELAY
FORCE_SYMBOL $1901 playAnimDelayCounter
FORCE_SYMBOL $1904 playerAnim
FORCE_SYMBOL $1907 playerAnim
FORCE_SYMBOL $1913 playerAnim
FORCE_SYMBOL $1916 playerAnim
FORCE_NO_SYMBOL $191C
FORCE_SYMBOL $191E VIA_int_flags
COMMENT $1922 twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $1922 SMVB_drawSmart
COMMENT_LINE $1925 draw cleanup
FORCE_NO_SYMBOL $1925
FORCE_SYMBOL $1927 gameScale
COMMENT $192A /BLANK low and /ZERO low
FORCE_SYMBOL $192A VIA_cntl
FORCE_SYMBOL $192C VIA_t1_cnt_lo
FORCE_NO_SYMBOL $192E
FORCE_SYMBOL $1931 VIA_port_b
COMMENT_LINE $1933 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1934 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1934 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1934 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1934 textIntensity
FORCE_SYMBOL $1937 Intensity_a
FORCE_SYMBOL $193A textFadeDirection
FORCE_SYMBOL $193F textIntensity
FORCE_SYMBOL $1942 textIntensity
FORCE_SYMBOL $1947 textIntensity
FORCE_SYMBOL $194A textIntensity
FORCE_SYMBOL $194D textFadeDirection
FORCE_SYMBOL $1950 textPointer
FORCE_NO_SYMBOL $1953
FORCE_SYMBOL $1955 textPointer
FORCE_NO_SYMBOL $1958
FORCE_SYMBOL $195C textDisplayDone
FORCE_SYMBOL $1961 textIntensity
FORCE_SYMBOL $1964 textIntensity
FORCE_SYMBOL $1969 textIntensity
FORCE_SYMBOL $196C textIntensity
FORCE_SYMBOL $196F textFadeDirection
COMMENT_LINE $1976 first thing in test routine is
COMMENT_LINE $1976 MoveTo which uses T1, which clears T1 interrupt
COMMENT_LINE $1976 upon entry -> make sure SR interrupt is set, so we
COMMENT_LINE $1976 do not do a bankswitch
COMMENT_LINE $1976 ( after move is finished, autmatically T1 IRQ is = again
COMMENT_LINE $1976 so the text output can be done with SR)
COMMENT $1976 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $1976
COMMENT_LINE $1979 for some reason or another, VIA doesn't like a
COMMENT_LINE $1979 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $1979 (only on a real vectrex, not Vide)
FORCE_SYMBOL $1979 VIA_aux_cntl
COMMENT $197B and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $197B VIA_shift_reg
COMMENT $197D bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $197D
FORCE_SYMBOL $197F VIA_int_enable
COMMENT_LINE $1981 wait 20 cycles till store of aux (these are 23)
COMMENT $1981 12
COMMENT $1982 3
FORCE_NO_SYMBOL $1982
COMMENT_LINE $1984 nop      10
FORCE_SYMBOL $1984 VIA_aux_cntl
FORCE_NO_SYMBOL $1986
FORCE_SYMBOL $1988 VIA_t1_cnt_lo
FORCE_SYMBOL $198A textPointer
FORCE_SYMBOL $1990 syncPrintStrd
COMMENT_LINE $1994 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1994 textIntensity
COMMENT $1997 0 is fade in
FORCE_SYMBOL $1997 textFadeDirection
COMMENT $199A 0 = not done
FORCE_SYMBOL $199A textDisplayDone
FORCE_SYMBOL $199D blackhole_texts
FORCE_SYMBOL $19A0 textPointer
FORCE_NO_SYMBOL $19A3
FORCE_SYMBOL $19A5 Vec_Text_Width
FORCE_SYMBOL $19AA Vec_Text_Height
COMMENT $19AD Vectrex BIOS recalibration
FORCE_SYMBOL $19AD Wait_Recal_noShift
COMMENT $19B0 doymsound100
FORCE_NO_SYMBOL $19B0
FORCE_SYMBOL $19B3 jsrBank1_fromBank0_T1
COMMENT $19B6 get button status
FORCE_SYMBOL $19B6 Read_Btns
COMMENT $19B9 button pressed - any
FORCE_NO_SYMBOL $19B9
COMMENT $19BC button 2
FORCE_NO_SYMBOL $19BC
FORCE_SYMBOL $19C0 doTexterStep
FORCE_SYMBOL $19C3 textDisplayDone
FORCE_NO_SYMBOL $19C8
FORCE_SYMBOL $19CB Vec_Text_HW
COMMENT $19CE returnFromBHText
FORCE_NO_SYMBOL $19CE
FORCE_SYMBOL $19D1 jmpBankIRQ1Shift
COMMENT_LINE $19D4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $19E2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1AA8 bank 2
COMMENT $1AA8 forward
COMMENT $1B03 forward
COMMENT $1B5E forward
COMMENT $1BB9 forward
COMMENT $1C14 forward
COMMENT_LINE $1C6F bank 1 + 2 + 0 (from dodger)
COMMENT_LINE $1C6F zero delay is needed for zeroing to work correctly
COMMENT_LINE $1C6F depends on the distance of the current integrator position to actual zero point
COMMENT_LINE $1C6F experiment with my vectri:
COMMENT_LINE $1C6F ZERO ing the integrators takes time. Measures at my vectrex show e.g.:
COMMENT_LINE $1C6F If you move the beam with a to x = -127 and y = -127 at diffferent scale values, the time to reach zero:
COMMENT_LINE $1C6F - scale $ff -> zero 110 cycles
COMMENT_LINE $1C6F - scale $7f -> zero 75 cycles
COMMENT_LINE $1C6F - scale $40 -> zero 57 cycles
COMMENT_LINE $1C6F - scale $20 -> zero 53 cycles
COMMENT_LINE $0000 zero
COMMENT $0000 zero the integrators
COMMENT $0000 store zeroing values to cntl
COMMENT_LINE $0000 wait that zeroing surely has the desired effect!
COMMENT $0000 can be done in move
COMMENT $0000 [3]Point to next chargen row
COMMENT $0000 Point to start of text string
COMMENT $0000 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
COMMENT_LINE $0000 first entry here, ramp is disabled
COMMENT_LINE $0000 if there was a jump from below
COMMENT_LINE $0000 ramp will be enabled by next line
COMMENT $0000 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT $0000 Clear D/A output
COMMENT $0000 Enable mux
COMMENT_LINE $0000 TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $0000 LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $0000 std <VIA_port_b
COMMENT_LINE $0000 assuming first char is NEVER $80
COMMENT $0000 [+6]Get next character
COMMENT_LINE $0000 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $0000 13 cycles overhead
COMMENT_LINE $0000 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $0000 [+5]Get bitmap from chargen table
COMMENT $0000 [+4]rasterout of char bitmap "row" thru shift out in shift register
COMMENT $0000 [+6]Get next character
COMMENT $0000 [+3]Go back if not terminator
COMMENT $0000 is still $80 ;[4]disable RAMP, disable mux don't matter
COMMENT $0000 T1?PB7 enabled
COMMENT_LINE $1C6F put move position on stack put it so, that we can load "d" directly from stack
COMMENT $1C71 Save string pointer
FORCE_SYMBOL $1C71 Vec_Str_Ptr
COMMENT_LINE $1C74 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1C74 POSITION "EXACT" PATCH assuming x pos is midle alligned,
COMMENT_LINE $1C74 if that is a case we can use neg x pos as "opposite" string pos
COMMENT_LINE $1C74 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1C74 zero the integrators
COMMENT $1C77 store zeroing values to cntl
FORCE_SYMBOL $1C77 VIA_cntl
COMMENT $1C79 and wait for zeroing to be actually done
FORCE_SYMBOL $1C79 ZERO_DELAY_P2
COMMENT_LINE $1C7B reset integrators
COMMENT $1C7B reset integrator offset
FORCE_SYMBOL $1C7B VIA_port_a
COMMENT_LINE $1C7D lda #%10000010
COMMENT_LINE $1C7D wait that zeroing surely has the desired effect!
COMMENT $1C7D while waiting, zero offsets
FORCE_SYMBOL $1C7D VIA_port_b
FORCE_SYMBOL $1C83 VIA_port_b
FORCE_NO_SYMBOL $1C85
COMMENT $1C88 Store Y in D/A register
FORCE_SYMBOL $1C88 VIA_port_a
COMMENT $1C8A Blank low, zero high?
FORCE_NO_SYMBOL $1C8A
FORCE_SYMBOL $1C8C VIA_cntl
COMMENT $1C8F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1C8F VIA_port_b
COMMENT $1C91 y must be set more than xx cycles on some vectrex
COMMENT $1C92 Disable mux
FORCE_SYMBOL $1C92 VIA_port_b
COMMENT $1C94 Store X in D/A register
FORCE_SYMBOL $1C94 VIA_port_a
COMMENT $1C96 enable timer
FORCE_SYMBOL $1C96 VIA_t1_cnt_hi
COMMENT_LINE $1C98 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1C98 Point to start of chargen bitmaps
FORCE_SYMBOL $1C9B Vec_Text_Width
FORCE_NO_SYMBOL $1C9E
FORCE_NO_SYMBOL $1CA0
FORCE_NO_SYMBOL $1CA4
FORCE_SYMBOL $1CA6 VIA_int_flags
COMMENT_LINE $1CAA zero
COMMENT $1CAA zero the integrators
COMMENT $1CAD store zeroing values to cntl
FORCE_SYMBOL $1CAD VIA_cntl
COMMENT_LINE $1CAF wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $1CB4
COMMENT $1CB6 Store Y in D/A register
FORCE_SYMBOL $1CB6 VIA_port_a
COMMENT $1CB8 Blank low, zero high?
FORCE_NO_SYMBOL $1CB8
FORCE_SYMBOL $1CBA VIA_cntl
COMMENT $1CBD Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1CBD VIA_port_b
COMMENT $1CBF y must be set more than xx cycles on some vectrex
COMMENT $1CC0 Disable mux
FORCE_SYMBOL $1CC0 VIA_port_b
COMMENT $1CC2 Store X in D/A register
FORCE_SYMBOL $1CC2 VIA_port_a
COMMENT $1CC4 enable timer
FORCE_SYMBOL $1CC4 VIA_t1_cnt_hi
COMMENT $1CC6 can be done in move
FORCE_NO_SYMBOL $1CC6
COMMENT $1CC8 [3]Point to next chargen row
FORCE_SYMBOL $1CC8 FONT_LENGTH
FORCE_NO_SYMBOL $1CCB
COMMENT $1CCD Point to start of text string
FORCE_SYMBOL $1CCD Vec_Str_Ptr
FORCE_NO_SYMBOL $1CD0
FORCE_SYMBOL $1CD2 VIA_int_flags
COMMENT $1CD6 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $1CD6 VIA_aux_cntl
COMMENT_LINE $1CD8 first entry here, ramp is disabled
COMMENT_LINE $1CD8 if there was a jump from below
COMMENT_LINE $1CD8 ramp will be enabled by next line
COMMENT $1CD8 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $1CD8
COMMENT $1CDB Clear D/A output
FORCE_SYMBOL $1CDB VIA_port_a
COMMENT $1CDD Enable mux
FORCE_SYMBOL $1CDD VIA_port_b
COMMENT_LINE $1CDF TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $1CDF LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $1CDF std <VIA_port_b
FORCE_SYMBOL $1CDF VIA_port_b
COMMENT_LINE $1CE2 assuming first char is NEVER $80
COMMENT $1CE2 [+6]Get next character
COMMENT_LINE $1CE4 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $1CE4 13 cycles overhead
COMMENT_LINE $1CE4 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $1CE4 [+5]Get bitmap from chargen table
COMMENT $1CE6 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $1CE6 VIA_shift_reg
COMMENT $1CE8 [+6]Get next character
COMMENT $1CEA [+3]Go back if not terminator
COMMENT $1CEC is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $1CEC VIA_port_b
FORCE_NO_SYMBOL $1CEE
COMMENT $1CF0 T1?PB7 enabled
FORCE_SYMBOL $1CF0 VIA_aux_cntl
COMMENT_LINE $1CF2 zero
COMMENT $1CF2 zero the integrators
COMMENT $1CF5 store zeroing values to cntl
FORCE_SYMBOL $1CF5 VIA_cntl
COMMENT_LINE $1CF7 wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $1CFC
COMMENT $1CFE Store Y in D/A register
FORCE_SYMBOL $1CFE VIA_port_a
COMMENT $1D00 Blank low, zero high?
FORCE_NO_SYMBOL $1D00
FORCE_SYMBOL $1D02 VIA_cntl
COMMENT $1D05 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1D05 VIA_port_b
COMMENT $1D07 y must be set more than xx cycles on some vectrex
COMMENT $1D08 Disable mux
FORCE_SYMBOL $1D08 VIA_port_b
COMMENT $1D0A Store X in D/A register
FORCE_SYMBOL $1D0A VIA_port_a
COMMENT $1D0C enable timer
FORCE_SYMBOL $1D0C VIA_t1_cnt_hi
COMMENT $1D0E can be done in move
FORCE_NO_SYMBOL $1D0E
COMMENT $1D10 [3]Point to next chargen row
FORCE_SYMBOL $1D10 FONT_LENGTH
FORCE_NO_SYMBOL $1D13
COMMENT $1D15 Point to start of text string
FORCE_SYMBOL $1D15 Vec_Str_Ptr
FORCE_NO_SYMBOL $1D18
FORCE_SYMBOL $1D1A VIA_int_flags
COMMENT $1D1E Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $1D1E VIA_aux_cntl
COMMENT_LINE $1D20 first entry here, ramp is disabled
COMMENT_LINE $1D20 if there was a jump from below
COMMENT_LINE $1D20 ramp will be enabled by next line
COMMENT $1D20 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $1D20
COMMENT $1D23 Clear D/A output
FORCE_SYMBOL $1D23 VIA_port_a
COMMENT $1D25 Enable mux
FORCE_SYMBOL $1D25 VIA_port_b
COMMENT_LINE $1D27 TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $1D27 LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $1D27 std <VIA_port_b
FORCE_SYMBOL $1D27 VIA_port_b
COMMENT_LINE $1D2A assuming first char is NEVER $80
COMMENT $1D2A [+6]Get next character
COMMENT_LINE $1D2C one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $1D2C 13 cycles overhead
COMMENT_LINE $1D2C ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $1D2C [+5]Get bitmap from chargen table
COMMENT $1D2E [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $1D2E VIA_shift_reg
COMMENT $1D30 [+6]Get next character
COMMENT $1D32 [+3]Go back if not terminator
COMMENT $1D34 is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $1D34 VIA_port_b
FORCE_NO_SYMBOL $1D36
COMMENT $1D38 T1?PB7 enabled
FORCE_SYMBOL $1D38 VIA_aux_cntl
COMMENT_LINE $1D3A zero
COMMENT $1D3A zero the integrators
COMMENT $1D3D store zeroing values to cntl
FORCE_SYMBOL $1D3D VIA_cntl
COMMENT_LINE $1D3F wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $1D44
COMMENT $1D46 Store Y in D/A register
FORCE_SYMBOL $1D46 VIA_port_a
COMMENT $1D48 Blank low, zero high?
FORCE_NO_SYMBOL $1D48
FORCE_SYMBOL $1D4A VIA_cntl
COMMENT $1D4D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1D4D VIA_port_b
COMMENT $1D4F y must be set more than xx cycles on some vectrex
COMMENT $1D50 Disable mux
FORCE_SYMBOL $1D50 VIA_port_b
COMMENT $1D52 Store X in D/A register
FORCE_SYMBOL $1D52 VIA_port_a
COMMENT $1D54 enable timer
FORCE_SYMBOL $1D54 VIA_t1_cnt_hi
COMMENT $1D56 can be done in move
FORCE_NO_SYMBOL $1D56
COMMENT $1D58 [3]Point to next chargen row
FORCE_SYMBOL $1D58 FONT_LENGTH
FORCE_NO_SYMBOL $1D5B
COMMENT $1D5D Point to start of text string
FORCE_SYMBOL $1D5D Vec_Str_Ptr
FORCE_NO_SYMBOL $1D60
FORCE_SYMBOL $1D62 VIA_int_flags
COMMENT $1D66 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $1D66 VIA_aux_cntl
COMMENT_LINE $1D68 first entry here, ramp is disabled
COMMENT_LINE $1D68 if there was a jump from below
COMMENT_LINE $1D68 ramp will be enabled by next line
COMMENT $1D68 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $1D68
COMMENT $1D6B Clear D/A output
FORCE_SYMBOL $1D6B VIA_port_a
COMMENT $1D6D Enable mux
FORCE_SYMBOL $1D6D VIA_port_b
COMMENT_LINE $1D6F TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $1D6F LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $1D6F std <VIA_port_b
FORCE_SYMBOL $1D6F VIA_port_b
COMMENT_LINE $1D72 assuming first char is NEVER $80
COMMENT $1D72 [+6]Get next character
COMMENT_LINE $1D74 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $1D74 13 cycles overhead
COMMENT_LINE $1D74 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $1D74 [+5]Get bitmap from chargen table
COMMENT $1D76 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $1D76 VIA_shift_reg
COMMENT $1D78 [+6]Get next character
COMMENT $1D7A [+3]Go back if not terminator
COMMENT $1D7C is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $1D7C VIA_port_b
FORCE_NO_SYMBOL $1D7E
COMMENT $1D80 T1?PB7 enabled
FORCE_SYMBOL $1D80 VIA_aux_cntl
COMMENT_LINE $1D82 zero
COMMENT $1D82 zero the integrators
COMMENT $1D85 store zeroing values to cntl
FORCE_SYMBOL $1D85 VIA_cntl
COMMENT_LINE $1D87 wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $1D8C
COMMENT $1D8E Store Y in D/A register
FORCE_SYMBOL $1D8E VIA_port_a
COMMENT $1D90 Blank low, zero high?
FORCE_NO_SYMBOL $1D90
FORCE_SYMBOL $1D92 VIA_cntl
COMMENT $1D95 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1D95 VIA_port_b
COMMENT $1D97 y must be set more than xx cycles on some vectrex
COMMENT $1D98 Disable mux
FORCE_SYMBOL $1D98 VIA_port_b
COMMENT $1D9A Store X in D/A register
FORCE_SYMBOL $1D9A VIA_port_a
COMMENT $1D9C enable timer
FORCE_SYMBOL $1D9C VIA_t1_cnt_hi
COMMENT $1D9E can be done in move
FORCE_NO_SYMBOL $1D9E
COMMENT $1DA0 [3]Point to next chargen row
FORCE_SYMBOL $1DA0 FONT_LENGTH
FORCE_NO_SYMBOL $1DA3
COMMENT $1DA5 Point to start of text string
FORCE_SYMBOL $1DA5 Vec_Str_Ptr
FORCE_NO_SYMBOL $1DA8
FORCE_SYMBOL $1DAA VIA_int_flags
COMMENT $1DAE Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $1DAE VIA_aux_cntl
COMMENT_LINE $1DB0 first entry here, ramp is disabled
COMMENT_LINE $1DB0 if there was a jump from below
COMMENT_LINE $1DB0 ramp will be enabled by next line
COMMENT $1DB0 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $1DB0
COMMENT $1DB3 Clear D/A output
FORCE_SYMBOL $1DB3 VIA_port_a
COMMENT $1DB5 Enable mux
FORCE_SYMBOL $1DB5 VIA_port_b
COMMENT_LINE $1DB7 TO FAST EXAMPLE!!! (cranky)
COMMENT_LINE $1DB7 LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $1DB7 std <VIA_port_b
FORCE_SYMBOL $1DB7 VIA_port_b
COMMENT_LINE $1DBA assuming first char is NEVER $80
COMMENT $1DBA [+6]Get next character
COMMENT_LINE $1DBC one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $1DBC 13 cycles overhead
COMMENT_LINE $1DBC ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $1DBC [+5]Get bitmap from chargen table
COMMENT $1DBE [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $1DBE VIA_shift_reg
COMMENT $1DC0 [+6]Get next character
COMMENT $1DC2 [+3]Go back if not terminator
COMMENT $1DC4 is still $80 ;[4]disable RAMP, disable mux don't matter
FORCE_SYMBOL $1DC4 VIA_port_b
FORCE_NO_SYMBOL $1DC6
COMMENT $1DC8 T1?PB7 enabled
FORCE_SYMBOL $1DC8 VIA_aux_cntl
COMMENT_LINE $1DCA zero
COMMENT $1DCA zero the integrators
COMMENT $1DCD store zeroing values to cntl
FORCE_SYMBOL $1DCD VIA_cntl
COMMENT_LINE $1DCF wait that zeroing surely has the desired effect!
FORCE_NO_SYMBOL $1DD4
COMMENT $1DD6 Store Y in D/A register
FORCE_SYMBOL $1DD6 VIA_port_a
COMMENT $1DD8 Blank low, zero high?
FORCE_NO_SYMBOL $1DD8
FORCE_SYMBOL $1DDA VIA_cntl
COMMENT $1DDD Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1DDD VIA_port_b
COMMENT $1DDF y must be set more than xx cycles on some vectrex
COMMENT $1DE0 Disable mux
FORCE_SYMBOL $1DE0 VIA_port_b
COMMENT $1DE2 Store X in D/A register
FORCE_SYMBOL $1DE2 VIA_port_a
COMMENT $1DE4 enable timer
FORCE_SYMBOL $1DE4 VIA_t1_cnt_hi
COMMENT $1DE6 [3]Point to next chargen row
FORCE_SYMBOL $1DE6 FONT_LENGTH
FORCE_NO_SYMBOL $1DE9
COMMENT $1DEB Point to start of text string
FORCE_SYMBOL $1DEB Vec_Str_Ptr
FORCE_NO_SYMBOL $1DEE
FORCE_SYMBOL $1DF0 VIA_int_flags
COMMENT $1DF4 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $1DF4 VIA_aux_cntl
COMMENT_LINE $1DF6 first entry here, ramp is disabled
COMMENT_LINE $1DF6 if there was a jump from below
COMMENT_LINE $1DF6 ramp will be enabled by next line
COMMENT $1DF6 a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $1DF6
COMMENT $1DF9 Clear D/A output
FORCE_SYMBOL $1DF9 VIA_port_a
COMMENT $1DFB Enable mux
FORCE_SYMBOL $1DFB VIA_port_b
COMMENT_LINE $1DFD TO FAST EXAMPLE!!!
COMMENT_LINE $1DFD texts have different angles!
COMMENT_LINE $1DFD LDD      #$8000                       ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT_LINE $1DFD std <VIA_port_b
FORCE_SYMBOL $1DFD VIA_port_b
COMMENT_LINE $1E00 assuming first character in a string is never $80
COMMENT $1E00 [+6]Get next character
COMMENT_LINE $1E02 one letter is drawn (one row that is) in 18 cycles
COMMENT_LINE $1E02 13 cycles overhead
COMMENT_LINE $1E02 ramp is thus active for #ofLetters*18 + 13 cycles
COMMENT $1E02 [+5]Get bitmap from chargen table
COMMENT $1E04 [+4]rasterout of char bitmap "row" thru shift out in shift register
FORCE_SYMBOL $1E04 VIA_shift_reg
COMMENT $1E06 [+6]Get next character
COMMENT $1E08 [+3]Go back if not terminator
COMMENT $1E0A is still $81 ;[4]disable RAMP, disable mux
FORCE_SYMBOL $1E0A VIA_port_b
FORCE_NO_SYMBOL $1E0C
FORCE_SYMBOL $1E0F VIA_shift_reg
COMMENT $1E11 all done, correct stack
COMMENT_LINE $1E13 bank 3 + 0
COMMENT_LINE $1E13 this must be at least as many anims as the longest ship anim!!!
COMMENT_LINE $1E13 this uses the same counter!
COMMENT $1E13 list of all single vectorlists in this
COMMENT $1E15 list of all single vectorlists in this
COMMENT $1E17 list of all single vectorlists in this
COMMENT $1E19 list of all single vectorlists in this
COMMENT $1E1B list of all single vectorlists in this
COMMENT $1E1D list of all single vectorlists in this
COMMENT $1E1F list of all single vectorlists in this
COMMENT $1E21 list of all single vectorlists in this
COMMENT $1E23 list of all single vectorlists in this
COMMENT $1E25 list of all single vectorlists in this
COMMENT $1E27 list of all single vectorlists in this
COMMENT $1E29 list of all single vectorlists in this
COMMENT_LINE $1E4C this must be at least as many anims as the longest ship anim!!!
COMMENT_LINE $1E4C this uses the same counter!
COMMENT $1E4C list of all single vectorlists in this
COMMENT $1E58 list of all single vectorlists in this
COMMENT $1F06 list of all single vectorlists in this
COMMENT $1F92 list of all single vectorlists in this
COMMENT $2056 list of all single vectorlists in this
COMMENT $211A list of all single vectorlists in this
COMMENT $2202 list of all single vectorlists in this
COMMENT $229A list of all single vectorlists in this
COMMENT $229E list of all single vectorlists in this
COMMENT $22A2 list of all single vectorlists in this
COMMENT $22A6 list of all single vectorlists in this
COMMENT $22AA list of all single vectorlists in this
COMMENT $22AE list of all single vectorlists in this
COMMENT $257E DRAW_FIGHTER_IN_BANK0 = 1
COMMENT $257E CURRENT_BANK = 0
COMMENT_LINE $257E BANK 0
COMMENT_LINE $257E all things "desktop"
COMMENT_LINE $257E desktop as in command center of Vec T Rex
COMMENT_LINE $257E "must" be included beforehand, so some
COMMENT_LINE $257E vars (pointers) are known
COMMENT_LINE $257E BANK 0
COMMENT_LINE $257E generated by vecci, but changed by hand afterwards
COMMENT_LINE $CA23 V2
COMMENT_LINE $CA23 .....................................................
COMMENT_LINE $CA5C .....................................................
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT_LINE $0000 .....................................................
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 Clear shift regigster
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT $CA5C end of game header
COMMENT_LINE $257E ***************************************************************************
COMMENT_LINE $257E CODE SECTION
COMMENT_LINE $257E ***************************************************************************
COMMENT_LINE $257E here the cartridge program starts off
COMMENT_LINE $257E JSR Wait_Recal ; Vectrex BIOS recalibration
FORCE_SYMBOL $257E sceneryLooped
FORCE_SYMBOL $2581 laneRAM
FORCE_NO_SYMBOL $2585
FORCE_SYMBOL $2589 doLane
FORCE_SYMBOL $258C laneData
COMMENT_LINE $2591 increase round counter!
FORCE_SYMBOL $2591 roundCounter
FORCE_NO_SYMBOL $2594
FORCE_SYMBOL $2596 roundCounter
COMMENT_LINE $259A V2
COMMENT_LINE $259A ***************************************************************************
COMMENT_LINE $259A in U pointer to lane RAM
COMMENT_LINE $259A in X pointer to lane Data
FORCE_SYMBOL $259A LANE_ROM_DATA
COMMENT $259D first element
FORCE_NO_SYMBOL $259D
FORCE_SYMBOL $259F LANE_CURRENT_ELEMENT
FORCE_SYMBOL $25A1 ELEMENT_BEHAVIOUR
FORCE_SYMBOL $25A4 BEHAVIOUR_ANIMATION_LOOP
FORCE_SYMBOL $25A6 LANE_ANIM_LOOP
FORCE_SYMBOL $25A8 ELEMENT_MOVE_SCALE
FORCE_SYMBOL $25AB LANE_CURRENT_MOVE_SCALE
FORCE_SYMBOL $25AD ELEMENT_ANIM_DELAY
FORCE_SYMBOL $25AF LANE_DELAY_COUNT
FORCE_SYMBOL $25B1 LANE_ANIM_COUNT
COMMENT_LINE $25B3 SCALE
FORCE_SYMBOL $25B3 ELEMENT_SCALE_FROM
FORCE_SYMBOL $25B5 LANE_CURRENT_DRAW_SCALE
FORCE_SYMBOL $25B7 ELEMENT_SCALE_DELAY
FORCE_SYMBOL $25B9 LANE_SCALE_DELAY
FORCE_SYMBOL $25BB ELEMENT_SCALE_INCREASE
FORCE_SYMBOL $25BD LANE_SCALE_INCREASE
FORCE_SYMBOL $25BF ELEMENT_SCALE_TO
FORCE_SYMBOL $25C1 LANE_SCALE_TO
COMMENT_LINE $25C3 INTENSITY
FORCE_SYMBOL $25C3 ELEMENT_INTENSITY_FROM
FORCE_SYMBOL $25C5 LANE_CURRENT_INTENSITY
FORCE_SYMBOL $25C7 ELEMENT_INTENSITY_DELAY
FORCE_SYMBOL $25C9 LANE_INTENSITY_DELAY
FORCE_SYMBOL $25CB ELEMENT_INTENSITY_INCREASE
FORCE_SYMBOL $25CD LANE_INTENSITY_INCREASE
FORCE_SYMBOL $25CF ELEMENT_INTENSITY_TO
FORCE_SYMBOL $25D1 LANE_INTENSITY_TO
COMMENT_LINE $25D3 POS
FORCE_SYMBOL $25D3 ELEMENT_POS_FROM
FORCE_SYMBOL $25D5 LANE_CURRENT_POSITION
FORCE_SYMBOL $25D7 ELEMENT_POS_DELAY
FORCE_SYMBOL $25D9 LANE_POS_DELAY
FORCE_SYMBOL $25DC ELEMENT_POS_INCREASE
FORCE_SYMBOL $25DF LANE_POS_INCREASE
FORCE_SYMBOL $25E2 ELEMENT_POS_TO
FORCE_SYMBOL $25E4 LANE_POS_TO
FORCE_SYMBOL $25E6 ELEMENT_DRAW
FORCE_SYMBOL $25E9 LANE_DRAW
FORCE_SYMBOL $25EC ELEMENT_END_COUNT
FORCE_SYMBOL $25EF LANE_ELEMENT_COUNT
COMMENT_LINE $25F3 pointer to lane RAM in Y
FORCE_SYMBOL $25F3 LANE_ROM_DATA
FORCE_SYMBOL $25F6 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $25FD LANE_CURRENT_ELEMENT
FORCE_SYMBOL $25FF stageCounter
FORCE_SYMBOL $2602 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $2604 LANE_ROM_DATA
FORCE_NO_SYMBOL $260C
FORCE_SYMBOL $260E LANE_CURRENT_ELEMENT
FORCE_SYMBOL $2610 stageCounter
FORCE_SYMBOL $2613 sceneryLooped
COMMENT $2616 wehen it should end immeadialty
COMMENT_LINE $261C pointer to lane RAM in Y
FORCE_SYMBOL $261C LANE_ROM_DATA
FORCE_SYMBOL $261F LANE_CURRENT_ELEMENT
FORCE_SYMBOL $2626 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $2628 stageCounter
FORCE_SYMBOL $262B LANE_CURRENT_ELEMENT
FORCE_SYMBOL $262D LANE_ROM_DATA
FORCE_NO_SYMBOL $2635
FORCE_SYMBOL $2637 LANE_CURRENT_ELEMENT
FORCE_SYMBOL $2639 stageCounter
FORCE_SYMBOL $263C sceneryLooped
COMMENT $263F wehen it should end immeadialty
FORCE_SYMBOL $2643 init_element
COMMENT_LINE $2646 ***************************************************************************
COMMENT_LINE $2646 pointer to lane RAM in Y
FORCE_SYMBOL $2646 LANE_ELEMENT_COUNT
COMMENT $264B dec element counter
FORCE_SYMBOL $264B LANE_ELEMENT_COUNT
FORCE_SYMBOL $2650 LANE_ROM_DATA
FORCE_SYMBOL $2653 LANE_CURRENT_ELEMENT
COMMENT_LINE $2658 in x pointer to ROM element data struct
FORCE_SYMBOL $2658 LANE_DELAY_COUNT
FORCE_SYMBOL $265C ELEMENT_ANIM_DELAY
FORCE_SYMBOL $265E LANE_DELAY_COUNT
FORCE_SYMBOL $2660 LANE_ANIM_COUNT
COMMENT $2663 current animation frame
FORCE_SYMBOL $2663 LANE_ANIM_COUNT
COMMENT $2665 times two since it is a word pointer
COMMENT $2667 address of data
FORCE_NO_SYMBOL $2667
COMMENT_LINE $266D otherwise this animation is done
COMMENT_LINE $266D check for loop - or init next lane element!
FORCE_SYMBOL $266D LANE_ANIM_LOOP
COMMENT_LINE $2671 stay at current frame
FORCE_SYMBOL $2671 LANE_ANIM_COUNT
COMMENT $2675 for now reset animation
FORCE_SYMBOL $2675 LANE_ANIM_COUNT
COMMENT_LINE $2677 todo check for "stay"continueWithElement
FORCE_SYMBOL $2677 LANE_SCALE_INCREASE
FORCE_SYMBOL $267B LANE_SCALE_DELAY
FORCE_SYMBOL $267F LANE_CURRENT_DRAW_SCALE
FORCE_SYMBOL $2681 LANE_CURRENT_DRAW_SCALE
FORCE_SYMBOL $2683 LANE_SCALE_TO
COMMENT $2687 zero means no change
FORCE_SYMBOL $2687 LANE_SCALE_INCREASE
FORCE_SYMBOL $268B ELEMENT_SCALE_DELAY
FORCE_SYMBOL $268D LANE_SCALE_DELAY
FORCE_SYMBOL $268F LANE_INTENSITY_INCREASE
FORCE_SYMBOL $2693 LANE_INTENSITY_DELAY
FORCE_SYMBOL $2697 LANE_CURRENT_INTENSITY
FORCE_SYMBOL $2699 LANE_CURRENT_INTENSITY
FORCE_SYMBOL $269B LANE_INTENSITY_TO
COMMENT $269F zero means no change
FORCE_SYMBOL $269F LANE_INTENSITY_INCREASE
FORCE_SYMBOL $26A3 ELEMENT_INTENSITY_DELAY
FORCE_SYMBOL $26A5 LANE_INTENSITY_DELAY
FORCE_SYMBOL $26A7 LANE_POS_INCREASE_X
FORCE_SYMBOL $26AC LANE_POS_DELAY_X
FORCE_SYMBOL $26B1 LANE_CURRENT_POSITION_X
FORCE_SYMBOL $26B3 LANE_CURRENT_POSITION_X
FORCE_SYMBOL $26B5 LANE_POS_X_TO
COMMENT $26BA zero means no change
FORCE_SYMBOL $26BA LANE_POS_INCREASE_X
FORCE_SYMBOL $26BF ELEMENT_POS_DELAY_X
FORCE_SYMBOL $26C2 LANE_POS_DELAY_X
FORCE_SYMBOL $26C5 LANE_POS_INCREASE_Y
FORCE_SYMBOL $26CA LANE_POS_DELAY_Y
FORCE_SYMBOL $26CF LANE_CURRENT_POSITION_Y
FORCE_SYMBOL $26D1 LANE_CURRENT_POSITION_Y
FORCE_SYMBOL $26D3 LANE_POS_Y_TO
COMMENT $26D7 zero means no change
FORCE_SYMBOL $26D7 LANE_POS_INCREASE_Y
FORCE_SYMBOL $26DC ELEMENT_POS_DELAY_Y
FORCE_SYMBOL $26DE LANE_POS_DELAY_Y
FORCE_SYMBOL $26E1 LANE_CURRENT_INTENSITY
COMMENT $26E5 Store intensity in D/A
FORCE_SYMBOL $26E5 VIA_port_a
COMMENT $26E7 mux disabled channel 2
FORCE_NO_SYMBOL $26E7
FORCE_SYMBOL $26EA VIA_port_b
COMMENT $26EC mux enabled channel 2
FORCE_SYMBOL $26EC VIA_port_b
COMMENT $26EE turn off mux
FORCE_SYMBOL $26EE VIA_port_b
COMMENT_LINE $26F0 todo = intensity - when another vlist that extended sync is done
COMMENT $26F1 current animation frame
FORCE_SYMBOL $26F1 LANE_ANIM_COUNT
COMMENT $26F3 times two since it is a word pointer
COMMENT $26F5 address of data
FORCE_NO_SYMBOL $26F5
COMMENT $26F9 current animation frame
FORCE_SYMBOL $26F9 LANE_CURRENT_POSITION
COMMENT $26FB in x position of list
COMMENT_LINE $26FD A scale positioning
COMMENT_LINE $26FD N scale move in list
FORCE_SYMBOL $26FD LANE_CURRENT_MOVE_SCALE
COMMENT $26FF Vectrex BIOS print routine
FORCE_SYMBOL $26FF LANE_DRAW
COMMENT_LINE $2703 .....................................................
COMMENT_LINE $2703 SUB_START
COMMENT_LINE $2703 SUB_END
COMMENT_LINE $2703 ########
COMMENT_LINE $2703 ########
COMMENT_LINE $2703 ########
COMMENT $2739 delay
COMMENT $273A scale from
COMMENT $273B scale to
COMMENT $273C scale delay
COMMENT $273D scale increase
COMMENT $273E intensityFrom
COMMENT $273F intensityTo
COMMENT $2740 intensityDelay
COMMENT $2741 intensityIncrease
COMMENT $2742 -80 ; position from (y,x)
COMMENT $2744 position to (y,x)
COMMENT $2746 position delay (y,x)
COMMENT $2748 position increase (y,x)
COMMENT $274A move scale
COMMENT $274B draw jsr
COMMENT $274D BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $274E element end count
COMMENT $2750 type of element
COMMENT $2753 delay
COMMENT $2754 scale from
COMMENT $2755 scale to
COMMENT $2756 scale delay
COMMENT $2757 scale increase
COMMENT $2758 intensityFrom
COMMENT $2759 intensityTo
COMMENT $275A intensityDelay
COMMENT $275B intensityIncrease
COMMENT $275C position from (y,x)
COMMENT $275E position to (y,x)
COMMENT $2760 position delay (y,x)
COMMENT $2762 position increase (y,x)
COMMENT $2764 move scale
COMMENT $2765 draw jsr
COMMENT $2767 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $2768 element end count
COMMENT $276A type of element
COMMENT $276D delay
COMMENT $276E scale from
COMMENT $276F scale to
COMMENT $2770 scale delay
COMMENT $2771 scale increase
COMMENT $2772 intensityFrom
COMMENT $2773 intensityTo
COMMENT $2774 intensityDelay
COMMENT $2775 intensityIncrease
COMMENT $2776 position from (y,x)
COMMENT $2778 position to (y,x)
COMMENT $277A position delay (y,x)
COMMENT $277C position increase (y,x)
COMMENT $277E move scale
COMMENT $277F draw pause
COMMENT $2781 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $2782 element end count
COMMENT $2784 type of element
COMMENT $2787 delay
COMMENT $2788 scale from
COMMENT $2789 scale to
COMMENT $278A scale delay
COMMENT $278B scale increase
COMMENT $278C intensityFrom
COMMENT $278D intensityTo
COMMENT $278E intensityDelay
COMMENT $278F intensityIncrease
COMMENT $2790 position from (y,x)
COMMENT $2792 position to (y,x)
COMMENT $2794 position delay (y,x)
COMMENT $2796 position increase (y,x)
COMMENT $2798 move scale
COMMENT $2799 draw jsr
COMMENT $279B BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $279C element end count
COMMENT $279E type of element
COMMENT $27A1 delay
COMMENT $27A2 scale from
COMMENT $27A3 scale to
COMMENT $27A4 scale delay
COMMENT $27A5 scale increase
COMMENT $27A6 intensityFrom
COMMENT $27A7 intensityTo
COMMENT $27A8 3 ; intensityDelay
COMMENT $27A9 intensityIncrease
COMMENT $27AA position from (y,x)
COMMENT $27AC -80 ; position to (y,x)
COMMENT $27AE position delay (y,x)
COMMENT $27B0 position increase (y,x)
COMMENT $27B2 move scale
COMMENT $27B3 draw jsr
COMMENT $27B5 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $27B6 element end count
COMMENT $27B8 type of element
COMMENT $27B9 list of all single vectorlists in this
COMMENT $27CB sync and move to y, x
COMMENT $27CE additional sync move to y, x
COMMENT $27D1 draw, y, x
COMMENT $27D4 draw, y, x
COMMENT $27D7 draw, y, x
COMMENT $27DA sync and move to y, x
COMMENT $27DD draw, y, x
COMMENT $27E0 draw, y, x
COMMENT $27E3 sync and move to y, x
COMMENT $27E6 draw, y, x
COMMENT $27E9 draw, y, x
COMMENT $27EC draw, y, x
COMMENT $27EF draw, y, x
COMMENT $27F2 draw, y, x
COMMENT $27F5 draw, y, x
COMMENT $27F8 draw, y, x
COMMENT $27FB draw, y, x
COMMENT $27FE draw, y, x
COMMENT $2801 draw, y, x
COMMENT $2804 sync and move to y, x
COMMENT $2807 draw, y, x
COMMENT $280A draw, y, x
COMMENT $280D draw, y, x
COMMENT $2810 draw, y, x
COMMENT $2813 draw, y, x
COMMENT $2816 draw, y, x
COMMENT $2819 draw, y, x
COMMENT $281C draw, y, x
COMMENT $281F draw, y, x
COMMENT $2822 draw, y, x
COMMENT $2825 sync and move to y, x
COMMENT $2828 draw, y, x
COMMENT $282B sync and move to y, x
COMMENT $282E additional sync move to y, x
COMMENT $2831 draw, y, x
COMMENT $2834 sync and move to y, x
COMMENT $2837 draw, y, x
COMMENT $283A draw, y, x
COMMENT $283D draw, y, x
COMMENT $2840 draw, y, x
COMMENT $2843 draw, y, x
COMMENT $2846 draw, y, x
COMMENT $2849 sync and move to y, x
COMMENT $284C additional sync move to y, x
COMMENT $284F draw, y, x
COMMENT $2852 draw, y, x
COMMENT $2855 endmarker
COMMENT $2856 sync and move to y, x
COMMENT $2859 draw, y, x
COMMENT $285C draw, y, x
COMMENT $285F draw, y, x
COMMENT $2862 draw, y, x
COMMENT $2865 draw, y, x
COMMENT $2868 draw, y, x
COMMENT $286B draw, y, x
COMMENT $286E draw, y, x
COMMENT $2871 draw, y, x
COMMENT $2874 draw, y, x
COMMENT $2877 sync and move to y, x
COMMENT $287A draw, y, x
COMMENT $287D draw, y, x
COMMENT $2880 draw, y, x
COMMENT $2883 draw, y, x
COMMENT $2886 draw, y, x
COMMENT $2889 draw, y, x
COMMENT $288C draw, y, x
COMMENT $288F draw, y, x
COMMENT $2892 mode, y, x
COMMENT $2895 draw, y, x
COMMENT $2898 sync and move to y, x
COMMENT $289B draw, y, x
COMMENT $289E draw, y, x
COMMENT $28A1 draw, y, x
COMMENT $28A4 draw, y, x
COMMENT $28A7 draw, y, x
COMMENT $28AA draw, y, x
COMMENT $28AD draw, y, x
COMMENT $28B0 draw, y, x
COMMENT $28B3 draw, y, x
COMMENT $28B6 draw, y, x
COMMENT $28B9 sync and move to y, x
COMMENT $28BC draw, y, x
COMMENT $28BF mode, y, x
COMMENT $28C2 draw, y, x
COMMENT $28C5 draw, y, x
COMMENT $28C8 draw, y, x
COMMENT $28CB draw, y, x
COMMENT $28CE draw, y, x
COMMENT $28D1 draw, y, x
COMMENT $28D4 mode, y, x
COMMENT $28D7 draw, y, x
COMMENT $28DA draw, y, x
COMMENT $28DD endmarker
COMMENT $28DE sync and move to y, x
COMMENT $28E1 additional sync move to y, x
COMMENT $28E4 draw, y, x
COMMENT $28E7 draw, y, x
COMMENT $28EA mode, y, x
COMMENT $28ED draw, y, x
COMMENT $28F0 draw, y, x
COMMENT $28F3 draw, y, x
COMMENT $28F6 draw, y, x
COMMENT $28F9 draw, y, x
COMMENT $28FC draw, y, x
COMMENT $28FF mode, y, x
COMMENT $2902 draw, y, x
COMMENT $2905 draw, y, x
COMMENT $2908 draw, y, x
COMMENT $290B mode, y, x
COMMENT $290E draw, y, x
COMMENT $2911 draw, y, x
COMMENT $2914 draw, y, x
COMMENT $2917 draw, y, x
COMMENT $291A draw, y, x
COMMENT $291D sync and move to y, x
COMMENT $2920 additional sync move to y, x
COMMENT $2923 draw, y, x
COMMENT $2926 draw, y, x
COMMENT $2929 draw, y, x
COMMENT $292C draw, y, x
COMMENT $292F draw, y, x
COMMENT $2932 mode, y, x
COMMENT $2935 draw, y, x
COMMENT $2938 draw, y, x
COMMENT $293B draw, y, x
COMMENT $293E draw, y, x
COMMENT $2941 sync and move to y, x
COMMENT $2944 additional sync move to y, x
COMMENT $2947 draw, y, x
COMMENT $294A draw, y, x
COMMENT $294D draw, y, x
COMMENT $2950 draw, y, x
COMMENT $2953 draw, y, x
COMMENT $2956 draw, y, x
COMMENT $2959 draw, y, x
COMMENT $295C draw, y, x
COMMENT $295F draw, y, x
COMMENT $2962 draw, y, x
COMMENT $2965 endmarker
COMMENT $2966 sync and move to y, x
COMMENT $2969 additional sync move to y, x
COMMENT $296C draw, y, x
COMMENT $296F draw, y, x
COMMENT $2972 mode, y, x
COMMENT $2975 draw, y, x
COMMENT $2978 draw, y, x
COMMENT $297B draw, y, x
COMMENT $297E draw, y, x
COMMENT $2981 draw, y, x
COMMENT $2984 draw, y, x
COMMENT $2987 mode, y, x
COMMENT $298A draw, y, x
COMMENT $298D draw, y, x
COMMENT $2990 draw, y, x
COMMENT $2993 draw, y, x
COMMENT $2996 draw, y, x
COMMENT $2999 draw, y, x
COMMENT $299C draw, y, x
COMMENT $299F draw, y, x
COMMENT $29A2 draw, y, x
COMMENT $29A5 sync and move to y, x
COMMENT $29A8 draw, y, x
COMMENT $29AB draw, y, x
COMMENT $29AE mode, y, x
COMMENT $29B1 draw, y, x
COMMENT $29B4 draw, y, x
COMMENT $29B7 draw, y, x
COMMENT $29BA draw, y, x
COMMENT $29BD draw, y, x
COMMENT $29C0 draw, y, x
COMMENT $29C3 draw, y, x
COMMENT $29C6 mode, y, x
COMMENT $29C9 draw, y, x
COMMENT $29CC draw, y, x
COMMENT $29CF draw, y, x
COMMENT $29D2 draw, y, x
COMMENT $29D5 draw, y, x
COMMENT $29D8 draw, y, x
COMMENT $29DB draw, y, x
COMMENT $29DE draw, y, x
COMMENT $29E1 endmarker
COMMENT $29E2 sync and move to y, x
COMMENT $29E5 additional sync move to y, x
COMMENT $29E8 draw, y, x
COMMENT $29EB draw, y, x
COMMENT $29EE mode, y, x
COMMENT $29F1 draw, y, x
COMMENT $29F4 draw, y, x
COMMENT $29F7 draw, y, x
COMMENT $29FA draw, y, x
COMMENT $29FD draw, y, x
COMMENT $2A00 draw, y, x
COMMENT $2A03 mode, y, x
COMMENT $2A06 draw, y, x
COMMENT $2A09 draw, y, x
COMMENT $2A0C draw, y, x
COMMENT $2A0F draw, y, x
COMMENT $2A12 draw, y, x
COMMENT $2A15 draw, y, x
COMMENT $2A18 mode, y, x
COMMENT $2A1B draw, y, x
COMMENT $2A1E draw, y, x
COMMENT $2A21 sync and move to y, x
COMMENT $2A24 draw, y, x
COMMENT $2A27 draw, y, x
COMMENT $2A2A draw, y, x
COMMENT $2A2D draw, y, x
COMMENT $2A30 draw, y, x
COMMENT $2A33 draw, y, x
COMMENT $2A36 draw, y, x
COMMENT $2A39 draw, y, x
COMMENT $2A3C draw, y, x
COMMENT $2A3F draw, y, x
COMMENT $2A42 draw, y, x
COMMENT $2A45 draw, y, x
COMMENT $2A48 mode, y, x
COMMENT $2A4B draw, y, x
COMMENT $2A4E draw, y, x
COMMENT $2A51 draw, y, x
COMMENT $2A54 mode, y, x
COMMENT $2A57 draw, y, x
COMMENT $2A5A draw, y, x
COMMENT $2A5D endmarker
COMMENT $2A5E sync and move to y, x
COMMENT $2A61 additional sync move to y, x
COMMENT $2A64 draw, y, x
COMMENT $2A67 draw, y, x
COMMENT $2A6A mode, y, x
COMMENT $2A6D draw, y, x
COMMENT $2A70 draw, y, x
COMMENT $2A73 draw, y, x
COMMENT $2A76 draw, y, x
COMMENT $2A79 draw, y, x
COMMENT $2A7C draw, y, x
COMMENT $2A7F draw, y, x
COMMENT $2A82 mode, y, x
COMMENT $2A85 draw, y, x
COMMENT $2A88 mode, y, x
COMMENT $2A8B draw, y, x
COMMENT $2A8E draw, y, x
COMMENT $2A91 draw, y, x
COMMENT $2A94 draw, y, x
COMMENT $2A97 draw, y, x
COMMENT $2A9A sync and move to y, x
COMMENT $2A9D additional sync move to y, x
COMMENT $2AA0 draw, y, x
COMMENT $2AA3 draw, y, x
COMMENT $2AA6 draw, y, x
COMMENT $2AA9 draw, y, x
COMMENT $2AAC draw, y, x
COMMENT $2AAF draw, y, x
COMMENT $2AB2 mode, y, x
COMMENT $2AB5 draw, y, x
COMMENT $2AB8 draw, y, x
COMMENT $2ABB mode, y, x
COMMENT $2ABE draw, y, x
COMMENT $2AC1 draw, y, x
COMMENT $2AC4 draw, y, x
COMMENT $2AC7 draw, y, x
COMMENT $2ACA draw, y, x
COMMENT $2ACD draw, y, x
COMMENT $2AD0 draw, y, x
COMMENT $2AD3 draw, y, x
COMMENT $2AD6 sync and move to y, x
COMMENT $2AD9 draw, y, x
COMMENT $2ADC sync and move to y, x
COMMENT $2ADF draw, y, x
COMMENT $2AE2 sync and move to y, x
COMMENT $2AE5 draw, y, x
COMMENT $2AE8 sync and move to y, x
COMMENT $2AEB draw, y, x
COMMENT $2AEE endmarker
COMMENT $2AEF sync and move to y, x
COMMENT $2AF2 additional sync move to y, x
COMMENT $2AF5 draw, y, x
COMMENT $2AF8 draw, y, x
COMMENT $2AFB mode, y, x
COMMENT $2AFE draw, y, x
COMMENT $2B01 draw, y, x
COMMENT $2B04 draw, y, x
COMMENT $2B07 draw, y, x
COMMENT $2B0A draw, y, x
COMMENT $2B0D draw, y, x
COMMENT $2B10 mode, y, x
COMMENT $2B13 draw, y, x
COMMENT $2B16 draw, y, x
COMMENT $2B19 draw, y, x
COMMENT $2B1C mode, y, x
COMMENT $2B1F draw, y, x
COMMENT $2B22 draw, y, x
COMMENT $2B25 draw, y, x
COMMENT $2B28 draw, y, x
COMMENT $2B2B sync and move to y, x
COMMENT $2B2E draw, y, x
COMMENT $2B31 draw, y, x
COMMENT $2B34 draw, y, x
COMMENT $2B37 mode, y, x
COMMENT $2B3A draw, y, x
COMMENT $2B3D draw, y, x
COMMENT $2B40 draw, y, x
COMMENT $2B43 draw, y, x
COMMENT $2B46 draw, y, x
COMMENT $2B49 draw, y, x
COMMENT $2B4C draw, y, x
COMMENT $2B4F mode, y, x
COMMENT $2B52 draw, y, x
COMMENT $2B55 draw, y, x
COMMENT $2B58 draw, y, x
COMMENT $2B5B draw, y, x
COMMENT $2B5E draw, y, x
COMMENT $2B61 draw, y, x
COMMENT $2B64 draw, y, x
COMMENT $2B67 endmarker
COMMENT $2B68 sync and move to y, x
COMMENT $2B6B draw, y, x
COMMENT $2B6E draw, y, x
COMMENT $2B71 mode, y, x
COMMENT $2B74 draw, y, x
COMMENT $2B77 draw, y, x
COMMENT $2B7A draw, y, x
COMMENT $2B7D draw, y, x
COMMENT $2B80 draw, y, x
COMMENT $2B83 draw, y, x
COMMENT $2B86 mode, y, x
COMMENT $2B89 draw, y, x
COMMENT $2B8C draw, y, x
COMMENT $2B8F draw, y, x
COMMENT $2B92 draw, y, x
COMMENT $2B95 sync and move to y, x
COMMENT $2B98 draw, y, x
COMMENT $2B9B draw, y, x
COMMENT $2B9E draw, y, x
COMMENT $2BA1 draw, y, x
COMMENT $2BA4 draw, y, x
COMMENT $2BA7 draw, y, x
COMMENT $2BAA draw, y, x
COMMENT $2BAD draw, y, x
COMMENT $2BB0 draw, y, x
COMMENT $2BB3 draw, y, x
COMMENT $2BB6 draw, y, x
COMMENT $2BB9 mode, y, x
COMMENT $2BBC draw, y, x
COMMENT $2BBF draw, y, x
COMMENT $2BC2 sync and move to y, x
COMMENT $2BC5 draw, y, x
COMMENT $2BC8 draw, y, x
COMMENT $2BCB draw, y, x
COMMENT $2BCE draw, y, x
COMMENT $2BD1 draw, y, x
COMMENT $2BD4 draw, y, x
COMMENT $2BD7 draw, y, x
COMMENT $2BDA endmarker
COMMENT $2BDB list of all single vectorlists in this
COMMENT $2BE5 sync and move to y, x
COMMENT $2BE8 additional sync move to y, x
COMMENT $2BEB draw, y, x
COMMENT $2BEE draw, y, x
COMMENT $2BF1 sync and move to y, x
COMMENT $2BF4 additional sync move to y, x
COMMENT $2BF7 draw, y, x
COMMENT $2BFA draw, y, x
COMMENT $2BFD sync and move to y, x
COMMENT $2C00 draw, y, x
COMMENT $2C03 draw, y, x
COMMENT $2C06 draw, y, x
COMMENT $2C09 draw, y, x
COMMENT $2C0C sync and move to y, x
COMMENT $2C0F draw, y, x
COMMENT $2C12 draw, y, x
COMMENT $2C15 sync and move to y, x
COMMENT $2C18 draw, y, x
COMMENT $2C1B draw, y, x
COMMENT $2C1E draw, y, x
COMMENT $2C21 draw, y, x
COMMENT $2C24 sync and move to y, x
COMMENT $2C27 additional sync move to y, x
COMMENT $2C2A draw, y, x
COMMENT $2C2D draw, y, x
COMMENT $2C30 sync and move to y, x
COMMENT $2C33 draw, y, x
COMMENT $2C36 draw, y, x
COMMENT $2C39 draw, y, x
COMMENT $2C3C sync and move to y, x
COMMENT $2C3F draw, y, x
COMMENT $2C42 draw, y, x
COMMENT $2C45 draw, y, x
COMMENT $2C48 sync and move to y, x
COMMENT $2C4B additional sync move to y, x
COMMENT $2C4E draw, y, x
COMMENT $2C51 draw, y, x
COMMENT $2C54 draw, y, x
COMMENT $2C57 draw, y, x
COMMENT $2C5A draw, y, x
COMMENT $2C5D sync and move to y, x
COMMENT $2C60 additional sync move to y, x
COMMENT $2C63 draw, y, x
COMMENT $2C66 sync and move to y, x
COMMENT $2C69 additional sync move to y, x
COMMENT $2C6C draw, y, x
COMMENT $2C6F draw, y, x
COMMENT $2C72 endmarker
COMMENT $2C73 sync and move to y, x
COMMENT $2C76 draw, y, x
COMMENT $2C79 draw, y, x
COMMENT $2C7C sync and move to y, x
COMMENT $2C7F additional sync move to y, x
COMMENT $2C82 draw, y, x
COMMENT $2C85 draw, y, x
COMMENT $2C88 draw, y, x
COMMENT $2C8B draw, y, x
COMMENT $2C8E draw, y, x
COMMENT $2C91 draw, y, x
COMMENT $2C94 draw, y, x
COMMENT $2C97 draw, y, x
COMMENT $2C9A draw, y, x
COMMENT $2C9D draw, y, x
COMMENT $2CA0 draw, y, x
COMMENT $2CA3 draw, y, x
COMMENT $2CA6 draw, y, x
COMMENT $2CA9 sync and move to y, x
COMMENT $2CAC draw, y, x
COMMENT $2CAF draw, y, x
COMMENT $2CB2 draw, y, x
COMMENT $2CB5 draw, y, x
COMMENT $2CB8 draw, y, x
COMMENT $2CBB draw, y, x
COMMENT $2CBE draw, y, x
COMMENT $2CC1 sync and move to y, x
COMMENT $2CC4 draw, y, x
COMMENT $2CC7 draw, y, x
COMMENT $2CCA draw, y, x
COMMENT $2CCD draw, y, x
COMMENT $2CD0 draw, y, x
COMMENT $2CD3 draw, y, x
COMMENT $2CD6 draw, y, x
COMMENT $2CD9 draw, y, x
COMMENT $2CDC sync and move to y, x
COMMENT $2CDF additional sync move to y, x
COMMENT $2CE2 draw, y, x
COMMENT $2CE5 draw, y, x
COMMENT $2CE8 draw, y, x
COMMENT $2CEB sync and move to y, x
COMMENT $2CEE draw, y, x
COMMENT $2CF1 endmarker
COMMENT $2CF2 sync and move to y, x
COMMENT $2CF5 additional sync move to y, x
COMMENT $2CF8 draw, y, x
COMMENT $2CFB draw, y, x
COMMENT $2CFE sync and move to y, x
COMMENT $2D01 additional sync move to y, x
COMMENT $2D04 draw, y, x
COMMENT $2D07 draw, y, x
COMMENT $2D0A draw, y, x
COMMENT $2D0D draw, y, x
COMMENT $2D10 draw, y, x
COMMENT $2D13 draw, y, x
COMMENT $2D16 sync and move to y, x
COMMENT $2D19 draw, y, x
COMMENT $2D1C draw, y, x
COMMENT $2D1F draw, y, x
COMMENT $2D22 draw, y, x
COMMENT $2D25 draw, y, x
COMMENT $2D28 draw, y, x
COMMENT $2D2B draw, y, x
COMMENT $2D2E draw, y, x
COMMENT $2D31 draw, y, x
COMMENT $2D34 draw, y, x
COMMENT $2D37 draw, y, x
COMMENT $2D3A draw, y, x
COMMENT $2D3D sync and move to y, x
COMMENT $2D40 draw, y, x
COMMENT $2D43 draw, y, x
COMMENT $2D46 draw, y, x
COMMENT $2D49 draw, y, x
COMMENT $2D4C draw, y, x
COMMENT $2D4F draw, y, x
COMMENT $2D52 draw, y, x
COMMENT $2D55 sync and move to y, x
COMMENT $2D58 additional sync move to y, x
COMMENT $2D5B draw, y, x
COMMENT $2D5E draw, y, x
COMMENT $2D61 draw, y, x
COMMENT $2D64 endmarker
COMMENT $2D65 sync and move to y, x
COMMENT $2D68 additional sync move to y, x
COMMENT $2D6B draw, y, x
COMMENT $2D6E draw, y, x
COMMENT $2D71 sync and move to y, x
COMMENT $2D74 draw, y, x
COMMENT $2D77 draw, y, x
COMMENT $2D7A draw, y, x
COMMENT $2D7D draw, y, x
COMMENT $2D80 draw, y, x
COMMENT $2D83 draw, y, x
COMMENT $2D86 sync and move to y, x
COMMENT $2D89 draw, y, x
COMMENT $2D8C draw, y, x
COMMENT $2D8F draw, y, x
COMMENT $2D92 draw, y, x
COMMENT $2D95 draw, y, x
COMMENT $2D98 draw, y, x
COMMENT $2D9B draw, y, x
COMMENT $2D9E draw, y, x
COMMENT $2DA1 draw, y, x
COMMENT $2DA4 draw, y, x
COMMENT $2DA7 draw, y, x
COMMENT $2DAA draw, y, x
COMMENT $2DAD sync and move to y, x
COMMENT $2DB0 draw, y, x
COMMENT $2DB3 draw, y, x
COMMENT $2DB6 draw, y, x
COMMENT $2DB9 draw, y, x
COMMENT $2DBC draw, y, x
COMMENT $2DBF draw, y, x
COMMENT $2DC2 draw, y, x
COMMENT $2DC5 sync and move to y, x
COMMENT $2DC8 draw, y, x
COMMENT $2DCB draw, y, x
COMMENT $2DCE draw, y, x
COMMENT $2DD1 endmarker
COMMENT $2DD4 list of all single vectorlists in this
COMMENT $2DDE sync and move to y, x
COMMENT $2DE1 additional sync move to y, x
COMMENT $2DE4 draw, y, x
COMMENT $2DE7 draw, y, x
COMMENT $2DEA sync and move to y, x
COMMENT $2DED draw, y, x
COMMENT $2DF0 draw, y, x
COMMENT $2DF3 draw, y, x
COMMENT $2DF6 draw, y, x
COMMENT $2DF9 draw, y, x
COMMENT $2DFC draw, y, x
COMMENT $2DFF sync and move to y, x
COMMENT $2E02 draw, y, x
COMMENT $2E05 draw, y, x
COMMENT $2E08 draw, y, x
COMMENT $2E0B draw, y, x
COMMENT $2E0E draw, y, x
COMMENT $2E11 draw, y, x
COMMENT $2E14 draw, y, x
COMMENT $2E17 draw, y, x
COMMENT $2E1A draw, y, x
COMMENT $2E1D draw, y, x
COMMENT $2E20 draw, y, x
COMMENT $2E23 draw, y, x
COMMENT $2E26 sync and move to y, x
COMMENT $2E29 draw, y, x
COMMENT $2E2C draw, y, x
COMMENT $2E2F draw, y, x
COMMENT $2E32 draw, y, x
COMMENT $2E35 draw, y, x
COMMENT $2E38 draw, y, x
COMMENT $2E3B draw, y, x
COMMENT $2E3E sync and move to y, x
COMMENT $2E41 draw, y, x
COMMENT $2E44 draw, y, x
COMMENT $2E47 draw, y, x
COMMENT $2E4A endmarker
COMMENT $2E4B sync and move to y, x
COMMENT $2E4E additional sync move to y, x
COMMENT $2E51 draw, y, x
COMMENT $2E54 draw, y, x
COMMENT $2E57 sync and move to y, x
COMMENT $2E5A additional sync move to y, x
COMMENT $2E5D draw, y, x
COMMENT $2E60 draw, y, x
COMMENT $2E63 draw, y, x
COMMENT $2E66 draw, y, x
COMMENT $2E69 draw, y, x
COMMENT $2E6C draw, y, x
COMMENT $2E6F sync and move to y, x
COMMENT $2E72 draw, y, x
COMMENT $2E75 draw, y, x
COMMENT $2E78 draw, y, x
COMMENT $2E7B draw, y, x
COMMENT $2E7E draw, y, x
COMMENT $2E81 draw, y, x
COMMENT $2E84 draw, y, x
COMMENT $2E87 draw, y, x
COMMENT $2E8A draw, y, x
COMMENT $2E8D draw, y, x
COMMENT $2E90 draw, y, x
COMMENT $2E93 draw, y, x
COMMENT $2E96 sync and move to y, x
COMMENT $2E99 draw, y, x
COMMENT $2E9C draw, y, x
COMMENT $2E9F draw, y, x
COMMENT $2EA2 draw, y, x
COMMENT $2EA5 draw, y, x
COMMENT $2EA8 draw, y, x
COMMENT $2EAB draw, y, x
COMMENT $2EAE sync and move to y, x
COMMENT $2EB1 additional sync move to y, x
COMMENT $2EB4 draw, y, x
COMMENT $2EB7 draw, y, x
COMMENT $2EBA draw, y, x
COMMENT $2EBD endmarker
COMMENT $2EBE sync and move to y, x
COMMENT $2EC1 draw, y, x
COMMENT $2EC4 draw, y, x
COMMENT $2EC7 sync and move to y, x
COMMENT $2ECA additional sync move to y, x
COMMENT $2ECD draw, y, x
COMMENT $2ED0 draw, y, x
COMMENT $2ED3 draw, y, x
COMMENT $2ED6 draw, y, x
COMMENT $2ED9 draw, y, x
COMMENT $2EDC draw, y, x
COMMENT $2EDF draw, y, x
COMMENT $2EE2 draw, y, x
COMMENT $2EE5 draw, y, x
COMMENT $2EE8 draw, y, x
COMMENT $2EEB draw, y, x
COMMENT $2EEE draw, y, x
COMMENT $2EF1 draw, y, x
COMMENT $2EF4 sync and move to y, x
COMMENT $2EF7 draw, y, x
COMMENT $2EFA draw, y, x
COMMENT $2EFD draw, y, x
COMMENT $2F00 draw, y, x
COMMENT $2F03 draw, y, x
COMMENT $2F06 draw, y, x
COMMENT $2F09 draw, y, x
COMMENT $2F0C sync and move to y, x
COMMENT $2F0F draw, y, x
COMMENT $2F12 draw, y, x
COMMENT $2F15 draw, y, x
COMMENT $2F18 draw, y, x
COMMENT $2F1B draw, y, x
COMMENT $2F1E draw, y, x
COMMENT $2F21 draw, y, x
COMMENT $2F24 draw, y, x
COMMENT $2F27 sync and move to y, x
COMMENT $2F2A additional sync move to y, x
COMMENT $2F2D draw, y, x
COMMENT $2F30 draw, y, x
COMMENT $2F33 draw, y, x
COMMENT $2F36 sync and move to y, x
COMMENT $2F39 draw, y, x
COMMENT $2F3C endmarker
COMMENT $2F3D sync and move to y, x
COMMENT $2F40 additional sync move to y, x
COMMENT $2F43 draw, y, x
COMMENT $2F46 draw, y, x
COMMENT $2F49 sync and move to y, x
COMMENT $2F4C additional sync move to y, x
COMMENT $2F4F draw, y, x
COMMENT $2F52 draw, y, x
COMMENT $2F55 sync and move to y, x
COMMENT $2F58 draw, y, x
COMMENT $2F5B draw, y, x
COMMENT $2F5E draw, y, x
COMMENT $2F61 draw, y, x
COMMENT $2F64 sync and move to y, x
COMMENT $2F67 draw, y, x
COMMENT $2F6A draw, y, x
COMMENT $2F6D sync and move to y, x
COMMENT $2F70 draw, y, x
COMMENT $2F73 draw, y, x
COMMENT $2F76 draw, y, x
COMMENT $2F79 draw, y, x
COMMENT $2F7C sync and move to y, x
COMMENT $2F7F additional sync move to y, x
COMMENT $2F82 draw, y, x
COMMENT $2F85 draw, y, x
COMMENT $2F88 sync and move to y, x
COMMENT $2F8B draw, y, x
COMMENT $2F8E draw, y, x
COMMENT $2F91 draw, y, x
COMMENT $2F94 sync and move to y, x
COMMENT $2F97 draw, y, x
COMMENT $2F9A draw, y, x
COMMENT $2F9D draw, y, x
COMMENT $2FA0 sync and move to y, x
COMMENT $2FA3 additional sync move to y, x
COMMENT $2FA6 draw, y, x
COMMENT $2FA9 draw, y, x
COMMENT $2FAC draw, y, x
COMMENT $2FAF draw, y, x
COMMENT $2FB2 draw, y, x
COMMENT $2FB5 sync and move to y, x
COMMENT $2FB8 additional sync move to y, x
COMMENT $2FBB draw, y, x
COMMENT $2FBE sync and move to y, x
COMMENT $2FC1 additional sync move to y, x
COMMENT $2FC4 draw, y, x
COMMENT $2FC7 draw, y, x
COMMENT $2FCA endmarker
COMMENT $2FCB list of all single vectorlists in this
COMMENT $2FDD sync and move to y, x
COMMENT $2FE0 additional sync move to y, x
COMMENT $2FE3 draw, y, x
COMMENT $2FE6 draw, y, x
COMMENT $2FE9 mode, y, x
COMMENT $2FEC draw, y, x
COMMENT $2FEF draw, y, x
COMMENT $2FF2 draw, y, x
COMMENT $2FF5 draw, y, x
COMMENT $2FF8 draw, y, x
COMMENT $2FFB draw, y, x
COMMENT $2FFE mode, y, x
COMMENT $3001 draw, y, x
COMMENT $3004 draw, y, x
COMMENT $3007 draw, y, x
COMMENT $300A draw, y, x
COMMENT $300D draw, y, x
COMMENT $3010 draw, y, x
COMMENT $3013 mode, y, x
COMMENT $3016 draw, y, x
COMMENT $3019 draw, y, x
COMMENT $301C sync and move to y, x
COMMENT $301F draw, y, x
COMMENT $3022 draw, y, x
COMMENT $3025 draw, y, x
COMMENT $3028 draw, y, x
COMMENT $302B draw, y, x
COMMENT $302E draw, y, x
COMMENT $3031 draw, y, x
COMMENT $3034 draw, y, x
COMMENT $3037 draw, y, x
COMMENT $303A draw, y, x
COMMENT $303D draw, y, x
COMMENT $3040 draw, y, x
COMMENT $3043 mode, y, x
COMMENT $3046 draw, y, x
COMMENT $3049 draw, y, x
COMMENT $304C draw, y, x
COMMENT $304F mode, y, x
COMMENT $3052 draw, y, x
COMMENT $3055 draw, y, x
COMMENT $3058 endmarker
COMMENT $3059 sync and move to y, x
COMMENT $305C additional sync move to y, x
COMMENT $305F draw, y, x
COMMENT $3062 draw, y, x
COMMENT $3065 mode, y, x
COMMENT $3068 draw, y, x
COMMENT $306B draw, y, x
COMMENT $306E draw, y, x
COMMENT $3071 draw, y, x
COMMENT $3074 draw, y, x
COMMENT $3077 draw, y, x
COMMENT $307A draw, y, x
COMMENT $307D mode, y, x
COMMENT $3080 draw, y, x
COMMENT $3083 mode, y, x
COMMENT $3086 draw, y, x
COMMENT $3089 draw, y, x
COMMENT $308C draw, y, x
COMMENT $308F draw, y, x
COMMENT $3092 draw, y, x
COMMENT $3095 sync and move to y, x
COMMENT $3098 additional sync move to y, x
COMMENT $309B draw, y, x
COMMENT $309E draw, y, x
COMMENT $30A1 draw, y, x
COMMENT $30A4 draw, y, x
COMMENT $30A7 draw, y, x
COMMENT $30AA draw, y, x
COMMENT $30AD mode, y, x
COMMENT $30B0 draw, y, x
COMMENT $30B3 draw, y, x
COMMENT $30B6 mode, y, x
COMMENT $30B9 draw, y, x
COMMENT $30BC draw, y, x
COMMENT $30BF draw, y, x
COMMENT $30C2 draw, y, x
COMMENT $30C5 draw, y, x
COMMENT $30C8 draw, y, x
COMMENT $30CB draw, y, x
COMMENT $30CE draw, y, x
COMMENT $30D1 sync and move to y, x
COMMENT $30D4 draw, y, x
COMMENT $30D7 sync and move to y, x
COMMENT $30DA draw, y, x
COMMENT $30DD sync and move to y, x
COMMENT $30E0 draw, y, x
COMMENT $30E3 sync and move to y, x
COMMENT $30E6 draw, y, x
COMMENT $30E9 endmarker
COMMENT $30EA sync and move to y, x
COMMENT $30ED additional sync move to y, x
COMMENT $30F0 draw, y, x
COMMENT $30F3 draw, y, x
COMMENT $30F6 mode, y, x
COMMENT $30F9 draw, y, x
COMMENT $30FC draw, y, x
COMMENT $30FF draw, y, x
COMMENT $3102 draw, y, x
COMMENT $3105 draw, y, x
COMMENT $3108 draw, y, x
COMMENT $310B mode, y, x
COMMENT $310E draw, y, x
COMMENT $3111 draw, y, x
COMMENT $3114 draw, y, x
COMMENT $3117 mode, y, x
COMMENT $311A draw, y, x
COMMENT $311D draw, y, x
COMMENT $3120 draw, y, x
COMMENT $3123 draw, y, x
COMMENT $3126 draw, y, x
COMMENT $3129 sync and move to y, x
COMMENT $312C draw, y, x
COMMENT $312F draw, y, x
COMMENT $3132 draw, y, x
COMMENT $3135 mode, y, x
COMMENT $3138 draw, y, x
COMMENT $313B draw, y, x
COMMENT $313E draw, y, x
COMMENT $3141 draw, y, x
COMMENT $3144 draw, y, x
COMMENT $3147 draw, y, x
COMMENT $314A sync and move to y, x
COMMENT $314D draw, y, x
COMMENT $3150 mode, y, x
COMMENT $3153 draw, y, x
COMMENT $3156 draw, y, x
COMMENT $3159 draw, y, x
COMMENT $315C draw, y, x
COMMENT $315F draw, y, x
COMMENT $3162 draw, y, x
COMMENT $3165 draw, y, x
COMMENT $3168 draw, y, x
COMMENT $316B endmarker
COMMENT $316C sync and move to y, x
COMMENT $316F draw, y, x
COMMENT $3172 draw, y, x
COMMENT $3175 mode, y, x
COMMENT $3178 draw, y, x
COMMENT $317B draw, y, x
COMMENT $317E draw, y, x
COMMENT $3181 draw, y, x
COMMENT $3184 draw, y, x
COMMENT $3187 draw, y, x
COMMENT $318A mode, y, x
COMMENT $318D draw, y, x
COMMENT $3190 draw, y, x
COMMENT $3193 draw, y, x
COMMENT $3196 draw, y, x
COMMENT $3199 draw, y, x
COMMENT $319C draw, y, x
COMMENT $319F draw, y, x
COMMENT $31A2 sync and move to y, x
COMMENT $31A5 draw, y, x
COMMENT $31A8 draw, y, x
COMMENT $31AB draw, y, x
COMMENT $31AE draw, y, x
COMMENT $31B1 draw, y, x
COMMENT $31B4 draw, y, x
COMMENT $31B7 draw, y, x
COMMENT $31BA draw, y, x
COMMENT $31BD mode, y, x
COMMENT $31C0 draw, y, x
COMMENT $31C3 draw, y, x
COMMENT $31C6 mode, y, x
COMMENT $31C9 draw, y, x
COMMENT $31CC mode, y, x
COMMENT $31CF draw, y, x
COMMENT $31D2 draw, y, x
COMMENT $31D5 draw, y, x
COMMENT $31D8 draw, y, x
COMMENT $31DB sync and move to y, x
COMMENT $31DE draw, y, x
COMMENT $31E1 sync and move to y, x
COMMENT $31E4 draw, y, x
COMMENT $31E7 sync and move to y, x
COMMENT $31EA draw, y, x
COMMENT $31ED sync and move to y, x
COMMENT $31F0 draw, y, x
COMMENT $31F3 sync and move to y, x
COMMENT $31F6 draw, y, x
COMMENT $31F9 endmarker
COMMENT $31FA sync and move to y, x
COMMENT $31FD additional sync move to y, x
COMMENT $3200 draw, y, x
COMMENT $3203 draw, y, x
COMMENT $3206 draw, y, x
COMMENT $3209 mode, y, x
COMMENT $320C draw, y, x
COMMENT $320F draw, y, x
COMMENT $3212 mode, y, x
COMMENT $3215 draw, y, x
COMMENT $3218 draw, y, x
COMMENT $321B draw, y, x
COMMENT $321E draw, y, x
COMMENT $3221 draw, y, x
COMMENT $3224 draw, y, x
COMMENT $3227 draw, y, x
COMMENT $322A draw, y, x
COMMENT $322D draw, y, x
COMMENT $3230 draw, y, x
COMMENT $3233 draw, y, x
COMMENT $3236 draw, y, x
COMMENT $3239 sync and move to y, x
COMMENT $323C draw, y, x
COMMENT $323F draw, y, x
COMMENT $3242 draw, y, x
COMMENT $3245 draw, y, x
COMMENT $3248 draw, y, x
COMMENT $324B draw, y, x
COMMENT $324E draw, y, x
COMMENT $3251 mode, y, x
COMMENT $3254 draw, y, x
COMMENT $3257 draw, y, x
COMMENT $325A draw, y, x
COMMENT $325D draw, y, x
COMMENT $3260 draw, y, x
COMMENT $3263 draw, y, x
COMMENT $3266 draw, y, x
COMMENT $3269 draw, y, x
COMMENT $326C mode, y, x
COMMENT $326F draw, y, x
COMMENT $3272 draw, y, x
COMMENT $3275 sync and move to y, x
COMMENT $3278 draw, y, x
COMMENT $327B sync and move to y, x
COMMENT $327E draw, y, x
COMMENT $3281 sync and move to y, x
COMMENT $3284 draw, y, x
COMMENT $3287 endmarker
COMMENT $3288 sync and move to y, x
COMMENT $328B draw, y, x
COMMENT $328E draw, y, x
COMMENT $3291 draw, y, x
COMMENT $3294 draw, y, x
COMMENT $3297 draw, y, x
COMMENT $329A draw, y, x
COMMENT $329D draw, y, x
COMMENT $32A0 draw, y, x
COMMENT $32A3 draw, y, x
COMMENT $32A6 draw, y, x
COMMENT $32A9 sync and move to y, x
COMMENT $32AC draw, y, x
COMMENT $32AF draw, y, x
COMMENT $32B2 draw, y, x
COMMENT $32B5 draw, y, x
COMMENT $32B8 draw, y, x
COMMENT $32BB draw, y, x
COMMENT $32BE draw, y, x
COMMENT $32C1 draw, y, x
COMMENT $32C4 mode, y, x
COMMENT $32C7 draw, y, x
COMMENT $32CA sync and move to y, x
COMMENT $32CD draw, y, x
COMMENT $32D0 draw, y, x
COMMENT $32D3 draw, y, x
COMMENT $32D6 draw, y, x
COMMENT $32D9 draw, y, x
COMMENT $32DC draw, y, x
COMMENT $32DF draw, y, x
COMMENT $32E2 draw, y, x
COMMENT $32E5 draw, y, x
COMMENT $32E8 draw, y, x
COMMENT $32EB sync and move to y, x
COMMENT $32EE draw, y, x
COMMENT $32F1 mode, y, x
COMMENT $32F4 draw, y, x
COMMENT $32F7 draw, y, x
COMMENT $32FA draw, y, x
COMMENT $32FD draw, y, x
COMMENT $3300 draw, y, x
COMMENT $3303 draw, y, x
COMMENT $3306 mode, y, x
COMMENT $3309 draw, y, x
COMMENT $330C draw, y, x
COMMENT $330F endmarker
COMMENT $3310 sync and move to y, x
COMMENT $3313 additional sync move to y, x
COMMENT $3316 draw, y, x
COMMENT $3319 draw, y, x
COMMENT $331C mode, y, x
COMMENT $331F draw, y, x
COMMENT $3322 draw, y, x
COMMENT $3325 draw, y, x
COMMENT $3328 draw, y, x
COMMENT $332B draw, y, x
COMMENT $332E draw, y, x
COMMENT $3331 mode, y, x
COMMENT $3334 draw, y, x
COMMENT $3337 draw, y, x
COMMENT $333A draw, y, x
COMMENT $333D mode, y, x
COMMENT $3340 draw, y, x
COMMENT $3343 draw, y, x
COMMENT $3346 draw, y, x
COMMENT $3349 draw, y, x
COMMENT $334C draw, y, x
COMMENT $334F sync and move to y, x
COMMENT $3352 additional sync move to y, x
COMMENT $3355 draw, y, x
COMMENT $3358 draw, y, x
COMMENT $335B draw, y, x
COMMENT $335E draw, y, x
COMMENT $3361 draw, y, x
COMMENT $3364 mode, y, x
COMMENT $3367 draw, y, x
COMMENT $336A draw, y, x
COMMENT $336D draw, y, x
COMMENT $3370 draw, y, x
COMMENT $3373 sync and move to y, x
COMMENT $3376 additional sync move to y, x
COMMENT $3379 draw, y, x
COMMENT $337C draw, y, x
COMMENT $337F draw, y, x
COMMENT $3382 draw, y, x
COMMENT $3385 draw, y, x
COMMENT $3388 draw, y, x
COMMENT $338B draw, y, x
COMMENT $338E draw, y, x
COMMENT $3391 draw, y, x
COMMENT $3394 draw, y, x
COMMENT $3397 endmarker
COMMENT $3398 sync and move to y, x
COMMENT $339B additional sync move to y, x
COMMENT $339E draw, y, x
COMMENT $33A1 draw, y, x
COMMENT $33A4 mode, y, x
COMMENT $33A7 draw, y, x
COMMENT $33AA draw, y, x
COMMENT $33AD draw, y, x
COMMENT $33B0 draw, y, x
COMMENT $33B3 draw, y, x
COMMENT $33B6 draw, y, x
COMMENT $33B9 mode, y, x
COMMENT $33BC draw, y, x
COMMENT $33BF draw, y, x
COMMENT $33C2 draw, y, x
COMMENT $33C5 draw, y, x
COMMENT $33C8 draw, y, x
COMMENT $33CB draw, y, x
COMMENT $33CE draw, y, x
COMMENT $33D1 draw, y, x
COMMENT $33D4 draw, y, x
COMMENT $33D7 sync and move to y, x
COMMENT $33DA draw, y, x
COMMENT $33DD draw, y, x
COMMENT $33E0 mode, y, x
COMMENT $33E3 draw, y, x
COMMENT $33E6 draw, y, x
COMMENT $33E9 draw, y, x
COMMENT $33EC draw, y, x
COMMENT $33EF draw, y, x
COMMENT $33F2 draw, y, x
COMMENT $33F5 draw, y, x
COMMENT $33F8 mode, y, x
COMMENT $33FB draw, y, x
COMMENT $33FE draw, y, x
COMMENT $3401 draw, y, x
COMMENT $3404 draw, y, x
COMMENT $3407 draw, y, x
COMMENT $340A draw, y, x
COMMENT $340D draw, y, x
COMMENT $3410 draw, y, x
COMMENT $3413 endmarker
COMMENT_LINE $3414 must react like a draw sync
COMMENT_LINE $3414 U = address of vectorlist
COMMENT_LINE $3414 X = (y,x) position of vectorlist (this will be point 0,0), positioning on screen
COMMENT_LINE $3414 A = scalefactor "Move" (after sync)
COMMENT_LINE $3414 B = scalefactor "Vector" (vectors in vectorlist)
COMMENT_LINE $3414 for now I assum scale == 7
COMMENT_LINE $3414 scale = gamescale
FORCE_SYMBOL $3414 gameScale
FORCE_SYMBOL $3417 VIA_t1_cnt_lo
FORCE_SYMBOL $3419 calibrationZero7
COMMENT $341E Store Y in D/A register
FORCE_SYMBOL $341E VIA_port_a
COMMENT $3420 Blank low, zero high?
FORCE_NO_SYMBOL $3420
FORCE_SYMBOL $3422 VIA_cntl
COMMENT $3425 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3425 VIA_port_b
COMMENT_LINE $3428 nop
COMMENT $3428 Disable mux
FORCE_SYMBOL $3428 VIA_port_b
COMMENT $342A Store X in D/A register
FORCE_SYMBOL $342A VIA_port_a
COMMENT $342C enable timer
FORCE_SYMBOL $342C VIA_t1_cnt_hi
FORCE_NO_SYMBOL $342E
FORCE_SYMBOL $3430 VIA_t1_cnt_lo
COMMENT $3432 SMVBdrawSmart70
FORCE_NO_SYMBOL $3432
FORCE_NO_SYMBOL $3435
FORCE_SYMBOL $3437 VIA_int_flags
FORCE_SYMBOL $343B jsrBank2_fromShift_0
COMMENT $3440 delay
COMMENT $3441 scale from
COMMENT $3442 scale to
COMMENT $3443 scale delay
COMMENT $3444 scale increase
COMMENT $3445 intensityFrom
COMMENT $3446 intensityTo
COMMENT $3447 intensityDelay
COMMENT $3448 intensityIncrease
COMMENT $3449 position from (y,x)
COMMENT $344B position to (y,x)
COMMENT $344D position delay (y,x)
COMMENT $344F position increase (y,x)
COMMENT $3451 move scale
COMMENT $3452 draw jsr
COMMENT $3454 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3455 element end count
COMMENT $3457 type of element
COMMENT $345A delay
COMMENT $345B scale from
COMMENT $345C scale to
COMMENT $345D scale delay
COMMENT $345E scale increase
COMMENT $345F intensityFrom
COMMENT $3460 intensityTo
COMMENT $3461 intensityDelay
COMMENT $3462 intensityIncrease
COMMENT $3463 position from (y,x)
COMMENT $3465 position to (y,x)
COMMENT $3467 position delay (y,x)
COMMENT $3469 position increase (y,x)
COMMENT $346B move scale
COMMENT $346C draw jsr
COMMENT $346E BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $346F element end count
COMMENT $3471 type of element
COMMENT $3474 delay
COMMENT $3475 scale from
COMMENT $3476 scale to
COMMENT $3477 scale delay
COMMENT $3478 scale increase
COMMENT $3479 intensityFrom
COMMENT $347A intensityTo
COMMENT $347B intensityDelay
COMMENT $347C intensityIncrease
COMMENT $347D position from (y,x)
COMMENT $347F position to (y,x)
COMMENT $3481 position delay (y,x)
COMMENT $3483 position increase (y,x)
COMMENT $3485 move scale
COMMENT $3486 draw jsr
COMMENT $3488 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3489 element end count
COMMENT $348B type of element
COMMENT $348E delay
COMMENT $348F scale from
COMMENT $3490 scale to
COMMENT $3491 scale delay
COMMENT $3492 scale increase
COMMENT $3493 intensityFrom
COMMENT $3494 intensityTo
COMMENT $3495 intensityDelay
COMMENT $3496 intensityIncrease
COMMENT $3497 position from (y,x)
COMMENT $3499 position to (y,x)
COMMENT $349B position delay (y,x)
COMMENT $349D position increase (y,x)
COMMENT $349F move scale
COMMENT $34A0 draw jsr
COMMENT $34A2 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $34A3 element end count
COMMENT $34A5 type of element
COMMENT $34A8 delay
COMMENT $34A9 scale from
COMMENT $34AA scale to
COMMENT $34AB scale delay
COMMENT $34AC scale increase
COMMENT $34AD intensityFrom
COMMENT $34AE intensityTo
COMMENT $34AF intensityDelay
COMMENT $34B0 intensityIncrease
COMMENT $34B1 position from (y,x)
COMMENT $34B3 position to (y,x)
COMMENT $34B5 position delay (y,x)
COMMENT $34B7 position increase (y,x)
COMMENT $34B9 move scale
COMMENT $34BA draw jsr
COMMENT $34BC BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $34BD element end count
COMMENT $34BF type of element
COMMENT $34C2 delay
COMMENT $34C3 scale from
COMMENT $34C4 scale to
COMMENT $34C5 scale delay
COMMENT $34C6 scale increase
COMMENT $34C7 intensityFrom
COMMENT $34C8 intensityTo
COMMENT $34C9 intensityDelay
COMMENT $34CA intensityIncrease
COMMENT $34CB position from (y,x)
COMMENT $34CD position to (y,x)
COMMENT $34CF position delay (y,x)
COMMENT $34D1 position increase (y,x)
COMMENT $34D3 move scale
COMMENT $34D4 draw jsr
COMMENT $34D6 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $34D7 element end count
COMMENT $34D9 type of element
COMMENT $34DC delay
COMMENT $34DD scale from
COMMENT $34DE scale to
COMMENT $34DF scale delay
COMMENT $34E0 scale increase
COMMENT $34E1 intensityFrom
COMMENT $34E2 intensityTo
COMMENT $34E3 intensityDelay
COMMENT $34E4 intensityIncrease
COMMENT $34E5 position from (y,x)
COMMENT $34E7 position to (y,x)
COMMENT $34E9 position delay (y,x)
COMMENT $34EB position increase (y,x)
COMMENT $34ED move scale
COMMENT $34EE draw jsr
COMMENT $34F0 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $34F1 element end count
COMMENT $34F3 type of element
COMMENT $34F6 delay
COMMENT $34F7 scale from
COMMENT $34F8 scale to
COMMENT $34F9 scale delay
COMMENT $34FA scale increase
COMMENT $34FB intensityFrom
COMMENT $34FC intensityTo
COMMENT $34FD intensityDelay
COMMENT $34FE intensityIncrease
COMMENT $34FF position from (y,x)
COMMENT $3501 position to (y,x)
COMMENT $3503 position delay (y,x)
COMMENT $3505 position increase (y,x)
COMMENT $3507 move scale
COMMENT $3508 draw jsr
COMMENT $350A BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $350B element end count
COMMENT $350D type of element
COMMENT $3510 delay
COMMENT $3511 scale from
COMMENT $3512 scale to
COMMENT $3513 scale delay
COMMENT $3514 scale increase
COMMENT $3515 intensityFrom
COMMENT $3516 intensityTo
COMMENT $3517 intensityDelay
COMMENT $3518 intensityIncrease
COMMENT $3519 position from (y,x)
COMMENT $351B position to (y,x)
COMMENT $351D position delay (y,x)
COMMENT $351F position increase (y,x)
COMMENT $3521 move scale
COMMENT $3522 draw jsr
COMMENT $3524 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3525 element end count
COMMENT $3527 type of element
COMMENT $352A delay
COMMENT $352B scale from
COMMENT $352C scale to
COMMENT $352D scale delay
COMMENT $352E scale increase
COMMENT $352F intensityFrom
COMMENT $3530 intensityTo
COMMENT $3531 intensityDelay
COMMENT $3532 intensityIncrease
COMMENT $3533 position from (y,x)
COMMENT $3535 position to (y,x)
COMMENT $3537 position delay (y,x)
COMMENT $3539 position increase (y,x)
COMMENT $353B move scale
COMMENT $353C draw jsr
COMMENT $353E BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $353F element end count
COMMENT $3541 type of element
COMMENT $3544 delay
COMMENT $3545 scale from
COMMENT $3546 scale to
COMMENT $3547 scale delay
COMMENT $3548 scale increase
COMMENT $3549 intensityFrom
COMMENT $354A intensityTo
COMMENT $354B intensityDelay
COMMENT $354C intensityIncrease
COMMENT $354D position from (y,x)
COMMENT $354F position to (y,x)
COMMENT $3551 position delay (y,x)
COMMENT $3553 position increase (y,x)
COMMENT $3555 move scale
COMMENT $3556 draw jsr
COMMENT $3558 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3559 element end count
COMMENT $355B type of element
COMMENT $355E delay
COMMENT $355F scale from
COMMENT $3560 scale to
COMMENT $3561 scale delay
COMMENT $3562 scale increase
COMMENT $3563 intensityFrom
COMMENT $3564 intensityTo
COMMENT $3565 intensityDelay
COMMENT $3566 intensityIncrease
COMMENT $3567 position from (y,x)
COMMENT $3569 position to (y,x)
COMMENT $356B position delay (y,x)
COMMENT $356D position increase (y,x)
COMMENT $356F move scale
COMMENT $3570 draw jsr
COMMENT $3572 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3573 element end count
COMMENT $3575 type of element
COMMENT $3578 delay
COMMENT $3579 scale from
COMMENT $357A scale to
COMMENT $357B scale delay
COMMENT $357C scale increase
COMMENT $357D intensityFrom
COMMENT $357E intensityTo
COMMENT $357F intensityDelay
COMMENT $3580 intensityIncrease
COMMENT $3581 position from (y,x)
COMMENT $3583 position to (y,x)
COMMENT $3585 position delay (y,x)
COMMENT $3587 position increase (y,x)
COMMENT $3589 move scale
COMMENT $358A draw jsr
COMMENT $358C BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $358D element end count
COMMENT $358F type of element
COMMENT $3592 delay
COMMENT $3593 scale from
COMMENT $3594 scale to
COMMENT $3595 scale delay
COMMENT $3596 scale increase
COMMENT $3597 intensityFrom
COMMENT $3598 intensityTo
COMMENT $3599 intensityDelay
COMMENT $359A intensityIncrease
COMMENT $359B position from (y,x)
COMMENT $359D position to (y,x)
COMMENT $359F position delay (y,x)
COMMENT $35A1 position increase (y,x)
COMMENT $35A3 move scale
COMMENT $35A4 draw jsr
COMMENT $35A6 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $35A7 element end count
COMMENT $35A9 type of element
COMMENT $35AC delay
COMMENT $35AD scale from
COMMENT $35AE scale to
COMMENT $35AF scale delay
COMMENT $35B0 scale increase
COMMENT $35B1 intensityFrom
COMMENT $35B2 intensityTo
COMMENT $35B3 intensityDelay
COMMENT $35B4 intensityIncrease
COMMENT $35B5 position from (y,x)
COMMENT $35B7 position to (y,x)
COMMENT $35B9 position delay (y,x)
COMMENT $35BB position increase (y,x)
COMMENT $35BD move scale
COMMENT $35BE draw jsr
COMMENT $35C0 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $35C1 element end count
COMMENT $35C3 type of element
COMMENT $35C6 delay
COMMENT $35C7 scale from
COMMENT $35C8 scale to
COMMENT $35C9 scale delay
COMMENT $35CA scale increase
COMMENT $35CB intensityFrom
COMMENT $35CC intensityTo
COMMENT $35CD intensityDelay
COMMENT $35CE intensityIncrease
COMMENT $35CF position from (y,x)
COMMENT $35D1 position to (y,x)
COMMENT $35D3 position delay (y,x)
COMMENT $35D5 position increase (y,x)
COMMENT $35D7 move scale
COMMENT $35D8 draw jsr
COMMENT $35DA BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $35DB element end count
COMMENT $35DD type of element
COMMENT $35E0 delay
COMMENT $35E1 scale from
COMMENT $35E2 scale to
COMMENT $35E3 scale delay
COMMENT $35E4 scale increase
COMMENT $35E5 intensityFrom
COMMENT $35E6 intensityTo
COMMENT $35E7 intensityDelay
COMMENT $35E8 intensityIncrease
COMMENT $35E9 position from (y,x)
COMMENT $35EB position to (y,x)
COMMENT $35ED position delay (y,x)
COMMENT $35EF position increase (y,x)
COMMENT $35F1 move scale
COMMENT $35F2 draw jsr
COMMENT $35F4 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $35F5 element end count
COMMENT $35F7 type of element
COMMENT $35FA delay
COMMENT $35FB scale from
COMMENT $35FC scale to
COMMENT $35FD scale delay
COMMENT $35FE scale increase
COMMENT $35FF intensityFrom
COMMENT $3600 intensityTo
COMMENT $3601 intensityDelay
COMMENT $3602 intensityIncrease
COMMENT $3603 position from (y,x)
COMMENT $3605 position to (y,x)
COMMENT $3607 position delay (y,x)
COMMENT $3609 position increase (y,x)
COMMENT $360B move scale
COMMENT $360C draw jsr
COMMENT $360E BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $360F element end count
COMMENT $3611 type of element
COMMENT $3614 delay
COMMENT $3615 scale from
COMMENT $3616 scale to
COMMENT $3617 scale delay
COMMENT $3618 scale increase
COMMENT $3619 intensityFrom
COMMENT $361A intensityTo
COMMENT $361B intensityDelay
COMMENT $361C intensityIncrease
COMMENT $361D position from (y,x)
COMMENT $361F position to (y,x)
COMMENT $3621 position delay (y,x)
COMMENT $3623 position increase (y,x)
COMMENT $3625 move scale
COMMENT $3626 draw jsr
COMMENT $3628 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3629 element end count
COMMENT $362B type of element
COMMENT $362E delay
COMMENT $362F scale from
COMMENT $3630 scale to
COMMENT $3631 scale delay
COMMENT $3632 scale increase
COMMENT $3633 intensityFrom
COMMENT $3634 intensityTo
COMMENT $3635 intensityDelay
COMMENT $3636 intensityIncrease
COMMENT $3637 position from (y,x)
COMMENT $3639 position to (y,x)
COMMENT $363B position delay (y,x)
COMMENT $363D position increase (y,x)
COMMENT $363F move scale
COMMENT $3640 draw jsr
COMMENT $3642 BEHAVIOUR_PAUSE / BEHAVIOUR_ANIMATION_LOOP
COMMENT $3643 element end count
COMMENT $3645 type of element
COMMENT $36AC MalusSpeed0
COMMENT $36F0 BonusSlowerShot0
COMMENT_LINE $38EE some variable in RAM
COMMENT_LINE $38EE .....................................................................
COMMENT_LINE $38EE first time on desktop
COMMENT_LINE $38EE init all
FORCE_SYMBOL $38EE introStage
FORCE_SYMBOL $38F1 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $38F3 desktop_flags
FORCE_SYMBOL $38F6 iconIntensity
FORCE_NO_SYMBOL $38F9
FORCE_SYMBOL $38FB screenIntensity
FORCE_NO_SYMBOL $38FE
FORCE_SYMBOL $3901 titleRoundCounter
COMMENT_LINE $3905 .....................................................................
COMMENT_LINE $3905 init for "storyboard player"
FORCE_SYMBOL $3905 screenSize
FORCE_SYMBOL $3908 interStageCounter
FORCE_SYMBOL $390E laneData
FORCE_SYMBOL $3911 lane1Data
FORCE_SYMBOL $3914 initLane
FORCE_NO_SYMBOL $3917
FORCE_SYMBOL $391A stageCounter
FORCE_SYMBOL $391D roundCounter
FORCE_SYMBOL $3920 laneData
FORCE_NO_SYMBOL $3923
COMMENT_LINE $3926 .....................................................................
COMMENT_LINE $3926 this is called from the "title" loop
COMMENT_LINE $3926 and does one step of desktop "animation"
COMMENT_LINE $3926 .....................................................................
COMMENT_LINE $3926 ...................
COMMENT_LINE $3926 get current joystick position and remember it
FORCE_SYMBOL $3926 joystickDir
FORCE_SYMBOL $3929 queryJoystick
FORCE_SYMBOL $392C Vec_Joy_1_X
FORCE_SYMBOL $3933 RIGHT
FORCE_SYMBOL $3935 joystickDir
FORCE_SYMBOL $393A LEFT
FORCE_SYMBOL $393C joystickDir
FORCE_SYMBOL $3941 Vec_Joy_1_Y
FORCE_SYMBOL $3948 UP
FORCE_SYMBOL $394A joystickDir
FORCE_SYMBOL $394F DOWN
FORCE_SYMBOL $3951 joystickDir
COMMENT_LINE $3954 ...................
COMMENT_LINE $3954 draw command center
COMMENT_LINE $3954 screen is drawn "dim" from start - but gets brighter when swiched on
FORCE_SYMBOL $3954 screenIntensity
COMMENT $3957 Intensity_a
COMMENT $3957 Store intensity in D/A
FORCE_SYMBOL $3957 VIA_port_a
COMMENT $3959 mux disabled channel 2
FORCE_NO_SYMBOL $3959
FORCE_SYMBOL $395C VIA_port_b
COMMENT $395E mux enabled channel 2
FORCE_SYMBOL $395E VIA_port_b
COMMENT $3960 turn off mux
FORCE_SYMBOL $3960 VIA_port_b
FORCE_SYMBOL $3962 gameScale
FORCE_SYMBOL $3965 VIA_t1_cnt_lo
COMMENT $3967 screen
FORCE_SYMBOL $3967 CommandCenter_0
FORCE_SYMBOL $396A draw_synced_list_fromzero__noshift
FORCE_SYMBOL $396D iconIntensity
FORCE_SYMBOL $3970 joystickDir
FORCE_SYMBOL $3973 RIGHT
FORCE_NO_SYMBOL $3977
COMMENT $3979 Store intensity in D/A
FORCE_SYMBOL $3979 VIA_port_a
COMMENT $397B mux disabled channel 2
FORCE_NO_SYMBOL $397B
FORCE_SYMBOL $397E VIA_port_b
COMMENT $3980 mux enabled channel 2
FORCE_SYMBOL $3980 VIA_port_b
COMMENT $3982 turn off mux
FORCE_SYMBOL $3982 VIA_port_b
COMMENT $3984 arrow right
FORCE_SYMBOL $3984 CommandCenter_1
FORCE_SYMBOL $3987 draw_synced_list_fromzero__noshift
FORCE_SYMBOL $398A iconIntensity
FORCE_SYMBOL $398D joystickDir
FORCE_SYMBOL $3990 UP
FORCE_NO_SYMBOL $3994
COMMENT $3996 Store intensity in D/A
FORCE_SYMBOL $3996 VIA_port_a
COMMENT $3998 mux disabled channel 2
FORCE_NO_SYMBOL $3998
FORCE_SYMBOL $399B VIA_port_b
COMMENT $399D mux enabled channel 2
FORCE_SYMBOL $399D VIA_port_b
COMMENT $399F turn off mux
FORCE_SYMBOL $399F VIA_port_b
COMMENT $39A1 arrow
FORCE_SYMBOL $39A1 CommandCenter_2
FORCE_SYMBOL $39A4 draw_synced_list_fromzero__noshift
FORCE_SYMBOL $39A7 iconIntensity
FORCE_SYMBOL $39AA joystickDir
FORCE_SYMBOL $39AD LEFT
FORCE_NO_SYMBOL $39B1
COMMENT $39B3 Store intensity in D/A
FORCE_SYMBOL $39B3 VIA_port_a
COMMENT $39B5 mux disabled channel 2
FORCE_NO_SYMBOL $39B5
FORCE_SYMBOL $39B8 VIA_port_b
COMMENT $39BA mux enabled channel 2
FORCE_SYMBOL $39BA VIA_port_b
COMMENT $39BC turn off mux
FORCE_SYMBOL $39BC VIA_port_b
COMMENT $39BE arrow left
FORCE_SYMBOL $39BE CommandCenter_3
FORCE_SYMBOL $39C1 draw_synced_list_fromzero__noshift
FORCE_SYMBOL $39C4 iconIntensity
FORCE_SYMBOL $39C7 joystickDir
FORCE_SYMBOL $39CA DOWN
FORCE_NO_SYMBOL $39CE
COMMENT_LINE $39D0 ...................
COMMENT_LINE $39D0 draw icons
COMMENT $39D0 Store intensity in D/A
FORCE_SYMBOL $39D0 VIA_port_a
COMMENT $39D2 mux disabled channel 2
FORCE_NO_SYMBOL $39D2
FORCE_SYMBOL $39D5 VIA_port_b
COMMENT $39D7 mux enabled channel 2
FORCE_SYMBOL $39D7 VIA_port_b
COMMENT $39D9 turn off mux
FORCE_SYMBOL $39D9 VIA_port_b
COMMENT $39DB arrow
FORCE_SYMBOL $39DB CommandCenter_4
FORCE_SYMBOL $39DE draw_synced_list_fromzero__noshift
COMMENT_LINE $39E1 calibration for smart lists
FORCE_SYMBOL $39E1 calibrationZero7
FORCE_SYMBOL $39E4 iconIntensity
FORCE_SYMBOL $39E7 joystickDir
FORCE_SYMBOL $39EA DOWN
FORCE_NO_SYMBOL $39EE
COMMENT $39F0 Store intensity in D/A
FORCE_SYMBOL $39F0 VIA_port_a
COMMENT $39F2 mux disabled channel 2
FORCE_NO_SYMBOL $39F2
FORCE_SYMBOL $39F5 VIA_port_b
COMMENT $39F7 mux enabled channel 2
FORCE_SYMBOL $39F7 VIA_port_b
COMMENT $39F9 turn off mux
FORCE_SYMBOL $39F9 VIA_port_b
COMMENT_LINE $39FB draw high score stairs
FORCE_NO_SYMBOL $39FB
COMMENT $39FE Store Y in D/A register
FORCE_SYMBOL $39FE VIA_port_a
COMMENT $3A00 Blank low, zero high?
FORCE_NO_SYMBOL $3A00
FORCE_SYMBOL $3A02 VIA_cntl
COMMENT $3A05 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3A05 VIA_port_b
COMMENT_LINE $3A08 nop
COMMENT $3A08 Disable mux
FORCE_SYMBOL $3A08 VIA_port_b
COMMENT $3A0A Store X in D/A register
FORCE_SYMBOL $3A0A VIA_port_a
COMMENT $3A0C enable timer
FORCE_SYMBOL $3A0C VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3A0E
FORCE_SYMBOL $3A10 VIA_t1_cnt_lo
FORCE_SYMBOL $3A12 HSStairs
FORCE_NO_SYMBOL $3A15
FORCE_SYMBOL $3A17 VIA_int_flags
FORCE_SYMBOL $3A1B SMVB_drawSmart
COMMENT_LINE $3A1E draw high fighter (anim)
FORCE_SYMBOL $3A1E iconIntensity
FORCE_SYMBOL $3A21 joystickDir
FORCE_SYMBOL $3A24 UP
FORCE_NO_SYMBOL $3A28
COMMENT $3A2A Store intensity in D/A
FORCE_SYMBOL $3A2A VIA_port_a
COMMENT $3A2C mux disabled channel 2
FORCE_NO_SYMBOL $3A2C
FORCE_SYMBOL $3A2F VIA_port_b
COMMENT $3A31 mux enabled channel 2
FORCE_SYMBOL $3A31 VIA_port_b
COMMENT $3A33 turn off mux
FORCE_SYMBOL $3A33 VIA_port_b
FORCE_NO_SYMBOL $3A35
COMMENT $3A38 Store Y in D/A register
FORCE_SYMBOL $3A38 VIA_port_a
COMMENT $3A3A Blank low, zero high?
FORCE_NO_SYMBOL $3A3A
FORCE_SYMBOL $3A3C VIA_cntl
COMMENT $3A3F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3A3F VIA_port_b
COMMENT_LINE $3A42 nop
COMMENT $3A42 Disable mux
FORCE_SYMBOL $3A42 VIA_port_b
COMMENT $3A44 Store X in D/A register
FORCE_SYMBOL $3A44 VIA_port_a
COMMENT $3A46 enable timer
FORCE_SYMBOL $3A46 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3A48
FORCE_SYMBOL $3A4A VIA_t1_cnt_lo
FORCE_SYMBOL $3A4D SM_Fighter_Anim
FORCE_NO_SYMBOL $3A53
FORCE_NO_SYMBOL $3A57
FORCE_NO_SYMBOL $3A5B
FORCE_SYMBOL $3A5D VIA_int_flags
FORCE_SYMBOL $3A61 SMVB_drawSmart
FORCE_NO_SYMBOL $3A64
COMMENT $3A66 /BLANK low and /ZERO low
FORCE_SYMBOL $3A66 VIA_cntl
COMMENT_LINE $3A68 jsr calibrationZero7
FORCE_SYMBOL $3A68 gameScale
FORCE_SYMBOL $3A6B VIA_t1_cnt_lo
COMMENT_LINE $3A6D draw tools (options)
FORCE_SYMBOL $3A6D iconIntensity
FORCE_SYMBOL $3A70 joystickDir
FORCE_SYMBOL $3A73 RIGHT
FORCE_NO_SYMBOL $3A77
COMMENT $3A79 Store intensity in D/A
FORCE_SYMBOL $3A79 VIA_port_a
COMMENT $3A7B mux disabled channel 2
FORCE_NO_SYMBOL $3A7B
FORCE_SYMBOL $3A7E VIA_port_b
COMMENT $3A80 mux enabled channel 2
FORCE_SYMBOL $3A80 VIA_port_b
COMMENT $3A82 turn off mux
FORCE_SYMBOL $3A82 VIA_port_b
FORCE_NO_SYMBOL $3A84
COMMENT $3A87 Store Y in D/A register
FORCE_SYMBOL $3A87 VIA_port_a
COMMENT $3A89 Blank low, zero high?
FORCE_NO_SYMBOL $3A89
FORCE_SYMBOL $3A8B VIA_cntl
COMMENT $3A8E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3A8E VIA_port_b
COMMENT_LINE $3A91 nop
COMMENT $3A91 Disable mux
FORCE_SYMBOL $3A91 VIA_port_b
COMMENT $3A93 Store X in D/A register
FORCE_SYMBOL $3A93 VIA_port_a
COMMENT $3A95 enable timer
FORCE_SYMBOL $3A95 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3A97
FORCE_SYMBOL $3A99 VIA_t1_cnt_lo
FORCE_SYMBOL $3A9B HSOptions
FORCE_NO_SYMBOL $3A9E
FORCE_SYMBOL $3AA0 VIA_int_flags
FORCE_SYMBOL $3AA4 SMVB_drawSmart
COMMENT_LINE $3AA7 jsr calibrationZero7
COMMENT_LINE $3AA7 draw scroll (achievements)
FORCE_SYMBOL $3AA7 iconIntensity
FORCE_SYMBOL $3AAA joystickDir
FORCE_SYMBOL $3AAD LEFT
FORCE_NO_SYMBOL $3AB1
COMMENT $3AB3 Store intensity in D/A
FORCE_SYMBOL $3AB3 VIA_port_a
COMMENT $3AB5 mux disabled channel 2
FORCE_NO_SYMBOL $3AB5
FORCE_SYMBOL $3AB8 VIA_port_b
COMMENT $3ABA mux enabled channel 2
FORCE_SYMBOL $3ABA VIA_port_b
COMMENT $3ABC turn off mux
FORCE_SYMBOL $3ABC VIA_port_b
FORCE_NO_SYMBOL $3ABE
COMMENT $3AC1 Store Y in D/A register
FORCE_SYMBOL $3AC1 VIA_port_a
COMMENT $3AC3 Blank low, zero high?
FORCE_NO_SYMBOL $3AC3
FORCE_SYMBOL $3AC5 VIA_cntl
COMMENT $3AC8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3AC8 VIA_port_b
COMMENT_LINE $3ACB nop
COMMENT $3ACB Disable mux
FORCE_SYMBOL $3ACB VIA_port_b
COMMENT $3ACD Store X in D/A register
FORCE_SYMBOL $3ACD VIA_port_a
COMMENT $3ACF enable timer
FORCE_SYMBOL $3ACF VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3AD1
FORCE_SYMBOL $3AD3 VIA_t1_cnt_lo
FORCE_SYMBOL $3AD5 HSAchievements
FORCE_NO_SYMBOL $3AD8
FORCE_SYMBOL $3ADA VIA_int_flags
FORCE_SYMBOL $3ADE SMVB_drawSmart
COMMENT_LINE $3AE1 draw console - always
FORCE_NO_SYMBOL $3AE1
FORCE_SYMBOL $3AE3 desktop_flags
FORCE_SYMBOL $3AE6 TITLE_DESKTOP_LIT
FORCE_NO_SYMBOL $3AEA
FORCE_SYMBOL $3AEC Intensity_a
COMMENT $3AF2 Store Y in D/A register
FORCE_SYMBOL $3AF2 VIA_port_a
COMMENT $3AF4 Blank low, zero high?
FORCE_NO_SYMBOL $3AF4
FORCE_SYMBOL $3AF6 VIA_cntl
COMMENT $3AF9 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3AF9 VIA_port_b
COMMENT_LINE $3AFC nop
COMMENT $3AFC Disable mux
FORCE_SYMBOL $3AFC VIA_port_b
COMMENT $3AFE Store X in D/A register
FORCE_SYMBOL $3AFE VIA_port_a
COMMENT $3B00 enable timer
FORCE_SYMBOL $3B00 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3B02
FORCE_SYMBOL $3B04 VIA_t1_cnt_lo
FORCE_SYMBOL $3B06 HSConsole
FORCE_NO_SYMBOL $3B09
FORCE_SYMBOL $3B0B VIA_int_flags
FORCE_SYMBOL $3B0F SMVB_drawSmart
FORCE_SYMBOL $3B12 desktop_flags
FORCE_SYMBOL $3B15 TITLE_DISPLAY_MAN
COMMENT_LINE $3B19 jsr calibrationZero7
FORCE_NO_SYMBOL $3B19
FORCE_SYMBOL $3B1B VIA_t1_cnt_lo
FORCE_NO_SYMBOL $3B1F
COMMENT $3B21 Store Y in D/A register
FORCE_SYMBOL $3B21 VIA_port_a
COMMENT $3B23 Blank low, zero high?
FORCE_NO_SYMBOL $3B23
FORCE_SYMBOL $3B25 VIA_cntl
COMMENT $3B28 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3B28 VIA_port_b
COMMENT_LINE $3B2B nop
COMMENT $3B2B Disable mux
FORCE_SYMBOL $3B2B VIA_port_b
COMMENT $3B2D Store X in D/A register
FORCE_SYMBOL $3B2D VIA_port_a
COMMENT $3B2F enable timer
FORCE_SYMBOL $3B2F VIA_t1_cnt_hi
COMMENT $3B31 9
FORCE_NO_SYMBOL $3B31
FORCE_SYMBOL $3B33 VIA_t1_cnt_lo
FORCE_SYMBOL $3B35 HSMJStandingBack
FORCE_NO_SYMBOL $3B38
FORCE_SYMBOL $3B3A VIA_int_flags
FORCE_SYMBOL $3B3E SMVB_drawSmart
FORCE_SYMBOL $3B41 Reset_Pen
COMMENT_LINE $3B44 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3B44 now different "stages" of the desktop will be done
COMMENT_LINE $3B44 as of now x stages ...
COMMENT_LINE $3B44 0 scroll text
COMMENT_LINE $3B44 1 intro do enemies
COMMENT_LINE $3B44 2 particles
COMMENT_LINE $3B44 if more are to come, than I will do a proper "switch case"
FORCE_SYMBOL $3B44 stagesPointer
FORCE_SYMBOL $3B47 introStage
FORCE_SYMBOL $3B4F introStage
FORCE_SYMBOL $3B52 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3B54 desktop_flags
FORCE_NO_SYMBOL $3B59
COMMENT_LINE $3B5B .....................................................
COMMENT_LINE $3B6D .....................................................
FORCE_NO_SYMBOL $3B6D
FORCE_SYMBOL $3B70 titleRoundCounter
FORCE_SYMBOL $3B73 desktop_flags
FORCE_SYMBOL $3B78 desktop_flags
COMMENT_LINE $3B7C .....................................................
FORCE_SYMBOL $3B7C desktop_flags
FORCE_SYMBOL $3B83 titleRoundCounter
FORCE_NO_SYMBOL $3B86
FORCE_SYMBOL $3B89 titleRoundCounter
COMMENT $3B8C 2 seconds
FORCE_NO_SYMBOL $3B8C
FORCE_SYMBOL $3B92 introStage
FORCE_SYMBOL $3B95 desktop_flags
FORCE_SYMBOL $3B98 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3B9A desktop_flags
COMMENT_LINE $3B9E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3B9E ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE -2 scroll text ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3B9E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $3B9E
FORCE_SYMBOL $3BA1 titleRoundCounter
FORCE_SYMBOL $3BA4 desktop_flags
FORCE_SYMBOL $3BA9 desktop_flags
FORCE_NO_SYMBOL $3BAC
FORCE_SYMBOL $3BAE screenIntensity
FORCE_SYMBOL $3BB1 iconIntensity
COMMENT_LINE $3BB5 .....................................................
FORCE_SYMBOL $3BB5 desktop_flags
FORCE_SYMBOL $3BBC titleRoundCounter
FORCE_NO_SYMBOL $3BBF
FORCE_SYMBOL $3BC2 titleRoundCounter
FORCE_SYMBOL $3BC5 titleRoundCounter
COMMENT $3BC8 half a second
FORCE_NO_SYMBOL $3BC8
FORCE_NO_SYMBOL $3BCD
FORCE_SYMBOL $3BD2 desktop_flags
FORCE_SYMBOL $3BD5 TITLE_DESKTOP_LIT
FORCE_SYMBOL $3BD7 desktop_flags
FORCE_NO_SYMBOL $3BDB
FORCE_SYMBOL $3BE0 desktop_flags
FORCE_SYMBOL $3BE5 desktop_flags
FORCE_NO_SYMBOL $3BE9
FORCE_SYMBOL $3BEE desktop_flags
FORCE_SYMBOL $3BF1 TITLE_DESKTOP_LIT
FORCE_SYMBOL $3BF3 desktop_flags
FORCE_NO_SYMBOL $3BF7
FORCE_SYMBOL $3BFC desktop_flags
FORCE_SYMBOL $3C01 desktop_flags
FORCE_NO_SYMBOL $3C05
FORCE_SYMBOL $3C0A desktop_flags
FORCE_SYMBOL $3C0D TITLE_DESKTOP_LIT
FORCE_SYMBOL $3C0F desktop_flags
FORCE_NO_SYMBOL $3C13
FORCE_NO_SYMBOL $3C18
FORCE_SYMBOL $3C1A screenIntensity
FORCE_NO_SYMBOL $3C21
FORCE_SYMBOL $3C25 iconIntensity
FORCE_NO_SYMBOL $3C29
FORCE_NO_SYMBOL $3C2E
FORCE_SYMBOL $3C30 iconIntensity
FORCE_SYMBOL $3C33 introStage
FORCE_SYMBOL $3C36 desktop_flags
FORCE_SYMBOL $3C39 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3C3B desktop_flags
COMMENT_LINE $3C3F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C3F ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE 0 scroll text ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C3F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C3F bank 0
COMMENT_LINE $3C3F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C3F implements the vertical scroller on the
COMMENT_LINE $3C3F desktop
COMMENT_LINE $3C3F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C3F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C3F u pointer to String
COMMENT_LINE $3C3F in ,s position where position is synced to
COMMENT_LINE $0000 zero is short, since we stay near center -> no wait loop!
COMMENT $0000 zero the integrators
COMMENT $0000 store zeroing values to cntl
COMMENT $0000 reset integrator offset
COMMENT $0000 while waiting, zero offsets
COMMENT $0000 from now on "in move"
COMMENT $0000 next line of font is this much further down
COMMENT $0000 next line of font is this much further down
COMMENT_LINE $0000 somehow get next x offset!
COMMENT_LINE $0000 when using higher scale for screen positioing - adjust these waits!
COMMENT $0000 uses S register for a PSHS wait!
COMMENT_LINE $0000 tfr      a,a                            ; 6 WAIT
COMMENT_LINE $0000 tfr      a,a                            ; 6 WAIT
COMMENT_LINE $0000 nop      2                              ; 4 WAIT
COMMENT_LINE $0000 nop      10                             ; 20 WAIT
COMMENT $0000 preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT $0000 ramp off/on set mux to channel 1
COMMENT $0000 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
COMMENT $0000 Clear D/A output
COMMENT $0000 Enable mux, y = 0
COMMENT $0000 if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $0000 Disable mux
COMMENT $0000 Send it to the D/A
COMMENT $0000 [4]enable RAMP, disable mux (start moving)
COMMENT $0000 Get next character
COMMENT $0000 Get bitmap from chargen table
COMMENT $0000 Save in shift register
COMMENT $0000 Get next character
COMMENT $0000 Go back if not terminator
COMMENT $0000 restore aux settings and zero
COMMENT $0000 T1?PB7 enabled
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 u pointer $80 +1
COMMENT_LINE $0000 in ,s position where position is synced to
COMMENT_LINE $0000 zero is short, since we stay near center -> no wait loop!
COMMENT_LINE $0000 zero was done by last printing
COMMENT $0000 zero the integrators
COMMENT_LINE $0000 stb <VIA_cntl ; store zeroing values to cntl
COMMENT $0000 reset integrator offset
COMMENT $0000 while waiting, zero integrators (enable mux to "y")
COMMENT $0000 disable mux
COMMENT $0000 load position
COMMENT $0000 move there, from now on "in move"
COMMENT $0000 test if line max reached, if so jump out of endless loop (out of macro)
COMMENT $0000 ensure spacing between bitmap lines
COMMENT $0000 next line of font is this much further down
COMMENT $0000 ensure FONT is pointing to "row" of bitmap
COMMENT $0000 if end -> start next String
COMMENT $0000 if one before end, ensure, next time position is updated wirh "in between string" spacing
COMMENT $0000 next line of font is this much further down
COMMENT $0000 reset u
COMMENT_LINE $0000 u is correct
COMMENT $0000 neg is end of list, value is xline offset, skip it!
COMMENT $0000 save current u
COMMENT $0000 start new font "row"
COMMENT $0000 WAIT
COMMENT_LINE $0000 waiting for timer to expire
COMMENT $0000 preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
COMMENT $0000 ramp off/on set mux to channel 1
COMMENT $0000 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
COMMENT $0000 Clear D/A output
COMMENT $0000 Enable mux, y = 0
COMMENT $0000 if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $0000 Disable mux
COMMENT $0000 Send it to the D/A
COMMENT $0000 [4]enable RAMP, disable mux (start moving)
COMMENT $0000 Get next character
COMMENT $0000 Get bitmap from chargen table
COMMENT $0000 Save in shift register
COMMENT $0000 Get next character
COMMENT $0000 Go back if not terminator
COMMENT $0000 restore aux settings and zero
COMMENT $0000 T1?PB7 enabled
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 in u pointer to first line of String "pointers"
COMMENT_LINE $0000 "BITMAP_LINES_TITLE" lines are printed
COMMENT_LINE $0000 in a NO of String line to start with, assumed < FONT_HEIGHT
COMMENT_LINE $0000 in x sync coordinates
COMMENT_LINE $3C3F put move position on stack put it so, that we can load "d" directly from stack
COMMENT $3C41 Point to start of chargen bitmaps
FORCE_SYMBOL $3C41 FONT_START_A
COMMENT_LINE $3C44 start at position IN Char
FORCE_SYMBOL $3C47 FONT_LENGTH
COMMENT_LINE $3C4C if (x == FONT_START_A+5*FONT_LENGTH) -> reset and find new string line
COMMENT_LINE $3C4C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C4C POSITION "EXACT" PATCH assuming x pos is middle aligned,
COMMENT_LINE $3C4C if that is a case we can use neg x pos as "opposite" string pos
COMMENT_LINE $3C4C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C4C we assume we ARE zeroing here!
COMMENT $3C4C zero the integrators
COMMENT_LINE $3C4F stb <VIA_port_a ; reset integrator offset
COMMENT_LINE $3C4F lda #%10000010
COMMENT_LINE $3C4F wait that zeroing surely has the desired effect!
COMMENT $3C4F while waiting, zero offsets
FORCE_SYMBOL $3C4F VIA_port_b
FORCE_NO_SYMBOL $3C51
COMMENT $3C54 Store Y in D/A register
FORCE_SYMBOL $3C54 VIA_port_a
COMMENT $3C56 Blank low, zero high?
FORCE_NO_SYMBOL $3C56
FORCE_SYMBOL $3C58 VIA_cntl
COMMENT $3C5B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3C5B VIA_port_b
COMMENT_LINE $3C5E nop
COMMENT $3C5E Disable mux
FORCE_SYMBOL $3C5E VIA_port_b
COMMENT $3C60 Store X in D/A register
FORCE_SYMBOL $3C60 VIA_port_a
COMMENT $3C62 enable timer
FORCE_SYMBOL $3C62 VIA_t1_cnt_hi
COMMENT $3C64 that many lines must be printed
FORCE_SYMBOL $3C64 BITMAP_LINES_TITLE
FORCE_SYMBOL $3C66 tmp2_lc
COMMENT $3C6B in y always a savecopy of current u AFTER the offset
FORCE_NO_SYMBOL $3C6B
FORCE_SYMBOL $3C6D it_xlinePrintOffset
FORCE_NO_SYMBOL $3C70
FORCE_SYMBOL $3C72 VIA_int_flags
COMMENT_LINE $3C76 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3C76 zero is short, since we stay near center -> no wait loop!
COMMENT $3C76 zero the integrators
COMMENT $3C79 store zeroing values to cntl
FORCE_SYMBOL $3C79 VIA_cntl
COMMENT $3C7B reset integrator offset
FORCE_SYMBOL $3C7B VIA_port_a
COMMENT $3C7D while waiting, zero offsets
FORCE_SYMBOL $3C7D VIA_port_b
FORCE_SYMBOL $3C80 VIA_port_b
FORCE_NO_SYMBOL $3C82
FORCE_SYMBOL $3C84 it_xlinePrintOffset
COMMENT $3C87 from now on "in move"
COMMENT $3C87 Store Y in D/A register
FORCE_SYMBOL $3C87 VIA_port_a
COMMENT $3C89 Blank low, zero high?
FORCE_NO_SYMBOL $3C89
FORCE_SYMBOL $3C8B VIA_cntl
COMMENT $3C8E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3C8E VIA_port_b
COMMENT_LINE $3C91 nop
COMMENT $3C91 Disable mux
FORCE_SYMBOL $3C91 VIA_port_b
COMMENT $3C93 Store X in D/A register
FORCE_SYMBOL $3C93 VIA_port_a
COMMENT $3C95 enable timer
FORCE_SYMBOL $3C95 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $3C97
FORCE_SYMBOL $3C99 SPACE_BETWEEN_LINES
COMMENT $3C9B next line of font is this much further down
FORCE_NO_SYMBOL $3C9B
FORCE_NO_SYMBOL $3CA2
FORCE_SYMBOL $3CA4 SPACE_BETWEEN_STRINGS
COMMENT $3CA6 next line of font is this much further down
FORCE_NO_SYMBOL $3CA6
COMMENT_LINE $3CA8 somehow get next x offset!
FORCE_NO_SYMBOL $3CAC
FORCE_SYMBOL $3CAE it_xlinePrintOffset
FORCE_NO_SYMBOL $3CB1
COMMENT_LINE $3CB5 when using higher scale for screen positioing - adjust these waits!
COMMENT $3CB5 uses S register for a PSHS wait!
COMMENT $3CB5 wait 16 cycles
COMMENT $3CB9 wait 16 cycles
COMMENT $3CBD wait 2 cycles
COMMENT $3CBE wait 2 cycles
COMMENT_LINE $3CBF tfr      a,a                            ; 6 WAIT
COMMENT_LINE $3CBF tfr      a,a                            ; 6 WAIT
COMMENT_LINE $3CBF nop      2                              ; 4 WAIT
COMMENT_LINE $3CBF nop      10                             ; 20 WAIT
COMMENT $3CBF preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $3CBF
COMMENT $3CC2 ramp off/on set mux to channel 1
FORCE_SYMBOL $3CC2 VIA_port_b
COMMENT $3CC4 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $3CC4 VIA_aux_cntl
COMMENT $3CC6 Clear D/A output
FORCE_SYMBOL $3CC6 VIA_port_a
FORCE_SYMBOL $3CC8 VIA_port_b
COMMENT $3CCA if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $3CCB Disable mux
FORCE_SYMBOL $3CCB VIA_port_b
COMMENT $3CD0 Send it to the D/A
FORCE_SYMBOL $3CD0 VIA_port_a
COMMENT $3CD2 [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $3CD2 VIA_port_b
COMMENT $3CD4 Get next character
COMMENT $3CD6 Get bitmap from chargen table
COMMENT $3CD8 Save in shift register
FORCE_SYMBOL $3CD8 VIA_shift_reg
COMMENT $3CDA Get next character
COMMENT $3CDC Go back if not terminator
COMMENT $3CDE restore aux settings and zero
FORCE_NO_SYMBOL $3CDE
COMMENT $3CE1 T1?PB7 enabled
FORCE_SYMBOL $3CE1 VIA_aux_cntl
COMMENT_LINE $3CE3 zero is short, since we stay near center -> no wait loop!
COMMENT_LINE $3CE3 zero was done by last printing
COMMENT $3CE3 zero the integrators
COMMENT_LINE $3CE6 stb <VIA_cntl ; store zeroing values to cntl
COMMENT $3CE6 reset integrator offset
FORCE_SYMBOL $3CE6 VIA_port_a
COMMENT $3CE8 while waiting, zero integrators (enable mux to "y")
FORCE_SYMBOL $3CE8 VIA_port_b
COMMENT $3CEB disable mux
FORCE_SYMBOL $3CEB VIA_port_b
COMMENT $3CED load position
FORCE_NO_SYMBOL $3CED
FORCE_SYMBOL $3CEF it_xlinePrintOffset
COMMENT $3CF2 move there, from now on "in move"
COMMENT $3CF2 Store Y in D/A register
FORCE_SYMBOL $3CF2 VIA_port_a
COMMENT $3CF4 Blank low, zero high?
FORCE_NO_SYMBOL $3CF4
FORCE_SYMBOL $3CF6 VIA_cntl
COMMENT $3CF9 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $3CF9 VIA_port_b
COMMENT_LINE $3CFC nop
COMMENT $3CFC Disable mux
FORCE_SYMBOL $3CFC VIA_port_b
COMMENT $3CFE Store X in D/A register
FORCE_SYMBOL $3CFE VIA_port_a
COMMENT $3D00 enable timer
FORCE_SYMBOL $3D00 VIA_t1_cnt_hi
COMMENT $3D02 test if line max reached, if so jump out of endless loop (out of macro)
FORCE_SYMBOL $3D02 tmp2_lc
COMMENT $3D07 ensure spacing between bitmap lines
FORCE_NO_SYMBOL $3D07
FORCE_SYMBOL $3D09 SPACE_BETWEEN_LINES
COMMENT $3D0B next line of font is this much further down
FORCE_NO_SYMBOL $3D0B
COMMENT $3D0D ensure FONT is pointing to "row" of bitmap
FORCE_SYMBOL $3D0D FONT_LENGTH
COMMENT $3D10 if end -> start next String
COMMENT $3D15 if one before end, ensure, next time position is updated wirh "in between string" spacing
FORCE_NO_SYMBOL $3D1A
FORCE_SYMBOL $3D1C it_xlinePrintOffset
FORCE_NO_SYMBOL $3D1F
FORCE_SYMBOL $3D21 SPACE_BETWEEN_STRINGS
COMMENT $3D23 next line of font is this much further down
FORCE_NO_SYMBOL $3D23
COMMENT $3D25 reset u
FORCE_NO_SYMBOL $3D25
COMMENT_LINE $3D29 u is correct
COMMENT $3D29 neg is end of list, value is xline offset, skip it!
COMMENT $3D2D save current u
FORCE_NO_SYMBOL $3D2D
COMMENT $3D2F start new font "row"
FORCE_SYMBOL $3D2F FONT_START_A
COMMENT $3D32 WAIT
COMMENT_LINE $3D34 waiting for timer to expire
COMMENT $3D34 preload values ;a?AUX: b?ORB: $8x = Disable RAMP, Disable Mux, mux sel = 01 (int offsets)
FORCE_NO_SYMBOL $3D34
COMMENT $3D37 ramp off/on set mux to channel 1
FORCE_SYMBOL $3D37 VIA_port_b
COMMENT $3D39 Shift reg mode = 110 (shift out under system clock), T1 PB7 disabled, one shot mode
FORCE_SYMBOL $3D39 VIA_aux_cntl
COMMENT $3D3B Clear D/A output
FORCE_SYMBOL $3D3B VIA_port_a
FORCE_SYMBOL $3D3D VIA_port_b
COMMENT $3D3F if not done on a real vectrex - uper lines end up slighjtly diagonal
COMMENT $3D40 Disable mux
FORCE_SYMBOL $3D40 VIA_port_b
COMMENT $3D45 Send it to the D/A
FORCE_SYMBOL $3D45 VIA_port_a
COMMENT $3D47 [4]enable RAMP, disable mux (start moving)
FORCE_SYMBOL $3D47 VIA_port_b
COMMENT $3D49 Get next character
COMMENT $3D4B Get bitmap from chargen table
COMMENT $3D4D Save in shift register
FORCE_SYMBOL $3D4D VIA_shift_reg
COMMENT $3D4F Get next character
COMMENT $3D51 Go back if not terminator
COMMENT $3D53 restore aux settings and zero
FORCE_NO_SYMBOL $3D53
COMMENT $3D56 T1?PB7 enabled
FORCE_SYMBOL $3D56 VIA_aux_cntl
COMMENT_LINE $3D5A zero
COMMENT $3D5B ensure timer is finished, otherwise we leave our trusty bank 0
FORCE_NO_SYMBOL $3D5B
FORCE_SYMBOL $3D5D VIA_int_flags
FORCE_SYMBOL $3D61 VIA_shift_reg
COMMENT $3D63 all done, correct stack
COMMENT_LINE $3D65 end if string list encountered
COMMENT $3D65 ensure timer is finished, otherwise we leave our trusty bank 0
FORCE_NO_SYMBOL $3D65
FORCE_SYMBOL $3D67 VIA_int_flags
COMMENT $3D6B [2]disable mux, disable ramp
FORCE_NO_SYMBOL $3D6B
COMMENT $3D6E T1?PB7 enabled
FORCE_SYMBOL $3D6E VIA_aux_cntl
COMMENT $3D70 all done, correct stack
COMMENT_LINE $3D72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3D72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $CA64 which string in the pointer list to start with
COMMENT $CA65 line for the scroll line within one string (bitmap)
COMMENT $CA66 compensation offset while printing for line gap between two strings
COMMENT $CA67 x offset of line (used to ensure MID alignment)
COMMENT $CA68 counter of how many string lines have been processed within the scroller (coutdown from BITMAP_LINES_TITLE)
COMMENT_LINE $3D72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $3D72 it_stringCounter
FORCE_SYMBOL $3D75 it_lineCounter
FORCE_SYMBOL $3D78 it_linePrintOffset
FORCE_SYMBOL $3D7B IntroTextScrollPointers
FORCE_SYMBOL $3D7E desktop_flags
FORCE_SYMBOL $3D83 desktop_flags
COMMENT_LINE $3D87 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3D87 scroller
FORCE_SYMBOL $3D87 desktop_flags
COMMENT $3D8E 30;28 ; scale used for positioning of scroller (strength is maxed $) changing -> waits in scroller must be adjusted
FORCE_NO_SYMBOL $3D8E
FORCE_SYMBOL $3D90 VIA_t1_cnt_lo
FORCE_SYMBOL $3D92 Reset_Pen
FORCE_SYMBOL $3D95 Intensity_5F
COMMENT $3D98 $7f90;$7f81 ; move to
FORCE_NO_SYMBOL $3D98
FORCE_SYMBOL $3D9B it_linePrintOffset
FORCE_SYMBOL $3DA0 IntroTextScrollPointers
FORCE_SYMBOL $3DA3 it_stringCounter
FORCE_SYMBOL $3DAB it_lineCounter
FORCE_SYMBOL $3DAE printStringList_25_Sync_direct
COMMENT $3DB4 decrease scroller each 3rd round
FORCE_NO_SYMBOL $3DB4
FORCE_SYMBOL $3DB8 it_linePrintOffset
FORCE_SYMBOL $3DBD it_lineCounter
FORCE_SYMBOL $3DC1 FONT_HEIGHT
FORCE_SYMBOL $3DC6 it_linePrintOffset
FORCE_SYMBOL $3DC9 SPACE_BETWEEN_STRINGS
FORCE_SYMBOL $3DCB it_linePrintOffset
FORCE_SYMBOL $3DCE it_stringCounter
COMMENT $3DD2 number of max string lines printed at the moment (should be determined somehow)
FORCE_SYMBOL $3DD2 MAX_STRING_NO_DISPLAY
FORCE_SYMBOL $3DD9 it_stringCounter
FORCE_SYMBOL $3DDC it_lineCounter
FORCE_SYMBOL $3DE0 it_linePrintOffset
FORCE_SYMBOL $3DE3 SPACE_BETWEEN_LINES
FORCE_SYMBOL $3DE5 it_linePrintOffset
COMMENT_LINE $3DE9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3DE9 ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE 0 END ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3DE9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $CA64 indicator, rthat scenery has reseted this round!
FORCE_SYMBOL $3DE9 introStage
FORCE_SYMBOL $3DEC desktop_flags
FORCE_SYMBOL $3DEF TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3DF1 desktop_flags
COMMENT_LINE $3DF5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3DF5 ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE -1a ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3DF5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $3DF5
FORCE_SYMBOL $3DF7 screenIntensity
FORCE_SYMBOL $3DFA stageCounter
FORCE_SYMBOL $3DFD interStageCounter
FORCE_SYMBOL $3E00 sceneryLooped
FORCE_SYMBOL $3E03 desktop_flags
FORCE_SYMBOL $3E08 desktop_flags
FORCE_SYMBOL $3E0B initScenery1
COMMENT $3E0E skip 18 stages
FORCE_NO_SYMBOL $3E0E
FORCE_SYMBOL $3E10 titleRoundCounter
FORCE_SYMBOL $3E13 laneRAM
FORCE_NO_SYMBOL $3E17
FORCE_SYMBOL $3E1B initNextElementSilent
FORCE_SYMBOL $3E1E laneData
FORCE_SYMBOL $3E23 titleRoundCounter
COMMENT_LINE $3E29 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $3E29 desktop_flags
COMMENT $3E30 scenery had reseted -> go to next stage!
FORCE_SYMBOL $3E30 sceneryLooped
FORCE_SYMBOL $3E35 introStage
FORCE_SYMBOL $3E38 desktop_flags
FORCE_SYMBOL $3E3B TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3E3D desktop_flags
FORCE_SYMBOL $3E40 doAStage
FORCE_SYMBOL $3E43 Reset_Pen
FORCE_SYMBOL $3E46 oneScenarioStep1
FORCE_NO_SYMBOL $3E49
COMMENT $3E4B /BLANK low and /ZERO low
FORCE_SYMBOL $3E4B VIA_cntl
COMMENT_LINE $3E4E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3E4E ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE -1b ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3E4E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $3E4E
FORCE_SYMBOL $3E50 screenIntensity
FORCE_SYMBOL $3E53 stageCounter
FORCE_SYMBOL $3E56 interStageCounter
FORCE_SYMBOL $3E59 sceneryLooped
FORCE_SYMBOL $3E5C desktop_flags
FORCE_SYMBOL $3E61 desktop_flags
FORCE_SYMBOL $3E64 initScenery1
FORCE_SYMBOL $3E67 desktop_flags
COMMENT_LINE $3E6E do sceneries of enemies
COMMENT_LINE $3E6E Scenery: _GTitle1.xml (new )
COMMENT_LINE $3E6E look in what scenery stage we are
COMMENT $3E6E scenery had reseted -> go to next stage!
FORCE_SYMBOL $3E6E sceneryLooped
FORCE_SYMBOL $3E73 introStage
FORCE_SYMBOL $3E76 desktop_flags
FORCE_SYMBOL $3E79 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3E7B desktop_flags
FORCE_SYMBOL $3E7E doAStage
FORCE_SYMBOL $3E81 stageCounter
COMMENT $3E84 from that stage on grow the screen
FORCE_NO_SYMBOL $3E84
COMMENT $3E86 lower stage 2, than draw nothing special
FORCE_SYMBOL $3E8A desktop_flags
FORCE_SYMBOL $3E8D TITLE_DISPLAY_MAN
FORCE_SYMBOL $3E8F desktop_flags
COMMENT_LINE $3E92 stage 2 screen was switched on and increases in size and brightness
FORCE_SYMBOL $3E92 interStageCounter
FORCE_SYMBOL $3E95 interStageCounter
FORCE_SYMBOL $3E98 interStageCounter
FORCE_SYMBOL $3E9B interStageCounter
FORCE_SYMBOL $3E9E interStageCounter
FORCE_NO_SYMBOL $3EA3
FORCE_SYMBOL $3EA5 interStageCounter
FORCE_SYMBOL $3EA8 introStage
COMMENT $3EAB interStageCounter
FORCE_NO_SYMBOL $3EAB
FORCE_SYMBOL $3EAD screenIntensity
FORCE_SYMBOL $3EB0 desktop_flags
FORCE_SYMBOL $3EB3 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3EB5 desktop_flags
FORCE_SYMBOL $3EB8 interStageCounter
FORCE_SYMBOL $3EBB VIA_t1_cnt_lo
FORCE_SYMBOL $3EBD CommandCenter_0
COMMENT $3EC0 this is only drawn when growing, the full grown screen switches to higher intensity of the "normal" desktop
FORCE_SYMBOL $3EC0 draw_synced_list_fromzero__noshift
FORCE_NO_SYMBOL $3EC3
COMMENT $3EC5 /BLANK low and /ZERO low
FORCE_SYMBOL $3EC5 VIA_cntl
FORCE_SYMBOL $3EC8 stageCounter
COMMENT $3ECB 3
FORCE_NO_SYMBOL $3ECB
FORCE_NO_SYMBOL $3ECF
FORCE_SYMBOL $3ED1 stageCounter
FORCE_SYMBOL $3ED4 desktop_flags
FORCE_SYMBOL $3ED7 TITLE_DISPLAY_MAN
FORCE_SYMBOL $3ED9 desktop_flags
FORCE_SYMBOL $3EDD Reset_Pen
FORCE_SYMBOL $3EE0 oneScenarioStep1
FORCE_NO_SYMBOL $3EE3
COMMENT $3EE5 /BLANK low and /ZERO low
FORCE_SYMBOL $3EE5 VIA_cntl
COMMENT_LINE $3EE8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3EE8 ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE 1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $3EE8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $3EE8 stageCounter
FORCE_SYMBOL $3EEB interStageCounter
FORCE_SYMBOL $3EEE sceneryLooped
FORCE_SYMBOL $3EF1 desktop_flags
FORCE_SYMBOL $3EF6 desktop_flags
FORCE_SYMBOL $3EF9 initScenery1
COMMENT_LINE $3EFC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $3EFC desktop_flags
COMMENT_LINE $3F03 do sceneries of enemies
COMMENT_LINE $3F03 Scenery: _GTitle1.xml (new )
COMMENT_LINE $3F03 look in what scenery stage we are
COMMENT $3F03 scenery had reseted -> go to next stage!
FORCE_SYMBOL $3F03 sceneryLooped
FORCE_SYMBOL $3F08 introStage
FORCE_SYMBOL $3F0B desktop_flags
FORCE_SYMBOL $3F0E TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $3F10 desktop_flags
FORCE_SYMBOL $3F13 doAStage
FORCE_SYMBOL $3F16 stageCounter
COMMENT $3F19 from that stage on grow the screen
FORCE_NO_SYMBOL $3F19
COMMENT $3F1B lower stage 2, than draw nothing special
COMMENT_LINE $3F21 stage 2 screen was switched on and increases in size and brightness
FORCE_SYMBOL $3F21 interStageCounter
FORCE_SYMBOL $3F24 interStageCounter
FORCE_SYMBOL $3F27 interStageCounter
FORCE_SYMBOL $3F2A interStageCounter
FORCE_SYMBOL $3F2D interStageCounter
FORCE_NO_SYMBOL $3F32
FORCE_SYMBOL $3F34 interStageCounter
FORCE_SYMBOL $3F37 interStageCounter
FORCE_SYMBOL $3F3A VIA_t1_cnt_lo
FORCE_SYMBOL $3F3C CommandCenter_0
COMMENT $3F3F this is only drawn when growing, the full grown screen switches to higher intensity of the "normal" desktop
FORCE_SYMBOL $3F3F draw_synced_list_fromzero__noshift
FORCE_NO_SYMBOL $3F42
COMMENT $3F44 /BLANK low and /ZERO low
FORCE_SYMBOL $3F44 VIA_cntl
COMMENT $3F48 interStageCounter
FORCE_NO_SYMBOL $3F48
FORCE_SYMBOL $3F4A screenIntensity
FORCE_SYMBOL $3F4D stageCounter
FORCE_SYMBOL $3F50 LAST_STAGES
FORCE_SYMBOL $3F54 desktop_flags
FORCE_SYMBOL $3F57 TITLE_DISPLAY_MAN
FORCE_SYMBOL $3F59 desktop_flags
FORCE_SYMBOL $3F5C stageCounter
FORCE_NO_SYMBOL $3F5F
FORCE_SYMBOL $3F64 textPointer2
FORCE_SYMBOL $3F6B Vec_Text_Height
FORCE_NO_SYMBOL $3F70
FORCE_SYMBOL $3F73 Vec_Text_Height
COMMENT_LINE $3F76 todo
COMMENT_LINE $3F76 ensure T1 setup correctly
COMMENT_LINE $3F76 - it usually is
COMMENT $3F76 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $3F76
FORCE_SYMBOL $3F78 VIA_int_enable
COMMENT_LINE $3F7A and now "trigger a interrupt
COMMENT $3F7A a VERY short T1 timer
FORCE_NO_SYMBOL $3F7A
FORCE_SYMBOL $3F7C VIA_t1_cnt_lo
COMMENT $3F7F start timer
FORCE_SYMBOL $3F7F VIA_t1_cnt_hi
COMMENT $3F81 Peer Test
COMMENT_LINE $3F83 by the time, the macros "leaves" the interrupt is set!
FORCE_SYMBOL $3F83 gameScale
FORCE_SYMBOL $3F86 VIA_t1_cnt_lo
FORCE_SYMBOL $3F8B syncPrintStrd
FORCE_SYMBOL $3F90 Vec_Text_Height
COMMENT $3F93 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $3F93
COMMENT_LINE $3F96 for some reason or another, VIA doesn't like a
COMMENT_LINE $3F96 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $3F96 (only on a real vectrex, not Vide)
FORCE_SYMBOL $3F96 VIA_aux_cntl
COMMENT $3F98 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $3F98 VIA_shift_reg
COMMENT $3F9A bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $3F9A
FORCE_SYMBOL $3F9C VIA_int_enable
COMMENT_LINE $3F9E wait 20 cycles till store of aux (these are 23)
COMMENT $3F9E 12
COMMENT $3F9F 3
FORCE_NO_SYMBOL $3F9F
COMMENT_LINE $3FA1 nop      10
FORCE_SYMBOL $3FA1 VIA_aux_cntl
FORCE_NO_SYMBOL $3FA3
FORCE_SYMBOL $3FA5 Intensity_a
FORCE_NO_SYMBOL $3FA8
COMMENT $3FAA /BLANK low and /ZERO low
FORCE_SYMBOL $3FAA VIA_cntl
FORCE_SYMBOL $3FAC Reset_Pen
FORCE_SYMBOL $3FAF oneScenarioStep1
FORCE_NO_SYMBOL $3FB2
COMMENT $3FB4 /BLANK low and /ZERO low
FORCE_SYMBOL $3FB4 VIA_cntl
FORCE_NO_SYMBOL $3FB6
FORCE_SYMBOL $3FB8 Intensity_a
FORCE_SYMBOL $3FBB stageCounter
COMMENT $3FBE from that stage on switch the screen off
COMMENT $3FC2 interStageCounter
FORCE_NO_SYMBOL $3FC2
FORCE_SYMBOL $3FC4 screenIntensity
FORCE_SYMBOL $3FC7 desktop_flags
FORCE_SYMBOL $3FCC desktop_flags
COMMENT $401E half
COMMENT $402B half
COMMENT $4038 half
COMMENT $4045 half
COMMENT $406E half
COMMENT $4083 half
COMMENT $408A half
COMMENT $40B1 half
COMMENT $40D6 half
COMMENT_LINE $40F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $40F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE 1 END ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $40F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $40F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $40F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE 2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $40F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $40F9 BANK 0
COMMENT $0000 explosions jump back to here after all have been rendered
COMMENT_LINE $0000 setup objects
COMMENT_LINE $40F9 Structures
COMMENT_LINE $40F9 RAM
FORCE_SYMBOL $40F9 pCount
COMMENT $40FC explosions jump back to here after all have been rendered
FORCE_SYMBOL $40FC objectsFinished1_pa
FORCE_SYMBOL $40FF PARTICLES_DONE_A
COMMENT_LINE $4102 setup objects
FORCE_SYMBOL $4102 PARTICLE1_MAX_COUNT
FORCE_SYMBOL $4104 pobject_list
FORCE_SYMBOL $4107 plist_empty_head
FORCE_SYMBOL $410A PARTICLES_DONE
FORCE_SYMBOL $410E Particle
FORCE_SYMBOL $4110 NEXT_OBJECT
FORCE_NO_SYMBOL $4112
FORCE_SYMBOL $4119 NEXT_OBJECT
FORCE_SYMBOL $411C plist_objects_head
FORCE_SYMBOL $4120 emitterData1
COMMENT $4123 position of emitter
FORCE_NO_SYMBOL $4123
FORCE_SYMBOL $4126 YPOS
COMMENT $4128 delay 1, start angle 0
FORCE_SYMBOL $412B ECOUNTER_RESET
COMMENT $412D start countdown = 0, angle inc = 3
FORCE_SYMBOL $4130 ECOUNTER
FORCE_SYMBOL $4132 buildStationaryEmitter
FORCE_SYMBOL $4135 emitterData2
COMMENT $4138 position of emitter
FORCE_NO_SYMBOL $4138
FORCE_SYMBOL $413B YPOS
COMMENT $413D delay 1, start angle 0
FORCE_SYMBOL $4140 ECOUNTER_RESET
COMMENT $4142 start countdown = 0, angle inc = 3
FORCE_SYMBOL $4145 ECOUNTER
FORCE_SYMBOL $4147 buildStationaryEmitter
FORCE_SYMBOL $414A emitterData3
COMMENT $414D position of emitter
FORCE_NO_SYMBOL $414D
FORCE_SYMBOL $4150 YPOS
COMMENT $4152 delay 1, start angle 0
FORCE_SYMBOL $4155 ECOUNTER_RESET
COMMENT $4157 start countdown = 0, angle inc = 3
FORCE_SYMBOL $415A ECOUNTER
FORCE_SYMBOL $415C buildStationaryEmitter
FORCE_SYMBOL $415F anglechangeCountDown
FORCE_SYMBOL $4162 angleAddData
FORCE_SYMBOL $4165 angleChangePointer
COMMENT_LINE $4169 ***************************************************************************
FORCE_SYMBOL $4169 anglechangeCountDown
FORCE_NO_SYMBOL $416E
FORCE_SYMBOL $4170 anglechangeCountDown
FORCE_SYMBOL $4173 angleChangePointer
FORCE_NO_SYMBOL $4176
FORCE_SYMBOL $4178 angleAddDataEnd
FORCE_SYMBOL $417E angleAddData
FORCE_SYMBOL $4181 angleChangePointer
FORCE_NO_SYMBOL $4184
COMMENT_LINE $418F pointer to circle data - is a constant!
FORCE_SYMBOL $418F circleData
FORCE_SYMBOL $4193 plist_objects_head
COMMENT $4196 (D = y,x) ; do all objects
COMMENT_LINE $4199 ***************************************************************************
COMMENT_LINE $41F1 ***************************************************************************
COMMENT_LINE $41F1 ...........................................................................
FORCE_SYMBOL $41F3 PLIST_COMPARE_ADDRESS
FORCE_SYMBOL $41F9 EMITTER_DATA
FORCE_SYMBOL $41FB stationaryEmitterBehaviour
FORCE_SYMBOL $41FE BEHAVIOUR
COMMENT_LINE $4201 ...........................................................................
FORCE_SYMBOL $4203 EDATA
FORCE_SYMBOL $4205 EANGLE_INC
FORCE_SYMBOL $4207 EDATA
FORCE_SYMBOL $4209 ECOUNTER
FORCE_SYMBOL $420F ECOUNTER_RESET
FORCE_SYMBOL $4211 ECOUNTER
FORCE_SYMBOL $4215 PLIST_COMPARE_ADDRESS
COMMENT $421B start scale
FORCE_NO_SYMBOL $421B
COMMENT $421D position / angle
FORCE_SYMBOL $421D EDATA
FORCE_SYMBOL $421F P_SCALE
FORCE_SYMBOL $4221 scaledAngleParticleBehaviour
FORCE_SYMBOL $4224 BEHAVIOUR
COMMENT $4228 preload next user stack
COMMENT_LINE $422C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $422C new list object to U
COMMENT_LINE $422C destroys d, u
FORCE_SYMBOL $422C plist_empty_head
FORCE_SYMBOL $422F PLIST_COMPARE_ADDRESS
COMMENT_LINE $4235 set the new empty head
COMMENT $4235 the next in out empty list will be the new
FORCE_SYMBOL $4235 NEXT_OBJECT
COMMENT $4237 head of our empty list
FORCE_SYMBOL $4237 plist_empty_head
COMMENT_LINE $423A load last of current object list
COMMENT_LINE $423A the old head is always our next
FORCE_SYMBOL $423A plist_objects_head
FORCE_SYMBOL $423D NEXT_OBJECT
COMMENT_LINE $423F newobject is always head
FORCE_SYMBOL $423F plist_objects_head
COMMENT $4242 and remember that we created a new object
FORCE_SYMBOL $4242 pCount
COMMENT_LINE $4246 ...........................................................................
COMMENT_LINE $4246 position to
COMMENT_LINE $4246 lda      #23
COMMENT_LINE $4246 sta      <VIA_t1_cnt_lo
FORCE_NO_SYMBOL $4246
COMMENT_LINE $4249 ldd      #$7f00
COMMENT $4249 Store Y in D/A register
FORCE_SYMBOL $4249 VIA_port_a
COMMENT $424B Blank low, zero high?
FORCE_NO_SYMBOL $424B
FORCE_SYMBOL $424D VIA_cntl
COMMENT $4250 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4250 VIA_port_b
COMMENT_LINE $4253 nop
COMMENT $4253 Disable mux
FORCE_SYMBOL $4253 VIA_port_b
COMMENT $4255 Store X in D/A register
FORCE_SYMBOL $4255 VIA_port_a
COMMENT $4257 enable timer
FORCE_SYMBOL $4257 VIA_t1_cnt_hi
FORCE_SYMBOL $425B VIA_t1_cnt_lo
FORCE_NO_SYMBOL $4262
FORCE_SYMBOL $4264 VIA_int_flags
FORCE_NO_SYMBOL $4268
COMMENT $426A Store Y in D/A register
FORCE_SYMBOL $426A VIA_port_a
COMMENT $426C Blank low, zero high?
FORCE_NO_SYMBOL $426C
FORCE_SYMBOL $426E VIA_cntl
COMMENT $4271 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4271 VIA_port_b
COMMENT_LINE $4274 nop
COMMENT $4274 Disable mux
FORCE_SYMBOL $4274 VIA_port_b
COMMENT $4276 Store X in D/A register
FORCE_SYMBOL $4276 VIA_port_a
COMMENT $4278 enable timer
FORCE_SYMBOL $4278 VIA_t1_cnt_hi
FORCE_SYMBOL $427A circleData
FORCE_NO_SYMBOL $4280
FORCE_NO_SYMBOL $4282
COMMENT $4288 preload next user stack
COMMENT $428A Get dot dwell (brightness)
FORCE_SYMBOL $428A Vec_Dot_Dwell
COMMENT $428D Delay leaving beam in place
COMMENT_LINE $428E MY_MOVE_TO_A_END
COMMENT $428E light ON, ZERO OFF
FORCE_NO_SYMBOL $428E
COMMENT $4291 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $4291 VIA_cntl
COMMENT $4293 wait 2 cycles
COMMENT $4294 wait 2 cycles
COMMENT $4295 ZERO ON, blank of
FORCE_NO_SYMBOL $4295
FORCE_SYMBOL $4297 VIA_cntl
FORCE_NO_SYMBOL $4299
FORCE_SYMBOL $429B VIA_t1_cnt_lo
COMMENT $429D [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $429D VIA_cntl
COMMENT_LINE $42A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $42A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $42A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $42A1 this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $42A1 it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $42A1 sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $42A1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $42A1 in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $42A1 destroys x, y
COMMENT_LINE $42A1 puls from ds the next object behaviour
COMMENT_LINE $42A1 this version is called at the end of an explosion called by "behaviours"
COMMENT $42A1 x -> pointer object struture (correction of offset)
FORCE_SYMBOL $42A1 u_offset1
COMMENT $42A3 is it the first?
FORCE_SYMBOL $42A3 plist_objects_head
COMMENT $42A6 no -> jump
COMMENT $42A8 s pointer to next objext
FORCE_SYMBOL $42A8 NEXT_OBJECT
COMMENT $42AA the next object will be the first
FORCE_SYMBOL $42AA plist_objects_head
COMMENT $42AF start at list head
FORCE_SYMBOL $42AF plist_objects_head
COMMENT $42B3 am I the next object of the current investigated list element
FORCE_SYMBOL $42B3 NEXT_OBJECT
COMMENT $42B5 jup -> jump
COMMENT $42B7 otherwise load the next as new current
FORCE_SYMBOL $42B7 NEXT_OBJECT
COMMENT $42BA and search further
COMMENT $42BC we load "our" next object to s
FORCE_SYMBOL $42BC NEXT_OBJECT
COMMENT $42BE and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $42BE NEXT_OBJECT
COMMENT $42C0 and clean up the empties
FORCE_SYMBOL $42C0 pCount
COMMENT $42C3 set u free, as new free head
FORCE_SYMBOL $42C3 plist_empty_head
COMMENT $42C7 load to u the next linked list element
FORCE_SYMBOL $42C7 NEXT_OBJECT
FORCE_SYMBOL $42CA plist_empty_head
COMMENT_LINE $42CD do a clean ending - which is usually done at the end of "SmartDraw"
FORCE_NO_SYMBOL $42CD
FORCE_SYMBOL $42CF VIA_t1_cnt_lo
FORCE_NO_SYMBOL $42D1
COMMENT $42D3 /BLANK low and /ZERO low
FORCE_SYMBOL $42D3 VIA_cntl
FORCE_NO_SYMBOL $42D5
FORCE_SYMBOL $42D7 VIA_int_flags
COMMENT $42DB (D = y,x, X = vectorlist)
COMMENT_LINE $42DD ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $42DD circle generated 0-360 in 255 steps (cos, -sin), radius: 127
COMMENT $42DD degrees: 0
COMMENT $42DF degrees: 1
COMMENT $42E1 degrees: 2
COMMENT $42E3 degrees: 4
COMMENT $42E5 degrees: 5
COMMENT $42E7 degrees: 7
COMMENT $42E9 degrees: 8
COMMENT $42EB degrees: 9
COMMENT $42ED degrees: 11
COMMENT $42EF degrees: 12
COMMENT $42F1 degrees: 14
COMMENT $42F3 degrees: 15
COMMENT $42F5 degrees: 16
COMMENT $42F7 degrees: 18
COMMENT $42F9 degrees: 19
COMMENT $42FB degrees: 21
COMMENT $42FD degrees: 22
COMMENT $42FF degrees: 23
COMMENT $4301 degrees: 25
COMMENT $4303 degrees: 26
COMMENT $4305 degrees: 28
COMMENT $4307 degrees: 29
COMMENT $4309 degrees: 31
COMMENT $430B degrees: 32
COMMENT $430D degrees: 33
COMMENT $430F degrees: 35
COMMENT $4311 degrees: 36
COMMENT $4313 degrees: 38
COMMENT $4315 degrees: 39
COMMENT $4317 degrees: 40
COMMENT $4319 degrees: 42
COMMENT $431B degrees: 43
COMMENT $431D degrees: 45
COMMENT $431F degrees: 46
COMMENT $4321 degrees: 48
COMMENT $4323 degrees: 49
COMMENT $4325 degrees: 50
COMMENT $4327 degrees: 52
COMMENT $4329 degrees: 53
COMMENT $432B degrees: 55
COMMENT $432D degrees: 56
COMMENT $432F degrees: 57
COMMENT $4331 degrees: 59
COMMENT $4333 degrees: 60
COMMENT $4335 degrees: 62
COMMENT $4337 degrees: 63
COMMENT $4339 degrees: 64
COMMENT $433B degrees: 66
COMMENT $433D degrees: 67
COMMENT $433F degrees: 69
COMMENT $4341 degrees: 70
COMMENT $4343 degrees: 72
COMMENT $4345 degrees: 73
COMMENT $4347 degrees: 74
COMMENT $4349 degrees: 76
COMMENT $434B degrees: 77
COMMENT $434D degrees: 79
COMMENT $434F degrees: 80
COMMENT $4351 degrees: 81
COMMENT $4353 degrees: 83
COMMENT $4355 degrees: 84
COMMENT $4357 degrees: 86
COMMENT $4359 degrees: 87
COMMENT $435B degrees: 88
COMMENT $435D degrees: 90
COMMENT $435F degrees: 91
COMMENT $4361 degrees: 93
COMMENT $4363 degrees: 94
COMMENT $4365 degrees: 95
COMMENT $4367 degrees: 97
COMMENT $4369 degrees: 98
COMMENT $436B degrees: 100
COMMENT $436D degrees: 101
COMMENT $436F degrees: 103
COMMENT $4371 degrees: 104
COMMENT $4373 degrees: 105
COMMENT $4375 degrees: 107
COMMENT $4377 degrees: 108
COMMENT $4379 degrees: 110
COMMENT $437B degrees: 111
COMMENT $437D degrees: 112
COMMENT $437F degrees: 114
COMMENT $4381 degrees: 115
COMMENT $4383 degrees: 117
COMMENT $4385 degrees: 118
COMMENT $4387 degrees: 119
COMMENT $4389 degrees: 121
COMMENT $438B degrees: 122
COMMENT $438D degrees: 124
COMMENT $438F degrees: 125
COMMENT $4391 degrees: 127
COMMENT $4393 degrees: 128
COMMENT $4395 degrees: 129
COMMENT $4397 degrees: 131
COMMENT $4399 degrees: 132
COMMENT $439B degrees: 134
COMMENT $439D degrees: 135
COMMENT $439F degrees: 136
COMMENT $43A1 degrees: 138
COMMENT $43A3 degrees: 139
COMMENT $43A5 degrees: 141
COMMENT $43A7 degrees: 142
COMMENT $43A9 degrees: 143
COMMENT $43AB degrees: 145
COMMENT $43AD degrees: 146
COMMENT $43AF degrees: 148
COMMENT $43B1 degrees: 149
COMMENT $43B3 degrees: 151
COMMENT $43B5 degrees: 152
COMMENT $43B7 degrees: 153
COMMENT $43B9 degrees: 155
COMMENT $43BB degrees: 156
COMMENT $43BD degrees: 158
COMMENT $43BF degrees: 159
COMMENT $43C1 degrees: 160
COMMENT $43C3 degrees: 162
COMMENT $43C5 degrees: 163
COMMENT $43C7 degrees: 165
COMMENT $43C9 degrees: 166
COMMENT $43CB degrees: 167
COMMENT $43CD degrees: 169
COMMENT $43CF degrees: 170
COMMENT $43D1 degrees: 172
COMMENT $43D3 degrees: 173
COMMENT $43D5 degrees: 175
COMMENT $43D7 degrees: 176
COMMENT $43D9 degrees: 177
COMMENT $43DB degrees: 179
COMMENT $43DD degrees: 180
COMMENT $43DF degrees: 182
COMMENT $43E1 degrees: 183
COMMENT $43E3 degrees: 184
COMMENT $43E5 degrees: 186
COMMENT $43E7 degrees: 187
COMMENT $43E9 degrees: 189
COMMENT $43EB degrees: 190
COMMENT $43ED degrees: 191
COMMENT $43EF degrees: 193
COMMENT $43F1 degrees: 194
COMMENT $43F3 degrees: 196
COMMENT $43F5 degrees: 197
COMMENT $43F7 degrees: 199
COMMENT $43F9 degrees: 200
COMMENT $43FB degrees: 201
COMMENT $43FD degrees: 203
COMMENT $43FF degrees: 204
COMMENT $4401 degrees: 206
COMMENT $4403 degrees: 207
COMMENT $4405 degrees: 208
COMMENT $4407 degrees: 210
COMMENT $4409 degrees: 211
COMMENT $440B degrees: 213
COMMENT $440D degrees: 214
COMMENT $440F degrees: 215
COMMENT $4411 degrees: 217
COMMENT $4413 degrees: 218
COMMENT $4415 degrees: 220
COMMENT $4417 degrees: 221
COMMENT $4419 degrees: 223
COMMENT $441B degrees: 224
COMMENT $441D degrees: 225
COMMENT $441F degrees: 227
COMMENT $4421 degrees: 228
COMMENT $4423 degrees: 230
COMMENT $4425 degrees: 231
COMMENT $4427 degrees: 232
COMMENT $4429 degrees: 234
COMMENT $442B degrees: 235
COMMENT $442D degrees: 237
COMMENT $442F degrees: 238
COMMENT $4431 degrees: 239
COMMENT $4433 degrees: 241
COMMENT $4435 degrees: 242
COMMENT $4437 degrees: 244
COMMENT $4439 degrees: 245
COMMENT $443B degrees: 247
COMMENT $443D degrees: 248
COMMENT $443F degrees: 249
COMMENT $4441 degrees: 251
COMMENT $4443 degrees: 252
COMMENT $4445 degrees: 254
COMMENT $4447 degrees: 255
COMMENT $4449 degrees: 256
COMMENT $444B degrees: 258
COMMENT $444D degrees: 259
COMMENT $444F degrees: 261
COMMENT $4451 degrees: 262
COMMENT $4453 degrees: 263
COMMENT $4455 degrees: 265
COMMENT $4457 degrees: 266
COMMENT $4459 degrees: 268
COMMENT $445B degrees: 269
COMMENT $445D degrees: 271
COMMENT $445F degrees: 272
COMMENT $4461 degrees: 273
COMMENT $4463 degrees: 275
COMMENT $4465 degrees: 276
COMMENT $4467 degrees: 278
COMMENT $4469 degrees: 279
COMMENT $446B degrees: 280
COMMENT $446D degrees: 282
COMMENT $446F degrees: 283
COMMENT $4471 degrees: 285
COMMENT $4473 degrees: 286
COMMENT $4475 degrees: 287
COMMENT $4477 degrees: 289
COMMENT $4479 degrees: 290
COMMENT $447B degrees: 292
COMMENT $447D degrees: 293
COMMENT $447F degrees: 295
COMMENT $4481 degrees: 296
COMMENT $4483 degrees: 297
COMMENT $4485 degrees: 299
COMMENT $4487 degrees: 300
COMMENT $4489 degrees: 302
COMMENT $448B degrees: 303
COMMENT $448D degrees: 304
COMMENT $448F degrees: 306
COMMENT $4491 degrees: 307
COMMENT $4493 degrees: 309
COMMENT $4495 degrees: 310
COMMENT $4497 degrees: 312
COMMENT $4499 degrees: 313
COMMENT $449B degrees: 314
COMMENT $449D degrees: 316
COMMENT $449F degrees: 317
COMMENT $44A1 degrees: 319
COMMENT $44A3 degrees: 320
COMMENT $44A5 degrees: 321
COMMENT $44A7 degrees: 323
COMMENT $44A9 degrees: 324
COMMENT $44AB degrees: 326
COMMENT $44AD degrees: 327
COMMENT $44AF degrees: 328
COMMENT $44B1 degrees: 330
COMMENT $44B3 degrees: 331
COMMENT $44B5 degrees: 333
COMMENT $44B7 degrees: 334
COMMENT $44B9 degrees: 336
COMMENT $44BB degrees: 337
COMMENT $44BD degrees: 338
COMMENT $44BF degrees: 340
COMMENT $44C1 degrees: 341
COMMENT $44C3 degrees: 343
COMMENT $44C5 degrees: 344
COMMENT $44C7 degrees: 345
COMMENT $44C9 degrees: 347
COMMENT $44CB degrees: 348
COMMENT $44CD degrees: 350
COMMENT $44CF degrees: 351
COMMENT $44D1 degrees: 352
COMMENT $44D3 degrees: 354
COMMENT $44D5 degrees: 355
COMMENT $44D7 degrees: 357
COMMENT $44D9 degrees: 358
COMMENT $44DB degrees: 0
COMMENT_LINE $CA66 jump back addresses
COMMENT_LINE $CA66 for "last" behaviour routine
COMMENT_LINE $CA7B random_seed         ds       1
COMMENT $CA7B if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $CA7D if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $CBD6 ROM
FORCE_SYMBOL $44DD initParticle1
FORCE_NO_SYMBOL $44E0
FORCE_SYMBOL $44E3 Vec_Loop_Count
FORCE_SYMBOL $44E6 desktop_flags
FORCE_SYMBOL $44EB desktop_flags
COMMENT_LINE $44EF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $44EF desktop_flags
FORCE_SYMBOL $44F6 Vec_Loop_Count
COMMENT $44F9 15 seconds particle demo
FORCE_NO_SYMBOL $44F9
FORCE_SYMBOL $44FF desktop_flags
FORCE_SYMBOL $4502 TITLE_MUST_INIT_STAGE
FORCE_SYMBOL $4504 desktop_flags
FORCE_SYMBOL $4507 introStage
FORCE_SYMBOL $450A doAStage
COMMENT $450D Sets the intensity of the
FORCE_SYMBOL $450D Intensity_3F
COMMENT_LINE $4510 jmp playParticle1;
FORCE_NO_SYMBOL $4510
FORCE_SYMBOL $4512 VIA_t1_cnt_lo
COMMENT $4514 playParticleInteractive
FORCE_SYMBOL $4514 playParticle1
FORCE_SYMBOL $4517 desktop_flags
FORCE_SYMBOL $451C desktop_flags
FORCE_SYMBOL $4520 desktop_flags
FORCE_NO_SYMBOL $4527
FORCE_SYMBOL $4529 isDemoMode
COMMENT $452C main11
FORCE_NO_SYMBOL $452C
FORCE_SYMBOL $452F jmpBankIRQ3X
COMMENT_LINE $4532 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4532 ;;;;;;;;;;;;;;;;;;;;;;;;;;; STAGE 2 END ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4532 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $4532 sync and move to y, x
COMMENT $4535 draw, y, x
COMMENT $4538 draw, y, x
COMMENT $453B draw, y, x
COMMENT $453E draw, y, x
COMMENT $4541 draw, y, x
COMMENT $4544 draw, y, x
COMMENT $4547 draw, y, x
COMMENT $454A draw, y, x
COMMENT $454D endmarker
COMMENT $454E sync and move to y, x
COMMENT $4551 additional sync move to y, x
COMMENT $4554 additional sync move to y, x
COMMENT $4557 draw, y, x
COMMENT $455A draw, y, x
COMMENT $455D draw, y, x
COMMENT $4560 endmarker
COMMENT $4561 sync and move to y, x
COMMENT $4564 additional sync move to y, x
COMMENT $4567 draw, y, x
COMMENT $456A draw, y, x
COMMENT $456D draw, y, x
COMMENT $4570 endmarker
COMMENT $4571 sync and move to y, x
COMMENT $4574 additional sync move to y, x
COMMENT $4577 additional sync move to y, x
COMMENT $457A draw, y, x
COMMENT $457D draw, y, x
COMMENT $4580 draw, y, x
COMMENT $4583 endmarker
COMMENT $4584 sync and move to y, x
COMMENT $4587 draw, y, x
COMMENT $458A draw, y, x
COMMENT $458D draw, y, x
COMMENT $4590 endmarker
COMMENT $459B y was $00, now $ee
COMMENT $45BE y is $12
COMMENT $45C3 y was $00, now $ce
COMMENT $45C8 y was $00, now $ee
COMMENT $45E7 y is -$12
COMMENT_LINE $485E pointers are only needed/used in determining the start of the printing
COMMENT_LINE $485E the text itself must be continuous from the
COMMENT_LINE $485E start pointer passed to the scroll function
COMMENT $4BB3 = end
COMMENT_LINE $4BB4 diverse banks, see "if else clauses"
COMMENT_LINE $4BB4 ;;;;;; *****************************************
COMMENT_LINE $4BB4 ;;;;;; * BANK 0 *
COMMENT_LINE $4BB4 ;;;;;; *****************************************
FORCE_NO_SYMBOL $4BB4
FORCE_SYMBOL $4BB7 bossPosY
FORCE_SYMBOL $4BBA boss3MouthAnimCounter
FORCE_NO_SYMBOL $4BBD
FORCE_SYMBOL $4BBF boss3AttachmentScale
COMMENT $4BC2 ; boss1Music
FORCE_NO_SYMBOL $4BC2
COMMENT $4BC5 PLYINIT
FORCE_NO_SYMBOL $4BC5
FORCE_SYMBOL $4BC8 jsrBank1_fromBank0_T1
FORCE_SYMBOL $4BCB songLoop
FORCE_SYMBOL $4BD0 introBossX
FORCE_SYMBOL $4BD4 introPlayerX
COMMENT $4BD7 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $4BD7
COMMENT_LINE $4BDA for some reason or another, VIA doesn't like a
COMMENT_LINE $4BDA std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $4BDA (only on a real vectrex, not Vide)
FORCE_SYMBOL $4BDA VIA_aux_cntl
COMMENT $4BDC and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $4BDC VIA_shift_reg
COMMENT $4BDE bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $4BDE
FORCE_SYMBOL $4BE0 VIA_int_enable
COMMENT_LINE $4BE2 wait 20 cycles till store of aux (these are 23)
COMMENT $4BE2 12
COMMENT $4BE3 3
FORCE_NO_SYMBOL $4BE3
COMMENT_LINE $4BE5 nop      10
FORCE_SYMBOL $4BE5 VIA_aux_cntl
FORCE_NO_SYMBOL $4BE7
FORCE_SYMBOL $4BE9 scoopEnemy1
COMMENT $4BEC Vectrex BIOS recalibration
FORCE_SYMBOL $4BEC Wait_Recal_noShift
COMMENT $4BEF playAKSMusicNoLoop
FORCE_NO_SYMBOL $4BEF
FORCE_SYMBOL $4BF2 jsrBank1_fromBank0_T1
FORCE_SYMBOL $4BF5 calibrationZero50
COMMENT $4BF8 address of data
FORCE_SYMBOL $4BF8 bosssIntroMain
FORCE_NO_SYMBOL $4BFC
FORCE_SYMBOL $4BFF VIA_t1_cnt_lo
FORCE_NO_SYMBOL $4C01
FORCE_SYMBOL $4C03 introBossX
COMMENT $4C06 Store Y in D/A register
FORCE_SYMBOL $4C06 VIA_port_a
COMMENT $4C08 Blank low, zero high?
FORCE_NO_SYMBOL $4C08
FORCE_SYMBOL $4C0A VIA_cntl
COMMENT $4C0D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4C0D VIA_port_b
COMMENT_LINE $4C10 nop
COMMENT $4C10 Disable mux
FORCE_SYMBOL $4C10 VIA_port_b
COMMENT $4C12 Store X in D/A register
FORCE_SYMBOL $4C12 VIA_port_a
COMMENT $4C14 enable timer
FORCE_SYMBOL $4C14 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $4C18
FORCE_NO_SYMBOL $4C1C
FORCE_SYMBOL $4C1E VIA_int_flags
FORCE_SYMBOL $4C22 SMVB50_drawSmart
FORCE_NO_SYMBOL $4C27
FORCE_SYMBOL $4C29 VIA_int_flags
FORCE_SYMBOL $4C2D SMVB50_drawSmart
FORCE_SYMBOL $4C30 Intensity_5F
FORCE_NO_SYMBOL $4C33
FORCE_SYMBOL $4C35 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $4C37
FORCE_SYMBOL $4C39 introBossX
COMMENT $4C3C Store Y in D/A register
FORCE_SYMBOL $4C3C VIA_port_a
COMMENT $4C3E Blank low, zero high?
FORCE_NO_SYMBOL $4C3E
FORCE_SYMBOL $4C40 VIA_cntl
COMMENT $4C43 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4C43 VIA_port_b
COMMENT_LINE $4C46 nop
COMMENT $4C46 Disable mux
FORCE_SYMBOL $4C46 VIA_port_b
COMMENT $4C48 Store X in D/A register
FORCE_SYMBOL $4C48 VIA_port_a
COMMENT $4C4A enable timer
FORCE_SYMBOL $4C4A VIA_t1_cnt_hi
FORCE_SYMBOL $4C4C bossIntroStage
FORCE_NO_SYMBOL $4C4F
FORCE_NO_SYMBOL $4C53
COMMENT $4C57 address of data
FORCE_SYMBOL $4C57 bossShots_0
FORCE_SYMBOL $4C5C bossShots_1
COMMENT $4C61 address of data
FORCE_SYMBOL $4C61 bossShots_2
FORCE_NO_SYMBOL $4C64
FORCE_SYMBOL $4C66 VIA_int_flags
FORCE_SYMBOL $4C6A SMVB50_drawSmart
FORCE_NO_SYMBOL $4C6D
FORCE_SYMBOL $4C6F VIA_t1_cnt_lo
FORCE_SYMBOL $4C71 drawBossPlayerOnly
FORCE_NO_SYMBOL $4C77
FORCE_SYMBOL $4C7B introBossX
FORCE_SYMBOL $4C80 introBossX
FORCE_SYMBOL $4C83 introPlayerX
FORCE_SYMBOL $4C86 scoopEnemy1
FORCE_SYMBOL $4C8B scoopEnemy1
FORCE_SYMBOL $4C8E scoopEnemy1
FORCE_NO_SYMBOL $4C91
FORCE_SYMBOL $4C95 bossIntroStage
FORCE_NO_SYMBOL $4C98
FORCE_SYMBOL $4C9C bossIntroStage
FORCE_SYMBOL $4C9F Boss1IntroLoop
COMMENT $4CA2 getButtonState
FORCE_NO_SYMBOL $4CA2
FORCE_SYMBOL $4CA5 jsrBank1_fromBank0_T1
FORCE_SYMBOL $4CA8 current_button_state
FORCE_NO_SYMBOL $4CAB
COMMENT $4CAD pressed, but last time was unpressed
FORCE_NO_SYMBOL $4CAD
COMMENT_LINE $4CB4 there might be some VLists for animation, in case I leave these in place...
COMMENT_LINE $4CB4 bosssIntroClosed
COMMENT_LINE $4CB4 DW       0
COMMENT_LINE $4CB4 bosssIntroOpen
COMMENT_LINE $4CB4 DW       0
COMMENT $4CB4 list of all single vectorlists in this
COMMENT $4CFC y was -$04; x was $04; y now $CE
COMMENT $4D01 y was -$04; x was $04, y now $ee
COMMENT $4D06 y was -$04; x was $04; y now $CE
COMMENT $4D0B y was -$04; x was $04, y now $ee
COMMENT $4D5D y was $04, now $ce
COMMENT $4EDC y was $04, now $ce
COMMENT $4F5C y was $00, now $ee
COMMENT $502D y was -$03, now $ee
COMMENT $50A7 y was $08, now $ee
COMMENT $5103 y was $1A, now $ee
COMMENT $5158 y is $06
COMMENT $51E9 y is $06
COMMENT $527A y is $06
COMMENT_LINE $5289 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5289 single swarm members attack?
COMMENT_LINE $5289 diverse banks, see "if else clauses"
COMMENT_LINE $5289 Boss "Insect Queen"
COMMENT_LINE $5289 ;;;;;; *****************************************
COMMENT_LINE $5289 ;;;;;; * BANK 0 *
COMMENT_LINE $5289 ;;;;;; *****************************************
FORCE_SYMBOL $5289 ANIMATION_DELAY
FORCE_SYMBOL $528B antennaDelayCounter
FORCE_SYMBOL $528E antennaAnimCounter
FORCE_SYMBOL $5291 songLoop
FORCE_SYMBOL $5296 introBossX
FORCE_SYMBOL $529A introPlayerX
FORCE_NO_SYMBOL $529D
FORCE_SYMBOL $529F scoopEnemy1
COMMENT $52A2 ; boss2Music
FORCE_NO_SYMBOL $52A2
COMMENT $52A5 PLYINIT
FORCE_NO_SYMBOL $52A5
FORCE_SYMBOL $52A8 jsrBank1_fromBank0_T1
COMMENT $52AB ensure that shift can generate interrupt
FORCE_NO_SYMBOL $52AB
COMMENT_LINE $52AE for some reason or another, VIA doesn't like a
COMMENT_LINE $52AE std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $52AE (only on a real vectrex, not Vide)
FORCE_SYMBOL $52AE VIA_aux_cntl
COMMENT $52B0 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $52B0 VIA_shift_reg
COMMENT $52B2 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $52B2
FORCE_SYMBOL $52B4 VIA_int_enable
COMMENT_LINE $52B6 wait 20 cycles till store of aux (these are 23)
COMMENT $52B6 12
COMMENT $52B7 3
FORCE_NO_SYMBOL $52B7
COMMENT_LINE $52B9 nop      10
FORCE_SYMBOL $52B9 VIA_aux_cntl
COMMENT $52BB Vectrex BIOS recalibration
FORCE_SYMBOL $52BB Wait_Recal_noShift
COMMENT_LINE $52BE jsr      Intensity_5F
FORCE_SYMBOL $52BE Intensity_3F
COMMENT $52C1 playAKSMusicNoLoop
FORCE_NO_SYMBOL $52C1
FORCE_SYMBOL $52C4 jsrBank1_fromBank0_T1
FORCE_SYMBOL $52C7 calibrationZero50
COMMENT $52CA address of data
FORCE_SYMBOL $52CA Boss2IntroList
FORCE_NO_SYMBOL $52CE
FORCE_SYMBOL $52D0 VIA_t1_cnt_lo
FORCE_SYMBOL $52D7 introBossX
COMMENT $52DA Store Y in D/A register
FORCE_SYMBOL $52DA VIA_port_a
COMMENT $52DC Blank low, zero high?
FORCE_NO_SYMBOL $52DC
FORCE_SYMBOL $52DE VIA_cntl
COMMENT $52E1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $52E1 VIA_port_b
COMMENT_LINE $52E4 nop
COMMENT $52E4 Disable mux
FORCE_SYMBOL $52E4 VIA_port_b
COMMENT $52E6 Store X in D/A register
FORCE_SYMBOL $52E6 VIA_port_a
COMMENT $52E8 enable timer
FORCE_SYMBOL $52E8 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $52EA
FORCE_SYMBOL $52EC VIA_int_flags
FORCE_SYMBOL $52F0 SMVB50_drawSmart
FORCE_SYMBOL $52F5 bossIntroStage
FORCE_NO_SYMBOL $52F8
FORCE_NO_SYMBOL $52FC
COMMENT $5300 address of data
FORCE_SYMBOL $5300 AntennaOpened
FORCE_SYMBOL $5306 AntennaMiddle
COMMENT $530C address of data
FORCE_SYMBOL $530C AntennaClosed
COMMENT_LINE $5310 #0 open
COMMENT_LINE $5310 #1 half
COMMENT_LINE $5310 #2 closed
FORCE_NO_SYMBOL $5310
FORCE_SYMBOL $5312 VIA_t1_cnt_lo
FORCE_SYMBOL $5319 introBossX
COMMENT $531C Store Y in D/A register
FORCE_SYMBOL $531C VIA_port_a
COMMENT $531E Blank low, zero high?
FORCE_NO_SYMBOL $531E
FORCE_SYMBOL $5320 VIA_cntl
COMMENT $5323 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5323 VIA_port_b
COMMENT_LINE $5326 nop
COMMENT $5326 Disable mux
FORCE_SYMBOL $5326 VIA_port_b
COMMENT $5328 Store X in D/A register
FORCE_SYMBOL $5328 VIA_port_a
COMMENT $532A enable timer
FORCE_SYMBOL $532A VIA_t1_cnt_hi
FORCE_NO_SYMBOL $532C
FORCE_SYMBOL $532E VIA_int_flags
FORCE_SYMBOL $5332 SMVB50_drawSmart
FORCE_NO_SYMBOL $533C
FORCE_SYMBOL $5340 introBossX
FORCE_SYMBOL $5345 introBossX
FORCE_SYMBOL $5348 introPlayerX
FORCE_SYMBOL $534B scoopEnemy1
FORCE_SYMBOL $5350 scoopEnemy1
FORCE_SYMBOL $5353 scoopEnemy1
FORCE_NO_SYMBOL $5356
FORCE_SYMBOL $535A bossIntroStage
FORCE_NO_SYMBOL $535D
FORCE_SYMBOL $5361 bossIntroStage
FORCE_SYMBOL $5364 boss2IntroLoop
COMMENT $5367 getButtonState
FORCE_NO_SYMBOL $5367
FORCE_SYMBOL $536A jsrBank1_fromBank0_T1
FORCE_SYMBOL $536D current_button_state
FORCE_NO_SYMBOL $5370
COMMENT $5372 pressed, but last time was unpressed
FORCE_NO_SYMBOL $5372
COMMENT_LINE $5379 ...
COMMENT_LINE $5379 assuming Zero50 Calibration done
COMMENT_LINE $5379 uses animDelayCounter for animation decrease and counter
FORCE_SYMBOL $5379 Intensity_5F
COMMENT $537C address of data
FORCE_SYMBOL $537C BossPlayer
FORCE_NO_SYMBOL $5380
FORCE_SYMBOL $5383 VIA_t1_cnt_lo
FORCE_SYMBOL $5385 introPlayerX
COMMENT $5388 Store Y in D/A register
FORCE_SYMBOL $5388 VIA_port_a
COMMENT $538A Blank low, zero high?
FORCE_NO_SYMBOL $538A
FORCE_SYMBOL $538C VIA_cntl
COMMENT $538F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $538F VIA_port_b
COMMENT_LINE $5392 nop
COMMENT $5392 Disable mux
FORCE_SYMBOL $5392 VIA_port_b
COMMENT $5394 Store X in D/A register
FORCE_SYMBOL $5394 VIA_port_a
COMMENT $5396 enable timer
FORCE_SYMBOL $5396 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $539A
FORCE_NO_SYMBOL $539E
FORCE_SYMBOL $53A0 VIA_int_flags
FORCE_SYMBOL $53A4 SMVB50_drawSmart
FORCE_NO_SYMBOL $53AC
COMMENT $53B0 one global animation counter
FORCE_SYMBOL $53B0 animDelayCounter
COMMENT $53B5 number of animation steps ANIMATION_DELAY
FORCE_NO_SYMBOL $53B5
FORCE_SYMBOL $53B7 animDelayCounter
FORCE_SYMBOL $53BA animDelayCounter
FORCE_NO_SYMBOL $53BD
FORCE_SYMBOL $53BF VIA_int_flags
FORCE_SYMBOL $53C3 SMVB50_drawSmart
FORCE_SYMBOL $53C6 Intensity_7F
COMMENT $53C9 current animation frame
FORCE_SYMBOL $53C9 animDelayCounter
COMMENT $53CC times two since it is a word pointer
COMMENT $53CD address of data
FORCE_SYMBOL $53CD PlayerShipAccelAnim
FORCE_NO_SYMBOL $53D2
FORCE_SYMBOL $53D5 VIA_t1_cnt_lo
FORCE_SYMBOL $53D7 introPlayerX
COMMENT $53DA Store Y in D/A register
FORCE_SYMBOL $53DA VIA_port_a
COMMENT $53DC Blank low, zero high?
FORCE_NO_SYMBOL $53DC
FORCE_SYMBOL $53DE VIA_cntl
COMMENT $53E1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $53E1 VIA_port_b
COMMENT_LINE $53E4 nop
COMMENT $53E4 Disable mux
FORCE_SYMBOL $53E4 VIA_port_b
COMMENT $53E6 Store X in D/A register
FORCE_SYMBOL $53E6 VIA_port_a
COMMENT $53E8 enable timer
FORCE_SYMBOL $53E8 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $53EA
FORCE_SYMBOL $53EC VIA_int_flags
FORCE_SYMBOL $53F0 SMVB50_drawSmart
COMMENT_LINE $53F3 ...
COMMENT $53F3 list of all single vectorlists in this
COMMENT $5430 list of all single vectorlists in this
COMMENT $546D list of all single vectorlists in this
COMMENT $54AA list of all single vectorlists in this
COMMENT $55A4 list of all single vectorlists in this
COMMENT $55C1 y is -$58
COMMENT $5711 list of all single vectorlists in this
COMMENT $5724 y was -$07; x was $03, y now $ee
COMMENT_LINE $5828 diverse banks, see "if else clauses"
COMMENT_LINE $5828 ;;;;;; *****************************************
COMMENT_LINE $5828 ;;;;;; * BANK 0 *
COMMENT_LINE $5828 ;;;;;; *****************************************
FORCE_NO_SYMBOL $5828
FORCE_SYMBOL $582B bossPosY
FORCE_SYMBOL $582E boss3MouthAnimCounter
FORCE_NO_SYMBOL $5831
FORCE_SYMBOL $5833 boss3AttachmentScale
COMMENT $5836 ; boss3Music
FORCE_NO_SYMBOL $5836
COMMENT $5839 PLYINIT
FORCE_NO_SYMBOL $5839
FORCE_SYMBOL $583C jsrBank1_fromBank0_T1
FORCE_SYMBOL $583F songLoop
FORCE_SYMBOL $5844 introBossX
FORCE_SYMBOL $5848 introPlayerX
COMMENT $584B ensure that shift can generate interrupt
FORCE_NO_SYMBOL $584B
COMMENT_LINE $584E for some reason or another, VIA doesn't like a
COMMENT_LINE $584E std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $584E (only on a real vectrex, not Vide)
FORCE_SYMBOL $584E VIA_aux_cntl
COMMENT $5850 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $5850 VIA_shift_reg
COMMENT $5852 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $5852
FORCE_SYMBOL $5854 VIA_int_enable
COMMENT_LINE $5856 wait 20 cycles till store of aux (these are 23)
COMMENT $5856 12
COMMENT $5857 3
FORCE_NO_SYMBOL $5857
COMMENT_LINE $5859 nop      10
FORCE_SYMBOL $5859 VIA_aux_cntl
FORCE_NO_SYMBOL $585B
FORCE_SYMBOL $585D scoopEnemy1
COMMENT $5860 Vectrex BIOS recalibration
FORCE_SYMBOL $5860 Wait_Recal_noShift
COMMENT_LINE $5863 jsr      Intensity_5F
FORCE_SYMBOL $5863 Intensity_3F
COMMENT $5866 playAKSMusicNoLoop
FORCE_NO_SYMBOL $5866
FORCE_SYMBOL $5869 jsrBank1_fromBank0_T1
FORCE_SYMBOL $586C calibrationZero50
COMMENT $586F address of data
FORCE_SYMBOL $586F SinsitarIntroMain
FORCE_NO_SYMBOL $5873
FORCE_SYMBOL $5875 VIA_t1_cnt_lo
FORCE_SYMBOL $587C introBossX
COMMENT $587F Store Y in D/A register
FORCE_SYMBOL $587F VIA_port_a
COMMENT $5881 Blank low, zero high?
FORCE_NO_SYMBOL $5881
FORCE_SYMBOL $5883 VIA_cntl
COMMENT $5886 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5886 VIA_port_b
COMMENT_LINE $5889 nop
COMMENT $5889 Disable mux
FORCE_SYMBOL $5889 VIA_port_b
COMMENT $588B Store X in D/A register
FORCE_SYMBOL $588B VIA_port_a
COMMENT $588D enable timer
FORCE_SYMBOL $588D VIA_t1_cnt_hi
FORCE_NO_SYMBOL $588F
FORCE_SYMBOL $5891 VIA_int_flags
FORCE_SYMBOL $5895 SMVB50_drawSmart
FORCE_SYMBOL $589A bossIntroStage
FORCE_NO_SYMBOL $589D
FORCE_NO_SYMBOL $58A1
COMMENT $58A5 address of data
FORCE_SYMBOL $58A5 SinsitarIntroClosed
FORCE_SYMBOL $58AB SinsitarIntroMiddle
COMMENT $58B1 address of data
FORCE_SYMBOL $58B1 SinsitarIntroOpen
COMMENT_LINE $58B5 #0 open
COMMENT_LINE $58B5 #1 half
COMMENT_LINE $58B5 #2 closed
FORCE_NO_SYMBOL $58B5
FORCE_SYMBOL $58B7 VIA_t1_cnt_lo
FORCE_SYMBOL $58BE introBossX
COMMENT $58C1 Store Y in D/A register
FORCE_SYMBOL $58C1 VIA_port_a
COMMENT $58C3 Blank low, zero high?
FORCE_NO_SYMBOL $58C3
FORCE_SYMBOL $58C5 VIA_cntl
COMMENT $58C8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $58C8 VIA_port_b
COMMENT_LINE $58CB nop
COMMENT $58CB Disable mux
FORCE_SYMBOL $58CB VIA_port_b
COMMENT $58CD Store X in D/A register
FORCE_SYMBOL $58CD VIA_port_a
COMMENT $58CF enable timer
FORCE_SYMBOL $58CF VIA_t1_cnt_hi
FORCE_NO_SYMBOL $58D1
FORCE_SYMBOL $58D3 VIA_int_flags
FORCE_SYMBOL $58D7 SMVB50_drawSmart
FORCE_SYMBOL $58DC drawBossPlayerOnly
FORCE_NO_SYMBOL $58E2
FORCE_SYMBOL $58E6 introBossX
FORCE_SYMBOL $58EB introBossX
FORCE_SYMBOL $58EE introPlayerX
FORCE_SYMBOL $58F1 scoopEnemy1
FORCE_SYMBOL $58F6 scoopEnemy1
FORCE_SYMBOL $58F9 scoopEnemy1
FORCE_NO_SYMBOL $58FC
FORCE_SYMBOL $5900 bossIntroStage
FORCE_NO_SYMBOL $5903
FORCE_SYMBOL $5907 bossIntroStage
FORCE_SYMBOL $590A boss3IntroLoop
COMMENT $590D getButtonState
FORCE_NO_SYMBOL $590D
FORCE_SYMBOL $5910 jsrBank1_fromBank0_T1
FORCE_SYMBOL $5913 current_button_state
FORCE_NO_SYMBOL $5916
COMMENT $5918 pressed, but last time was unpressed
FORCE_NO_SYMBOL $5918
COMMENT $591F list of all single vectorlists in this
COMMENT $59CC list of all single vectorlists in this
COMMENT $5A79 list of all single vectorlists in this
COMMENT $5B26 list of all single vectorlists in this
COMMENT $5BD5 y was -$12, now $ee
COMMENT $5BF8 y was -$2E, now $ce
COMMENT $5C0C y is $4A
COMMENT $5C8B y is -$05
COMMENT_LINE $5D65 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5D65 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5D65 diverse banks, see "if else clauses"
COMMENT_LINE $5D65 ;;;;;; *****************************************
COMMENT_LINE $5D65 ;;;;;; * BANK 0 *
COMMENT_LINE $5D65 ;;;;;; *****************************************
FORCE_SYMBOL $5D65 boss4WeaponActive
FORCE_NO_SYMBOL $5D68
FORCE_SYMBOL $5D6B bossPosY
FORCE_SYMBOL $5D6E boss4WeaponAnimCounter
COMMENT $5D71 ; boss4Music
FORCE_NO_SYMBOL $5D71
COMMENT $5D74 PLYINIT
FORCE_NO_SYMBOL $5D74
FORCE_SYMBOL $5D77 jsrBank1_fromBank0_T1
FORCE_SYMBOL $5D7A songLoop
FORCE_SYMBOL $5D7F introBossX
FORCE_SYMBOL $5D83 introPlayerX
COMMENT $5D86 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $5D86
COMMENT_LINE $5D89 for some reason or another, VIA doesn't like a
COMMENT_LINE $5D89 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $5D89 (only on a real vectrex, not Vide)
FORCE_SYMBOL $5D89 VIA_aux_cntl
COMMENT $5D8B and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $5D8B VIA_shift_reg
COMMENT $5D8D bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $5D8D
FORCE_SYMBOL $5D8F VIA_int_enable
COMMENT_LINE $5D91 wait 20 cycles till store of aux (these are 23)
COMMENT $5D91 12
COMMENT $5D92 3
FORCE_NO_SYMBOL $5D92
COMMENT_LINE $5D94 nop      10
FORCE_SYMBOL $5D94 VIA_aux_cntl
FORCE_NO_SYMBOL $5D96
FORCE_SYMBOL $5D98 scoopEnemy1
COMMENT $5D9B Vectrex BIOS recalibration
FORCE_SYMBOL $5D9B Wait_Recal_noShift
COMMENT_LINE $5D9E jsr      Intensity_5F
FORCE_SYMBOL $5D9E Intensity_3F
COMMENT $5DA1 playAKSMusicNoLoop
FORCE_NO_SYMBOL $5DA1
FORCE_SYMBOL $5DA4 jsrBank1_fromBank0_T1
FORCE_SYMBOL $5DA7 calibrationZero50
COMMENT $5DAA address of data
FORCE_SYMBOL $5DAA Boss4IntroList
FORCE_NO_SYMBOL $5DAE
FORCE_SYMBOL $5DB0 VIA_t1_cnt_lo
FORCE_SYMBOL $5DB7 introBossX
COMMENT $5DBA Store Y in D/A register
FORCE_SYMBOL $5DBA VIA_port_a
COMMENT $5DBC Blank low, zero high?
FORCE_NO_SYMBOL $5DBC
FORCE_SYMBOL $5DBE VIA_cntl
COMMENT $5DC1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5DC1 VIA_port_b
COMMENT_LINE $5DC4 nop
COMMENT $5DC4 Disable mux
FORCE_SYMBOL $5DC4 VIA_port_b
COMMENT $5DC6 Store X in D/A register
FORCE_SYMBOL $5DC6 VIA_port_a
COMMENT $5DC8 enable timer
FORCE_SYMBOL $5DC8 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $5DCA
FORCE_SYMBOL $5DCC VIA_int_flags
FORCE_SYMBOL $5DD0 SMVB50_drawSmart
COMMENT_LINE $5DD5 twinkler
FORCE_SYMBOL $5DD6 introBossX
COMMENT $5DD9 Store Y in D/A register
FORCE_SYMBOL $5DD9 VIA_port_a
COMMENT $5DDB Blank low, zero high?
FORCE_NO_SYMBOL $5DDB
FORCE_SYMBOL $5DDD VIA_cntl
COMMENT $5DE0 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5DE0 VIA_port_b
COMMENT_LINE $5DE3 nop
COMMENT $5DE3 Disable mux
FORCE_SYMBOL $5DE3 VIA_port_b
COMMENT $5DE5 Store X in D/A register
FORCE_SYMBOL $5DE5 VIA_port_a
COMMENT $5DE7 enable timer
FORCE_SYMBOL $5DE7 VIA_t1_cnt_hi
FORCE_SYMBOL $5DE9 random_seed
FORCE_NO_SYMBOL $5DEF
FORCE_SYMBOL $5DF1 random_seed
FORCE_NO_SYMBOL $5DF4
FORCE_SYMBOL $5DF6 Boss4IntroTwinklerAnim
FORCE_NO_SYMBOL $5DFC
FORCE_SYMBOL $5DFE VIA_int_flags
FORCE_SYMBOL $5E02 SMVB50_drawSmart
FORCE_SYMBOL $5E05 random_seed
FORCE_NO_SYMBOL $5E0B
FORCE_SYMBOL $5E0D random_seed
FORCE_SYMBOL $5E11 introBossX
COMMENT $5E14 Store Y in D/A register
FORCE_SYMBOL $5E14 VIA_port_a
COMMENT $5E16 Blank low, zero high?
FORCE_NO_SYMBOL $5E16
FORCE_SYMBOL $5E18 VIA_cntl
COMMENT $5E1B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5E1B VIA_port_b
COMMENT_LINE $5E1E nop
COMMENT $5E1E Disable mux
FORCE_SYMBOL $5E1E VIA_port_b
COMMENT $5E20 Store X in D/A register
FORCE_SYMBOL $5E20 VIA_port_a
COMMENT $5E22 enable timer
FORCE_SYMBOL $5E22 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $5E24
FORCE_SYMBOL $5E26 Boss4IntroTwinklerAnim
FORCE_NO_SYMBOL $5E2C
FORCE_SYMBOL $5E2E VIA_int_flags
FORCE_SYMBOL $5E32 SMVB50_drawSmart
FORCE_SYMBOL $5E35 random_seed
FORCE_NO_SYMBOL $5E3B
FORCE_SYMBOL $5E3D random_seed
FORCE_SYMBOL $5E41 introBossX
COMMENT $5E44 Store Y in D/A register
FORCE_SYMBOL $5E44 VIA_port_a
COMMENT $5E46 Blank low, zero high?
FORCE_NO_SYMBOL $5E46
FORCE_SYMBOL $5E48 VIA_cntl
COMMENT $5E4B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5E4B VIA_port_b
COMMENT_LINE $5E4E nop
COMMENT $5E4E Disable mux
FORCE_SYMBOL $5E4E VIA_port_b
COMMENT $5E50 Store X in D/A register
FORCE_SYMBOL $5E50 VIA_port_a
COMMENT $5E52 enable timer
FORCE_SYMBOL $5E52 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $5E54
FORCE_SYMBOL $5E56 Boss4IntroTwinklerAnim
FORCE_NO_SYMBOL $5E5C
FORCE_SYMBOL $5E5E VIA_int_flags
FORCE_SYMBOL $5E62 SMVB50_drawSmart
FORCE_SYMBOL $5E65 random_seed
FORCE_NO_SYMBOL $5E6B
FORCE_SYMBOL $5E6D random_seed
FORCE_NO_SYMBOL $5E70
FORCE_SYMBOL $5E72 Boss4IntroTwinklerAnim
FORCE_SYMBOL $5E79 introBossX
COMMENT $5E7C Store Y in D/A register
FORCE_SYMBOL $5E7C VIA_port_a
COMMENT $5E7E Blank low, zero high?
FORCE_NO_SYMBOL $5E7E
FORCE_SYMBOL $5E80 VIA_cntl
COMMENT $5E83 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5E83 VIA_port_b
COMMENT_LINE $5E86 nop
COMMENT $5E86 Disable mux
FORCE_SYMBOL $5E86 VIA_port_b
COMMENT $5E88 Store X in D/A register
FORCE_SYMBOL $5E88 VIA_port_a
COMMENT $5E8A enable timer
FORCE_SYMBOL $5E8A VIA_t1_cnt_hi
FORCE_NO_SYMBOL $5E8C
FORCE_SYMBOL $5E8E VIA_int_flags
FORCE_SYMBOL $5E92 SMVB50_drawSmart
FORCE_SYMBOL $5E95 drawBossPlayerOnly
FORCE_NO_SYMBOL $5E9B
FORCE_SYMBOL $5E9F introBossX
FORCE_SYMBOL $5EA4 introBossX
FORCE_SYMBOL $5EA7 introPlayerX
FORCE_SYMBOL $5EAA scoopEnemy1
FORCE_SYMBOL $5EAF scoopEnemy1
FORCE_SYMBOL $5EB2 boss4IntroLoop
COMMENT $5EB5 getButtonState
FORCE_NO_SYMBOL $5EB5
FORCE_SYMBOL $5EB8 jsrBank1_fromBank0_T1
FORCE_SYMBOL $5EBB current_button_state
FORCE_NO_SYMBOL $5EBE
COMMENT $5EC0 pressed, but last time was unpressed
FORCE_NO_SYMBOL $5EC0
COMMENT $5EC7 list of all single vectorlists in this
COMMENT $5EDD y was $00, now $ce
COMMENT $5EE2 y was $00, now $ee
COMMENT $5EE7 y was $00, now $ce
COMMENT $5EEC y was $00, now $ee
COMMENT $5F28 y was $00, now $ee
COMMENT $5FA3 y was $00, now $ce
COMMENT $5FA8 y was $00, now $ee
COMMENT $5FC1 y was $00, now $ce
COMMENT $5FC6 y was $00, now $ee
COMMENT $5FE4 y was $00, now $ce
COMMENT $5FE9 y was $00, now $ee
COMMENT $6047 list of all single vectorlists in this
COMMENT $6085 32 easy MOD
COMMENT_LINE $625A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $625A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $625A bank 0
COMMENT_LINE $625A ---------------------------------------------
COMMENT_LINE $625A a display list in y
COMMENT_LINE $625A returns in U the number of pressed button (3,4)
COMMENT $625A no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $625A Vec_Music_Flag
COMMENT $625D shadow regs
FORCE_SYMBOL $625D Init_Music_Buf
COMMENT $6260 ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $6260 Do_Sound
COMMENT $6263 get button status
FORCE_SYMBOL $6263 getButtonState
COMMENT $6266 button 4 unpause
FORCE_NO_SYMBOL $6266
FORCE_NO_SYMBOL $6268
FORCE_SYMBOL $626F VIA_shift_reg
COMMENT $6271 Vectrex BIOS recalibration
FORCE_SYMBOL $6271 Wait_Recal_noShift
FORCE_NO_SYMBOL $6274
COMMENT $6276 Store intensity in D/A
FORCE_SYMBOL $6276 VIA_port_a
COMMENT $6278 mux disabled channel 2
FORCE_NO_SYMBOL $6278
FORCE_SYMBOL $627B VIA_port_b
COMMENT $627D mux enabled channel 2
FORCE_SYMBOL $627D VIA_port_b
COMMENT $627F turn off mux
FORCE_SYMBOL $627F VIA_port_b
FORCE_SYMBOL $6283 Vec_Text_Height
FORCE_NO_SYMBOL $6286
FORCE_SYMBOL $6288 Vec_Text_Width
FORCE_NO_SYMBOL $628B
FORCE_SYMBOL $628D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $628F
COMMENT $6292 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $6292
COMMENT_LINE $6295 for some reason or another, VIA doesn't like a
COMMENT_LINE $6295 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $6295 (only on a real vectrex, not Vide)
FORCE_SYMBOL $6295 VIA_aux_cntl
COMMENT $6297 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $6297 VIA_shift_reg
COMMENT $6299 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $6299
FORCE_SYMBOL $629B VIA_int_enable
COMMENT_LINE $629D wait 20 cycles till store of aux (these are 23)
COMMENT $629D 12
COMMENT $629E 3
FORCE_NO_SYMBOL $629E
COMMENT_LINE $62A0 nop      10
FORCE_SYMBOL $62A0 VIA_aux_cntl
FORCE_SYMBOL $62A8 syncPrintStrd
FORCE_NO_SYMBOL $62AB
COMMENT $62AD /BLANK low and /ZERO low
FORCE_SYMBOL $62AD VIA_cntl
COMMENT $62B1 get button status
FORCE_SYMBOL $62B1 getButtonState
FORCE_NO_SYMBOL $62B4
FORCE_NO_SYMBOL $62B8
FORCE_NO_SYMBOL $62BC
FORCE_NO_SYMBOL $62C1
COMMENT $62C4 get button status
FORCE_SYMBOL $62C4 getButtonState
COMMENT $62C7 button 4 unpause
FORCE_NO_SYMBOL $62C7
FORCE_NO_SYMBOL $62C9
FORCE_NO_SYMBOL $62CD
COMMENT_LINE $62D0 ---------------------------------------------
COMMENT_LINE $679F ---------------------------------------------
COMMENT_LINE $682F ---------------------------------------------
FORCE_SYMBOL $68CB displayListHS
FORCE_SYMBOL $68CF showMESSAGE
COMMENT $68D2 HSloop1
FORCE_NO_SYMBOL $68D2
FORCE_SYMBOL $68D5 jmpBank1X
COMMENT_LINE $68D8 ---------------------------------------------
FORCE_SYMBOL $6928 displayListHSPure
FORCE_SYMBOL $692C showMESSAGE
COMMENT $692F edithighscoreinner
FORCE_NO_SYMBOL $692F
FORCE_SYMBOL $6932 jmpBank1X
COMMENT_LINE $6935 ------------------------
FORCE_SYMBOL $6A2E displayListPS
FORCE_SYMBOL $6A32 showMESSAGE
FORCE_SYMBOL $6A35 displayListPS1
FORCE_SYMBOL $6A39 showMESSAGE
COMMENT $6A3C PSloop1
FORCE_NO_SYMBOL $6A3C
FORCE_SYMBOL $6A3F jmpBank2_from0
COMMENT_LINE $6A42 ------------------------
FORCE_SYMBOL $6AFA displayListMS
FORCE_SYMBOL $6AFE showMESSAGE
COMMENT_LINE $6B01 correct highscore size
FORCE_NO_SYMBOL $6B01
FORCE_SYMBOL $6B04 Vec_Text_HW
COMMENT $6B07 MSloop1
FORCE_NO_SYMBOL $6B07
FORCE_SYMBOL $6B0A jmpBankIRQ3X
COMMENT_LINE $6B0D ------------------------
FORCE_SYMBOL $6C78 displayListTI1
FORCE_SYMBOL $6C7C showMESSAGE
FORCE_SYMBOL $6C7F displayListTI2
FORCE_SYMBOL $6C83 showMESSAGE
COMMENT $6C86 Titleloop1
FORCE_NO_SYMBOL $6C86
FORCE_SYMBOL $6C89 jmpBankIRQ2X
COMMENT_LINE $6C8C ------------------------
FORCE_SYMBOL $6E70 displayListAS1
FORCE_SYMBOL $6E74 showMESSAGE
FORCE_SYMBOL $6E77 displayListAS2a
FORCE_SYMBOL $6E7B showMESSAGE
FORCE_SYMBOL $6E7E displayListAS2
FORCE_SYMBOL $6E82 showMESSAGE
COMMENT $6E85 displayAchievementReturn
FORCE_NO_SYMBOL $6E85
FORCE_SYMBOL $6E88 jmpBank1X
COMMENT_LINE $6E8B ------------------------
COMMENT_LINE $6E8B ------------------------
FORCE_SYMBOL $727D displayListShop1
FORCE_SYMBOL $7281 showMESSAGE
FORCE_SYMBOL $7284 displayListShop2
FORCE_SYMBOL $7288 showMESSAGE
FORCE_SYMBOL $728B displayListShop3
FORCE_SYMBOL $728F showMESSAGE
FORCE_SYMBOL $7292 displayListShop4
FORCE_SYMBOL $7296 showMESSAGE
FORCE_SYMBOL $7299 displayListShop5
FORCE_SYMBOL $729D showMESSAGE
FORCE_SYMBOL $72A0 displayListShop6
FORCE_SYMBOL $72A4 showMESSAGE
FORCE_NO_SYMBOL $72A7
FORCE_SYMBOL $72AA Vec_Text_HW
COMMENT $72AD shopLoop
FORCE_NO_SYMBOL $72AD
FORCE_SYMBOL $72B0 jmpBank1X
COMMENT_LINE $72B3 ------------------------
COMMENT_LINE $73DC op2Stringt7         db       "CHOSE BETWEEN NORMAL/HARDCORE.",$80
FORCE_SYMBOL $758C displayListOP1
FORCE_SYMBOL $7590 showMESSAGE
FORCE_SYMBOL $7593 displayListOP2
FORCE_SYMBOL $7597 showMESSAGE
FORCE_SYMBOL $759A displayListOP3
FORCE_SYMBOL $759E showMESSAGE
FORCE_SYMBOL $75A1 displayListOP4
FORCE_SYMBOL $75A5 showMESSAGE
FORCE_SYMBOL $75A8 displayListOP5
FORCE_SYMBOL $75AC showMESSAGE
COMMENT $75AF optionsLoop
FORCE_NO_SYMBOL $75AF
FORCE_SYMBOL $75B2 jmpBankIRQ2X
COMMENT_LINE $75B5 ------------------------
FORCE_SYMBOL $7657 displayListFirst1
FORCE_SYMBOL $765B showMESSAGE
COMMENT $765E doCalib0
FORCE_NO_SYMBOL $765E
FORCE_SYMBOL $7661 jmpBankIRQ2X
COMMENT_LINE $7664 ------------------------
FORCE_SYMBOL $770A displayListFirst1bd
FORCE_SYMBOL $770E showMESSAGE
COMMENT_LINE $7711 correct highscore size
FORCE_NO_SYMBOL $7711
FORCE_SYMBOL $7714 Vec_Text_HW
COMMENT $7717 backFromBothDeathMessage
FORCE_NO_SYMBOL $7717
FORCE_SYMBOL $771A jmpBankIRQ3X
FORCE_SYMBOL $773B displaySecretMessageNone
FORCE_SYMBOL $773F showMESSAGE
COMMENT_LINE $7742 correct highscore size
FORCE_NO_SYMBOL $7742
FORCE_SYMBOL $7745 Vec_Text_HW
FORCE_SYMBOL $77B0 displaySecretMessage1
FORCE_SYMBOL $77B4 showMESSAGE
COMMENT_LINE $77B7 correct highscore size
FORCE_NO_SYMBOL $77B7
FORCE_SYMBOL $77BA Vec_Text_HW
FORCE_SYMBOL $7822 displaySecretMessage2
FORCE_SYMBOL $7826 showMESSAGE
COMMENT_LINE $7829 correct highscore size
FORCE_NO_SYMBOL $7829
FORCE_SYMBOL $782C Vec_Text_HW
FORCE_SYMBOL $7893 displaySecretMessage3
FORCE_SYMBOL $7897 showMESSAGE
COMMENT_LINE $789A correct highscore size
FORCE_NO_SYMBOL $789A
FORCE_SYMBOL $789D Vec_Text_HW
FORCE_SYMBOL $794B displaySecretMessage4
FORCE_SYMBOL $794F showMESSAGE
COMMENT_LINE $7952 correct highscore size
FORCE_NO_SYMBOL $7952
FORCE_SYMBOL $7955 Vec_Text_HW
FORCE_SYMBOL $79B2 displaySecretMessage5
FORCE_SYMBOL $79B6 showMESSAGE
COMMENT_LINE $79B9 correct highscore size
FORCE_NO_SYMBOL $79B9
FORCE_SYMBOL $79BC Vec_Text_HW
FORCE_SYMBOL $7A1B displaySecretMessage6
FORCE_SYMBOL $7A1F showMESSAGE
COMMENT_LINE $7A22 correct highscore size
FORCE_NO_SYMBOL $7A22
FORCE_SYMBOL $7A25 Vec_Text_HW
FORCE_SYMBOL $7ACE displaySecretMessage7
FORCE_SYMBOL $7AD2 showMESSAGE
COMMENT_LINE $7AD5 correct highscore size
FORCE_NO_SYMBOL $7AD5
FORCE_SYMBOL $7AD8 Vec_Text_HW
FORCE_SYMBOL $7B6C rdisplayResetMessage
FORCE_SYMBOL $7B70 showMESSAGE
COMMENT_LINE $7B73 correct highscore size
FORCE_NO_SYMBOL $7B73
FORCE_SYMBOL $7B76 Vec_Text_HW
FORCE_SYMBOL $7BD9 displaySaveMessage
FORCE_SYMBOL $7BDD showMESSAGE
COMMENT_LINE $7BE0 correct highscore size
FORCE_NO_SYMBOL $7BE0
FORCE_SYMBOL $7BE3 Vec_Text_HW
FORCE_SYMBOL $7C7E displayLoadMessage
FORCE_SYMBOL $7C82 showMESSAGE
COMMENT_LINE $7C85 correct highscore size
FORCE_NO_SYMBOL $7C85
FORCE_SYMBOL $7C88 Vec_Text_HW
FORCE_SYMBOL $7C97 YesMessage
FORCE_SYMBOL $7C9B showMESSAGE
COMMENT_LINE $7C9E correct highscore size
FORCE_NO_SYMBOL $7C9E
FORCE_SYMBOL $7CA1 Vec_Text_HW
FORCE_SYMBOL $7CAF NoMessage
FORCE_SYMBOL $7CB3 showMESSAGE
COMMENT_LINE $7CB6 correct highscore size
FORCE_NO_SYMBOL $7CB6
FORCE_SYMBOL $7CB9 Vec_Text_HW
COMMENT_LINE $7CBD ;;;;;; *****************************************
COMMENT_LINE $7CBD ;;;;;; * BANK 0 *
COMMENT_LINE $7CBD ;;;;;; *****************************************
COMMENT_LINE $7CBD ***************************************************************************
COMMENT_LINE $7CBD must be made prettier
COMMENT_LINE $7CBD and better discernable
COMMENT_LINE $7CBD also to be done position calibration for potential overlay
COMMENT_LINE $7CBD for now this is a "plaything"
COMMENT_LINE $7CFC a display list in y
FORCE_SYMBOL $7CFD VIA_shift_reg
COMMENT $7CFF Vectrex BIOS recalibration
FORCE_SYMBOL $7CFF Wait_Recal_noShift
FORCE_NO_SYMBOL $7D02
FORCE_SYMBOL $7D04 Intensity_a
FORCE_SYMBOL $7D0A Vec_Text_HW
FORCE_SYMBOL $7D0D gameScale
FORCE_SYMBOL $7D10 VIA_t1_cnt_lo
COMMENT $7D12 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $7D12
COMMENT_LINE $7D15 for some reason or another, VIA doesn't like a
COMMENT_LINE $7D15 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $7D15 (only on a real vectrex, not Vide)
FORCE_SYMBOL $7D15 VIA_aux_cntl
COMMENT $7D17 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $7D17 VIA_shift_reg
COMMENT $7D19 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $7D19
FORCE_SYMBOL $7D1B VIA_int_enable
COMMENT_LINE $7D1D wait 20 cycles till store of aux (these are 23)
COMMENT $7D1D 12
COMMENT $7D1E 3
FORCE_NO_SYMBOL $7D1E
COMMENT_LINE $7D20 nop      10
FORCE_SYMBOL $7D20 VIA_aux_cntl
FORCE_NO_SYMBOL $7D22
FORCE_SYMBOL $7D25 questionVectrex
FORCE_SYMBOL $7D28 syncPrintStrd
FORCE_NO_SYMBOL $7D2B
COMMENT $7D2D /BLANK low and /ZERO low
FORCE_SYMBOL $7D2D VIA_cntl
FORCE_NO_SYMBOL $7D2F
FORCE_SYMBOL $7D32 buzzVectrex
FORCE_SYMBOL $7D35 syncPrintStrd
FORCE_NO_SYMBOL $7D38
COMMENT $7D3A /BLANK low and /ZERO low
FORCE_SYMBOL $7D3A VIA_cntl
FORCE_NO_SYMBOL $7D3C
FORCE_SYMBOL $7D3F nobuzzVectrex
FORCE_SYMBOL $7D42 syncPrintStrd
FORCE_NO_SYMBOL $7D45
COMMENT $7D47 /BLANK low and /ZERO low
FORCE_SYMBOL $7D47 VIA_cntl
FORCE_NO_SYMBOL $7D49
FORCE_SYMBOL $7D4C buttonToConfirm
FORCE_SYMBOL $7D4F syncPrintStrd
FORCE_NO_SYMBOL $7D52
COMMENT $7D54 /BLANK low and /ZERO low
FORCE_SYMBOL $7D54 VIA_cntl
FORCE_SYMBOL $7D56 additionalFlags
FORCE_NO_SYMBOL $7D59
COMMENT_LINE $7D5D draw lines
COMMENT $7D5D drawBuzzBox
FORCE_NO_SYMBOL $7D5D
FORCE_SYMBOL $7D60 jsrBank1X
COMMENT $7D65 drawNoBuzzBox
FORCE_NO_SYMBOL $7D65
FORCE_SYMBOL $7D68 jsrBank1X
COMMENT $7D6B Joy_Digital
FORCE_SYMBOL $7D6B queryJoystick
FORCE_SYMBOL $7D6E Vec_Joy_1_X
FORCE_SYMBOL $7D75 additionalFlags
FORCE_NO_SYMBOL $7D78
FORCE_SYMBOL $7D7A additionalFlags
FORCE_SYMBOL $7D7F additionalFlags
FORCE_NO_SYMBOL $7D82
FORCE_SYMBOL $7D84 additionalFlags
COMMENT $7D87 get button status
FORCE_SYMBOL $7D87 Read_Btns
COMMENT $7D8A button pressed - any
FORCE_NO_SYMBOL $7D8A
COMMENT $7D8D button 4
FORCE_NO_SYMBOL $7D8D
FORCE_SYMBOL $7D91 displayList1
FORCE_SYMBOL $7D95 showMESSAGE
FORCE_SYMBOL $7D98 displayList2
FORCE_SYMBOL $7D9C showMESSAGE
COMMENT $7DA3 button pressed - any
FORCE_NO_SYMBOL $7DA3
COMMENT $7DA6 button 4
FORCE_NO_SYMBOL $7DA6
COMMENT_LINE $7DAD .....................................................
FORCE_SYMBOL $7DAD buzzOrNoBuzz
COMMENT_LINE $7DB0 for boss display we must init a shot list
COMMENT $7DB0 initPlayerShotList
FORCE_NO_SYMBOL $7DB0
FORCE_SYMBOL $7DB3 jsrBank3_from0_SHIFT
COMMENT $7DB6 playerShotsDoneBoss01
FORCE_NO_SYMBOL $7DB6
FORCE_SYMBOL $7DB9 PLAYERSHOTS_DONE_A
FORCE_SYMBOL $7DBC calibrationStage
COMMENT_LINE $7DBF enable joystick - values destroyed "in game"
FORCE_NO_SYMBOL $7DBF
FORCE_NO_SYMBOL $7DC1
FORCE_NO_SYMBOL $7DC4
FORCE_NO_SYMBOL $7DC6
FORCE_SYMBOL $7DCA leftSmallGunAnimStart
FORCE_SYMBOL $7DCD rightSmallGunAnimStart
FORCE_SYMBOL $7DD0 leftBigGunAnimStart
FORCE_SYMBOL $7DD3 rightBigGunAnimStart
FORCE_SYMBOL $7DD6 tmp1
FORCE_SYMBOL $7DD9 eyeLeftAnimCounter
FORCE_NO_SYMBOL $7DDC
FORCE_SYMBOL $7DDF bossPosY
COMMENT_LINE $7DE2 loop thru all calibrations
COMMENT $7DE2 no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $7DE2 Vec_Music_Flag
COMMENT $7DE5 shadow regs
FORCE_SYMBOL $7DE5 Init_Music_Buf
COMMENT $7DE8 ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $7DE8 Do_Sound
FORCE_SYMBOL $7DEB calibButton
COMMENT $7DEE size
FORCE_SYMBOL $7DEE calibrationLopp
FORCE_SYMBOL $7DF1 calibrationStage
FORCE_SYMBOL $7DF4 calibrationSubs
FORCE_SYMBOL $7DF7 calibrationStage
FORCE_SYMBOL $7DFF additionalFlags
FORCE_SYMBOL $7E02 BIT_RAN_CALIBRATION
FORCE_SYMBOL $7E04 additionalFlags
FORCE_SYMBOL $7E07 saveBlockOnChange
COMMENT $7E0A get button status
FORCE_SYMBOL $7E0A Read_Btns
COMMENT $7E0D 11 ; button pressed - any
FORCE_NO_SYMBOL $7E0D
COMMENT $7E10 button 4 return
FORCE_NO_SYMBOL $7E10
FORCE_SYMBOL $7E14 Vec_Loop_Count
COMMENT $7E17 main01
FORCE_NO_SYMBOL $7E17
FORCE_SYMBOL $7E1A jmpBankIRQ2X
COMMENT_LINE $7E1D .....................................................
COMMENT $7E1D button pressed - any
FORCE_NO_SYMBOL $7E1D
FORCE_NO_SYMBOL $7E20
FORCE_SYMBOL $7E24 displayListBoss
FORCE_SYMBOL $7E28 showMESSAGE
COMMENT $7E2B and repeat forever
FORCE_SYMBOL $7E2B calibrationLopp
FORCE_SYMBOL $7E2E calibrationValue50
FORCE_SYMBOL $7E31 adjustCalibration
FORCE_SYMBOL $7E34 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $7E36 Intensity_a
FORCE_SYMBOL $7E39 BOSS_SPRITE_SCALE
FORCE_SYMBOL $7E3B boss1Scale
FORCE_NO_SYMBOL $7E3E
FORCE_SYMBOL $7E41 bossPosY
FORCE_SYMBOL $7E44 diverseFlags
FORCE_SYMBOL $7E47 BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $7E49 diverseFlags
COMMENT $7E4C displayBoss1
FORCE_NO_SYMBOL $7E4C
FORCE_SYMBOL $7E4F jsrBank2_fromShift_0
FORCE_SYMBOL $7E53 VIA_shift_reg
COMMENT $7E55 and repeat forever
FORCE_SYMBOL $7E55 calibrationLopp
COMMENT_LINE $7E58 .....................................................
COMMENT $7E58 button pressed - any
FORCE_NO_SYMBOL $7E58
FORCE_NO_SYMBOL $7E5B
FORCE_SYMBOL $7E5F displayList3
FORCE_SYMBOL $7E63 showMESSAGE
FORCE_SYMBOL $7E66 displayList4
FORCE_SYMBOL $7E6A showMESSAGE
COMMENT $7E6D and repeat forever
FORCE_SYMBOL $7E6D calibrationLopp
COMMENT_LINE $7E70 reference line!
FORCE_SYMBOL $7E70 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $7E72 Intensity_a
FORCE_NO_SYMBOL $7E75
FORCE_SYMBOL $7E78 MoveToD
FORCE_NO_SYMBOL $7E7B
FORCE_SYMBOL $7E7E DrawLined
FORCE_SYMBOL $7E81 calibrationValueString
FORCE_SYMBOL $7E84 adjustCalibration
COMMENT $7E87 displayCalibrationText
FORCE_NO_SYMBOL $7E87
FORCE_SYMBOL $7E8A jsrBank2_fromShift_0
COMMENT $7E8D and repeat forever
FORCE_SYMBOL $7E8D calibrationLopp
COMMENT_LINE $7E90 .....................................................
COMMENT $7E90 button pressed - any
FORCE_NO_SYMBOL $7E90
FORCE_NO_SYMBOL $7E93
FORCE_SYMBOL $7E97 displayList4
FORCE_SYMBOL $7E9B showMESSAGE
COMMENT $7E9E and repeat forever
FORCE_SYMBOL $7E9E calibrationLopp
FORCE_SYMBOL $7EA1 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $7EA3 Intensity_a
FORCE_NO_SYMBOL $7EA6
FORCE_SYMBOL $7EA9 MoveToD
FORCE_NO_SYMBOL $7EAC
FORCE_SYMBOL $7EAF DrawLined
FORCE_SYMBOL $7EB2 calibrationValue16
FORCE_SYMBOL $7EB5 adjustCalibration
COMMENT $7EB8 displayHSCalibrationText
FORCE_NO_SYMBOL $7EB8
FORCE_SYMBOL $7EBB jsrBank1_fromBank0_T1
FORCE_SYMBOL $7EBE gameScale
FORCE_SYMBOL $7EC1 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $7EC3
FORCE_SYMBOL $7EC6 MoveToD
FORCE_NO_SYMBOL $7EC9
FORCE_SYMBOL $7ECC DrawLined
FORCE_NO_SYMBOL $7ECF
COMMENT $7ED1 /BLANK low and /ZERO low
FORCE_SYMBOL $7ED1 VIA_cntl
COMMENT $7ED3 printCalibrationOptionText
FORCE_NO_SYMBOL $7ED3
FORCE_SYMBOL $7ED6 jsrBank2_fromShift_0
COMMENT_LINE $7ED9 todo
COMMENT_LINE $7ED9 ensure T1 setup correctly
COMMENT_LINE $7ED9 - it usually is
COMMENT $7ED9 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $7ED9
FORCE_SYMBOL $7EDB VIA_int_enable
COMMENT_LINE $7EDD and now "trigger a interrupt
COMMENT $7EDD a VERY short T1 timer
FORCE_NO_SYMBOL $7EDD
FORCE_SYMBOL $7EDF VIA_t1_cnt_lo
COMMENT $7EE2 start timer
FORCE_SYMBOL $7EE2 VIA_t1_cnt_hi
COMMENT $7EE4 Peer Test
COMMENT_LINE $7EE6 by the time, the macros "leaves" the interrupt is set!
COMMENT $7EE6 and repeat forever
FORCE_SYMBOL $7EE6 calibrationLopp
COMMENT_LINE $7EE9 .....................................................
COMMENT $7EE9 button pressed - any
FORCE_NO_SYMBOL $7EE9
FORCE_NO_SYMBOL $7EEC
FORCE_SYMBOL $7EF0 displayListNormal
FORCE_SYMBOL $7EF4 showMESSAGE
COMMENT $7EF7 and repeat forever
FORCE_SYMBOL $7EF7 calibrationLopp
FORCE_SYMBOL $7EFA calibrationValue7
FORCE_SYMBOL $7EFF DEFAULT_ENEMY_INTENSITY
COMMENT $7F01 Store intensity in D/A
FORCE_SYMBOL $7F01 VIA_port_a
COMMENT $7F03 mux disabled channel 2
FORCE_NO_SYMBOL $7F03
FORCE_SYMBOL $7F06 VIA_port_b
COMMENT $7F08 mux enabled channel 2
FORCE_SYMBOL $7F08 VIA_port_b
COMMENT $7F0A turn off mux
FORCE_SYMBOL $7F0A VIA_port_b
COMMENT $7F0C displaySpriteCalibration
FORCE_NO_SYMBOL $7F0C
FORCE_SYMBOL $7F0F jsrBank3_from0_SHIFT
COMMENT $7F12 and repeat forever
FORCE_SYMBOL $7F12 calibrationLopp
COMMENT_LINE $7F15 .....................................................
COMMENT $7F15 button pressed - any
FORCE_NO_SYMBOL $7F15
FORCE_NO_SYMBOL $7F18
FORCE_SYMBOL $7F1C displayListSwarm
FORCE_SYMBOL $7F20 showMESSAGE
COMMENT $7F23 and repeat forever
FORCE_SYMBOL $7F23 calibrationLopp
FORCE_SYMBOL $7F26 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $7F28 Intensity_a
FORCE_SYMBOL $7F2B calibrationValue6
COMMENT $7F30 displaySwarmCalibration
FORCE_NO_SYMBOL $7F30
FORCE_SYMBOL $7F33 jsrBank3_from0_SHIFT
COMMENT $7F36 and repeat forever
FORCE_SYMBOL $7F36 calibrationLopp
COMMENT_LINE $7F39 .....................................................
FORCE_NO_SYMBOL $7F3C
FORCE_SYMBOL $7F40 Vec_Joy_1_Y
FORCE_NO_SYMBOL $7F47
FORCE_NO_SYMBOL $7F4B
FORCE_NO_SYMBOL $7F4F
COMMENT $7F52 button 2
FORCE_NO_SYMBOL $7F52
FORCE_NO_SYMBOL $7F56
FORCE_NO_SYMBOL $7F5A
COMMENT $7F5D button 3
FORCE_NO_SYMBOL $7F5D
FORCE_NO_SYMBOL $7F61
COMMENT_LINE $7F64 .....................................................
COMMENT $7F64 button pressed - any
FORCE_NO_SYMBOL $7F64
FORCE_NO_SYMBOL $7F67
FORCE_SYMBOL $7F6B displayListSize
FORCE_SYMBOL $7F6F showMESSAGE
COMMENT $7F72 and repeat forever
FORCE_SYMBOL $7F72 calibrationLopp
FORCE_SYMBOL $7F75 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $7F77 Intensity_a
FORCE_NO_SYMBOL $7F7D
COMMENT_LINE $7F81 react to joystick input
FORCE_SYMBOL $7F81 Vec_Joy_1_Y
FORCE_SYMBOL $7F88 gameScale
FORCE_SYMBOL $7F8B gameScale
FORCE_NO_SYMBOL $7F8E
FORCE_NO_SYMBOL $7F92
FORCE_SYMBOL $7F94 gameScale
FORCE_SYMBOL $7F99 gameScale
FORCE_SYMBOL $7F9C gameScale
FORCE_NO_SYMBOL $7F9F
FORCE_NO_SYMBOL $7FA3
FORCE_SYMBOL $7FA5 gameScale
COMMENT_LINE $7FAA display sizings
FORCE_NO_SYMBOL $7FAA
COMMENT $7FAC /BLANK low and /ZERO low
FORCE_SYMBOL $7FAC VIA_cntl
FORCE_SYMBOL $7FAE Reset_Pen
FORCE_SYMBOL $7FB1 gameScale
FORCE_SYMBOL $7FB4 VIA_t1_cnt_lo
FORCE_SYMBOL $7FB6 Vec_0Ref_Enable
FORCE_SYMBOL $7FBB Vec_0Ref_Enable
FORCE_NO_SYMBOL $7FBE
FORCE_SYMBOL $7FC1 MoveToD
FORCE_NO_SYMBOL $7FC4
FORCE_SYMBOL $7FC7 DrawLined
FORCE_NO_SYMBOL $7FCA
FORCE_SYMBOL $7FCD DrawLined
FORCE_NO_SYMBOL $7FD0
FORCE_SYMBOL $7FD3 DrawLined
FORCE_NO_SYMBOL $7FD6
FORCE_SYMBOL $7FD9 DrawLined
FORCE_NO_SYMBOL $7FDC
FORCE_SYMBOL $7FDF DrawLined
FORCE_NO_SYMBOL $7FE2
FORCE_SYMBOL $7FE5 DrawLined
FORCE_NO_SYMBOL $7FE8
FORCE_SYMBOL $7FEB DrawLined
FORCE_NO_SYMBOL $7FEE
FORCE_SYMBOL $7FF1 DrawLined
FORCE_SYMBOL $7FF6 Vec_0Ref_Enable
FORCE_NO_SYMBOL $7FF9
COMMENT $7FFB /BLANK low and /ZERO low
FORCE_SYMBOL $7FFB VIA_cntl
FORCE_SYMBOL $8000 player_score
FORCE_NO_SYMBOL $8009
FORCE_SYMBOL $800E gameScale
FORCE_SYMBOL $8011 player_score
FORCE_SYMBOL $8014 Add_Score_a
FORCE_SYMBOL $8017 Strip_Zeros
FORCE_NO_SYMBOL $801A
FORCE_SYMBOL $801D player_score
FORCE_SYMBOL $8020 Print_Str_d
COMMENT $8023 and repeat forever
COMMENT_LINE $8025 .....................................................
COMMENT $8025 scale 25
COMMENT_LINE $8033 .....................................................
FORCE_SYMBOL $8034 VIA_shift_reg
COMMENT $8036 Vectrex BIOS recalibration
FORCE_SYMBOL $8036 Wait_Recal_noShift
FORCE_NO_SYMBOL $8039
COMMENT $803B Store intensity in D/A
FORCE_SYMBOL $803B VIA_port_a
COMMENT $803D mux disabled channel 2
FORCE_NO_SYMBOL $803D
FORCE_SYMBOL $8040 VIA_port_b
COMMENT $8042 mux enabled channel 2
FORCE_SYMBOL $8042 VIA_port_b
COMMENT $8044 turn off mux
FORCE_SYMBOL $8044 VIA_port_b
COMMENT $8046 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $8046
COMMENT_LINE $8049 for some reason or another, VIA doesn't like a
COMMENT_LINE $8049 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $8049 (only on a real vectrex, not Vide)
FORCE_SYMBOL $8049 VIA_aux_cntl
COMMENT $804B and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $804B VIA_shift_reg
COMMENT $804D bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $804D
FORCE_SYMBOL $804F VIA_int_enable
COMMENT_LINE $8051 wait 20 cycles till store of aux (these are 23)
COMMENT $8051 12
COMMENT $8052 3
FORCE_NO_SYMBOL $8052
COMMENT_LINE $8054 nop      10
FORCE_SYMBOL $8054 VIA_aux_cntl
FORCE_SYMBOL $8058 Vec_Text_Height
FORCE_NO_SYMBOL $805B
FORCE_SYMBOL $805D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $805F
FORCE_SYMBOL $8062 calString1
FORCE_SYMBOL $8065 sync_Print_Str_d_fixed_8
FORCE_NO_SYMBOL $8068
COMMENT $806A /BLANK low and /ZERO low
FORCE_SYMBOL $806A VIA_cntl
COMMENT $806C ensure that shift can generate interrupt
FORCE_NO_SYMBOL $806C
COMMENT_LINE $806F for some reason or another, VIA doesn't like a
COMMENT_LINE $806F std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $806F (only on a real vectrex, not Vide)
FORCE_SYMBOL $806F VIA_aux_cntl
COMMENT $8071 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $8071 VIA_shift_reg
COMMENT $8073 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $8073
FORCE_SYMBOL $8075 VIA_int_enable
COMMENT_LINE $8077 wait 20 cycles till store of aux (these are 23)
COMMENT $8077 12
COMMENT $8078 3
FORCE_NO_SYMBOL $8078
COMMENT_LINE $807A nop      10
FORCE_SYMBOL $807A VIA_aux_cntl
COMMENT $807C Joy_Digital
FORCE_SYMBOL $807C queryJoystick
COMMENT $807F get button status
FORCE_SYMBOL $807F Read_Btns
COMMENT $8082 button pressed - any
FORCE_NO_SYMBOL $8082
COMMENT_LINE $8085 if any button pressed - finish
COMMENT $8085 button 4
FORCE_NO_SYMBOL $8085
FORCE_NO_SYMBOL $8089
FORCE_SYMBOL $808B tmp1
FORCE_SYMBOL $8090 tmp1
FORCE_SYMBOL $8095 tmp1
COMMENT $8098 only counts as pressed, when pressed and RELEASED!
FORCE_SYMBOL $8098 calibButton
FORCE_SYMBOL $809C calibrationSubs
FORCE_SYMBOL $809F calibrationStage
COMMENT_LINE $80A5 .....................................................
COMMENT $80A5 Store Y in D/A register
FORCE_SYMBOL $80A5 VIA_port_a
COMMENT $80A7 Blank low, zero high?
FORCE_NO_SYMBOL $80A7
FORCE_SYMBOL $80A9 VIA_cntl
COMMENT $80AC Enable mux
FORCE_SYMBOL $80AC VIA_port_b
COMMENT $80B0 Disable mux
FORCE_SYMBOL $80B0 VIA_port_b
COMMENT $80B2 Store X in D/A register
FORCE_SYMBOL $80B2 VIA_port_a
COMMENT $80B4 enable timer
FORCE_SYMBOL $80B4 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $80B6
FORCE_SYMBOL $80B8 VIA_int_flags
COMMENT_LINE $80BD .....................................................
COMMENT $80BD 4
FORCE_SYMBOL $80BD VIA_port_a
COMMENT $80C0 4
FORCE_SYMBOL $80C0 VIA_port_b
FORCE_SYMBOL $80C5 VIA_port_b
COMMENT $80C8 5
FORCE_SYMBOL $80C8 VIA_port_a
COMMENT $80CA light ON, ZERO OFF
FORCE_NO_SYMBOL $80CA
COMMENT $80CC 4
FORCE_SYMBOL $80CC VIA_t1_cnt_hi
FORCE_SYMBOL $80CE VIA_cntl
FORCE_NO_SYMBOL $80D0
FORCE_SYMBOL $80D3 VIA_int_flags
FORCE_SYMBOL $80DB VIA_cntl
COMMENT_LINE $80DE .....................................................
COMMENT_LINE $80DE ***************************************************************************
COMMENT_LINE $80DE SER_JI.I - Serial Output on Joystick port, Inverted
COMMENT_LINE $80DE Copyright (c) Alex Herbert 2002
COMMENT_LINE $80DE This code assumes that the following constant have been declared.
COMMENT_LINE $80DE If not... un-comment them!
COMMENT_LINE $80DE VIA_port_b   equ     $d000
COMMENT_LINE $80DE VIA_port_a     equ     $d001
COMMENT_LINE $80DE VIA_DDR_a    equ     $d003
COMMENT_LINE $80DE VIA_t1_cnt_lo  equ     $d004
COMMENT_LINE $80DE VIA_aux_cntl  equ     $d00b
COMMENT_LINE $80DE VIA_int_flags   equ     $d00d
COMMENT_LINE $80DE 0 sample/hold (0=enable mux 1=disable mux)
COMMENT_LINE $80DE 1 mux sel 0
COMMENT_LINE $80DE 2 mux sel 1
COMMENT_LINE $80DE 3 sound BC1
COMMENT_LINE $80DE 4 sound BDIR
COMMENT_LINE $80DE 5 comparator input
COMMENT_LINE $80DE 6 external device (slot pin 35) initialized to input
COMMENT_LINE $80DE 7 /RAMP
COMMENT_LINE $80DE 0 PA latch enable
COMMENT_LINE $80DE 1 PB latch enable
COMMENT_LINE $80DE 2 \ 110=output to CB2 under control of phase 2 clock
COMMENT_LINE $80DE 3 > shift register control (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $80DE 4 /
COMMENT_LINE $80DE 5 0=t2 one shot 1=t2 free running
COMMENT_LINE $80DE 6 0=t1 one shot 1=t1 free running
COMMENT_LINE $80DE 7 0=t1 disable PB7 output 1=t1 enable PB7 output
COMMENT_LINE $80DE 0 CA1 control CA1 -> SW7 0=IRQ on low 1=IRQ on high
COMMENT_LINE $80DE 1 \
COMMENT_LINE $80DE 2 > CA2 control CA2 -> /ZERO 110=low 111=high
COMMENT_LINE $80DE 3 /
COMMENT_LINE $80DE 4 CB1 control CB1 -> NC 0=IRQ on low 1=IRQ on high
COMMENT_LINE $80DE 5 \
COMMENT_LINE $80DE 6 > CB2 control CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $80DE 7 /
COMMENT_LINE $80DE bit cleared by
COMMENT_LINE $80DE 0 CA2 interrupt flag reading or writing port A I/O
COMMENT_LINE $80DE 1 CA1 interrupt flag reading or writing port A I/O
COMMENT_LINE $80DE 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $80DE 3 CB2 interrupt flag reading or writing port B I/O
COMMENT_LINE $80DE 4 CB1 interrupt flag reading or writing port A I/O
COMMENT_LINE $80DE 5 timer 2 interrupt flag read t2 low or write t2 high
COMMENT_LINE $80DE 6 timer 1 interrupt flag read t1 count low or write t1 high
COMMENT_LINE $80DE 7 IRQ status flag write logic 0 to IER or IFR bit
COMMENT_LINE $80DE 0 CA2 interrupt enable
COMMENT_LINE $80DE 1 CA1 interrupt enable
COMMENT_LINE $80DE 2 shift register interrupt enable
COMMENT_LINE $80DE 3 CB2 interrupt enable
COMMENT_LINE $80DE 4 CB1 interrupt enable
COMMENT_LINE $80DE 5 timer 2 interrupt enable
COMMENT_LINE $80DE 6 timer 1 interrupt enable
COMMENT_LINE $80DE 7 IER set/clear control
COMMENT_LINE $80DE Baud rate setting
COMMENT_LINE $80DE Subroutines
COMMENT $80DE assume dp = $d0
COMMENT_LINE $80DE ser_txbyte
COMMENT_LINE $80DE ----------
COMMENT_LINE $80DE Function:
COMMENT_LINE $80DE transmit byte serially (8n1, inverted) via joystick ports.
COMMENT_LINE $80DE On entry:
COMMENT_LINE $80DE a = byte to transmit
COMMENT_LINE $80DE dp = $d0
COMMENT_LINE $80DE On exit:
COMMENT_LINE $80DE d,cc = corrupted
COMMENT_LINE $80DE Stack usage:
COMMENT_LINE $80DE 5 bytes (7 if you include the return address)
COMMENT_LINE $80DE this is new
COMMENT $80DE 0020 for Jerome?
FORCE_NO_SYMBOL $80DE
COMMENT $80E1 set and start timer (T1)
FORCE_SYMBOL $80E1 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $80E3
COMMENT $80E5 test T1 interrupt flag
FORCE_SYMBOL $80E5 VIA_int_flags
COMMENT $80E7 loop until T1 timeout
COMMENT_LINE $80EA ALLTOGETHER here 5 stack bytes "saved"
COMMENT_LINE $80EA macro versiob saves TWO stack
COMMENT $0000 waits seem to be neccessary for Jeromes VecVox
COMMENT $0000 test T1 interrupt flag
COMMENT $0000 loop until T1 timeout
COMMENT $0000 (BC1 + BDIR = 10)
COMMENT $0000 enable PSG register write
COMMENT $0000 latch data (BC1 + BDIR = 00)
COMMENT $0000 clear T1 interrupt flag
COMMENT_LINE $0000 for vox usage instead of stack, saves 3 stack
COMMENT_LINE $0000 three continues bytes!
COMMENT_LINE $0000 vox_tmp1
COMMENT_LINE $0000 vox_tmp2
COMMENT_LINE $0000 vox_tmp3
COMMENT_LINE $80EA pshs     a                            ; put data on stack
FORCE_SYMBOL $80EA vox_input_data
FORCE_NO_SYMBOL $80ED
COMMENT_LINE $80F0 load PSG latch address with (BC1 + BDIR = 11)
COMMENT $80F0 PSG register 7
FORCE_SYMBOL $80F0 VIA_port_b
FORCE_NO_SYMBOL $80F2
COMMENT $80F5 T1 mode = free-run, no output on RAMP (PB7)
FORCE_SYMBOL $80F5 VIA_aux_cntl
COMMENT $80F7 PSG inactive (BC1 + BDIR = 00)
FORCE_SYMBOL $80F7 VIA_port_b
FORCE_SYMBOL $80F9 SER_BITTIME
COMMENT $80FC set and start timer (T1)
FORCE_SYMBOL $80FC VIA_t1_cnt_lo
FORCE_NO_SYMBOL $80FE
COMMENT $8101 6522 I/O port data direction = input
FORCE_SYMBOL $8101 VIA_DDR_a
COMMENT $8103 enable PSG reading (BC1 + BDIR = 01)
FORCE_SYMBOL $8103 VIA_port_b
COMMENT $8105 loop counter (here for timing)
FORCE_NO_SYMBOL $8105
COMMENT $8107 read PSG register 7
FORCE_SYMBOL $8107 VIA_port_a
COMMENT_LINE $8109 pshs     d                            ; save PSG R7 and loop counter on stack
FORCE_SYMBOL $8109 vox_tmp2
COMMENT $810C set bit 6, meaning this will be our "zero" start bit
FORCE_NO_SYMBOL $810C
COMMENT_LINE $810E bit 6 set means that portA is in output mode
COMMENT_LINE $810E output of "Output Data portA" which is "$ef"
COMMENT_LINE $810E which is a 1 for all but bit 4
COMMENT_LINE $810E bit 4 is our vecVoice "dataline"
COMMENT $810E store data for PSG write (to DAC)
FORCE_SYMBOL $810E VIA_port_a
FORCE_NO_SYMBOL $8110
COMMENT $8113 disable PSG reading (BC1 + BDIR = 00)
FORCE_SYMBOL $8113 VIA_port_b
COMMENT $8115 6522 I/O direction = output (ff = all bits)
FORCE_SYMBOL $8115 VIA_DDR_a
COMMENT $8117 waits seem to be neccessary for Jeromes VecVox
COMMENT $8117 wait 3 cycles
COMMENT $8119 wait 2 cycles
COMMENT $811A wait 2 cycles
FORCE_NO_SYMBOL $811B
COMMENT $811D test T1 interrupt flag
FORCE_SYMBOL $811D VIA_int_flags
COMMENT $811F loop until T1 timeout
COMMENT $8121 (BC1 + BDIR = 10)
FORCE_NO_SYMBOL $8121
COMMENT $8123 enable PSG register write
FORCE_SYMBOL $8123 VIA_port_b
COMMENT $8125 latch data (BC1 + BDIR = 00)
FORCE_SYMBOL $8125 VIA_port_b
COMMENT $8127 clear T1 interrupt flag
FORCE_SYMBOL $8127 VIA_t1_cnt_lo
COMMENT $8129 wait 3 cycles
COMMENT $812B wait 2 cycles
COMMENT_LINE $812C bsr      ser_txbit                    ; tansmit stop bit [1]
COMMENT $812C 2,s ; shift next data bit into carry
FORCE_SYMBOL $812C vox_input_data
COMMENT $8131 ,s
FORCE_SYMBOL $8131 vox_reg7
FORCE_NO_SYMBOL $8134
COMMENT $8136 store data for PSG write
FORCE_SYMBOL $8136 VIA_port_a
COMMENT $8138 waits seem to be neccessary for Jeromes VecVox
COMMENT $8138 wait 3 cycles
COMMENT $813A wait 2 cycles
COMMENT $813B wait 2 cycles
FORCE_NO_SYMBOL $813C
COMMENT $813E test T1 interrupt flag
FORCE_SYMBOL $813E VIA_int_flags
COMMENT $8140 loop until T1 timeout
COMMENT $8142 (BC1 + BDIR = 10)
FORCE_NO_SYMBOL $8142
COMMENT $8144 enable PSG register write
FORCE_SYMBOL $8144 VIA_port_b
COMMENT $8146 latch data (BC1 + BDIR = 00)
FORCE_SYMBOL $8146 VIA_port_b
COMMENT $8148 clear T1 interrupt flag
FORCE_SYMBOL $8148 VIA_t1_cnt_lo
COMMENT $814A wait 3 cycles
COMMENT $814C wait 2 cycles
COMMENT_LINE $814D bsr      ser_txbit                    ; tansmit stop bit [1]
COMMENT $814F ,s
FORCE_SYMBOL $814F vox_reg7
COMMENT $8152 store data for PSG write
FORCE_SYMBOL $8152 VIA_port_a
COMMENT $8154 waits seem to be neccessary for Jeromes VecVox
COMMENT $8154 wait 3 cycles
COMMENT $8156 wait 2 cycles
COMMENT $8157 wait 2 cycles
FORCE_NO_SYMBOL $8158
COMMENT $815A test T1 interrupt flag
FORCE_SYMBOL $815A VIA_int_flags
COMMENT $815C loop until T1 timeout
COMMENT $815E (BC1 + BDIR = 10)
FORCE_NO_SYMBOL $815E
COMMENT $8160 enable PSG register write
FORCE_SYMBOL $8160 VIA_port_b
COMMENT $8162 latch data (BC1 + BDIR = 00)
FORCE_SYMBOL $8162 VIA_port_b
COMMENT $8164 clear T1 interrupt flag
FORCE_SYMBOL $8164 VIA_t1_cnt_lo
COMMENT $8166 wait 3 cycles
COMMENT $8168 wait 2 cycles
COMMENT_LINE $8169 bsr      ser_txbit                    ; tansmit stop bit [1]
COMMENT $8169 1,s ; decrement loop counter
FORCE_SYMBOL $8169 vox_loop_counter
COMMENT $816C loop if more bits to send
COMMENT $816E ,s
FORCE_SYMBOL $816E vox_reg7
COMMENT $8171 store data for PSG write
FORCE_SYMBOL $8171 VIA_port_a
COMMENT $8173 waits seem to be neccessary for Jeromes VecVox
COMMENT $8173 wait 3 cycles
COMMENT $8175 wait 2 cycles
COMMENT $8176 wait 2 cycles
FORCE_NO_SYMBOL $8177
COMMENT $8179 test T1 interrupt flag
FORCE_SYMBOL $8179 VIA_int_flags
COMMENT $817B loop until T1 timeout
COMMENT $817D (BC1 + BDIR = 10)
FORCE_NO_SYMBOL $817D
COMMENT $817F enable PSG register write
FORCE_SYMBOL $817F VIA_port_b
COMMENT $8181 latch data (BC1 + BDIR = 00)
FORCE_SYMBOL $8181 VIA_port_b
COMMENT $8183 clear T1 interrupt flag
FORCE_SYMBOL $8183 VIA_t1_cnt_lo
COMMENT $8185 wait 3 cycles
COMMENT $8187 wait 2 cycles
COMMENT_LINE $8188 bsr      ser_txbit                    ; tansmit stop bit [1]
FORCE_NO_SYMBOL $8188
COMMENT $818A T1 = single-shot, no output on RAMP (PB7)
FORCE_SYMBOL $818A VIA_aux_cntl
FORCE_NO_SYMBOL $818C
COMMENT $818F force T1 timeout
FORCE_SYMBOL $818F VIA_t1_cnt_lo
FORCE_NO_SYMBOL $8191
COMMENT $8193 T1 = single-shot, RAMP output (PB7) enabled
FORCE_SYMBOL $8193 VIA_aux_cntl
COMMENT_LINE $8195 leas     3,s                          ; restore stack
COMMENT_LINE $8196 ser_txbit
COMMENT_LINE $8196 lda      #$40
COMMENT_LINE $8196 sertxbit_loop
COMMENT_LINE $8196 bita     VIA_int_flags                ; test T1 interrupt flag
COMMENT_LINE $8196 beq      sertxbit_loop                ; loop until T1 timeout
COMMENT_LINE $8196 lda      #$91                         ; (BC1 + BDIR = 10)
COMMENT_LINE $8196 sta      VIA_port_b                   ; enable PSG register write
COMMENT_LINE $8196 stb      VIA_port_b                   ; latch data (BC1 + BDIR = 00)
COMMENT_LINE $8196 lda      VIA_t1_cnt_lo                ; clear T1 interrupt flag
COMMENT_LINE $8196 rts
COMMENT_LINE $8196 VECVOX.I
COMMENT_LINE $8196 Copyright (c) 2004 Alex Herbert
COMMENT_LINE $8196 Include the serial driver
COMMENT_LINE $8196 include "ser_ji.i"
COMMENT_LINE $8196 Constants
COMMENT_LINE $8196 Variables
COMMENT_LINE $8196 These routines require 2 bytes of RAM for the following variable:
COMMENT_LINE $8196 vox_addr - 16-bit pointer to next byte in speech string.
COMMENT_LINE $8196 You may wish to comment out the following lines and declare vox_addr
COMMENT_LINE $8196 elsewhere in your code.
COMMENT_LINE $8196 bss
COMMENT_LINE $8196 vox_addr        ds      2
COMMENT_LINE $8196 Subroutines
COMMENT_LINE $8196 vox_init
COMMENT_LINE $8196 --------
COMMENT_LINE $8196 Function:
COMMENT_LINE $8196 Prepare joystick port for serial transmission and initialize
COMMENT_LINE $8196 speech string pointer.
COMMENT_LINE $8196 Usage:
COMMENT_LINE $8196 Call vox_init once at the start of your program.
COMMENT_LINE $8196 Note:
COMMENT_LINE $8196 This routine writes $ef to PSG register 14 by calling Exec ROM
COMMENT_LINE $8196 routine WRREG ($f256).  This is to mask serial output from all
COMMENT_LINE $8196 joystick pins except the data line. (Port 2, pin 1.)
COMMENT_LINE $8196 Care should be taken to not overwrite this register.  (There's
COMMENT_LINE $8196 normally no reason to do so.)
COMMENT_LINE $8196 Caution:
COMMENT_LINE $8196 The dp register will be = to $d0.
FORCE_NO_SYMBOL $8196
COMMENT $8198 dp = $d0
COMMENT $819D WRREG (write data mask to PSG reg 14)
FORCE_SYMBOL $819D Sound_Byte
COMMENT_LINE $81A0 test if there is a vecVox, by filling its buffer to overflow and if it
COMMENT_LINE $81A0 gives a "buffer full" we know its there
COMMENT_LINE $81A0 this does not work!  - at least not with atari vecVox
COMMENT_LINE $81A0 lda additionalFlags
COMMENT_LINE $81A0 bita #$ff-BIT_VOX_FULL
COMMENT_LINE $81A0 lbeq noVOX
FORCE_SYMBOL $81A0 vox_silence
COMMENT $81A3 point to 'silence' speech string
FORCE_SYMBOL $81A3 vox_addr
COMMENT_LINE $81A7 vox_speak
COMMENT_LINE $81A7 ---------
COMMENT_LINE $81A7 Function:
COMMENT_LINE $81A7 Sends speech data to the VecVox.
COMMENT_LINE $81A7 Usage:
COMMENT_LINE $81A7 Call vox_speak once per frame. (I.e. stick it in your main loop)
COMMENT_LINE $81A7 See note below.
COMMENT_LINE $81A7 Then, just store the start address of a speech string in
COMMENT_LINE $81A7 vox_addr when you want the VecVox to speak, and let this
COMMENT_LINE $81A7 routine do the work!
COMMENT_LINE $81A7 To abort speech in progress, point vox_addr at vox_silence or
COMMENT_LINE $81A7 call vox_init2 (which does exactly that).
COMMENT_LINE $81A7 Note:
COMMENT_LINE $81A7 1. This subroutine requires that the current joystick button
COMMENT_LINE $81A7 status is held at RAM address $c80f (TRIGGR).  This is usually
COMMENT_LINE $81A7 = by calling the Executive ROM routine INPUT (a.k.a.
COMMENT_LINE $81A7 read_switches2) at $F1BA.
COMMENT_LINE $81A7 2. Speech strings should be terminated with VOX_TERM. ($ff)
COMMENT_LINE $81A7 Caution:
COMMENT_LINE $81A7 Contents of the dp register may (or may not) be = to $d0.
COMMENT_LINE $81A7 not working
COMMENT_LINE $81A7 lda additionalFlags
COMMENT_LINE $81A7 bita #BIT_VOX_FULL
COMMENT_LINE $81A7 lda     $c80f           ; get joystick buttons (TRIGGR)
COMMENT_LINE $81A7 bita    #VOX_STATUSMASK ; mask "buffer full" status
COMMENT_LINE $81A7 beq     vox_exit        ; exit if no room in buffer
COMMENT $81A7 get speech pointer
FORCE_SYMBOL $81A7 vox_addr
COMMENT $81AA read next byte
COMMENT $81AC end of string?
FORCE_SYMBOL $81AC VOX_TERM
COMMENT $81AE ...if so, exit
COMMENT $81B0 store speech pointer
FORCE_SYMBOL $81B0 vox_addr
COMMENT $81B3 send byte
FORCE_SYMBOL $81B3 ser_txbyte
COMMENT_LINE $81B7 Silence string
COMMENT_LINE $81B7 Initial speech string.  Point vox_addr here to abort speech
COMMENT_LINE $81B7 in progress.
COMMENT_LINE $81B9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $81BD send byte
FORCE_SYMBOL $81BD ser_txbyte
FORCE_SYMBOL $81C0 delayOutput
COMMENT_LINE $81C6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $81C6 returns 1 if != 0
COMMENT_LINE $81C6 0 if == 0
COMMENT_LINE $81C6 in u pointer to generated speech area
COMMENT_LINE $81C6 in y pointer to 10th
COMMENT_LINE $81C6 in b now 0-99
FORCE_NO_SYMBOL $81C6
FORCE_SYMBOL $81CA one
FORCE_SYMBOL $81CF hundred
FORCE_NO_SYMBOL $81D9
FORCE_NO_SYMBOL $81DD
FORCE_SYMBOL $81E1 ninety
FORCE_NO_SYMBOL $81EA
FORCE_NO_SYMBOL $81EE
FORCE_SYMBOL $81F2 eighty
FORCE_NO_SYMBOL $81FB
FORCE_NO_SYMBOL $81FF
FORCE_SYMBOL $8203 seventy
FORCE_NO_SYMBOL $820C
FORCE_NO_SYMBOL $8210
FORCE_SYMBOL $8214 sixty
FORCE_NO_SYMBOL $821D
FORCE_NO_SYMBOL $8221
FORCE_SYMBOL $8225 fifty
FORCE_NO_SYMBOL $822E
FORCE_NO_SYMBOL $8232
FORCE_SYMBOL $8236 fourty
FORCE_SYMBOL $8239 copySpeechPattern_xu
FORCE_NO_SYMBOL $8240
FORCE_NO_SYMBOL $8244
FORCE_SYMBOL $8248 thirty
FORCE_SYMBOL $824B copySpeechPattern_xu
FORCE_NO_SYMBOL $8252
FORCE_NO_SYMBOL $8256
FORCE_SYMBOL $825A twenty
FORCE_SYMBOL $825D copySpeechPattern_xu
COMMENT_LINE $8268 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $8268 value in b
COMMENT_LINE $8268 returns 1 in b if != 0
COMMENT_LINE $8268 return 0 in b if == 0
FORCE_SYMBOL $826B tab1
FORCE_SYMBOL $8271 copySpeechPattern_xu
FORCE_NO_SYMBOL $8274
COMMENT_LINE $8278 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $8278 output VOICE PATTERNS
COMMENT_LINE $8278 output LEVEL
COMMENT_LINE $8278 output number
COMMENT_LINE $8278 output EOF
COMMENT $8278 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $8278
COMMENT_LINE $827B for some reason or another, VIA doesn't like a
COMMENT_LINE $827B std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $827B (only on a real vectrex, not Vide)
FORCE_SYMBOL $827B VIA_aux_cntl
COMMENT $827D and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $827D VIA_shift_reg
COMMENT $827F bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $827F
FORCE_SYMBOL $8281 VIA_int_enable
COMMENT_LINE $8283 wait 20 cycles till store of aux (these are 23)
COMMENT $8283 12
COMMENT $8284 3
FORCE_NO_SYMBOL $8284
COMMENT_LINE $8286 nop      10
FORCE_SYMBOL $8286 VIA_aux_cntl
FORCE_SYMBOL $8288 voxLevel
COMMENT_LINE $828B output till pointer = 5 ; pause
COMMENT $828F send byte
FORCE_SYMBOL $828F ser_txbyte
FORCE_SYMBOL $8292 delayOutput
FORCE_SYMBOL $8297 levelCount
FORCE_NO_SYMBOL $829B
FORCE_NO_SYMBOL $82A0
FORCE_NO_SYMBOL $82A5
FORCE_SYMBOL $82AA do_0_99
COMMENT $82AE \PITCH \70 \BEND \5 \RR \UX \NE
COMMENT $82B8 \PITCH \70 \BEND \5 \STRESS \KO \SLOW \AW \WW \FAST \AXRR \DO
COMMENT_LINE $82E7 \PITCH \65 \BEND \5 \STRESS
COMMENT_LINE $82E7 \SLOW \OHIH \P6 \P6 \SLOW
COMMENT_LINE $82E7 \VOLUME \120 \HO \PITCH \55
COMMENT_LINE $82E7 \SLOW \UX \VOLUME \96 \SLOW
COMMENT_LINE $82E7 \SLOW \NGE \SLOW \NGE \PITCH
COMMENT_LINE $82E7 \65 \SLOW \GE \SLOW \SLOW
COMMENT_LINE $82E7 \RR \RR \RR \VOX_TERM
COMMENT $82FF \SOFT \PITCH \190 \OB \FAST \OWWW \NO \UW \SE
COMMENT_LINE $831B \RESET \SLOW \PITCH \98 \BEND \2
COMMENT_LINE $831B \SE \FAST \IH \NGO \LE
COMMENT_LINE $831B \P5 \P5 \SLOW \SLOW \SH \SH \FAST
COMMENT_LINE $831B \OW \TT
COMMENT_LINE $8332 \RESET \SLOW \PITCH \98 \BEND \2
COMMENT_LINE $8332 \DO \FAST \UX \OB \UH \FAST \LE
COMMENT_LINE $8332 \P5 \P5 \SLOW \SLOW \SH \SH \FAST
COMMENT_LINE $8332 \OW \TT
COMMENT_LINE $8333 BONUS_VOICE
COMMENT_LINE $8333 db  140, 134, 141, 128, 255
COMMENT_LINE $8333 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $8333 \2 \MM \UX \NE \IY
COMMENT_LINE $833E \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $833E \2 \SE \KO \UW \PO
COMMENT_LINE $833E \VOX_TERM
COMMENT_LINE $834F \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $834F \2 \RR \AY \NGO \KO
COMMENT_LINE $834F \P5 \MM \AW \RR \KO
COMMENT_LINE $834F \AXRR \VOX_TERM
COMMENT_LINE $8366 \RESET \SLOW \PITCH \98 \BEND \2
COMMENT_LINE $8366 \EY \KE \SE \TT \FAST \RR \FAST \AX
COMMENT_LINE $8366 \P5
COMMENT_LINE $8366 \P5 \LE \EH \TT \AX
COMMENT_LINE $8366 \RR \VOX_TERM
COMMENT_LINE $8376 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $8376 \2 \FF \OHIY \TT \RR
COMMENT_LINE $8376 \P5 \SE \PO \IY \DE
COMMENT_LINE $8376 \VOX_TERM
COMMENT_LINE $8388 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $8388 \2 \SLOW \SLOW \SH \SH
COMMENT_LINE $8388 \FAST \OW \TT \SE \PO
COMMENT_LINE $8388 \IY \DE \VOX_TERM
COMMENT_LINE $839F \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $839F \2 \EY \KE \SE \TT
COMMENT_LINE $839F \FAST \RR \FAST \AX \P5
COMMENT_LINE $839F \BO \FAST \UH \LE \EH \TT
COMMENT_LINE $839F \VOX_TERM
COMMENT_LINE $83AD \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $83AD \SLOW \SO \UX \KO \AXRR
COMMENT_LINE $83AD \P5 \VOX_TERM \VOX_TERM
COMMENT_LINE $83BB \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $83BB \slow \SH \slow \IY \LE \ed
COMMENT_LINE $83BB \VOX_TERM
COMMENT_LINE $83C8 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $83C8 \slow \AWRR  \slow \MM \slow \OWRR
COMMENT_LINE $83C8 \VOX_TERM
COMMENT_LINE $83DE \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $83DE \SLOW \MM \OHIH \FAST \NE
COMMENT_LINE $83DE \FAST \NO \SE \TT \FAST
COMMENT_LINE $83DE \OWRR \RR \SLOW \MM \P5
COMMENT_LINE $83DE \VOX_TERM
COMMENT_LINE $83EF \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $83EF \SLOW \MM \FAST  \aw \LE \TT \IH
COMMENT_LINE $83EF \PO \LE \OHIY
COMMENT_LINE $83EF \VOX_TERM
COMMENT_LINE $83FF \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $83FF \slow \KO \AY \SH \P5 \BO
COMMENT_LINE $83FF \AW \MM \OB
COMMENT_LINE $8415 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $8415 \SLOW \DE \FAST \OHIH \SLOW
COMMENT_LINE $8415 \MM \EH \NGO \ED \P5
COMMENT_LINE $8415 \P5 \BO \AW \MM \OB
COMMENT_LINE $8415 \VOX_TERM
COMMENT_LINE $8421 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $8421 \SLOW \TT \OHIH \SLOW \MM
COMMENT_LINE $8421 \VOX_TERM \VOX_TERM
COMMENT_LINE $8434 \RESET \SLOW \PITCH \98 \BEND \2
COMMENT_LINE $8434 \DO \FAST \UX \OB \UH \FAST \LE
COMMENT_LINE $8434 \slow \KO \AY \SH \P5
COMMENT_LINE $8449 \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $8449 \2 \SLOW \SLOW \SH \SH
COMMENT_LINE $8449 \FAST \OW \TT \P5 \SLOW
COMMENT_LINE $8449 \PO \FAST \AYWW \FAST \AXRR
COMMENT_LINE $8449 \VOX_TERM \VOX_TERM
COMMENT_LINE $845C \WH \IH \SE \KO \SLOW \IH
COMMENT_LINE $8469 \SLOW  \OH \TT \OW \FF \FAST    \OHIY   \RR
COMMENT_LINE $8478 \TT \RR \IH \PO
COMMENT_LINE $8478 \EHLL \P5 \P5 \SLOW \SLOW \SH \SH \FAST
COMMENT_LINE $8478 \OW \TT
COMMENT_LINE $848D \RESET \SLOW \PITCH \98 \BEND
COMMENT_LINE $848D \2 \EY \KE \SE \TT
COMMENT_LINE $848D \FAST \RR \FAST \AX \P5
COMMENT_LINE $848D \LE \OHIH \FF \VOX_TERM \VOX_TERM
COMMENT $8493 0 terminated!
COMMENT_LINE $849B \LE \EH \VV \FAST \EH \LE \P5
COMMENT_LINE $849B /* vim: = filetype=dasm: */
COMMENT_LINE $849B jetphones.inc
COMMENT_LINE $849B V0.9: B. Watson 20060621
COMMENT_LINE $849B Useful constants for developing AtariVox applications with DASM.
COMMENT_LINE $849B This is basically a DASM-readable version of pages 15 and 16 of the
COMMENT_LINE $849B SpeakJet manual. The phoneme names were taken straight from the manual.
COMMENT_LINE $849B The pause and control code names were assigned by me, but they're
COMMENT_LINE $849B pretty obvious. Also, I'm adding descriptive aliases for the non-speech
COMMENT_LINE $849B noises (e.g. SHOT = M1 (the "Pistol Shot").
COMMENT_LINE $849B See "phrases.inc" for example usage.
COMMENT_LINE $849B Phonemes/allophones:
COMMENT_LINE $849B Various noises, non-speech:
COMMENT_LINE $849B R0-R9: Robot
COMMENT_LINE $849B R0 - R9 make up a musical scale of sorts.
COMMENT_LINE $849B None of these are affected by the PITCH command,
COMMENT_LINE $849B though they are affected by SPEED and BEND.
COMMENT_LINE $849B I can't come up with good descriptions for 235 or 237, try them yourself
COMMENT_LINE $849B Only those marked with [*] are affected by the PITCH command.
COMMENT_LINE $849B The manual lists these as:
COMMENT_LINE $849B A0-A9: Alarm
COMMENT_LINE $849B B0-B9: Beeps
COMMENT_LINE $849B C0-C9: Biological
COMMENT_LINE $849B M0-M2: Miscellaneous
COMMENT_LINE $849B Convenient names for some of the weird noises:
COMMENT_LINE $849B DTMF (Touch tone) phone tones:
COMMENT_LINE $849B Pauses of various durations:
COMMENT_LINE $849B Control codes:
COMMENT_LINE $849B These need a parameter equ  (X) to follow them:
COMMENT_LINE $849B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $849B The rest of this file was copied and pasted from speakjetmanual.pdf.
COMMENT_LINE $849B I didn't bother to format it nicely :)
COMMENT_LINE $849B 24  PortCtr, X
COMMENT_LINE $849B 25  Port, X
COMMENT_LINE $849B 26  Repeat, X
COMMENT_LINE $849B 28  Call Phrase, X
COMMENT_LINE $849B 29  Goto Phrase, X
COMMENT_LINE $849B Control Codes Details:
COMMENT_LINE $849B 0 - 6 = Pauses.
COMMENT_LINE $849B Pauses of various durations, these will cause the volume to ramp down, wait a specified
COMMENT_LINE $849B amount of time and the ramp back up.  1, 2 & 3, ramp the volume while the format
COMMENT_LINE $849B frequencies are being changed. 4, 5 & 6 wait for silence before changing the format
COMMENT_LINE $849B frequencies.
COMMENT_LINE $849B 0 = 0ms   1 = 100ms   2 = 200ms  3 = 700ms
COMMENT_LINE $849B 4 = 30ms    5 = 60ms   6 = 90ms
COMMENT_LINE $849B 7 = Fast.
COMMENT_LINE $849B Plays the next phoneme at 1/2 the time it normally would play.
COMMENT_LINE $849B 8 = Slow
COMMENT_LINE $849B Plays the next phoneme at 1 and 1/2 the time it normally would play.
COMMENT_LINE $849B 14 = Stress.
COMMENT_LINE $849B Plays the next phoneme with a small amount of stress in the voice.
COMMENT_LINE $849B 15 = Relax
COMMENT_LINE $849B Plays the next phoneme with a small amount of relaxation in the voice.
COMMENT_LINE $849B 16 = Wait
COMMENT_LINE $849B This command will stop the voicing and wait for a start command.  The Start command
COMMENT_LINE $849B can be issued by either sending the SCP start command or by changing the state of one
COMMENT_LINE $849B of the input lines that has been previously = to do a Start.
COMMENT_LINE $849B 20 = Volume, X
COMMENT_LINE $849B This command sets the master volume level.  A value will need to be sent after the
COMMENT_LINE $849B volume command that specifies the desired volume. Volume levels can range from 0 to
COMMENT_LINE $849B 127.  The default is 96.
COMMENT_LINE $849B 21 = Speed, X
COMMENT_LINE $849B This command sets the play speed.  A value will need to be sent after the speed
COMMENT_LINE $849B command that specifies the desired speed.  Speeds can range from 0 to 127. The
COMMENT_LINE $849B default is 114.
COMMENT_LINE $849B 22 = Pitch, X
COMMENT_LINE $849B This command sets the Vocalization Pitch in Hertz.  A value will need to be sent after
COMMENT_LINE $849B the pitch command that specifies the desired pitch. The vocalization pitch is what makes
COMMENT_LINE $849B a voice sound High pitched or Low pitched.  For singing, the pitch has a range of 3 full
COMMENT_LINE $849B octaves (32Hz to 240hz).  The Vocalization Pitch works only on sounds that are voiced.
COMMENT_LINE $849B Pitches can range from 0 to 255.  The default is 88. Note that anything under 30 starts
COMMENT_LINE $849B to sound like clicks instead of a voice.  Also Note that a value of 0 = 0 Hz and thusly, will
COMMENT_LINE $849B not actually vocalize.
COMMENT_LINE $849B 23 = Bend, X
COMMENT_LINE $849B This command sets the frequency Bend.  A value will need to be sent after the Bend
COMMENT_LINE $849B command that specifies the desired Bend. The frequency Bend adjusts the output
COMMENT_LINE $849B frequencies of the oscillators. This will change the voicing from a deep-hollow sounding
COMMENT_LINE $849B voice to a High-metallic sounding voice. Bends can range from 0 to 15.  The default is 5.
COMMENT_LINE $849B 24 = PortCtr, X
COMMENT_LINE $849B This command sets the Port Control Value.  A value will need to be sent after the
COMMENT_LINE $849B PortCtr command that specifies the desired function of the output lines.  The Output line
COMMENT_LINE $849B control bits are binaurally encoded where a 1 indicates that the output function is chip
COMMENT_LINE $849B controlled and a 0 indicates that the output function is user controlled. Bit 0 corresponds
COMMENT_LINE $849B to OUT0, etc... PortCtr values can range from 0 to 7.  The default is 7.
COMMENT_LINE $849B 25 = Port, X
COMMENT_LINE $849B This command sets the Port Output Value.  A value will need to be sent after the Port
COMMENT_LINE $849B command that specifies the desired state of the output lines. When the Output line
COMMENT_LINE $849B control bits are = to 0, the corresponding port bit is represented on the output line. Bit
COMMENT_LINE $849B 0 corresponds to OUT0, etc... Port values can range from 0 to 7.  The default is 0.
COMMENT_LINE $849B 26 = Repeat, X
COMMENT_LINE $849B This command sets a number of times to Repeat the next code.  A value will need to be
COMMENT_LINE $849B sent after the Repeat command that specifies the number of times to repeat the next
COMMENT_LINE $849B command.
COMMENT_LINE $849B The Repeat range is from 0 to 255.
COMMENT_LINE $849B 28 = Call Phrase, X
COMMENT_LINE $849B This command specifies which EEPROM phrase to play then to return from.
COMMENT_LINE $849B This can be nested 3 deep maximum.
COMMENT_LINE $849B 29 = Goto Phrase, X
COMMENT_LINE $849B This command specifies which EEPROM phrase to play.
COMMENT_LINE $849B 30 = Delay, X
COMMENT_LINE $849B This command specifies the number of 10ms intervals to delay before continuing
COMMENT_LINE $849B on to the next code. The Delay range is from 0 to 255.
COMMENT_LINE $849B 31 = Reset
COMMENT_LINE $849B This command resets the Volume, Speed, Pitch and Bend to the default values.
COMMENT_LINE $85CB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 loop count
COMMENT $0000 scale width
COMMENT $0000 go ++ to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 -CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go left
COMMENT_LINE $0000 draw
COMMENT $0000 switch to y int, enable mux
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 light OFF, ZERO OFF
COMMENT_LINE $0000 ldd      #$FF
COMMENT_LINE $0000 stb      <VIA_shift_reg
COMMENT $0000 light OFF, ZERO OFF
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 sta      <VIA_shift_reg
COMMENT $0000 go +- to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 +CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go right
COMMENT_LINE $0000 draw
COMMENT $0000 Store Y in D/A register
COMMENT $0000 switch to y int, enable mux
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 light OFF, ZERO OFF
COMMENT_LINE $0000 ldd      #$FF
COMMENT_LINE $0000 stb      <VIA_shift_reg
COMMENT $0000 light OFF, ZERO OFF
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 sta      <VIA_shift_reg
FORCE_SYMBOL $85CB OBJECT_SCALE
FORCE_SYMBOL $85CD VIA_t1_cnt_lo
FORCE_SYMBOL $85D0 multTimer
FORCE_SYMBOL $85D7 multTimer
FORCE_SYMBOL $85DC multiplyer
FORCE_SYMBOL $85DF NON_MULTIPLYER_BITS
FORCE_SYMBOL $85E1 MULTIPLY_1_OR
FORCE_SYMBOL $85E3 multiplyer
FORCE_NO_SYMBOL $85E6
FORCE_SYMBOL $85E8 player_score_80
COMMENT_LINE $85EB ldu      #SM_Fighter_Anim
FORCE_SYMBOL $85EB playerNumberOfBulletsPerShot
FORCE_SYMBOL $85F0 SM_Fighter_AnimList
FORCE_SYMBOL $85F5 playAnimDelayCounter
FORCE_SYMBOL $85FA ANIMATION_DELAY
FORCE_SYMBOL $85FC playAnimDelayCounter
FORCE_SYMBOL $85FF playerAnim
FORCE_SYMBOL $8602 playerAnim
FORCE_SYMBOL $860E playerAnim
FORCE_SYMBOL $8611 playerAnim
FORCE_NO_SYMBOL $8617
FORCE_SYMBOL $8619 VIA_int_flags
FORCE_SYMBOL $861D drunkTimer
FORCE_NO_SYMBOL $8622
COMMENT $8625 Store Y in D/A register
FORCE_SYMBOL $8625 VIA_port_a
COMMENT $8627 Blank low, zero high?
FORCE_NO_SYMBOL $8627
FORCE_SYMBOL $8629 VIA_cntl
COMMENT $862C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $862C VIA_port_b
COMMENT_LINE $862F nop
COMMENT $862F Disable mux
FORCE_SYMBOL $862F VIA_port_b
COMMENT $8631 Store X in D/A register
FORCE_SYMBOL $8631 VIA_port_a
COMMENT $8633 enable timer
FORCE_SYMBOL $8633 VIA_t1_cnt_hi
FORCE_SYMBOL $8635 drunkTimer
FORCE_NO_SYMBOL $8638
FORCE_NO_SYMBOL $863A
FORCE_SYMBOL $863C VIA_int_flags
COMMENT $8641 Store Y in D/A register
FORCE_SYMBOL $8641 VIA_port_a
COMMENT $8643 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $8643 VIA_port_b
COMMENT $8646 Disable mux
FORCE_SYMBOL $8646 VIA_port_b
COMMENT $8648 Store X in D/A register
FORCE_SYMBOL $8648 VIA_port_a
COMMENT $864A light OFF, ZERO OFF
FORCE_NO_SYMBOL $864A
FORCE_SYMBOL $864C VIA_cntl
COMMENT $864E enable timer
FORCE_SYMBOL $864E VIA_t1_cnt_hi
FORCE_SYMBOL $8650 drunkTimer
FORCE_NO_SYMBOL $8653
COMMENT $8656 wait 2 cycles
COMMENT $8657 wait 2 cycles
COMMENT $8658 light OFF, ZERO OFF
FORCE_NO_SYMBOL $8658
FORCE_SYMBOL $865A VIA_cntl
COMMENT $865D Store Y in D/A register
FORCE_SYMBOL $865D VIA_port_a
COMMENT $865F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $865F VIA_port_b
COMMENT $8662 Disable mux
FORCE_SYMBOL $8662 VIA_port_b
COMMENT $8664 Store X in D/A register
FORCE_SYMBOL $8664 VIA_port_a
COMMENT $8666 enable timer
FORCE_SYMBOL $8666 VIA_t1_cnt_hi
COMMENT $8668 wait 2 cycles
COMMENT $8669 wait 2 cycles
FORCE_NO_SYMBOL $866A
COMMENT $866D Store Y in D/A register
FORCE_SYMBOL $866D VIA_port_a
COMMENT $866F Blank low, zero high?
FORCE_NO_SYMBOL $866F
FORCE_SYMBOL $8671 VIA_cntl
COMMENT $8674 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $8674 VIA_port_b
COMMENT_LINE $8677 nop
COMMENT $8677 Disable mux
FORCE_SYMBOL $8677 VIA_port_b
COMMENT $8679 Store X in D/A register
FORCE_SYMBOL $8679 VIA_port_a
COMMENT $867B enable timer
FORCE_SYMBOL $867B VIA_t1_cnt_hi
FORCE_NO_SYMBOL $867D
FORCE_SYMBOL $867F VIA_int_flags
COMMENT $8683 twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $8683 SMVB_drawSmart
FORCE_SYMBOL $8686 playerBonusActive
FORCE_SYMBOL $868B BITFIELD_ARMOR
FORCE_SYMBOL $868F SM_Armor_Anim
FORCE_SYMBOL $8692 continueDrawFighter
COMMENT_LINE $8695 draw cleanup
FORCE_NO_SYMBOL $8695
FORCE_SYMBOL $8697 gameScale
COMMENT $869A /BLANK low and /ZERO low
FORCE_SYMBOL $869A VIA_cntl
FORCE_SYMBOL $869D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $86A0
FORCE_SYMBOL $86A3 VIA_port_b
FORCE_SYMBOL $86A6 BITFIELD_SHIELD
FORCE_SYMBOL $86AA SM_Shield_Anim
FORCE_SYMBOL $86AD playerBonusCounter
FORCE_SYMBOL $86B2 playerBonusCounter
FORCE_NO_SYMBOL $86B7
FORCE_NO_SYMBOL $86BF
FORCE_SYMBOL $86C3 continueDrawFighter
FORCE_SYMBOL $86C6 playerBonusActive
FORCE_SYMBOL $86C9 continueDrawFighter
FORCE_SYMBOL $86CC BITFIELD_SCOOP
FORCE_SYMBOL $86D0 playerBonusCounter
COMMENT $86D5 dec playerBonusCounter
FORCE_SYMBOL $86D5 playerBonusCounter
FORCE_NO_SYMBOL $86DC
FORCE_NO_SYMBOL $86E4
COMMENT $86E8 loop count
FORCE_NO_SYMBOL $86E8
FORCE_SYMBOL $86EA tmp2_tmp
FORCE_NO_SYMBOL $86F1
FORCE_SYMBOL $86F3 VIA_t1_cnt_lo
COMMENT $86F5 scale width
FORCE_SYMBOL $86F5 tmp1_tmp
COMMENT $86F8 go ++ to next step
FORCE_NO_SYMBOL $86F8
COMMENT_LINE $86FB move
COMMENT $86FB Store Y in D/A register
FORCE_SYMBOL $86FB VIA_port_b
COMMENT $86FD Store Y in D/A register
FORCE_SYMBOL $86FD VIA_port_a
COMMENT_LINE $86FF Enable mux ; hey dis si "break integratorzero 440"
COMMENT $86FF -CORRECTION ; intervall add right is only half intervall add up
FORCE_NO_SYMBOL $86FF
COMMENT $8701 Disable mux
FORCE_SYMBOL $8701 VIA_port_b
COMMENT $8703 Store Y in D/A register
FORCE_SYMBOL $8703 VIA_port_a
COMMENT $8705 enable timer
FORCE_SYMBOL $8705 VIA_t1_cnt_hi
FORCE_SYMBOL $8707 tmp1_tmp
FORCE_SYMBOL $870A VIA_t1_cnt_lo
FORCE_SYMBOL $870C SCOOP_INTERVALL_ADD
FORCE_SYMBOL $870E tmp1_tmp
FORCE_NO_SYMBOL $8711
FORCE_SYMBOL $8713 VIA_int_flags
COMMENT $8717 draw go left
FORCE_NO_SYMBOL $8717
COMMENT_LINE $871A draw
COMMENT $871A switch to y int, enable mux
FORCE_SYMBOL $871A VIA_port_b
COMMENT $871C Store Y in D/A register
FORCE_SYMBOL $871C VIA_port_a
COMMENT_LINE $871E no wait since Y is 0
COMMENT $871F Disable mux
FORCE_SYMBOL $871F VIA_port_b
COMMENT $8721 Store X in D/A register
FORCE_SYMBOL $8721 VIA_port_a
COMMENT $8723 light OFF, ZERO OFF
FORCE_NO_SYMBOL $8723
FORCE_SYMBOL $8726 VIA_cntl
COMMENT_LINE $8728 ldd      #$FF
COMMENT_LINE $8728 stb      <VIA_shift_reg
FORCE_SYMBOL $8728 VIA_t1_cnt_hi
FORCE_SYMBOL $872A SCOOP_INTERVALL_ADD
FORCE_SYMBOL $872C VIA_t1_cnt_lo
COMMENT $872E light OFF, ZERO OFF
FORCE_NO_SYMBOL $872E
COMMENT_LINE $8730 clra
FORCE_NO_SYMBOL $8730
FORCE_SYMBOL $8732 VIA_int_flags
FORCE_SYMBOL $8736 VIA_cntl
COMMENT_LINE $8738 sta      <VIA_shift_reg
COMMENT $8738 go +- to next step
FORCE_NO_SYMBOL $8738
COMMENT_LINE $873B move
COMMENT $873B Store Y in D/A register
FORCE_SYMBOL $873B VIA_port_b
COMMENT $873D Store Y in D/A register
FORCE_SYMBOL $873D VIA_port_a
COMMENT_LINE $873F Enable mux ; hey dis si "break integratorzero 440"
COMMENT $873F +CORRECTION ; intervall add right is only half intervall add up
COMMENT $8741 Disable mux
FORCE_SYMBOL $8741 VIA_port_b
COMMENT $8743 Store Y in D/A register
FORCE_SYMBOL $8743 VIA_port_a
COMMENT $8745 enable timer
FORCE_SYMBOL $8745 VIA_t1_cnt_hi
FORCE_SYMBOL $8747 tmp1_tmp
FORCE_SYMBOL $874A VIA_t1_cnt_lo
FORCE_SYMBOL $874C SCOOP_INTERVALL_ADD
FORCE_SYMBOL $874E tmp1_tmp
FORCE_NO_SYMBOL $8751
FORCE_SYMBOL $8753 VIA_int_flags
COMMENT $8757 draw go right
FORCE_NO_SYMBOL $8757
COMMENT_LINE $875A draw
COMMENT $875A Store Y in D/A register
FORCE_SYMBOL $875A VIA_port_a
COMMENT $875C switch to y int, enable mux
FORCE_SYMBOL $875C VIA_port_b
COMMENT_LINE $875E no wait since Y is 0
COMMENT $875F Disable mux
FORCE_SYMBOL $875F VIA_port_b
COMMENT $8761 Store X in D/A register
FORCE_SYMBOL $8761 VIA_port_a
COMMENT $8763 light OFF, ZERO OFF
FORCE_NO_SYMBOL $8763
FORCE_SYMBOL $8766 VIA_cntl
COMMENT_LINE $8768 ldd      #$FF
COMMENT_LINE $8768 stb      <VIA_shift_reg
FORCE_SYMBOL $8768 VIA_t1_cnt_hi
FORCE_SYMBOL $876A SCOOP_INTERVALL_ADD
FORCE_SYMBOL $876C VIA_t1_cnt_lo
COMMENT $876E light OFF, ZERO OFF
FORCE_NO_SYMBOL $876E
COMMENT_LINE $8770 clra
FORCE_NO_SYMBOL $8770
FORCE_SYMBOL $8772 VIA_int_flags
COMMENT_LINE $8776 sta      <VIA_shift_reg
FORCE_SYMBOL $8776 VIA_cntl
FORCE_SYMBOL $8778 tmp2_tmp
FORCE_SYMBOL $8781 playerBonusActive
FORCE_SYMBOL $8786 playerAnim
COMMENT $878C twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $878C SMVB_drawSmart
COMMENT_LINE $878F draw cleanup
FORCE_NO_SYMBOL $878F
FORCE_SYMBOL $8791 gameScale
COMMENT $8794 /BLANK low and /ZERO low
FORCE_SYMBOL $8794 VIA_cntl
FORCE_SYMBOL $8797 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $879A
FORCE_SYMBOL $879D VIA_port_b
COMMENT_LINE $87A0 ***************************************************************************
FORCE_NO_SYMBOL $87A0
FORCE_SYMBOL $87A2 Vec_Text_Width
FORCE_SYMBOL $87A7 Vec_Text_Height
FORCE_SYMBOL $87AA doWarpFailure
FORCE_SYMBOL $87AF levelCount
FORCE_SYMBOL $87B2 TITLE_TEXT_LENGTH
FORCE_SYMBOL $87B5 level00Title
FORCE_SYMBOL $87BA titletextIntensity
FORCE_SYMBOL $87BD Intensity_a
FORCE_SYMBOL $87C0 titletextFadeDirection
FORCE_SYMBOL $87C5 titletextIntensity
FORCE_SYMBOL $87C8 titletextIntensity
FORCE_SYMBOL $87CD titletextIntensity
FORCE_SYMBOL $87D0 titletextIntensity
FORCE_SYMBOL $87D3 titletextFadeDirection
FORCE_SYMBOL $87D8 titletextDisplayDone
FORCE_SYMBOL $87DD titletextIntensity
FORCE_SYMBOL $87E0 titletextIntensity
FORCE_SYMBOL $87E5 titletextIntensity
FORCE_SYMBOL $87E8 titletextIntensity
FORCE_SYMBOL $87EB titletextFadeDirection
COMMENT_LINE $87EE first thing in test routine is
COMMENT_LINE $87EE MoveTo which uses T1, which clears T1 interrupt
COMMENT_LINE $87EE upon entry -> make sure SR interrupt is set, so we
COMMENT_LINE $87EE do not do a bankswitch
COMMENT_LINE $87EE ( after move is finished, autmatically T1 IRQ is = again
COMMENT_LINE $87EE so the text output can be done with SR)
COMMENT $87EE ensure that shift can generate interrupt
FORCE_NO_SYMBOL $87EE
COMMENT_LINE $87F1 for some reason or another, VIA doesn't like a
COMMENT_LINE $87F1 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $87F1 (only on a real vectrex, not Vide)
FORCE_SYMBOL $87F1 VIA_aux_cntl
COMMENT $87F3 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $87F3 VIA_shift_reg
COMMENT $87F5 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $87F5
FORCE_SYMBOL $87F7 VIA_int_enable
COMMENT_LINE $87F9 wait 20 cycles till store of aux (these are 23)
COMMENT $87F9 12
COMMENT $87FA 3
FORCE_NO_SYMBOL $87FA
COMMENT_LINE $87FC nop      10
FORCE_SYMBOL $87FC VIA_aux_cntl
FORCE_NO_SYMBOL $87FE
FORCE_SYMBOL $8800 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $8803
FORCE_SYMBOL $8806 syncPrintStrd
FORCE_SYMBOL $8809 difficulty
COMMENT $880C not in hardmode
FORCE_SYMBOL $880E playerLives
FORCE_NO_SYMBOL $8815
COMMENT $8817 /BLANK low and /ZERO low
FORCE_SYMBOL $8817 VIA_cntl
FORCE_NO_SYMBOL $881D
FORCE_SYMBOL $8821 Intensity_7F
FORCE_SYMBOL $8826 Intensity_3F
FORCE_SYMBOL $8829 lastLiveWarning
FORCE_NO_SYMBOL $882C
FORCE_SYMBOL $882F syncPrintStrd
FORCE_SYMBOL $8832 Intensity_3F
FORCE_NO_SYMBOL $8835
FORCE_SYMBOL $8838 Vec_Text_HW
COMMENT_LINE $8856 not all references are QUOTATIONS!
COMMENT $8856 Series: Ambassador Kosh in Babylon 5 [Peer]
COMMENT $88D2 Game: MMO: World of Warcraft
COMMENT $88F1 Book, Shakrepear Hamlet [Peer]
COMMENT $8910 Movie: Close Encounters of the third Kind [Peer]
COMMENT $892F Movie: War games  [Peer]
COMMENT $894E Music: Bob Dylan, The times are a-changing?
COMMENT $896D Movie: Aliens [Peer]
COMMENT $89AB The Movie (non science fiction, Michael Douglas
COMMENT $89CA Series: Buffy (in reference to the vampire amongs the aliens)
COMMENT $89E9 Movie: The Day the Earth stood still [Peer]
COMMENT $8A46 Arcade game: Berzerk
COMMENT $8A65 Movie: Starship Troupers (Dizzy reference is already in the diary)
COMMENT $8A84 Movie: Starship Troupers
COMMENT $8AC2 Game (C64): STARFLIGHT
COMMENT $8AE1 Game (Mega Drive, now a MEME): Zero Wing
COMMENT $8B00 Movie: Starship troupers / Latin Quot CATO [Peer]
COMMENT $8B5D Arcade game: Designers of Sinistar
COMMENT $8B7C Arcade game: Sinistar itself, there are Workers and warriors
COMMENT $8BD9 Arcade game: John Doremus did the voice in Sinistar
COMMENT $8C17 Game: Fallout
COMMENT $8C36 Movie: The last Starfighter
COMMENT $8C93 Game: Warlords II (SSG fantasy strategy game)
COMMENT $8CD1 Arcade game: That is THE sinistar again, it ROARS really loud!
COMMENT $8CF0 Game: Diablo II
COMMENT $8D0F Arcade game: the miners in sinistar are called "SPORG"
COMMENT $8D2E Game: Pokemon
COMMENT $8D4D Book: The book by Ernest
COMMENT $8D6C Movie: Bladerunner
COMMENT $8D8B Arcade game: Sinistar AGAIN
COMMENT $8E07 Series: Fringe "Be a better man than you father..." (greek)
COMMENT $8E26 Game: Portal (from Valve)
COMMENT $8E45 Game: Life Is Strange: Before the Storm
COMMENT $8E83 Movie: Star wars, 1st Movie
COMMENT $8EA2 Movie: 2001
COMMENT $8EE0 Movie: General Star wars reference
COMMENT $8F1E Movie: The planet that got destroyed by the death star
COMMENT $8F3D Game: Skyrim - The first Dragon shout to learn
COMMENT $8F5C Book: The hitchhikers guide to the galaxy
COMMENT $8F7B Series: Dr Who [Peer]
COMMENT $8F9A BOTH: a star wars reference (Tatooine), AND there is a cool interactive fiction "adventure" called Anchorhead (Lovecraft)
COMMENT $8FB9 Movie: General Star wars reference
COMMENT $8FD8 Movie: Princess Leia of Star Wars
COMMENT $8FF7 Movie: Disney: The Black Hole
COMMENT $9016 Game: PS4: "Detroit: Become human"
COMMENT $9035 Book: The Circle, book by Dave Eggers
COMMENT $9054 Game: Fallout 4
COMMENT $9092 Music: Together the ABBA song (with liberty):
COMMENT_LINE $90B1 Mamma Mia, here I go again
COMMENT_LINE $90B1 My my, how can I resist you
COMMENT_LINE $90B1 Mamma Mia, does it show again
COMMENT_LINE $90B1 My my, just how much I've missed you
COMMENT $90B1 Movie: Star wars [Peer]
COMMENT $90EF Movie: Star Wars - The Emperor
COMMENT $910E Movie: Soylent green
COMMENT $912D Movie: Silent Running
COMMENT $914C Movie: Logans Run
COMMENT $916B Movie: Star Wars
COMMENT $91A9 Series: Star Trek
COMMENT $9206 Series: Star Trek, Picard [Peer]
COMMENT $9225 Book: Neuromancer
COMMENT $9244 Movie: The time machine
COMMENT $9263 Series: Startrek (original series) The Trouble With Tribbles
COMMENT $92A1 Movie: 2001
COMMENT $92DF Movie: The 5th element (Milla Jovovich)
COMMENT $92FE Game: PS4: The Last of Us 2
COMMENT $933C Movie: The Matrix
COMMENT $937A Book/Series: Authors [Peer]
COMMENT $93B8 Book: Hitch Hikers Guide to the galaxy - again (Part II)
COMMENT $93D7 Game: Doom
COMMENT $93F6 Game: Inventor and lead programmer of Minecraft
COMMENT $9415 Series: Star Wars [Peer]
COMMENT $9453 Movie: Dune
COMMENT $9472 Game: Half Life
COMMENT $9491 Movie: TRON (Sark, when Flynn plays his first match on the grid) [Peer]
COMMENT_LINE $94CF ***************************************************************************
FORCE_SYMBOL $94CF behaviourData
FORCE_NO_SYMBOL $94D3
FORCE_SYMBOL $94D5 tmp4_tmp
COMMENT_LINE $94D8 look what kind of bonus we would lose
COMMENT_LINE $94D8 build new bonuses and "spread" them out
COMMENT_LINE $94D8 start position of bonus
FORCE_SYMBOL $94DA playerXpos
FORCE_SYMBOL $94DD bonusSpawnPosition
COMMENT_LINE $94E0 "randomize" position of individual bonuses
COMMENT_LINE $94E0 ldb #BONUS_SHOT_POWERUP
FORCE_SYMBOL $94E0 bonusData1
FORCE_NO_SYMBOL $94E6
FORCE_NO_SYMBOL $94E8
FORCE_NO_SYMBOL $94EC
FORCE_SYMBOL $94EE tmp4_tmp
FORCE_NO_SYMBOL $94F1
FORCE_NO_SYMBOL $94F5
COMMENT $94F7 type of BONUS
FORCE_SYMBOL $94F9 tmp3_tmp
COMMENT_LINE $94FC check if autofire should be generated!
FORCE_SYMBOL $94FC BONUS_AUTOFIRE
FORCE_SYMBOL $9500 diverseFlags
FORCE_SYMBOL $9503 BIT_FLAG_AUTOFIRE
COMMENT $9509 spawnBonus
FORCE_NO_SYMBOL $9509
FORCE_SYMBOL $950C jsrBank2_fromShift_0
COMMENT $950F no bonus left
FORCE_SYMBOL $950F OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $9514 bonusSpawnPosition
COMMENT $9517 set start pos
FORCE_SYMBOL $9517 Y_POS
FORCE_NO_SYMBOL $9519
COMMENT $951B double speed fall!
FORCE_SYMBOL $951B BONUS_ANIM_POSITION
FORCE_SYMBOL $951D tmp3_tmp
FORCE_SYMBOL $9520 BONUS_FASTER
FORCE_SYMBOL $9524 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $9527
FORCE_SYMBOL $952B BONUS_SHOT2
FORCE_NO_SYMBOL $952D
FORCE_SYMBOL $9531 BONUS_SHOT3
FORCE_SYMBOL $9533 TYPE
FORCE_SYMBOL $9537 BEHAVIOUR
FORCE_SYMBOL $9539 tmp4_tmp
FORCE_NO_SYMBOL $953E
FORCE_SYMBOL $9541 bonusSpawnPosition
COMMENT $9544 returnDeathBonus
FORCE_NO_SYMBOL $9544
FORCE_SYMBOL $9547 jmpBankIRQ3X
COMMENT_LINE $9559 ***************************************************************************
FORCE_SYMBOL $9559 drawStump
FORCE_SYMBOL $955C candle1
FORCE_SYMBOL $9560 waiterVal
FORCE_SYMBOL $9563 phase
COMMENT_LINE $9577 ......
COMMENT_LINE $9577 burn
FORCE_SYMBOL $9577 waiterVal
FORCE_NO_SYMBOL $957A
FORCE_SYMBOL $957E drawCandleStep
COMMENT $9581 and repeat forever
COMMENT_LINE $9582 ......
FORCE_SYMBOL $9582 phase
COMMENT_LINE $9585 wind
FORCE_NO_SYMBOL $9588
FORCE_SYMBOL $958C X_OFFSET
FORCE_SYMBOL $958E Y_OFFSET
FORCE_SYMBOL $9590 FLAME_INT_MAX
FORCE_SYMBOL $9592 X_OFFSET
FORCE_SYMBOL $9594 LOWESTX
FORCE_SYMBOL $9599 drawCandleStep
COMMENT $959C and repeat forever
FORCE_SYMBOL $959D phase
COMMENT_LINE $95A0 flicker before blow
FORCE_NO_SYMBOL $95A3
FORCE_SYMBOL $95A7 X_OFFSET
FORCE_SYMBOL $95A9 Y_OFFSET
FORCE_SYMBOL $95AB FLAME_INT_MAX
FORCE_SYMBOL $95AD FLAME_INT_MAX
FORCE_SYMBOL $95AF X_OFFSET
FORCE_SYMBOL $95B1 waiterVal
FORCE_NO_SYMBOL $95B4
FORCE_SYMBOL $95B8 drawCandleStep
COMMENT $95BB and repeat forever
COMMENT_LINE $95BC ......
FORCE_SYMBOL $95BC phase
COMMENT_LINE $95BF blow away
FORCE_SYMBOL $95BF baseLight
FORCE_SYMBOL $95C2 baseLight
FORCE_SYMBOL $95C5 random_seed
FORCE_NO_SYMBOL $95CB
FORCE_SYMBOL $95CD random_seed
FORCE_NO_SYMBOL $95D0
FORCE_SYMBOL $95D9 random_seed
FORCE_NO_SYMBOL $95DF
FORCE_SYMBOL $95E1 random_seed
FORCE_NO_SYMBOL $95E4
FORCE_SYMBOL $95E6 POS
FORCE_SYMBOL $95E8 POS
FORCE_SYMBOL $95EA FLAME_INT_MAX
FORCE_SYMBOL $95EC FLAME_INT_MAX
FORCE_SYMBOL $95EE FLAME_INT_MAX
FORCE_SYMBOL $95F0 Y_OFFSET
FORCE_SYMBOL $95F2 X_OFFSET
FORCE_SYMBOL $95F4 drawCandleStep
COMMENT $95F7 and repeat forever
COMMENT_LINE $95F8 ......
FORCE_SYMBOL $95F8 phase
FORCE_SYMBOL $95FB initSmoke
COMMENT_LINE $95FE glim and smoke
FORCE_SYMBOL $95FE baseLight
FORCE_SYMBOL $9601 baseLight
FORCE_SYMBOL $9606 baseLight
FORCE_NO_SYMBOL $960C
FORCE_NO_SYMBOL $960E
FORCE_SYMBOL $9612 VALUES
FORCE_NO_SYMBOL $9614
FORCE_SYMBOL $9617 VALUES
FORCE_SYMBOL $9619 COUNTER
FORCE_SYMBOL $961B FLAME_INT_MAX
FORCE_SYMBOL $961F FLAME_INT_MAX
FORCE_NO_SYMBOL $9621
FORCE_SYMBOL $9624 tmp16_tmp
FORCE_SYMBOL $9627 tmp16_tmp2
COMMENT_LINE $962A jmp redo d
FORCE_SYMBOL $962A drawSmokeStep
COMMENT $962D and repeat forever
FORCE_SYMBOL $962E phase
FORCE_NO_SYMBOL $9631
FORCE_SYMBOL $9633 baseLight
FORCE_NO_SYMBOL $9636
FORCE_SYMBOL $9638 waiterVal
FORCE_SYMBOL $963B candle1
FORCE_NO_SYMBOL $963F
FORCE_SYMBOL $9642 POS
FORCE_SYMBOL $9644 xUpdate
FORCE_SYMBOL $9647 VALUES
FORCE_SYMBOL $9649 COUNTER
FORCE_NO_SYMBOL $964B
FORCE_SYMBOL $964D SCALE_POS
FORCE_NO_SYMBOL $964F
FORCE_SYMBOL $9651 FLAME_INT_MAX
FORCE_SYMBOL $9653 XWAIT
FORCE_SYMBOL $9655 X_WAITER
FORCE_SYMBOL $9657 YWAIT
FORCE_SYMBOL $9659 Y_WAITER
FORCE_SYMBOL $965B Y_OFFSET
FORCE_SYMBOL $965D X_OFFSET
FORCE_SYMBOL $965F COUNTER_X
FORCE_SYMBOL $9661 COUNTER
FORCE_NO_SYMBOL $9663
FORCE_SYMBOL $9665 Y_UPDATE
FORCE_NO_SYMBOL $9667
FORCE_SYMBOL $9669 BIGGESTX
FORCE_SYMBOL $966C BIGGESTY
FORCE_SYMBOL $9671 LOWESTX
FORCE_SYMBOL $9674 LOWESTY
FORCE_SYMBOL $9678 smoke
FORCE_NO_SYMBOL $967C
FORCE_SYMBOL $967F POS
FORCE_SYMBOL $9681 smokeValues
FORCE_SYMBOL $9684 VALUES
FORCE_NO_SYMBOL $9686
FORCE_SYMBOL $9688 SCALE_POS
FORCE_NO_SYMBOL $968A
FORCE_SYMBOL $968C FLAME_INT_MAX
FORCE_SYMBOL $968E XWAIT
FORCE_SYMBOL $9690 X_WAITER
FORCE_SYMBOL $9692 YWAIT
FORCE_SYMBOL $9694 Y_WAITER
FORCE_SYMBOL $9696 Y_OFFSET
FORCE_SYMBOL $9698 X_OFFSET
FORCE_NO_SYMBOL $969A
FORCE_SYMBOL $969C COUNTER
FORCE_NO_SYMBOL $969E
FORCE_SYMBOL $96A0 Y_UPDATE
FORCE_NO_SYMBOL $96A2
FORCE_SYMBOL $96A4 BIGGESTX
FORCE_SYMBOL $96A7 BIGGESTY
FORCE_SYMBOL $96AC LOWESTX
FORCE_SYMBOL $96AF LOWESTY
COMMENT_LINE $96B3 ***************************************************************************
FORCE_SYMBOL $96B3 baseLight
COMMENT $96B6 Sets the intensity of the
FORCE_SYMBOL $96B6 Intensity_a
FORCE_SYMBOL $96B9 Candle_0
COMMENT $96BC Text position relative Y
COMMENT $96BE Text position relative X
COMMENT $96C0 in x position of list
COMMENT $96C2 scale positioning
FORCE_NO_SYMBOL $96C2
COMMENT $96C4 scale move in list
FORCE_NO_SYMBOL $96C4
FORCE_SYMBOL $96C6 draw_synced_list_noshift
FORCE_NO_SYMBOL $96C9
COMMENT $96CB /BLANK low and /ZERO low
FORCE_SYMBOL $96CB VIA_cntl
FORCE_SYMBOL $96CE baseLight
FORCE_NO_SYMBOL $96D1
COMMENT $96D3 Sets the intensity of the
FORCE_SYMBOL $96D3 Intensity_a
FORCE_SYMBOL $96D6 Candle_1
COMMENT $96D9 Text position relative Y
COMMENT $96DB Text position relative X
COMMENT $96DD in x position of list
COMMENT $96DF scale positioning
FORCE_NO_SYMBOL $96DF
COMMENT $96E1 scale move in list
FORCE_NO_SYMBOL $96E1
FORCE_SYMBOL $96E3 draw_synced_list_noshift
FORCE_NO_SYMBOL $96E6
COMMENT $96E8 /BLANK low and /ZERO low
FORCE_SYMBOL $96E8 VIA_cntl
FORCE_SYMBOL $96EB Candle_2
COMMENT $96EE Text position relative Y
COMMENT $96F0 Text position relative X
COMMENT $96F2 in x position of list
COMMENT $96F4 scale positioning
FORCE_NO_SYMBOL $96F4
COMMENT $96F6 scale move in list
FORCE_NO_SYMBOL $96F6
FORCE_SYMBOL $96F8 draw_synced_list_noshift
FORCE_NO_SYMBOL $96FB
COMMENT $96FD /BLANK low and /ZERO low
FORCE_SYMBOL $96FD VIA_cntl
FORCE_SYMBOL $9700 baseLight
FORCE_NO_SYMBOL $9703
FORCE_SYMBOL $9705 Candle_3
COMMENT $9708 Text position relative Y
COMMENT $970A Text position relative X
COMMENT $970C in x position of list
COMMENT $970E scale positioning
FORCE_NO_SYMBOL $970E
COMMENT $9710 scale move in list
FORCE_NO_SYMBOL $9710
FORCE_SYMBOL $9712 draw_synced_list_noshift
FORCE_NO_SYMBOL $9715
COMMENT $9717 /BLANK low and /ZERO low
FORCE_SYMBOL $9717 VIA_cntl
COMMENT_LINE $971B STA    VIA_aux_cntl           ; restore usual AUX setting
FORCE_SYMBOL $971B Reset_Pen
FORCE_SYMBOL $971E candle1
FORCE_SYMBOL $9722 FLAME_INT_MAX
COMMENT_LINE $9726 - 100 candle burns
COMMENT_LINE $9726 - 200 candle flickers
COMMENT_LINE $9726 - 300 candle is out, and smokes
COMMENT_LINE $9726 - 500 candle is out message?
COMMENT_LINE $9726 bra flame
COMMENT_LINE $9726 ***************************************************************************
FORCE_SYMBOL $9726 random_seed
FORCE_NO_SYMBOL $972C
FORCE_SYMBOL $972E random_seed
FORCE_NO_SYMBOL $9731
FORCE_NO_SYMBOL $9733
FORCE_SYMBOL $9735 FLAME_INT_MAX
FORCE_SYMBOL $9737 Intensity_a
FORCE_SYMBOL $973A SCALE_POS
FORCE_SYMBOL $973C VIA_t1_cnt_lo
FORCE_SYMBOL $973F POS
COMMENT $9741 Store Y in D/A register
FORCE_SYMBOL $9741 VIA_port_a
COMMENT $9743 Blank low, zero high?
FORCE_NO_SYMBOL $9743
FORCE_SYMBOL $9745 VIA_cntl
COMMENT $9748 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $9748 VIA_port_b
COMMENT_LINE $974B nop
COMMENT $974B Disable mux
FORCE_SYMBOL $974B VIA_port_b
COMMENT $974D Store X in D/A register
FORCE_SYMBOL $974D VIA_port_a
COMMENT $974F enable timer
FORCE_SYMBOL $974F VIA_t1_cnt_hi
FORCE_NO_SYMBOL $9751
FORCE_SYMBOL $9753 VIA_int_flags
FORCE_SYMBOL $9757 VALUES
FORCE_SYMBOL $9759 drawCandle
FORCE_SYMBOL $975C X_WAITER
COMMENT_LINE $9760 X "size2
FORCE_SYMBOL $9760 random_seed
FORCE_NO_SYMBOL $9766
FORCE_SYMBOL $9768 random_seed
FORCE_SYMBOL $976D X_OFFSET
FORCE_SYMBOL $976F X_OFFSET
FORCE_SYMBOL $9771 BIGGESTX
FORCE_SYMBOL $9776 BIGGESTX
FORCE_SYMBOL $9779 X_OFFSET
FORCE_SYMBOL $977D X_OFFSET
FORCE_SYMBOL $977F X_OFFSET
FORCE_SYMBOL $9781 LOWESTX
FORCE_SYMBOL $9786 LOWESTX
FORCE_SYMBOL $9789 X_OFFSET
FORCE_SYMBOL $978B XWAIT
FORCE_SYMBOL $978D X_WAITER
COMMENT_LINE $978F Y "size2
FORCE_SYMBOL $978F Y_WAITER
FORCE_SYMBOL $9793 random_seed
FORCE_NO_SYMBOL $9799
FORCE_SYMBOL $979B random_seed
FORCE_SYMBOL $97A0 Y_OFFSET
FORCE_SYMBOL $97A2 Y_OFFSET
FORCE_SYMBOL $97A4 BIGGESTY
FORCE_SYMBOL $97A9 BIGGESTY
FORCE_SYMBOL $97AC Y_OFFSET
FORCE_SYMBOL $97B0 Y_OFFSET
FORCE_SYMBOL $97B2 Y_OFFSET
FORCE_SYMBOL $97B4 LOWESTY
FORCE_SYMBOL $97B9 LOWESTY
FORCE_SYMBOL $97BC Y_OFFSET
FORCE_SYMBOL $97BE YWAIT
FORCE_SYMBOL $97C0 Y_WAITER
FORCE_SYMBOL $97C3 random_seed
FORCE_NO_SYMBOL $97C9
FORCE_SYMBOL $97CB random_seed
FORCE_NO_SYMBOL $97CE
FORCE_NO_SYMBOL $97D0
FORCE_SYMBOL $97D2 FLAME_INT_MAX
FORCE_SYMBOL $97D4 Intensity_a
FORCE_SYMBOL $97D7 SCALE_POS
FORCE_SYMBOL $97D9 VIA_t1_cnt_lo
FORCE_SYMBOL $97DC POS
COMMENT $97DE Store Y in D/A register
FORCE_SYMBOL $97DE VIA_port_a
COMMENT $97E0 Blank low, zero high?
FORCE_NO_SYMBOL $97E0
FORCE_SYMBOL $97E2 VIA_cntl
COMMENT $97E5 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $97E5 VIA_port_b
COMMENT_LINE $97E8 nop
COMMENT $97E8 Disable mux
FORCE_SYMBOL $97E8 VIA_port_b
COMMENT $97EA Store X in D/A register
FORCE_SYMBOL $97EA VIA_port_a
COMMENT $97EC enable timer
FORCE_SYMBOL $97EC VIA_t1_cnt_hi
FORCE_NO_SYMBOL $97EE
FORCE_SYMBOL $97F0 VIA_int_flags
FORCE_SYMBOL $97F4 VALUES
FORCE_SYMBOL $97F6 drawSmoke
FORCE_SYMBOL $97F9 X_WAITER
COMMENT_LINE $97FD X "size2
FORCE_SYMBOL $97FD random_seed
FORCE_NO_SYMBOL $9803
FORCE_SYMBOL $9805 random_seed
FORCE_SYMBOL $980A X_OFFSET
FORCE_SYMBOL $980C X_OFFSET
FORCE_SYMBOL $980E BIGGESTX
FORCE_SYMBOL $9813 BIGGESTX
FORCE_SYMBOL $9816 X_OFFSET
FORCE_SYMBOL $981A X_OFFSET
FORCE_SYMBOL $981C X_OFFSET
FORCE_SYMBOL $981E LOWESTX
FORCE_SYMBOL $9823 LOWESTX
FORCE_SYMBOL $9826 X_OFFSET
FORCE_SYMBOL $9828 XWAIT
FORCE_SYMBOL $982A X_WAITER
COMMENT_LINE $982C Y "size2
FORCE_SYMBOL $982C Y_WAITER
FORCE_SYMBOL $9830 random_seed
FORCE_NO_SYMBOL $9836
FORCE_SYMBOL $9838 random_seed
FORCE_SYMBOL $983D Y_OFFSET
FORCE_SYMBOL $983F Y_OFFSET
FORCE_SYMBOL $9841 BIGGESTY
FORCE_SYMBOL $9846 BIGGESTY
FORCE_SYMBOL $9849 Y_OFFSET
FORCE_SYMBOL $984D Y_OFFSET
FORCE_SYMBOL $984F Y_OFFSET
FORCE_SYMBOL $9851 LOWESTY
FORCE_SYMBOL $9856 LOWESTY
FORCE_SYMBOL $9859 Y_OFFSET
FORCE_SYMBOL $985B YWAIT
FORCE_SYMBOL $985D Y_WAITER
COMMENT_LINE $9860 ***************************************************************************
FORCE_SYMBOL $9860 COUNTER
FORCE_SYMBOL $9862 ccounter
COMMENT $9865 load D with VIA pokes
FORCE_NO_SYMBOL $9865
COMMENT $9868 poke $81 to port B
FORCE_SYMBOL $9868 VIA_port_b
COMMENT_LINE $986B disable MUX
COMMENT_LINE $986B disable ~RAMP
COMMENT $986B poke $18 to AUX
FORCE_SYMBOL $986B VIA_aux_cntl
COMMENT_LINE $986E shift mode 4
COMMENT_LINE $986E PB7 not timer controlled
COMMENT_LINE $986E PB7 is ~RAMP
COMMENT $986E ,U+ ; load next Y_update
FORCE_SYMBOL $986E Y_UPDATE
FORCE_SYMBOL $9870 Y_OFFSET
COMMENT $9872 poke to DAC
FORCE_SYMBOL $9872 VIA_port_a
COMMENT $9875 B now $80
COMMENT $9876 enable MUX, that means put
FORCE_SYMBOL $9876 VIA_port_b
COMMENT_LINE $9879 DAC to Y integrator S/H
COMMENT_LINE $9879 lda    #$ff
COMMENT $9879 light OFF, ZERO OFF
FORCE_NO_SYMBOL $9879
COMMENT $987B MUX off, only X on DAC now
FORCE_SYMBOL $987B VIA_port_b
COMMENT $9880 store B (X_update) to DAC
FORCE_SYMBOL $9880 VIA_port_a
COMMENT $9883 load poke for MUX disable,
FORCE_NO_SYMBOL $9883
COMMENT_LINE $9885 ~RAMP enable
COMMENT $9885 MUX disable, ~RAMP enable
FORCE_SYMBOL $9885 VIA_port_b
FORCE_SYMBOL $9888 VIA_cntl
COMMENT_LINE $988A STA    VIA_shift_reg          ; poke the enable byte (A) found to
COMMENT_LINE $988A shift, that enables/disables ~BLANK
FORCE_SYMBOL $988A ccounter
COMMENT $988D if zero, we are done with this
COMMENT $988F load next X_update value
FORCE_SYMBOL $9891 X_OFFSET
COMMENT_LINE $9893 X_update
COMMENT $9893 otherwise put the found value to
FORCE_SYMBOL $9893 VIA_port_a
COMMENT_LINE $9896 DAC and thus to X integration
COMMENT $9896 go on, look if another X_update
COMMENT_LINE $9898 value is there...
COMMENT $9898 load value for ramp off, MUX off
FORCE_NO_SYMBOL $9898
COMMENT $989A poke $81, ramp off, MUX off
FORCE_SYMBOL $989A VIA_port_b
FORCE_SYMBOL $989D COUNTER
FORCE_SYMBOL $989F ccounter
COMMENT $98A2 ,U+ ; load next Y_update
FORCE_SYMBOL $98A2 Y_UPDATE
FORCE_SYMBOL $98A4 Y_OFFSET
COMMENT $98A7 poke to DAC
FORCE_SYMBOL $98A7 VIA_port_a
COMMENT $98AA B now $80
COMMENT $98AB enable MUX, that means put
FORCE_SYMBOL $98AB VIA_port_b
COMMENT_LINE $98AE DAC to Y integrator S/H
COMMENT_LINE $98AE lda    #$ff
COMMENT $98AE light OFF, ZERO OFF
FORCE_NO_SYMBOL $98AE
COMMENT $98B0 MUX off, only X on DAC now
FORCE_SYMBOL $98B0 VIA_port_b
COMMENT $98B5 store B (X_update) to DAC
FORCE_SYMBOL $98B5 VIA_port_a
COMMENT $98B8 load poke for MUX disable,
FORCE_NO_SYMBOL $98B8
COMMENT_LINE $98BA ~RAMP enable
COMMENT $98BA MUX disable, ~RAMP enable
FORCE_SYMBOL $98BA VIA_port_b
FORCE_SYMBOL $98BD VIA_cntl
COMMENT_LINE $98BF STA    VIA_shift_reg          ; poke the enable byte (A) found to
COMMENT_LINE $98BF shift, that enables/disables ~BLANK
FORCE_SYMBOL $98BF ccounter
COMMENT $98C2 if zero, we are done with this
COMMENT $98C4 load next X_update value
FORCE_SYMBOL $98C6 X_OFFSET
COMMENT_LINE $98C8 X_update
COMMENT $98C8 otherwise put the found value to
FORCE_SYMBOL $98C8 VIA_port_a
COMMENT_LINE $98CB DAC and thus to X integration
COMMENT $98CB go on, look if another X_update
COMMENT_LINE $98CD value is there...
COMMENT $98CD load value for ramp off, MUX off
FORCE_NO_SYMBOL $98CD
COMMENT $98CF poke $81, ramp off, MUX off
FORCE_SYMBOL $98CF VIA_port_b
COMMENT $98D2 these NOP's seem to be neccessary
COMMENT $98D3 since the delay between VIA and
COMMENT $98D4 integration hardware
COMMENT_LINE $98D5 NOP ; otherwise, there is a space
COMMENT_LINE $98D5 between Y_updates... Malban
COMMENT_LINE $98D5 clra
COMMENT_LINE $98D5 STA    VIA_shift_reg          ; A == %00000000
COMMENT $98D5 light OFF, ZERO OFF
FORCE_NO_SYMBOL $98D5
FORCE_SYMBOL $98D7 VIA_cntl
COMMENT $98D9 load AUX setting
FORCE_NO_SYMBOL $98D9
COMMENT $98DB restore usual AUX setting
FORCE_SYMBOL $98DB VIA_aux_cntl
COMMENT_LINE $98DE (enable PB7 timer, SHIFT mode 4)
COMMENT $98DE and out of here
COMMENT_LINE $98DF ***************************************************************************
FORCE_SYMBOL $98DF COUNTER
FORCE_SYMBOL $98E1 ccounter
COMMENT $98E4 load D with VIA pokes
FORCE_NO_SYMBOL $98E4
COMMENT $98E7 poke $81 to port B
FORCE_SYMBOL $98E7 VIA_port_b
COMMENT_LINE $98EA disable MUX
COMMENT_LINE $98EA disable ~RAMP
COMMENT $98EA poke $18 to AUX
FORCE_SYMBOL $98EA VIA_aux_cntl
COMMENT_LINE $98ED shift mode 4
COMMENT_LINE $98ED PB7 not timer controlled
COMMENT_LINE $98ED PB7 is ~RAMP
COMMENT $98ED ,U+ ; load next Y_update
FORCE_SYMBOL $98ED Y_UPDATE
FORCE_SYMBOL $98EF Y_OFFSET
COMMENT $98F1 poke to DAC
FORCE_SYMBOL $98F1 VIA_port_a
COMMENT $98F4 B now $80
COMMENT $98F5 enable MUX, that means put
FORCE_SYMBOL $98F5 VIA_port_b
COMMENT_LINE $98F8 DAC to Y integrator S/H
COMMENT $98F8 light OFF, ZERO OFF
FORCE_NO_SYMBOL $98F8
COMMENT $98FA MUX off, only X on DAC now
FORCE_SYMBOL $98FA VIA_port_b
COMMENT $98FF store B (X_update) to DAC
FORCE_SYMBOL $98FF VIA_port_a
COMMENT $9902 load poke for MUX disable,
FORCE_NO_SYMBOL $9902
COMMENT_LINE $9904 ~RAMP enable
COMMENT $9904 MUX disable, ~RAMP enable
FORCE_SYMBOL $9904 VIA_port_b
FORCE_SYMBOL $9907 VIA_cntl
COMMENT_LINE $9909 shift, that enables/disables ~BLANK
FORCE_SYMBOL $9909 ccounter
COMMENT $990C if zero, we are done with this
COMMENT $990E load next X_update value
FORCE_SYMBOL $9910 X_OFFSET
COMMENT_LINE $9912 X_update
COMMENT $9912 otherwise put the found value to
FORCE_SYMBOL $9912 VIA_port_a
COMMENT_LINE $9915 DAC and thus to X integration
COMMENT $9915 go on, look if another X_update
COMMENT_LINE $9917 value is there...
COMMENT $9917 load value for ramp off, MUX off
FORCE_NO_SYMBOL $9917
COMMENT $9919 poke $81, ramp off, MUX off
FORCE_SYMBOL $9919 VIA_port_b
COMMENT $991C these NOP's seem to be neccessary
COMMENT $991D since the delay between VIA and
COMMENT $991E integration hardware
COMMENT_LINE $991F NOP ; otherwise, there is a space
COMMENT_LINE $991F between Y_updates... Malban
COMMENT $991F light OFF, ZERO OFF
FORCE_NO_SYMBOL $991F
FORCE_SYMBOL $9921 VIA_cntl
COMMENT $9923 load AUX setting
FORCE_NO_SYMBOL $9923
COMMENT $9925 restore usual AUX setting
FORCE_SYMBOL $9925 VIA_aux_cntl
COMMENT_LINE $9928 (enable PB7 timer, SHIFT mode 4)
COMMENT $9928 and out of here
COMMENT_LINE $9929 ***************************************************************************
COMMENT $995F sync and move to y, x
COMMENT $9962 additional sync move to y, x
COMMENT $9965 draw, y, x
COMMENT $9968 draw, y, x
COMMENT $996B draw, y, x
COMMENT $996E draw, y, x
COMMENT $9971 draw, y, x
COMMENT $9974 draw, y, x
COMMENT $9977 draw, y, x
COMMENT $997A draw, y, x
COMMENT $997D draw, y, x
COMMENT $9980 draw, y, x
COMMENT $9983 draw, y, x
COMMENT $9986 draw, y, x
COMMENT $9989 draw, y, x
COMMENT $998C draw, y, x
COMMENT $998F draw, y, x
COMMENT $9992 draw, y, x
COMMENT $9995 endmarker
COMMENT $9996 sync and move to y, x
COMMENT $9999 draw, y, x
COMMENT $999C draw, y, x
COMMENT $999F draw, y, x
COMMENT $99A2 draw, y, x
COMMENT $99A5 draw, y, x
COMMENT $99A8 draw, y, x
COMMENT $99AB draw, y, x
COMMENT $99AE draw, y, x
COMMENT $99B1 draw, y, x
COMMENT $99B4 draw, y, x
COMMENT $99B7 sync and move to y, x
COMMENT $99BA draw, y, x
COMMENT $99BD draw, y, x
COMMENT $99C0 draw, y, x
COMMENT $99C3 draw, y, x
COMMENT $99C6 draw, y, x
COMMENT $99C9 draw, y, x
COMMENT $99CC draw, y, x
COMMENT $99CF draw, y, x
COMMENT $99D2 draw, y, x
COMMENT $99D5 draw, y, x
COMMENT $99D8 endmarker
COMMENT $99D9 sync and move to y, x
COMMENT $99DC additional sync move to y, x
COMMENT $99DF additional sync move to y, x
COMMENT $99E2 draw, y, x
COMMENT $99E5 draw, y, x
COMMENT $99E8 draw, y, x
COMMENT $99EB draw, y, x
COMMENT $99EE draw, y, x
COMMENT $99F1 draw, y, x
COMMENT $99F4 draw, y, x
COMMENT $99F7 draw, y, x
COMMENT $99FA draw, y, x
COMMENT $99FD draw, y, x
COMMENT $9A00 draw, y, x
COMMENT $9A03 endmarker
COMMENT $9A04 sync and move to y, x
COMMENT $9A07 draw, y, x
COMMENT $9A0A draw, y, x
COMMENT $9A0D draw, y, x
COMMENT $9A10 draw, y, x
COMMENT $9A13 sync and move to y, x
COMMENT $9A16 additional sync move to y, x
COMMENT $9A19 additional sync move to y, x
COMMENT $9A1C draw, y, x
COMMENT $9A1F draw, y, x
COMMENT $9A22 draw, y, x
COMMENT $9A25 draw, y, x
COMMENT $9A28 endmarker
COMMENT_LINE $9A29 bank 0
COMMENT_LINE $9A29 all flash operations (write, erase, test - must be done, and the RAM buffer to copy the rotuines must be available!)
COMMENT_LINE $9A29 RAM buffer at "flashUserRAM" (title RAM definition)
COMMENT_LINE $9A29 **************************************************************************
COMMENT_LINE $9A29 read flash options to RAM
COMMENT_LINE $9A29 fill current/next block values
COMMENT_LINE $9A29 expects bank 0 active
COMMENT_LINE $9A29 in "currentFlashROMStart" current relevant block address
COMMENT_LINE $9A29 returns currentFlashROMStart = 0 if error occured
COMMENT_LINE $9A29 needs flash "RAM" block
COMMENT_LINE $9A29 on error Z = 1
COMMENT_LINE $9A29 **************************************************************************
FORCE_SYMBOL $9A29 flashAvailable
FORCE_SYMBOL $9A2C checkFlash
FORCE_SYMBOL $9A2F flashAvailable
FORCE_SYMBOL $9A32 FLASH_AVAILABLE_BIT
FORCE_SYMBOL $9A36 flashRAMROM
FORCE_SYMBOL $9A39 FlashBlock
COMMENT $9A3C empty flash space
FORCE_NO_SYMBOL $9A3C
FORCE_SYMBOL $9A42 FlashBlock
FORCE_NO_SYMBOL $9A45
FORCE_NO_SYMBOL $9A4A
COMMENT_LINE $9A4F in x the address of the current relevant flash block
FORCE_SYMBOL $9A4F currentFlashROMStart
COMMENT_LINE $9A56 ensure Z != 1
FORCE_NO_SYMBOL $9A56
COMMENT_LINE $9A59 .
COMMENT_LINE $9A59 .......................................................................
COMMENT_LINE $9A59 .
COMMENT_LINE $9A59 copies options to RAM
COMMENT_LINE $9A59 uses current block
COMMENT_LINE $9A59 no flash check, since default options are available
COMMENT_LINE $9A59 **************************************************************************
COMMENT_LINE $9A59 copy options data
FORCE_SYMBOL $9A59 Ram_Options_Start
FORCE_SYMBOL $9A5C currentFlashROMStart
FORCE_SYMBOL $9A63 Ram_Options_End
FORCE_SYMBOL $9A69 additionalFlags
FORCE_NO_SYMBOL $9A6C
FORCE_SYMBOL $9A6E additionalFlags
COMMENT_LINE $9A72 .
COMMENT_LINE $9A72 .......................................................................
COMMENT_LINE $9A72 .
COMMENT_LINE $9A72 reads highscore to RAM, highscore RAM must be available
COMMENT_LINE $9A72 uses current block
COMMENT_LINE $9A72 no flash check, since default HS are available
COMMENT_LINE $9A72 **************************************************************************
FORCE_SYMBOL $9A72 Ram_HighScore_Start
FORCE_SYMBOL $9A75 currentFlashROMStart
FORCE_SYMBOL $9A78 OptionStruct
COMMENT_LINE $9A7D lda difficulty
COMMENT_LINE $9A7D bpl normalHSLoad
COMMENT_LINE $9A7D leax     HighScoreEntry*4,x ; load Hardcore highscore
COMMENT_LINE $9A7D normalHSLoad
COMMENT_LINE $9A85 .
COMMENT_LINE $9A85 .......................................................................
COMMENT_LINE $9A85 clears complete sector (from $b000)
COMMENT_LINE $9A85 nothing else
COMMENT_LINE $9A85 needs flash "RAM" block
COMMENT_LINE $9A85 Sector-Erase Operation
COMMENT_LINE $9A85 The Sector-Erase operation allows the system to erase the device on a sector-by-sector basis. The
COMMENT_LINE $9A85 sector architecture is based on uniform sector size of 4 KByte. The Sector-Erase operation is initiated
COMMENT_LINE $9A85 by executing a six-byte command load sequence for Software Data Protection with Sector-Erase command
COMMENT_LINE $9A85 (30H) and sector address (SA) in the last bus cycle. The sector address is latched on the falling
COMMENT_LINE $9A85 edge of the sixth WE# pulse, while the command (30H) is latched on the rising edge of the sixth WE#
COMMENT_LINE $9A85 pulse. The internal Erase operation begins after the sixth WE# pulse. The End-of-Erase can be determined
COMMENT_LINE $9A85 using either Data# Polling or Toggle Bit methods. See Figure 10 for timing waveforms. Any commands
COMMENT_LINE $9A85 written during the Sector-Erase operation will be ignored.
COMMENT_LINE $9A85 .
COMMENT_LINE $9A85 **************************************************************************
FORCE_SYMBOL $9A85 flashAvailable
FORCE_SYMBOL $9A88 FLASH_AVAILABLE_BIT
FORCE_SYMBOL $9A8E flashUserRAM
COMMENT_LINE $9A91 .
FORCE_SYMBOL $9A91 eraseSector_Start
FORCE_SYMBOL $9A94 flashUserRAM
FORCE_SYMBOL $9A9B eraseSector_End
COMMENT_LINE $9AA1 .
COMMENT_LINE $9AA1 data 1,
FORCE_NO_SYMBOL $9AA1
COMMENT_LINE $9AA3 address 1
FORCE_NO_SYMBOL $9AA3
COMMENT_LINE $9AA6 data 2
FORCE_NO_SYMBOL $9AA6
COMMENT_LINE $9AA8 address 2
FORCE_NO_SYMBOL $9AA8
COMMENT_LINE $9AAB data 3
FORCE_NO_SYMBOL $9AAB
COMMENT_LINE $9AAD address 3
FORCE_NO_SYMBOL $9AAD
COMMENT_LINE $9AB0 data 4
FORCE_NO_SYMBOL $9AB0
COMMENT_LINE $9AB2 address 4
FORCE_NO_SYMBOL $9AB2
COMMENT_LINE $9AB5 data 5
FORCE_NO_SYMBOL $9AB5
COMMENT_LINE $9AB7 address 5
FORCE_NO_SYMBOL $9AB7
COMMENT_LINE $9ABA data 6
FORCE_NO_SYMBOL $9ABA
COMMENT_LINE $9ABC address 6
COMMENT $9ABC earse sector beginning at $b000
FORCE_NO_SYMBOL $9ABC
COMMENT $9ABF load from even address
FORCE_NO_SYMBOL $9ABF
COMMENT $9AC2 load again even and eor
FORCE_NO_SYMBOL $9AC2
COMMENT $9AC5 if not equal go on waiting
FORCE_NO_SYMBOL $9AC5
COMMENT_LINE $9ACA .
COMMENT_LINE $9ACA .......................................................................
COMMENT_LINE $9ACA .
COMMENT_LINE $9ACA finds and sets new flash block
COMMENT_LINE $9ACA if last flash block was used, than flash sector is
COMMENT_LINE $9ACA erased and flash blocks start anew from $b000
COMMENT_LINE $9ACA .
COMMENT_LINE $9ACA Assumed: currentFlashROMStart was initialized to current block
COMMENT_LINE $9ACA .
COMMENT_LINE $9ACA **************************************************************************
FORCE_SYMBOL $9ACA currentFlashROMStart
COMMENT $9ACD load next memory address of flashblock
FORCE_SYMBOL $9ACD FlashBlock
COMMENT $9AD0 check if next address has enough space left
COMMENT_LINE $9AD5 format flash
FORCE_NO_SYMBOL $9AD7
FORCE_SYMBOL $9ADA currentFlashROMStart
COMMENT_LINE $9ADD in x now correct adress block of flash that can be written to
COMMENT_LINE $9ADE .
COMMENT_LINE $9ADE .......................................................................
COMMENT_LINE $9ADE .
COMMENT_LINE $9ADE saves options and highscores to next block
COMMENT_LINE $9ADE Highscores AND options are always taken from RAM
COMMENT_LINE $9ADE sets/corrects current next block
COMMENT_LINE $9ADE .
COMMENT_LINE $9ADE needs flash "RAM" block
COMMENT_LINE $9ADE .
COMMENT_LINE $9ADE **************************************************************************
FORCE_SYMBOL $9ADE flashAvailable
FORCE_SYMBOL $9AE1 FLASH_AVAILABLE_BIT
FORCE_SYMBOL $9AE7 writeFlashByte_2RAM
COMMENT $9AEA also loads to X
COMMENT_LINE $9AF0 first write options
FORCE_SYMBOL $9AF0 Ram_Options_Start
FORCE_SYMBOL $9AF5 flashUserRAM
FORCE_NO_SYMBOL $9AF8
FORCE_SYMBOL $9AFA Ram_Options_End
COMMENT_LINE $9B00 second write Highscore
FORCE_SYMBOL $9B00 Ram_HighScore_Start
FORCE_SYMBOL $9B05 flashUserRAM
FORCE_NO_SYMBOL $9B08
FORCE_SYMBOL $9B0A Ram_HardcoreScore_End
COMMENT_LINE $9B11 .
COMMENT_LINE $9B11 .......................................................................
COMMENT_LINE $9B11 .
COMMENT_LINE $9B11 compares highscore RAM/ROM
COMMENT_LINE $9B11 and options RAM/ROM
COMMENT_LINE $9B11 if different -> saves to flash
COMMENT_LINE $9B11 .
COMMENT_LINE $9B11 needs flash "RAM" block
COMMENT_LINE $9B11 **************************************************************************
FORCE_SYMBOL $9B11 flashAvailable
FORCE_SYMBOL $9B14 FLASH_AVAILABLE_BIT
FORCE_SYMBOL $9B1A Ram_Options_Start
FORCE_SYMBOL $9B1D currentFlashROMStart
FORCE_SYMBOL $9B26 Ram_Options_End
FORCE_SYMBOL $9B2C Ram_HighScore_Start
FORCE_SYMBOL $9B35 Ram_HardcoreScore_End
COMMENT_LINE $9B3C .
COMMENT_LINE $9B3C .......................................................................
COMMENT_LINE $9B3C .
COMMENT_LINE $9B3C check flash ID byte
COMMENT_LINE $9B3C z flag = if ok
COMMENT_LINE $9B3C z flag not set, than flash id wrong
COMMENT_LINE $9B3C .
COMMENT_LINE $9B3C needs flash "RAM" block
COMMENT_LINE $9B3C **************************************************************************
FORCE_SYMBOL $9B3C checkForSavedGameFlash
FORCE_SYMBOL $9B41 flashUserRAM
COMMENT_LINE $9B44 .
FORCE_SYMBOL $9B44 checkFlash_Start
FORCE_SYMBOL $9B47 flashUserRAM
FORCE_SYMBOL $9B4E checkFlash_End
COMMENT_LINE $9B54 .
COMMENT_LINE $9B54 data 1,
FORCE_NO_SYMBOL $9B54
COMMENT_LINE $9B56 address 1
FORCE_NO_SYMBOL $9B56
COMMENT_LINE $9B59 data 2
FORCE_NO_SYMBOL $9B59
COMMENT_LINE $9B5B address 2
FORCE_NO_SYMBOL $9B5B
COMMENT_LINE $9B5E data 3
COMMENT $9B5E id
FORCE_NO_SYMBOL $9B5E
COMMENT_LINE $9B60 address 3
FORCE_NO_SYMBOL $9B60
FORCE_NO_SYMBOL $9B63
FORCE_NO_SYMBOL $9B66
FORCE_NO_SYMBOL $9B68
COMMENT $9B6B for SST39SF010
FORCE_NO_SYMBOL $9B6B
COMMENT $9B70 for SST39SF020
FORCE_NO_SYMBOL $9B70
FORCE_SYMBOL $9B75 flashAvailable
FORCE_SYMBOL $9B7A flashAvailable
FORCE_SYMBOL $9B7E flashAvailable
FORCE_SYMBOL $9B81 FLASH_AVAILABLE_BIT
FORCE_SYMBOL $9B83 flashAvailable
COMMENT_LINE $9B87 .
COMMENT_LINE $9B87 .......................................................................
COMMENT_LINE $9B87 .
COMMENT_LINE $9B87 writes one byte to flash memory
COMMENT_LINE $9B87 exepcts flash to be properly formated/erased (all bit = 1)
COMMENT_LINE $9B87 output address = x
COMMENT_LINE $9B87 output byte in A
COMMENT_LINE $9B87 destroys B
COMMENT_LINE $9B87 needs flash "RAM" block
COMMENT_LINE $9B87 **************************************************************************
FORCE_SYMBOL $9B87 writeFlashByte_Start
FORCE_SYMBOL $9B8A flashUserRAM
FORCE_SYMBOL $9B91 writeFlashByte_End
COMMENT_LINE $9B97 .
FORCE_NO_SYMBOL $9B97
FORCE_NO_SYMBOL $9B99
FORCE_NO_SYMBOL $9B9C
FORCE_NO_SYMBOL $9B9E
FORCE_NO_SYMBOL $9BA1
FORCE_NO_SYMBOL $9BA3
FORCE_NO_SYMBOL $9BA6
COMMENT_LINE $9BA8 wait for write to be done
FORCE_NO_SYMBOL $9BA8
FORCE_NO_SYMBOL $9BAA
FORCE_NO_SYMBOL $9BAC
COMMENT_LINE $9BB1 .
COMMENT_LINE $9BB1 .......................................................................
COMMENT_LINE $9BB1 .
COMMENT_LINE $9BB1 . 46 byte!
COMMENT_LINE $9BB1 data 1,
FORCE_NO_SYMBOL $9BB1
COMMENT_LINE $9BB3 address 1
FORCE_NO_SYMBOL $9BB3
COMMENT_LINE $9BB6 data 2
FORCE_NO_SYMBOL $9BB6
COMMENT_LINE $9BB8 address 2
FORCE_NO_SYMBOL $9BB8
COMMENT_LINE $9BBB data 3
FORCE_NO_SYMBOL $9BBB
COMMENT_LINE $9BBD address 3
FORCE_NO_SYMBOL $9BBD
COMMENT_LINE $9BC0 data 4
FORCE_NO_SYMBOL $9BC0
COMMENT_LINE $9BC2 address 4
FORCE_NO_SYMBOL $9BC2
COMMENT_LINE $9BC5 data 5
FORCE_NO_SYMBOL $9BC5
COMMENT_LINE $9BC7 address 5
FORCE_NO_SYMBOL $9BC7
COMMENT_LINE $9BCA data 6
FORCE_NO_SYMBOL $9BCA
COMMENT_LINE $9BCC address 6
COMMENT $9BCC earse sector beginning at $a000
FORCE_NO_SYMBOL $9BCC
COMMENT $9BCF load from even address
FORCE_NO_SYMBOL $9BCF
COMMENT $9BD2 load again even and eor
FORCE_NO_SYMBOL $9BD2
COMMENT $9BD5 if not equal go on waiting
FORCE_NO_SYMBOL $9BD5
COMMENT_LINE $9BDA .
COMMENT_LINE $9BDA .......................................................................
COMMENT_LINE $9BDA clears complete sector (from $a000)
COMMENT_LINE $9BDA nothing else
COMMENT_LINE $9BDA needs flash "RAM" block
COMMENT_LINE $9BDA Sector-Erase Operation
COMMENT_LINE $9BDA The Sector-Erase operation allows the system to erase the device on a sector-by-sector basis. The
COMMENT_LINE $9BDA sector architecture is based on uniform sector size of 4 KByte. The Sector-Erase operation is initiated
COMMENT_LINE $9BDA by executing a six-byte command load sequence for Software Data Protection with Sector-Erase command
COMMENT_LINE $9BDA (30H) and sector address (SA) in the last bus cycle. The sector address is latched on the falling
COMMENT_LINE $9BDA edge of the sixth WE# pulse, while the command (30H) is latched on the rising edge of the sixth WE#
COMMENT_LINE $9BDA pulse. The internal Erase operation begins after the sixth WE# pulse. The End-of-Erase can be determined
COMMENT_LINE $9BDA using either Data# Polling or Toggle Bit methods. See Figure 10 for timing waveforms. Any commands
COMMENT_LINE $9BDA written during the Sector-Erase operation will be ignored.
COMMENT_LINE $9BDA .
COMMENT_LINE $9BDA **************************************************************************
FORCE_SYMBOL $9BDA flashAvailable
FORCE_SYMBOL $9BDD FLASH_AVAILABLE_BIT
COMMENT $9BE5 THIS MUST BE AVAILABLE!
FORCE_SYMBOL $9BE5 bank0flashUserRAM
COMMENT_LINE $9BE8 .
FORCE_SYMBOL $9BE8 eraseSector_Startra000
FORCE_SYMBOL $9BEB bank0flashUserRAM
FORCE_SYMBOL $9BF2 eraseSector_Endra000
COMMENT_LINE $9BF8 .
COMMENT_LINE $9BF8 .......................................................................
COMMENT_LINE $9BF8 .
COMMENT_LINE $9BF8 writes one byte to flash memory
COMMENT_LINE $9BF8 exepcts flash to be properly formated/erased (all bit = 1)
COMMENT_LINE $9BF8 output address = x
COMMENT_LINE $9BF8 output byte in A
COMMENT_LINE $9BF8 destroys B
COMMENT_LINE $9BF8 needs flash "RAM" block
COMMENT_LINE $9BF8 **************************************************************************
FORCE_SYMBOL $9BF8 writeFlashByte_Start
FORCE_SYMBOL $9BFB bank0flashUserRAM
FORCE_SYMBOL $9C02 writeFlashByte_End
COMMENT $9C08 if VECFEVER = 1
COMMENT_LINE $9C08 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $9C08 defaultValuesStart
FORCE_SYMBOL $9C0B currentFlashROMStart
FORCE_SYMBOL $9C0E readOptionsOnly
FORCE_SYMBOL $9C11 readHighscore
COMMENT_LINE $9C14 clra
COMMENT_LINE $9C14 sta      <VIA_shift_reg
COMMENT $9C14 Wait_Recal
FORCE_SYMBOL $9C14 Wait_Recal_noShift
FORCE_NO_SYMBOL $9C17
FORCE_SYMBOL $9C1A Vec_Text_HW
FORCE_SYMBOL $9C1D Intensity_5F
FORCE_SYMBOL $9C20 gameScale
FORCE_SYMBOL $9C23 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $9C26
FORCE_SYMBOL $9C29 error1
COMMENT $9C2C Print_Str_d
FORCE_SYMBOL $9C2C sync_Print_Str_d_8
FORCE_NO_SYMBOL $9C2F
FORCE_SYMBOL $9C32 error2
COMMENT $9C35 Print_Str_d
FORCE_SYMBOL $9C35 sync_Print_Str_d_8
FORCE_NO_SYMBOL $9C38
FORCE_SYMBOL $9C3B error3
COMMENT $9C3E Print_Str_d
FORCE_SYMBOL $9C3E sync_Print_Str_d_8
COMMENT $9C41 get button status
FORCE_SYMBOL $9C41 Read_Btns
COMMENT $9C44 button pressed - any
FORCE_NO_SYMBOL $9C44
COMMENT $9C47 is button 1
FORCE_NO_SYMBOL $9C47
COMMENT $9C4B doCalib0
FORCE_NO_SYMBOL $9C4B
FORCE_SYMBOL $9C4E jmpBank2_from0
COMMENT_LINE $9C86 ...................................
COMMENT $9C86 optionsLoop
FORCE_NO_SYMBOL $9C86
FORCE_SYMBOL $9C89 jmpBank2_from0
COMMENT_LINE $9C8C .............................................................................
FORCE_SYMBOL $9C8C showResetMessage
COMMENT $9C8F was "yes" pressed?
FORCE_NO_SYMBOL $9C8F
FORCE_SYMBOL $9C95 Ram_Options_Start
FORCE_SYMBOL $9C98 resetOptionsStart
FORCE_SYMBOL $9C9F resetOptionsEnd
FORCE_SYMBOL $9CA4 Ram_HighScore_Start
FORCE_SYMBOL $9CA7 resetHighScoreStart
FORCE_SYMBOL $9CAE resetHighScoreEnd
FORCE_SYMBOL $9CB3 Ram_HardcoreScore_Start
FORCE_SYMBOL $9CB6 resetHighScoreStart
FORCE_SYMBOL $9CBD resetHighScoreEnd
FORCE_SYMBOL $9CC2 saveBlockOnChange
COMMENT $9CC5 main00
FORCE_NO_SYMBOL $9CC5
FORCE_SYMBOL $9CC8 jmpBank2_from0
COMMENT_LINE $0000 ..............................
COMMENT_LINE $0000 this is not ment to be resumed!
COMMENT_LINE $9CCB jsr eraseSector, assumes storage is "ff"ed
FORCE_SYMBOL $9CCB writeFlashByte_2RAM
FORCE_SYMBOL $9CD1 SAVE_GAME_MARKER
FORCE_SYMBOL $9CD3 bank0flashUserRAM
FORCE_NO_SYMBOL $9CD6
COMMENT_LINE $9CD8 write all RAM
FORCE_NO_SYMBOL $9CD8
FORCE_SYMBOL $9CDD bank0flashUserRAM
FORCE_NO_SYMBOL $9CE0
FORCE_NO_SYMBOL $9CE2
COMMENT_LINE $9CE9 ..............................
COMMENT_LINE $9CE9 ..............................
FORCE_SYMBOL $9CE9 saveUREG
FORCE_SYMBOL $9CEC saveSREG
FORCE_SYMBOL $9CF0 eraseSectora000
FORCE_SYMBOL $9CF3 saveCurrentGame
FORCE_SYMBOL $9CF6 flashAvailable
COMMENT $9CF9 game available
FORCE_SYMBOL $9CF9 SAVEGAME_AVAILABLE_BIT
FORCE_SYMBOL $9CFB flashAvailable
FORCE_SYMBOL $9CFE backFromStorage
COMMENT_LINE $9D01 ..............................
FORCE_NO_SYMBOL $9D01
FORCE_NO_SYMBOL $9D04
FORCE_SYMBOL $9D09 SAVE_GAME_MARKER
FORCE_SYMBOL $9D0D flashAvailable
COMMENT_LINE $9D12 check for data that should NOT be overwritten
COMMENT_LINE $9D12 (high score, achievements, options etc)
COMMENT_LINE $9D12 skip ram places which must be kept intact
COMMENT_LINE $0000 if loaded via "record" than do not leave out RAM!!!
COMMENT_LINE $0000 do also not overwrite the current save address in flash
FORCE_SYMBOL $9D12 currentFlashROMStart
FORCE_NO_SYMBOL $9D18
FORCE_NO_SYMBOL $9D1A
FORCE_SYMBOL $9D1E Ram_Options_Start
COMMENT_LINE $9D24 higher than options
FORCE_SYMBOL $9D24 Ram_Options_End
COMMENT_LINE $9D2A no ram overwrite
FORCE_NO_SYMBOL $9D2A
FORCE_NO_SYMBOL $9D30
FORCE_SYMBOL $9D36 flashAvailable
FORCE_SYMBOL $9D39 flashAvailable
COMMENT $9D3C no game available
FORCE_SYMBOL $9D3C SAVEGAME_IS_ACTIVE_BIT
FORCE_SYMBOL $9D3E flashAvailable
FORCE_SYMBOL $9D41 saveUREG
FORCE_SYMBOL $9D44 saveSREG
COMMENT_LINE $9D48 reinit stars
COMMENT_LINE $9D48 spawn 1 star!
COMMENT $9D48 initStars
FORCE_NO_SYMBOL $9D48
FORCE_SYMBOL $9D4B jsrBank3_from0_SHIFT
COMMENT $9D4E spawnStar
FORCE_NO_SYMBOL $9D4E
FORCE_SYMBOL $9D51 jsrBank3_from0_SHIFT
COMMENT $9D54 pauseLoop
FORCE_NO_SYMBOL $9D54
FORCE_SYMBOL $9D57 jmpBank2_from0
COMMENT_LINE $9D5A todo jump back to loader place
COMMENT_LINE $9D5A .
COMMENT_LINE $9D5A .......................................................................
COMMENT_LINE $9D5A .
COMMENT_LINE $9D5A saves ALL 1024 bytes of RAM to flash!
COMMENT_LINE $9D5A .
COMMENT_LINE $9D5A needs flash "RAM" block
COMMENT_LINE $9D5A .
COMMENT_LINE $9D5A **************************************************************************
FORCE_SYMBOL $9D5A flashAvailable
COMMENT $9D5D no game available
FORCE_SYMBOL $9D5D FLASH_AVAILABLE_BIT
FORCE_SYMBOL $9D63 writeFlashByte_2RAMA000
FORCE_NO_SYMBOL $9D66
FORCE_SYMBOL $9D69 SAVE_GAME_MARKER
FORCE_SYMBOL $9D6B bank0flashUserRAM
FORCE_NO_SYMBOL $9D6E
COMMENT_LINE $9D70 write all RAM
FORCE_NO_SYMBOL $9D70
FORCE_SYMBOL $9D75 bank0flashUserRAM
FORCE_NO_SYMBOL $9D78
FORCE_NO_SYMBOL $9D7A
COMMENT_LINE $9D81 .
COMMENT_LINE $9D81 .......................................................................
COMMENT_LINE $9D81 .
COMMENT_LINE $9D81 -
COMMENT_LINE $9D81 -----------------------------------------------------------
COMMENT_LINE $9D81 -
FORCE_NO_SYMBOL $9D81
FORCE_SYMBOL $9D84 SAVE_GAME_MARKER
FORCE_SYMBOL $9D88 flashAvailable
COMMENT $9D8B no game available
FORCE_SYMBOL $9D8D flashAvailable
FORCE_SYMBOL $9D91 flashAvailable
COMMENT $9D94 game available
FORCE_SYMBOL $9D94 SAVEGAME_AVAILABLE_BIT
FORCE_SYMBOL $9D96 flashAvailable
COMMENT_LINE $9D9A ***************************************************************************
COMMENT_LINE $9D9A options
COMMENT $9D9A $7b ; calibrationValue6
COMMENT $9D9B $23 ; calibrationValue7
COMMENT $9D9C $23 ; calibrationValue16
COMMENT $9D9D $54 ; calibrationValue40
COMMENT $9D9E $56 ; calibrationValue50
COMMENT $9D9F gameScale
COMMENT $9DA0 shopAllowFlags
COMMENT $9DA1 additionalFlags
COMMENT $9DA2 achievements
COMMENT $9DA8 secretFlags
COMMENT $9DA9 maxLevelReached
COMMENT_LINE $9DAA highscore
COMMENT $9DAA 3 Name, 4*2 bcd, 1 level
COMMENT_LINE $0000 game save
COMMENT_LINE $0000 highscore savings
COMMENT_LINE $B000 struct   OptionStruct
COMMENT_LINE $B000 ds       O_CALIB_SWARM, 1
COMMENT_LINE $B000 ds       O_CALIB_VECTOR, 1
COMMENT_LINE $B000 ds       O_CALIB_MH, 1
COMMENT_LINE $B000 ds       O_CALIB_TEXT, 1
COMMENT_LINE $B000 ds       O_CALIB_BOSS, 1
COMMENT_LINE $B000 ds       O_GAMESCALE, 1
COMMENT_LINE $B000 ds       O_SHOP_ALLOW, 1
COMMENT_LINE $B000 ds       O_OFFICER_RANK, 1              ; not done
COMMENT_LINE $B000 ds       O_DOWNGRADE_IMMUNITY, 1        ;
COMMENT_LINE $B000 ds       O_ACHIEVEMENTS, 5              ; not done
COMMENT_LINE $B000 ds       O_SECRETS, 1              ; not done
COMMENT_LINE $B000 end struct
COMMENT_LINE $B000 calibrationValue6   ds       1                            ; swarm
COMMENT_LINE $B000 calibrationValue7   ds       1                            ; Calibration ZeroRef value (Kirstof Tuts) stored here
COMMENT_LINE $B000 calibrationValue16  ds       1                            ;
COMMENT_LINE $B000 calibrationValue40  ds       1                            ; text
COMMENT_LINE $B000 calibrationValue50  ds       1                            ; boss
COMMENT_LINE $B000 gameScale           ds       1
COMMENT_LINE $B000 shopAllowFlags      ds       1 ; can be calculated from achievements and in game secrets!
COMMENT_LINE $B000 officerRank         ds       1
COMMENT_LINE $B000 downgradeImmunity   ds       1 ; can also be cylculated
COMMENT_LINE $B000 achievements        ds       1+4 ; 40 bitflags
COMMENT_LINE $B000 secret_flags        ds       1
COMMENT_LINE $B000 struct FlashBlock
COMMENT_LINE $B000 ds  NEXT_FREE_FLASHBLOCK, 2; $ffff or $0000 no block available -> erase sector
COMMENT_LINE $B000 ds  OPTION_BLOCK, OptionStruct
COMMENT_LINE $B000 ds  OPTION_BLOCK, HighScoreEntry*4 ; or more
COMMENT_LINE $B000 end struct
COMMENT_LINE $B000 options
COMMENT $B000 $7b ; calibrationValue6
COMMENT $B001 $23 ; calibrationValue7
COMMENT $B002 $23 ; calibrationValue16
COMMENT $B003 $54 ; calibrationValue40
COMMENT $B004 $56 ; calibrationValue50
COMMENT $B005 ASSUME_CALIBRATION = 1
COMMENT $B005 gameScale
COMMENT $B006 shopAllowFlags
COMMENT $B007 additionalFlags
COMMENT_LINE $B008 db       0                            ; downgradeImmunity
COMMENT $B008 achievements
COMMENT $B00E LEVEL_SELECT = 1
COMMENT $B00E secretFlags
COMMENT $B00F maxLevelReached
COMMENT_LINE $B010 highscore
COMMENT $B010 3 Name, 4*2 bcd, 1 level
COMMENT $B030 3 Name, 4*2 bcd, 1 level
COMMENT $B050 test ,,,
RANGE $0000-$01E2 DP $D0
RANGE $01E2-$01E2 DP $FF
RANGE $01E2-$0E05 DP $D0
RANGE $0E05-$0F4B DP $FF
RANGE $0F4B-$838D DP $D0
RANGE $0000-$000B CHAR_DATA 11
RANGE $000B-$000D DW_DATA 1
RANGE $000D-$0011 DB_DATA 4
RANGE $0011-$001D CHAR_DATA 12
RANGE $001D-$0021 DB_DATA 4
RANGE $0021-$002E CHAR_DATA 13
RANGE $002E-$002F DB_DATA 1
RANGE $002F-$050A CODE
RANGE $050A-$051C CHAR_DATA 18
RANGE $051C-$0526 CHAR_DATA 10
RANGE $0526-$0533 CHAR_DATA 13
RANGE $0533-$055F CODE
RANGE $055F-$0564 DB_DATA 5
RANGE $0564-$056A DB_DATA 6
RANGE $056A-$0570 DB_DATA 6
RANGE $0570-$0576 DB_DATA 6
RANGE $0576-$057C DB_DATA 6
RANGE $057C-$0582 DB_DATA 6
RANGE $0582-$0588 DB_DATA 6
RANGE $0588-$058E DB_DATA 6
RANGE $058E-$0594 DB_DATA 6
RANGE $0594-$059A DB_DATA 6
RANGE $059A-$05A0 DB_DATA 6
RANGE $05A0-$05A6 DB_DATA 6
RANGE $05A6-$05AB DB_DATA 5
RANGE $05AB-$05B1 DB_DATA 6
RANGE $05B1-$05B7 DB_DATA 6
RANGE $05B7-$05BD DB_DATA 6
RANGE $05BD-$05C3 DB_DATA 6
RANGE $05C3-$05C9 DB_DATA 6
RANGE $05C9-$05CF DB_DATA 6
RANGE $05CF-$05D5 DB_DATA 6
RANGE $05D5-$05DB DB_DATA 6
RANGE $05DB-$05E1 DB_DATA 6
RANGE $05E1-$05E7 DB_DATA 6
RANGE $05E7-$05ED DB_DATA 6
RANGE $05ED-$05F2 DB_DATA 5
RANGE $05F2-$05F8 DB_DATA 6
RANGE $05F8-$05FE DB_DATA 6
RANGE $05FE-$0604 DB_DATA 6
RANGE $0604-$060A DB_DATA 6
RANGE $060A-$0610 DB_DATA 6
RANGE $0610-$0616 DB_DATA 6
RANGE $0616-$061C DB_DATA 6
RANGE $061C-$0622 DB_DATA 6
RANGE $0622-$0628 DB_DATA 6
RANGE $0628-$062E DB_DATA 6
RANGE $062E-$0634 DB_DATA 6
RANGE $0634-$0639 DB_DATA 5
RANGE $0639-$063F DB_DATA 6
RANGE $063F-$0645 DB_DATA 6
RANGE $0645-$064B DB_DATA 6
RANGE $064B-$0651 DB_DATA 6
RANGE $0651-$0657 DB_DATA 6
RANGE $0657-$065D DB_DATA 6
RANGE $065D-$0663 DB_DATA 6
RANGE $0663-$0669 DB_DATA 6
RANGE $0669-$066F DB_DATA 6
RANGE $066F-$0675 DB_DATA 6
RANGE $0675-$067B DB_DATA 6
RANGE $067B-$0680 DB_DATA 5
RANGE $0680-$0686 DB_DATA 6
RANGE $0686-$068C DB_DATA 6
RANGE $068C-$0692 DB_DATA 6
RANGE $0692-$0698 DB_DATA 6
RANGE $0698-$069E DB_DATA 6
RANGE $069E-$06A4 DB_DATA 6
RANGE $06A4-$06AA DB_DATA 6
RANGE $06AA-$06B0 DB_DATA 6
RANGE $06B0-$06B6 DB_DATA 6
RANGE $06B6-$06BC DB_DATA 6
RANGE $06BC-$06C2 DB_DATA 6
RANGE $06C2-$06C7 DB_DATA 5
RANGE $06C7-$06CD DB_DATA 6
RANGE $06CD-$06D3 DB_DATA 6
RANGE $06D3-$06D9 DB_DATA 6
RANGE $06D9-$06DF DB_DATA 6
RANGE $06DF-$06E5 DB_DATA 6
RANGE $06E5-$06EB DB_DATA 6
RANGE $06EB-$06F1 DB_DATA 6
RANGE $06F1-$06F7 DB_DATA 6
RANGE $06F7-$06FD DB_DATA 6
RANGE $06FD-$0703 DB_DATA 6
RANGE $0703-$0709 DB_DATA 6
RANGE $0709-$070E DB_DATA 5
RANGE $070E-$0714 DB_DATA 6
RANGE $0714-$071A DB_DATA 6
RANGE $071A-$0720 DB_DATA 6
RANGE $0720-$0726 DB_DATA 6
RANGE $0726-$072C DB_DATA 6
RANGE $072C-$0732 DB_DATA 6
RANGE $0732-$0738 DB_DATA 6
RANGE $0738-$073E DB_DATA 6
RANGE $073E-$0744 DB_DATA 6
RANGE $0744-$074A DB_DATA 6
RANGE $074A-$0750 DB_DATA 6
RANGE $0750-$0A1B CODE
RANGE $0A1B-$0A1D DW_DATA 1
RANGE $0A1D-$0A1F DW_DATA 1
RANGE $0A1F-$0A21 DW_DATA 1
RANGE $0A21-$0A23 DW_DATA 1
RANGE $0A23-$0A25 DW_DATA 1
RANGE $0A25-$0A27 DW_DATA 1
RANGE $0A27-$0A29 DW_DATA 1
RANGE $0A29-$0A2B DW_DATA 1
RANGE $0A2B-$0A2D DW_DATA 1
RANGE $0A2D-$0A2F DW_DATA 1
RANGE $0A2F-$0A31 DW_DATA 1
RANGE $0A31-$0DC5 CODE
RANGE $0DC5-$0DCF DB_DATA 10
RANGE $0DCF-$0DD9 DB_DATA 10
RANGE $0DD9-$0DE3 DB_DATA 10
RANGE $0DE3-$0DED DB_DATA 10
RANGE $0DED-$0DF7 DB_DATA 10
RANGE $0DF7-$0E01 DB_DATA 10
RANGE $0E01-$0E0B DB_DATA 10
RANGE $0E0B-$0E15 DB_DATA 10
RANGE $0E15-$0E1F DB_DATA 10
RANGE $0E1F-$0E29 DB_DATA 10
RANGE $0E29-$0E33 DB_DATA 10
RANGE $0E33-$0E3D DB_DATA 10
RANGE $0E3D-$0E47 DB_DATA 10
RANGE $0E47-$0E51 DB_DATA 10
RANGE $0E51-$0E5B DB_DATA 10
RANGE $0E5B-$0E61 DB_DATA 6
RANGE $0E61-$19D4 CODE
RANGE $19D4-$19D6 DW_DATA 1
RANGE $19D6-$19D8 DW_DATA 1
RANGE $19D8-$19DA DW_DATA 1
RANGE $19DA-$19DC DW_DATA 1
RANGE $19DC-$19DE DW_DATA 1
RANGE $19DE-$19E0 DW_DATA 1
RANGE $19E0-$19E2 DW_DATA 1
RANGE $19E2-$1A02 DB_DATA 32
RANGE $1A02-$1A1E DB_DATA 28
RANGE $1A1E-$1A3D DB_DATA 31
RANGE $1A3D-$1A5E DB_DATA 33
RANGE $1A5E-$1A84 DB_DATA 38
RANGE $1A84-$1AA8 DB_DATA 36
RANGE $1AA8-$1B03 DB_DATA 91
RANGE $1B03-$1B5E DB_DATA 91
RANGE $1B5E-$1BB9 DB_DATA 91
RANGE $1BB9-$1C14 DB_DATA 91
RANGE $1C14-$1C6F DB_DATA 91
RANGE $1C6F-$1E13 CODE
RANGE $1E13-$1E15 DW_DATA 1
RANGE $1E15-$1E17 DW_DATA 1
RANGE $1E17-$1E19 DW_DATA 1
RANGE $1E19-$1E1B DW_DATA 1
RANGE $1E1B-$1E1D DW_DATA 1
RANGE $1E1D-$1E1F DW_DATA 1
RANGE $1E1F-$1E21 DW_DATA 1
RANGE $1E21-$1E23 DW_DATA 1
RANGE $1E23-$1E25 DW_DATA 1
RANGE $1E25-$1E27 DW_DATA 1
RANGE $1E27-$1E29 DW_DATA 1
RANGE $1E29-$1E2B DW_DATA 1
RANGE $1E2B-$1E2D DW_DATA 1
RANGE $1E2D-$1E32 DB_DATA 5
RANGE $1E32-$1E37 DB_DATA 5
RANGE $1E37-$1E3C DB_DATA 5
RANGE $1E3C-$1E3F DB_DATA 3
RANGE $1E3F-$1E42 DB_DATA 3
RANGE $1E42-$1E47 DB_DATA 5
RANGE $1E47-$1E4C DB_DATA 5
RANGE $1E4C-$1E4E DW_DATA 1
RANGE $1E4E-$1E50 DW_DATA 1
RANGE $1E50-$1E52 DW_DATA 1
RANGE $1E52-$1E54 DW_DATA 1
RANGE $1E54-$1E56 DW_DATA 1
RANGE $1E56-$1E58 DW_DATA 1
RANGE $1E58-$1E5A DW_DATA 1
RANGE $1E5A-$1E5C DW_DATA 1
RANGE $1E5C-$1E5E DW_DATA 1
RANGE $1E5E-$1E60 DW_DATA 1
RANGE $1E60-$1E62 DW_DATA 1
RANGE $1E62-$1E64 DW_DATA 1
RANGE $1E64-$1E66 DW_DATA 1
RANGE $1E66-$1E6B DB_DATA 5
RANGE $1E6B-$1E70 DB_DATA 5
RANGE $1E70-$1E75 DB_DATA 5
RANGE $1E75-$1E78 DB_DATA 3
RANGE $1E78-$1E7B DB_DATA 3
RANGE $1E7B-$1E7E DB_DATA 3
RANGE $1E7E-$1E81 DB_DATA 3
RANGE $1E81-$1E86 DB_DATA 5
RANGE $1E86-$1E8B DB_DATA 5
RANGE $1E8B-$1E90 DB_DATA 5
RANGE $1E90-$1E95 DB_DATA 5
RANGE $1E95-$1E9A DB_DATA 5
RANGE $1E9A-$1E9D DB_DATA 3
RANGE $1E9D-$1EA0 DB_DATA 3
RANGE $1EA0-$1EA3 DB_DATA 3
RANGE $1EA3-$1EA6 DB_DATA 3
RANGE $1EA6-$1EAB DB_DATA 5
RANGE $1EAB-$1EB0 DB_DATA 5
RANGE $1EB0-$1EB5 DB_DATA 5
RANGE $1EB5-$1EBA DB_DATA 5
RANGE $1EBA-$1EBF DB_DATA 5
RANGE $1EBF-$1EC2 DB_DATA 3
RANGE $1EC2-$1EC5 DB_DATA 3
RANGE $1EC5-$1EC8 DB_DATA 3
RANGE $1EC8-$1ECB DB_DATA 3
RANGE $1ECB-$1ED0 DB_DATA 5
RANGE $1ED0-$1ED5 DB_DATA 5
RANGE $1ED5-$1EDA DB_DATA 5
RANGE $1EDA-$1EDF DB_DATA 5
RANGE $1EDF-$1EE4 DB_DATA 5
RANGE $1EE4-$1EE7 DB_DATA 3
RANGE $1EE7-$1EEA DB_DATA 3
RANGE $1EEA-$1EED DB_DATA 3
RANGE $1EED-$1EF0 DB_DATA 3
RANGE $1EF0-$1EF5 DB_DATA 5
RANGE $1EF5-$1EFA DB_DATA 5
RANGE $1EFA-$1EFC DW_DATA 1
RANGE $1EFC-$1EFE DW_DATA 1
RANGE $1EFE-$1F00 DW_DATA 1
RANGE $1F00-$1F02 DW_DATA 1
RANGE $1F02-$1F04 DW_DATA 1
RANGE $1F04-$1F06 DW_DATA 1
RANGE $1F06-$1F08 DW_DATA 1
RANGE $1F08-$1F0A DW_DATA 1
RANGE $1F0A-$1F0C DW_DATA 1
RANGE $1F0C-$1F11 DB_DATA 5
RANGE $1F11-$1F16 DB_DATA 5
RANGE $1F16-$1F1B DB_DATA 5
RANGE $1F1B-$1F1E DB_DATA 3
RANGE $1F1E-$1F21 DB_DATA 3
RANGE $1F21-$1F24 DB_DATA 3
RANGE $1F24-$1F27 DB_DATA 3
RANGE $1F27-$1F2A DB_DATA 3
RANGE $1F2A-$1F2D DB_DATA 3
RANGE $1F2D-$1F32 DB_DATA 5
RANGE $1F32-$1F35 DB_DATA 3
RANGE $1F35-$1F38 DB_DATA 3
RANGE $1F38-$1F3B DB_DATA 3
RANGE $1F3B-$1F40 DB_DATA 5
RANGE $1F40-$1F45 DB_DATA 5
RANGE $1F45-$1F4A DB_DATA 5
RANGE $1F4A-$1F4F DB_DATA 5
RANGE $1F4F-$1F54 DB_DATA 5
RANGE $1F54-$1F59 DB_DATA 5
RANGE $1F59-$1F5E DB_DATA 5
RANGE $1F5E-$1F61 DB_DATA 3
RANGE $1F61-$1F64 DB_DATA 3
RANGE $1F64-$1F67 DB_DATA 3
RANGE $1F67-$1F6A DB_DATA 3
RANGE $1F6A-$1F6D DB_DATA 3
RANGE $1F6D-$1F70 DB_DATA 3
RANGE $1F70-$1F75 DB_DATA 5
RANGE $1F75-$1F78 DB_DATA 3
RANGE $1F78-$1F7B DB_DATA 3
RANGE $1F7B-$1F7E DB_DATA 3
RANGE $1F7E-$1F83 DB_DATA 5
RANGE $1F83-$1F88 DB_DATA 5
RANGE $1F88-$1F8D DB_DATA 5
RANGE $1F8D-$1F92 DB_DATA 5
RANGE $1F92-$1F94 DW_DATA 1
RANGE $1F94-$1F96 DW_DATA 1
RANGE $1F96-$1F98 DW_DATA 1
RANGE $1F98-$1F9D DB_DATA 5
RANGE $1F9D-$1FA2 DB_DATA 5
RANGE $1FA2-$1FA7 DB_DATA 5
RANGE $1FA7-$1FAA DB_DATA 3
RANGE $1FAA-$1FAD DB_DATA 3
RANGE $1FAD-$1FB2 DB_DATA 5
RANGE $1FB2-$1FB7 DB_DATA 5
RANGE $1FB7-$1FBC DB_DATA 5
RANGE $1FBC-$1FBF DB_DATA 3
RANGE $1FBF-$1FC2 DB_DATA 3
RANGE $1FC2-$1FC5 DB_DATA 3
RANGE $1FC5-$1FC8 DB_DATA 3
RANGE $1FC8-$1FCB DB_DATA 3
RANGE $1FCB-$1FD0 DB_DATA 5
RANGE $1FD0-$1FD5 DB_DATA 5
RANGE $1FD5-$1FDA DB_DATA 5
RANGE $1FDA-$1FDD DB_DATA 3
RANGE $1FDD-$1FE0 DB_DATA 3
RANGE $1FE0-$1FE3 DB_DATA 3
RANGE $1FE3-$1FE8 DB_DATA 5
RANGE $1FE8-$1FED DB_DATA 5
RANGE $1FED-$1FF2 DB_DATA 5
RANGE $1FF2-$1FF7 DB_DATA 5
RANGE $1FF7-$1FFC DB_DATA 5
RANGE $1FFC-$2001 DB_DATA 5
RANGE $2001-$2006 DB_DATA 5
RANGE $2006-$2009 DB_DATA 3
RANGE $2009-$200C DB_DATA 3
RANGE $200C-$2011 DB_DATA 5
RANGE $2011-$2016 DB_DATA 5
RANGE $2016-$201B DB_DATA 5
RANGE $201B-$201E DB_DATA 3
RANGE $201E-$2021 DB_DATA 3
RANGE $2021-$2024 DB_DATA 3
RANGE $2024-$2027 DB_DATA 3
RANGE $2027-$202A DB_DATA 3
RANGE $202A-$202F DB_DATA 5
RANGE $202F-$2034 DB_DATA 5
RANGE $2034-$2039 DB_DATA 5
RANGE $2039-$203C DB_DATA 3
RANGE $203C-$203F DB_DATA 3
RANGE $203F-$2042 DB_DATA 3
RANGE $2042-$2047 DB_DATA 5
RANGE $2047-$204C DB_DATA 5
RANGE $204C-$2051 DB_DATA 5
RANGE $2051-$2056 DB_DATA 5
RANGE $2056-$2058 DW_DATA 1
RANGE $2058-$205A DW_DATA 1
RANGE $205A-$205C DW_DATA 1
RANGE $205C-$2061 DB_DATA 5
RANGE $2061-$2066 DB_DATA 5
RANGE $2066-$206B DB_DATA 5
RANGE $206B-$206E DB_DATA 3
RANGE $206E-$2071 DB_DATA 3
RANGE $2071-$2076 DB_DATA 5
RANGE $2076-$207B DB_DATA 5
RANGE $207B-$2080 DB_DATA 5
RANGE $2080-$2083 DB_DATA 3
RANGE $2083-$2086 DB_DATA 3
RANGE $2086-$2089 DB_DATA 3
RANGE $2089-$208C DB_DATA 3
RANGE $208C-$208F DB_DATA 3
RANGE $208F-$2094 DB_DATA 5
RANGE $2094-$2099 DB_DATA 5
RANGE $2099-$209E DB_DATA 5
RANGE $209E-$20A1 DB_DATA 3
RANGE $20A1-$20A4 DB_DATA 3
RANGE $20A4-$20A7 DB_DATA 3
RANGE $20A7-$20AC DB_DATA 5
RANGE $20AC-$20B1 DB_DATA 5
RANGE $20B1-$20B6 DB_DATA 5
RANGE $20B6-$20BB DB_DATA 5
RANGE $20BB-$20C0 DB_DATA 5
RANGE $20C0-$20C5 DB_DATA 5
RANGE $20C5-$20CA DB_DATA 5
RANGE $20CA-$20CD DB_DATA 3
RANGE $20CD-$20D0 DB_DATA 3
RANGE $20D0-$20D5 DB_DATA 5
RANGE $20D5-$20DA DB_DATA 5
RANGE $20DA-$20DF DB_DATA 5
RANGE $20DF-$20E2 DB_DATA 3
RANGE $20E2-$20E5 DB_DATA 3
RANGE $20E5-$20E8 DB_DATA 3
RANGE $20E8-$20EB DB_DATA 3
RANGE $20EB-$20EE DB_DATA 3
RANGE $20EE-$20F3 DB_DATA 5
RANGE $20F3-$20F8 DB_DATA 5
RANGE $20F8-$20FD DB_DATA 5
RANGE $20FD-$2100 DB_DATA 3
RANGE $2100-$2103 DB_DATA 3
RANGE $2103-$2106 DB_DATA 3
RANGE $2106-$210B DB_DATA 5
RANGE $210B-$2110 DB_DATA 5
RANGE $2110-$2115 DB_DATA 5
RANGE $2115-$211A DB_DATA 5
RANGE $211A-$211C DW_DATA 1
RANGE $211C-$211E DW_DATA 1
RANGE $211E-$2120 DW_DATA 1
RANGE $2120-$2125 DB_DATA 5
RANGE $2125-$212A DB_DATA 5
RANGE $212A-$212F DB_DATA 5
RANGE $212F-$2134 DB_DATA 5
RANGE $2134-$2139 DB_DATA 5
RANGE $2139-$213E DB_DATA 5
RANGE $213E-$2143 DB_DATA 5
RANGE $2143-$2148 DB_DATA 5
RANGE $2148-$214D DB_DATA 5
RANGE $214D-$2150 DB_DATA 3
RANGE $2150-$2153 DB_DATA 3
RANGE $2153-$2156 DB_DATA 3
RANGE $2156-$2159 DB_DATA 3
RANGE $2159-$215C DB_DATA 3
RANGE $215C-$2161 DB_DATA 5
RANGE $2161-$2166 DB_DATA 5
RANGE $2166-$216B DB_DATA 5
RANGE $216B-$2170 DB_DATA 5
RANGE $2170-$2175 DB_DATA 5
RANGE $2175-$217A DB_DATA 5
RANGE $217A-$217D DB_DATA 3
RANGE $217D-$2182 DB_DATA 5
RANGE $2182-$2187 DB_DATA 5
RANGE $2187-$218C DB_DATA 5
RANGE $218C-$2191 DB_DATA 5
RANGE $2191-$2196 DB_DATA 5
RANGE $2196-$219B DB_DATA 5
RANGE $219B-$21A0 DB_DATA 5
RANGE $21A0-$21A5 DB_DATA 5
RANGE $21A5-$21AA DB_DATA 5
RANGE $21AA-$21AF DB_DATA 5
RANGE $21AF-$21B4 DB_DATA 5
RANGE $21B4-$21B9 DB_DATA 5
RANGE $21B9-$21BE DB_DATA 5
RANGE $21BE-$21C1 DB_DATA 3
RANGE $21C1-$21C4 DB_DATA 3
RANGE $21C4-$21C7 DB_DATA 3
RANGE $21C7-$21CA DB_DATA 3
RANGE $21CA-$21CD DB_DATA 3
RANGE $21CD-$21D2 DB_DATA 5
RANGE $21D2-$21D7 DB_DATA 5
RANGE $21D7-$21DC DB_DATA 5
RANGE $21DC-$21E1 DB_DATA 5
RANGE $21E1-$21E6 DB_DATA 5
RANGE $21E6-$21EB DB_DATA 5
RANGE $21EB-$21EE DB_DATA 3
RANGE $21EE-$21F3 DB_DATA 5
RANGE $21F3-$21F8 DB_DATA 5
RANGE $21F8-$21FD DB_DATA 5
RANGE $21FD-$2202 DB_DATA 5
RANGE $2202-$2204 DW_DATA 1
RANGE $2204-$2206 DW_DATA 1
RANGE $2206-$2208 DW_DATA 1
RANGE $2208-$220D DB_DATA 5
RANGE $220D-$2212 DB_DATA 5
RANGE $2212-$2217 DB_DATA 5
RANGE $2217-$221A DB_DATA 3
RANGE $221A-$221D DB_DATA 3
RANGE $221D-$2220 DB_DATA 3
RANGE $2220-$2223 DB_DATA 3
RANGE $2223-$2226 DB_DATA 3
RANGE $2226-$2229 DB_DATA 3
RANGE $2229-$222E DB_DATA 5
RANGE $222E-$2231 DB_DATA 3
RANGE $2231-$2234 DB_DATA 3
RANGE $2234-$2237 DB_DATA 3
RANGE $2237-$223A DB_DATA 3
RANGE $223A-$223D DB_DATA 3
RANGE $223D-$2242 DB_DATA 5
RANGE $2242-$2247 DB_DATA 5
RANGE $2247-$224C DB_DATA 5
RANGE $224C-$2251 DB_DATA 5
RANGE $2251-$2256 DB_DATA 5
RANGE $2256-$225B DB_DATA 5
RANGE $225B-$2260 DB_DATA 5
RANGE $2260-$2263 DB_DATA 3
RANGE $2263-$2266 DB_DATA 3
RANGE $2266-$2269 DB_DATA 3
RANGE $2269-$226C DB_DATA 3
RANGE $226C-$226F DB_DATA 3
RANGE $226F-$2272 DB_DATA 3
RANGE $2272-$2277 DB_DATA 5
RANGE $2277-$227A DB_DATA 3
RANGE $227A-$227D DB_DATA 3
RANGE $227D-$2280 DB_DATA 3
RANGE $2280-$2283 DB_DATA 3
RANGE $2283-$2286 DB_DATA 3
RANGE $2286-$228B DB_DATA 5
RANGE $228B-$2290 DB_DATA 5
RANGE $2290-$2295 DB_DATA 5
RANGE $2295-$229A DB_DATA 5
RANGE $229A-$229C DW_DATA 1
RANGE $229C-$229E DW_DATA 1
RANGE $229E-$22A0 DW_DATA 1
RANGE $22A0-$22A2 DW_DATA 1
RANGE $22A2-$22A4 DW_DATA 1
RANGE $22A4-$22A6 DW_DATA 1
RANGE $22A6-$22A8 DW_DATA 1
RANGE $22A8-$22AA DW_DATA 1
RANGE $22AA-$22AC DW_DATA 1
RANGE $22AC-$22AE DW_DATA 1
RANGE $22AE-$22B0 DW_DATA 1
RANGE $22B0-$22B2 DW_DATA 1
RANGE $22B2-$22B4 DW_DATA 1
RANGE $22B4-$22B9 DB_DATA 5
RANGE $22B9-$22BE DB_DATA 5
RANGE $22BE-$22C3 DB_DATA 5
RANGE $22C3-$22C6 DB_DATA 3
RANGE $22C6-$22C9 DB_DATA 3
RANGE $22C9-$22CE DB_DATA 5
RANGE $22CE-$22D3 DB_DATA 5
RANGE $22D3-$22D8 DB_DATA 5
RANGE $22D8-$22DB DB_DATA 3
RANGE $22DB-$22DE DB_DATA 3
RANGE $22DE-$22E1 DB_DATA 3
RANGE $22E1-$22E4 DB_DATA 3
RANGE $22E4-$22E7 DB_DATA 3
RANGE $22E7-$22EA DB_DATA 3
RANGE $22EA-$22EF DB_DATA 5
RANGE $22EF-$22F2 DB_DATA 3
RANGE $22F2-$22F5 DB_DATA 3
RANGE $22F5-$22F8 DB_DATA 3
RANGE $22F8-$22FB DB_DATA 3
RANGE $22FB-$22FE DB_DATA 3
RANGE $22FE-$2301 DB_DATA 3
RANGE $2301-$2306 DB_DATA 5
RANGE $2306-$230B DB_DATA 5
RANGE $230B-$2310 DB_DATA 5
RANGE $2310-$2315 DB_DATA 5
RANGE $2315-$231A DB_DATA 5
RANGE $231A-$231F DB_DATA 5
RANGE $231F-$2324 DB_DATA 5
RANGE $2324-$2329 DB_DATA 5
RANGE $2329-$232C DB_DATA 3
RANGE $232C-$232F DB_DATA 3
RANGE $232F-$2334 DB_DATA 5
RANGE $2334-$2339 DB_DATA 5
RANGE $2339-$233E DB_DATA 5
RANGE $233E-$2341 DB_DATA 3
RANGE $2341-$2344 DB_DATA 3
RANGE $2344-$2347 DB_DATA 3
RANGE $2347-$234A DB_DATA 3
RANGE $234A-$234D DB_DATA 3
RANGE $234D-$2350 DB_DATA 3
RANGE $2350-$2355 DB_DATA 5
RANGE $2355-$2358 DB_DATA 3
RANGE $2358-$235B DB_DATA 3
RANGE $235B-$235E DB_DATA 3
RANGE $235E-$2361 DB_DATA 3
RANGE $2361-$2364 DB_DATA 3
RANGE $2364-$2367 DB_DATA 3
RANGE $2367-$236C DB_DATA 5
RANGE $236C-$2371 DB_DATA 5
RANGE $2371-$2376 DB_DATA 5
RANGE $2376-$237B DB_DATA 5
RANGE $237B-$2380 DB_DATA 5
RANGE $2380-$2385 DB_DATA 5
RANGE $2385-$238A DB_DATA 5
RANGE $238A-$238F DB_DATA 5
RANGE $238F-$2392 DB_DATA 3
RANGE $2392-$2395 DB_DATA 3
RANGE $2395-$239A DB_DATA 5
RANGE $239A-$239F DB_DATA 5
RANGE $239F-$23A4 DB_DATA 5
RANGE $23A4-$23A7 DB_DATA 3
RANGE $23A7-$23AA DB_DATA 3
RANGE $23AA-$23AD DB_DATA 3
RANGE $23AD-$23B0 DB_DATA 3
RANGE $23B0-$23B3 DB_DATA 3
RANGE $23B3-$23B6 DB_DATA 3
RANGE $23B6-$23BB DB_DATA 5
RANGE $23BB-$23BE DB_DATA 3
RANGE $23BE-$23C1 DB_DATA 3
RANGE $23C1-$23C4 DB_DATA 3
RANGE $23C4-$23C7 DB_DATA 3
RANGE $23C7-$23CA DB_DATA 3
RANGE $23CA-$23CD DB_DATA 3
RANGE $23CD-$23D2 DB_DATA 5
RANGE $23D2-$23D7 DB_DATA 5
RANGE $23D7-$23DC DB_DATA 5
RANGE $23DC-$23E1 DB_DATA 5
RANGE $23E1-$23E6 DB_DATA 5
RANGE $23E6-$23EB DB_DATA 5
RANGE $23EB-$23F0 DB_DATA 5
RANGE $23F0-$23F5 DB_DATA 5
RANGE $23F5-$23F8 DB_DATA 3
RANGE $23F8-$23FB DB_DATA 3
RANGE $23FB-$2400 DB_DATA 5
RANGE $2400-$2405 DB_DATA 5
RANGE $2405-$240A DB_DATA 5
RANGE $240A-$240D DB_DATA 3
RANGE $240D-$2410 DB_DATA 3
RANGE $2410-$2413 DB_DATA 3
RANGE $2413-$2416 DB_DATA 3
RANGE $2416-$2419 DB_DATA 3
RANGE $2419-$241C DB_DATA 3
RANGE $241C-$2421 DB_DATA 5
RANGE $2421-$2424 DB_DATA 3
RANGE $2424-$2427 DB_DATA 3
RANGE $2427-$242A DB_DATA 3
RANGE $242A-$242D DB_DATA 3
RANGE $242D-$2430 DB_DATA 3
RANGE $2430-$2433 DB_DATA 3
RANGE $2433-$2438 DB_DATA 5
RANGE $2438-$243D DB_DATA 5
RANGE $243D-$2442 DB_DATA 5
RANGE $2442-$2447 DB_DATA 5
RANGE $2447-$244C DB_DATA 5
RANGE $244C-$2451 DB_DATA 5
RANGE $2451-$2456 DB_DATA 5
RANGE $2456-$245B DB_DATA 5
RANGE $245B-$245E DB_DATA 3
RANGE $245E-$2461 DB_DATA 3
RANGE $2461-$2466 DB_DATA 5
RANGE $2466-$246B DB_DATA 5
RANGE $246B-$2470 DB_DATA 5
RANGE $2470-$2473 DB_DATA 3
RANGE $2473-$2476 DB_DATA 3
RANGE $2476-$2479 DB_DATA 3
RANGE $2479-$247C DB_DATA 3
RANGE $247C-$247F DB_DATA 3
RANGE $247F-$2482 DB_DATA 3
RANGE $2482-$2487 DB_DATA 5
RANGE $2487-$248A DB_DATA 3
RANGE $248A-$248D DB_DATA 3
RANGE $248D-$2490 DB_DATA 3
RANGE $2490-$2493 DB_DATA 3
RANGE $2493-$2496 DB_DATA 3
RANGE $2496-$2499 DB_DATA 3
RANGE $2499-$249E DB_DATA 5
RANGE $249E-$24A3 DB_DATA 5
RANGE $24A3-$24A8 DB_DATA 5
RANGE $24A8-$24AD DB_DATA 5
RANGE $24AD-$24B2 DB_DATA 5
RANGE $24B2-$24B7 DB_DATA 5
RANGE $24B7-$24BC DB_DATA 5
RANGE $24BC-$24C1 DB_DATA 5
RANGE $24C1-$24C4 DB_DATA 3
RANGE $24C4-$24C7 DB_DATA 3
RANGE $24C7-$24CC DB_DATA 5
RANGE $24CC-$24D1 DB_DATA 5
RANGE $24D1-$24D6 DB_DATA 5
RANGE $24D6-$24D9 DB_DATA 3
RANGE $24D9-$24DC DB_DATA 3
RANGE $24DC-$24DF DB_DATA 3
RANGE $24DF-$24E2 DB_DATA 3
RANGE $24E2-$24E5 DB_DATA 3
RANGE $24E5-$24E8 DB_DATA 3
RANGE $24E8-$24ED DB_DATA 5
RANGE $24ED-$24F0 DB_DATA 3
RANGE $24F0-$24F3 DB_DATA 3
RANGE $24F3-$24F6 DB_DATA 3
RANGE $24F6-$24F9 DB_DATA 3
RANGE $24F9-$24FC DB_DATA 3
RANGE $24FC-$24FF DB_DATA 3
RANGE $24FF-$2504 DB_DATA 5
RANGE $2504-$2509 DB_DATA 5
RANGE $2509-$250E DB_DATA 5
RANGE $250E-$2513 DB_DATA 5
RANGE $2513-$2518 DB_DATA 5
RANGE $2518-$251D DB_DATA 5
RANGE $251D-$2522 DB_DATA 5
RANGE $2522-$2527 DB_DATA 5
RANGE $2527-$252A DB_DATA 3
RANGE $252A-$252D DB_DATA 3
RANGE $252D-$2532 DB_DATA 5
RANGE $2532-$2537 DB_DATA 5
RANGE $2537-$253C DB_DATA 5
RANGE $253C-$253F DB_DATA 3
RANGE $253F-$2542 DB_DATA 3
RANGE $2542-$2545 DB_DATA 3
RANGE $2545-$2548 DB_DATA 3
RANGE $2548-$254B DB_DATA 3
RANGE $254B-$254E DB_DATA 3
RANGE $254E-$2553 DB_DATA 5
RANGE $2553-$2556 DB_DATA 3
RANGE $2556-$2559 DB_DATA 3
RANGE $2559-$255C DB_DATA 3
RANGE $255C-$255F DB_DATA 3
RANGE $255F-$2562 DB_DATA 3
RANGE $2562-$2565 DB_DATA 3
RANGE $2565-$256A DB_DATA 5
RANGE $256A-$256F DB_DATA 5
RANGE $256F-$2574 DB_DATA 5
RANGE $2574-$2579 DB_DATA 5
RANGE $2579-$257E DB_DATA 5
RANGE $257E-$2703 CODE
RANGE $2703-$2705 DW_DATA 1
RANGE $2705-$2707 DW_DATA 1
RANGE $2707-$2709 DW_DATA 1
RANGE $2709-$270B DW_DATA 1
RANGE $270B-$270D DW_DATA 1
RANGE $270D-$270F DW_DATA 1
RANGE $270F-$2711 DW_DATA 1
RANGE $2711-$2713 DW_DATA 1
RANGE $2713-$2715 DW_DATA 1
RANGE $2715-$2717 DW_DATA 1
RANGE $2717-$2719 DW_DATA 1
RANGE $2719-$271B DW_DATA 1
RANGE $271B-$271D DW_DATA 1
RANGE $271D-$271F DW_DATA 1
RANGE $271F-$2721 DW_DATA 1
RANGE $2721-$2723 DW_DATA 1
RANGE $2723-$2725 DW_DATA 1
RANGE $2725-$2727 DW_DATA 1
RANGE $2727-$2729 DW_DATA 1
RANGE $2729-$272B DW_DATA 1
RANGE $272B-$272D DW_DATA 1
RANGE $272D-$272F DW_DATA 1
RANGE $272F-$2731 DW_DATA 1
RANGE $2731-$2733 DW_DATA 1
RANGE $2733-$2735 DW_DATA 1
RANGE $2735-$2737 DW_DATA 1
RANGE $2737-$2739 DW_DATA 1
RANGE $2739-$273A DB_DATA 1
RANGE $273A-$273B DB_DATA 1
RANGE $273B-$273C DB_DATA 1
RANGE $273C-$273D DB_DATA 1
RANGE $273D-$273E DB_DATA 1
RANGE $273E-$273F DB_DATA 1
RANGE $273F-$2740 DB_DATA 1
RANGE $2740-$2741 DB_DATA 1
RANGE $2741-$2742 DB_DATA 1
RANGE $2742-$2744 DB_DATA 2
RANGE $2744-$2746 DB_DATA 2
RANGE $2746-$2748 DB_DATA 2
RANGE $2748-$274A DB_DATA 2
RANGE $274A-$274B DB_DATA 1
RANGE $274B-$274D DW_DATA 1
RANGE $274D-$274E DB_DATA 1
RANGE $274E-$2750 DW_DATA 1
RANGE $2750-$2751 DB_DATA 1
RANGE $2751-$2753 DW_DATA 1
RANGE $2753-$2754 DB_DATA 1
RANGE $2754-$2755 DB_DATA 1
RANGE $2755-$2756 DB_DATA 1
RANGE $2756-$2757 DB_DATA 1
RANGE $2757-$2758 DB_DATA 1
RANGE $2758-$2759 DB_DATA 1
RANGE $2759-$275A DB_DATA 1
RANGE $275A-$275B DB_DATA 1
RANGE $275B-$275C DB_DATA 1
RANGE $275C-$275E DB_DATA 2
RANGE $275E-$2760 DB_DATA 2
RANGE $2760-$2762 DB_DATA 2
RANGE $2762-$2764 DB_DATA 2
RANGE $2764-$2765 DB_DATA 1
RANGE $2765-$2767 DW_DATA 1
RANGE $2767-$2768 DB_DATA 1
RANGE $2768-$276A DW_DATA 1
RANGE $276A-$276B DB_DATA 1
RANGE $276B-$276D DW_DATA 1
RANGE $276D-$276E DB_DATA 1
RANGE $276E-$276F DB_DATA 1
RANGE $276F-$2770 DB_DATA 1
RANGE $2770-$2771 DB_DATA 1
RANGE $2771-$2772 DB_DATA 1
RANGE $2772-$2773 DB_DATA 1
RANGE $2773-$2774 DB_DATA 1
RANGE $2774-$2775 DB_DATA 1
RANGE $2775-$2776 DB_DATA 1
RANGE $2776-$2778 DB_DATA 2
RANGE $2778-$277A DB_DATA 2
RANGE $277A-$277C DB_DATA 2
RANGE $277C-$277E DB_DATA 2
RANGE $277E-$277F DB_DATA 1
RANGE $277F-$2781 DW_DATA 1
RANGE $2781-$2782 DB_DATA 1
RANGE $2782-$2784 DW_DATA 1
RANGE $2784-$2785 DB_DATA 1
RANGE $2785-$2787 DW_DATA 1
RANGE $2787-$2788 DB_DATA 1
RANGE $2788-$2789 DB_DATA 1
RANGE $2789-$278A DB_DATA 1
RANGE $278A-$278B DB_DATA 1
RANGE $278B-$278C DB_DATA 1
RANGE $278C-$278D DB_DATA 1
RANGE $278D-$278E DB_DATA 1
RANGE $278E-$278F DB_DATA 1
RANGE $278F-$2790 DB_DATA 1
RANGE $2790-$2792 DB_DATA 2
RANGE $2792-$2794 DB_DATA 2
RANGE $2794-$2796 DB_DATA 2
RANGE $2796-$2798 DB_DATA 2
RANGE $2798-$2799 DB_DATA 1
RANGE $2799-$279B DW_DATA 1
RANGE $279B-$279C DB_DATA 1
RANGE $279C-$279E DW_DATA 1
RANGE $279E-$279F DB_DATA 1
RANGE $279F-$27A1 DW_DATA 1
RANGE $27A1-$27A2 DB_DATA 1
RANGE $27A2-$27A3 DB_DATA 1
RANGE $27A3-$27A4 DB_DATA 1
RANGE $27A4-$27A5 DB_DATA 1
RANGE $27A5-$27A6 DB_DATA 1
RANGE $27A6-$27A7 DB_DATA 1
RANGE $27A7-$27A8 DB_DATA 1
RANGE $27A8-$27A9 DB_DATA 1
RANGE $27A9-$27AA DB_DATA 1
RANGE $27AA-$27AC DB_DATA 2
RANGE $27AC-$27AE DB_DATA 2
RANGE $27AE-$27B0 DB_DATA 2
RANGE $27B0-$27B2 DB_DATA 2
RANGE $27B2-$27B3 DB_DATA 1
RANGE $27B3-$27B5 DW_DATA 1
RANGE $27B5-$27B6 DB_DATA 1
RANGE $27B6-$27B8 DW_DATA 1
RANGE $27B8-$27B9 DB_DATA 1
RANGE $27B9-$27BB DW_DATA 1
RANGE $27BB-$27BD DW_DATA 1
RANGE $27BD-$27BF DW_DATA 1
RANGE $27BF-$27C1 DW_DATA 1
RANGE $27C1-$27C3 DW_DATA 1
RANGE $27C3-$27C5 DW_DATA 1
RANGE $27C5-$27C7 DW_DATA 1
RANGE $27C7-$27C9 DW_DATA 1
RANGE $27C9-$27CB DW_DATA 1
RANGE $27CB-$27CE DB_DATA 3
RANGE $27CE-$27D1 DB_DATA 3
RANGE $27D1-$27D4 DB_DATA 3
RANGE $27D4-$27D7 DB_DATA 3
RANGE $27D7-$27DA DB_DATA 3
RANGE $27DA-$27DD DB_DATA 3
RANGE $27DD-$27E0 DB_DATA 3
RANGE $27E0-$27E3 DB_DATA 3
RANGE $27E3-$27E6 DB_DATA 3
RANGE $27E6-$27E9 DB_DATA 3
RANGE $27E9-$27EC DB_DATA 3
RANGE $27EC-$27EF DB_DATA 3
RANGE $27EF-$27F2 DB_DATA 3
RANGE $27F2-$27F5 DB_DATA 3
RANGE $27F5-$27F8 DB_DATA 3
RANGE $27F8-$27FB DB_DATA 3
RANGE $27FB-$27FE DB_DATA 3
RANGE $27FE-$2801 DB_DATA 3
RANGE $2801-$2804 DB_DATA 3
RANGE $2804-$2807 DB_DATA 3
RANGE $2807-$280A DB_DATA 3
RANGE $280A-$280D DB_DATA 3
RANGE $280D-$2810 DB_DATA 3
RANGE $2810-$2813 DB_DATA 3
RANGE $2813-$2816 DB_DATA 3
RANGE $2816-$2819 DB_DATA 3
RANGE $2819-$281C DB_DATA 3
RANGE $281C-$281F DB_DATA 3
RANGE $281F-$2822 DB_DATA 3
RANGE $2822-$2825 DB_DATA 3
RANGE $2825-$2828 DB_DATA 3
RANGE $2828-$282B DB_DATA 3
RANGE $282B-$282E DB_DATA 3
RANGE $282E-$2831 DB_DATA 3
RANGE $2831-$2834 DB_DATA 3
RANGE $2834-$2837 DB_DATA 3
RANGE $2837-$283A DB_DATA 3
RANGE $283A-$283D DB_DATA 3
RANGE $283D-$2840 DB_DATA 3
RANGE $2840-$2843 DB_DATA 3
RANGE $2843-$2846 DB_DATA 3
RANGE $2846-$2849 DB_DATA 3
RANGE $2849-$284C DB_DATA 3
RANGE $284C-$284F DB_DATA 3
RANGE $284F-$2852 DB_DATA 3
RANGE $2852-$2855 DB_DATA 3
RANGE $2855-$2856 DB_DATA 1
RANGE $2856-$2859 DB_DATA 3
RANGE $2859-$285C DB_DATA 3
RANGE $285C-$285F DB_DATA 3
RANGE $285F-$2862 DB_DATA 3
RANGE $2862-$2865 DB_DATA 3
RANGE $2865-$2868 DB_DATA 3
RANGE $2868-$286B DB_DATA 3
RANGE $286B-$286E DB_DATA 3
RANGE $286E-$2871 DB_DATA 3
RANGE $2871-$2874 DB_DATA 3
RANGE $2874-$2877 DB_DATA 3
RANGE $2877-$287A DB_DATA 3
RANGE $287A-$287D DB_DATA 3
RANGE $287D-$2880 DB_DATA 3
RANGE $2880-$2883 DB_DATA 3
RANGE $2883-$2886 DB_DATA 3
RANGE $2886-$2889 DB_DATA 3
RANGE $2889-$288C DB_DATA 3
RANGE $288C-$288F DB_DATA 3
RANGE $288F-$2892 DB_DATA 3
RANGE $2892-$2895 DB_DATA 3
RANGE $2895-$2898 DB_DATA 3
RANGE $2898-$289B DB_DATA 3
RANGE $289B-$289E DB_DATA 3
RANGE $289E-$28A1 DB_DATA 3
RANGE $28A1-$28A4 DB_DATA 3
RANGE $28A4-$28A7 DB_DATA 3
RANGE $28A7-$28AA DB_DATA 3
RANGE $28AA-$28AD DB_DATA 3
RANGE $28AD-$28B0 DB_DATA 3
RANGE $28B0-$28B3 DB_DATA 3
RANGE $28B3-$28B6 DB_DATA 3
RANGE $28B6-$28B9 DB_DATA 3
RANGE $28B9-$28BC DB_DATA 3
RANGE $28BC-$28BF DB_DATA 3
RANGE $28BF-$28C2 DB_DATA 3
RANGE $28C2-$28C5 DB_DATA 3
RANGE $28C5-$28C8 DB_DATA 3
RANGE $28C8-$28CB DB_DATA 3
RANGE $28CB-$28CE DB_DATA 3
RANGE $28CE-$28D1 DB_DATA 3
RANGE $28D1-$28D4 DB_DATA 3
RANGE $28D4-$28D7 DB_DATA 3
RANGE $28D7-$28DA DB_DATA 3
RANGE $28DA-$28DD DB_DATA 3
RANGE $28DD-$28DE DB_DATA 1
RANGE $28DE-$28E1 DB_DATA 3
RANGE $28E1-$28E4 DB_DATA 3
RANGE $28E4-$28E7 DB_DATA 3
RANGE $28E7-$28EA DB_DATA 3
RANGE $28EA-$28ED DB_DATA 3
RANGE $28ED-$28F0 DB_DATA 3
RANGE $28F0-$28F3 DB_DATA 3
RANGE $28F3-$28F6 DB_DATA 3
RANGE $28F6-$28F9 DB_DATA 3
RANGE $28F9-$28FC DB_DATA 3
RANGE $28FC-$28FF DB_DATA 3
RANGE $28FF-$2902 DB_DATA 3
RANGE $2902-$2905 DB_DATA 3
RANGE $2905-$2908 DB_DATA 3
RANGE $2908-$290B DB_DATA 3
RANGE $290B-$290E DB_DATA 3
RANGE $290E-$2911 DB_DATA 3
RANGE $2911-$2914 DB_DATA 3
RANGE $2914-$2917 DB_DATA 3
RANGE $2917-$291A DB_DATA 3
RANGE $291A-$291D DB_DATA 3
RANGE $291D-$2920 DB_DATA 3
RANGE $2920-$2923 DB_DATA 3
RANGE $2923-$2926 DB_DATA 3
RANGE $2926-$2929 DB_DATA 3
RANGE $2929-$292C DB_DATA 3
RANGE $292C-$292F DB_DATA 3
RANGE $292F-$2932 DB_DATA 3
RANGE $2932-$2935 DB_DATA 3
RANGE $2935-$2938 DB_DATA 3
RANGE $2938-$293B DB_DATA 3
RANGE $293B-$293E DB_DATA 3
RANGE $293E-$2941 DB_DATA 3
RANGE $2941-$2944 DB_DATA 3
RANGE $2944-$2947 DB_DATA 3
RANGE $2947-$294A DB_DATA 3
RANGE $294A-$294D DB_DATA 3
RANGE $294D-$2950 DB_DATA 3
RANGE $2950-$2953 DB_DATA 3
RANGE $2953-$2956 DB_DATA 3
RANGE $2956-$2959 DB_DATA 3
RANGE $2959-$295C DB_DATA 3
RANGE $295C-$295F DB_DATA 3
RANGE $295F-$2962 DB_DATA 3
RANGE $2962-$2965 DB_DATA 3
RANGE $2965-$2966 DB_DATA 1
RANGE $2966-$2969 DB_DATA 3
RANGE $2969-$296C DB_DATA 3
RANGE $296C-$296F DB_DATA 3
RANGE $296F-$2972 DB_DATA 3
RANGE $2972-$2975 DB_DATA 3
RANGE $2975-$2978 DB_DATA 3
RANGE $2978-$297B DB_DATA 3
RANGE $297B-$297E DB_DATA 3
RANGE $297E-$2981 DB_DATA 3
RANGE $2981-$2984 DB_DATA 3
RANGE $2984-$2987 DB_DATA 3
RANGE $2987-$298A DB_DATA 3
RANGE $298A-$298D DB_DATA 3
RANGE $298D-$2990 DB_DATA 3
RANGE $2990-$2993 DB_DATA 3
RANGE $2993-$2996 DB_DATA 3
RANGE $2996-$2999 DB_DATA 3
RANGE $2999-$299C DB_DATA 3
RANGE $299C-$299F DB_DATA 3
RANGE $299F-$29A2 DB_DATA 3
RANGE $29A2-$29A5 DB_DATA 3
RANGE $29A5-$29A8 DB_DATA 3
RANGE $29A8-$29AB DB_DATA 3
RANGE $29AB-$29AE DB_DATA 3
RANGE $29AE-$29B1 DB_DATA 3
RANGE $29B1-$29B4 DB_DATA 3
RANGE $29B4-$29B7 DB_DATA 3
RANGE $29B7-$29BA DB_DATA 3
RANGE $29BA-$29BD DB_DATA 3
RANGE $29BD-$29C0 DB_DATA 3
RANGE $29C0-$29C3 DB_DATA 3
RANGE $29C3-$29C6 DB_DATA 3
RANGE $29C6-$29C9 DB_DATA 3
RANGE $29C9-$29CC DB_DATA 3
RANGE $29CC-$29CF DB_DATA 3
RANGE $29CF-$29D2 DB_DATA 3
RANGE $29D2-$29D5 DB_DATA 3
RANGE $29D5-$29D8 DB_DATA 3
RANGE $29D8-$29DB DB_DATA 3
RANGE $29DB-$29DE DB_DATA 3
RANGE $29DE-$29E1 DB_DATA 3
RANGE $29E1-$29E2 DB_DATA 1
RANGE $29E2-$29E5 DB_DATA 3
RANGE $29E5-$29E8 DB_DATA 3
RANGE $29E8-$29EB DB_DATA 3
RANGE $29EB-$29EE DB_DATA 3
RANGE $29EE-$29F1 DB_DATA 3
RANGE $29F1-$29F4 DB_DATA 3
RANGE $29F4-$29F7 DB_DATA 3
RANGE $29F7-$29FA DB_DATA 3
RANGE $29FA-$29FD DB_DATA 3
RANGE $29FD-$2A00 DB_DATA 3
RANGE $2A00-$2A03 DB_DATA 3
RANGE $2A03-$2A06 DB_DATA 3
RANGE $2A06-$2A09 DB_DATA 3
RANGE $2A09-$2A0C DB_DATA 3
RANGE $2A0C-$2A0F DB_DATA 3
RANGE $2A0F-$2A12 DB_DATA 3
RANGE $2A12-$2A15 DB_DATA 3
RANGE $2A15-$2A18 DB_DATA 3
RANGE $2A18-$2A1B DB_DATA 3
RANGE $2A1B-$2A1E DB_DATA 3
RANGE $2A1E-$2A21 DB_DATA 3
RANGE $2A21-$2A24 DB_DATA 3
RANGE $2A24-$2A27 DB_DATA 3
RANGE $2A27-$2A2A DB_DATA 3
RANGE $2A2A-$2A2D DB_DATA 3
RANGE $2A2D-$2A30 DB_DATA 3
RANGE $2A30-$2A33 DB_DATA 3
RANGE $2A33-$2A36 DB_DATA 3
RANGE $2A36-$2A39 DB_DATA 3
RANGE $2A39-$2A3C DB_DATA 3
RANGE $2A3C-$2A3F DB_DATA 3
RANGE $2A3F-$2A42 DB_DATA 3
RANGE $2A42-$2A45 DB_DATA 3
RANGE $2A45-$2A48 DB_DATA 3
RANGE $2A48-$2A4B DB_DATA 3
RANGE $2A4B-$2A4E DB_DATA 3
RANGE $2A4E-$2A51 DB_DATA 3
RANGE $2A51-$2A54 DB_DATA 3
RANGE $2A54-$2A57 DB_DATA 3
RANGE $2A57-$2A5A DB_DATA 3
RANGE $2A5A-$2A5D DB_DATA 3
RANGE $2A5D-$2A5E DB_DATA 1
RANGE $2A5E-$2A61 DB_DATA 3
RANGE $2A61-$2A64 DB_DATA 3
RANGE $2A64-$2A67 DB_DATA 3
RANGE $2A67-$2A6A DB_DATA 3
RANGE $2A6A-$2A6D DB_DATA 3
RANGE $2A6D-$2A70 DB_DATA 3
RANGE $2A70-$2A73 DB_DATA 3
RANGE $2A73-$2A76 DB_DATA 3
RANGE $2A76-$2A79 DB_DATA 3
RANGE $2A79-$2A7C DB_DATA 3
RANGE $2A7C-$2A7F DB_DATA 3
RANGE $2A7F-$2A82 DB_DATA 3
RANGE $2A82-$2A85 DB_DATA 3
RANGE $2A85-$2A88 DB_DATA 3
RANGE $2A88-$2A8B DB_DATA 3
RANGE $2A8B-$2A8E DB_DATA 3
RANGE $2A8E-$2A91 DB_DATA 3
RANGE $2A91-$2A94 DB_DATA 3
RANGE $2A94-$2A97 DB_DATA 3
RANGE $2A97-$2A9A DB_DATA 3
RANGE $2A9A-$2A9D DB_DATA 3
RANGE $2A9D-$2AA0 DB_DATA 3
RANGE $2AA0-$2AA3 DB_DATA 3
RANGE $2AA3-$2AA6 DB_DATA 3
RANGE $2AA6-$2AA9 DB_DATA 3
RANGE $2AA9-$2AAC DB_DATA 3
RANGE $2AAC-$2AAF DB_DATA 3
RANGE $2AAF-$2AB2 DB_DATA 3
RANGE $2AB2-$2AB5 DB_DATA 3
RANGE $2AB5-$2AB8 DB_DATA 3
RANGE $2AB8-$2ABB DB_DATA 3
RANGE $2ABB-$2ABE DB_DATA 3
RANGE $2ABE-$2AC1 DB_DATA 3
RANGE $2AC1-$2AC4 DB_DATA 3
RANGE $2AC4-$2AC7 DB_DATA 3
RANGE $2AC7-$2ACA DB_DATA 3
RANGE $2ACA-$2ACD DB_DATA 3
RANGE $2ACD-$2AD0 DB_DATA 3
RANGE $2AD0-$2AD3 DB_DATA 3
RANGE $2AD3-$2AD6 DB_DATA 3
RANGE $2AD6-$2AD9 DB_DATA 3
RANGE $2AD9-$2ADC DB_DATA 3
RANGE $2ADC-$2ADF DB_DATA 3
RANGE $2ADF-$2AE2 DB_DATA 3
RANGE $2AE2-$2AE5 DB_DATA 3
RANGE $2AE5-$2AE8 DB_DATA 3
RANGE $2AE8-$2AEB DB_DATA 3
RANGE $2AEB-$2AEE DB_DATA 3
RANGE $2AEE-$2AEF DB_DATA 1
RANGE $2AEF-$2AF2 DB_DATA 3
RANGE $2AF2-$2AF5 DB_DATA 3
RANGE $2AF5-$2AF8 DB_DATA 3
RANGE $2AF8-$2AFB DB_DATA 3
RANGE $2AFB-$2AFE DB_DATA 3
RANGE $2AFE-$2B01 DB_DATA 3
RANGE $2B01-$2B04 DB_DATA 3
RANGE $2B04-$2B07 DB_DATA 3
RANGE $2B07-$2B0A DB_DATA 3
RANGE $2B0A-$2B0D DB_DATA 3
RANGE $2B0D-$2B10 DB_DATA 3
RANGE $2B10-$2B13 DB_DATA 3
RANGE $2B13-$2B16 DB_DATA 3
RANGE $2B16-$2B19 DB_DATA 3
RANGE $2B19-$2B1C DB_DATA 3
RANGE $2B1C-$2B1F DB_DATA 3
RANGE $2B1F-$2B22 DB_DATA 3
RANGE $2B22-$2B25 DB_DATA 3
RANGE $2B25-$2B28 DB_DATA 3
RANGE $2B28-$2B2B DB_DATA 3
RANGE $2B2B-$2B2E DB_DATA 3
RANGE $2B2E-$2B31 DB_DATA 3
RANGE $2B31-$2B34 DB_DATA 3
RANGE $2B34-$2B37 DB_DATA 3
RANGE $2B37-$2B3A DB_DATA 3
RANGE $2B3A-$2B3D DB_DATA 3
RANGE $2B3D-$2B40 DB_DATA 3
RANGE $2B40-$2B43 DB_DATA 3
RANGE $2B43-$2B46 DB_DATA 3
RANGE $2B46-$2B49 DB_DATA 3
RANGE $2B49-$2B4C DB_DATA 3
RANGE $2B4C-$2B4F DB_DATA 3
RANGE $2B4F-$2B52 DB_DATA 3
RANGE $2B52-$2B55 DB_DATA 3
RANGE $2B55-$2B58 DB_DATA 3
RANGE $2B58-$2B5B DB_DATA 3
RANGE $2B5B-$2B5E DB_DATA 3
RANGE $2B5E-$2B61 DB_DATA 3
RANGE $2B61-$2B64 DB_DATA 3
RANGE $2B64-$2B67 DB_DATA 3
RANGE $2B67-$2B68 DB_DATA 1
RANGE $2B68-$2B6B DB_DATA 3
RANGE $2B6B-$2B6E DB_DATA 3
RANGE $2B6E-$2B71 DB_DATA 3
RANGE $2B71-$2B74 DB_DATA 3
RANGE $2B74-$2B77 DB_DATA 3
RANGE $2B77-$2B7A DB_DATA 3
RANGE $2B7A-$2B7D DB_DATA 3
RANGE $2B7D-$2B80 DB_DATA 3
RANGE $2B80-$2B83 DB_DATA 3
RANGE $2B83-$2B86 DB_DATA 3
RANGE $2B86-$2B89 DB_DATA 3
RANGE $2B89-$2B8C DB_DATA 3
RANGE $2B8C-$2B8F DB_DATA 3
RANGE $2B8F-$2B92 DB_DATA 3
RANGE $2B92-$2B95 DB_DATA 3
RANGE $2B95-$2B98 DB_DATA 3
RANGE $2B98-$2B9B DB_DATA 3
RANGE $2B9B-$2B9E DB_DATA 3
RANGE $2B9E-$2BA1 DB_DATA 3
RANGE $2BA1-$2BA4 DB_DATA 3
RANGE $2BA4-$2BA7 DB_DATA 3
RANGE $2BA7-$2BAA DB_DATA 3
RANGE $2BAA-$2BAD DB_DATA 3
RANGE $2BAD-$2BB0 DB_DATA 3
RANGE $2BB0-$2BB3 DB_DATA 3
RANGE $2BB3-$2BB6 DB_DATA 3
RANGE $2BB6-$2BB9 DB_DATA 3
RANGE $2BB9-$2BBC DB_DATA 3
RANGE $2BBC-$2BBF DB_DATA 3
RANGE $2BBF-$2BC2 DB_DATA 3
RANGE $2BC2-$2BC5 DB_DATA 3
RANGE $2BC5-$2BC8 DB_DATA 3
RANGE $2BC8-$2BCB DB_DATA 3
RANGE $2BCB-$2BCE DB_DATA 3
RANGE $2BCE-$2BD1 DB_DATA 3
RANGE $2BD1-$2BD4 DB_DATA 3
RANGE $2BD4-$2BD7 DB_DATA 3
RANGE $2BD7-$2BDA DB_DATA 3
RANGE $2BDA-$2BDB DB_DATA 1
RANGE $2BDB-$2BDD DW_DATA 1
RANGE $2BDD-$2BDF DW_DATA 1
RANGE $2BDF-$2BE1 DW_DATA 1
RANGE $2BE1-$2BE3 DW_DATA 1
RANGE $2BE3-$2BE5 DW_DATA 1
RANGE $2BE5-$2BE8 DB_DATA 3
RANGE $2BE8-$2BEB DB_DATA 3
RANGE $2BEB-$2BEE DB_DATA 3
RANGE $2BEE-$2BF1 DB_DATA 3
RANGE $2BF1-$2BF4 DB_DATA 3
RANGE $2BF4-$2BF7 DB_DATA 3
RANGE $2BF7-$2BFA DB_DATA 3
RANGE $2BFA-$2BFD DB_DATA 3
RANGE $2BFD-$2C00 DB_DATA 3
RANGE $2C00-$2C03 DB_DATA 3
RANGE $2C03-$2C06 DB_DATA 3
RANGE $2C06-$2C09 DB_DATA 3
RANGE $2C09-$2C0C DB_DATA 3
RANGE $2C0C-$2C0F DB_DATA 3
RANGE $2C0F-$2C12 DB_DATA 3
RANGE $2C12-$2C15 DB_DATA 3
RANGE $2C15-$2C18 DB_DATA 3
RANGE $2C18-$2C1B DB_DATA 3
RANGE $2C1B-$2C1E DB_DATA 3
RANGE $2C1E-$2C21 DB_DATA 3
RANGE $2C21-$2C24 DB_DATA 3
RANGE $2C24-$2C27 DB_DATA 3
RANGE $2C27-$2C2A DB_DATA 3
RANGE $2C2A-$2C2D DB_DATA 3
RANGE $2C2D-$2C30 DB_DATA 3
RANGE $2C30-$2C33 DB_DATA 3
RANGE $2C33-$2C36 DB_DATA 3
RANGE $2C36-$2C39 DB_DATA 3
RANGE $2C39-$2C3C DB_DATA 3
RANGE $2C3C-$2C3F DB_DATA 3
RANGE $2C3F-$2C42 DB_DATA 3
RANGE $2C42-$2C45 DB_DATA 3
RANGE $2C45-$2C48 DB_DATA 3
RANGE $2C48-$2C4B DB_DATA 3
RANGE $2C4B-$2C4E DB_DATA 3
RANGE $2C4E-$2C51 DB_DATA 3
RANGE $2C51-$2C54 DB_DATA 3
RANGE $2C54-$2C57 DB_DATA 3
RANGE $2C57-$2C5A DB_DATA 3
RANGE $2C5A-$2C5D DB_DATA 3
RANGE $2C5D-$2C60 DB_DATA 3
RANGE $2C60-$2C63 DB_DATA 3
RANGE $2C63-$2C66 DB_DATA 3
RANGE $2C66-$2C69 DB_DATA 3
RANGE $2C69-$2C6C DB_DATA 3
RANGE $2C6C-$2C6F DB_DATA 3
RANGE $2C6F-$2C72 DB_DATA 3
RANGE $2C72-$2C73 DB_DATA 1
RANGE $2C73-$2C76 DB_DATA 3
RANGE $2C76-$2C79 DB_DATA 3
RANGE $2C79-$2C7C DB_DATA 3
RANGE $2C7C-$2C7F DB_DATA 3
RANGE $2C7F-$2C82 DB_DATA 3
RANGE $2C82-$2C85 DB_DATA 3
RANGE $2C85-$2C88 DB_DATA 3
RANGE $2C88-$2C8B DB_DATA 3
RANGE $2C8B-$2C8E DB_DATA 3
RANGE $2C8E-$2C91 DB_DATA 3
RANGE $2C91-$2C94 DB_DATA 3
RANGE $2C94-$2C97 DB_DATA 3
RANGE $2C97-$2C9A DB_DATA 3
RANGE $2C9A-$2C9D DB_DATA 3
RANGE $2C9D-$2CA0 DB_DATA 3
RANGE $2CA0-$2CA3 DB_DATA 3
RANGE $2CA3-$2CA6 DB_DATA 3
RANGE $2CA6-$2CA9 DB_DATA 3
RANGE $2CA9-$2CAC DB_DATA 3
RANGE $2CAC-$2CAF DB_DATA 3
RANGE $2CAF-$2CB2 DB_DATA 3
RANGE $2CB2-$2CB5 DB_DATA 3
RANGE $2CB5-$2CB8 DB_DATA 3
RANGE $2CB8-$2CBB DB_DATA 3
RANGE $2CBB-$2CBE DB_DATA 3
RANGE $2CBE-$2CC1 DB_DATA 3
RANGE $2CC1-$2CC4 DB_DATA 3
RANGE $2CC4-$2CC7 DB_DATA 3
RANGE $2CC7-$2CCA DB_DATA 3
RANGE $2CCA-$2CCD DB_DATA 3
RANGE $2CCD-$2CD0 DB_DATA 3
RANGE $2CD0-$2CD3 DB_DATA 3
RANGE $2CD3-$2CD6 DB_DATA 3
RANGE $2CD6-$2CD9 DB_DATA 3
RANGE $2CD9-$2CDC DB_DATA 3
RANGE $2CDC-$2CDF DB_DATA 3
RANGE $2CDF-$2CE2 DB_DATA 3
RANGE $2CE2-$2CE5 DB_DATA 3
RANGE $2CE5-$2CE8 DB_DATA 3
RANGE $2CE8-$2CEB DB_DATA 3
RANGE $2CEB-$2CEE DB_DATA 3
RANGE $2CEE-$2CF1 DB_DATA 3
RANGE $2CF1-$2CF2 DB_DATA 1
RANGE $2CF2-$2CF5 DB_DATA 3
RANGE $2CF5-$2CF8 DB_DATA 3
RANGE $2CF8-$2CFB DB_DATA 3
RANGE $2CFB-$2CFE DB_DATA 3
RANGE $2CFE-$2D01 DB_DATA 3
RANGE $2D01-$2D04 DB_DATA 3
RANGE $2D04-$2D07 DB_DATA 3
RANGE $2D07-$2D0A DB_DATA 3
RANGE $2D0A-$2D0D DB_DATA 3
RANGE $2D0D-$2D10 DB_DATA 3
RANGE $2D10-$2D13 DB_DATA 3
RANGE $2D13-$2D16 DB_DATA 3
RANGE $2D16-$2D19 DB_DATA 3
RANGE $2D19-$2D1C DB_DATA 3
RANGE $2D1C-$2D1F DB_DATA 3
RANGE $2D1F-$2D22 DB_DATA 3
RANGE $2D22-$2D25 DB_DATA 3
RANGE $2D25-$2D28 DB_DATA 3
RANGE $2D28-$2D2B DB_DATA 3
RANGE $2D2B-$2D2E DB_DATA 3
RANGE $2D2E-$2D31 DB_DATA 3
RANGE $2D31-$2D34 DB_DATA 3
RANGE $2D34-$2D37 DB_DATA 3
RANGE $2D37-$2D3A DB_DATA 3
RANGE $2D3A-$2D3D DB_DATA 3
RANGE $2D3D-$2D40 DB_DATA 3
RANGE $2D40-$2D43 DB_DATA 3
RANGE $2D43-$2D46 DB_DATA 3
RANGE $2D46-$2D49 DB_DATA 3
RANGE $2D49-$2D4C DB_DATA 3
RANGE $2D4C-$2D4F DB_DATA 3
RANGE $2D4F-$2D52 DB_DATA 3
RANGE $2D52-$2D55 DB_DATA 3
RANGE $2D55-$2D58 DB_DATA 3
RANGE $2D58-$2D5B DB_DATA 3
RANGE $2D5B-$2D5E DB_DATA 3
RANGE $2D5E-$2D61 DB_DATA 3
RANGE $2D61-$2D64 DB_DATA 3
RANGE $2D64-$2D65 DB_DATA 1
RANGE $2D65-$2D68 DB_DATA 3
RANGE $2D68-$2D6B DB_DATA 3
RANGE $2D6B-$2D6E DB_DATA 3
RANGE $2D6E-$2D71 DB_DATA 3
RANGE $2D71-$2D74 DB_DATA 3
RANGE $2D74-$2D77 DB_DATA 3
RANGE $2D77-$2D7A DB_DATA 3
RANGE $2D7A-$2D7D DB_DATA 3
RANGE $2D7D-$2D80 DB_DATA 3
RANGE $2D80-$2D83 DB_DATA 3
RANGE $2D83-$2D86 DB_DATA 3
RANGE $2D86-$2D89 DB_DATA 3
RANGE $2D89-$2D8C DB_DATA 3
RANGE $2D8C-$2D8F DB_DATA 3
RANGE $2D8F-$2D92 DB_DATA 3
RANGE $2D92-$2D95 DB_DATA 3
RANGE $2D95-$2D98 DB_DATA 3
RANGE $2D98-$2D9B DB_DATA 3
RANGE $2D9B-$2D9E DB_DATA 3
RANGE $2D9E-$2DA1 DB_DATA 3
RANGE $2DA1-$2DA4 DB_DATA 3
RANGE $2DA4-$2DA7 DB_DATA 3
RANGE $2DA7-$2DAA DB_DATA 3
RANGE $2DAA-$2DAD DB_DATA 3
RANGE $2DAD-$2DB0 DB_DATA 3
RANGE $2DB0-$2DB3 DB_DATA 3
RANGE $2DB3-$2DB6 DB_DATA 3
RANGE $2DB6-$2DB9 DB_DATA 3
RANGE $2DB9-$2DBC DB_DATA 3
RANGE $2DBC-$2DBF DB_DATA 3
RANGE $2DBF-$2DC2 DB_DATA 3
RANGE $2DC2-$2DC5 DB_DATA 3
RANGE $2DC5-$2DC8 DB_DATA 3
RANGE $2DC8-$2DCB DB_DATA 3
RANGE $2DCB-$2DCE DB_DATA 3
RANGE $2DCE-$2DD1 DB_DATA 3
RANGE $2DD1-$2DD2 DB_DATA 1
RANGE $2DD2-$2DD4 DW_DATA 1
RANGE $2DD4-$2DD6 DW_DATA 1
RANGE $2DD6-$2DD8 DW_DATA 1
RANGE $2DD8-$2DDA DW_DATA 1
RANGE $2DDA-$2DDC DW_DATA 1
RANGE $2DDC-$2DDE DW_DATA 1
RANGE $2DDE-$2DE1 DB_DATA 3
RANGE $2DE1-$2DE4 DB_DATA 3
RANGE $2DE4-$2DE7 DB_DATA 3
RANGE $2DE7-$2DEA DB_DATA 3
RANGE $2DEA-$2DED DB_DATA 3
RANGE $2DED-$2DF0 DB_DATA 3
RANGE $2DF0-$2DF3 DB_DATA 3
RANGE $2DF3-$2DF6 DB_DATA 3
RANGE $2DF6-$2DF9 DB_DATA 3
RANGE $2DF9-$2DFC DB_DATA 3
RANGE $2DFC-$2DFF DB_DATA 3
RANGE $2DFF-$2E02 DB_DATA 3
RANGE $2E02-$2E05 DB_DATA 3
RANGE $2E05-$2E08 DB_DATA 3
RANGE $2E08-$2E0B DB_DATA 3
RANGE $2E0B-$2E0E DB_DATA 3
RANGE $2E0E-$2E11 DB_DATA 3
RANGE $2E11-$2E14 DB_DATA 3
RANGE $2E14-$2E17 DB_DATA 3
RANGE $2E17-$2E1A DB_DATA 3
RANGE $2E1A-$2E1D DB_DATA 3
RANGE $2E1D-$2E20 DB_DATA 3
RANGE $2E20-$2E23 DB_DATA 3
RANGE $2E23-$2E26 DB_DATA 3
RANGE $2E26-$2E29 DB_DATA 3
RANGE $2E29-$2E2C DB_DATA 3
RANGE $2E2C-$2E2F DB_DATA 3
RANGE $2E2F-$2E32 DB_DATA 3
RANGE $2E32-$2E35 DB_DATA 3
RANGE $2E35-$2E38 DB_DATA 3
RANGE $2E38-$2E3B DB_DATA 3
RANGE $2E3B-$2E3E DB_DATA 3
RANGE $2E3E-$2E41 DB_DATA 3
RANGE $2E41-$2E44 DB_DATA 3
RANGE $2E44-$2E47 DB_DATA 3
RANGE $2E47-$2E4A DB_DATA 3
RANGE $2E4A-$2E4B DB_DATA 1
RANGE $2E4B-$2E4E DB_DATA 3
RANGE $2E4E-$2E51 DB_DATA 3
RANGE $2E51-$2E54 DB_DATA 3
RANGE $2E54-$2E57 DB_DATA 3
RANGE $2E57-$2E5A DB_DATA 3
RANGE $2E5A-$2E5D DB_DATA 3
RANGE $2E5D-$2E60 DB_DATA 3
RANGE $2E60-$2E63 DB_DATA 3
RANGE $2E63-$2E66 DB_DATA 3
RANGE $2E66-$2E69 DB_DATA 3
RANGE $2E69-$2E6C DB_DATA 3
RANGE $2E6C-$2E6F DB_DATA 3
RANGE $2E6F-$2E72 DB_DATA 3
RANGE $2E72-$2E75 DB_DATA 3
RANGE $2E75-$2E78 DB_DATA 3
RANGE $2E78-$2E7B DB_DATA 3
RANGE $2E7B-$2E7E DB_DATA 3
RANGE $2E7E-$2E81 DB_DATA 3
RANGE $2E81-$2E84 DB_DATA 3
RANGE $2E84-$2E87 DB_DATA 3
RANGE $2E87-$2E8A DB_DATA 3
RANGE $2E8A-$2E8D DB_DATA 3
RANGE $2E8D-$2E90 DB_DATA 3
RANGE $2E90-$2E93 DB_DATA 3
RANGE $2E93-$2E96 DB_DATA 3
RANGE $2E96-$2E99 DB_DATA 3
RANGE $2E99-$2E9C DB_DATA 3
RANGE $2E9C-$2E9F DB_DATA 3
RANGE $2E9F-$2EA2 DB_DATA 3
RANGE $2EA2-$2EA5 DB_DATA 3
RANGE $2EA5-$2EA8 DB_DATA 3
RANGE $2EA8-$2EAB DB_DATA 3
RANGE $2EAB-$2EAE DB_DATA 3
RANGE $2EAE-$2EB1 DB_DATA 3
RANGE $2EB1-$2EB4 DB_DATA 3
RANGE $2EB4-$2EB7 DB_DATA 3
RANGE $2EB7-$2EBA DB_DATA 3
RANGE $2EBA-$2EBD DB_DATA 3
RANGE $2EBD-$2EBE DB_DATA 1
RANGE $2EBE-$2EC1 DB_DATA 3
RANGE $2EC1-$2EC4 DB_DATA 3
RANGE $2EC4-$2EC7 DB_DATA 3
RANGE $2EC7-$2ECA DB_DATA 3
RANGE $2ECA-$2ECD DB_DATA 3
RANGE $2ECD-$2ED0 DB_DATA 3
RANGE $2ED0-$2ED3 DB_DATA 3
RANGE $2ED3-$2ED6 DB_DATA 3
RANGE $2ED6-$2ED9 DB_DATA 3
RANGE $2ED9-$2EDC DB_DATA 3
RANGE $2EDC-$2EDF DB_DATA 3
RANGE $2EDF-$2EE2 DB_DATA 3
RANGE $2EE2-$2EE5 DB_DATA 3
RANGE $2EE5-$2EE8 DB_DATA 3
RANGE $2EE8-$2EEB DB_DATA 3
RANGE $2EEB-$2EEE DB_DATA 3
RANGE $2EEE-$2EF1 DB_DATA 3
RANGE $2EF1-$2EF4 DB_DATA 3
RANGE $2EF4-$2EF7 DB_DATA 3
RANGE $2EF7-$2EFA DB_DATA 3
RANGE $2EFA-$2EFD DB_DATA 3
RANGE $2EFD-$2F00 DB_DATA 3
RANGE $2F00-$2F03 DB_DATA 3
RANGE $2F03-$2F06 DB_DATA 3
RANGE $2F06-$2F09 DB_DATA 3
RANGE $2F09-$2F0C DB_DATA 3
RANGE $2F0C-$2F0F DB_DATA 3
RANGE $2F0F-$2F12 DB_DATA 3
RANGE $2F12-$2F15 DB_DATA 3
RANGE $2F15-$2F18 DB_DATA 3
RANGE $2F18-$2F1B DB_DATA 3
RANGE $2F1B-$2F1E DB_DATA 3
RANGE $2F1E-$2F21 DB_DATA 3
RANGE $2F21-$2F24 DB_DATA 3
RANGE $2F24-$2F27 DB_DATA 3
RANGE $2F27-$2F2A DB_DATA 3
RANGE $2F2A-$2F2D DB_DATA 3
RANGE $2F2D-$2F30 DB_DATA 3
RANGE $2F30-$2F33 DB_DATA 3
RANGE $2F33-$2F36 DB_DATA 3
RANGE $2F36-$2F39 DB_DATA 3
RANGE $2F39-$2F3C DB_DATA 3
RANGE $2F3C-$2F3D DB_DATA 1
RANGE $2F3D-$2F40 DB_DATA 3
RANGE $2F40-$2F43 DB_DATA 3
RANGE $2F43-$2F46 DB_DATA 3
RANGE $2F46-$2F49 DB_DATA 3
RANGE $2F49-$2F4C DB_DATA 3
RANGE $2F4C-$2F4F DB_DATA 3
RANGE $2F4F-$2F52 DB_DATA 3
RANGE $2F52-$2F55 DB_DATA 3
RANGE $2F55-$2F58 DB_DATA 3
RANGE $2F58-$2F5B DB_DATA 3
RANGE $2F5B-$2F5E DB_DATA 3
RANGE $2F5E-$2F61 DB_DATA 3
RANGE $2F61-$2F64 DB_DATA 3
RANGE $2F64-$2F67 DB_DATA 3
RANGE $2F67-$2F6A DB_DATA 3
RANGE $2F6A-$2F6D DB_DATA 3
RANGE $2F6D-$2F70 DB_DATA 3
RANGE $2F70-$2F73 DB_DATA 3
RANGE $2F73-$2F76 DB_DATA 3
RANGE $2F76-$2F79 DB_DATA 3
RANGE $2F79-$2F7C DB_DATA 3
RANGE $2F7C-$2F7F DB_DATA 3
RANGE $2F7F-$2F82 DB_DATA 3
RANGE $2F82-$2F85 DB_DATA 3
RANGE $2F85-$2F88 DB_DATA 3
RANGE $2F88-$2F8B DB_DATA 3
RANGE $2F8B-$2F8E DB_DATA 3
RANGE $2F8E-$2F91 DB_DATA 3
RANGE $2F91-$2F94 DB_DATA 3
RANGE $2F94-$2F97 DB_DATA 3
RANGE $2F97-$2F9A DB_DATA 3
RANGE $2F9A-$2F9D DB_DATA 3
RANGE $2F9D-$2FA0 DB_DATA 3
RANGE $2FA0-$2FA3 DB_DATA 3
RANGE $2FA3-$2FA6 DB_DATA 3
RANGE $2FA6-$2FA9 DB_DATA 3
RANGE $2FA9-$2FAC DB_DATA 3
RANGE $2FAC-$2FAF DB_DATA 3
RANGE $2FAF-$2FB2 DB_DATA 3
RANGE $2FB2-$2FB5 DB_DATA 3
RANGE $2FB5-$2FB8 DB_DATA 3
RANGE $2FB8-$2FBB DB_DATA 3
RANGE $2FBB-$2FBE DB_DATA 3
RANGE $2FBE-$2FC1 DB_DATA 3
RANGE $2FC1-$2FC4 DB_DATA 3
RANGE $2FC4-$2FC7 DB_DATA 3
RANGE $2FC7-$2FCA DB_DATA 3
RANGE $2FCA-$2FCB DB_DATA 1
RANGE $2FCB-$2FCD DW_DATA 1
RANGE $2FCD-$2FCF DW_DATA 1
RANGE $2FCF-$2FD1 DW_DATA 1
RANGE $2FD1-$2FD3 DW_DATA 1
RANGE $2FD3-$2FD5 DW_DATA 1
RANGE $2FD5-$2FD7 DW_DATA 1
RANGE $2FD7-$2FD9 DW_DATA 1
RANGE $2FD9-$2FDB DW_DATA 1
RANGE $2FDB-$2FDD DW_DATA 1
RANGE $2FDD-$2FE0 DB_DATA 3
RANGE $2FE0-$2FE3 DB_DATA 3
RANGE $2FE3-$2FE6 DB_DATA 3
RANGE $2FE6-$2FE9 DB_DATA 3
RANGE $2FE9-$2FEC DB_DATA 3
RANGE $2FEC-$2FEF DB_DATA 3
RANGE $2FEF-$2FF2 DB_DATA 3
RANGE $2FF2-$2FF5 DB_DATA 3
RANGE $2FF5-$2FF8 DB_DATA 3
RANGE $2FF8-$2FFB DB_DATA 3
RANGE $2FFB-$2FFE DB_DATA 3
RANGE $2FFE-$3001 DB_DATA 3
RANGE $3001-$3004 DB_DATA 3
RANGE $3004-$3007 DB_DATA 3
RANGE $3007-$300A DB_DATA 3
RANGE $300A-$300D DB_DATA 3
RANGE $300D-$3010 DB_DATA 3
RANGE $3010-$3013 DB_DATA 3
RANGE $3013-$3016 DB_DATA 3
RANGE $3016-$3019 DB_DATA 3
RANGE $3019-$301C DB_DATA 3
RANGE $301C-$301F DB_DATA 3
RANGE $301F-$3022 DB_DATA 3
RANGE $3022-$3025 DB_DATA 3
RANGE $3025-$3028 DB_DATA 3
RANGE $3028-$302B DB_DATA 3
RANGE $302B-$302E DB_DATA 3
RANGE $302E-$3031 DB_DATA 3
RANGE $3031-$3034 DB_DATA 3
RANGE $3034-$3037 DB_DATA 3
RANGE $3037-$303A DB_DATA 3
RANGE $303A-$303D DB_DATA 3
RANGE $303D-$3040 DB_DATA 3
RANGE $3040-$3043 DB_DATA 3
RANGE $3043-$3046 DB_DATA 3
RANGE $3046-$3049 DB_DATA 3
RANGE $3049-$304C DB_DATA 3
RANGE $304C-$304F DB_DATA 3
RANGE $304F-$3052 DB_DATA 3
RANGE $3052-$3055 DB_DATA 3
RANGE $3055-$3058 DB_DATA 3
RANGE $3058-$3059 DB_DATA 1
RANGE $3059-$305C DB_DATA 3
RANGE $305C-$305F DB_DATA 3
RANGE $305F-$3062 DB_DATA 3
RANGE $3062-$3065 DB_DATA 3
RANGE $3065-$3068 DB_DATA 3
RANGE $3068-$306B DB_DATA 3
RANGE $306B-$306E DB_DATA 3
RANGE $306E-$3071 DB_DATA 3
RANGE $3071-$3074 DB_DATA 3
RANGE $3074-$3077 DB_DATA 3
RANGE $3077-$307A DB_DATA 3
RANGE $307A-$307D DB_DATA 3
RANGE $307D-$3080 DB_DATA 3
RANGE $3080-$3083 DB_DATA 3
RANGE $3083-$3086 DB_DATA 3
RANGE $3086-$3089 DB_DATA 3
RANGE $3089-$308C DB_DATA 3
RANGE $308C-$308F DB_DATA 3
RANGE $308F-$3092 DB_DATA 3
RANGE $3092-$3095 DB_DATA 3
RANGE $3095-$3098 DB_DATA 3
RANGE $3098-$309B DB_DATA 3
RANGE $309B-$309E DB_DATA 3
RANGE $309E-$30A1 DB_DATA 3
RANGE $30A1-$30A4 DB_DATA 3
RANGE $30A4-$30A7 DB_DATA 3
RANGE $30A7-$30AA DB_DATA 3
RANGE $30AA-$30AD DB_DATA 3
RANGE $30AD-$30B0 DB_DATA 3
RANGE $30B0-$30B3 DB_DATA 3
RANGE $30B3-$30B6 DB_DATA 3
RANGE $30B6-$30B9 DB_DATA 3
RANGE $30B9-$30BC DB_DATA 3
RANGE $30BC-$30BF DB_DATA 3
RANGE $30BF-$30C2 DB_DATA 3
RANGE $30C2-$30C5 DB_DATA 3
RANGE $30C5-$30C8 DB_DATA 3
RANGE $30C8-$30CB DB_DATA 3
RANGE $30CB-$30CE DB_DATA 3
RANGE $30CE-$30D1 DB_DATA 3
RANGE $30D1-$30D4 DB_DATA 3
RANGE $30D4-$30D7 DB_DATA 3
RANGE $30D7-$30DA DB_DATA 3
RANGE $30DA-$30DD DB_DATA 3
RANGE $30DD-$30E0 DB_DATA 3
RANGE $30E0-$30E3 DB_DATA 3
RANGE $30E3-$30E6 DB_DATA 3
RANGE $30E6-$30E9 DB_DATA 3
RANGE $30E9-$30EA DB_DATA 1
RANGE $30EA-$30ED DB_DATA 3
RANGE $30ED-$30F0 DB_DATA 3
RANGE $30F0-$30F3 DB_DATA 3
RANGE $30F3-$30F6 DB_DATA 3
RANGE $30F6-$30F9 DB_DATA 3
RANGE $30F9-$30FC DB_DATA 3
RANGE $30FC-$30FF DB_DATA 3
RANGE $30FF-$3102 DB_DATA 3
RANGE $3102-$3105 DB_DATA 3
RANGE $3105-$3108 DB_DATA 3
RANGE $3108-$310B DB_DATA 3
RANGE $310B-$310E DB_DATA 3
RANGE $310E-$3111 DB_DATA 3
RANGE $3111-$3114 DB_DATA 3
RANGE $3114-$3117 DB_DATA 3
RANGE $3117-$311A DB_DATA 3
RANGE $311A-$311D DB_DATA 3
RANGE $311D-$3120 DB_DATA 3
RANGE $3120-$3123 DB_DATA 3
RANGE $3123-$3126 DB_DATA 3
RANGE $3126-$3129 DB_DATA 3
RANGE $3129-$312C DB_DATA 3
RANGE $312C-$312F DB_DATA 3
RANGE $312F-$3132 DB_DATA 3
RANGE $3132-$3135 DB_DATA 3
RANGE $3135-$3138 DB_DATA 3
RANGE $3138-$313B DB_DATA 3
RANGE $313B-$313E DB_DATA 3
RANGE $313E-$3141 DB_DATA 3
RANGE $3141-$3144 DB_DATA 3
RANGE $3144-$3147 DB_DATA 3
RANGE $3147-$314A DB_DATA 3
RANGE $314A-$314D DB_DATA 3
RANGE $314D-$3150 DB_DATA 3
RANGE $3150-$3153 DB_DATA 3
RANGE $3153-$3156 DB_DATA 3
RANGE $3156-$3159 DB_DATA 3
RANGE $3159-$315C DB_DATA 3
RANGE $315C-$315F DB_DATA 3
RANGE $315F-$3162 DB_DATA 3
RANGE $3162-$3165 DB_DATA 3
RANGE $3165-$3168 DB_DATA 3
RANGE $3168-$316B DB_DATA 3
RANGE $316B-$316C DB_DATA 1
RANGE $316C-$316F DB_DATA 3
RANGE $316F-$3172 DB_DATA 3
RANGE $3172-$3175 DB_DATA 3
RANGE $3175-$3178 DB_DATA 3
RANGE $3178-$317B DB_DATA 3
RANGE $317B-$317E DB_DATA 3
RANGE $317E-$3181 DB_DATA 3
RANGE $3181-$3184 DB_DATA 3
RANGE $3184-$3187 DB_DATA 3
RANGE $3187-$318A DB_DATA 3
RANGE $318A-$318D DB_DATA 3
RANGE $318D-$3190 DB_DATA 3
RANGE $3190-$3193 DB_DATA 3
RANGE $3193-$3196 DB_DATA 3
RANGE $3196-$3199 DB_DATA 3
RANGE $3199-$319C DB_DATA 3
RANGE $319C-$319F DB_DATA 3
RANGE $319F-$31A2 DB_DATA 3
RANGE $31A2-$31A5 DB_DATA 3
RANGE $31A5-$31A8 DB_DATA 3
RANGE $31A8-$31AB DB_DATA 3
RANGE $31AB-$31AE DB_DATA 3
RANGE $31AE-$31B1 DB_DATA 3
RANGE $31B1-$31B4 DB_DATA 3
RANGE $31B4-$31B7 DB_DATA 3
RANGE $31B7-$31BA DB_DATA 3
RANGE $31BA-$31BD DB_DATA 3
RANGE $31BD-$31C0 DB_DATA 3
RANGE $31C0-$31C3 DB_DATA 3
RANGE $31C3-$31C6 DB_DATA 3
RANGE $31C6-$31C9 DB_DATA 3
RANGE $31C9-$31CC DB_DATA 3
RANGE $31CC-$31CF DB_DATA 3
RANGE $31CF-$31D2 DB_DATA 3
RANGE $31D2-$31D5 DB_DATA 3
RANGE $31D5-$31D8 DB_DATA 3
RANGE $31D8-$31DB DB_DATA 3
RANGE $31DB-$31DE DB_DATA 3
RANGE $31DE-$31E1 DB_DATA 3
RANGE $31E1-$31E4 DB_DATA 3
RANGE $31E4-$31E7 DB_DATA 3
RANGE $31E7-$31EA DB_DATA 3
RANGE $31EA-$31ED DB_DATA 3
RANGE $31ED-$31F0 DB_DATA 3
RANGE $31F0-$31F3 DB_DATA 3
RANGE $31F3-$31F6 DB_DATA 3
RANGE $31F6-$31F9 DB_DATA 3
RANGE $31F9-$31FA DB_DATA 1
RANGE $31FA-$31FD DB_DATA 3
RANGE $31FD-$3200 DB_DATA 3
RANGE $3200-$3203 DB_DATA 3
RANGE $3203-$3206 DB_DATA 3
RANGE $3206-$3209 DB_DATA 3
RANGE $3209-$320C DB_DATA 3
RANGE $320C-$320F DB_DATA 3
RANGE $320F-$3212 DB_DATA 3
RANGE $3212-$3215 DB_DATA 3
RANGE $3215-$3218 DB_DATA 3
RANGE $3218-$321B DB_DATA 3
RANGE $321B-$321E DB_DATA 3
RANGE $321E-$3221 DB_DATA 3
RANGE $3221-$3224 DB_DATA 3
RANGE $3224-$3227 DB_DATA 3
RANGE $3227-$322A DB_DATA 3
RANGE $322A-$322D DB_DATA 3
RANGE $322D-$3230 DB_DATA 3
RANGE $3230-$3233 DB_DATA 3
RANGE $3233-$3236 DB_DATA 3
RANGE $3236-$3239 DB_DATA 3
RANGE $3239-$323C DB_DATA 3
RANGE $323C-$323F DB_DATA 3
RANGE $323F-$3242 DB_DATA 3
RANGE $3242-$3245 DB_DATA 3
RANGE $3245-$3248 DB_DATA 3
RANGE $3248-$324B DB_DATA 3
RANGE $324B-$324E DB_DATA 3
RANGE $324E-$3251 DB_DATA 3
RANGE $3251-$3254 DB_DATA 3
RANGE $3254-$3257 DB_DATA 3
RANGE $3257-$325A DB_DATA 3
RANGE $325A-$325D DB_DATA 3
RANGE $325D-$3260 DB_DATA 3
RANGE $3260-$3263 DB_DATA 3
RANGE $3263-$3266 DB_DATA 3
RANGE $3266-$3269 DB_DATA 3
RANGE $3269-$326C DB_DATA 3
RANGE $326C-$326F DB_DATA 3
RANGE $326F-$3272 DB_DATA 3
RANGE $3272-$3275 DB_DATA 3
RANGE $3275-$3278 DB_DATA 3
RANGE $3278-$327B DB_DATA 3
RANGE $327B-$327E DB_DATA 3
RANGE $327E-$3281 DB_DATA 3
RANGE $3281-$3284 DB_DATA 3
RANGE $3284-$3287 DB_DATA 3
RANGE $3287-$3288 DB_DATA 1
RANGE $3288-$328B DB_DATA 3
RANGE $328B-$328E DB_DATA 3
RANGE $328E-$3291 DB_DATA 3
RANGE $3291-$3294 DB_DATA 3
RANGE $3294-$3297 DB_DATA 3
RANGE $3297-$329A DB_DATA 3
RANGE $329A-$329D DB_DATA 3
RANGE $329D-$32A0 DB_DATA 3
RANGE $32A0-$32A3 DB_DATA 3
RANGE $32A3-$32A6 DB_DATA 3
RANGE $32A6-$32A9 DB_DATA 3
RANGE $32A9-$32AC DB_DATA 3
RANGE $32AC-$32AF DB_DATA 3
RANGE $32AF-$32B2 DB_DATA 3
RANGE $32B2-$32B5 DB_DATA 3
RANGE $32B5-$32B8 DB_DATA 3
RANGE $32B8-$32BB DB_DATA 3
RANGE $32BB-$32BE DB_DATA 3
RANGE $32BE-$32C1 DB_DATA 3
RANGE $32C1-$32C4 DB_DATA 3
RANGE $32C4-$32C7 DB_DATA 3
RANGE $32C7-$32CA DB_DATA 3
RANGE $32CA-$32CD DB_DATA 3
RANGE $32CD-$32D0 DB_DATA 3
RANGE $32D0-$32D3 DB_DATA 3
RANGE $32D3-$32D6 DB_DATA 3
RANGE $32D6-$32D9 DB_DATA 3
RANGE $32D9-$32DC DB_DATA 3
RANGE $32DC-$32DF DB_DATA 3
RANGE $32DF-$32E2 DB_DATA 3
RANGE $32E2-$32E5 DB_DATA 3
RANGE $32E5-$32E8 DB_DATA 3
RANGE $32E8-$32EB DB_DATA 3
RANGE $32EB-$32EE DB_DATA 3
RANGE $32EE-$32F1 DB_DATA 3
RANGE $32F1-$32F4 DB_DATA 3
RANGE $32F4-$32F7 DB_DATA 3
RANGE $32F7-$32FA DB_DATA 3
RANGE $32FA-$32FD DB_DATA 3
RANGE $32FD-$3300 DB_DATA 3
RANGE $3300-$3303 DB_DATA 3
RANGE $3303-$3306 DB_DATA 3
RANGE $3306-$3309 DB_DATA 3
RANGE $3309-$330C DB_DATA 3
RANGE $330C-$330F DB_DATA 3
RANGE $330F-$3310 DB_DATA 1
RANGE $3310-$3313 DB_DATA 3
RANGE $3313-$3316 DB_DATA 3
RANGE $3316-$3319 DB_DATA 3
RANGE $3319-$331C DB_DATA 3
RANGE $331C-$331F DB_DATA 3
RANGE $331F-$3322 DB_DATA 3
RANGE $3322-$3325 DB_DATA 3
RANGE $3325-$3328 DB_DATA 3
RANGE $3328-$332B DB_DATA 3
RANGE $332B-$332E DB_DATA 3
RANGE $332E-$3331 DB_DATA 3
RANGE $3331-$3334 DB_DATA 3
RANGE $3334-$3337 DB_DATA 3
RANGE $3337-$333A DB_DATA 3
RANGE $333A-$333D DB_DATA 3
RANGE $333D-$3340 DB_DATA 3
RANGE $3340-$3343 DB_DATA 3
RANGE $3343-$3346 DB_DATA 3
RANGE $3346-$3349 DB_DATA 3
RANGE $3349-$334C DB_DATA 3
RANGE $334C-$334F DB_DATA 3
RANGE $334F-$3352 DB_DATA 3
RANGE $3352-$3355 DB_DATA 3
RANGE $3355-$3358 DB_DATA 3
RANGE $3358-$335B DB_DATA 3
RANGE $335B-$335E DB_DATA 3
RANGE $335E-$3361 DB_DATA 3
RANGE $3361-$3364 DB_DATA 3
RANGE $3364-$3367 DB_DATA 3
RANGE $3367-$336A DB_DATA 3
RANGE $336A-$336D DB_DATA 3
RANGE $336D-$3370 DB_DATA 3
RANGE $3370-$3373 DB_DATA 3
RANGE $3373-$3376 DB_DATA 3
RANGE $3376-$3379 DB_DATA 3
RANGE $3379-$337C DB_DATA 3
RANGE $337C-$337F DB_DATA 3
RANGE $337F-$3382 DB_DATA 3
RANGE $3382-$3385 DB_DATA 3
RANGE $3385-$3388 DB_DATA 3
RANGE $3388-$338B DB_DATA 3
RANGE $338B-$338E DB_DATA 3
RANGE $338E-$3391 DB_DATA 3
RANGE $3391-$3394 DB_DATA 3
RANGE $3394-$3397 DB_DATA 3
RANGE $3397-$3398 DB_DATA 1
RANGE $3398-$339B DB_DATA 3
RANGE $339B-$339E DB_DATA 3
RANGE $339E-$33A1 DB_DATA 3
RANGE $33A1-$33A4 DB_DATA 3
RANGE $33A4-$33A7 DB_DATA 3
RANGE $33A7-$33AA DB_DATA 3
RANGE $33AA-$33AD DB_DATA 3
RANGE $33AD-$33B0 DB_DATA 3
RANGE $33B0-$33B3 DB_DATA 3
RANGE $33B3-$33B6 DB_DATA 3
RANGE $33B6-$33B9 DB_DATA 3
RANGE $33B9-$33BC DB_DATA 3
RANGE $33BC-$33BF DB_DATA 3
RANGE $33BF-$33C2 DB_DATA 3
RANGE $33C2-$33C5 DB_DATA 3
RANGE $33C5-$33C8 DB_DATA 3
RANGE $33C8-$33CB DB_DATA 3
RANGE $33CB-$33CE DB_DATA 3
RANGE $33CE-$33D1 DB_DATA 3
RANGE $33D1-$33D4 DB_DATA 3
RANGE $33D4-$33D7 DB_DATA 3
RANGE $33D7-$33DA DB_DATA 3
RANGE $33DA-$33DD DB_DATA 3
RANGE $33DD-$33E0 DB_DATA 3
RANGE $33E0-$33E3 DB_DATA 3
RANGE $33E3-$33E6 DB_DATA 3
RANGE $33E6-$33E9 DB_DATA 3
RANGE $33E9-$33EC DB_DATA 3
RANGE $33EC-$33EF DB_DATA 3
RANGE $33EF-$33F2 DB_DATA 3
RANGE $33F2-$33F5 DB_DATA 3
RANGE $33F5-$33F8 DB_DATA 3
RANGE $33F8-$33FB DB_DATA 3
RANGE $33FB-$33FE DB_DATA 3
RANGE $33FE-$3401 DB_DATA 3
RANGE $3401-$3404 DB_DATA 3
RANGE $3404-$3407 DB_DATA 3
RANGE $3407-$340A DB_DATA 3
RANGE $340A-$340D DB_DATA 3
RANGE $340D-$3410 DB_DATA 3
RANGE $3410-$3413 DB_DATA 3
RANGE $3413-$3414 DB_DATA 1
RANGE $3414-$343E CODE
RANGE $343E-$3440 DW_DATA 1
RANGE $3440-$3441 DB_DATA 1
RANGE $3441-$3442 DB_DATA 1
RANGE $3442-$3443 DB_DATA 1
RANGE $3443-$3444 DB_DATA 1
RANGE $3444-$3445 DB_DATA 1
RANGE $3445-$3446 DB_DATA 1
RANGE $3446-$3447 DB_DATA 1
RANGE $3447-$3448 DB_DATA 1
RANGE $3448-$3449 DB_DATA 1
RANGE $3449-$344B DB_DATA 2
RANGE $344B-$344D DB_DATA 2
RANGE $344D-$344F DB_DATA 2
RANGE $344F-$3451 DB_DATA 2
RANGE $3451-$3452 DB_DATA 1
RANGE $3452-$3454 DW_DATA 1
RANGE $3454-$3455 DB_DATA 1
RANGE $3455-$3457 DW_DATA 1
RANGE $3457-$3458 DB_DATA 1
RANGE $3458-$345A DW_DATA 1
RANGE $345A-$345B DB_DATA 1
RANGE $345B-$345C DB_DATA 1
RANGE $345C-$345D DB_DATA 1
RANGE $345D-$345E DB_DATA 1
RANGE $345E-$345F DB_DATA 1
RANGE $345F-$3460 DB_DATA 1
RANGE $3460-$3461 DB_DATA 1
RANGE $3461-$3462 DB_DATA 1
RANGE $3462-$3463 DB_DATA 1
RANGE $3463-$3465 DB_DATA 2
RANGE $3465-$3467 DB_DATA 2
RANGE $3467-$3469 DB_DATA 2
RANGE $3469-$346B DB_DATA 2
RANGE $346B-$346C DB_DATA 1
RANGE $346C-$346E DW_DATA 1
RANGE $346E-$346F DB_DATA 1
RANGE $346F-$3471 DW_DATA 1
RANGE $3471-$3472 DB_DATA 1
RANGE $3472-$3474 DW_DATA 1
RANGE $3474-$3475 DB_DATA 1
RANGE $3475-$3476 DB_DATA 1
RANGE $3476-$3477 DB_DATA 1
RANGE $3477-$3478 DB_DATA 1
RANGE $3478-$3479 DB_DATA 1
RANGE $3479-$347A DB_DATA 1
RANGE $347A-$347B DB_DATA 1
RANGE $347B-$347C DB_DATA 1
RANGE $347C-$347D DB_DATA 1
RANGE $347D-$347F DB_DATA 2
RANGE $347F-$3481 DB_DATA 2
RANGE $3481-$3483 DB_DATA 2
RANGE $3483-$3485 DB_DATA 2
RANGE $3485-$3486 DB_DATA 1
RANGE $3486-$3488 DW_DATA 1
RANGE $3488-$3489 DB_DATA 1
RANGE $3489-$348B DW_DATA 1
RANGE $348B-$348C DB_DATA 1
RANGE $348C-$348E DW_DATA 1
RANGE $348E-$348F DB_DATA 1
RANGE $348F-$3490 DB_DATA 1
RANGE $3490-$3491 DB_DATA 1
RANGE $3491-$3492 DB_DATA 1
RANGE $3492-$3493 DB_DATA 1
RANGE $3493-$3494 DB_DATA 1
RANGE $3494-$3495 DB_DATA 1
RANGE $3495-$3496 DB_DATA 1
RANGE $3496-$3497 DB_DATA 1
RANGE $3497-$3499 DB_DATA 2
RANGE $3499-$349B DB_DATA 2
RANGE $349B-$349D DB_DATA 2
RANGE $349D-$349F DB_DATA 2
RANGE $349F-$34A0 DB_DATA 1
RANGE $34A0-$34A2 DW_DATA 1
RANGE $34A2-$34A3 DB_DATA 1
RANGE $34A3-$34A5 DW_DATA 1
RANGE $34A5-$34A6 DB_DATA 1
RANGE $34A6-$34A8 DW_DATA 1
RANGE $34A8-$34A9 DB_DATA 1
RANGE $34A9-$34AA DB_DATA 1
RANGE $34AA-$34AB DB_DATA 1
RANGE $34AB-$34AC DB_DATA 1
RANGE $34AC-$34AD DB_DATA 1
RANGE $34AD-$34AE DB_DATA 1
RANGE $34AE-$34AF DB_DATA 1
RANGE $34AF-$34B0 DB_DATA 1
RANGE $34B0-$34B1 DB_DATA 1
RANGE $34B1-$34B3 DB_DATA 2
RANGE $34B3-$34B5 DB_DATA 2
RANGE $34B5-$34B7 DB_DATA 2
RANGE $34B7-$34B9 DB_DATA 2
RANGE $34B9-$34BA DB_DATA 1
RANGE $34BA-$34BC DW_DATA 1
RANGE $34BC-$34BD DB_DATA 1
RANGE $34BD-$34BF DW_DATA 1
RANGE $34BF-$34C0 DB_DATA 1
RANGE $34C0-$34C2 DW_DATA 1
RANGE $34C2-$34C3 DB_DATA 1
RANGE $34C3-$34C4 DB_DATA 1
RANGE $34C4-$34C5 DB_DATA 1
RANGE $34C5-$34C6 DB_DATA 1
RANGE $34C6-$34C7 DB_DATA 1
RANGE $34C7-$34C8 DB_DATA 1
RANGE $34C8-$34C9 DB_DATA 1
RANGE $34C9-$34CA DB_DATA 1
RANGE $34CA-$34CB DB_DATA 1
RANGE $34CB-$34CD DB_DATA 2
RANGE $34CD-$34CF DB_DATA 2
RANGE $34CF-$34D1 DB_DATA 2
RANGE $34D1-$34D3 DB_DATA 2
RANGE $34D3-$34D4 DB_DATA 1
RANGE $34D4-$34D6 DW_DATA 1
RANGE $34D6-$34D7 DB_DATA 1
RANGE $34D7-$34D9 DW_DATA 1
RANGE $34D9-$34DA DB_DATA 1
RANGE $34DA-$34DC DW_DATA 1
RANGE $34DC-$34DD DB_DATA 1
RANGE $34DD-$34DE DB_DATA 1
RANGE $34DE-$34DF DB_DATA 1
RANGE $34DF-$34E0 DB_DATA 1
RANGE $34E0-$34E1 DB_DATA 1
RANGE $34E1-$34E2 DB_DATA 1
RANGE $34E2-$34E3 DB_DATA 1
RANGE $34E3-$34E4 DB_DATA 1
RANGE $34E4-$34E5 DB_DATA 1
RANGE $34E5-$34E7 DB_DATA 2
RANGE $34E7-$34E9 DB_DATA 2
RANGE $34E9-$34EB DB_DATA 2
RANGE $34EB-$34ED DB_DATA 2
RANGE $34ED-$34EE DB_DATA 1
RANGE $34EE-$34F0 DW_DATA 1
RANGE $34F0-$34F1 DB_DATA 1
RANGE $34F1-$34F3 DW_DATA 1
RANGE $34F3-$34F4 DB_DATA 1
RANGE $34F4-$34F6 DW_DATA 1
RANGE $34F6-$34F7 DB_DATA 1
RANGE $34F7-$34F8 DB_DATA 1
RANGE $34F8-$34F9 DB_DATA 1
RANGE $34F9-$34FA DB_DATA 1
RANGE $34FA-$34FB DB_DATA 1
RANGE $34FB-$34FC DB_DATA 1
RANGE $34FC-$34FD DB_DATA 1
RANGE $34FD-$34FE DB_DATA 1
RANGE $34FE-$34FF DB_DATA 1
RANGE $34FF-$3501 DB_DATA 2
RANGE $3501-$3503 DB_DATA 2
RANGE $3503-$3505 DB_DATA 2
RANGE $3505-$3507 DB_DATA 2
RANGE $3507-$3508 DB_DATA 1
RANGE $3508-$350A DW_DATA 1
RANGE $350A-$350B DB_DATA 1
RANGE $350B-$350D DW_DATA 1
RANGE $350D-$350E DB_DATA 1
RANGE $350E-$3510 DW_DATA 1
RANGE $3510-$3511 DB_DATA 1
RANGE $3511-$3512 DB_DATA 1
RANGE $3512-$3513 DB_DATA 1
RANGE $3513-$3514 DB_DATA 1
RANGE $3514-$3515 DB_DATA 1
RANGE $3515-$3516 DB_DATA 1
RANGE $3516-$3517 DB_DATA 1
RANGE $3517-$3518 DB_DATA 1
RANGE $3518-$3519 DB_DATA 1
RANGE $3519-$351B DB_DATA 2
RANGE $351B-$351D DB_DATA 2
RANGE $351D-$351F DB_DATA 2
RANGE $351F-$3521 DB_DATA 2
RANGE $3521-$3522 DB_DATA 1
RANGE $3522-$3524 DW_DATA 1
RANGE $3524-$3525 DB_DATA 1
RANGE $3525-$3527 DW_DATA 1
RANGE $3527-$3528 DB_DATA 1
RANGE $3528-$352A DW_DATA 1
RANGE $352A-$352B DB_DATA 1
RANGE $352B-$352C DB_DATA 1
RANGE $352C-$352D DB_DATA 1
RANGE $352D-$352E DB_DATA 1
RANGE $352E-$352F DB_DATA 1
RANGE $352F-$3530 DB_DATA 1
RANGE $3530-$3531 DB_DATA 1
RANGE $3531-$3532 DB_DATA 1
RANGE $3532-$3533 DB_DATA 1
RANGE $3533-$3535 DB_DATA 2
RANGE $3535-$3537 DB_DATA 2
RANGE $3537-$3539 DB_DATA 2
RANGE $3539-$353B DB_DATA 2
RANGE $353B-$353C DB_DATA 1
RANGE $353C-$353E DW_DATA 1
RANGE $353E-$353F DB_DATA 1
RANGE $353F-$3541 DW_DATA 1
RANGE $3541-$3542 DB_DATA 1
RANGE $3542-$3544 DW_DATA 1
RANGE $3544-$3545 DB_DATA 1
RANGE $3545-$3546 DB_DATA 1
RANGE $3546-$3547 DB_DATA 1
RANGE $3547-$3548 DB_DATA 1
RANGE $3548-$3549 DB_DATA 1
RANGE $3549-$354A DB_DATA 1
RANGE $354A-$354B DB_DATA 1
RANGE $354B-$354C DB_DATA 1
RANGE $354C-$354D DB_DATA 1
RANGE $354D-$354F DB_DATA 2
RANGE $354F-$3551 DB_DATA 2
RANGE $3551-$3553 DB_DATA 2
RANGE $3553-$3555 DB_DATA 2
RANGE $3555-$3556 DB_DATA 1
RANGE $3556-$3558 DW_DATA 1
RANGE $3558-$3559 DB_DATA 1
RANGE $3559-$355B DW_DATA 1
RANGE $355B-$355C DB_DATA 1
RANGE $355C-$355E DW_DATA 1
RANGE $355E-$355F DB_DATA 1
RANGE $355F-$3560 DB_DATA 1
RANGE $3560-$3561 DB_DATA 1
RANGE $3561-$3562 DB_DATA 1
RANGE $3562-$3563 DB_DATA 1
RANGE $3563-$3564 DB_DATA 1
RANGE $3564-$3565 DB_DATA 1
RANGE $3565-$3566 DB_DATA 1
RANGE $3566-$3567 DB_DATA 1
RANGE $3567-$3569 DB_DATA 2
RANGE $3569-$356B DB_DATA 2
RANGE $356B-$356D DB_DATA 2
RANGE $356D-$356F DB_DATA 2
RANGE $356F-$3570 DB_DATA 1
RANGE $3570-$3572 DW_DATA 1
RANGE $3572-$3573 DB_DATA 1
RANGE $3573-$3575 DW_DATA 1
RANGE $3575-$3576 DB_DATA 1
RANGE $3576-$3578 DW_DATA 1
RANGE $3578-$3579 DB_DATA 1
RANGE $3579-$357A DB_DATA 1
RANGE $357A-$357B DB_DATA 1
RANGE $357B-$357C DB_DATA 1
RANGE $357C-$357D DB_DATA 1
RANGE $357D-$357E DB_DATA 1
RANGE $357E-$357F DB_DATA 1
RANGE $357F-$3580 DB_DATA 1
RANGE $3580-$3581 DB_DATA 1
RANGE $3581-$3583 DB_DATA 2
RANGE $3583-$3585 DB_DATA 2
RANGE $3585-$3587 DB_DATA 2
RANGE $3587-$3589 DB_DATA 2
RANGE $3589-$358A DB_DATA 1
RANGE $358A-$358C DW_DATA 1
RANGE $358C-$358D DB_DATA 1
RANGE $358D-$358F DW_DATA 1
RANGE $358F-$3590 DB_DATA 1
RANGE $3590-$3592 DW_DATA 1
RANGE $3592-$3593 DB_DATA 1
RANGE $3593-$3594 DB_DATA 1
RANGE $3594-$3595 DB_DATA 1
RANGE $3595-$3596 DB_DATA 1
RANGE $3596-$3597 DB_DATA 1
RANGE $3597-$3598 DB_DATA 1
RANGE $3598-$3599 DB_DATA 1
RANGE $3599-$359A DB_DATA 1
RANGE $359A-$359B DB_DATA 1
RANGE $359B-$359D DB_DATA 2
RANGE $359D-$359F DB_DATA 2
RANGE $359F-$35A1 DB_DATA 2
RANGE $35A1-$35A3 DB_DATA 2
RANGE $35A3-$35A4 DB_DATA 1
RANGE $35A4-$35A6 DW_DATA 1
RANGE $35A6-$35A7 DB_DATA 1
RANGE $35A7-$35A9 DW_DATA 1
RANGE $35A9-$35AA DB_DATA 1
RANGE $35AA-$35AC DW_DATA 1
RANGE $35AC-$35AD DB_DATA 1
RANGE $35AD-$35AE DB_DATA 1
RANGE $35AE-$35AF DB_DATA 1
RANGE $35AF-$35B0 DB_DATA 1
RANGE $35B0-$35B1 DB_DATA 1
RANGE $35B1-$35B2 DB_DATA 1
RANGE $35B2-$35B3 DB_DATA 1
RANGE $35B3-$35B4 DB_DATA 1
RANGE $35B4-$35B5 DB_DATA 1
RANGE $35B5-$35B7 DB_DATA 2
RANGE $35B7-$35B9 DB_DATA 2
RANGE $35B9-$35BB DB_DATA 2
RANGE $35BB-$35BD DB_DATA 2
RANGE $35BD-$35BE DB_DATA 1
RANGE $35BE-$35C0 DW_DATA 1
RANGE $35C0-$35C1 DB_DATA 1
RANGE $35C1-$35C3 DW_DATA 1
RANGE $35C3-$35C4 DB_DATA 1
RANGE $35C4-$35C6 DW_DATA 1
RANGE $35C6-$35C7 DB_DATA 1
RANGE $35C7-$35C8 DB_DATA 1
RANGE $35C8-$35C9 DB_DATA 1
RANGE $35C9-$35CA DB_DATA 1
RANGE $35CA-$35CB DB_DATA 1
RANGE $35CB-$35CC DB_DATA 1
RANGE $35CC-$35CD DB_DATA 1
RANGE $35CD-$35CE DB_DATA 1
RANGE $35CE-$35CF DB_DATA 1
RANGE $35CF-$35D1 DB_DATA 2
RANGE $35D1-$35D3 DB_DATA 2
RANGE $35D3-$35D5 DB_DATA 2
RANGE $35D5-$35D7 DB_DATA 2
RANGE $35D7-$35D8 DB_DATA 1
RANGE $35D8-$35DA DW_DATA 1
RANGE $35DA-$35DB DB_DATA 1
RANGE $35DB-$35DD DW_DATA 1
RANGE $35DD-$35DE DB_DATA 1
RANGE $35DE-$35E0 DW_DATA 1
RANGE $35E0-$35E1 DB_DATA 1
RANGE $35E1-$35E2 DB_DATA 1
RANGE $35E2-$35E3 DB_DATA 1
RANGE $35E3-$35E4 DB_DATA 1
RANGE $35E4-$35E5 DB_DATA 1
RANGE $35E5-$35E6 DB_DATA 1
RANGE $35E6-$35E7 DB_DATA 1
RANGE $35E7-$35E8 DB_DATA 1
RANGE $35E8-$35E9 DB_DATA 1
RANGE $35E9-$35EB DB_DATA 2
RANGE $35EB-$35ED DB_DATA 2
RANGE $35ED-$35EF DB_DATA 2
RANGE $35EF-$35F1 DB_DATA 2
RANGE $35F1-$35F2 DB_DATA 1
RANGE $35F2-$35F4 DW_DATA 1
RANGE $35F4-$35F5 DB_DATA 1
RANGE $35F5-$35F7 DW_DATA 1
RANGE $35F7-$35F8 DB_DATA 1
RANGE $35F8-$35FA DW_DATA 1
RANGE $35FA-$35FB DB_DATA 1
RANGE $35FB-$35FC DB_DATA 1
RANGE $35FC-$35FD DB_DATA 1
RANGE $35FD-$35FE DB_DATA 1
RANGE $35FE-$35FF DB_DATA 1
RANGE $35FF-$3600 DB_DATA 1
RANGE $3600-$3601 DB_DATA 1
RANGE $3601-$3602 DB_DATA 1
RANGE $3602-$3603 DB_DATA 1
RANGE $3603-$3605 DB_DATA 2
RANGE $3605-$3607 DB_DATA 2
RANGE $3607-$3609 DB_DATA 2
RANGE $3609-$360B DB_DATA 2
RANGE $360B-$360C DB_DATA 1
RANGE $360C-$360E DW_DATA 1
RANGE $360E-$360F DB_DATA 1
RANGE $360F-$3611 DW_DATA 1
RANGE $3611-$3612 DB_DATA 1
RANGE $3612-$3614 DW_DATA 1
RANGE $3614-$3615 DB_DATA 1
RANGE $3615-$3616 DB_DATA 1
RANGE $3616-$3617 DB_DATA 1
RANGE $3617-$3618 DB_DATA 1
RANGE $3618-$3619 DB_DATA 1
RANGE $3619-$361A DB_DATA 1
RANGE $361A-$361B DB_DATA 1
RANGE $361B-$361C DB_DATA 1
RANGE $361C-$361D DB_DATA 1
RANGE $361D-$361F DB_DATA 2
RANGE $361F-$3621 DB_DATA 2
RANGE $3621-$3623 DB_DATA 2
RANGE $3623-$3625 DB_DATA 2
RANGE $3625-$3626 DB_DATA 1
RANGE $3626-$3628 DW_DATA 1
RANGE $3628-$3629 DB_DATA 1
RANGE $3629-$362B DW_DATA 1
RANGE $362B-$362C DB_DATA 1
RANGE $362C-$362E DW_DATA 1
RANGE $362E-$362F DB_DATA 1
RANGE $362F-$3630 DB_DATA 1
RANGE $3630-$3631 DB_DATA 1
RANGE $3631-$3632 DB_DATA 1
RANGE $3632-$3633 DB_DATA 1
RANGE $3633-$3634 DB_DATA 1
RANGE $3634-$3635 DB_DATA 1
RANGE $3635-$3636 DB_DATA 1
RANGE $3636-$3637 DB_DATA 1
RANGE $3637-$3639 DB_DATA 2
RANGE $3639-$363B DB_DATA 2
RANGE $363B-$363D DB_DATA 2
RANGE $363D-$363F DB_DATA 2
RANGE $363F-$3640 DB_DATA 1
RANGE $3640-$3642 DW_DATA 1
RANGE $3642-$3643 DB_DATA 1
RANGE $3643-$3645 DW_DATA 1
RANGE $3645-$3646 DB_DATA 1
RANGE $3646-$3648 DW_DATA 1
RANGE $3648-$364A DW_DATA 1
RANGE $364A-$364C DW_DATA 1
RANGE $364C-$364E DW_DATA 1
RANGE $364E-$3650 DW_DATA 1
RANGE $3650-$3652 DW_DATA 1
RANGE $3652-$3654 DW_DATA 1
RANGE $3654-$3656 DW_DATA 1
RANGE $3656-$3658 DW_DATA 1
RANGE $3658-$365A DW_DATA 1
RANGE $365A-$365C DW_DATA 1
RANGE $365C-$365E DW_DATA 1
RANGE $365E-$3660 DW_DATA 1
RANGE $3660-$3662 DW_DATA 1
RANGE $3662-$3664 DW_DATA 1
RANGE $3664-$3666 DW_DATA 1
RANGE $3666-$3668 DW_DATA 1
RANGE $3668-$366A DW_DATA 1
RANGE $366A-$366C DW_DATA 1
RANGE $366C-$366E DW_DATA 1
RANGE $366E-$3670 DW_DATA 1
RANGE $3670-$3672 DW_DATA 1
RANGE $3672-$3674 DW_DATA 1
RANGE $3674-$3676 DW_DATA 1
RANGE $3676-$3678 DW_DATA 1
RANGE $3678-$367A DW_DATA 1
RANGE $367A-$367C DW_DATA 1
RANGE $367C-$367E DW_DATA 1
RANGE $367E-$3680 DW_DATA 1
RANGE $3680-$3682 DW_DATA 1
RANGE $3682-$3684 DW_DATA 1
RANGE $3684-$3686 DW_DATA 1
RANGE $3686-$3688 DW_DATA 1
RANGE $3688-$368A DW_DATA 1
RANGE $368A-$368C DW_DATA 1
RANGE $368C-$368E DW_DATA 1
RANGE $368E-$3690 DW_DATA 1
RANGE $3690-$3692 DW_DATA 1
RANGE $3692-$3694 DW_DATA 1
RANGE $3694-$3696 DW_DATA 1
RANGE $3696-$3698 DW_DATA 1
RANGE $3698-$369A DW_DATA 1
RANGE $369A-$369C DW_DATA 1
RANGE $369C-$369E DW_DATA 1
RANGE $369E-$36A0 DW_DATA 1
RANGE $36A0-$36A2 DW_DATA 1
RANGE $36A2-$36A4 DW_DATA 1
RANGE $36A4-$36A6 DW_DATA 1
RANGE $36A6-$36A8 DW_DATA 1
RANGE $36A8-$36AA DW_DATA 1
RANGE $36AA-$36AC DW_DATA 1
RANGE $36AC-$36AE DW_DATA 1
RANGE $36AE-$36B0 DW_DATA 1
RANGE $36B0-$36B2 DW_DATA 1
RANGE $36B2-$36B4 DW_DATA 1
RANGE $36B4-$36B6 DW_DATA 1
RANGE $36B6-$36B8 DW_DATA 1
RANGE $36B8-$36BA DW_DATA 1
RANGE $36BA-$36BC DW_DATA 1
RANGE $36BC-$36BE DW_DATA 1
RANGE $36BE-$36C0 DW_DATA 1
RANGE $36C0-$36C2 DW_DATA 1
RANGE $36C2-$36C4 DW_DATA 1
RANGE $36C4-$36C6 DW_DATA 1
RANGE $36C6-$36C8 DW_DATA 1
RANGE $36C8-$36CA DW_DATA 1
RANGE $36CA-$36CC DW_DATA 1
RANGE $36CC-$36CE DW_DATA 1
RANGE $36CE-$36D0 DW_DATA 1
RANGE $36D0-$36D2 DW_DATA 1
RANGE $36D2-$36D4 DW_DATA 1
RANGE $36D4-$36D6 DW_DATA 1
RANGE $36D6-$36D8 DW_DATA 1
RANGE $36D8-$36DA DW_DATA 1
RANGE $36DA-$36DC DW_DATA 1
RANGE $36DC-$36DE DW_DATA 1
RANGE $36DE-$36E0 DW_DATA 1
RANGE $36E0-$36E2 DW_DATA 1
RANGE $36E2-$36E4 DW_DATA 1
RANGE $36E4-$36E6 DW_DATA 1
RANGE $36E6-$36E8 DW_DATA 1
RANGE $36E8-$36EA DW_DATA 1
RANGE $36EA-$36EC DW_DATA 1
RANGE $36EC-$36EE DW_DATA 1
RANGE $36EE-$36F0 DW_DATA 1
RANGE $36F0-$36F2 DW_DATA 1
RANGE $36F2-$36F4 DW_DATA 1
RANGE $36F4-$36F6 DW_DATA 1
RANGE $36F6-$36F8 DW_DATA 1
RANGE $36F8-$36FA DW_DATA 1
RANGE $36FA-$36FC DW_DATA 1
RANGE $36FC-$36FE DW_DATA 1
RANGE $36FE-$3700 DW_DATA 1
RANGE $3700-$3702 DW_DATA 1
RANGE $3702-$3704 DW_DATA 1
RANGE $3704-$3706 DW_DATA 1
RANGE $3706-$3708 DW_DATA 1
RANGE $3708-$370A DW_DATA 1
RANGE $370A-$370C DW_DATA 1
RANGE $370C-$370E DW_DATA 1
RANGE $370E-$3710 DW_DATA 1
RANGE $3710-$3712 DW_DATA 1
RANGE $3712-$3714 DW_DATA 1
RANGE $3714-$3716 DW_DATA 1
RANGE $3716-$3718 DW_DATA 1
RANGE $3718-$371A DW_DATA 1
RANGE $371A-$371C DW_DATA 1
RANGE $371C-$371E DW_DATA 1
RANGE $371E-$3720 DW_DATA 1
RANGE $3720-$3722 DW_DATA 1
RANGE $3722-$3724 DW_DATA 1
RANGE $3724-$3726 DW_DATA 1
RANGE $3726-$3728 DW_DATA 1
RANGE $3728-$372A DW_DATA 1
RANGE $372A-$372C DW_DATA 1
RANGE $372C-$372E DW_DATA 1
RANGE $372E-$3730 DW_DATA 1
RANGE $3730-$3732 DW_DATA 1
RANGE $3732-$3734 DW_DATA 1
RANGE $3734-$3736 DW_DATA 1
RANGE $3736-$3738 DW_DATA 1
RANGE $3738-$373A DW_DATA 1
RANGE $373A-$373C DW_DATA 1
RANGE $373C-$373E DW_DATA 1
RANGE $373E-$3740 DW_DATA 1
RANGE $3740-$3742 DW_DATA 1
RANGE $3742-$3744 DW_DATA 1
RANGE $3744-$3746 DW_DATA 1
RANGE $3746-$3748 DW_DATA 1
RANGE $3748-$374A DW_DATA 1
RANGE $374A-$374C DW_DATA 1
RANGE $374C-$374E DW_DATA 1
RANGE $374E-$3750 DW_DATA 1
RANGE $3750-$3752 DW_DATA 1
RANGE $3752-$3754 DW_DATA 1
RANGE $3754-$3756 DW_DATA 1
RANGE $3756-$3758 DW_DATA 1
RANGE $3758-$375A DW_DATA 1
RANGE $375A-$375C DW_DATA 1
RANGE $375C-$375E DW_DATA 1
RANGE $375E-$3760 DW_DATA 1
RANGE $3760-$3762 DW_DATA 1
RANGE $3762-$3764 DW_DATA 1
RANGE $3764-$3766 DW_DATA 1
RANGE $3766-$3768 DW_DATA 1
RANGE $3768-$376A DW_DATA 1
RANGE $376A-$376C DW_DATA 1
RANGE $376C-$376E DW_DATA 1
RANGE $376E-$3770 DW_DATA 1
RANGE $3770-$3772 DW_DATA 1
RANGE $3772-$3774 DW_DATA 1
RANGE $3774-$3776 DW_DATA 1
RANGE $3776-$3778 DW_DATA 1
RANGE $3778-$377A DW_DATA 1
RANGE $377A-$377C DW_DATA 1
RANGE $377C-$377E DW_DATA 1
RANGE $377E-$3780 DW_DATA 1
RANGE $3780-$3782 DW_DATA 1
RANGE $3782-$3784 DW_DATA 1
RANGE $3784-$3786 DW_DATA 1
RANGE $3786-$3788 DW_DATA 1
RANGE $3788-$378A DW_DATA 1
RANGE $378A-$378C DW_DATA 1
RANGE $378C-$378E DW_DATA 1
RANGE $378E-$3790 DW_DATA 1
RANGE $3790-$3792 DW_DATA 1
RANGE $3792-$3794 DW_DATA 1
RANGE $3794-$3796 DW_DATA 1
RANGE $3796-$3798 DW_DATA 1
RANGE $3798-$379A DW_DATA 1
RANGE $379A-$379C DW_DATA 1
RANGE $379C-$379E DW_DATA 1
RANGE $379E-$37A0 DW_DATA 1
RANGE $37A0-$37A2 DW_DATA 1
RANGE $37A2-$37A4 DW_DATA 1
RANGE $37A4-$37A6 DW_DATA 1
RANGE $37A6-$37A8 DW_DATA 1
RANGE $37A8-$37AA DW_DATA 1
RANGE $37AA-$37AC DW_DATA 1
RANGE $37AC-$37AE DW_DATA 1
RANGE $37AE-$37B0 DW_DATA 1
RANGE $37B0-$37B2 DW_DATA 1
RANGE $37B2-$37B4 DW_DATA 1
RANGE $37B4-$37B6 DW_DATA 1
RANGE $37B6-$37B8 DW_DATA 1
RANGE $37B8-$37BA DW_DATA 1
RANGE $37BA-$37BC DW_DATA 1
RANGE $37BC-$37BE DW_DATA 1
RANGE $37BE-$37C0 DW_DATA 1
RANGE $37C0-$37C2 DW_DATA 1
RANGE $37C2-$37C4 DW_DATA 1
RANGE $37C4-$37C6 DW_DATA 1
RANGE $37C6-$37C8 DW_DATA 1
RANGE $37C8-$37CA DW_DATA 1
RANGE $37CA-$37CC DW_DATA 1
RANGE $37CC-$37CE DW_DATA 1
RANGE $37CE-$37D0 DW_DATA 1
RANGE $37D0-$37D2 DW_DATA 1
RANGE $37D2-$37D4 DW_DATA 1
RANGE $37D4-$37D6 DW_DATA 1
RANGE $37D6-$37D8 DW_DATA 1
RANGE $37D8-$37DA DW_DATA 1
RANGE $37DA-$37DC DW_DATA 1
RANGE $37DC-$37DE DW_DATA 1
RANGE $37DE-$37E0 DW_DATA 1
RANGE $37E0-$37E2 DW_DATA 1
RANGE $37E2-$37E4 DW_DATA 1
RANGE $37E4-$37E6 DW_DATA 1
RANGE $37E6-$37E8 DW_DATA 1
RANGE $37E8-$37EA DW_DATA 1
RANGE $37EA-$37EC DW_DATA 1
RANGE $37EC-$37EE DW_DATA 1
RANGE $37EE-$37F0 DW_DATA 1
RANGE $37F0-$37F2 DW_DATA 1
RANGE $37F2-$37F4 DW_DATA 1
RANGE $37F4-$37F6 DW_DATA 1
RANGE $37F6-$37F8 DW_DATA 1
RANGE $37F8-$37FA DW_DATA 1
RANGE $37FA-$37FC DW_DATA 1
RANGE $37FC-$37FE DW_DATA 1
RANGE $37FE-$3800 DW_DATA 1
RANGE $3800-$3802 DW_DATA 1
RANGE $3802-$3804 DW_DATA 1
RANGE $3804-$3806 DW_DATA 1
RANGE $3806-$3808 DW_DATA 1
RANGE $3808-$380A DW_DATA 1
RANGE $380A-$380C DW_DATA 1
RANGE $380C-$380E DW_DATA 1
RANGE $380E-$3810 DW_DATA 1
RANGE $3810-$3812 DW_DATA 1
RANGE $3812-$3814 DW_DATA 1
RANGE $3814-$3816 DW_DATA 1
RANGE $3816-$3818 DW_DATA 1
RANGE $3818-$381A DW_DATA 1
RANGE $381A-$381C DW_DATA 1
RANGE $381C-$381E DW_DATA 1
RANGE $381E-$3820 DW_DATA 1
RANGE $3820-$3822 DW_DATA 1
RANGE $3822-$3824 DW_DATA 1
RANGE $3824-$3826 DW_DATA 1
RANGE $3826-$3828 DW_DATA 1
RANGE $3828-$382A DW_DATA 1
RANGE $382A-$382C DW_DATA 1
RANGE $382C-$382E DW_DATA 1
RANGE $382E-$3830 DW_DATA 1
RANGE $3830-$3832 DW_DATA 1
RANGE $3832-$3834 DW_DATA 1
RANGE $3834-$3836 DW_DATA 1
RANGE $3836-$3838 DW_DATA 1
RANGE $3838-$383A DW_DATA 1
RANGE $383A-$383C DW_DATA 1
RANGE $383C-$383E DW_DATA 1
RANGE $383E-$3840 DW_DATA 1
RANGE $3840-$3842 DW_DATA 1
RANGE $3842-$3844 DW_DATA 1
RANGE $3844-$3846 DW_DATA 1
RANGE $3846-$3848 DW_DATA 1
RANGE $3848-$384A DW_DATA 1
RANGE $384A-$384C DW_DATA 1
RANGE $384C-$384E DW_DATA 1
RANGE $384E-$3850 DW_DATA 1
RANGE $3850-$3852 DW_DATA 1
RANGE $3852-$3854 DW_DATA 1
RANGE $3854-$3856 DW_DATA 1
RANGE $3856-$3858 DW_DATA 1
RANGE $3858-$385A DW_DATA 1
RANGE $385A-$385C DW_DATA 1
RANGE $385C-$385E DW_DATA 1
RANGE $385E-$3860 DW_DATA 1
RANGE $3860-$3862 DW_DATA 1
RANGE $3862-$3864 DW_DATA 1
RANGE $3864-$3866 DW_DATA 1
RANGE $3866-$3868 DW_DATA 1
RANGE $3868-$386A DW_DATA 1
RANGE $386A-$386C DW_DATA 1
RANGE $386C-$386E DW_DATA 1
RANGE $386E-$3870 DW_DATA 1
RANGE $3870-$3872 DW_DATA 1
RANGE $3872-$3874 DW_DATA 1
RANGE $3874-$3876 DW_DATA 1
RANGE $3876-$3878 DW_DATA 1
RANGE $3878-$387A DW_DATA 1
RANGE $387A-$387C DW_DATA 1
RANGE $387C-$387E DW_DATA 1
RANGE $387E-$3880 DW_DATA 1
RANGE $3880-$3882 DW_DATA 1
RANGE $3882-$3884 DW_DATA 1
RANGE $3884-$3886 DW_DATA 1
RANGE $3886-$3888 DW_DATA 1
RANGE $3888-$388A DW_DATA 1
RANGE $388A-$388C DW_DATA 1
RANGE $388C-$388E DW_DATA 1
RANGE $388E-$3890 DW_DATA 1
RANGE $3890-$3892 DW_DATA 1
RANGE $3892-$3894 DW_DATA 1
RANGE $3894-$3896 DW_DATA 1
RANGE $3896-$3898 DW_DATA 1
RANGE $3898-$389A DW_DATA 1
RANGE $389A-$389C DW_DATA 1
RANGE $389C-$389E DW_DATA 1
RANGE $389E-$38A0 DW_DATA 1
RANGE $38A0-$38A2 DW_DATA 1
RANGE $38A2-$38A4 DW_DATA 1
RANGE $38A4-$38A6 DW_DATA 1
RANGE $38A6-$38A8 DW_DATA 1
RANGE $38A8-$38AA DW_DATA 1
RANGE $38AA-$38AC DW_DATA 1
RANGE $38AC-$38AE DW_DATA 1
RANGE $38AE-$38B0 DW_DATA 1
RANGE $38B0-$38B2 DW_DATA 1
RANGE $38B2-$38B4 DW_DATA 1
RANGE $38B4-$38B6 DW_DATA 1
RANGE $38B6-$38B8 DW_DATA 1
RANGE $38B8-$38BA DW_DATA 1
RANGE $38BA-$38BC DW_DATA 1
RANGE $38BC-$38BE DW_DATA 1
RANGE $38BE-$38C0 DW_DATA 1
RANGE $38C0-$38C2 DW_DATA 1
RANGE $38C2-$38C4 DW_DATA 1
RANGE $38C4-$38C6 DW_DATA 1
RANGE $38C6-$38C8 DW_DATA 1
RANGE $38C8-$38CA DW_DATA 1
RANGE $38CA-$38CC DW_DATA 1
RANGE $38CC-$38CE DW_DATA 1
RANGE $38CE-$38D0 DW_DATA 1
RANGE $38D0-$38D2 DW_DATA 1
RANGE $38D2-$38D4 DW_DATA 1
RANGE $38D4-$38D6 DW_DATA 1
RANGE $38D6-$38D8 DW_DATA 1
RANGE $38D8-$38DA DW_DATA 1
RANGE $38DA-$38DC DW_DATA 1
RANGE $38DC-$38DE DW_DATA 1
RANGE $38DE-$38E0 DW_DATA 1
RANGE $38E0-$38E2 DW_DATA 1
RANGE $38E2-$38E4 DW_DATA 1
RANGE $38E4-$38E6 DW_DATA 1
RANGE $38E6-$38E8 DW_DATA 1
RANGE $38E8-$38EA DW_DATA 1
RANGE $38EA-$38EC DW_DATA 1
RANGE $38EC-$38EE DW_DATA 1
RANGE $38EE-$3B5B CODE
RANGE $3B5B-$3B5D DW_DATA 1
RANGE $3B5D-$3B5F DW_DATA 1
RANGE $3B5F-$3B61 DW_DATA 1
RANGE $3B61-$3B63 DW_DATA 1
RANGE $3B63-$3B65 DW_DATA 1
RANGE $3B65-$3B67 DW_DATA 1
RANGE $3B67-$3B69 DW_DATA 1
RANGE $3B69-$3B6B DW_DATA 1
RANGE $3B6B-$3B6D DW_DATA 1
RANGE $3B6D-$3FD0 CODE
RANGE $3FD0-$3FD2 DW_DATA 1
RANGE $3FD2-$3FD4 DW_DATA 1
RANGE $3FD4-$3FD6 DW_DATA 1
RANGE $3FD6-$3FD8 DW_DATA 1
RANGE $3FD8-$3FDA DW_DATA 1
RANGE $3FDA-$3FDC DW_DATA 1
RANGE $3FDC-$3FDE DW_DATA 1
RANGE $3FDE-$3FE0 DW_DATA 1
RANGE $3FE0-$3FE2 DW_DATA 1
RANGE $3FE2-$3FE4 DW_DATA 1
RANGE $3FE4-$3FE6 DW_DATA 1
RANGE $3FE6-$3FE8 DW_DATA 1
RANGE $3FE8-$3FEA DW_DATA 1
RANGE $3FEA-$3FEC DW_DATA 1
RANGE $3FEC-$3FEE DW_DATA 1
RANGE $3FEE-$3FF0 DW_DATA 1
RANGE $3FF0-$3FF2 DW_DATA 1
RANGE $3FF2-$3FF4 DW_DATA 1
RANGE $3FF4-$3FF6 DW_DATA 1
RANGE $3FF6-$3FF8 DW_DATA 1
RANGE $3FF8-$3FFA DW_DATA 1
RANGE $3FFA-$3FFC DW_DATA 1
RANGE $3FFC-$3FFE DW_DATA 1
RANGE $3FFE-$4000 DW_DATA 1
RANGE $4000-$4002 DW_DATA 1
RANGE $4002-$4004 DW_DATA 1
RANGE $4004-$4006 DW_DATA 1
RANGE $4006-$4008 DW_DATA 1
RANGE $4008-$400A DW_DATA 1
RANGE $400A-$4014 DB_DATA 10
RANGE $4014-$401E DB_DATA 10
RANGE $401E-$402B DB_DATA 13
RANGE $402B-$4038 DB_DATA 13
RANGE $4038-$4045 DB_DATA 13
RANGE $4045-$4052 DB_DATA 13
RANGE $4052-$4060 DB_DATA 14
RANGE $4060-$406E DB_DATA 14
RANGE $406E-$407B DB_DATA 13
RANGE $407B-$4083 DB_DATA 8
RANGE $4083-$408A DB_DATA 7
RANGE $408A-$4095 DB_DATA 11
RANGE $4095-$40A3 DB_DATA 14
RANGE $40A3-$40B1 DB_DATA 14
RANGE $40B1-$40BC DB_DATA 11
RANGE $40BC-$40CA DB_DATA 14
RANGE $40CA-$40D6 DB_DATA 12
RANGE $40D6-$40E3 DB_DATA 13
RANGE $40E3-$40ED DB_DATA 10
RANGE $40ED-$40F9 DB_DATA 12
RANGE $40F9-$4199 CODE
RANGE $4199-$41C3 DB_DATA 42
RANGE $41C3-$41F1 DB_DATA 46
RANGE $41F1-$42DD CODE
RANGE $42DD-$42DF DB_DATA 2
RANGE $42DF-$42E1 DB_DATA 2
RANGE $42E1-$42E3 DB_DATA 2
RANGE $42E3-$42E5 DB_DATA 2
RANGE $42E5-$42E7 DB_DATA 2
RANGE $42E7-$42E9 DB_DATA 2
RANGE $42E9-$42EB DB_DATA 2
RANGE $42EB-$42ED DB_DATA 2
RANGE $42ED-$42EF DB_DATA 2
RANGE $42EF-$42F1 DB_DATA 2
RANGE $42F1-$42F3 DB_DATA 2
RANGE $42F3-$42F5 DB_DATA 2
RANGE $42F5-$42F7 DB_DATA 2
RANGE $42F7-$42F9 DB_DATA 2
RANGE $42F9-$42FB DB_DATA 2
RANGE $42FB-$42FD DB_DATA 2
RANGE $42FD-$42FF DB_DATA 2
RANGE $42FF-$4301 DB_DATA 2
RANGE $4301-$4303 DB_DATA 2
RANGE $4303-$4305 DB_DATA 2
RANGE $4305-$4307 DB_DATA 2
RANGE $4307-$4309 DB_DATA 2
RANGE $4309-$430B DB_DATA 2
RANGE $430B-$430D DB_DATA 2
RANGE $430D-$430F DB_DATA 2
RANGE $430F-$4311 DB_DATA 2
RANGE $4311-$4313 DB_DATA 2
RANGE $4313-$4315 DB_DATA 2
RANGE $4315-$4317 DB_DATA 2
RANGE $4317-$4319 DB_DATA 2
RANGE $4319-$431B DB_DATA 2
RANGE $431B-$431D DB_DATA 2
RANGE $431D-$431F DB_DATA 2
RANGE $431F-$4321 DB_DATA 2
RANGE $4321-$4323 DB_DATA 2
RANGE $4323-$4325 DB_DATA 2
RANGE $4325-$4327 DB_DATA 2
RANGE $4327-$4329 DB_DATA 2
RANGE $4329-$432B DB_DATA 2
RANGE $432B-$432D DB_DATA 2
RANGE $432D-$432F DB_DATA 2
RANGE $432F-$4331 DB_DATA 2
RANGE $4331-$4333 DB_DATA 2
RANGE $4333-$4335 DB_DATA 2
RANGE $4335-$4337 DB_DATA 2
RANGE $4337-$4339 DB_DATA 2
RANGE $4339-$433B DB_DATA 2
RANGE $433B-$433D DB_DATA 2
RANGE $433D-$433F DB_DATA 2
RANGE $433F-$4341 DB_DATA 2
RANGE $4341-$4343 DB_DATA 2
RANGE $4343-$4345 DB_DATA 2
RANGE $4345-$4347 DB_DATA 2
RANGE $4347-$4349 DB_DATA 2
RANGE $4349-$434B DB_DATA 2
RANGE $434B-$434D DB_DATA 2
RANGE $434D-$434F DB_DATA 2
RANGE $434F-$4351 DB_DATA 2
RANGE $4351-$4353 DB_DATA 2
RANGE $4353-$4355 DB_DATA 2
RANGE $4355-$4357 DB_DATA 2
RANGE $4357-$4359 DB_DATA 2
RANGE $4359-$435B DB_DATA 2
RANGE $435B-$435D DB_DATA 2
RANGE $435D-$435F DB_DATA 2
RANGE $435F-$4361 DB_DATA 2
RANGE $4361-$4363 DB_DATA 2
RANGE $4363-$4365 DB_DATA 2
RANGE $4365-$4367 DB_DATA 2
RANGE $4367-$4369 DB_DATA 2
RANGE $4369-$436B DB_DATA 2
RANGE $436B-$436D DB_DATA 2
RANGE $436D-$436F DB_DATA 2
RANGE $436F-$4371 DB_DATA 2
RANGE $4371-$4373 DB_DATA 2
RANGE $4373-$4375 DB_DATA 2
RANGE $4375-$4377 DB_DATA 2
RANGE $4377-$4379 DB_DATA 2
RANGE $4379-$437B DB_DATA 2
RANGE $437B-$437D DB_DATA 2
RANGE $437D-$437F DB_DATA 2
RANGE $437F-$4381 DB_DATA 2
RANGE $4381-$4383 DB_DATA 2
RANGE $4383-$4385 DB_DATA 2
RANGE $4385-$4387 DB_DATA 2
RANGE $4387-$4389 DB_DATA 2
RANGE $4389-$438B DB_DATA 2
RANGE $438B-$438D DB_DATA 2
RANGE $438D-$438F DB_DATA 2
RANGE $438F-$4391 DB_DATA 2
RANGE $4391-$4393 DB_DATA 2
RANGE $4393-$4395 DB_DATA 2
RANGE $4395-$4397 DB_DATA 2
RANGE $4397-$4399 DB_DATA 2
RANGE $4399-$439B DB_DATA 2
RANGE $439B-$439D DB_DATA 2
RANGE $439D-$439F DB_DATA 2
RANGE $439F-$43A1 DB_DATA 2
RANGE $43A1-$43A3 DB_DATA 2
RANGE $43A3-$43A5 DB_DATA 2
RANGE $43A5-$43A7 DB_DATA 2
RANGE $43A7-$43A9 DB_DATA 2
RANGE $43A9-$43AB DB_DATA 2
RANGE $43AB-$43AD DB_DATA 2
RANGE $43AD-$43AF DB_DATA 2
RANGE $43AF-$43B1 DB_DATA 2
RANGE $43B1-$43B3 DB_DATA 2
RANGE $43B3-$43B5 DB_DATA 2
RANGE $43B5-$43B7 DB_DATA 2
RANGE $43B7-$43B9 DB_DATA 2
RANGE $43B9-$43BB DB_DATA 2
RANGE $43BB-$43BD DB_DATA 2
RANGE $43BD-$43BF DB_DATA 2
RANGE $43BF-$43C1 DB_DATA 2
RANGE $43C1-$43C3 DB_DATA 2
RANGE $43C3-$43C5 DB_DATA 2
RANGE $43C5-$43C7 DB_DATA 2
RANGE $43C7-$43C9 DB_DATA 2
RANGE $43C9-$43CB DB_DATA 2
RANGE $43CB-$43CD DB_DATA 2
RANGE $43CD-$43CF DB_DATA 2
RANGE $43CF-$43D1 DB_DATA 2
RANGE $43D1-$43D3 DB_DATA 2
RANGE $43D3-$43D5 DB_DATA 2
RANGE $43D5-$43D7 DB_DATA 2
RANGE $43D7-$43D9 DB_DATA 2
RANGE $43D9-$43DB DB_DATA 2
RANGE $43DB-$43DD DB_DATA 2
RANGE $43DD-$43DF DB_DATA 2
RANGE $43DF-$43E1 DB_DATA 2
RANGE $43E1-$43E3 DB_DATA 2
RANGE $43E3-$43E5 DB_DATA 2
RANGE $43E5-$43E7 DB_DATA 2
RANGE $43E7-$43E9 DB_DATA 2
RANGE $43E9-$43EB DB_DATA 2
RANGE $43EB-$43ED DB_DATA 2
RANGE $43ED-$43EF DB_DATA 2
RANGE $43EF-$43F1 DB_DATA 2
RANGE $43F1-$43F3 DB_DATA 2
RANGE $43F3-$43F5 DB_DATA 2
RANGE $43F5-$43F7 DB_DATA 2
RANGE $43F7-$43F9 DB_DATA 2
RANGE $43F9-$43FB DB_DATA 2
RANGE $43FB-$43FD DB_DATA 2
RANGE $43FD-$43FF DB_DATA 2
RANGE $43FF-$4401 DB_DATA 2
RANGE $4401-$4403 DB_DATA 2
RANGE $4403-$4405 DB_DATA 2
RANGE $4405-$4407 DB_DATA 2
RANGE $4407-$4409 DB_DATA 2
RANGE $4409-$440B DB_DATA 2
RANGE $440B-$440D DB_DATA 2
RANGE $440D-$440F DB_DATA 2
RANGE $440F-$4411 DB_DATA 2
RANGE $4411-$4413 DB_DATA 2
RANGE $4413-$4415 DB_DATA 2
RANGE $4415-$4417 DB_DATA 2
RANGE $4417-$4419 DB_DATA 2
RANGE $4419-$441B DB_DATA 2
RANGE $441B-$441D DB_DATA 2
RANGE $441D-$441F DB_DATA 2
RANGE $441F-$4421 DB_DATA 2
RANGE $4421-$4423 DB_DATA 2
RANGE $4423-$4425 DB_DATA 2
RANGE $4425-$4427 DB_DATA 2
RANGE $4427-$4429 DB_DATA 2
RANGE $4429-$442B DB_DATA 2
RANGE $442B-$442D DB_DATA 2
RANGE $442D-$442F DB_DATA 2
RANGE $442F-$4431 DB_DATA 2
RANGE $4431-$4433 DB_DATA 2
RANGE $4433-$4435 DB_DATA 2
RANGE $4435-$4437 DB_DATA 2
RANGE $4437-$4439 DB_DATA 2
RANGE $4439-$443B DB_DATA 2
RANGE $443B-$443D DB_DATA 2
RANGE $443D-$443F DB_DATA 2
RANGE $443F-$4441 DB_DATA 2
RANGE $4441-$4443 DB_DATA 2
RANGE $4443-$4445 DB_DATA 2
RANGE $4445-$4447 DB_DATA 2
RANGE $4447-$4449 DB_DATA 2
RANGE $4449-$444B DB_DATA 2
RANGE $444B-$444D DB_DATA 2
RANGE $444D-$444F DB_DATA 2
RANGE $444F-$4451 DB_DATA 2
RANGE $4451-$4453 DB_DATA 2
RANGE $4453-$4455 DB_DATA 2
RANGE $4455-$4457 DB_DATA 2
RANGE $4457-$4459 DB_DATA 2
RANGE $4459-$445B DB_DATA 2
RANGE $445B-$445D DB_DATA 2
RANGE $445D-$445F DB_DATA 2
RANGE $445F-$4461 DB_DATA 2
RANGE $4461-$4463 DB_DATA 2
RANGE $4463-$4465 DB_DATA 2
RANGE $4465-$4467 DB_DATA 2
RANGE $4467-$4469 DB_DATA 2
RANGE $4469-$446B DB_DATA 2
RANGE $446B-$446D DB_DATA 2
RANGE $446D-$446F DB_DATA 2
RANGE $446F-$4471 DB_DATA 2
RANGE $4471-$4473 DB_DATA 2
RANGE $4473-$4475 DB_DATA 2
RANGE $4475-$4477 DB_DATA 2
RANGE $4477-$4479 DB_DATA 2
RANGE $4479-$447B DB_DATA 2
RANGE $447B-$447D DB_DATA 2
RANGE $447D-$447F DB_DATA 2
RANGE $447F-$4481 DB_DATA 2
RANGE $4481-$4483 DB_DATA 2
RANGE $4483-$4485 DB_DATA 2
RANGE $4485-$4487 DB_DATA 2
RANGE $4487-$4489 DB_DATA 2
RANGE $4489-$448B DB_DATA 2
RANGE $448B-$448D DB_DATA 2
RANGE $448D-$448F DB_DATA 2
RANGE $448F-$4491 DB_DATA 2
RANGE $4491-$4493 DB_DATA 2
RANGE $4493-$4495 DB_DATA 2
RANGE $4495-$4497 DB_DATA 2
RANGE $4497-$4499 DB_DATA 2
RANGE $4499-$449B DB_DATA 2
RANGE $449B-$449D DB_DATA 2
RANGE $449D-$449F DB_DATA 2
RANGE $449F-$44A1 DB_DATA 2
RANGE $44A1-$44A3 DB_DATA 2
RANGE $44A3-$44A5 DB_DATA 2
RANGE $44A5-$44A7 DB_DATA 2
RANGE $44A7-$44A9 DB_DATA 2
RANGE $44A9-$44AB DB_DATA 2
RANGE $44AB-$44AD DB_DATA 2
RANGE $44AD-$44AF DB_DATA 2
RANGE $44AF-$44B1 DB_DATA 2
RANGE $44B1-$44B3 DB_DATA 2
RANGE $44B3-$44B5 DB_DATA 2
RANGE $44B5-$44B7 DB_DATA 2
RANGE $44B7-$44B9 DB_DATA 2
RANGE $44B9-$44BB DB_DATA 2
RANGE $44BB-$44BD DB_DATA 2
RANGE $44BD-$44BF DB_DATA 2
RANGE $44BF-$44C1 DB_DATA 2
RANGE $44C1-$44C3 DB_DATA 2
RANGE $44C3-$44C5 DB_DATA 2
RANGE $44C5-$44C7 DB_DATA 2
RANGE $44C7-$44C9 DB_DATA 2
RANGE $44C9-$44CB DB_DATA 2
RANGE $44CB-$44CD DB_DATA 2
RANGE $44CD-$44CF DB_DATA 2
RANGE $44CF-$44D1 DB_DATA 2
RANGE $44D1-$44D3 DB_DATA 2
RANGE $44D3-$44D5 DB_DATA 2
RANGE $44D5-$44D7 DB_DATA 2
RANGE $44D7-$44D9 DB_DATA 2
RANGE $44D9-$44DB DB_DATA 2
RANGE $44DB-$44DD DB_DATA 2
RANGE $44DD-$4532 CODE
RANGE $4532-$4535 DB_DATA 3
RANGE $4535-$4538 DB_DATA 3
RANGE $4538-$453B DB_DATA 3
RANGE $453B-$453E DB_DATA 3
RANGE $453E-$4541 DB_DATA 3
RANGE $4541-$4544 DB_DATA 3
RANGE $4544-$4547 DB_DATA 3
RANGE $4547-$454A DB_DATA 3
RANGE $454A-$454D DB_DATA 3
RANGE $454D-$454E DB_DATA 1
RANGE $454E-$4551 DB_DATA 3
RANGE $4551-$4554 DB_DATA 3
RANGE $4554-$4557 DB_DATA 3
RANGE $4557-$455A DB_DATA 3
RANGE $455A-$455D DB_DATA 3
RANGE $455D-$4560 DB_DATA 3
RANGE $4560-$4561 DB_DATA 1
RANGE $4561-$4564 DB_DATA 3
RANGE $4564-$4567 DB_DATA 3
RANGE $4567-$456A DB_DATA 3
RANGE $456A-$456D DB_DATA 3
RANGE $456D-$4570 DB_DATA 3
RANGE $4570-$4571 DB_DATA 1
RANGE $4571-$4574 DB_DATA 3
RANGE $4574-$4577 DB_DATA 3
RANGE $4577-$457A DB_DATA 3
RANGE $457A-$457D DB_DATA 3
RANGE $457D-$4580 DB_DATA 3
RANGE $4580-$4583 DB_DATA 3
RANGE $4583-$4584 DB_DATA 1
RANGE $4584-$4587 DB_DATA 3
RANGE $4587-$458A DB_DATA 3
RANGE $458A-$458D DB_DATA 3
RANGE $458D-$4590 DB_DATA 3
RANGE $4590-$4591 DB_DATA 1
RANGE $4591-$4596 DB_DATA 5
RANGE $4596-$459B DB_DATA 5
RANGE $459B-$45A0 DB_DATA 5
RANGE $45A0-$45A5 DB_DATA 5
RANGE $45A5-$45A8 DB_DATA 3
RANGE $45A8-$45AB DB_DATA 3
RANGE $45AB-$45AE DB_DATA 3
RANGE $45AE-$45B1 DB_DATA 3
RANGE $45B1-$45B4 DB_DATA 3
RANGE $45B4-$45B9 DB_DATA 5
RANGE $45B9-$45BE DB_DATA 5
RANGE $45BE-$45C3 DB_DATA 5
RANGE $45C3-$45C8 DB_DATA 5
RANGE $45C8-$45CD DB_DATA 5
RANGE $45CD-$45D2 DB_DATA 5
RANGE $45D2-$45D5 DB_DATA 3
RANGE $45D5-$45DA DB_DATA 5
RANGE $45DA-$45DF DB_DATA 5
RANGE $45DF-$45E4 DB_DATA 5
RANGE $45E4-$45E7 DB_DATA 3
RANGE $45E7-$45EC DB_DATA 5
RANGE $45EC-$45F1 DB_DATA 5
RANGE $45F1-$45F6 DB_DATA 5
RANGE $45F6-$45F9 DB_DATA 3
RANGE $45F9-$45FC DB_DATA 3
RANGE $45FC-$45FF DB_DATA 3
RANGE $45FF-$4604 DB_DATA 5
RANGE $4604-$4609 DB_DATA 5
RANGE $4609-$460E DB_DATA 5
RANGE $460E-$4611 DB_DATA 3
RANGE $4611-$4614 DB_DATA 3
RANGE $4614-$4617 DB_DATA 3
RANGE $4617-$461A DB_DATA 3
RANGE $461A-$461D DB_DATA 3
RANGE $461D-$4620 DB_DATA 3
RANGE $4620-$4625 DB_DATA 5
RANGE $4625-$4628 DB_DATA 3
RANGE $4628-$462B DB_DATA 3
RANGE $462B-$462E DB_DATA 3
RANGE $462E-$4631 DB_DATA 3
RANGE $4631-$4636 DB_DATA 5
RANGE $4636-$463B DB_DATA 5
RANGE $463B-$4640 DB_DATA 5
RANGE $4640-$4643 DB_DATA 3
RANGE $4643-$4646 DB_DATA 3
RANGE $4646-$4649 DB_DATA 3
RANGE $4649-$464C DB_DATA 3
RANGE $464C-$464F DB_DATA 3
RANGE $464F-$4652 DB_DATA 3
RANGE $4652-$4657 DB_DATA 5
RANGE $4657-$465C DB_DATA 5
RANGE $465C-$4661 DB_DATA 5
RANGE $4661-$4666 DB_DATA 5
RANGE $4666-$4669 DB_DATA 3
RANGE $4669-$466C DB_DATA 3
RANGE $466C-$466F DB_DATA 3
RANGE $466F-$4672 DB_DATA 3
RANGE $4672-$4675 DB_DATA 3
RANGE $4675-$467A DB_DATA 5
RANGE $467A-$467F DB_DATA 5
RANGE $467F-$4682 DB_DATA 3
RANGE $4682-$4685 DB_DATA 3
RANGE $4685-$4688 DB_DATA 3
RANGE $4688-$468D DB_DATA 5
RANGE $468D-$4692 DB_DATA 5
RANGE $4692-$4697 DB_DATA 5
RANGE $4697-$469C DB_DATA 5
RANGE $469C-$46A1 DB_DATA 5
RANGE $46A1-$46A6 DB_DATA 5
RANGE $46A6-$46AB DB_DATA 5
RANGE $46AB-$46B0 DB_DATA 5
RANGE $46B0-$46B5 DB_DATA 5
RANGE $46B5-$46BA DB_DATA 5
RANGE $46BA-$46BF DB_DATA 5
RANGE $46BF-$46C4 DB_DATA 5
RANGE $46C4-$46C9 DB_DATA 5
RANGE $46C9-$46CE DB_DATA 5
RANGE $46CE-$46D3 DB_DATA 5
RANGE $46D3-$46D8 DB_DATA 5
RANGE $46D8-$46DD DB_DATA 5
RANGE $46DD-$46E2 DB_DATA 5
RANGE $46E2-$46E5 DB_DATA 3
RANGE $46E5-$46E8 DB_DATA 3
RANGE $46E8-$46EB DB_DATA 3
RANGE $46EB-$46EE DB_DATA 3
RANGE $46EE-$46F3 DB_DATA 5
RANGE $46F3-$46F8 DB_DATA 5
RANGE $46F8-$46FD DB_DATA 5
RANGE $46FD-$4702 DB_DATA 5
RANGE $4702-$4707 DB_DATA 5
RANGE $4707-$470C DB_DATA 5
RANGE $470C-$4711 DB_DATA 5
RANGE $4711-$4716 DB_DATA 5
RANGE $4716-$471B DB_DATA 5
RANGE $471B-$4720 DB_DATA 5
RANGE $4720-$4725 DB_DATA 5
RANGE $4725-$472A DB_DATA 5
RANGE $472A-$472F DB_DATA 5
RANGE $472F-$4734 DB_DATA 5
RANGE $4734-$4739 DB_DATA 5
RANGE $4739-$473E DB_DATA 5
RANGE $473E-$4743 DB_DATA 5
RANGE $4743-$4748 DB_DATA 5
RANGE $4748-$474D DB_DATA 5
RANGE $474D-$4752 DB_DATA 5
RANGE $4752-$4757 DB_DATA 5
RANGE $4757-$475C DB_DATA 5
RANGE $475C-$4761 DB_DATA 5
RANGE $4761-$4766 DB_DATA 5
RANGE $4766-$476B DB_DATA 5
RANGE $476B-$4770 DB_DATA 5
RANGE $4770-$4775 DB_DATA 5
RANGE $4775-$477A DB_DATA 5
RANGE $477A-$477F DB_DATA 5
RANGE $477F-$4784 DB_DATA 5
RANGE $4784-$4789 DB_DATA 5
RANGE $4789-$478E DB_DATA 5
RANGE $478E-$4793 DB_DATA 5
RANGE $4793-$4798 DB_DATA 5
RANGE $4798-$479D DB_DATA 5
RANGE $479D-$47A2 DB_DATA 5
RANGE $47A2-$47A7 DB_DATA 5
RANGE $47A7-$47AC DB_DATA 5
RANGE $47AC-$47B1 DB_DATA 5
RANGE $47B1-$47B6 DB_DATA 5
RANGE $47B6-$47BB DB_DATA 5
RANGE $47BB-$47C0 DB_DATA 5
RANGE $47C0-$47C5 DB_DATA 5
RANGE $47C5-$47CA DB_DATA 5
RANGE $47CA-$47CF DB_DATA 5
RANGE $47CF-$47D4 DB_DATA 5
RANGE $47D4-$47D9 DB_DATA 5
RANGE $47D9-$47DE DB_DATA 5
RANGE $47DE-$47E3 DB_DATA 5
RANGE $47E3-$47E8 DB_DATA 5
RANGE $47E8-$47EB DB_DATA 3
RANGE $47EB-$47EE DB_DATA 3
RANGE $47EE-$47F1 DB_DATA 3
RANGE $47F1-$47F6 DB_DATA 5
RANGE $47F6-$47FB DB_DATA 5
RANGE $47FB-$4800 DB_DATA 5
RANGE $4800-$4803 DB_DATA 3
RANGE $4803-$4806 DB_DATA 3
RANGE $4806-$4809 DB_DATA 3
RANGE $4809-$480C DB_DATA 3
RANGE $480C-$480F DB_DATA 3
RANGE $480F-$4812 DB_DATA 3
RANGE $4812-$4817 DB_DATA 5
RANGE $4817-$481A DB_DATA 3
RANGE $481A-$481D DB_DATA 3
RANGE $481D-$4820 DB_DATA 3
RANGE $4820-$4825 DB_DATA 5
RANGE $4825-$482A DB_DATA 5
RANGE $482A-$482F DB_DATA 5
RANGE $482F-$4832 DB_DATA 3
RANGE $4832-$4835 DB_DATA 3
RANGE $4835-$4838 DB_DATA 3
RANGE $4838-$483B DB_DATA 3
RANGE $483B-$4840 DB_DATA 5
RANGE $4840-$4845 DB_DATA 5
RANGE $4845-$484A DB_DATA 5
RANGE $484A-$484D DB_DATA 3
RANGE $484D-$4850 DB_DATA 3
RANGE $4850-$4853 DB_DATA 3
RANGE $4853-$4856 DB_DATA 3
RANGE $4856-$4859 DB_DATA 3
RANGE $4859-$485E DB_DATA 5
RANGE $485E-$4860 DW_DATA 1
RANGE $4860-$4862 DW_DATA 1
RANGE $4862-$4864 DW_DATA 1
RANGE $4864-$4866 DW_DATA 1
RANGE $4866-$4868 DW_DATA 1
RANGE $4868-$486A DW_DATA 1
RANGE $486A-$486C DW_DATA 1
RANGE $486C-$486E DW_DATA 1
RANGE $486E-$4870 DW_DATA 1
RANGE $4870-$4872 DW_DATA 1
RANGE $4872-$4874 DW_DATA 1
RANGE $4874-$4876 DW_DATA 1
RANGE $4876-$4878 DW_DATA 1
RANGE $4878-$487A DW_DATA 1
RANGE $487A-$487C DW_DATA 1
RANGE $487C-$487E DW_DATA 1
RANGE $487E-$4880 DW_DATA 1
RANGE $4880-$4882 DW_DATA 1
RANGE $4882-$4884 DW_DATA 1
RANGE $4884-$4886 DW_DATA 1
RANGE $4886-$4888 DW_DATA 1
RANGE $4888-$488A DW_DATA 1
RANGE $488A-$488C DW_DATA 1
RANGE $488C-$488E DW_DATA 1
RANGE $488E-$4890 DW_DATA 1
RANGE $4890-$4892 DW_DATA 1
RANGE $4892-$4894 DW_DATA 1
RANGE $4894-$4896 DW_DATA 1
RANGE $4896-$4898 DW_DATA 1
RANGE $4898-$489A DW_DATA 1
RANGE $489A-$489C DW_DATA 1
RANGE $489C-$489E DW_DATA 1
RANGE $489E-$48A0 DW_DATA 1
RANGE $48A0-$48A2 DW_DATA 1
RANGE $48A2-$48A4 DW_DATA 1
RANGE $48A4-$48A6 DW_DATA 1
RANGE $48A6-$48A8 DW_DATA 1
RANGE $48A8-$48AA DW_DATA 1
RANGE $48AA-$48AC DW_DATA 1
RANGE $48AC-$48AE DW_DATA 1
RANGE $48AE-$48B0 DW_DATA 1
RANGE $48B0-$48B2 DW_DATA 1
RANGE $48B2-$48B4 DW_DATA 1
RANGE $48B4-$48B6 DW_DATA 1
RANGE $48B6-$48B8 DW_DATA 1
RANGE $48B8-$48BA DW_DATA 1
RANGE $48BA-$48BC DW_DATA 1
RANGE $48BC-$48BE DW_DATA 1
RANGE $48BE-$48C0 DW_DATA 1
RANGE $48C0-$48C2 DW_DATA 1
RANGE $48C2-$48C4 DW_DATA 1
RANGE $48C4-$48C6 DW_DATA 1
RANGE $48C6-$48C8 DW_DATA 1
RANGE $48C8-$48CA DW_DATA 1
RANGE $48CA-$48CC DW_DATA 1
RANGE $48CC-$48CE DW_DATA 1
RANGE $48CE-$48D0 DW_DATA 1
RANGE $48D0-$48D2 DW_DATA 1
RANGE $48D2-$48D4 DW_DATA 1
RANGE $48D4-$48D6 DW_DATA 1
RANGE $48D6-$48D8 DW_DATA 1
RANGE $48D8-$48DA DW_DATA 1
RANGE $48DA-$48DC DW_DATA 1
RANGE $48DC-$48DE DW_DATA 1
RANGE $48DE-$48E0 DW_DATA 1
RANGE $48E0-$48E2 DW_DATA 1
RANGE $48E2-$48E4 DW_DATA 1
RANGE $48E4-$48E6 DW_DATA 1
RANGE $48E6-$48E8 DW_DATA 1
RANGE $48E8-$48EA DW_DATA 1
RANGE $48EA-$48EC DW_DATA 1
RANGE $48EC-$48EE DW_DATA 1
RANGE $48EE-$48F0 DW_DATA 1
RANGE $48F0-$48F2 DW_DATA 1
RANGE $48F2-$48F4 DW_DATA 1
RANGE $48F4-$48F6 DW_DATA 1
RANGE $48F6-$48F8 DW_DATA 1
RANGE $48F8-$48FA DW_DATA 1
RANGE $48FA-$48FC DW_DATA 1
RANGE $48FC-$48FE DW_DATA 1
RANGE $48FE-$4900 DW_DATA 1
RANGE $4900-$4902 DW_DATA 1
RANGE $4902-$4904 DW_DATA 1
RANGE $4904-$4906 DW_DATA 1
RANGE $4906-$4908 DW_DATA 1
RANGE $4908-$490A DW_DATA 1
RANGE $490A-$490C DW_DATA 1
RANGE $490C-$490E DW_DATA 1
RANGE $490E-$4910 DW_DATA 1
RANGE $4910-$4912 DW_DATA 1
RANGE $4912-$4914 DW_DATA 1
RANGE $4914-$4916 DW_DATA 1
RANGE $4916-$4918 DW_DATA 1
RANGE $4918-$491A DW_DATA 1
RANGE $491A-$491C DW_DATA 1
RANGE $491C-$491E DW_DATA 1
RANGE $491E-$4920 DW_DATA 1
RANGE $4920-$4922 DW_DATA 1
RANGE $4922-$4924 DW_DATA 1
RANGE $4924-$4926 DW_DATA 1
RANGE $4926-$4929 DB_DATA 3
RANGE $4929-$492C DB_DATA 3
RANGE $492C-$492F DB_DATA 3
RANGE $492F-$4932 DB_DATA 3
RANGE $4932-$4935 DB_DATA 3
RANGE $4935-$4938 DB_DATA 3
RANGE $4938-$493B DB_DATA 3
RANGE $493B-$493E DB_DATA 3
RANGE $493E-$494B DB_DATA 13
RANGE $494B-$494E DB_DATA 3
RANGE $494E-$4951 DB_DATA 3
RANGE $4951-$4954 DB_DATA 3
RANGE $4954-$4957 DB_DATA 3
RANGE $4957-$4962 DB_DATA 11
RANGE $4962-$496A DB_DATA 8
RANGE $496A-$4974 DB_DATA 10
RANGE $4974-$4977 DB_DATA 3
RANGE $4977-$497A DB_DATA 3
RANGE $497A-$497D DB_DATA 3
RANGE $497D-$4980 DB_DATA 3
RANGE $4980-$498A DB_DATA 10
RANGE $498A-$4992 DB_DATA 8
RANGE $4992-$499B DB_DATA 9
RANGE $499B-$499E DB_DATA 3
RANGE $499E-$49A1 DB_DATA 3
RANGE $49A1-$49A4 DB_DATA 3
RANGE $49A4-$49A7 DB_DATA 3
RANGE $49A7-$49B4 DB_DATA 13
RANGE $49B4-$49BD DB_DATA 9
RANGE $49BD-$49C5 DB_DATA 8
RANGE $49C5-$49D0 DB_DATA 11
RANGE $49D0-$49D3 DB_DATA 3
RANGE $49D3-$49D6 DB_DATA 3
RANGE $49D6-$49D9 DB_DATA 3
RANGE $49D9-$49DC DB_DATA 3
RANGE $49DC-$49E8 DB_DATA 12
RANGE $49E8-$49F2 DB_DATA 10
RANGE $49F2-$49F5 DB_DATA 3
RANGE $49F5-$49F8 DB_DATA 3
RANGE $49F8-$49FB DB_DATA 3
RANGE $49FB-$49FE DB_DATA 3
RANGE $49FE-$4A0A DB_DATA 12
RANGE $4A0A-$4A12 DB_DATA 8
RANGE $4A12-$4A15 DB_DATA 3
RANGE $4A15-$4A1E DB_DATA 9
RANGE $4A1E-$4A28 DB_DATA 10
RANGE $4A28-$4A35 DB_DATA 13
RANGE $4A35-$4A40 DB_DATA 11
RANGE $4A40-$4A4A DB_DATA 10
RANGE $4A4A-$4A53 DB_DATA 9
RANGE $4A53-$4A5E DB_DATA 11
RANGE $4A5E-$4A69 DB_DATA 11
RANGE $4A69-$4A74 DB_DATA 11
RANGE $4A74-$4A7F DB_DATA 11
RANGE $4A7F-$4A8A DB_DATA 11
RANGE $4A8A-$4A94 DB_DATA 10
RANGE $4A94-$4A9E DB_DATA 10
RANGE $4A9E-$4AA7 DB_DATA 9
RANGE $4AA7-$4AB0 DB_DATA 9
RANGE $4AB0-$4AB9 DB_DATA 9
RANGE $4AB9-$4AC4 DB_DATA 11
RANGE $4AC4-$4AD1 DB_DATA 13
RANGE $4AD1-$4ADB DB_DATA 10
RANGE $4ADB-$4AE5 DB_DATA 10
RANGE $4AE5-$4AEF DB_DATA 10
RANGE $4AEF-$4AF8 DB_DATA 9
RANGE $4AF8-$4AFB DB_DATA 3
RANGE $4AFB-$4AFE DB_DATA 3
RANGE $4AFE-$4B09 DB_DATA 11
RANGE $4B09-$4B13 DB_DATA 10
RANGE $4B13-$4B1E DB_DATA 11
RANGE $4B1E-$4B2B DB_DATA 13
RANGE $4B2B-$4B2E DB_DATA 3
RANGE $4B2E-$4B38 DB_DATA 10
RANGE $4B38-$4B42 DB_DATA 10
RANGE $4B42-$4B4B DB_DATA 9
RANGE $4B4B-$4B54 DB_DATA 9
RANGE $4B54-$4B5D DB_DATA 9
RANGE $4B5D-$4B60 DB_DATA 3
RANGE $4B60-$4B63 DB_DATA 3
RANGE $4B63-$4B66 DB_DATA 3
RANGE $4B66-$4B69 DB_DATA 3
RANGE $4B69-$4B6C DB_DATA 3
RANGE $4B6C-$4B6F DB_DATA 3
RANGE $4B6F-$4B7A DB_DATA 11
RANGE $4B7A-$4B85 DB_DATA 11
RANGE $4B85-$4B8F DB_DATA 10
RANGE $4B8F-$4B92 DB_DATA 3
RANGE $4B92-$4B95 DB_DATA 3
RANGE $4B95-$4B98 DB_DATA 3
RANGE $4B98-$4B9B DB_DATA 3
RANGE $4B9B-$4B9E DB_DATA 3
RANGE $4B9E-$4BA1 DB_DATA 3
RANGE $4BA1-$4BA4 DB_DATA 3
RANGE $4BA4-$4BA7 DB_DATA 3
RANGE $4BA7-$4BAA DB_DATA 3
RANGE $4BAA-$4BAD DB_DATA 3
RANGE $4BAD-$4BB0 DB_DATA 3
RANGE $4BB0-$4BB3 DB_DATA 3
RANGE $4BB3-$4BB4 DB_DATA 1
RANGE $4BB4-$4CB4 CODE
RANGE $4CB4-$4CB6 DW_DATA 1
RANGE $4CB6-$4CB8 DW_DATA 1
RANGE $4CB8-$4CBA DW_DATA 1
RANGE $4CBA-$4CBC DW_DATA 1
RANGE $4CBC-$4CBE DW_DATA 1
RANGE $4CBE-$4CC0 DW_DATA 1
RANGE $4CC0-$4CC2 DW_DATA 1
RANGE $4CC2-$4CC4 DW_DATA 1
RANGE $4CC4-$4CC6 DW_DATA 1
RANGE $4CC6-$4CC8 DW_DATA 1
RANGE $4CC8-$4CCD DB_DATA 5
RANGE $4CCD-$4CD2 DB_DATA 5
RANGE $4CD2-$4CD7 DB_DATA 5
RANGE $4CD7-$4CDC DB_DATA 5
RANGE $4CDC-$4CE1 DB_DATA 5
RANGE $4CE1-$4CE6 DB_DATA 5
RANGE $4CE6-$4CE9 DB_DATA 3
RANGE $4CE9-$4CEC DB_DATA 3
RANGE $4CEC-$4CEF DB_DATA 3
RANGE $4CEF-$4CF2 DB_DATA 3
RANGE $4CF2-$4CF7 DB_DATA 5
RANGE $4CF7-$4CFC DB_DATA 5
RANGE $4CFC-$4D01 DB_DATA 5
RANGE $4D01-$4D06 DB_DATA 5
RANGE $4D06-$4D0B DB_DATA 5
RANGE $4D0B-$4D10 DB_DATA 5
RANGE $4D10-$4D15 DB_DATA 5
RANGE $4D15-$4D1A DB_DATA 5
RANGE $4D1A-$4D1F DB_DATA 5
RANGE $4D1F-$4D24 DB_DATA 5
RANGE $4D24-$4D29 DB_DATA 5
RANGE $4D29-$4D2E DB_DATA 5
RANGE $4D2E-$4D33 DB_DATA 5
RANGE $4D33-$4D38 DB_DATA 5
RANGE $4D38-$4D3D DB_DATA 5
RANGE $4D3D-$4D40 DB_DATA 3
RANGE $4D40-$4D43 DB_DATA 3
RANGE $4D43-$4D48 DB_DATA 5
RANGE $4D48-$4D4D DB_DATA 5
RANGE $4D4D-$4D52 DB_DATA 5
RANGE $4D52-$4D57 DB_DATA 5
RANGE $4D57-$4D5A DB_DATA 3
RANGE $4D5A-$4D5D DB_DATA 3
RANGE $4D5D-$4D62 DB_DATA 5
RANGE $4D62-$4D67 DB_DATA 5
RANGE $4D67-$4D6C DB_DATA 5
RANGE $4D6C-$4D71 DB_DATA 5
RANGE $4D71-$4D76 DB_DATA 5
RANGE $4D76-$4D7B DB_DATA 5
RANGE $4D7B-$4D80 DB_DATA 5
RANGE $4D80-$4D85 DB_DATA 5
RANGE $4D85-$4D8A DB_DATA 5
RANGE $4D8A-$4D8F DB_DATA 5
RANGE $4D8F-$4D94 DB_DATA 5
RANGE $4D94-$4D97 DB_DATA 3
RANGE $4D97-$4D9A DB_DATA 3
RANGE $4D9A-$4D9D DB_DATA 3
RANGE $4D9D-$4DA0 DB_DATA 3
RANGE $4DA0-$4DA3 DB_DATA 3
RANGE $4DA3-$4DA8 DB_DATA 5
RANGE $4DA8-$4DAD DB_DATA 5
RANGE $4DAD-$4DB2 DB_DATA 5
RANGE $4DB2-$4DB7 DB_DATA 5
RANGE $4DB7-$4DBC DB_DATA 5
RANGE $4DBC-$4DC1 DB_DATA 5
RANGE $4DC1-$4DC6 DB_DATA 5
RANGE $4DC6-$4DCB DB_DATA 5
RANGE $4DCB-$4DD0 DB_DATA 5
RANGE $4DD0-$4DD5 DB_DATA 5
RANGE $4DD5-$4DDA DB_DATA 5
RANGE $4DDA-$4DDF DB_DATA 5
RANGE $4DDF-$4DE4 DB_DATA 5
RANGE $4DE4-$4DE9 DB_DATA 5
RANGE $4DE9-$4DEE DB_DATA 5
RANGE $4DEE-$4DF1 DB_DATA 3
RANGE $4DF1-$4DF4 DB_DATA 3
RANGE $4DF4-$4DF7 DB_DATA 3
RANGE $4DF7-$4DFC DB_DATA 5
RANGE $4DFC-$4E01 DB_DATA 5
RANGE $4E01-$4E06 DB_DATA 5
RANGE $4E06-$4E09 DB_DATA 3
RANGE $4E09-$4E0C DB_DATA 3
RANGE $4E0C-$4E11 DB_DATA 5
RANGE $4E11-$4E16 DB_DATA 5
RANGE $4E16-$4E1B DB_DATA 5
RANGE $4E1B-$4E20 DB_DATA 5
RANGE $4E20-$4E25 DB_DATA 5
RANGE $4E25-$4E28 DB_DATA 3
RANGE $4E28-$4E2D DB_DATA 5
RANGE $4E2D-$4E32 DB_DATA 5
RANGE $4E32-$4E37 DB_DATA 5
RANGE $4E37-$4E3C DB_DATA 5
RANGE $4E3C-$4E3F DB_DATA 3
RANGE $4E3F-$4E42 DB_DATA 3
RANGE $4E42-$4E45 DB_DATA 3
RANGE $4E45-$4E48 DB_DATA 3
RANGE $4E48-$4E4B DB_DATA 3
RANGE $4E4B-$4E4E DB_DATA 3
RANGE $4E4E-$4E53 DB_DATA 5
RANGE $4E53-$4E56 DB_DATA 3
RANGE $4E56-$4E59 DB_DATA 3
RANGE $4E59-$4E5C DB_DATA 3
RANGE $4E5C-$4E61 DB_DATA 5
RANGE $4E61-$4E66 DB_DATA 5
RANGE $4E66-$4E6B DB_DATA 5
RANGE $4E6B-$4E70 DB_DATA 5
RANGE $4E70-$4E75 DB_DATA 5
RANGE $4E75-$4E7A DB_DATA 5
RANGE $4E7A-$4E7F DB_DATA 5
RANGE $4E7F-$4E82 DB_DATA 3
RANGE $4E82-$4E87 DB_DATA 5
RANGE $4E87-$4E8C DB_DATA 5
RANGE $4E8C-$4E91 DB_DATA 5
RANGE $4E91-$4E96 DB_DATA 5
RANGE $4E96-$4E9B DB_DATA 5
RANGE $4E9B-$4EA0 DB_DATA 5
RANGE $4EA0-$4EA5 DB_DATA 5
RANGE $4EA5-$4EA8 DB_DATA 3
RANGE $4EA8-$4EAB DB_DATA 3
RANGE $4EAB-$4EAE DB_DATA 3
RANGE $4EAE-$4EB1 DB_DATA 3
RANGE $4EB1-$4EB4 DB_DATA 3
RANGE $4EB4-$4EB7 DB_DATA 3
RANGE $4EB7-$4EBC DB_DATA 5
RANGE $4EBC-$4EBF DB_DATA 3
RANGE $4EBF-$4EC2 DB_DATA 3
RANGE $4EC2-$4EC5 DB_DATA 3
RANGE $4EC5-$4EC8 DB_DATA 3
RANGE $4EC8-$4ECD DB_DATA 5
RANGE $4ECD-$4ED2 DB_DATA 5
RANGE $4ED2-$4ED7 DB_DATA 5
RANGE $4ED7-$4EDC DB_DATA 5
RANGE $4EDC-$4EE1 DB_DATA 5
RANGE $4EE1-$4EE6 DB_DATA 5
RANGE $4EE6-$4EEB DB_DATA 5
RANGE $4EEB-$4EEE DB_DATA 3
RANGE $4EEE-$4EF1 DB_DATA 3
RANGE $4EF1-$4EF4 DB_DATA 3
RANGE $4EF4-$4EF7 DB_DATA 3
RANGE $4EF7-$4EFA DB_DATA 3
RANGE $4EFA-$4EFF DB_DATA 5
RANGE $4EFF-$4F04 DB_DATA 5
RANGE $4F04-$4F09 DB_DATA 5
RANGE $4F09-$4F0E DB_DATA 5
RANGE $4F0E-$4F13 DB_DATA 5
RANGE $4F13-$4F18 DB_DATA 5
RANGE $4F18-$4F1D DB_DATA 5
RANGE $4F1D-$4F22 DB_DATA 5
RANGE $4F22-$4F27 DB_DATA 5
RANGE $4F27-$4F2C DB_DATA 5
RANGE $4F2C-$4F31 DB_DATA 5
RANGE $4F31-$4F36 DB_DATA 5
RANGE $4F36-$4F3B DB_DATA 5
RANGE $4F3B-$4F40 DB_DATA 5
RANGE $4F40-$4F45 DB_DATA 5
RANGE $4F45-$4F4A DB_DATA 5
RANGE $4F4A-$4F4D DB_DATA 3
RANGE $4F4D-$4F52 DB_DATA 5
RANGE $4F52-$4F57 DB_DATA 5
RANGE $4F57-$4F5C DB_DATA 5
RANGE $4F5C-$4F61 DB_DATA 5
RANGE $4F61-$4F66 DB_DATA 5
RANGE $4F66-$4F69 DB_DATA 3
RANGE $4F69-$4F6C DB_DATA 3
RANGE $4F6C-$4F6F DB_DATA 3
RANGE $4F6F-$4F74 DB_DATA 5
RANGE $4F74-$4F79 DB_DATA 5
RANGE $4F79-$4F7E DB_DATA 5
RANGE $4F7E-$4F81 DB_DATA 3
RANGE $4F81-$4F84 DB_DATA 3
RANGE $4F84-$4F89 DB_DATA 5
RANGE $4F89-$4F8E DB_DATA 5
RANGE $4F8E-$4F93 DB_DATA 5
RANGE $4F93-$4F98 DB_DATA 5
RANGE $4F98-$4F9D DB_DATA 5
RANGE $4F9D-$4FA2 DB_DATA 5
RANGE $4FA2-$4FA7 DB_DATA 5
RANGE $4FA7-$4FAC DB_DATA 5
RANGE $4FAC-$4FB1 DB_DATA 5
RANGE $4FB1-$4FB6 DB_DATA 5
RANGE $4FB6-$4FBB DB_DATA 5
RANGE $4FBB-$4FBE DB_DATA 3
RANGE $4FBE-$4FC1 DB_DATA 3
RANGE $4FC1-$4FC6 DB_DATA 5
RANGE $4FC6-$4FCB DB_DATA 5
RANGE $4FCB-$4FD0 DB_DATA 5
RANGE $4FD0-$4FD3 DB_DATA 3
RANGE $4FD3-$4FD6 DB_DATA 3
RANGE $4FD6-$4FD9 DB_DATA 3
RANGE $4FD9-$4FDC DB_DATA 3
RANGE $4FDC-$4FE1 DB_DATA 5
RANGE $4FE1-$4FE6 DB_DATA 5
RANGE $4FE6-$4FEB DB_DATA 5
RANGE $4FEB-$4FF0 DB_DATA 5
RANGE $4FF0-$4FF3 DB_DATA 3
RANGE $4FF3-$4FF8 DB_DATA 5
RANGE $4FF8-$4FFD DB_DATA 5
RANGE $4FFD-$5002 DB_DATA 5
RANGE $5002-$5007 DB_DATA 5
RANGE $5007-$500C DB_DATA 5
RANGE $500C-$5011 DB_DATA 5
RANGE $5011-$5016 DB_DATA 5
RANGE $5016-$5019 DB_DATA 3
RANGE $5019-$501C DB_DATA 3
RANGE $501C-$501F DB_DATA 3
RANGE $501F-$5022 DB_DATA 3
RANGE $5022-$5025 DB_DATA 3
RANGE $5025-$5028 DB_DATA 3
RANGE $5028-$502D DB_DATA 5
RANGE $502D-$5032 DB_DATA 5
RANGE $5032-$5037 DB_DATA 5
RANGE $5037-$503C DB_DATA 5
RANGE $503C-$5041 DB_DATA 5
RANGE $5041-$5046 DB_DATA 5
RANGE $5046-$504B DB_DATA 5
RANGE $504B-$5050 DB_DATA 5
RANGE $5050-$5055 DB_DATA 5
RANGE $5055-$505A DB_DATA 5
RANGE $505A-$505F DB_DATA 5
RANGE $505F-$5064 DB_DATA 5
RANGE $5064-$5069 DB_DATA 5
RANGE $5069-$506E DB_DATA 5
RANGE $506E-$5073 DB_DATA 5
RANGE $5073-$5078 DB_DATA 5
RANGE $5078-$507D DB_DATA 5
RANGE $507D-$5082 DB_DATA 5
RANGE $5082-$5085 DB_DATA 3
RANGE $5085-$5088 DB_DATA 3
RANGE $5088-$508B DB_DATA 3
RANGE $508B-$508E DB_DATA 3
RANGE $508E-$5091 DB_DATA 3
RANGE $5091-$5094 DB_DATA 3
RANGE $5094-$5099 DB_DATA 5
RANGE $5099-$509C DB_DATA 3
RANGE $509C-$509F DB_DATA 3
RANGE $509F-$50A2 DB_DATA 3
RANGE $50A2-$50A7 DB_DATA 5
RANGE $50A7-$50AC DB_DATA 5
RANGE $50AC-$50B1 DB_DATA 5
RANGE $50B1-$50B6 DB_DATA 5
RANGE $50B6-$50BB DB_DATA 5
RANGE $50BB-$50C0 DB_DATA 5
RANGE $50C0-$50C5 DB_DATA 5
RANGE $50C5-$50C8 DB_DATA 3
RANGE $50C8-$50CB DB_DATA 3
RANGE $50CB-$50CE DB_DATA 3
RANGE $50CE-$50D1 DB_DATA 3
RANGE $50D1-$50D6 DB_DATA 5
RANGE $50D6-$50DB DB_DATA 5
RANGE $50DB-$50E0 DB_DATA 5
RANGE $50E0-$50E5 DB_DATA 5
RANGE $50E5-$50EA DB_DATA 5
RANGE $50EA-$50EF DB_DATA 5
RANGE $50EF-$50F4 DB_DATA 5
RANGE $50F4-$50F9 DB_DATA 5
RANGE $50F9-$50FE DB_DATA 5
RANGE $50FE-$5103 DB_DATA 5
RANGE $5103-$5108 DB_DATA 5
RANGE $5108-$510D DB_DATA 5
RANGE $510D-$5112 DB_DATA 5
RANGE $5112-$5117 DB_DATA 5
RANGE $5117-$511C DB_DATA 5
RANGE $511C-$5121 DB_DATA 5
RANGE $5121-$5126 DB_DATA 5
RANGE $5126-$512B DB_DATA 5
RANGE $512B-$5130 DB_DATA 5
RANGE $5130-$5135 DB_DATA 5
RANGE $5135-$513A DB_DATA 5
RANGE $513A-$513F DB_DATA 5
RANGE $513F-$5144 DB_DATA 5
RANGE $5144-$5149 DB_DATA 5
RANGE $5149-$514E DB_DATA 5
RANGE $514E-$5153 DB_DATA 5
RANGE $5153-$5158 DB_DATA 5
RANGE $5158-$515D DB_DATA 5
RANGE $515D-$5162 DB_DATA 5
RANGE $5162-$5167 DB_DATA 5
RANGE $5167-$516C DB_DATA 5
RANGE $516C-$5171 DB_DATA 5
RANGE $5171-$5176 DB_DATA 5
RANGE $5176-$517B DB_DATA 5
RANGE $517B-$5180 DB_DATA 5
RANGE $5180-$5185 DB_DATA 5
RANGE $5185-$518A DB_DATA 5
RANGE $518A-$518F DB_DATA 5
RANGE $518F-$5194 DB_DATA 5
RANGE $5194-$5199 DB_DATA 5
RANGE $5199-$519E DB_DATA 5
RANGE $519E-$51A3 DB_DATA 5
RANGE $51A3-$51A8 DB_DATA 5
RANGE $51A8-$51AD DB_DATA 5
RANGE $51AD-$51B2 DB_DATA 5
RANGE $51B2-$51B7 DB_DATA 5
RANGE $51B7-$51BC DB_DATA 5
RANGE $51BC-$51C1 DB_DATA 5
RANGE $51C1-$51C6 DB_DATA 5
RANGE $51C6-$51CB DB_DATA 5
RANGE $51CB-$51D0 DB_DATA 5
RANGE $51D0-$51D5 DB_DATA 5
RANGE $51D5-$51DA DB_DATA 5
RANGE $51DA-$51DF DB_DATA 5
RANGE $51DF-$51E4 DB_DATA 5
RANGE $51E4-$51E9 DB_DATA 5
RANGE $51E9-$51EE DB_DATA 5
RANGE $51EE-$51F3 DB_DATA 5
RANGE $51F3-$51F8 DB_DATA 5
RANGE $51F8-$51FD DB_DATA 5
RANGE $51FD-$5202 DB_DATA 5
RANGE $5202-$5207 DB_DATA 5
RANGE $5207-$520C DB_DATA 5
RANGE $520C-$5211 DB_DATA 5
RANGE $5211-$5216 DB_DATA 5
RANGE $5216-$521B DB_DATA 5
RANGE $521B-$5220 DB_DATA 5
RANGE $5220-$5225 DB_DATA 5
RANGE $5225-$522A DB_DATA 5
RANGE $522A-$522F DB_DATA 5
RANGE $522F-$5234 DB_DATA 5
RANGE $5234-$5239 DB_DATA 5
RANGE $5239-$523E DB_DATA 5
RANGE $523E-$5243 DB_DATA 5
RANGE $5243-$5248 DB_DATA 5
RANGE $5248-$524D DB_DATA 5
RANGE $524D-$5252 DB_DATA 5
RANGE $5252-$5257 DB_DATA 5
RANGE $5257-$525C DB_DATA 5
RANGE $525C-$5261 DB_DATA 5
RANGE $5261-$5266 DB_DATA 5
RANGE $5266-$526B DB_DATA 5
RANGE $526B-$5270 DB_DATA 5
RANGE $5270-$5275 DB_DATA 5
RANGE $5275-$527A DB_DATA 5
RANGE $527A-$527F DB_DATA 5
RANGE $527F-$5284 DB_DATA 5
RANGE $5284-$5289 DB_DATA 5
RANGE $5289-$53F3 CODE
RANGE $53F3-$53F5 DW_DATA 1
RANGE $53F5-$53F7 DW_DATA 1
RANGE $53F7-$53F9 DW_DATA 1
RANGE $53F9-$53FE DB_DATA 5
RANGE $53FE-$5403 DB_DATA 5
RANGE $5403-$5408 DB_DATA 5
RANGE $5408-$540D DB_DATA 5
RANGE $540D-$5412 DB_DATA 5
RANGE $5412-$5417 DB_DATA 5
RANGE $5417-$541C DB_DATA 5
RANGE $541C-$5421 DB_DATA 5
RANGE $5421-$5426 DB_DATA 5
RANGE $5426-$542B DB_DATA 5
RANGE $542B-$5430 DB_DATA 5
RANGE $5430-$5432 DW_DATA 1
RANGE $5432-$5434 DW_DATA 1
RANGE $5434-$5436 DW_DATA 1
RANGE $5436-$543B DB_DATA 5
RANGE $543B-$5440 DB_DATA 5
RANGE $5440-$5445 DB_DATA 5
RANGE $5445-$544A DB_DATA 5
RANGE $544A-$544F DB_DATA 5
RANGE $544F-$5454 DB_DATA 5
RANGE $5454-$5459 DB_DATA 5
RANGE $5459-$545E DB_DATA 5
RANGE $545E-$5463 DB_DATA 5
RANGE $5463-$5468 DB_DATA 5
RANGE $5468-$546D DB_DATA 5
RANGE $546D-$546F DW_DATA 1
RANGE $546F-$5471 DW_DATA 1
RANGE $5471-$5473 DW_DATA 1
RANGE $5473-$5478 DB_DATA 5
RANGE $5478-$547D DB_DATA 5
RANGE $547D-$5482 DB_DATA 5
RANGE $5482-$5487 DB_DATA 5
RANGE $5487-$548C DB_DATA 5
RANGE $548C-$5491 DB_DATA 5
RANGE $5491-$5496 DB_DATA 5
RANGE $5496-$549B DB_DATA 5
RANGE $549B-$54A0 DB_DATA 5
RANGE $54A0-$54A5 DB_DATA 5
RANGE $54A5-$54AA DB_DATA 5
RANGE $54AA-$54AC DW_DATA 1
RANGE $54AC-$54AE DW_DATA 1
RANGE $54AE-$54B0 DW_DATA 1
RANGE $54B0-$54B2 DW_DATA 1
RANGE $54B2-$54B4 DW_DATA 1
RANGE $54B4-$54B9 DB_DATA 5
RANGE $54B9-$54BE DB_DATA 5
RANGE $54BE-$54C3 DB_DATA 5
RANGE $54C3-$54C6 DB_DATA 3
RANGE $54C6-$54CB DB_DATA 5
RANGE $54CB-$54D0 DB_DATA 5
RANGE $54D0-$54D5 DB_DATA 5
RANGE $54D5-$54D8 DB_DATA 3
RANGE $54D8-$54DD DB_DATA 5
RANGE $54DD-$54E2 DB_DATA 5
RANGE $54E2-$54E7 DB_DATA 5
RANGE $54E7-$54EC DB_DATA 5
RANGE $54EC-$54F1 DB_DATA 5
RANGE $54F1-$54F6 DB_DATA 5
RANGE $54F6-$54F9 DB_DATA 3
RANGE $54F9-$54FE DB_DATA 5
RANGE $54FE-$5503 DB_DATA 5
RANGE $5503-$5508 DB_DATA 5
RANGE $5508-$550D DB_DATA 5
RANGE $550D-$5510 DB_DATA 3
RANGE $5510-$5513 DB_DATA 3
RANGE $5513-$5516 DB_DATA 3
RANGE $5516-$5519 DB_DATA 3
RANGE $5519-$551C DB_DATA 3
RANGE $551C-$551F DB_DATA 3
RANGE $551F-$5524 DB_DATA 5
RANGE $5524-$5527 DB_DATA 3
RANGE $5527-$552A DB_DATA 3
RANGE $552A-$552D DB_DATA 3
RANGE $552D-$5530 DB_DATA 3
RANGE $5530-$5533 DB_DATA 3
RANGE $5533-$5536 DB_DATA 3
RANGE $5536-$553B DB_DATA 5
RANGE $553B-$5540 DB_DATA 5
RANGE $5540-$5545 DB_DATA 5
RANGE $5545-$554A DB_DATA 5
RANGE $554A-$554D DB_DATA 3
RANGE $554D-$5550 DB_DATA 3
RANGE $5550-$5553 DB_DATA 3
RANGE $5553-$5556 DB_DATA 3
RANGE $5556-$5559 DB_DATA 3
RANGE $5559-$555C DB_DATA 3
RANGE $555C-$5561 DB_DATA 5
RANGE $5561-$5566 DB_DATA 5
RANGE $5566-$556B DB_DATA 5
RANGE $556B-$5570 DB_DATA 5
RANGE $5570-$5573 DB_DATA 3
RANGE $5573-$5576 DB_DATA 3
RANGE $5576-$5579 DB_DATA 3
RANGE $5579-$557C DB_DATA 3
RANGE $557C-$5581 DB_DATA 5
RANGE $5581-$5586 DB_DATA 5
RANGE $5586-$558B DB_DATA 5
RANGE $558B-$5590 DB_DATA 5
RANGE $5590-$5593 DB_DATA 3
RANGE $5593-$5596 DB_DATA 3
RANGE $5596-$5599 DB_DATA 3
RANGE $5599-$559C DB_DATA 3
RANGE $559C-$559F DB_DATA 3
RANGE $559F-$55A4 DB_DATA 5
RANGE $55A4-$55A6 DW_DATA 1
RANGE $55A6-$55A8 DW_DATA 1
RANGE $55A8-$55AA DW_DATA 1
RANGE $55AA-$55AC DW_DATA 1
RANGE $55AC-$55AE DW_DATA 1
RANGE $55AE-$55B0 DW_DATA 1
RANGE $55B0-$55B2 DW_DATA 1
RANGE $55B2-$55B7 DB_DATA 5
RANGE $55B7-$55BC DB_DATA 5
RANGE $55BC-$55C1 DB_DATA 5
RANGE $55C1-$55C6 DB_DATA 5
RANGE $55C6-$55CB DB_DATA 5
RANGE $55CB-$55CE DB_DATA 3
RANGE $55CE-$55D1 DB_DATA 3
RANGE $55D1-$55D4 DB_DATA 3
RANGE $55D4-$55D7 DB_DATA 3
RANGE $55D7-$55DA DB_DATA 3
RANGE $55DA-$55DD DB_DATA 3
RANGE $55DD-$55E2 DB_DATA 5
RANGE $55E2-$55E5 DB_DATA 3
RANGE $55E5-$55E8 DB_DATA 3
RANGE $55E8-$55ED DB_DATA 5
RANGE $55ED-$55F2 DB_DATA 5
RANGE $55F2-$55F7 DB_DATA 5
RANGE $55F7-$55FC DB_DATA 5
RANGE $55FC-$5601 DB_DATA 5
RANGE $5601-$5606 DB_DATA 5
RANGE $5606-$5609 DB_DATA 3
RANGE $5609-$560E DB_DATA 5
RANGE $560E-$5613 DB_DATA 5
RANGE $5613-$5618 DB_DATA 5
RANGE $5618-$561B DB_DATA 3
RANGE $561B-$561E DB_DATA 3
RANGE $561E-$5623 DB_DATA 5
RANGE $5623-$5628 DB_DATA 5
RANGE $5628-$562D DB_DATA 5
RANGE $562D-$5632 DB_DATA 5
RANGE $5632-$5635 DB_DATA 3
RANGE $5635-$5638 DB_DATA 3
RANGE $5638-$563B DB_DATA 3
RANGE $563B-$563E DB_DATA 3
RANGE $563E-$5643 DB_DATA 5
RANGE $5643-$5648 DB_DATA 5
RANGE $5648-$564D DB_DATA 5
RANGE $564D-$5650 DB_DATA 3
RANGE $5650-$5655 DB_DATA 5
RANGE $5655-$565A DB_DATA 5
RANGE $565A-$565F DB_DATA 5
RANGE $565F-$5664 DB_DATA 5
RANGE $5664-$5669 DB_DATA 5
RANGE $5669-$566C DB_DATA 3
RANGE $566C-$566F DB_DATA 3
RANGE $566F-$5672 DB_DATA 3
RANGE $5672-$5677 DB_DATA 5
RANGE $5677-$567C DB_DATA 5
RANGE $567C-$5681 DB_DATA 5
RANGE $5681-$5684 DB_DATA 3
RANGE $5684-$5687 DB_DATA 3
RANGE $5687-$568C DB_DATA 5
RANGE $568C-$5691 DB_DATA 5
RANGE $5691-$5696 DB_DATA 5
RANGE $5696-$5699 DB_DATA 3
RANGE $5699-$569C DB_DATA 3
RANGE $569C-$569F DB_DATA 3
RANGE $569F-$56A2 DB_DATA 3
RANGE $56A2-$56A7 DB_DATA 5
RANGE $56A7-$56AC DB_DATA 5
RANGE $56AC-$56B1 DB_DATA 5
RANGE $56B1-$56B6 DB_DATA 5
RANGE $56B6-$56B9 DB_DATA 3
RANGE $56B9-$56BC DB_DATA 3
RANGE $56BC-$56BF DB_DATA 3
RANGE $56BF-$56C4 DB_DATA 5
RANGE $56C4-$56C9 DB_DATA 5
RANGE $56C9-$56CE DB_DATA 5
RANGE $56CE-$56D3 DB_DATA 5
RANGE $56D3-$56D8 DB_DATA 5
RANGE $56D8-$56DD DB_DATA 5
RANGE $56DD-$56E2 DB_DATA 5
RANGE $56E2-$56E7 DB_DATA 5
RANGE $56E7-$56EC DB_DATA 5
RANGE $56EC-$56F1 DB_DATA 5
RANGE $56F1-$56F4 DB_DATA 3
RANGE $56F4-$56F7 DB_DATA 3
RANGE $56F7-$56FA DB_DATA 3
RANGE $56FA-$56FF DB_DATA 5
RANGE $56FF-$5704 DB_DATA 5
RANGE $5704-$5709 DB_DATA 5
RANGE $5709-$570B DW_DATA 1
RANGE $570B-$570D DW_DATA 1
RANGE $570D-$570F DW_DATA 1
RANGE $570F-$5711 DW_DATA 1
RANGE $5711-$5713 DW_DATA 1
RANGE $5713-$5715 DW_DATA 1
RANGE $5715-$571A DB_DATA 5
RANGE $571A-$571F DB_DATA 5
RANGE $571F-$5724 DB_DATA 5
RANGE $5724-$5729 DB_DATA 5
RANGE $5729-$572E DB_DATA 5
RANGE $572E-$5733 DB_DATA 5
RANGE $5733-$5738 DB_DATA 5
RANGE $5738-$573D DB_DATA 5
RANGE $573D-$5742 DB_DATA 5
RANGE $5742-$5747 DB_DATA 5
RANGE $5747-$574C DB_DATA 5
RANGE $574C-$5751 DB_DATA 5
RANGE $5751-$5756 DB_DATA 5
RANGE $5756-$575B DB_DATA 5
RANGE $575B-$5760 DB_DATA 5
RANGE $5760-$5765 DB_DATA 5
RANGE $5765-$576A DB_DATA 5
RANGE $576A-$576F DB_DATA 5
RANGE $576F-$5774 DB_DATA 5
RANGE $5774-$5779 DB_DATA 5
RANGE $5779-$577E DB_DATA 5
RANGE $577E-$5783 DB_DATA 5
RANGE $5783-$5788 DB_DATA 5
RANGE $5788-$578D DB_DATA 5
RANGE $578D-$5792 DB_DATA 5
RANGE $5792-$5797 DB_DATA 5
RANGE $5797-$579C DB_DATA 5
RANGE $579C-$57A1 DB_DATA 5
RANGE $57A1-$57A6 DB_DATA 5
RANGE $57A6-$57AB DB_DATA 5
RANGE $57AB-$57B0 DB_DATA 5
RANGE $57B0-$57B5 DB_DATA 5
RANGE $57B5-$57BA DB_DATA 5
RANGE $57BA-$57BF DB_DATA 5
RANGE $57BF-$57C4 DB_DATA 5
RANGE $57C4-$57C9 DB_DATA 5
RANGE $57C9-$57CE DB_DATA 5
RANGE $57CE-$57D3 DB_DATA 5
RANGE $57D3-$57D8 DB_DATA 5
RANGE $57D8-$57DD DB_DATA 5
RANGE $57DD-$57E2 DB_DATA 5
RANGE $57E2-$57E7 DB_DATA 5
RANGE $57E7-$57EC DB_DATA 5
RANGE $57EC-$57F1 DB_DATA 5
RANGE $57F1-$57F6 DB_DATA 5
RANGE $57F6-$57FB DB_DATA 5
RANGE $57FB-$5800 DB_DATA 5
RANGE $5800-$5805 DB_DATA 5
RANGE $5805-$580A DB_DATA 5
RANGE $580A-$580F DB_DATA 5
RANGE $580F-$5814 DB_DATA 5
RANGE $5814-$5819 DB_DATA 5
RANGE $5819-$581E DB_DATA 5
RANGE $581E-$5823 DB_DATA 5
RANGE $5823-$5828 DB_DATA 5
RANGE $5828-$591F CODE
RANGE $591F-$5921 DW_DATA 1
RANGE $5921-$5923 DW_DATA 1
RANGE $5923-$5925 DW_DATA 1
RANGE $5925-$5927 DW_DATA 1
RANGE $5927-$592C DB_DATA 5
RANGE $592C-$5931 DB_DATA 5
RANGE $5931-$5936 DB_DATA 5
RANGE $5936-$5939 DB_DATA 3
RANGE $5939-$593C DB_DATA 3
RANGE $593C-$593F DB_DATA 3
RANGE $593F-$5942 DB_DATA 3
RANGE $5942-$5945 DB_DATA 3
RANGE $5945-$5948 DB_DATA 3
RANGE $5948-$594D DB_DATA 5
RANGE $594D-$5950 DB_DATA 3
RANGE $5950-$5953 DB_DATA 3
RANGE $5953-$5956 DB_DATA 3
RANGE $5956-$5959 DB_DATA 3
RANGE $5959-$595E DB_DATA 5
RANGE $595E-$5963 DB_DATA 5
RANGE $5963-$5968 DB_DATA 5
RANGE $5968-$596D DB_DATA 5
RANGE $596D-$5970 DB_DATA 3
RANGE $5970-$5973 DB_DATA 3
RANGE $5973-$5978 DB_DATA 5
RANGE $5978-$597D DB_DATA 5
RANGE $597D-$5982 DB_DATA 5
RANGE $5982-$5987 DB_DATA 5
RANGE $5987-$598C DB_DATA 5
RANGE $598C-$5991 DB_DATA 5
RANGE $5991-$5996 DB_DATA 5
RANGE $5996-$5999 DB_DATA 3
RANGE $5999-$599C DB_DATA 3
RANGE $599C-$599F DB_DATA 3
RANGE $599F-$59A4 DB_DATA 5
RANGE $59A4-$59A9 DB_DATA 5
RANGE $59A9-$59AE DB_DATA 5
RANGE $59AE-$59B3 DB_DATA 5
RANGE $59B3-$59B8 DB_DATA 5
RANGE $59B8-$59BB DB_DATA 3
RANGE $59BB-$59BE DB_DATA 3
RANGE $59BE-$59C1 DB_DATA 3
RANGE $59C1-$59C4 DB_DATA 3
RANGE $59C4-$59C7 DB_DATA 3
RANGE $59C7-$59CC DB_DATA 5
RANGE $59CC-$59CE DW_DATA 1
RANGE $59CE-$59D0 DW_DATA 1
RANGE $59D0-$59D2 DW_DATA 1
RANGE $59D2-$59D4 DW_DATA 1
RANGE $59D4-$59D9 DB_DATA 5
RANGE $59D9-$59DE DB_DATA 5
RANGE $59DE-$59E3 DB_DATA 5
RANGE $59E3-$59E6 DB_DATA 3
RANGE $59E6-$59E9 DB_DATA 3
RANGE $59E9-$59EC DB_DATA 3
RANGE $59EC-$59F1 DB_DATA 5
RANGE $59F1-$59F6 DB_DATA 5
RANGE $59F6-$59FB DB_DATA 5
RANGE $59FB-$5A00 DB_DATA 5
RANGE $5A00-$5A05 DB_DATA 5
RANGE $5A05-$5A08 DB_DATA 3
RANGE $5A08-$5A0B DB_DATA 3
RANGE $5A0B-$5A0E DB_DATA 3
RANGE $5A0E-$5A11 DB_DATA 3
RANGE $5A11-$5A14 DB_DATA 3
RANGE $5A14-$5A19 DB_DATA 5
RANGE $5A19-$5A1E DB_DATA 5
RANGE $5A1E-$5A23 DB_DATA 5
RANGE $5A23-$5A28 DB_DATA 5
RANGE $5A28-$5A2B DB_DATA 3
RANGE $5A2B-$5A2E DB_DATA 3
RANGE $5A2E-$5A33 DB_DATA 5
RANGE $5A33-$5A38 DB_DATA 5
RANGE $5A38-$5A3D DB_DATA 5
RANGE $5A3D-$5A42 DB_DATA 5
RANGE $5A42-$5A47 DB_DATA 5
RANGE $5A47-$5A4C DB_DATA 5
RANGE $5A4C-$5A51 DB_DATA 5
RANGE $5A51-$5A54 DB_DATA 3
RANGE $5A54-$5A57 DB_DATA 3
RANGE $5A57-$5A5A DB_DATA 3
RANGE $5A5A-$5A5D DB_DATA 3
RANGE $5A5D-$5A60 DB_DATA 3
RANGE $5A60-$5A63 DB_DATA 3
RANGE $5A63-$5A68 DB_DATA 5
RANGE $5A68-$5A6B DB_DATA 3
RANGE $5A6B-$5A6E DB_DATA 3
RANGE $5A6E-$5A71 DB_DATA 3
RANGE $5A71-$5A74 DB_DATA 3
RANGE $5A74-$5A79 DB_DATA 5
RANGE $5A79-$5A7B DW_DATA 1
RANGE $5A7B-$5A7D DW_DATA 1
RANGE $5A7D-$5A7F DW_DATA 1
RANGE $5A7F-$5A81 DW_DATA 1
RANGE $5A81-$5A86 DB_DATA 5
RANGE $5A86-$5A8B DB_DATA 5
RANGE $5A8B-$5A90 DB_DATA 5
RANGE $5A90-$5A93 DB_DATA 3
RANGE $5A93-$5A96 DB_DATA 3
RANGE $5A96-$5A99 DB_DATA 3
RANGE $5A99-$5A9C DB_DATA 3
RANGE $5A9C-$5A9F DB_DATA 3
RANGE $5A9F-$5AA2 DB_DATA 3
RANGE $5AA2-$5AA7 DB_DATA 5
RANGE $5AA7-$5AAA DB_DATA 3
RANGE $5AAA-$5AAD DB_DATA 3
RANGE $5AAD-$5AB0 DB_DATA 3
RANGE $5AB0-$5AB3 DB_DATA 3
RANGE $5AB3-$5AB8 DB_DATA 5
RANGE $5AB8-$5ABD DB_DATA 5
RANGE $5ABD-$5AC2 DB_DATA 5
RANGE $5AC2-$5AC7 DB_DATA 5
RANGE $5AC7-$5ACA DB_DATA 3
RANGE $5ACA-$5ACD DB_DATA 3
RANGE $5ACD-$5AD2 DB_DATA 5
RANGE $5AD2-$5AD7 DB_DATA 5
RANGE $5AD7-$5ADC DB_DATA 5
RANGE $5ADC-$5AE1 DB_DATA 5
RANGE $5AE1-$5AE6 DB_DATA 5
RANGE $5AE6-$5AEB DB_DATA 5
RANGE $5AEB-$5AF0 DB_DATA 5
RANGE $5AF0-$5AF3 DB_DATA 3
RANGE $5AF3-$5AF6 DB_DATA 3
RANGE $5AF6-$5AF9 DB_DATA 3
RANGE $5AF9-$5AFE DB_DATA 5
RANGE $5AFE-$5B03 DB_DATA 5
RANGE $5B03-$5B08 DB_DATA 5
RANGE $5B08-$5B0D DB_DATA 5
RANGE $5B0D-$5B12 DB_DATA 5
RANGE $5B12-$5B15 DB_DATA 3
RANGE $5B15-$5B18 DB_DATA 3
RANGE $5B18-$5B1B DB_DATA 3
RANGE $5B1B-$5B1E DB_DATA 3
RANGE $5B1E-$5B21 DB_DATA 3
RANGE $5B21-$5B26 DB_DATA 5
RANGE $5B26-$5B28 DW_DATA 1
RANGE $5B28-$5B2A DW_DATA 1
RANGE $5B2A-$5B2C DW_DATA 1
RANGE $5B2C-$5B2E DW_DATA 1
RANGE $5B2E-$5B30 DW_DATA 1
RANGE $5B30-$5B32 DW_DATA 1
RANGE $5B32-$5B34 DW_DATA 1
RANGE $5B34-$5B36 DW_DATA 1
RANGE $5B36-$5B38 DW_DATA 1
RANGE $5B38-$5B3D DB_DATA 5
RANGE $5B3D-$5B42 DB_DATA 5
RANGE $5B42-$5B47 DB_DATA 5
RANGE $5B47-$5B4C DB_DATA 5
RANGE $5B4C-$5B51 DB_DATA 5
RANGE $5B51-$5B56 DB_DATA 5
RANGE $5B56-$5B5B DB_DATA 5
RANGE $5B5B-$5B60 DB_DATA 5
RANGE $5B60-$5B65 DB_DATA 5
RANGE $5B65-$5B6A DB_DATA 5
RANGE $5B6A-$5B6D DB_DATA 3
RANGE $5B6D-$5B70 DB_DATA 3
RANGE $5B70-$5B75 DB_DATA 5
RANGE $5B75-$5B7A DB_DATA 5
RANGE $5B7A-$5B7F DB_DATA 5
RANGE $5B7F-$5B84 DB_DATA 5
RANGE $5B84-$5B89 DB_DATA 5
RANGE $5B89-$5B8E DB_DATA 5
RANGE $5B8E-$5B93 DB_DATA 5
RANGE $5B93-$5B96 DB_DATA 3
RANGE $5B96-$5B99 DB_DATA 3
RANGE $5B99-$5B9C DB_DATA 3
RANGE $5B9C-$5B9F DB_DATA 3
RANGE $5B9F-$5BA2 DB_DATA 3
RANGE $5BA2-$5BA5 DB_DATA 3
RANGE $5BA5-$5BAA DB_DATA 5
RANGE $5BAA-$5BAF DB_DATA 5
RANGE $5BAF-$5BB4 DB_DATA 5
RANGE $5BB4-$5BB9 DB_DATA 5
RANGE $5BB9-$5BBE DB_DATA 5
RANGE $5BBE-$5BC3 DB_DATA 5
RANGE $5BC3-$5BC8 DB_DATA 5
RANGE $5BC8-$5BCD DB_DATA 5
RANGE $5BCD-$5BD0 DB_DATA 3
RANGE $5BD0-$5BD5 DB_DATA 5
RANGE $5BD5-$5BDA DB_DATA 5
RANGE $5BDA-$5BDF DB_DATA 5
RANGE $5BDF-$5BE4 DB_DATA 5
RANGE $5BE4-$5BE9 DB_DATA 5
RANGE $5BE9-$5BEE DB_DATA 5
RANGE $5BEE-$5BF3 DB_DATA 5
RANGE $5BF3-$5BF8 DB_DATA 5
RANGE $5BF8-$5BFD DB_DATA 5
RANGE $5BFD-$5C02 DB_DATA 5
RANGE $5C02-$5C07 DB_DATA 5
RANGE $5C07-$5C0C DB_DATA 5
RANGE $5C0C-$5C11 DB_DATA 5
RANGE $5C11-$5C16 DB_DATA 5
RANGE $5C16-$5C1B DB_DATA 5
RANGE $5C1B-$5C1E DB_DATA 3
RANGE $5C1E-$5C23 DB_DATA 5
RANGE $5C23-$5C28 DB_DATA 5
RANGE $5C28-$5C2D DB_DATA 5
RANGE $5C2D-$5C32 DB_DATA 5
RANGE $5C32-$5C37 DB_DATA 5
RANGE $5C37-$5C3C DB_DATA 5
RANGE $5C3C-$5C41 DB_DATA 5
RANGE $5C41-$5C46 DB_DATA 5
RANGE $5C46-$5C4B DB_DATA 5
RANGE $5C4B-$5C50 DB_DATA 5
RANGE $5C50-$5C55 DB_DATA 5
RANGE $5C55-$5C5A DB_DATA 5
RANGE $5C5A-$5C5F DB_DATA 5
RANGE $5C5F-$5C64 DB_DATA 5
RANGE $5C64-$5C67 DB_DATA 3
RANGE $5C67-$5C6A DB_DATA 3
RANGE $5C6A-$5C6D DB_DATA 3
RANGE $5C6D-$5C72 DB_DATA 5
RANGE $5C72-$5C77 DB_DATA 5
RANGE $5C77-$5C7C DB_DATA 5
RANGE $5C7C-$5C81 DB_DATA 5
RANGE $5C81-$5C86 DB_DATA 5
RANGE $5C86-$5C8B DB_DATA 5
RANGE $5C8B-$5C90 DB_DATA 5
RANGE $5C90-$5C95 DB_DATA 5
RANGE $5C95-$5C9A DB_DATA 5
RANGE $5C9A-$5C9F DB_DATA 5
RANGE $5C9F-$5CA4 DB_DATA 5
RANGE $5CA4-$5CA9 DB_DATA 5
RANGE $5CA9-$5CAE DB_DATA 5
RANGE $5CAE-$5CB1 DB_DATA 3
RANGE $5CB1-$5CB4 DB_DATA 3
RANGE $5CB4-$5CB7 DB_DATA 3
RANGE $5CB7-$5CBA DB_DATA 3
RANGE $5CBA-$5CBD DB_DATA 3
RANGE $5CBD-$5CC0 DB_DATA 3
RANGE $5CC0-$5CC5 DB_DATA 5
RANGE $5CC5-$5CC8 DB_DATA 3
RANGE $5CC8-$5CCB DB_DATA 3
RANGE $5CCB-$5CCE DB_DATA 3
RANGE $5CCE-$5CD1 DB_DATA 3
RANGE $5CD1-$5CD4 DB_DATA 3
RANGE $5CD4-$5CD7 DB_DATA 3
RANGE $5CD7-$5CDC DB_DATA 5
RANGE $5CDC-$5CE1 DB_DATA 5
RANGE $5CE1-$5CE6 DB_DATA 5
RANGE $5CE6-$5CEB DB_DATA 5
RANGE $5CEB-$5CF0 DB_DATA 5
RANGE $5CF0-$5CF5 DB_DATA 5
RANGE $5CF5-$5CFA DB_DATA 5
RANGE $5CFA-$5CFF DB_DATA 5
RANGE $5CFF-$5D02 DB_DATA 3
RANGE $5D02-$5D05 DB_DATA 3
RANGE $5D05-$5D0A DB_DATA 5
RANGE $5D0A-$5D0F DB_DATA 5
RANGE $5D0F-$5D14 DB_DATA 5
RANGE $5D14-$5D19 DB_DATA 5
RANGE $5D19-$5D1E DB_DATA 5
RANGE $5D1E-$5D23 DB_DATA 5
RANGE $5D23-$5D28 DB_DATA 5
RANGE $5D28-$5D2D DB_DATA 5
RANGE $5D2D-$5D32 DB_DATA 5
RANGE $5D32-$5D35 DB_DATA 3
RANGE $5D35-$5D3A DB_DATA 5
RANGE $5D3A-$5D3F DB_DATA 5
RANGE $5D3F-$5D44 DB_DATA 5
RANGE $5D44-$5D47 DB_DATA 3
RANGE $5D47-$5D4C DB_DATA 5
RANGE $5D4C-$5D51 DB_DATA 5
RANGE $5D51-$5D56 DB_DATA 5
RANGE $5D56-$5D5B DB_DATA 5
RANGE $5D5B-$5D60 DB_DATA 5
RANGE $5D60-$5D65 DB_DATA 5
RANGE $5D65-$5EC7 CODE
RANGE $5EC7-$5EC9 DW_DATA 1
RANGE $5EC9-$5ECB DW_DATA 1
RANGE $5ECB-$5ECD DW_DATA 1
RANGE $5ECD-$5ECF DW_DATA 1
RANGE $5ECF-$5ED1 DW_DATA 1
RANGE $5ED1-$5ED3 DW_DATA 1
RANGE $5ED3-$5ED8 DB_DATA 5
RANGE $5ED8-$5EDD DB_DATA 5
RANGE $5EDD-$5EE2 DB_DATA 5
RANGE $5EE2-$5EE7 DB_DATA 5
RANGE $5EE7-$5EEC DB_DATA 5
RANGE $5EEC-$5EF1 DB_DATA 5
RANGE $5EF1-$5EF6 DB_DATA 5
RANGE $5EF6-$5EFB DB_DATA 5
RANGE $5EFB-$5F00 DB_DATA 5
RANGE $5F00-$5F05 DB_DATA 5
RANGE $5F05-$5F0A DB_DATA 5
RANGE $5F0A-$5F0F DB_DATA 5
RANGE $5F0F-$5F14 DB_DATA 5
RANGE $5F14-$5F19 DB_DATA 5
RANGE $5F19-$5F1E DB_DATA 5
RANGE $5F1E-$5F23 DB_DATA 5
RANGE $5F23-$5F28 DB_DATA 5
RANGE $5F28-$5F2D DB_DATA 5
RANGE $5F2D-$5F32 DB_DATA 5
RANGE $5F32-$5F37 DB_DATA 5
RANGE $5F37-$5F3C DB_DATA 5
RANGE $5F3C-$5F41 DB_DATA 5
RANGE $5F41-$5F46 DB_DATA 5
RANGE $5F46-$5F4B DB_DATA 5
RANGE $5F4B-$5F50 DB_DATA 5
RANGE $5F50-$5F53 DB_DATA 3
RANGE $5F53-$5F58 DB_DATA 5
RANGE $5F58-$5F5D DB_DATA 5
RANGE $5F5D-$5F62 DB_DATA 5
RANGE $5F62-$5F67 DB_DATA 5
RANGE $5F67-$5F6C DB_DATA 5
RANGE $5F6C-$5F71 DB_DATA 5
RANGE $5F71-$5F76 DB_DATA 5
RANGE $5F76-$5F7B DB_DATA 5
RANGE $5F7B-$5F80 DB_DATA 5
RANGE $5F80-$5F85 DB_DATA 5
RANGE $5F85-$5F88 DB_DATA 3
RANGE $5F88-$5F8B DB_DATA 3
RANGE $5F8B-$5F8E DB_DATA 3
RANGE $5F8E-$5F91 DB_DATA 3
RANGE $5F91-$5F94 DB_DATA 3
RANGE $5F94-$5F99 DB_DATA 5
RANGE $5F99-$5F9E DB_DATA 5
RANGE $5F9E-$5FA3 DB_DATA 5
RANGE $5FA3-$5FA8 DB_DATA 5
RANGE $5FA8-$5FAD DB_DATA 5
RANGE $5FAD-$5FB2 DB_DATA 5
RANGE $5FB2-$5FB7 DB_DATA 5
RANGE $5FB7-$5FBC DB_DATA 5
RANGE $5FBC-$5FC1 DB_DATA 5
RANGE $5FC1-$5FC6 DB_DATA 5
RANGE $5FC6-$5FCB DB_DATA 5
RANGE $5FCB-$5FD0 DB_DATA 5
RANGE $5FD0-$5FD5 DB_DATA 5
RANGE $5FD5-$5FDA DB_DATA 5
RANGE $5FDA-$5FDF DB_DATA 5
RANGE $5FDF-$5FE4 DB_DATA 5
RANGE $5FE4-$5FE9 DB_DATA 5
RANGE $5FE9-$5FEE DB_DATA 5
RANGE $5FEE-$5FF3 DB_DATA 5
RANGE $5FF3-$5FF8 DB_DATA 5
RANGE $5FF8-$5FFD DB_DATA 5
RANGE $5FFD-$6002 DB_DATA 5
RANGE $6002-$6007 DB_DATA 5
RANGE $6007-$600C DB_DATA 5
RANGE $600C-$6011 DB_DATA 5
RANGE $6011-$6016 DB_DATA 5
RANGE $6016-$601B DB_DATA 5
RANGE $601B-$6020 DB_DATA 5
RANGE $6020-$6025 DB_DATA 5
RANGE $6025-$602A DB_DATA 5
RANGE $602A-$602F DB_DATA 5
RANGE $602F-$6034 DB_DATA 5
RANGE $6034-$6039 DB_DATA 5
RANGE $6039-$603C DB_DATA 3
RANGE $603C-$603F DB_DATA 3
RANGE $603F-$6042 DB_DATA 3
RANGE $6042-$6047 DB_DATA 5
RANGE $6047-$6049 DW_DATA 1
RANGE $6049-$604B DW_DATA 1
RANGE $604B-$604D DW_DATA 1
RANGE $604D-$604F DW_DATA 1
RANGE $604F-$6051 DW_DATA 1
RANGE $6051-$6053 DW_DATA 1
RANGE $6053-$6055 DW_DATA 1
RANGE $6055-$6057 DW_DATA 1
RANGE $6057-$6059 DW_DATA 1
RANGE $6059-$605B DW_DATA 1
RANGE $605B-$605D DW_DATA 1
RANGE $605D-$605F DW_DATA 1
RANGE $605F-$6061 DW_DATA 1
RANGE $6061-$6063 DW_DATA 1
RANGE $6063-$6065 DW_DATA 1
RANGE $6065-$6067 DW_DATA 1
RANGE $6067-$6069 DW_DATA 1
RANGE $6069-$606B DW_DATA 1
RANGE $606B-$606D DW_DATA 1
RANGE $606D-$606F DW_DATA 1
RANGE $606F-$6071 DW_DATA 1
RANGE $6071-$6073 DW_DATA 1
RANGE $6073-$6075 DW_DATA 1
RANGE $6075-$6077 DW_DATA 1
RANGE $6077-$6079 DW_DATA 1
RANGE $6079-$607B DW_DATA 1
RANGE $607B-$607D DW_DATA 1
RANGE $607D-$607F DW_DATA 1
RANGE $607F-$6081 DW_DATA 1
RANGE $6081-$6083 DW_DATA 1
RANGE $6083-$6085 DW_DATA 1
RANGE $6085-$6087 DW_DATA 1
RANGE $6087-$6089 DW_DATA 1
RANGE $6089-$608E DB_DATA 5
RANGE $608E-$6093 DB_DATA 5
RANGE $6093-$6098 DB_DATA 5
RANGE $6098-$609D DB_DATA 5
RANGE $609D-$60A2 DB_DATA 5
RANGE $60A2-$60A7 DB_DATA 5
RANGE $60A7-$60AC DB_DATA 5
RANGE $60AC-$60B1 DB_DATA 5
RANGE $60B1-$60B6 DB_DATA 5
RANGE $60B6-$60BB DB_DATA 5
RANGE $60BB-$60C0 DB_DATA 5
RANGE $60C0-$60C5 DB_DATA 5
RANGE $60C5-$60CA DB_DATA 5
RANGE $60CA-$60CF DB_DATA 5
RANGE $60CF-$60D4 DB_DATA 5
RANGE $60D4-$60D9 DB_DATA 5
RANGE $60D9-$60DE DB_DATA 5
RANGE $60DE-$60E3 DB_DATA 5
RANGE $60E3-$60E8 DB_DATA 5
RANGE $60E8-$60ED DB_DATA 5
RANGE $60ED-$60F2 DB_DATA 5
RANGE $60F2-$60F7 DB_DATA 5
RANGE $60F7-$60FC DB_DATA 5
RANGE $60FC-$6101 DB_DATA 5
RANGE $6101-$6106 DB_DATA 5
RANGE $6106-$610B DB_DATA 5
RANGE $610B-$6110 DB_DATA 5
RANGE $6110-$6115 DB_DATA 5
RANGE $6115-$611A DB_DATA 5
RANGE $611A-$611F DB_DATA 5
RANGE $611F-$6124 DB_DATA 5
RANGE $6124-$6129 DB_DATA 5
RANGE $6129-$612E DB_DATA 5
RANGE $612E-$6133 DB_DATA 5
RANGE $6133-$6138 DB_DATA 5
RANGE $6138-$613D DB_DATA 5
RANGE $613D-$6142 DB_DATA 5
RANGE $6142-$6147 DB_DATA 5
RANGE $6147-$614C DB_DATA 5
RANGE $614C-$6151 DB_DATA 5
RANGE $6151-$6156 DB_DATA 5
RANGE $6156-$615B DB_DATA 5
RANGE $615B-$6160 DB_DATA 5
RANGE $6160-$6165 DB_DATA 5
RANGE $6165-$616A DB_DATA 5
RANGE $616A-$616F DB_DATA 5
RANGE $616F-$6174 DB_DATA 5
RANGE $6174-$6179 DB_DATA 5
RANGE $6179-$617E DB_DATA 5
RANGE $617E-$6183 DB_DATA 5
RANGE $6183-$6188 DB_DATA 5
RANGE $6188-$618D DB_DATA 5
RANGE $618D-$6192 DB_DATA 5
RANGE $6192-$6197 DB_DATA 5
RANGE $6197-$619C DB_DATA 5
RANGE $619C-$61A1 DB_DATA 5
RANGE $61A1-$61A6 DB_DATA 5
RANGE $61A6-$61AB DB_DATA 5
RANGE $61AB-$61B0 DB_DATA 5
RANGE $61B0-$61B5 DB_DATA 5
RANGE $61B5-$61BA DB_DATA 5
RANGE $61BA-$61BF DB_DATA 5
RANGE $61BF-$61C4 DB_DATA 5
RANGE $61C4-$61C9 DB_DATA 5
RANGE $61C9-$61CE DB_DATA 5
RANGE $61CE-$61D3 DB_DATA 5
RANGE $61D3-$61D8 DB_DATA 5
RANGE $61D8-$61DD DB_DATA 5
RANGE $61DD-$61E2 DB_DATA 5
RANGE $61E2-$61E7 DB_DATA 5
RANGE $61E7-$61EC DB_DATA 5
RANGE $61EC-$61F1 DB_DATA 5
RANGE $61F1-$61F6 DB_DATA 5
RANGE $61F6-$61FB DB_DATA 5
RANGE $61FB-$6200 DB_DATA 5
RANGE $6200-$6205 DB_DATA 5
RANGE $6205-$620A DB_DATA 5
RANGE $620A-$620F DB_DATA 5
RANGE $620F-$6214 DB_DATA 5
RANGE $6214-$6219 DB_DATA 5
RANGE $6219-$621E DB_DATA 5
RANGE $621E-$6223 DB_DATA 5
RANGE $6223-$6228 DB_DATA 5
RANGE $6228-$622D DB_DATA 5
RANGE $622D-$6232 DB_DATA 5
RANGE $6232-$6237 DB_DATA 5
RANGE $6237-$623C DB_DATA 5
RANGE $623C-$6241 DB_DATA 5
RANGE $6241-$6246 DB_DATA 5
RANGE $6246-$624B DB_DATA 5
RANGE $624B-$6250 DB_DATA 5
RANGE $6250-$6255 DB_DATA 5
RANGE $6255-$625A DB_DATA 5
RANGE $625A-$62D0 CODE
RANGE $62D0-$62EC CHAR_DATA 28
RANGE $62EC-$6309 CHAR_DATA 29
RANGE $6309-$6324 CHAR_DATA 27
RANGE $6324-$6341 CHAR_DATA 29
RANGE $6341-$6355 CHAR_DATA 20
RANGE $6355-$636D CHAR_DATA 24
RANGE $636D-$637A CHAR_DATA 13
RANGE $637A-$637E DW_DATA 2
RANGE $637E-$6382 DW_DATA 2
RANGE $6382-$6386 DW_DATA 2
RANGE $6386-$638A DW_DATA 2
RANGE $638A-$638E DW_DATA 2
RANGE $638E-$6392 DW_DATA 2
RANGE $6392-$6396 DW_DATA 2
RANGE $6396-$6398 DW_DATA 1
RANGE $6398-$63B5 CHAR_DATA 29
RANGE $63B5-$63D1 CHAR_DATA 28
RANGE $63D1-$63E2 CHAR_DATA 17
RANGE $63E2-$63E7 CHAR_DATA 5
RANGE $63E7-$63FA CHAR_DATA 19
RANGE $63FA-$6410 CHAR_DATA 22
RANGE $6410-$6414 DW_DATA 2
RANGE $6414-$6418 DW_DATA 2
RANGE $6418-$641C DW_DATA 2
RANGE $641C-$6420 DW_DATA 2
RANGE $6420-$6424 DW_DATA 2
RANGE $6424-$6426 DW_DATA 1
RANGE $6426-$643F CHAR_DATA 25
RANGE $643F-$6457 CHAR_DATA 24
RANGE $6457-$6474 CHAR_DATA 29
RANGE $6474-$6493 CHAR_DATA 31
RANGE $6493-$649B CHAR_DATA 8
RANGE $649B-$64B8 CHAR_DATA 29
RANGE $64B8-$64D4 CHAR_DATA 28
RANGE $64D4-$64D8 DW_DATA 2
RANGE $64D8-$64DC DW_DATA 2
RANGE $64DC-$64E0 DW_DATA 2
RANGE $64E0-$64E4 DW_DATA 2
RANGE $64E4-$64E8 DW_DATA 2
RANGE $64E8-$64EC DW_DATA 2
RANGE $64EC-$64F0 DW_DATA 2
RANGE $64F0-$64F2 DW_DATA 1
RANGE $64F2-$650F CHAR_DATA 29
RANGE $650F-$6519 CHAR_DATA 10
RANGE $6519-$6538 CHAR_DATA 31
RANGE $6538-$6555 CHAR_DATA 29
RANGE $6555-$656B CHAR_DATA 22
RANGE $656B-$6589 CHAR_DATA 30
RANGE $6589-$65A7 CHAR_DATA 30
RANGE $65A7-$65AB DW_DATA 2
RANGE $65AB-$65AF DW_DATA 2
RANGE $65AF-$65B3 DW_DATA 2
RANGE $65B3-$65B7 DW_DATA 2
RANGE $65B7-$65BB DW_DATA 2
RANGE $65BB-$65BF DW_DATA 2
RANGE $65BF-$65C3 DW_DATA 2
RANGE $65C3-$65C5 DW_DATA 1
RANGE $65C5-$65DF CHAR_DATA 26
RANGE $65DF-$65FB CHAR_DATA 28
RANGE $65FB-$6616 CHAR_DATA 27
RANGE $6616-$6621 CHAR_DATA 11
RANGE $6621-$663D CHAR_DATA 28
RANGE $663D-$6657 CHAR_DATA 26
RANGE $6657-$665B DW_DATA 2
RANGE $665B-$665F DW_DATA 2
RANGE $665F-$6663 DW_DATA 2
RANGE $6663-$6667 DW_DATA 2
RANGE $6667-$666B DW_DATA 2
RANGE $666B-$666F DW_DATA 2
RANGE $666F-$6671 DW_DATA 1
RANGE $6671-$668D CHAR_DATA 28
RANGE $668D-$66AD CHAR_DATA 32
RANGE $66AD-$66CA CHAR_DATA 29
RANGE $66CA-$66DF CHAR_DATA 21
RANGE $66DF-$66E3 DW_DATA 2
RANGE $66E3-$66E7 DW_DATA 2
RANGE $66E7-$66EB DW_DATA 2
RANGE $66EB-$66EF DW_DATA 2
RANGE $66EF-$66F1 DW_DATA 1
RANGE $66F1-$670E CHAR_DATA 29
RANGE $670E-$672B CHAR_DATA 29
RANGE $672B-$674B CHAR_DATA 32
RANGE $674B-$676A CHAR_DATA 31
RANGE $676A-$677F CHAR_DATA 21
RANGE $677F-$6785 CHAR_DATA 6
RANGE $6785-$6789 DW_DATA 2
RANGE $6789-$678D DW_DATA 2
RANGE $678D-$6791 DW_DATA 2
RANGE $6791-$6795 DW_DATA 2
RANGE $6795-$6799 DW_DATA 2
RANGE $6799-$679D DW_DATA 2
RANGE $679D-$679F DW_DATA 1
RANGE $679F-$67BA CHAR_DATA 27
RANGE $67BA-$67D6 CHAR_DATA 28
RANGE $67D6-$67E0 CHAR_DATA 10
RANGE $67E0-$67FC CHAR_DATA 28
RANGE $67FC-$6819 CHAR_DATA 29
RANGE $6819-$681D DW_DATA 2
RANGE $681D-$6821 DW_DATA 2
RANGE $6821-$6825 DW_DATA 2
RANGE $6825-$6829 DW_DATA 2
RANGE $6829-$682D DW_DATA 2
RANGE $682D-$682F DW_DATA 1
RANGE $682F-$684C CHAR_DATA 29
RANGE $684C-$6862 CHAR_DATA 22
RANGE $6862-$687B CHAR_DATA 25
RANGE $687B-$688F CHAR_DATA 20
RANGE $688F-$68A9 CHAR_DATA 26
RANGE $68A9-$68B1 CHAR_DATA 8
RANGE $68B1-$68B5 DW_DATA 2
RANGE $68B5-$68B9 DW_DATA 2
RANGE $68B9-$68BD DW_DATA 2
RANGE $68BD-$68C1 DW_DATA 2
RANGE $68C1-$68C5 DW_DATA 2
RANGE $68C5-$68C9 DW_DATA 2
RANGE $68C9-$68CB DW_DATA 1
RANGE $68CB-$68D8 CODE
RANGE $68D8-$68ED CHAR_DATA 21
RANGE $68ED-$6901 CHAR_DATA 20
RANGE $6901-$691A CHAR_DATA 25
RANGE $691A-$691E DW_DATA 2
RANGE $691E-$6922 DW_DATA 2
RANGE $6922-$6926 DW_DATA 2
RANGE $6926-$6928 DW_DATA 1
RANGE $6928-$6935 CODE
RANGE $6935-$694E CHAR_DATA 25
RANGE $694E-$6962 CHAR_DATA 20
RANGE $6962-$697C CHAR_DATA 26
RANGE $697C-$6995 CHAR_DATA 25
RANGE $6995-$69AA CHAR_DATA 21
RANGE $69AA-$69BA CHAR_DATA 16
RANGE $69BA-$69BE DW_DATA 2
RANGE $69BE-$69C2 DW_DATA 2
RANGE $69C2-$69C6 DW_DATA 2
RANGE $69C6-$69CA DW_DATA 2
RANGE $69CA-$69CE DW_DATA 2
RANGE $69CE-$69D2 DW_DATA 2
RANGE $69D2-$69D4 DW_DATA 1
RANGE $69D4-$69DE CHAR_DATA 10
RANGE $69DE-$69F9 CHAR_DATA 27
RANGE $69F9-$6A0E CHAR_DATA 21
RANGE $6A0E-$6A1C CHAR_DATA 14
RANGE $6A1C-$6A20 DW_DATA 2
RANGE $6A20-$6A24 DW_DATA 2
RANGE $6A24-$6A28 DW_DATA 2
RANGE $6A28-$6A2C DW_DATA 2
RANGE $6A2C-$6A2E DW_DATA 1
RANGE $6A2E-$6A42 CODE
RANGE $6A42-$6A5B CHAR_DATA 25
RANGE $6A5B-$6A66 CHAR_DATA 11
RANGE $6A66-$6A81 CHAR_DATA 27
RANGE $6A81-$6A97 CHAR_DATA 22
RANGE $6A97-$6AAC CHAR_DATA 21
RANGE $6AAC-$6ACB CHAR_DATA 31
RANGE $6ACB-$6ADC CHAR_DATA 17
RANGE $6ADC-$6AE0 DW_DATA 2
RANGE $6AE0-$6AE4 DW_DATA 2
RANGE $6AE4-$6AE8 DW_DATA 2
RANGE $6AE8-$6AEC DW_DATA 2
RANGE $6AEC-$6AF0 DW_DATA 2
RANGE $6AF0-$6AF4 DW_DATA 2
RANGE $6AF4-$6AF8 DW_DATA 2
RANGE $6AF8-$6AFA DW_DATA 1
RANGE $6AFA-$6B0D CODE
RANGE $6B0D-$6B2A CHAR_DATA 29
RANGE $6B2A-$6B47 CHAR_DATA 29
RANGE $6B47-$6B68 CHAR_DATA 33
RANGE $6B68-$6B83 CHAR_DATA 27
RANGE $6B83-$6B90 CHAR_DATA 13
RANGE $6B90-$6B94 DW_DATA 2
RANGE $6B94-$6B98 DW_DATA 2
RANGE $6B98-$6B9C DW_DATA 2
RANGE $6B9C-$6BA0 DW_DATA 2
RANGE $6BA0-$6BA4 DW_DATA 2
RANGE $6BA4-$6BA6 DW_DATA 1
RANGE $6BA6-$6BC4 CHAR_DATA 30
RANGE $6BC4-$6BE2 CHAR_DATA 30
RANGE $6BE2-$6BFC CHAR_DATA 26
RANGE $6BFC-$6C1A CHAR_DATA 30
RANGE $6C1A-$6C32 CHAR_DATA 24
RANGE $6C32-$6C4D CHAR_DATA 27
RANGE $6C4D-$6C5A CHAR_DATA 13
RANGE $6C5A-$6C5E DW_DATA 2
RANGE $6C5E-$6C62 DW_DATA 2
RANGE $6C62-$6C66 DW_DATA 2
RANGE $6C66-$6C6A DW_DATA 2
RANGE $6C6A-$6C6E DW_DATA 2
RANGE $6C6E-$6C72 DW_DATA 2
RANGE $6C72-$6C76 DW_DATA 2
RANGE $6C76-$6C78 DW_DATA 1
RANGE $6C78-$6C8C CODE
RANGE $6C8C-$6CA7 CHAR_DATA 27
RANGE $6CA7-$6CC1 CHAR_DATA 26
RANGE $6CC1-$6CE0 CHAR_DATA 31
RANGE $6CE0-$6CF9 CHAR_DATA 25
RANGE $6CF9-$6D18 CHAR_DATA 31
RANGE $6D18-$6D33 CHAR_DATA 27
RANGE $6D33-$6D4F CHAR_DATA 28
RANGE $6D4F-$6D53 DW_DATA 2
RANGE $6D53-$6D57 DW_DATA 2
RANGE $6D57-$6D5B DW_DATA 2
RANGE $6D5B-$6D5F DW_DATA 2
RANGE $6D5F-$6D63 DW_DATA 2
RANGE $6D63-$6D67 DW_DATA 2
RANGE $6D67-$6D6B DW_DATA 2
RANGE $6D6B-$6D6D DW_DATA 1
RANGE $6D6D-$6D88 CHAR_DATA 27
RANGE $6D88-$6DA2 CHAR_DATA 26
RANGE $6DA2-$6DBA CHAR_DATA 24
RANGE $6DBA-$6DBE DW_DATA 2
RANGE $6DBE-$6DC2 DW_DATA 2
RANGE $6DC2-$6DC6 DW_DATA 2
RANGE $6DC6-$6DC8 DW_DATA 1
RANGE $6DC8-$6DE6 CHAR_DATA 30
RANGE $6DE6-$6E01 CHAR_DATA 27
RANGE $6E01-$6E16 CHAR_DATA 21
RANGE $6E16-$6E31 CHAR_DATA 27
RANGE $6E31-$6E4F CHAR_DATA 30
RANGE $6E4F-$6E56 CHAR_DATA 7
RANGE $6E56-$6E5A DW_DATA 2
RANGE $6E5A-$6E5E DW_DATA 2
RANGE $6E5E-$6E62 DW_DATA 2
RANGE $6E62-$6E66 DW_DATA 2
RANGE $6E66-$6E6A DW_DATA 2
RANGE $6E6A-$6E6E DW_DATA 2
RANGE $6E6E-$6E70 DW_DATA 1
RANGE $6E70-$6E8B CODE
RANGE $6E8B-$6EA7 CHAR_DATA 28
RANGE $6EA7-$6EC0 CHAR_DATA 25
RANGE $6EC0-$6ED9 CHAR_DATA 25
RANGE $6ED9-$6EF2 CHAR_DATA 25
RANGE $6EF2-$6F0E CHAR_DATA 28
RANGE $6F0E-$6F27 CHAR_DATA 25
RANGE $6F27-$6F3B CHAR_DATA 20
RANGE $6F3B-$6F3F DW_DATA 2
RANGE $6F3F-$6F43 DW_DATA 2
RANGE $6F43-$6F47 DW_DATA 2
RANGE $6F47-$6F4B DW_DATA 2
RANGE $6F4B-$6F4F DW_DATA 2
RANGE $6F4F-$6F53 DW_DATA 2
RANGE $6F53-$6F57 DW_DATA 2
RANGE $6F57-$6F59 DW_DATA 1
RANGE $6F59-$6F74 CHAR_DATA 27
RANGE $6F74-$6F92 CHAR_DATA 30
RANGE $6F92-$6FA3 CHAR_DATA 17
RANGE $6FA3-$6FBF CHAR_DATA 28
RANGE $6FBF-$6FD0 CHAR_DATA 17
RANGE $6FD0-$6FE9 CHAR_DATA 25
RANGE $6FE9-$7005 CHAR_DATA 28
RANGE $7005-$7009 DW_DATA 2
RANGE $7009-$700D DW_DATA 2
RANGE $700D-$7011 DW_DATA 2
RANGE $7011-$7015 DW_DATA 2
RANGE $7015-$7019 DW_DATA 2
RANGE $7019-$701D DW_DATA 2
RANGE $701D-$7021 DW_DATA 2
RANGE $7021-$7023 DW_DATA 1
RANGE $7023-$7040 CHAR_DATA 29
RANGE $7040-$705E CHAR_DATA 30
RANGE $705E-$7071 CHAR_DATA 19
RANGE $7071-$708F CHAR_DATA 30
RANGE $708F-$709E CHAR_DATA 15
RANGE $709E-$70A2 DW_DATA 2
RANGE $70A2-$70A6 DW_DATA 2
RANGE $70A6-$70AA DW_DATA 2
RANGE $70AA-$70AE DW_DATA 2
RANGE $70AE-$70B2 DW_DATA 2
RANGE $70B2-$70B4 DW_DATA 1
RANGE $70B4-$70BD CHAR_DATA 9
RANGE $70BD-$70D8 CHAR_DATA 27
RANGE $70D8-$70F4 CHAR_DATA 28
RANGE $70F4-$70FA CHAR_DATA 6
RANGE $70FA-$7117 CHAR_DATA 29
RANGE $7117-$7126 CHAR_DATA 15
RANGE $7126-$712A DW_DATA 2
RANGE $712A-$712E DW_DATA 2
RANGE $712E-$7132 DW_DATA 2
RANGE $7132-$7136 DW_DATA 2
RANGE $7136-$713A DW_DATA 2
RANGE $713A-$713E DW_DATA 2
RANGE $713E-$7140 DW_DATA 1
RANGE $7140-$7145 CHAR_DATA 5
RANGE $7145-$7161 CHAR_DATA 28
RANGE $7161-$717E CHAR_DATA 29
RANGE $717E-$718E CHAR_DATA 16
RANGE $718E-$7193 CHAR_DATA 5
RANGE $7193-$71AF CHAR_DATA 28
RANGE $71AF-$71CA CHAR_DATA 27
RANGE $71CA-$71CE DW_DATA 2
RANGE $71CE-$71D2 DW_DATA 2
RANGE $71D2-$71D6 DW_DATA 2
RANGE $71D6-$71DA DW_DATA 2
RANGE $71DA-$71DE DW_DATA 2
RANGE $71DE-$71E2 DW_DATA 2
RANGE $71E2-$71E6 DW_DATA 2
RANGE $71E6-$71E8 DW_DATA 1
RANGE $71E8-$71EF CHAR_DATA 7
RANGE $71EF-$7208 CHAR_DATA 25
RANGE $7208-$720E CHAR_DATA 6
RANGE $720E-$7215 CHAR_DATA 7
RANGE $7215-$7233 CHAR_DATA 30
RANGE $7233-$724F CHAR_DATA 28
RANGE $724F-$725F CHAR_DATA 16
RANGE $725F-$7263 DW_DATA 2
RANGE $7263-$7267 DW_DATA 2
RANGE $7267-$726B DW_DATA 2
RANGE $726B-$726F DW_DATA 2
RANGE $726F-$7273 DW_DATA 2
RANGE $7273-$7277 DW_DATA 2
RANGE $7277-$727B DW_DATA 2
RANGE $727B-$727D DW_DATA 1
RANGE $727D-$72B3 CODE
RANGE $72B3-$72CD CHAR_DATA 26
RANGE $72CD-$72E9 CHAR_DATA 28
RANGE $72E9-$72FB CHAR_DATA 18
RANGE $72FB-$7316 CHAR_DATA 27
RANGE $7316-$7326 CHAR_DATA 16
RANGE $7326-$733E CHAR_DATA 24
RANGE $733E-$734E CHAR_DATA 16
RANGE $734E-$7352 DW_DATA 2
RANGE $7352-$7356 DW_DATA 2
RANGE $7356-$735A DW_DATA 2
RANGE $735A-$735E DW_DATA 2
RANGE $735E-$7362 DW_DATA 2
RANGE $7362-$7366 DW_DATA 2
RANGE $7366-$736A DW_DATA 2
RANGE $736A-$736C DW_DATA 1
RANGE $736C-$7377 CHAR_DATA 11
RANGE $7377-$7393 CHAR_DATA 28
RANGE $7393-$73B1 CHAR_DATA 30
RANGE $73B1-$73CD CHAR_DATA 28
RANGE $73CD-$73D7 CHAR_DATA 10
RANGE $73D7-$73DC CHAR_DATA 5
RANGE $73DC-$73F1 CHAR_DATA 21
RANGE $73F1-$7404 CHAR_DATA 19
RANGE $7404-$7408 DW_DATA 2
RANGE $7408-$740C DW_DATA 2
RANGE $740C-$7410 DW_DATA 2
RANGE $7410-$7414 DW_DATA 2
RANGE $7414-$7418 DW_DATA 2
RANGE $7418-$741C DW_DATA 2
RANGE $741C-$7420 DW_DATA 2
RANGE $7420-$7424 DW_DATA 2
RANGE $7424-$7426 DW_DATA 1
RANGE $7426-$7430 CHAR_DATA 10
RANGE $7430-$744E CHAR_DATA 30
RANGE $744E-$7469 CHAR_DATA 27
RANGE $7469-$747B CHAR_DATA 18
RANGE $747B-$7481 CHAR_DATA 6
RANGE $7481-$749B CHAR_DATA 26
RANGE $749B-$74B4 CHAR_DATA 25
RANGE $74B4-$74B8 DW_DATA 2
RANGE $74B8-$74BC DW_DATA 2
RANGE $74BC-$74C0 DW_DATA 2
RANGE $74C0-$74C4 DW_DATA 2
RANGE $74C4-$74C8 DW_DATA 2
RANGE $74C8-$74CC DW_DATA 2
RANGE $74CC-$74D0 DW_DATA 2
RANGE $74D0-$74D2 DW_DATA 1
RANGE $74D2-$74E2 CHAR_DATA 16
RANGE $74E2-$74FE CHAR_DATA 28
RANGE $74FE-$7516 CHAR_DATA 24
RANGE $7516-$751A DW_DATA 2
RANGE $751A-$751E DW_DATA 2
RANGE $751E-$7522 DW_DATA 2
RANGE $7522-$7524 DW_DATA 1
RANGE $7524-$7534 CHAR_DATA 16
RANGE $7534-$754F CHAR_DATA 27
RANGE $754F-$7567 CHAR_DATA 24
RANGE $7567-$757A CHAR_DATA 19
RANGE $757A-$757E DW_DATA 2
RANGE $757E-$7582 DW_DATA 2
RANGE $7582-$7586 DW_DATA 2
RANGE $7586-$758A DW_DATA 2
RANGE $758A-$758C DW_DATA 1
RANGE $758C-$75B5 CODE
RANGE $75B5-$75C9 CHAR_DATA 20
RANGE $75C9-$75E6 CHAR_DATA 29
RANGE $75E6-$7600 CHAR_DATA 26
RANGE $7600-$761B CHAR_DATA 27
RANGE $761B-$7626 CHAR_DATA 11
RANGE $7626-$763D CHAR_DATA 23
RANGE $763D-$7641 DW_DATA 2
RANGE $7641-$7645 DW_DATA 2
RANGE $7645-$7649 DW_DATA 2
RANGE $7649-$764D DW_DATA 2
RANGE $764D-$7651 DW_DATA 2
RANGE $7651-$7655 DW_DATA 2
RANGE $7655-$7657 DW_DATA 1
RANGE $7657-$7664 CODE
RANGE $7664-$767D CHAR_DATA 25
RANGE $767D-$768D CHAR_DATA 16
RANGE $768D-$76A5 CHAR_DATA 24
RANGE $76A5-$76C1 CHAR_DATA 28
RANGE $76C1-$76D4 CHAR_DATA 19
RANGE $76D4-$76F0 CHAR_DATA 28
RANGE $76F0-$76F4 DW_DATA 2
RANGE $76F4-$76F8 DW_DATA 2
RANGE $76F8-$76FC DW_DATA 2
RANGE $76FC-$7700 DW_DATA 2
RANGE $7700-$7704 DW_DATA 2
RANGE $7704-$7708 DW_DATA 2
RANGE $7708-$770A DW_DATA 1
RANGE $770A-$771D CODE
RANGE $771D-$7735 CHAR_DATA 24
RANGE $7735-$7739 DW_DATA 2
RANGE $7739-$773B DW_DATA 1
RANGE $773B-$7749 CODE
RANGE $7749-$775A CHAR_DATA 17
RANGE $775A-$7774 CHAR_DATA 26
RANGE $7774-$778D CHAR_DATA 25
RANGE $778D-$779E CHAR_DATA 17
RANGE $779E-$77A2 DW_DATA 2
RANGE $77A2-$77A6 DW_DATA 2
RANGE $77A6-$77AA DW_DATA 2
RANGE $77AA-$77AE DW_DATA 2
RANGE $77AE-$77B0 DW_DATA 1
RANGE $77B0-$77BE CODE
RANGE $77BE-$77CF CHAR_DATA 17
RANGE $77CF-$77E8 CHAR_DATA 25
RANGE $77E8-$7800 CHAR_DATA 24
RANGE $7800-$7810 CHAR_DATA 16
RANGE $7810-$7814 DW_DATA 2
RANGE $7814-$7818 DW_DATA 2
RANGE $7818-$781C DW_DATA 2
RANGE $781C-$7820 DW_DATA 2
RANGE $7820-$7822 DW_DATA 1
RANGE $7822-$7830 CODE
RANGE $7830-$7841 CHAR_DATA 17
RANGE $7841-$7859 CHAR_DATA 24
RANGE $7859-$7871 CHAR_DATA 24
RANGE $7871-$7881 CHAR_DATA 16
RANGE $7881-$7885 DW_DATA 2
RANGE $7885-$7889 DW_DATA 2
RANGE $7889-$788D DW_DATA 2
RANGE $788D-$7891 DW_DATA 2
RANGE $7891-$7893 DW_DATA 1
RANGE $7893-$78A1 CODE
RANGE $78A1-$78B2 CHAR_DATA 17
RANGE $78B2-$78CC CHAR_DATA 26
RANGE $78CC-$78E8 CHAR_DATA 28
RANGE $78E8-$78FD CHAR_DATA 21
RANGE $78FD-$7918 CHAR_DATA 27
RANGE $7918-$7931 CHAR_DATA 25
RANGE $7931-$7935 DW_DATA 2
RANGE $7935-$7939 DW_DATA 2
RANGE $7939-$793D DW_DATA 2
RANGE $793D-$7941 DW_DATA 2
RANGE $7941-$7945 DW_DATA 2
RANGE $7945-$7949 DW_DATA 2
RANGE $7949-$794B DW_DATA 1
RANGE $794B-$7959 CODE
RANGE $7959-$796A CHAR_DATA 17
RANGE $796A-$7981 CHAR_DATA 23
RANGE $7981-$798B CHAR_DATA 10
RANGE $798B-$79A0 CHAR_DATA 21
RANGE $79A0-$79A4 DW_DATA 2
RANGE $79A4-$79A8 DW_DATA 2
RANGE $79A8-$79AC DW_DATA 2
RANGE $79AC-$79B0 DW_DATA 2
RANGE $79B0-$79B2 DW_DATA 1
RANGE $79B2-$79C0 CODE
RANGE $79C0-$79D1 CHAR_DATA 17
RANGE $79D1-$79E6 CHAR_DATA 21
RANGE $79E6-$79FB CHAR_DATA 21
RANGE $79FB-$7A09 CHAR_DATA 14
RANGE $7A09-$7A0D DW_DATA 2
RANGE $7A0D-$7A11 DW_DATA 2
RANGE $7A11-$7A15 DW_DATA 2
RANGE $7A15-$7A19 DW_DATA 2
RANGE $7A19-$7A1B DW_DATA 1
RANGE $7A1B-$7A29 CODE
RANGE $7A29-$7A3A CHAR_DATA 17
RANGE $7A3A-$7A52 CHAR_DATA 24
RANGE $7A52-$7A61 CHAR_DATA 15
RANGE $7A61-$7A74 CHAR_DATA 19
RANGE $7A74-$7A8C CHAR_DATA 24
RANGE $7A8C-$7A9D CHAR_DATA 17
RANGE $7A9D-$7AB0 CHAR_DATA 19
RANGE $7AB0-$7AB4 DW_DATA 2
RANGE $7AB4-$7AB8 DW_DATA 2
RANGE $7AB8-$7ABC DW_DATA 2
RANGE $7ABC-$7AC0 DW_DATA 2
RANGE $7AC0-$7AC4 DW_DATA 2
RANGE $7AC4-$7AC8 DW_DATA 2
RANGE $7AC8-$7ACC DW_DATA 2
RANGE $7ACC-$7ACE DW_DATA 1
RANGE $7ACE-$7ADC CODE
RANGE $7ADC-$7AE3 CHAR_DATA 7
RANGE $7AE3-$7AF8 CHAR_DATA 21
RANGE $7AF8-$7B06 CHAR_DATA 14
RANGE $7B06-$7B15 CHAR_DATA 15
RANGE $7B15-$7B24 CHAR_DATA 15
RANGE $7B24-$7B32 CHAR_DATA 14
RANGE $7B32-$7B4E CHAR_DATA 28
RANGE $7B4E-$7B52 DW_DATA 2
RANGE $7B52-$7B56 DW_DATA 2
RANGE $7B56-$7B5A DW_DATA 2
RANGE $7B5A-$7B5E DW_DATA 2
RANGE $7B5E-$7B62 DW_DATA 2
RANGE $7B62-$7B66 DW_DATA 2
RANGE $7B66-$7B6A DW_DATA 2
RANGE $7B6A-$7B6C DW_DATA 1
RANGE $7B6C-$7B7A CODE
RANGE $7B7A-$7B85 CHAR_DATA 11
RANGE $7B85-$7B99 CHAR_DATA 20
RANGE $7B99-$7BAB CHAR_DATA 18
RANGE $7BAB-$7BC7 CHAR_DATA 28
RANGE $7BC7-$7BCB DW_DATA 2
RANGE $7BCB-$7BCF DW_DATA 2
RANGE $7BCF-$7BD3 DW_DATA 2
RANGE $7BD3-$7BD7 DW_DATA 2
RANGE $7BD7-$7BD9 DW_DATA 1
RANGE $7BD9-$7BE7 CODE
RANGE $7BE7-$7BF2 CHAR_DATA 11
RANGE $7BF2-$7C06 CHAR_DATA 20
RANGE $7C06-$7C16 CHAR_DATA 16
RANGE $7C16-$7C2E CHAR_DATA 24
RANGE $7C2E-$7C48 CHAR_DATA 26
RANGE $7C48-$7C64 CHAR_DATA 28
RANGE $7C64-$7C68 DW_DATA 2
RANGE $7C68-$7C6C DW_DATA 2
RANGE $7C6C-$7C70 DW_DATA 2
RANGE $7C70-$7C74 DW_DATA 2
RANGE $7C74-$7C78 DW_DATA 2
RANGE $7C78-$7C7C DW_DATA 2
RANGE $7C7C-$7C7E DW_DATA 1
RANGE $7C7E-$7C8C CODE
RANGE $7C8C-$7C91 CHAR_DATA 5
RANGE $7C91-$7C95 DW_DATA 2
RANGE $7C95-$7C97 DW_DATA 1
RANGE $7C97-$7CA5 CODE
RANGE $7CA5-$7CA9 CHAR_DATA 4
RANGE $7CA9-$7CAD DW_DATA 2
RANGE $7CAD-$7CAF DW_DATA 1
RANGE $7CAF-$7CBD CODE
RANGE $7CBD-$7CC9 CHAR_DATA 12
RANGE $7CC9-$7CDB CHAR_DATA 18
RANGE $7CDB-$7CE0 CHAR_DATA 5
RANGE $7CE0-$7CE8 CHAR_DATA 8
RANGE $7CE8-$7CFC CHAR_DATA 20
RANGE $7CFC-$8025 CODE
RANGE $8025-$8027 DW_DATA 1
RANGE $8027-$8029 DW_DATA 1
RANGE $8029-$802B DW_DATA 1
RANGE $802B-$802D DW_DATA 1
RANGE $802D-$802F DW_DATA 1
RANGE $802F-$8031 DW_DATA 1
RANGE $8031-$8033 DW_DATA 1
RANGE $8033-$81B7 CODE
RANGE $81B7-$81B9 DB_DATA 2
RANGE $81B9-$82AE CODE
RANGE $82AE-$82B8 DB_DATA 10
RANGE $82B8-$82C5 DB_DATA 13
RANGE $82C5-$82E7 DB_DATA 34
RANGE $82E7-$82F9 DB_DATA 18
RANGE $82F9-$82FF DB_DATA 6
RANGE $82FF-$8306 DB_DATA 7
RANGE $8306-$830C DB_DATA 6
RANGE $830C-$831B DB_DATA 15
RANGE $831B-$8321 DB_DATA 6
RANGE $8321-$8332 DB_DATA 17
RANGE $8332-$8333 DB_DATA 1
RANGE $8333-$8339 DB_DATA 6
RANGE $8339-$833E DB_DATA 5
RANGE $833E-$8344 DB_DATA 6
RANGE $8344-$834F DB_DATA 11
RANGE $834F-$8355 DB_DATA 6
RANGE $8355-$8366 DB_DATA 17
RANGE $8366-$836C DB_DATA 6
RANGE $836C-$8376 DB_DATA 10
RANGE $8376-$837C DB_DATA 6
RANGE $837C-$8388 DB_DATA 12
RANGE $8388-$838E DB_DATA 6
RANGE $838E-$839F DB_DATA 17
RANGE $839F-$83A5 DB_DATA 6
RANGE $83A5-$83AD DB_DATA 8
RANGE $83AD-$83B3 DB_DATA 6
RANGE $83B3-$83BB DB_DATA 8
RANGE $83BB-$83C1 DB_DATA 6
RANGE $83C1-$83C8 DB_DATA 7
RANGE $83C8-$83CE DB_DATA 6
RANGE $83CE-$83DE DB_DATA 16
RANGE $83DE-$83E4 DB_DATA 6
RANGE $83E4-$83EF DB_DATA 11
RANGE $83EF-$83F5 DB_DATA 6
RANGE $83F5-$83FF DB_DATA 10
RANGE $83FF-$8405 DB_DATA 6
RANGE $8405-$8415 DB_DATA 16
RANGE $8415-$841B DB_DATA 6
RANGE $841B-$8421 DB_DATA 6
RANGE $8421-$8427 DB_DATA 6
RANGE $8427-$8434 DB_DATA 13
RANGE $8434-$843A DB_DATA 6
RANGE $843A-$8449 DB_DATA 15
RANGE $8449-$844F DB_DATA 6
RANGE $844F-$845C DB_DATA 13
RANGE $845C-$8462 DB_DATA 6
RANGE $8462-$8469 DB_DATA 7
RANGE $8469-$846F DB_DATA 6
RANGE $846F-$8478 DB_DATA 9
RANGE $8478-$847E DB_DATA 6
RANGE $847E-$848D DB_DATA 15
RANGE $848D-$8493 DB_DATA 6
RANGE $8493-$849B DB_DATA 8
RANGE $849B-$84A2 DB_DATA 7
RANGE $84A2-$84A7 DB_DATA 5
RANGE $84A7-$84AE DB_DATA 7
RANGE $84AE-$84B4 DB_DATA 6
RANGE $84B4-$84B9 DB_DATA 5
RANGE $84B9-$84C2 DB_DATA 9
RANGE $84C2-$84CB DB_DATA 9
RANGE $84CB-$84D0 DB_DATA 5
RANGE $84D0-$84D6 DB_DATA 6
RANGE $84D6-$84DC DB_DATA 6
RANGE $84DC-$84E6 DB_DATA 10
RANGE $84E6-$84EF DB_DATA 9
RANGE $84EF-$84F8 DB_DATA 9
RANGE $84F8-$8501 DB_DATA 9
RANGE $8501-$8509 DB_DATA 8
RANGE $8509-$8516 DB_DATA 13
RANGE $8516-$8525 DB_DATA 15
RANGE $8525-$852C DB_DATA 7
RANGE $852C-$8537 DB_DATA 11
RANGE $8537-$8543 DB_DATA 12
RANGE $8543-$854B DB_DATA 8
RANGE $854B-$8552 DB_DATA 7
RANGE $8552-$8559 DB_DATA 7
RANGE $8559-$8563 DB_DATA 10
RANGE $8563-$8570 DB_DATA 13
RANGE $8570-$8576 DB_DATA 6
RANGE $8576-$857F DB_DATA 9
RANGE $857F-$8587 DB_DATA 8
RANGE $8587-$8593 DB_DATA 12
RANGE $8593-$85AD DW_DATA 13
RANGE $85AD-$85BB DW_DATA 7
RANGE $85BB-$85CB DW_DATA 8
RANGE $85CB-$883C CODE
RANGE $883C-$8856 CHAR_DATA 26
RANGE $8856-$8875 CHAR_DATA 31
RANGE $8875-$8894 CHAR_DATA 31
RANGE $8894-$88B3 CHAR_DATA 31
RANGE $88B3-$88D2 CHAR_DATA 31
RANGE $88D2-$88F1 CHAR_DATA 31
RANGE $88F1-$8910 CHAR_DATA 31
RANGE $8910-$892F CHAR_DATA 31
RANGE $892F-$894E CHAR_DATA 31
RANGE $894E-$896D CHAR_DATA 31
RANGE $896D-$898C CHAR_DATA 31
RANGE $898C-$89AB CHAR_DATA 31
RANGE $89AB-$89CA CHAR_DATA 31
RANGE $89CA-$89E9 CHAR_DATA 31
RANGE $89E9-$8A08 CHAR_DATA 31
RANGE $8A08-$8A27 CHAR_DATA 31
RANGE $8A27-$8A46 CHAR_DATA 31
RANGE $8A46-$8A65 CHAR_DATA 31
RANGE $8A65-$8A84 CHAR_DATA 31
RANGE $8A84-$8AA3 CHAR_DATA 31
RANGE $8AA3-$8AC2 CHAR_DATA 31
RANGE $8AC2-$8AE1 CHAR_DATA 31
RANGE $8AE1-$8B00 CHAR_DATA 31
RANGE $8B00-$8B1F CHAR_DATA 31
RANGE $8B1F-$8B3E CHAR_DATA 31
RANGE $8B3E-$8B5D CHAR_DATA 31
RANGE $8B5D-$8B7C CHAR_DATA 31
RANGE $8B7C-$8B9B CHAR_DATA 31
RANGE $8B9B-$8BBA CHAR_DATA 31
RANGE $8BBA-$8BD9 CHAR_DATA 31
RANGE $8BD9-$8BF8 CHAR_DATA 31
RANGE $8BF8-$8C17 CHAR_DATA 31
RANGE $8C17-$8C36 CHAR_DATA 31
RANGE $8C36-$8C55 CHAR_DATA 31
RANGE $8C55-$8C74 CHAR_DATA 31
RANGE $8C74-$8C93 CHAR_DATA 31
RANGE $8C93-$8CB2 CHAR_DATA 31
RANGE $8CB2-$8CD1 CHAR_DATA 31
RANGE $8CD1-$8CF0 CHAR_DATA 31
RANGE $8CF0-$8D0F CHAR_DATA 31
RANGE $8D0F-$8D2E CHAR_DATA 31
RANGE $8D2E-$8D4D CHAR_DATA 31
RANGE $8D4D-$8D6C CHAR_DATA 31
RANGE $8D6C-$8D8B CHAR_DATA 31
RANGE $8D8B-$8DAA CHAR_DATA 31
RANGE $8DAA-$8DC9 CHAR_DATA 31
RANGE $8DC9-$8DE8 CHAR_DATA 31
RANGE $8DE8-$8E07 CHAR_DATA 31
RANGE $8E07-$8E26 CHAR_DATA 31
RANGE $8E26-$8E45 CHAR_DATA 31
RANGE $8E45-$8E64 CHAR_DATA 31
RANGE $8E64-$8E83 CHAR_DATA 31
RANGE $8E83-$8EA2 CHAR_DATA 31
RANGE $8EA2-$8EC1 CHAR_DATA 31
RANGE $8EC1-$8EE0 CHAR_DATA 31
RANGE $8EE0-$8EFF CHAR_DATA 31
RANGE $8EFF-$8F1E CHAR_DATA 31
RANGE $8F1E-$8F3D CHAR_DATA 31
RANGE $8F3D-$8F5C CHAR_DATA 31
RANGE $8F5C-$8F7B CHAR_DATA 31
RANGE $8F7B-$8F9A CHAR_DATA 31
RANGE $8F9A-$8FB9 CHAR_DATA 31
RANGE $8FB9-$8FD8 CHAR_DATA 31
RANGE $8FD8-$8FF7 CHAR_DATA 31
RANGE $8FF7-$9016 CHAR_DATA 31
RANGE $9016-$9035 CHAR_DATA 31
RANGE $9035-$9054 CHAR_DATA 31
RANGE $9054-$9073 CHAR_DATA 31
RANGE $9073-$9092 CHAR_DATA 31
RANGE $9092-$90B1 CHAR_DATA 31
RANGE $90B1-$90D0 CHAR_DATA 31
RANGE $90D0-$90EF CHAR_DATA 31
RANGE $90EF-$910E CHAR_DATA 31
RANGE $910E-$912D CHAR_DATA 31
RANGE $912D-$914C CHAR_DATA 31
RANGE $914C-$916B CHAR_DATA 31
RANGE $916B-$918A CHAR_DATA 31
RANGE $918A-$91A9 CHAR_DATA 31
RANGE $91A9-$91C8 CHAR_DATA 31
RANGE $91C8-$91E7 CHAR_DATA 31
RANGE $91E7-$9206 CHAR_DATA 31
RANGE $9206-$9225 CHAR_DATA 31
RANGE $9225-$9244 CHAR_DATA 31
RANGE $9244-$9263 CHAR_DATA 31
RANGE $9263-$9282 CHAR_DATA 31
RANGE $9282-$92A1 CHAR_DATA 31
RANGE $92A1-$92C0 CHAR_DATA 31
RANGE $92C0-$92DF CHAR_DATA 31
RANGE $92DF-$92FE CHAR_DATA 31
RANGE $92FE-$931D CHAR_DATA 31
RANGE $931D-$933C CHAR_DATA 31
RANGE $933C-$935B CHAR_DATA 31
RANGE $935B-$937A CHAR_DATA 31
RANGE $937A-$9399 CHAR_DATA 31
RANGE $9399-$93B8 CHAR_DATA 31
RANGE $93B8-$93D7 CHAR_DATA 31
RANGE $93D7-$93F6 CHAR_DATA 31
RANGE $93F6-$9415 CHAR_DATA 31
RANGE $9415-$9434 CHAR_DATA 31
RANGE $9434-$9453 CHAR_DATA 31
RANGE $9453-$9472 CHAR_DATA 31
RANGE $9472-$9491 CHAR_DATA 31
RANGE $9491-$94B0 CHAR_DATA 31
RANGE $94B0-$94CF CHAR_DATA 31
RANGE $94CF-$954A CODE
RANGE $954A-$954B DB_DATA 1
RANGE $954B-$954C DB_DATA 1
RANGE $954C-$954D DB_DATA 1
RANGE $954D-$954E DB_DATA 1
RANGE $954E-$954F DB_DATA 1
RANGE $954F-$9551 DW_DATA 1
RANGE $9551-$9553 DW_DATA 1
RANGE $9553-$9555 DW_DATA 1
RANGE $9555-$9557 DW_DATA 1
RANGE $9557-$9559 DW_DATA 1
RANGE $9559-$9929 CODE
RANGE $9929-$992A DB_DATA 1
RANGE $992A-$992B DB_DATA 1
RANGE $992B-$992C DB_DATA 1
RANGE $992C-$992D DB_DATA 1
RANGE $992D-$992E DB_DATA 1
RANGE $992E-$992F DB_DATA 1
RANGE $992F-$9930 DB_DATA 1
RANGE $9930-$9931 DB_DATA 1
RANGE $9931-$9932 DB_DATA 1
RANGE $9932-$9933 DB_DATA 1
RANGE $9933-$9934 DB_DATA 1
RANGE $9934-$9935 DB_DATA 1
RANGE $9935-$9936 DB_DATA 1
RANGE $9936-$9937 DB_DATA 1
RANGE $9937-$9938 DB_DATA 1
RANGE $9938-$9939 DB_DATA 1
RANGE $9939-$993A DB_DATA 1
RANGE $993A-$993B DB_DATA 1
RANGE $993B-$993C DB_DATA 1
RANGE $993C-$993D DB_DATA 1
RANGE $993D-$993E DB_DATA 1
RANGE $993E-$993F DB_DATA 1
RANGE $993F-$9940 DB_DATA 1
RANGE $9940-$9941 DB_DATA 1
RANGE $9941-$9942 DB_DATA 1
RANGE $9942-$9943 DB_DATA 1
RANGE $9943-$9944 DB_DATA 1
RANGE $9944-$9945 DB_DATA 1
RANGE $9945-$9946 DB_DATA 1
RANGE $9946-$9947 DB_DATA 1
RANGE $9947-$9948 DB_DATA 1
RANGE $9948-$9949 DB_DATA 1
RANGE $9949-$994A DB_DATA 1
RANGE $994A-$994B DB_DATA 1
RANGE $994B-$994C DB_DATA 1
RANGE $994C-$994D DB_DATA 1
RANGE $994D-$994E DB_DATA 1
RANGE $994E-$994F DB_DATA 1
RANGE $994F-$9950 DB_DATA 1
RANGE $9950-$9951 DB_DATA 1
RANGE $9951-$9952 DB_DATA 1
RANGE $9952-$9953 DB_DATA 1
RANGE $9953-$9954 DB_DATA 1
RANGE $9954-$9955 DB_DATA 1
RANGE $9955-$9956 DB_DATA 1
RANGE $9956-$9957 DB_DATA 1
RANGE $9957-$9958 DB_DATA 1
RANGE $9958-$9959 DB_DATA 1
RANGE $9959-$995A DB_DATA 1
RANGE $995A-$995B DB_DATA 1
RANGE $995B-$995C DB_DATA 1
RANGE $995C-$995D DB_DATA 1
RANGE $995D-$995E DB_DATA 1
RANGE $995E-$995F DB_DATA 1
RANGE $995F-$9962 DB_DATA 3
RANGE $9962-$9965 DB_DATA 3
RANGE $9965-$9968 DB_DATA 3
RANGE $9968-$996B DB_DATA 3
RANGE $996B-$996E DB_DATA 3
RANGE $996E-$9971 DB_DATA 3
RANGE $9971-$9974 DB_DATA 3
RANGE $9974-$9977 DB_DATA 3
RANGE $9977-$997A DB_DATA 3
RANGE $997A-$997D DB_DATA 3
RANGE $997D-$9980 DB_DATA 3
RANGE $9980-$9983 DB_DATA 3
RANGE $9983-$9986 DB_DATA 3
RANGE $9986-$9989 DB_DATA 3
RANGE $9989-$998C DB_DATA 3
RANGE $998C-$998F DB_DATA 3
RANGE $998F-$9992 DB_DATA 3
RANGE $9992-$9995 DB_DATA 3
RANGE $9995-$9996 DB_DATA 1
RANGE $9996-$9999 DB_DATA 3
RANGE $9999-$999C DB_DATA 3
RANGE $999C-$999F DB_DATA 3
RANGE $999F-$99A2 DB_DATA 3
RANGE $99A2-$99A5 DB_DATA 3
RANGE $99A5-$99A8 DB_DATA 3
RANGE $99A8-$99AB DB_DATA 3
RANGE $99AB-$99AE DB_DATA 3
RANGE $99AE-$99B1 DB_DATA 3
RANGE $99B1-$99B4 DB_DATA 3
RANGE $99B4-$99B7 DB_DATA 3
RANGE $99B7-$99BA DB_DATA 3
RANGE $99BA-$99BD DB_DATA 3
RANGE $99BD-$99C0 DB_DATA 3
RANGE $99C0-$99C3 DB_DATA 3
RANGE $99C3-$99C6 DB_DATA 3
RANGE $99C6-$99C9 DB_DATA 3
RANGE $99C9-$99CC DB_DATA 3
RANGE $99CC-$99CF DB_DATA 3
RANGE $99CF-$99D2 DB_DATA 3
RANGE $99D2-$99D5 DB_DATA 3
RANGE $99D5-$99D8 DB_DATA 3
RANGE $99D8-$99D9 DB_DATA 1
RANGE $99D9-$99DC DB_DATA 3
RANGE $99DC-$99DF DB_DATA 3
RANGE $99DF-$99E2 DB_DATA 3
RANGE $99E2-$99E5 DB_DATA 3
RANGE $99E5-$99E8 DB_DATA 3
RANGE $99E8-$99EB DB_DATA 3
RANGE $99EB-$99EE DB_DATA 3
RANGE $99EE-$99F1 DB_DATA 3
RANGE $99F1-$99F4 DB_DATA 3
RANGE $99F4-$99F7 DB_DATA 3
RANGE $99F7-$99FA DB_DATA 3
RANGE $99FA-$99FD DB_DATA 3
RANGE $99FD-$9A00 DB_DATA 3
RANGE $9A00-$9A03 DB_DATA 3
RANGE $9A03-$9A04 DB_DATA 1
RANGE $9A04-$9A07 DB_DATA 3
RANGE $9A07-$9A0A DB_DATA 3
RANGE $9A0A-$9A0D DB_DATA 3
RANGE $9A0D-$9A10 DB_DATA 3
RANGE $9A10-$9A13 DB_DATA 3
RANGE $9A13-$9A16 DB_DATA 3
RANGE $9A16-$9A19 DB_DATA 3
RANGE $9A19-$9A1C DB_DATA 3
RANGE $9A1C-$9A1F DB_DATA 3
RANGE $9A1F-$9A22 DB_DATA 3
RANGE $9A22-$9A25 DB_DATA 3
RANGE $9A25-$9A28 DB_DATA 3
RANGE $9A28-$9A29 DB_DATA 1
RANGE $9A29-$9C51 CODE
RANGE $9C51-$9C61 CHAR_DATA 16
RANGE $9C61-$9C76 CHAR_DATA 21
RANGE $9C76-$9C86 CHAR_DATA 16
RANGE $9C86-$9D9A CODE
RANGE $9D9A-$9D9B DB_DATA 1
RANGE $9D9B-$9D9C DB_DATA 1
RANGE $9D9C-$9D9D DB_DATA 1
RANGE $9D9D-$9D9E DB_DATA 1
RANGE $9D9E-$9D9F DB_DATA 1
RANGE $9D9F-$9DA0 DB_DATA 1
RANGE $9DA0-$9DA1 DB_DATA 1
RANGE $9DA1-$9DA2 DB_DATA 1
RANGE $9DA2-$9DA8 DB_DATA 6
RANGE $9DA8-$9DA9 DB_DATA 1
RANGE $9DA9-$9DAA DB_DATA 1
RANGE $9DAA-$9DB2 CHAR_DATA 8
RANGE $9DB2-$9DBA CHAR_DATA 8
RANGE $9DBA-$9DC2 CHAR_DATA 8
RANGE $9DC2-$9DCA CHAR_DATA 8
RANGE $B000-$B001 DB_DATA 1
RANGE $B001-$B002 DB_DATA 1
RANGE $B002-$B003 DB_DATA 1
RANGE $B003-$B004 DB_DATA 1
RANGE $B004-$B005 DB_DATA 1
RANGE $B005-$B006 DB_DATA 1
RANGE $B006-$B007 DB_DATA 1
RANGE $B007-$B008 DB_DATA 1
RANGE $B008-$B00E DB_DATA 6
RANGE $B00E-$B00F DB_DATA 1
RANGE $B00F-$B010 DB_DATA 1
RANGE $B010-$B018 CHAR_DATA 8
RANGE $B018-$B020 CHAR_DATA 8
RANGE $B020-$B028 CHAR_DATA 8
RANGE $B028-$B030 CHAR_DATA 8
RANGE $B030-$B038 CHAR_DATA 8
RANGE $B038-$B040 CHAR_DATA 8
RANGE $B040-$B048 CHAR_DATA 8
RANGE $B048-$B050 CHAR_DATA 8
RANGE $B050-$BFE0 DB_DATA 3984

