BANK 3
EQU $01 QUAD_BANK
EQU $03 CURRENT_BANK
EQU $00 TESTING
COMMENT_LABEL $00 switch between usiong TEST/Debug values (defined below)
EQU $00 TIMER_LEVEL
COMMENT_LABEL $00 if defined there is a time trialmodus, but implementaion not finished.
EQU $01 DO_DYING_BONUS
COMMENT_LABEL $01 on death sprawl up to 5 bonus items, whoch might be lost upon a death
EQU $01 ERRATIC_STARTING_WITH_HARD
COMMENT_LABEL $01 else startng with NORMAL
EQU $01 REDUCED_OBJECT_SIZE
COMMENT_LABEL $01 TODO: ram object use only 1 byte to encode the following object (not finished)
EQU $00 USE_BIG_STACK
COMMENT_LABEL $00 this reduces bonus on screen from 6 to 4 gives 16 bytes more stack
EQU $00 NMI_HANDLER
COMMENT_LABEL $00 NMI handler is not faulty resistent!
EQU $00 RECORD_GAME_DATA
COMMENT_LABEL $00 if enabled game and gameplay will be saved each level to "gamesave" location ($a000)
EQU $00 INCLUDE_NMI_TIMING
COMMENT_LABEL $00 NMI handler also displays T1 / T2 (after NMI is entered)
EQU $01 DRAW_FIGHTER_IN_BANK0
COMMENT_LABEL $01 than different "evolving" fighters are drawn (each shot) ... tiny bit slower than in bank 3
EQU $00 IS_VIA_FAULTY_RESISTENT
COMMENT_LABEL $00 no DEC, INC on VIA_Port_b, no BIOS calls - there are 1 or 2 "new" instances, where this is not correctly handled!
LABEL $CBFC MY_STACK
COMMENT_LABEL $CBFC overall stack frame start, uses (obviously) also interrupt vectors etc
EQU $01 SCOOPY_HIT_LARGE_OBJECT
COMMENT_LABEL $01 if defined, "center" hits on large enemies, also devour scoopy hits automatically
EQU $00 TEST_ALL_SHOTS
COMMENT_LABEL $00 makes all sorts of trouble with different enemy/size types ; if one, than from a certain enemy count all shots are tested, if not defined than always test with two saelected shots
EQU $03 ENEMY_THRESHOLD
COMMENT_LABEL $03 or less enemies are tested with ALL shots, more enemies are only tested with 2 selected shots
EQU $00 USE_NEW_SHOTS
COMMENT_LABEL $00 use vertical shots instead of horizontal shots -> slightly faster but way more ugly!
EQU $00 BIOS_WR
COMMENT_LABEL $00 use BIOS WR in main loop, slower but more easy to measure!
EQU $01 ENABLE_STAR_TACSCAN
COMMENT_LABEL $01 if joytick moves - star move opposite
EQU $01 TEST_VOX
COMMENT_LABEL $01 if enabled Vec Vox is used in game
EQU $00 CORRECT_START_LEVEL
COMMENT_LABEL $00 if 1, than level 25 == level 25, not boss!
EQU $00 VECFEVER
EQU $01 ALLOW_SAVING
EQU $00 EASY
EQU $01 NORMAL
EQU $02 HARD
EQU $03 IMPOSSIBLE
EQU $04 SUPER_IMPOSSIBLE
EQU -$01 HARDCORE
EQU $7F DRUNKEN_TIME
COMMENT_LABEL $7F positive - or code for "countdown display must be changed! (bank 0 Fighter Prep)
EQU $00 DEFAULT_DIFFICULTY
EQU $01 SHORT_INVULNERABILITY
LABEL $00DC WARP_FAILURE_BORDER
EQU $00 IMMUNITY_START
EQU $00 LOCK_START
EQU $00 START_LEVEL
EQU $02 START_SHOT_NUMBER
COMMENT_LABEL $02 2
EQU $01 START_SHOT_WIDTH
COMMENT_LABEL $01 1-4 normal shots, 5 triangle shot, 6 lazer
LABEL $01F4 START_FIGHTER_SPEED
LABEL $01F4 START_SHOT_SPEED
EQU $19 SPEED_DELTA
COMMENT_LABEL $19 both shot and player
LABEL $01F4 START_TIMER_MAX
COMMENT_LABEL $01F4 10 seconds
LABEL $012C MEGAFIEND_HP
LABEL $012C MONEYSUCKER_HP
EQU $00 DEAFULT_START_MONEY
EQU $03 PLAYER_START_LIVES
EQU $00 START_POWER
EQU $00 INGAMESECRETS
EQU $32 SUPER_DIAMOND_BORDER
EQU $01 UP
EQU $03 RIGHT
EQU $05 DOWN
EQU $07 LEFT
EQU $00 NONE
EQU $00 START_BANK
EQU $19 EXPLOSION_MAX_SCALE
EQU $06 MAX_BULLET_POWER_ADJUST
EQU $00 SHOT_RADIUS0
EQU $09 SHOT_RADIUS1
COMMENT_LABEL $09 all Radius must be different
EQU $0E SHOT_RADIUS2
COMMENT_LABEL $0E the radius is also used to determine the current shot type!
EQU $12 SHOT_RADIUS3
EQU $18 SHOT_RADIUS4
COMMENT_LABEL $18 maximum, otherwise col detect fucks up!
EQU $0A SHOT_RADIUS5
COMMENT_LABEL $0A all Radius must be different
EQU $08 SHOT_RADIUS6
COMMENT_LABEL $08 all Radius must be different
EQU $01 COLLECTED_RANK1
EQU $02 COLLECTED_RANK2
EQU $04 COLLECTED_RANK3
EQU $08 COLLECTED_RANK4
EQU $10 COLLECTED_RANK5
EQU $20 COLLECTED_RANK6
EQU $40 COLLECTED_RANK_NEGATIVE
COMMENT_LABEL $40 not implemented
EQU $0A SAUCER_START_DELAY
COMMENT_LABEL $0A seconds
LABEL $00D0 SUCKER_YPOS
EQU $0A MONEY_SUCK_WAIT
COMMENT_LABEL $0A rounds = 1/5 second
EQU $23 MAX_PLAYER_EXPLOSION_SIZE
EQU $00 MESSAGE_STATE_STAY
EQU $01 MESSAGE_STATE_SCROLL_NORMAL_OUT
EQU $02 MESSAGE_STATE_SCROLL_MESSAGE_IN
EQU $03 MESSAGE_STATE_STAY_TIMED
EQU $04 MESSAGE_STATE_SCROLL_MESSAGE_OUT
EQU $05 MESSAGE_STATE_SCROLL_NORMAL_IN
LABEL $0080 PLAYER_YPOS
LABEL $03E8 MAX_PLAYER_SPEED
LABEL $00C8 MIN_PLAYER_SPEED
LABEL $03E8 MAX_SHOT_SPEED
LABEL $00C8 MIN_SHOT_SPEED
EQU $32 DELAY_TO_REAPEAR
COMMENT_LABEL $32 1 s - how long the enemies "disappear" after their initial attack phase
EQU $07 OBJECT_SCALE
COMMENT_LABEL $07 9
EQU $19 STRING_SCALE
EQU $03 ANIMATION_DELAY
COMMENT_LABEL $03 for ALL animation in game
EQU $3F DEFAULT_ENEMY_INTENSITY
EQU $02 ATTACK_PATTERN_PROBABILITY
EQU $05 HIT_FLASH_LENGTH
COMMENT_LABEL $05 should be smaller than smallest P_START_DELAY_OF_PATTERN
EQU $32 VB_SPRITE_SCALE50
EQU $32 BOSS_SPRITE_SCALE
EQU $01 LEVEL_TYPE_NORMAL
EQU $02 LEVEL_TYPE_KAMIKAZE
EQU $03 LEVEL_TYPE_BIGGY
EQU $04 LEVEL_TYPE_BONUS
COMMENT_LABEL $04 akill all to get special bonus, enemies don't shoot
EQU $05 LEVEL_TYPE_BOSS1
EQU $06 LEVEL_TYPE_BOSS2
EQU $07 LEVEL_TYPE_BOSS3
EQU $08 LEVEL_TYPE_BOSS4
EQU $09 LEVEL_TYPE_FAILURE
LABEL $0080 LEVEL_TYPE_SHOP_AFTER
EQU $40 LEVEL_TYPE_WARP_AFTER
EQU $20 LEVEL_TYPE_DONT_SHOOT_WHILE_WAITING
EQU $10 LEVEL_APPEAR_AT_WAITING
EQU $0C CLONE_MAX_ENEMY_DISPLAYED
COMMENT_LABEL $0C only allow cloning when maximum 12 enemies are visible!
EQU $00 TYPE_NONE
EQU $01 TYPE_DIRECT_WAIT
COMMENT_LABEL $01 they don't delay after attack pattern in "off" but move directly to their waiting position
EQU $02 TYPE_DONT_SHOOT
COMMENT_LABEL $02 they never shhot
EQU $04 TYPE_DONT_ATTACK
COMMENT_LABEL $04 they never enter an attack pattern
EQU $08 TYPE_DONT_WAIT
COMMENT_LABEL $08 kamikaze type attackers which do never wait
EQU $10 _UNUSED_TYPE_SINGLE_ANIMATION
COMMENT_LABEL $10 this enemy has no "angle" it always animates the "same" (not implemented
EQU $20 TYPE_CAN_CLONE
COMMENT_LABEL $20 while starting an attack pattern, enemy can clone itself
EQU $40 TYPE_DEBRIS_BOMBER
COMMENT_LABEL $40 does not explode while dying, but drops a "debris" bomb :-)
LABEL $0080 TYPE_SHIELD
COMMENT_LABEL $0080 can not be destroyed, doesn't count as "level finsih enemy", they don't wobble while waiting
EQU $00 SINGLE_ATTACK_RELATIVE_PATTERN
COMMENT_LABEL $00 relative means - it uses the current position of the enemy as start
EQU $01 SINGLE_ATTACK_TARGET_ENEMY_PATTERN
COMMENT_LABEL $01 TARGET - uses somehow the players coordinate as coordinate info
EQU $02 SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LABEL $02 moves from current position to an absolut screen position
EQU $03 SINGLE_ATTACK_JUMP
COMMENT_LABEL $03 init another pattern , position int speed, subposition = to 0
EQU $64 BOSS2_HITPOINTS
COMMENT_LABEL $64 Insect Queen
LABEL $00C8 BOSS1_HITPOINTS
COMMENT_LABEL $00C8 Mecha
LABEL $017C BOSS3_HITPOINTS
COMMENT_LABEL $017C Sinistar
LABEL $00C8 BOSS4_HITPOINTS
COMMENT_LABEL $00C8 Death star
EQU -$20 SWARM_MIN_X
COMMENT_LABEL -$20 rectangle where the swarm will move in (or is headed to)
EQU $20 SWARM_MAX_X
EQU -$40 SWARM_MIN_Y
EQU -$10 SWARM_MAX_Y
EQU $01 SWARM_HP
COMMENT_LABEL $01 hit points of a single swarm member
EQU -$40 TRIBBLE_MIN_X
COMMENT_LABEL -$40 rectangle where the tribbles will move in (or is headed to)
EQU $40 TRIBBLE_MAX_X
EQU -$40 TRIBBLE_MIN_Y
EQU $40 TRIBBLE_MAX_Y
EQU $00 A_SNIPER_RANK3
EQU $02 A_SNIPER_RANK2
EQU $04 A_SNIPER_RANK1
EQU $06 A_SCORE_RANK5
EQU $08 A_SCORE_RANK4
EQU $0A A_SCORE_RANK3
EQU $0C A_SCORE_RANK2
EQU $0E A_SCORE_RANK1
EQU $10 A_MONEY_RANK5
EQU $12 A_MONEY_RANK4
EQU $14 A_MONEY_RANK3
EQU $16 A_MONEY_RANK2
EQU $18 A_MONEY_RANK1
EQU $1A A_GREEDY
EQU $1C A_9LIVES
EQU $1E A_ALL
EQU $20 A_BLADEMASTER_RANK_5
EQU $22 A_BLADEMASTER_RANK_4
EQU $24 A_BLADEMASTER_RANK_3
EQU $26 A_BLADEMASTER_RANK_2
EQU $28 A_BLADEMASTER_RANK_1
EQU $2A A_TRIPPLE
EQU $2C A_QUADRO
EQU $2E A_LASER
EQU $30 A_OFFICER_RANK4
EQU $32 A_OFFICER_RANK3
EQU $34 A_OFFICER_RANK2
EQU $36 A_OFFICER_RANK1
EQU $38 A_SPY_RANK4
EQU $3A A_SPY_RANK3
EQU $3C A_SPY_RANK2
EQU $3E A_SPY_RANK1
EQU $40 A_BONUS_RANK4
EQU $42 A_BONUS_RANK3
EQU $44 A_BONUS_RANK2
EQU $46 A_BONUS_RANK1
EQU $48 A_LOSS
EQU $4A A_FALCON
EQU $4C A_DRUNKEN
EQU $01 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK3
COMMENT_LABEL $01 checked at the end of each game
EQU $02 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK2
EQU $04 ACHIEVEMENT_FLAG_BYTE1_SNIPER_RANK1
EQU $08 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK5
COMMENT_LABEL $08 checked at the end of each game
EQU $10 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK4
EQU $20 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK3
EQU $40 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK2
LABEL $0080 ACHIEVEMENT_FLAG_BYTE1_SCORER_RANK1
EQU $01 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK5
COMMENT_LABEL $01 checked at the start of each shop
EQU $02 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK4
EQU $04 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK3
EQU $08 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK2
EQU $10 ACHIEVEMENT_FLAG_BYTE2_COLLECTOR_RANK1
EQU $20 ACHIEVEMENT_FLAG_BYTE2_GREEDY
COMMENT_LABEL $20 check when collected / bought
EQU $40 ACHIEVEMENT_FLAG_BYTE2_9LIVES
COMMENT_LABEL $40 checked when a live is bought
LABEL $0080 ACHIEVEMENT_FLAG_BYTE2_ALL
COMMENT_LABEL $0080 checked at the end of each game
EQU $01 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK5
COMMENT_LABEL $01 checked each roll over
EQU $02 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK4
EQU $04 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK3
EQU $08 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK2
EQU $10 ACHIEVEMENT_FLAG_BYTE3_BLADEMASTER_RANK1
EQU $20 ACHIEVEMENT_FLAG_BYTE3_TRIPPLE
COMMENT_LABEL $20 checked on EXTRA / level finish
EQU $40 ACHIEVEMENT_FLAG_BYTE3_QUADRO
LABEL $0080 ACHIEVEMENT_FLAG_BYTE3_LASER
EQU $01 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK4
COMMENT_LABEL $01 checked on officer level up! (after shop)
EQU $02 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK3
EQU $04 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK2
EQU $08 ACHIEVEMENT_FLAG_BYTE4_OFFICER_RANK1
EQU $10 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK4
COMMENT_LABEL $10 check when secret is discovered / end of game
EQU $20 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3
EQU $40 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK2
LABEL $0080 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1
EQU $01 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE1
COMMENT_LABEL $01 bit "number" 0-7
EQU $02 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE2
COMMENT_LABEL $02 up that "secret message" was read already!
EQU $04 ACHIEVEMENT_FLAG_BYTE5_NOT_DONE3
EQU $08 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK4
COMMENT_LABEL $08 check after challenge
EQU $10 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK3
EQU $20 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK2
EQU $40 ACHIEVEMENT_FLAG_BYTE5_CHALLENGER_RANK1
LABEL $0080 ACHIEVEMENT_FLAG_BYTE5_BIGGEST_LOSS
COMMENT_LABEL $0080 check on shot on collect
EQU $01 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_FALCON
COMMENT_LABEL $01 checked at the end of each minestorm
EQU $02 ACHIEVEMENT_FLAG_BYTE6_MINESTORM_DRUNKEN
EQU $17 SCOOP_RIGHT_PLAYER_XOFFSET
EQU -$17 SCOOP_LEFT_PLAYER_XOFFSET
LABEL $0082 SCOOP_PLAYER_YPOS
EQU -$02 BONUS_MONEY_200
EQU $00 BONUS_E
EQU $02 BONUS_X
EQU $04 BONUS_T
EQU $06 BONUS_R
EQU $08 BONUS_A
EQU $0A BONUS_SHOTPLUS
EQU $0C BONUS_FASTER
EQU $0E BONUS_FASTER_SHOT
EQU $10 BONUS_SLOWER
EQU $12 BONUS_SHOTMINUS
EQU $14 BONUS_MONEY_5
EQU $16 BONUS_MONEY_20
EQU $18 BONUS_MONEY_50
EQU $1A BONUS_ARMOR
EQU $1C BONUS_SHIELD
EQU $1E BONUS_SCOOP
EQU $20 BONUS_SHOT1
EQU $22 BONUS_SHOT2
EQU $24 BONUS_SHOT3
EQU $26 BONUS_SHOT4
EQU $28 BONUS_MINESTORM
EQU $2A BONUS_MULT2
EQU $2C BONUS_MULT5
EQU $2E BONUS_BOMB_CASH
EQU $30 BONUS_BOMB_DIAMOND
EQU $32 BONUS_TIMER
EQU $34 BONUS_SLOWER_SHOT
EQU $36 BONUS_CASH_DOUBLER
EQU $38 BONUS_SHOT_POWERUP
EQU $3A BONUS_EXTRA_LIFE
EQU $3C BONUS_DRUNKEN
EQU $3E BONUS_AUTOFIRE
LABEL $C800 Vec_Snd_Shadow
COMMENT_LABEL $C800 Shadow of sound chip registers (15 bytes)
LABEL $C80F Vec_Btn_State
COMMENT_LABEL $C80F Current state of all joystick buttons
LABEL $C810 Vec_Prev_Btns
COMMENT_LABEL $C810 Previous state of all joystick buttons
LABEL $C811 Vec_Buttons
COMMENT_LABEL $C811 Current toggle state of all buttons
LABEL $C812 Vec_Button_1_1
COMMENT_LABEL $C812 Current toggle state of stick 1 button 1
LABEL $C813 Vec_Button_1_2
COMMENT_LABEL $C813 Current toggle state of stick 1 button 2
LABEL $C814 Vec_Button_1_3
COMMENT_LABEL $C814 Current toggle state of stick 1 button 3
LABEL $C815 Vec_Button_1_4
COMMENT_LABEL $C815 Current toggle state of stick 1 button 4
LABEL $C816 Vec_Button_2_1
COMMENT_LABEL $C816 Current toggle state of stick 2 button 1
LABEL $C817 Vec_Button_2_2
COMMENT_LABEL $C817 Current toggle state of stick 2 button 2
LABEL $C818 Vec_Button_2_3
COMMENT_LABEL $C818 Current toggle state of stick 2 button 3
LABEL $C819 Vec_Button_2_4
COMMENT_LABEL $C819 Current toggle state of stick 2 button 4
LABEL $C81A Vec_Joy_Resltn
COMMENT_LABEL $C81A Joystick A/D resolution ($80=min $00=max)
LABEL $C81B Vec_Joy_1_X
COMMENT_LABEL $C81B Joystick 1 left/right
LABEL $C81C Vec_Joy_1_Y
COMMENT_LABEL $C81C Joystick 1 up/down
LABEL $C81D Vec_Joy_2_X
COMMENT_LABEL $C81D Joystick 2 left/right
LABEL $C81E Vec_Joy_2_Y
COMMENT_LABEL $C81E Joystick 2 up/down
LABEL $C81F Vec_Joy_Mux
COMMENT_LABEL $C81F Joystick enable/mux flags (4 bytes)
LABEL $C81F Vec_Joy_Mux_1_X
COMMENT_LABEL $C81F Joystick 1 X enable/mux flag (=1)
LABEL $C820 Vec_Joy_Mux_1_Y
COMMENT_LABEL $C820 Joystick 1 Y enable/mux flag (=3)
LABEL $C821 Vec_Joy_Mux_2_X
COMMENT_LABEL $C821 Joystick 2 X enable/mux flag (=5)
LABEL $C822 Vec_Joy_Mux_2_Y
COMMENT_LABEL $C822 Joystick 2 Y enable/mux flag (=7)
LABEL $C823 Vec_Misc_Count
COMMENT_LABEL $C823 Misc counter/flag byte, zero when not in use
LABEL $C824 Vec_0Ref_Enable
COMMENT_LABEL $C824 Check0Ref enable flag
LABEL $C825 Vec_Loop_Count
COMMENT_LABEL $C825 Loop counter word (incremented in Wait_Recal)
LABEL $C827 Vec_Brightness
COMMENT_LABEL $C827 Default brightness
LABEL $C828 Vec_Dot_Dwell
COMMENT_LABEL $C828 Dot dwell time?
LABEL $C829 Vec_Pattern
COMMENT_LABEL $C829 Dot pattern (bits)
LABEL $C82A Vec_Text_HW
COMMENT_LABEL $C82A Default text height and width
LABEL $C82A Vec_Text_Height
COMMENT_LABEL $C82A Default text height
LABEL $C82B Vec_Text_Width
COMMENT_LABEL $C82B Default text width
LABEL $C82C _Vec_Str_Ptr
COMMENT_LABEL $C82C Temporary string pointer for Print_Str
LABEL $C82E Vec_Counters
COMMENT_LABEL $C82E Six bytes of counters
LABEL $C82E Vec_Counter_1
COMMENT_LABEL $C82E First counter byte
LABEL $C82F Vec_Counter_2
COMMENT_LABEL $C82F Second counter byte
LABEL $C830 Vec_Counter_3
COMMENT_LABEL $C830 Third counter byte
LABEL $C831 Vec_Counter_4
COMMENT_LABEL $C831 Fourth counter byte
LABEL $C832 Vec_Counter_5
COMMENT_LABEL $C832 Fifth counter byte
LABEL $C833 Vec_Counter_6
COMMENT_LABEL $C833 Sixth counter byte
LABEL $C834 Vec_RiseRun_Tmp
COMMENT_LABEL $C834 Temp storage word for rise/run
LABEL $C836 Vec_Angle
COMMENT_LABEL $C836 Angle for rise/run and rotation calculations
LABEL $C837 Vec_Run_Index
COMMENT_LABEL $C837 Index pair for run
LABEL $C839 Vec_Rise_Index
COMMENT_LABEL $C839 Index pair for rise
LABEL $C83B Vec_RiseRun_Len
COMMENT_LABEL $C83B length for rise/run
LABEL $C83D Vec_Rfrsh
COMMENT_LABEL $C83D Refresh time (divided by 1.5MHz)
LABEL $C83D Vec_Rfrsh_lo
COMMENT_LABEL $C83D Refresh time low byte
LABEL $C83E Vec_Rfrsh_hi
COMMENT_LABEL $C83E Refresh time high byte
LABEL $C83F Vec_Music_Work
COMMENT_LABEL $C83F 13 Music work buffer (14 bytes, backwards?)
LABEL $C842 Vec_Music_Wk_A
COMMENT_LABEL $C842 register 10
LABEL $C845 Vec_Music_Wk_7
COMMENT_LABEL $C845 register 7
LABEL $C846 Vec_Music_Wk_6
COMMENT_LABEL $C846 register 6
LABEL $C847 Vec_Music_Wk_5
COMMENT_LABEL $C847 register 5
LABEL $C84B Vec_Music_Wk_1
COMMENT_LABEL $C84B register 1
LABEL $C84D Vec_Freq_Table
COMMENT_LABEL $C84D Pointer to note-to-frequency table (normally $FC8D)
LABEL $C84F Vec_Max_Players
COMMENT_LABEL $C84F Maximum number of players for Select_Game
LABEL $C850 Vec_Max_Games
COMMENT_LABEL $C850 Maximum number of games for Select_Game
LABEL $C84F Vec_ADSR_Table
COMMENT_LABEL $C84F Storage for first music header word (ADSR table)
LABEL $C851 Vec_Twang_Table
COMMENT_LABEL $C851 Storage for second music header word ('twang' table)
LABEL $C853 Vec_Music_Ptr
COMMENT_LABEL $C853 Music data pointer
LABEL $C853 Vec_Expl_ChanA
COMMENT_LABEL $C853 Used by Explosion_Snd - bit for first channel used?
LABEL $C854 Vec_Expl_Chans
COMMENT_LABEL $C854 Used by Explosion_Snd - bits for all channels used?
LABEL $C855 Vec_Music_Chan
COMMENT_LABEL $C855 Current sound channel number for Init_Music
LABEL $C856 Vec_Music_Flag
COMMENT_LABEL $C856 Music active flag ($00=off $01=start $80=on)
LABEL $C857 Vec_Duration
COMMENT_LABEL $C857 Duration counter for Init_Music
LABEL $C858 Vec_Music_Twang
COMMENT_LABEL $C858 3 word 'twang' table used by Init_Music
LABEL $C858 Vec_Expl_1
COMMENT_LABEL $C858 Four bytes copied from Explosion_Snd's U-reg parameters
LABEL $C859 Vec_Expl_2
LABEL $C85A Vec_Expl_3
LABEL $C85B Vec_Expl_4
LABEL $C85C Vec_Expl_Chan
COMMENT_LABEL $C85C Used by Explosion_Snd - channel number in use?
LABEL $C85D Vec_Expl_ChanB
COMMENT_LABEL $C85D Used by Explosion_Snd - bit for second channel used?
LABEL $C85E Vec_ADSR_Timers
COMMENT_LABEL $C85E ADSR timers for each sound channel (3 bytes)
LABEL $C861 Vec_Music_Freq
COMMENT_LABEL $C861 Storage for base frequency of each channel (3 words)
LABEL $C867 Vec_Expl_Flag
COMMENT_LABEL $C867 Explosion_Snd initialization flag?
LABEL $C877 Vec_Expl_Timer
COMMENT_LABEL $C877 Used by Explosion_Snd
LABEL $C879 Vec_Num_Players
COMMENT_LABEL $C879 Number of players selected in Select_Game
LABEL $C87A Vec_Num_Game
COMMENT_LABEL $C87A Game number selected in Select_Game
LABEL $C87B Vec_Seed_Ptr
COMMENT_LABEL $C87B Pointer to 3-byte random number seed (=$C87D)
LABEL $C87D Vec_Random_Seed
COMMENT_LABEL $C87D Default 3-byte random number seed
LABEL $CBEA Vec_Default_Stk
COMMENT_LABEL $CBEA Default top-of-stack
LABEL $CBEB Vec_High_Score
COMMENT_LABEL $CBEB High score storage (7 bytes)
LABEL $CBF2 Vec_SWI3_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF2 Vec_SWI2_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF5 Vec_FIRQ_Vector
COMMENT_LABEL $CBF5 FIRQ interrupt vector (3 bytes)
LABEL $CBF8 Vec_IRQ_Vector
COMMENT_LABEL $CBF8 IRQ interrupt vector (3 bytes)
LABEL $CBFB Vec_SWI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFB Vec_NMI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFE Vec_Cold_Flag
COMMENT_LABEL $CBFE Cold start flag (warm start if = $7321)
LABEL $D000 VIA_port_b
COMMENT_LABEL $D000 VIA port B data I/O register
LABEL $D001 VIA_port_a
COMMENT_LABEL $D001 VIA port A data I/O register (handshaking)
LABEL $D002 VIA_DDR_b
COMMENT_LABEL $D002 VIA port B data direction register (0=input 1=output)
LABEL $D003 VIA_DDR_a
COMMENT_LABEL $D003 VIA port A data direction register (0=input 1=output)
LABEL $D004 VIA_t1_cnt_lo
COMMENT_LABEL $D004 VIA timer 1 count register lo (scale factor)
LABEL $D005 VIA_t1_cnt_hi
COMMENT_LABEL $D005 VIA timer 1 count register hi
LABEL $D006 VIA_t1_lch_lo
COMMENT_LABEL $D006 VIA timer 1 latch register lo
LABEL $D007 VIA_t1_lch_hi
COMMENT_LABEL $D007 VIA timer 1 latch register hi
LABEL $D008 VIA_t2_lo
COMMENT_LABEL $D008 VIA timer 2 count/latch register lo (refresh)
LABEL $D009 VIA_t2_hi
COMMENT_LABEL $D009 VIA timer 2 count/latch register hi
LABEL $D00A VIA_shift_reg
COMMENT_LABEL $D00A VIA shift register
LABEL $D00B VIA_aux_cntl
COMMENT_LABEL $D00B VIA auxiliary control register
LABEL $D00C VIA_cntl
COMMENT_LABEL $D00C VIA control register
LABEL $D00D VIA_int_flags
COMMENT_LABEL $D00D VIA interrupt flags register
LABEL $D00E VIA_int_enable
COMMENT_LABEL $D00E VIA interrupt enable register
LABEL $D00F VIA_port_a_nohs
COMMENT_LABEL $D00F VIA port A data I/O register (no handshaking)
LABEL $F000 Cold_Start
LABEL $F06C Warm_Start
LABEL $F14C Init_VIA
LABEL $F164 Init_OS_RAM
LABEL $F18B Init_OS
LABEL $F1A2 Set_Refresh
LABEL $F1AA DP_to_D0
LABEL $F1AF DP_to_C8
LABEL $F1B4 Read_Btns_Mask
LABEL $F1BA Read_Btns
LABEL $F256 Sound_Byte
LABEL $F259 Sound_Byte_x
LABEL $F25B Sound_Byte_raw
LABEL $F272 _Clear_Sound
LABEL $F27D Sound_Bytes
LABEL $F284 Sound_Bytes_x
LABEL $F289 Do_Sound
LABEL $F28C Do_Sound_x
LABEL $F29D Intensity_1F
LABEL $F2A1 Intensity_3F
LABEL $F2A5 Intensity_5F
LABEL $F2A9 Intensity_7F
LABEL $F2AB Intensity_a
LABEL $F2BE Dot_ix_b
LABEL $F2C1 Dot_ix
LABEL $F2C3 Dot_d
LABEL $F2C5 Dot_here
LABEL $F2D5 Dot_List
LABEL $F2DE Dot_List_Reset
LABEL $F34A Reset0Ref_D0
LABEL $F34F Check0Ref
LABEL $F354 Reset0Ref
LABEL $F35B Reset_Pen
LABEL $F36B Reset0Int
LABEL $F511 Random_3
LABEL $F517 Random
LABEL $F533 Init_Music_Buf
LABEL $F53F Clear_x_b
LABEL $F542 Clear_C8_RAM
COMMENT_LABEL $F542 never used by GCE carts?
LABEL $F545 Clear_x_256
LABEL $F548 Clear_x_d
LABEL $F550 Clear_x_b_80
LABEL $F552 Clear_x_b_a
LABEL $F55A Dec_3_Counters
LABEL $F55E Dec_6_Counters
LABEL $F563 Dec_Counters
LABEL $F56D Delay_3
COMMENT_LABEL $F56D 30 cycles
LABEL $F571 Delay_2
COMMENT_LABEL $F571 25 cycles
LABEL $F575 Delay_1
COMMENT_LABEL $F575 20 cycles
LABEL $F579 Delay_0
COMMENT_LABEL $F579 12 cycles
LABEL $F57A Delay_b
COMMENT_LABEL $F57A 5*B + 10 cycles
LABEL $F57D Delay_RTS
COMMENT_LABEL $F57D 5 cycles
LABEL $F57E Bitmask_a
LABEL $F584 Abs_a_b
LABEL $F58B Abs_b
LABEL $F593 Rise_Run_Angle
LABEL $F5D9 Get_Rise_Idx
LABEL $F5DB Get_Run_Idx
LABEL $F5EF Get_Rise_Run
LABEL $F5FF Rise_Run_X
LABEL $F601 Rise_Run_Y
LABEL $F603 Rise_Run_Len
LABEL $F610 Rot_VL_ab
LABEL $F616 Rot_VL
LABEL $F61F Rot_VL_Mode
LABEL $F62B Rot_VL_M_dft
LABEL $F65B Xform_Run_a
LABEL $F65D Xform_Run
LABEL $F661 Xform_Rise_a
LABEL $F663 Xform_Rise
LABEL $F67F Move_Mem_a_1
LABEL $F683 Move_Mem_a
LABEL $F687 Init_Music_chk
LABEL $F68D Init_Music
LABEL $F692 Init_Music_x
LABEL $F7A9 Select_Game
LABEL $F84F Clear_Score
LABEL $F85E Add_Score_a
LABEL $F87C Add_Score_d
LABEL $F8B7 Strip_Zeros
LABEL $F8C7 Compare_Score
LABEL $F8D8 New_High_Score
LABEL $F8E5 Obj_Will_Hit_u
LABEL $F8F3 Obj_Will_Hit
LABEL $F8FF Obj_Hit
LABEL $F92E Explosion_Snd
LABEL $FF9F Draw_Grid_VL
LABEL $FD0D music1
LABEL $FD1D music2
LABEL $FD81 music3
LABEL $FDD3 music4
LABEL $FE38 music5
LABEL $FE76 music6
LABEL $FEC6 music7
LABEL $FEF8 music8
LABEL $FF26 music9
LABEL $FF44 musica
LABEL $FF62 musicb
LABEL $FF7A musicc
LABEL $FF8F musicd
LABEL $F9F4 Char_Table
LABEL $FBD4 Char_Table_End
LABEL $F192 Wait_Recal
LABEL $F1F5 Joy_Analog
LABEL $F1F8 Joy_Digital
LABEL $F2E6 Recalibrate
LABEL $F2F2 Moveto_x_7F
LABEL $F2FC Moveto_d_7F
LABEL $F308 Moveto_ix_FF
LABEL $F30C Moveto_ix_7F
LABEL $F30E Moveto_ix_b
LABEL $F310 Moveto_ix
LABEL $F312 Moveto_d
LABEL $F373 Print_Str_hwyx
LABEL $F378 Print_Str_yx
LABEL $F37A Print_Str_d
LABEL $F385 Print_List_hw
LABEL $F38A Print_List
LABEL $F38C Print_List_chk
LABEL $F391 Print_Ships_x
LABEL $F393 Print_Ships
LABEL $F3AD Mov_Draw_VLc_a
COMMENT_LABEL $F3AD count y x y x ...
LABEL $F3B1 Mov_Draw_VL_b
COMMENT_LABEL $F3B1 y x y x ...
LABEL $F3B5 Mov_Draw_VLcs
COMMENT_LABEL $F3B5 count scale y x y x ...
LABEL $F3B7 Mov_Draw_VL_ab
COMMENT_LABEL $F3B7 y x y x ...
LABEL $F3B9 Mov_Draw_VL_a
COMMENT_LABEL $F3B9 y x y x ...
LABEL $F3BC Mov_Draw_VL
COMMENT_LABEL $F3BC y x y x ...
LABEL $F3BE Mov_Draw_VL_d
COMMENT_LABEL $F3BE y x y x ...
LABEL $F3CE Draw_VLc
COMMENT_LABEL $F3CE count y x y x ...
LABEL $F3D2 Draw_VL_b
COMMENT_LABEL $F3D2 y x y x ...
LABEL $F3D6 Draw_VLcs
COMMENT_LABEL $F3D6 count scale y x y x ...
LABEL $F3D8 Draw_VL_ab
COMMENT_LABEL $F3D8 y x y x ...
LABEL $F3DA Draw_VL_a
COMMENT_LABEL $F3DA y x y x ...
LABEL $F3DD Draw_VL
COMMENT_LABEL $F3DD y x y x ...
LABEL $F3DF Draw_Line_d
COMMENT_LABEL $F3DF y x y x ...
LABEL $F404 Draw_VLp_FF
COMMENT_LABEL $F404 pattern y x pattern y x ... $01
LABEL $F408 Draw_VLp_7F
COMMENT_LABEL $F408 pattern y x pattern y x ... $01
LABEL $F40C Draw_VLp_scale
COMMENT_LABEL $F40C scale pattern y x pattern y x ... $01
LABEL $F40E Draw_VLp_b
COMMENT_LABEL $F40E pattern y x pattern y x ... $01
LABEL $F410 Draw_VLp
COMMENT_LABEL $F410 pattern y x pattern y x ... $01
LABEL $F434 Draw_Pat_VL_a
COMMENT_LABEL $F434 y x y x ...
LABEL $F437 Draw_Pat_VL
COMMENT_LABEL $F437 y x y x ...
LABEL $F439 Draw_Pat_VL_d
COMMENT_LABEL $F439 y x y x ...
LABEL $F46E Draw_VL_mode
COMMENT_LABEL $F46E mode y x mode y x ... $01
LABEL $F495 Print_Str
COMMENT_LABEL $F495 endif
EQU $0A UNIVERSAL_PLAYER_SHOT_RADIUS
EQU $06 SCOOP_INTERVALL_ADD
COMMENT_LABEL $06 7
EQU $0A CORRECTION
EQU $0A SwarmEnemy
EQU $00 Y_POS
EQU $01 X_POS
EQU $02 BEHAVIOUR
COMMENT_LABEL $02 PC
EQU $04 NEXT_ENEMY_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 SWARM_ALL_PURPOSE
COMMENT_LABEL $06 flash length when hit (might be bits) 3 bits max
EQU $07 SWARM_MOVEMENT_INFO
EQU $08 SWARM_ANIM_POS
EQU $09 SWARM_HIT_POINTS
EQU $0A ExplodingEnemySwarm
LABEL $C8FE filler
COMMENT_LABEL $C8FE #noDoubleWarn
EQU $08 SWARM_EXPLOSION_INTENSITY
COMMENT_LABEL $08 #noDoubleWarn
EQU $09 SWARM_EXPLOSION_SCALE
COMMENT_LABEL $09 #noDoubleWarn
EQU $0B TribbleEnemyStruct
EQU $06 TRIBBLE_ALL_PURPOSE
COMMENT_LABEL $06 flash length when hit (might be bits) 3 bits max
EQU $07 TRIBBLE_MOVEMENT_INFO
EQU $08 TRIBBLE_ANIM_POS
EQU $09 TRIBBLE_HIT_POINTS
EQU $0A TRIBBLE_LIFE_TIME
EQU $15 EnemyStruct
EQU $00 RELATIVE_HI_Y
EQU $01 RELATIVE_HI_X
EQU $06 RELATIVE_LO_Y
EQU $07 RELATIVE_LO_X
EQU $06 Y_POS16
COMMENT_LABEL $06 D current position for calculation only , Y is pos, y low is addy
EQU $08 TARGET_RELATIVE_Y
EQU $09 TARGET_RELATIVE_X
EQU $08 X_POS16
COMMENT_LABEL $08 D current position for calculation only
EQU $0A TARGET_ABSOLUT_Y
COMMENT_LABEL $0A if attack pattern is absolut - than here go the target coordinates
EQU $0A SUB_PATTERN
COMMENT_LABEL $0A is 2 bytes, but shares second byte with ANIM count
EQU $0B TARGET_ABSOLUT_X
EQU $0C BUG_SHOT_DELAY
EQU $0C INVERSE_INTRO_PATTERN
EQU $0C ANGLE_HOMEFLIGHT
COMMENT_LABEL $0C in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
EQU $0D BUG_ADDS_YX
EQU $0D MY_PATTERN
EQU $0F ANIM_POSITION
COMMENT_LABEL $0F current position in animation table of vectorlists
EQU $0F SUB_PATTERN_POSITION
COMMENT_LABEL $0F lower nibble when attack pattern
EQU $0F PATTERN_POSITION
COMMENT_LABEL $0F where in the current pattern are we?
EQU $10 BUG_APPEARING_INTENSITY
EQU $10 BUG_MOVEMENT_DOUBLER
EQU $10 POSITION
COMMENT_LABEL $10 UID of curretn enemies -> defines position in waiting state
EQU $11 ALL_PURPOSE
COMMENT_LABEL $11 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
EQU $12 HITPOINTS
COMMENT_LABEL $12 hit points = upper 5 bits
EQU $12 BUG_ENEMY_HITPOINTS
COMMENT_LABEL $12 all 8 bits
EQU $12 BIT_MASK
COMMENT_LABEL $12 shot delay = lower 3 bits
EQU $13 ENEMY_STRUCT
COMMENT_LABEL $13 this can be reduced to one byte!
EQU $15 ExplodingEnemyStruct
EQU $06 SMARTLIST_ORG
EQU $10 EXPLOSION_INTENSITY
COMMENT_LABEL $10 #noDoubleWarn
EQU $12 EXPLOSION_SCALE
COMMENT_LABEL $12 #noDoubleWarn
EQU $15 EnemyStructRepell
EQU $0A XPOS_LOCKED
COMMENT_LABEL $0A #
EQU $0B WAS_ANIM_COUNT
COMMENT_LABEL $0B count down to next animation sequence
EQU $0C ANGLE_REPELL
EQU $0D Y_ADD16
EQU $0F X_ADD16
EQU $15 SaucerStruct
EQU $06 BIG_HP
COMMENT_LABEL $06 D current position for calculation only , Y is pos, y low is addy
EQU $08 STAY_HERE_LOOP_COUNTER
COMMENT_LABEL $08 1 byte ; D current position for calculation only
EQU $09 LASER_X
COMMENT_LABEL $09 1 byte ; D current position for calculation only
EQU $0A MONEY_SUCK_TIMER
COMMENT_LABEL $0A is 2 bytes, but shares second byte with ANIM count
EQU $0B BACK_OR_FORTH
EQU $0C ShotStruct
EQU $00 Y_POS_NOW16
EQU $04 NEXT_SHOT_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $0A SHOT_SPEED
EQU $0A X_POS_NOW16
EQU $0C MissileShotStruct
EQU $06 DIRECTION_CHANGE_COUNTER
EQU $07 MISSILE_X_ADD
EQU $0B fillerMissile
EQU $08 BonusStruct
EQU $04 NEXT_BONUS_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 TYPE
EQU $07 BONUS_ANIM_POSITION
COMMENT_LABEL $07 low 6 bit - anim, hi 2 bit speed
EQU $0D StarStruct
EQU $00 Y1_POS
COMMENT_LABEL $00 D current position
EQU $01 X1_POS
COMMENT_LABEL $01 D
EQU $04 NEXT_STAR_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 RADIUS
EQU $06 TWINKLE
EQU $07 Y2_POS
EQU $08 X2_POS
EQU $09 Y3_POS
EQU $0A X3_POS
EQU $0B Y4_POS
EQU $0C X4_POS
EQU $0A PlayerShotStruct
EQU $00 Y_POS_REL
EQU $01 X_POS_REL
EQU $04 NEXT_PLAYERSHOT_OBJECT
EQU $08 SHOT_RADIUS
EQU $09 SCOOP_SHOTS
COMMENT_LABEL $09 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
EQU $0A PlayerLazerShotStruct
EQU $06 LAZER_WOBBLE
COMMENT_LABEL $06 alternating 0 and != 0, left or right slope starting
EQU $07 LAZER_TIMER
EQU $10 LevelDefinition
EQU $00 LEVEL_ENEMY_COUNT
COMMENT_LABEL $00 or in case of direct appearence the number of enemies!
EQU $00 LEVEL_INTRO_PATTERN
COMMENT_LABEL $00 or in case of direct appearence the number of enemies!
EQU $02 LEVEL_WAITING_PATTERN
EQU $04 LEVEL_ATTACK_PATTERN
COMMENT_LABEL $04 pointer to attack pattern list - pointer to 4 pointers to attack patterns
EQU $06 LEVEL_ENEMY_DEFINITION
EQU $08 LEVEL_MAX_ITEMS
COMMENT_LABEL $08 high nibble max shots, low nibble max attack patterns
EQU $09 LEVEL_TYPE
EQU $0A LEVEL_BULLET_BORDER
COMMENT_LABEL $0A how probable is it that enemies shoots
EQU $0B LEVEL_BONUS_BORDER
COMMENT_LABEL $0B how probable is it that bonus drops
EQU $0C LEVEL_BUG_DEFINITION
EQU $0E LEVEL_BUG_COUNT
EQU $0F LEVEL_SHOT_DELAY_BUG
EQU $04 IntroLine
EQU $00 LINE_PATTERN_DEF
EQU $02 LINE_PATTERN_INVERS
EQU $03 LINE_PATTERN_ENEMY_COUNT
EQU $08 PatternLine
EQU $00 P_YPOS
EQU $01 P_XPOS
EQU $02 P_YADD
EQU $04 P_XADD
EQU $06 P_ANGLE
EQU $07 P_PATTERN_TARGET_RADIUS
COMMENT_LABEL $07 depending on speed
EQU $07 P_PAD
COMMENT_LABEL $07 this is now SPEED offset for compare!
EQU $02 IntroPattern
EQU $00 P_DELAY_BETWEEN_ENEMIES
EQU $01 P_START_DELAY_OF_PATTERN
EQU $02 P_PATTERN_PATTERN_START
EQU $04 SingleAttackPatternLine
EQU $00 SINGLE_ATTACK_PATTERN_NEXT_NO
EQU $00 SINGLE_ATTACK_SPEED
EQU $01 SINGLE_ATTACK_PATTERN_TYPE
EQU $02 SINGLE_ATTACK_PATTERN_POINTER
COMMENT_LABEL $02 when pointer = 0, than end of list
EQU $08 EnemyDefinition
EQU $00 ANGLE8_TABLE
COMMENT_LABEL $00 if zero -> BigBug
EQU $02 BUG_ENEMY_HP
EQU $02 ENEMY_STRENGTH
COMMENT_LABEL $02 see above
EQU $03 WAIT_ANIM_TABLE
EQU $05 ENEMY_DEBRIS_SPEED
EQU $05 ENEMY_BULLET_SPEED
COMMENT_LABEL $05 bug only (for now), lower nibble speed, uppernibble
EQU $06 ADDITIONAL_TYPE_INFO
EQU $07 CLONE_INFO
COMMENT_LABEL $07 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
EQU $0E RocketEmitter
EQU $00 FW_Y_POS
EQU $02 FW_BEHAVIOUR
EQU $04 FW_NEXT_OBJECT
EQU $06 FW_X_POS
EQU $08 FW_Y_VEL
EQU $0A FW_X_VEL
EQU $0C FW_AGE
EQU $0D FW_ZERO_RGAL
EQU $0E VelocityParticle
EQU $0D FW_ZERO
EQU -$04 u_offset1
COMMENT_LABEL -$04 behaviour offset is determined by next structure element
EQU $08 HighScoreEntry
EQU $00 HS_NAME
EQU $03 HS_BCD_SCORE
EQU $07 HS_LEVEL
EQU $0E FlameParameter
EQU $00 POS
EQU $02 Y_UPDATE
EQU $03 Y_OFFSET
EQU $04 X_OFFSET
EQU $05 X_WAITER
EQU $06 Y_WAITER
EQU $07 X_RESET
EQU $08 Y_RESET
EQU $09 SCALE_POS
EQU $0A FLAME_INT_MAX
EQU $0B COUNTER
EQU $0C VALUES
EQU $03 XWAIT
EQU $04 YWAIT
LABEL $C80E diamondCount
LABEL $C80F isBugShot
LABEL $C810 nextBugEnemyCount
LABEL $C811 lastJoyMove
LABEL $C811 enemyMINY
LABEL $C812 bonusHitCount
LABEL $C813 bonusSpawnCount
LABEL $C814 lastCollectedBonus
LABEL $C815 globalPatternWobble
LABEL $C816 globalPatternWobbleDirection
LABEL $C817 levelBulletBorder
LABEL $C818 levelBonusBorder
LABEL $C819 attackPatternCount
LABEL $C81A attackPatternInitiated
LABEL $C81B Vec_Joy_1_X_
LABEL $C81C Vec_Joy_1_Y_
LABEL $C81D sfx_pointer_1
LABEL $C81F sfx_pointer_2
LABEL $C821 t2_rest
LABEL $C822 tacScan
LABEL $C823 levelCount
LABEL $C824 random_seed2
LABEL $C825 _Vec_Loop_Count
LABEL $C827 introWaveEnemyCount
LABEL $C828 suckerAddress
LABEL $C82C levelTimer
LABEL $C82E tmp_div1
LABEL $C82E bonusSpawnPosition
LABEL $C830 STARS_DONE_A
LABEL $C832 ENEMY_DONE_A
LABEL $C834 SHOTS_DONE_A
LABEL $C836 BONUS_DONE_A
LABEL $C838 PLAYERSHOTS_DONE_A
LABEL $C82E STARS_DONE
LABEL $C830 ENEMY_DONE
LABEL $C832 SHOTS_DONE
LABEL $C836 PLAYERSHOTS_DONE
LABEL $C834 BONUS_DONE
LABEL $C830 FW_PARTICLES_DONE
LABEL $C832 FW_PARTICLES_DONE_A
LABEL $C83A OBJECT_LIST_COMPARE_ADDRESS
LABEL $C83A warpSpeed
LABEL $C83A bonusAnimCount
LABEL $C83A lightningOn
LABEL $C83B shotYRadius
LABEL $C83C levelEnemyCountUID
LABEL $C83D _Vec_Rfrsh
LABEL $C84D allowBossShots
LABEL $C84D introWaveEnemyDelayCount
LABEL $C84E superDiamondAnimCounter
LABEL $C84E levelEnemyCount
LABEL $C84F superDiamondPosition
LABEL $C84F introWaveCurrentPattern
LABEL $C851 superDiamondAnimCounter2
LABEL $C851 introWaveCurrentPatternCount
LABEL $C852 scoopEnemy1
LABEL $C854 current_button_state
LABEL $C855 last_button_state
LABEL $C856 playerAnim
LABEL $C857 playAnimDelayCounter
LABEL $C858 player_score
LABEL $C858 player_score_6
LABEL $C859 player_score_5
LABEL $C85A player_score_4
LABEL $C85B player_score_3
LABEL $C85C player_score_2
LABEL $C85D player_score_1
LABEL $C85E player_score_0
LABEL $C85F player_score_80
LABEL $C860 scoreExtraBuffer
LABEL $C862 playerCashW
LABEL $0080 BITFIELD_ARMOR
EQU $40 BITFIELD_SHIELD
EQU $20 BITFIELD_SCOOP
LABEL $00DF BITFIELD_NOT_SCOOP
LABEL $C864 playerBonusActive
LABEL $C865 colorCycleCount
LABEL $C866 animDelayCounter
LABEL $C867 patternDelayCounter
LABEL $C868 scoopEnemy2
LABEL $C86A bugsSpawnedInLevel
LABEL $C86B random_seed
LABEL $C86C bonusCollect
LABEL $C86D bulletSpawnAt
LABEL $C86F sfx_pointer_3
LABEL $C871 playerShotCountW
LABEL $C873 playerHitCountW
LABEL $C875 playerXpos
LABEL $C877 playerSpeed
LABEL $C879 playerMaxShotInAir
LABEL $C87A playerNumberOfBulletsPerShot
LABEL $C87B playerShotSpeed
LABEL $C87D playerWasHitFor
LABEL $C87E selected
LABEL $C87E tmp1
LABEL $C87F calibButton
LABEL $C87F shotSpeed
LABEL $C880 warpLen
LABEL $C880 explosionSound
LABEL $C881 starlist_empty_head
LABEL $C883 starlist_objects_head
LABEL $C885 starCount
LABEL $C886 enemylist_empty_head
LABEL $C888 enemylist_objects_head
LABEL $C88A enemyCount
LABEL $C886 fwlist_empty_head
LABEL $C888 fwlist_objects_head
LABEL $C88B playershotlist_empty_head
LABEL $C88D playershotlist_objects_head
LABEL $C88F playerShotCount
LABEL $C890 shotlist_empty_head
LABEL $C892 shotlist_objects_head
LABEL $C894 shotCount
LABEL $C895 bonuslist_empty_head
LABEL $C897 bonuslist_objects_head
LABEL $C899 bonusCount
LABEL $C8B1 tmp_debug
LABEL $C89A joystickDir
LABEL $C89A in_moveFlag
LABEL $C89B tmp2_tmp_unique
EQU $01 FLASH_AVAILABLE_BIT
EQU $02 SAVEGAME_AVAILABLE_BIT
EQU $04 SAVEGAME_IS_ACTIVE_BIT
LABEL $C89C flashAvailable
LABEL $0080 BIT_FLAG_PLAY_YM
EQU $40 BIT_FLAG_PLAY_FORCE_SFX
COMMENT_LABEL $40 -> three voices sfx (e.g. secret chime)
EQU $01 BIT_FLAG_AUTOFIRE
EQU $0E BIT_FLAG_IS_BOSSFIGHT_ANY
EQU $10 BIT_BIG_ENEMY_IN_PLAY
EQU $20 BIT_FLAG_CASH_ROLLOVER
LABEL $C89D playSoundFlags
LABEL $C89D diverseFlags
EQU $01 SHOP_TRIPPLE_WEAPON
EQU $02 SHOP_QUAD_WEAPON
EQU $04 SHOP_SUPER_WEAPON
EQU $08 SHOP_LASER_WEAPON
EQU $10 SHOP_LOCK
EQU $20 SHOP_SUPER_BOMB_L
EQU $40 SHOP_RANK
LABEL $0080 SHOP_IMMUN1
LABEL $C89E Ram_Options_Start
LABEL $C89E calibrationValue6
LABEL $C89F calibrationValue7
LABEL $C8A0 calibrationValue16
LABEL $C8A1 calibrationValueString
LABEL $C8A2 calibrationValue50
LABEL $C8A3 gameScale
LABEL $C8A4 shopAllowFlags
EQU $02 BIT_RAN_CALIBRATION
EQU $01 BIT_BUZZ_NOBUZZ
LABEL $0080 BIT_TITLE_SEEN
EQU $20 BIT_VOX_FULL
COMMENT_LABEL $20 if zero -> vox full
LABEL $C8A5 additionalFlags
LABEL $C8A6 achievements
LABEL $C8AC secretFlags
LABEL $C8AD maxLevelReached
LABEL $C8AE Ram_Options_End
EQU $01 IMUNITY_1_BIT
EQU $02 IMUNITY_2_BIT
EQU $01 IMUNITY_1
EQU $02 IMUNITY_2
EQU $03 IMUNITY_BITS
LABEL $00FC MULTIPLYER_BITS
COMMENT_LABEL $00FC Max 63
EQU $03 NON_MULTIPLYER_BITS
EQU $03 MULTIPLY_0_AND
EQU $07 MULTIPLY_1_AND
EQU $0B MULTIPLY_2_AND
EQU $17 MULTIPLY_5_AND
EQU $04 MULTIPLY_1_OR
EQU $08 MULTIPLY_2_OR
EQU $14 MULTIPLY_5_OR
EQU $1C MULTIPLY_5_ALL_AND
LABEL $C8AE multiplyer
LABEL $C8AE downgradeImmunity
LABEL $C8AF currentFlashROMStart
EQU $10 OptionStruct
EQU $00 O_CALIB_SWARM
EQU $01 O_CALIB_VECTOR
EQU $02 O_CALIB_MH
EQU $03 O_CALIB_TEXT
EQU $04 O_CALIB_BOSS
EQU $05 O_GAMESCALE
EQU $06 O_SHOP_ALLOW
EQU $07 O_ADDITIONAL_FLAGS
EQU $08 O_ACHIEVEMENTS
EQU $0E O_SECRETS
EQU $0F O_MAX_LEVEL
EQU $50 FlashBlock
EQU $00 OPTION_BLOCK
COMMENT_LABEL $00 OptionStruct
EQU $10 HIGHSCORE_BLOCK
COMMENT_LABEL $10 or more
EQU $30 HARDCORE_BLOCK
COMMENT_LABEL $30 or more
LABEL $C8B1 tmp16_tmp
LABEL $C8B3 tmp16_tmp2
COMMENT_LABEL $C8B3 end of game count only
LABEL $C8B7 bonusDisplay
LABEL $C8B3 playerLivesString
COMMENT_LABEL $C8B3 ds 4
LABEL $C8B5 playerLives
LABEL $C8B8 messageState
LABEL $C8B9 messageTimer
LABEL $C8BA messagePointer
LABEL $C8BC playerBonusCounter
EQU $03 PlayerExplosion
EQU $00 EX_MAX_SIZE
EQU $01 EX_START_SIZE
EQU $02 EX_STEP
EQU $05 BossExplosion
EQU $03 EXPLOSION_POS
LABEL $C8BE playerExplosionSpace
LABEL $C8BE StringOutputBuffer
LABEL $C8BE StringOutputBuffer_6
LABEL $C8BF StringOutputBuffer_5
LABEL $C8C0 levelConversionString
LABEL $C8C0 laserTag
LABEL $C8C0 StringOutputBuffer_4
LABEL $C8C1 laserTmp
LABEL $C8C1 _tmpY
LABEL $C8C1 tmp1_tmp
LABEL $C8C1 StringOutputBuffer_3
LABEL $C8C2 _tmpX
LABEL $C8C2 tmp2_tmp
LABEL $C8C2 StringOutputBuffer_2
LABEL $C8C3 tmp3_tmp
LABEL $C8C3 vox_tmp1
LABEL $C8C3 StringOutputBuffer_1
LABEL $C8C4 tmp_count
LABEL $C8C4 tmp_isSupershot
LABEL $C8C4 tmp4_tmp
LABEL $C8C4 vox_tmp2
LABEL $C8C4 StringOutputBuffer_0
LABEL $C8C5 laserTmp2
LABEL $C8C5 vox_tmp3
LABEL $C8C5 StringOutputBuffer_80
EQU $07 TestShot
EQU $00 SHOT_ORG
EQU $02 T_YPOS
EQU $03 T_XPOS0_MINUS_1_RADIUS
EQU $04 T_XPOS0_PLUS_1_RADIUS
EQU $05 T_XPOS0_MINUS_3_RADIUS
EQU $06 T_XPOS0_PLUS_3_RADIUS
LABEL $C8C6 testShot
LABEL $C8CD test2Shot
LABEL $C8D4 Vec_Str_Ptr
LABEL $C8D4 tmp4
LABEL $C8D4 stringScale
LABEL $C8D4 backJump
LABEL $C8D6 inversePatttern
LABEL $C8D7 patternEnemyCount
LABEL $C8D7 tmp8_tmp
COMMENT_LABEL $C8D7 tmp 8 is only used in failure behaviour - no collision with pattern
LABEL $C8DB laserLowestYLeft
LABEL $C8DA laserLowestY
LABEL $C8D8 laserEnemyPointer
LABEL $C8DC laserEnemyPointerLeft
LABEL $C8D9 currentLetterDirection
LABEL $C8D8 currentLetterPos
LABEL $C8DA selectedOption
LABEL $C8DB currentPrintedOption
LABEL $C8DC optionDir
LABEL $C8DE laserLowestYRight
LABEL $C8DF laserEnemyPointerRight
LABEL $C8E1 difficulty
LABEL $C8E2 levelMaxAttackPatterns
LABEL $C8E3 levelMaxEnemyShots
LABEL $C8E4 bulletDamage
LABEL $C8E5 shiftBulletDamage
LABEL $C8E6 shiftDoubleBulletDamage
LABEL $C8E7 bonusTimerLength
LABEL $C8E9 currentLevelPointer
LABEL $C8EB multTimer
LABEL $0080 GAMEPHASE_INTRO
COMMENT_LABEL $0080 level attack wave phase
EQU $40 ENEMY_DESTRUCTED_FLAG
LABEL $C8ED lockPurchased
LABEL $C8EE smartBombsAvailable
LABEL $C8EF saucerCount
LABEL $C8EF bossIntroStage
LABEL $C8F0 levelMaxEnemy
LABEL $C8F1 rankDrop
LABEL $C8F2 rankCollected
LABEL $C8F3 officerRankTmp
LABEL $C8F4 doWarpFailure
LABEL $C8F5 bulletDamageAdjust
EQU $01 SECRET_3_SPEED_SUCKERS
EQU $02 SECRET_RATE_SUCKERS
EQU $04 SECRET_3_BULLET_SUCKERS
EQU $08 SECRET_3_RATE_SUCKERS
EQU $10 SECRET_ORDERED_EXTRA
EQU $20 SECRET_3_FIFTY
EQU $40 SECRET_ORDERED_RANKS
LABEL $0080 BIGGEST_LOSS_FLAG
LABEL $C8F6 inGameSecrets
LABEL $C8F7 perfectBonus
LABEL $C8F8 secretBonusCounter
LABEL $C8F9 levelsPlayed
LABEL $C8FB drunkTimer
LABEL $C8FC vox_addr
LABEL $C8FE end_static_ram
LABEL $CBFD chosenStartLevel
LABEL $CBFE isDemoMode
LABEL $CBFF realEnemyCount
EQU $13 MAX_SHOT_OBJECTS_BOSS
COMMENT_LABEL $13 shots are extended over stars and bonus during boss fight!
EQU $0A MAX_SHOT_OBJECTS
LABEL $C8FE shotobject_list
LABEL $C976 shotobject_list_end
LABEL $C9E2 shotobject_list_end19
LABEL $C8FE shotobject1
LABEL $C90A shotobject2
LABEL $C916 shotobject3
LABEL $C922 shotobject4
LABEL $C92E shotobject5
LABEL $C93A shotobject6
LABEL $C946 shotobject7
LABEL $C952 shotobject8
LABEL $C95E shotobject9
LABEL $C96A shotobject10
EQU $06 MAX_BONUS_OBJECTS
LABEL $C976 bonusobject_list
LABEL $C9A6 bonusobject_list_end
LABEL $C976 bonusobject1
LABEL $C97E bonusobject2
LABEL $C986 bonusobject3
LABEL $C98E bonusobject4
LABEL $C996 bonusobject5
LABEL $C99E bonusobject6
EQU $13 MAX_STAR_OBJECTS_WARP
COMMENT_LABEL $13 20 ; stars are expanded in warp into the enemy region
EQU $05 MAX_STAR_OBJECTS
LABEL $C9A6 starobject_list
LABEL $C9E7 starobject_list_end
LABEL $C9A6 starobject1
LABEL $C9B3 starobject2
LABEL $C9C0 starobject3
LABEL $C9CD starobject4
LABEL $C9DA starobject5
EQU $0F MAX_ENEMY_OBJECTS_BOSS3
EQU $05 MAX_ENEMY_OBJECTS_BOSS4
EQU $14 MAX_ENEMY_OBJECTS
LABEL $C9E7 enemyobject_list
LABEL $CB8B enemyobject_list_end
LABEL $C9E7 enemyobject1
LABEL $C9FC enemyobject2
LABEL $CA11 enemyobject3
LABEL $CA26 enemyobject4
LABEL $CA3B enemyobject5
LABEL $CA50 enemyobject6
LABEL $CA65 enemyobject7
LABEL $CA7A enemyobject8
LABEL $CA8F enemyobject9
LABEL $CAA4 enemyobjecta
LABEL $CAB9 enemyobjectb
LABEL $CACE enemyobjectc
LABEL $CAE3 enemyobjectd
LABEL $CAF8 enemyobjecte
LABEL $CB0D enemyobjectf
LABEL $CB22 enemyobjectg
LABEL $CB37 enemyobjecth
LABEL $CB4C enemyobjecti
LABEL $CB61 enemyobjectj
LABEL $CB76 enemyobjectk
EQU $0A MAX_PLAYERSHOT_OBJECTS
LABEL $CB8B playershotobject_list
LABEL $CBEF playershotobject_list_end
LABEL $CB8B playerShotobject1
LABEL $CB95 playerShotobject2
LABEL $CB9F playerShotobject3
LABEL $CBA9 playerShotobject4
LABEL $CBB3 playerShotobject5
LABEL $CBBD playerShotobject6
LABEL $CBC7 playerShotobject7
LABEL $CBD1 playerShotobject8
LABEL $CBDB playerShotobject9
LABEL $CBE5 playerShotobjecta
EQU $1E FIREWOKRS_PARTICLE_COUNT
LABEL $C9E7 fwobject_list
LABEL $CB8B fwobject_list_end
EQU $1E MAX_SWARM_OBJECTS
COMMENT_LABEL $1E 7
LABEL $C976 swarmobject_list
LABEL $CCB7 swarmobject_list_end
LABEL $CBBD candle1
LABEL $CBB3 ccounter
LABEL $CBB4 cDisplayCounter
LABEL $CBB5 baseLight
LABEL $CBB6 waiterVal
LABEL $CBB7 BIGGESTX
COMMENT_LABEL $CBB7 = 10
LABEL $CBB8 LOWESTX
COMMENT_LABEL $CBB8 = -10
LABEL $CBB9 BIGGESTY
COMMENT_LABEL $CBB9 = 10
LABEL $CBBA LOWESTY
COMMENT_LABEL $CBBA = 0 ;-5 -10
LABEL $CBBB phase
LABEL $CBBD smoke
LABEL $C83F PLY_PSGREGISTERSARRAY
COMMENT_LABEL $C83F #isfunction
LABEL $C83F PLY_PSGREG0
LABEL $C840 PLY_PSGREG1
LABEL $C841 PLY_PSGREG2
LABEL $C842 PLY_PSGREG3
LABEL $C843 PLY_PSGREG4
LABEL $C844 PLY_PSGREG5
LABEL $C845 PLY_PSGREG6
LABEL $C847 PLY_PSGREG8
LABEL $C848 PLY_PSGREG9
LABEL $C849 PLY_PSGREG10
LABEL $C84A PLY_PSGREG11
LABEL $C84B PLY_PSGREG12
LABEL $C84D PLY_PSGREGISTERSARRAY_END
LABEL $C8FE hs_place_edit
LABEL $C8FF hs_blink_count
LABEL $C900 hs_blink_state
LABEL $C901 hs_place_got
LABEL $C902 tmp_count2
LABEL $C903 last_joy_x
LABEL $C904 last_joy_y
LABEL $C905 buttonWait
EQU $0A MAX_ENEMY_OBJECTS_TITLE
LABEL $C906 enemyobject_list_title
LABEL $C9D8 enemyobject_list_title_end
LABEL $C9D8 ramfunction
LABEL $C9D8 arkosPlayerMemStart
LABEL $C9D8 songLoop
LABEL $C9D9 tmp_track_param
LABEL $C9DA tmp_track_instrument
LABEL $C9DB tmp_instrument_second_byte
LABEL $C9DC PLY_HEIGHT
LABEL $C9DD PLY_SPEED
LABEL $C9DE PLY_SPEEDCPT
LABEL $C9DF PLY_HEIGHTCPT
LABEL $C9E0 PLY_TRACK_INSTRUMENTSTABLEPT
LABEL $C9E2 PLY_LINKER_PT
LABEL $C9E4 PLY_PSGREG13_RETRIG
LABEL $C9E5 PLY_SAVESPECIALTRACK
LABEL $C9E7 PLY_SPECIALTRACK_PT
LABEL $C9E9 PLY_SPECIALTRACK_WAITCOUNTER
EQU $11 ArkosChannel
EQU $00 PLY_TRANSPOSITION
EQU $01 PLY_TRACK_SAVEPTINSTRUMENT
EQU $03 PLY_TRACK_INSTRUMENT
EQU $05 PLY_TRACK_INSTRUMENTSPEED
EQU $06 PLY_TRACK_INSTRUMENTSPEEDCPT
EQU $07 PLY_TRACK_PT
EQU $09 PLY_TRACK_WAITCOUNTER
EQU $0A PLY_TRACK_NOTE
EQU $0B PLY_TRACK_VOLUME
EQU $0C PLY_TRACK_PITCH
EQU $0E PLY_TRACK_PITCHADD
EQU $10 PLY_TRACK_REG_7
LABEL $C9EA Channel1Data
LABEL $C9FB Channel2Data
LABEL $CA0C Channel3Data
LABEL $CA1D ChannelDataEnd
LABEL $CA1D PLY_PSGREG13
LABEL $CA1E PLY_VOL_REG
LABEL $CA20 PLY_FREQ_REG
LABEL $CA22 songOver
LABEL $CA23 arkosPlayerMemEnd
EQU $04 CompareTile
EQU $02 TILE_POINTER
COMMENT_LABEL $02 pointer to the actual MAP tile in the map (the Macro)
LABEL $CA23 compareUp
LABEL $CA27 compareDown
LABEL $CA2B highScorePosition
LABEL $CA2B compareLeftBottom
LABEL $CA2F compareRightBottom
LABEL $CA33 compareLeftTop
LABEL $CA37 compareRightTop
LABEL $CA3B intensityTile
LABEL $CA3C yCoarse
LABEL $CA3D xCoarse
LABEL $CA3E xCoarseCheck
LABEL $CA3F yFine
LABEL $CA40 xFine
LABEL $CA41 currentLevel
LABEL $CA43 levelLineStart
LABEL $CA45 levelYSize
LABEL $CA46 levelXSize
LABEL $CA47 displayPosY
LABEL $CA48 displayPosX
LABEL $CA49 skipDrawFlag
EQU $04 MAXTILES_COLLECTABLE
LABEL $CA4A tilesCollected
LABEL $CA4E speedy
LABEL $CA4F speedx
LABEL $CA50 anay
LABEL $CA51 anax
LABEL $CA52 counter0
LABEL $CA53 counter1
LABEL $CA54 counter2
LABEL $CA55 counter3
LABEL $CA56 counter4
LABEL $CA57 counter5
LABEL $CA58 counter6
LABEL $CA59 counter7
LABEL $CA5A animationDelay
LABEL $CA5B nextDisplayPos
LABEL $CA5B nextDisplayPosY
LABEL $CA5C nextDisplayPosX
LABEL $CA5D endVerticalcompare
LABEL $CA5E divide_tmp
LABEL $CA60 v0
LABEL $CA60 y0
LABEL $CA61 x0
LABEL $CA62 v1
LABEL $CA62 y1
LABEL $CA63 x1
LABEL $CA64 v2
LABEL $CA64 y2
LABEL $CA65 x2
EQU $06 CLIP_VECTORS
EQU $00 _pat1
EQU $01 _y1
EQU $02 _x1
EQU $03 _pat2
EQU $04 _y2
EQU $05 _x2
LABEL $CA66 scrollReset
LABEL $CA67 neggi
LABEL $CA68 clip_test
LABEL $CA6A clip_line_counter
LABEL $CA6B clip_counter
LABEL $CA6D clip_pattern
LABEL $CA6F firstVector
LABEL $CA70 BORDER
LABEL $CA72 is_first_letter
LABEL $CA73 do_another_letter
LABEL $CA74 topclip
LABEL $CA74 bottomclip
LABEL $CA76 rightclip
LABEL $CA76 leftclip
LABEL $CA78 current_type
LABEL $CA79 verticalBuffer
LABEL $CA7A horizontalLeftBuffer
LABEL $CA7B horizontalRightBuffer
LABEL $CA7C clipped_vector_vertical_type
LABEL $CA7D clipped_vector_vertical
LABEL $CAD7 clipped_vector_left
LABEL $CB31 clipped_vector_final
LABEL $CB31 clipped_vector_right
LABEL $CB8B xFineObject
LABEL $CB8C yFineObject
LABEL $CB8D clip_end
EQU $7F VERTICAL_MAX
EQU -$7F VERTICAL_MIN
EQU $7F HORIZONTAL_MAX
EQU -$7F HORIZONTAL_MIN
EQU $7B SCALE_MOVE
COMMENT_LABEL $7B 93
EQU $10 SCALE_VLIST
COMMENT_LABEL $10 16; 11
EQU $0C FULL_TILES_HORIZONTAL
EQU $0C FULL_TILES_VERTICAL
LABEL $00FE GRID_HEIGHT
LABEL $00FE GRID_WIDTH
EQU $0E ALL_TILES_HORIZONTAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $0E ALL_TILES_VERTICAL
COMMENT_LABEL $0E scrolling allows on each side a partial tile
EQU $12 TILE_WIDTH
EQU $12 TILE_HEIGHT
EQU $07 STEP_HORIZONTAL_TILE_IN_PIXEL
EQU $07 STEP_VERTICAL_TILE_IN_PIXEL
EQU $6C START_POS_VERTICAL
EQU -$6C START_POS_HORIZONTAL
LABEL $6C94 START_POS
EQU $05 FULL_TILES_VERTICAL_END_CHANGED
COMMENT_LABEL $05 FULL_TILES_VERTICAL;
EQU $0C FULL_TILES_VERTICAL_END_CHANGED_BIG
COMMENT_LABEL $0C FULL_TILES_VERTICAL;
EQU -$6C END_POS_VERTICAL_BIG
EQU $12 END_POS_VERTICAL
LABEL $0132 SECOND_END_POS_VERTICAL_BIG
EQU $6C END_POS_HORIZONTAL
EQU $5A SECOND_END_POS_HORIZONTAL
EQU $00 END_POS_VERTICAL_TEST
EQU $7E END_POS_HORIZONTAL_TEST
EQU $12 FINE_MAX_VERTICAL
EQU $12 FINE_MAX_HORIZONTAL
EQU $00 TYPE_SIMPLE
COMMENT_LABEL $00 can do simple clipping
EQU $01 TYPE_EXPONENTIAL
COMMENT_LABEL $01 no easy clipping
EQU -$01 TYPE_EXACT
COMMENT_LABEL -$01 can do simple clipping
EQU $02 TYPE_CONTINUE_RESET
COMMENT_LABEL $02 if = continue is possible after this tile, position is = to next start point
EQU $04 TYPE_CONTINUE_HERE
COMMENT_LABEL $04 if = continue is possible, leaving at some arbitrary point
EQU $08 TYPE_DOUBLE_SCALE
COMMENT_LABEL $08 if = continue is possible, leaving at some arbitrary point
EQU $10 TYPE_QUAD_SCALE
COMMENT_LABEL $10 if = continue is possible, leaving at some arbitrary point
LABEL $CB8D tiler_END_POS_VERTICAL
LABEL $CB8E mh_playerAnimList
LABEL $CB90 mh_playerAnimCounter
LABEL $CB91 mh_playerAnimDelayCounter
LABEL $CB92 mh_playerTouchesGround
LABEL $CB93 mh_playerXSpeed
LABEL $CB94 mh_playerYSpeed
LABEL $CB95 mh_playerWantDir
LABEL $CB96 mh_lastPlayerWantDir
LABEL $CB97 mh_currentPossibleDirections
EQU $01 PLAYER_WANTS_RIGHT
EQU $02 PLAYER_WANTS_LEFT
EQU $04 PLAYER_WANTS_DOWN
EQU $08 PLAYER_WANTS_UP
EQU $01 PLAYER_CAN_RIGHT
EQU $02 PLAYER_CAN_LEFT
EQU $04 PLAYER_CAN_DOWN
EQU $08 PLAYER_CAN_UP
EQU $01 COL_RIGHT
EQU $02 COL_LEFT
EQU $04 COL_DOWN
EQU $08 COL_UP
EQU $10 COL_COLLECT
COMMENT_LABEL $10 tile can be collected!
EQU $0E TileMOB
EQU $00 T_SCREEN_Y
EQU $01 T_SCREEN_X
EQU $02 T_BEHAVIOUR
COMMENT_LABEL $02 PC
EQU $04 T_NEXT_TILE_OBJECT
COMMENT_LABEL $04 positive = end of list
EQU $06 T_YCOARSE
EQU $07 T_XCOARSE
EQU $08 T_YFINE
EQU $09 T_XFINE
EQU $0A T_ANIM
EQU $0B T_ANIM_COUNTER
EQU $0C T_DEFINITION_POINTER
LABEL $C830 TILE_OBJECT_DONE_A
LABEL $C82E TILE_OBJECT
EQU $0A COUNT_TILE_MOBS
LABEL $C906 tileobject_list
LABEL $C992 tileobject_list_end
LABEL $C881 tileobject_empty_head
LABEL $C883 tileobject_objects_head
LABEL $C885 tileobjectCount
LABEL $CA7D highScoreBlock
LABEL $CA7D Ram_HighScore_Start
LABEL $CA7D highScoreTable
LABEL $CA9D Ram_HighScore_End
LABEL $CA9D Ram_HardcoreScore_Start
LABEL $CA9D HardcoreScoreTable
LABEL $CABD Ram_HardcoreScore_End
LABEL $CABD highScoreTableEnd
LABEL $CABD tmpHiStart
LABEL $CABF tmpHiMode
LABEL $CAC0 tmpButtonMode
LABEL $CABD flashUserRAM
EQU $10 MAX_DODGE_OBJECTS
COMMENT_LABEL $10 must be smaller ENEMY OBJECT
LABEL $C9CD dodgeObject_list
LABEL $CB1D dodgeObject_list_end
LABEL $CB1D oldString
LABEL $CB20 bonusCollectSave
LABEL $CB21 levelCountSave
LABEL $CB22 dodgerGotKilled
LABEL $CB23 isDiamondRun
LABEL $CB24 textIntensity
LABEL $CB24 dodgerAngle1
LABEL $CB25 textFadeDirection
LABEL $CB25 dodgerAngle2
LABEL $CB26 landingbayPos
LABEL $CB26 fighterPos
LABEL $CB26 textPointer
LABEL $CB26 dodgerAngle3
LABEL $CB27 dodgerAngle4
LABEL $CB28 textDisplayDone
LABEL $CB28 dodgerAccel
LABEL $CB27 dodgeResult
LABEL $CB2A dodgerProgress
LABEL $CB2C dodgerFinishedIndicator
LABEL $CB2D rotateBuf
LABEL $CB2D landingFighterXSpeed16
LABEL $CB2D ROT_MINE1
COMMENT_LABEL $CB2D 'DUMB' MINE
LABEL $CB43 ROT_MINE2
COMMENT_LABEL $CB43 'MAGNETIC' MINE
LABEL $CB5F ROT_MINE3
COMMENT_LABEL $CB5F 'DUMB FIRE-BALL' MINE
LABEL $CB7E ROT_MINE4
COMMENT_LABEL $CB7E 'MAGNETIC FIRE-BALL' MINE
LABEL $CB63 bossfightStart
COMMENT_LABEL $CB63 enemyobject_list+ 10 *MAX_ENEMY_OBJECTS
LABEL $CB63 bossPosY
LABEL $CB64 bossPosX
LABEL $CB63 introBossX
LABEL $CB64 introPlayerX
LABEL $CB65 bossMoveDir
LABEL $CB66 bossTimer
LABEL $CB68 explosionCount
LABEL $CB68 bossHP
LABEL $CB6A bossExtroPointer
LABEL $CB6A bossWasHit
LABEL $CB6B tmp3
LABEL $CB6C bossfightStart_second
LABEL $C9A6 bossExplosionSpace1
COMMENT_LABEL $C9A6 ??? bossMoveDir
LABEL $C9AB bossExplosionSpace2
LABEL $C9B0 bossExplosionSpace3
LABEL $CB61 boss3Xpos16
LABEL $CB6C leftSmallGunAnimDelayCounter
LABEL $CB6D eyeLeftAnimDelayCounter
LABEL $CB6E eyeLeftAnimCounter
LABEL $CB6F leftSmallGunAnimCounter
LABEL $CB70 leftSmallGunAnimStart
LABEL $CB71 rightSmallGunAnimDelayCounter
LABEL $CB72 rightSmallGunAnimCounter
LABEL $CB73 rightSmallGunAnimStart
LABEL $CB74 leftBigGunAnimDelayCounter
LABEL $CB75 leftBigGunAnimCounter
LABEL $CB76 leftBigGunAnimStart
LABEL $CB77 rightBigGunAnimDelayCounter
LABEL $CB78 rightBigGunAnimCounter
LABEL $CB79 rightBigGunAnimStart
LABEL $CB7A calibrationStage
LABEL $CB6C swarmCounter
LABEL $CB6D intensityBoss2Intro
LABEL $CB6E antennaDelayCounter
LABEL $CB6F antennaAnimCounter
LABEL $CB70 boss2Scale
LABEL $CB71 boss2Direction
LABEL $CB72 maxSwarmAttacker
LABEL $CB6C boss3MouthAnimCounter
LABEL $CB6D boss3AttachmentScale
LABEL $CB6E boss3LetterCannonPointer
LABEL $CB70 boss3LetterCannonWait
LABEL $CB71 boss3ShieldCount
LABEL $CB72 boss3HPCompare
LABEL $CB74 boss3MovementPointer
LABEL $CB76 boss3YposNow16
LABEL $CB78 boss3XposNow16
LABEL $CB5F boss3Ypos16
LABEL $CB61 boss1Scale
LABEL $CAB9 boss4WeaponAnimCounter
LABEL $CABA boss4WeaponActive
LABEL $CABB boss4ShotStage
LABEL $CABC boss4ShotStageDelayCounter
LABEL $CABD boss4ShotLineCounter
LABEL $CABE boss4LaserStartTmp
LABEL $CAC0 boss4LaserTargetTmp
LABEL $CAC2 maxYSum
LABEL $CAC3 lukeX
LABEL $CAC4 displayExplosions
EQU $03 BOSS4_LASER_COUNT
EQU $04 Boss4LaserBeam
EQU $00 boss4LaserTarget
EQU $02 boss4shotMax
EQU $03 boss4shotMin
EQU $04 Boss4GroundExplosion
EQU $00 ExPosy
EQU $01 ExPosx
EQU $02 ExSizeCounter
EQU $03 ExSize
LABEL $CAC5 signFlag
LABEL $CAC6 b4_divide_tmp
LABEL $CAC7 b4_tmp1
LABEL $CAC9 b4_tmp2
LABEL $CACA boss4laserData
LABEL $CAD6 boss4explosionData
EQU $1D version
EQU $2E zeroPointer
LABEL $02DA main
LABEL $0032 jmpBankIRQ0T1
EQU $49 jsrBank1_fromBank2_T1
LABEL $0076 jsrBank0_fromBank3_T1
LABEL $009E jsrBank0_fromBank3_Shift
LABEL $00C9 jsrBank0_fromBank2_T1
LABEL $00E1 jsrBank0_fromBank2_Shift
LABEL $00FC jmpBankIRQ0Shift
LABEL $010E doShiftIRQ
LABEL $0106 jmpBankIRQ1Shift
LABEL $0120 jmpBankIRQ2X
LABEL $0132 jmpBankIRQ3X
LABEL $0147 jsrBank2_fromShift_0
LABEL $0147 jsrBank3_fromShift_1
LABEL $0162 jsrBank1_fromBank3_T1
LABEL $017A jsrBank1_fromBank0_T1
LABEL $018D jsrBank2_fromT1_1
LABEL $01B5 jsrBank2_from1_SHIFT
LABEL $01E0 jsrBank3_from0_SHIFT
LABEL $020B jmpBank2_from1
LABEL $021D jmpBank2_from0
LABEL $021D jmpBank3_from1
LABEL $0227 jsrBank0X
LABEL $0236 jmpBank0X
LABEL $0240 jsrBank1X
LABEL $024F jmpBank1X
LABEL $0255 jsrBank1X_d
LABEL $0269 jmpBackBonusChallenge
LABEL $0714 bonus_doneChallenge
LABEL $0270 jmpBack1BonusIngame
LABEL $0588 bonus_done
LABEL $0277 jmpBack3BonusDying
LABEL $0FB2 bonus_done_dying
LABEL $027E doMainBank0
LABEL $0289 doMainBank0_m
EQU $01 DRAW_VLP_BANK
LABEL $0294 Draw_Vlp0_0
LABEL $029E LF33D4848
LABEL $02A2 Draw_VLp_letter
LABEL $02B7 LF425_letter
LABEL $02DA first_init
COMMENT_LABEL $02DA #isfunction
LABEL $02EC REPLACE_1_2_main00_varFrom0_3
COMMENT_LABEL $02EC bank 0 replace
LABEL $02F2 main1
LABEL $02F2 main_1
LABEL $02F2 gameOver
LABEL $0300 noRoll
LABEL $030B noNewMax
LABEL $0E97 clear_all_sound
COMMENT_LABEL $0E97 #isfunction
LABEL $030E REPLACE_1_2_gameOver00_varFrom0_3
COMMENT_LABEL $030E bank 0 replace
LABEL $0314 main11
LABEL $0314 main_11
LABEL $0E2B initGame
COMMENT_LABEL $0E2B #isfunction
EQU $00 START_WITH_SHOP
EQU $00 SCOOPY_TEST
LABEL $7106 spawnStar
COMMENT_LABEL $7106 #isfunction
LABEL $092D afterDying
LABEL $031D main12
COMMENT_LABEL $031D #isfunction
LABEL $031D main_12
LABEL $031D shots_done
LABEL $032B noAnimChange_m1
LABEL $75B1 adjustStars
LABEL $034B wr_wait
LABEL $0528 isIntroNoBug
EQU $00 MANY_MEGA
LABEL $0429 biggyFinishedStart49
LABEL $0392 noEOR50
LABEL $03A3 noEOR51
LABEL $03AC testCashStealer49
LABEL $03F4 noMoneyStealer49
LABEL $4E8A spawnEnemy
COMMENT_LABEL $4E8A #isfunction
LABEL $2DE3 enemyMoneySucker
LABEL $6A26 moneySuckerBehaviour
COMMENT_LABEL $6A26 #isfunction
LABEL $2DDC enemyMegaFiend
LABEL $6A47 megaFiendBehaviour
COMMENT_LABEL $6A47 #isfunction
LABEL $0436 notInIntroPhase
LABEL $4768 doIntro
COMMENT_LABEL $4768 #isfunction
LABEL $04C3 noLevelTimeOut52
LABEL $0451 onlyEasy52
LABEL $0457 redCont52
LABEL $046B noTimerReduce52
LABEL $0459 notContRed52
LABEL $0466 contred52
LABEL $04C3 noTimeoutSpawn52
LABEL $2DCE enemySaucerDefinition
EQU $14 SAUCER_HP
EQU $64 MONEYMOTHERSHIP_HP
LABEL $04BE normalSaucer52
LABEL $2DD5 enemyMoneyMothershipDefinition
LABEL $6A05 moneyMothershipBehaviour
COMMENT_LABEL $6A05 #isfunction
LABEL $69DF saucerBehaviour
COMMENT_LABEL $69DF #isfunction
LABEL $0528 noBugSpawn53
LABEL $04E0 notToLowBugCount53
LABEL $04FA noBugHpChange53
LABEL $04FA easy453
LABEL $0514 noEOR54
LABEL $7BE4 bugEntryBehaviour
COMMENT_LABEL $7BE4 #isfunction
LABEL $2C20 displayScore
LABEL $0A55 displayStaticBonus
COMMENT_LABEL $0A55 #isfunction
LABEL $2A59 calibrationZero7
COMMENT_LABEL $2A59 #isfunction
LABEL $0566 noEndGameTest
LABEL $0793 nextLevel
COMMENT_LABEL $0793 #isfunction
LABEL $056E nowBulletSpawn
LABEL $6B44 spawnShot
COMMENT_LABEL $6B44 #isfunction
EQU $00 UNDYING
LABEL $057F noPlayerHit
LABEL $0EAC playerDying
COMMENT_LABEL $0EAC #isfunction
LABEL $057F REPLACE_1_2_doFighterPrep_varFromIRQ0_1
LABEL $05AE stars_done
LABEL $05BE enemies_done
LABEL $0604 noMainLaser
LABEL $05DA backy1
LABEL $8041 lasershotReEntry
LABEL $05EF backy2
LABEL $0604 backy3
LABEL $0604 noLaserInGame
LABEL $0626 enemyShotRefTable
LABEL $063A addScore10000
LABEL $0643 incAgain1
LABEL $067B addScoreBack1
LABEL $264F compare10000
LABEL $064F addScore25000
LABEL $0658 incAgain2
LABEL $066F addScoreBack12
LABEL $25D8 checkScore
LABEL $0675 addScoreBack11
LABEL $067C addScore1000
LABEL $0685 incAgain3
LABEL $0691 addScore100
LABEL $069A incAgain2_
LABEL $06A6 displayAMainRound
COMMENT_LABEL $06A6 #isfunction
LABEL $06B0 noAnimChange_m2
LABEL $06B9 REPLACE_1_2_JoyDigitalHorizontal00_varFrom0_3
COMMENT_LABEL $06B9 bank 0 replace
LABEL $06CF notDrunken_mr
LABEL $06FF REPLACE_1_2_doFighterPrep_varFromIRQ0_2
LABEL $071D stars_doneChallenge
LABEL $0730 displaySmallMainRound
COMMENT_LABEL $0730 #isfunction
LABEL $1309 bossFightPlayerStuff
COMMENT_LABEL $1309 #isfunction
LABEL $0733 REPLACE_1_2_doymsound100_varFromIRQ1_2
LABEL $0739 REPLACE_1_2_JoyDigitalHorizontal00_varFrom0_4
COMMENT_LABEL $0739 bank 0 replace
LABEL $074F notDrunken_mrs
LABEL $074F setUpMainRound
COMMENT_LABEL $074F #isfunction
LABEL $1224 initStars
COMMENT_LABEL $1224 #isfunction
LABEL $0755 setUpMainRound_woStars
COMMENT_LABEL $0755 #isfunction
LABEL $076F hsEnemyList
LABEL $0775 enemyDonehsList
LABEL $0775 REPLACE_1_2_enemiesDoneHS_varFromIRQ1_2
LABEL $077B hsDoStarsList
LABEL $0781 starsDonehsList
LABEL $0781 stars_done_hsList
LABEL $0781 REPLACE_1_2_starsDoneIn02_varFromIRQ1_2
LABEL $0787 hsDoStars
LABEL $078D starsDoneHs
LABEL $078D REPLACE_1_2_starsDoneIn0_varFromIRQ1_2
LABEL $0793 REPLACE_1_2_levelDoneAchievementTest_varFrom0_1
LABEL $0799 backFromlevelDoneAchievementTest
LABEL $07A8 noSuperDiamonds
LABEL $07A2 REPLACE_1_2_doSuperDiamond_varFromIRQ1_1
LABEL $07AB nextLevelFailure
LABEL $0860 noBonusLevel_nl
LABEL $07DA perfectBonusAchieved
LABEL $07D2 REPLACE_1_2_ensureScoopiesSafety_varFrom0_1
COMMENT_LABEL $07D2 bank 0 replace
LABEL $0846 challengeDoneLoop
LABEL $07FA mulok
LABEL $07FC mulAgain
LABEL $0802 donMulAgain
LABEL $0809 bok
LABEL $080B addScoreAgain
LABEL $0816 REPLACE_1_2_afterChallengeAchievementTest_varFrom0_1
LABEL $081C backFromChallengeAchievementTest
LABEL $081C REPLACE_1_2_ensureScoopiesSafety_varFrom0_2
COMMENT_LABEL $081C bank 0 replace
LABEL $0822 REPLACE_1_2_backFromFireWorks_varFrom0_1
LABEL $0834 fw_next_list_exentry_1
LABEL $084C REPLACE_1_2_displayChallengeResult00_varFrom0_3
COMMENT_LABEL $084C bank 0 replace
LABEL $0857 challengeResultDone
LABEL $1246 initNormalEnemies
COMMENT_LABEL $1246 #isfunction
LABEL $085A REPLACE_1_2_ensureScoopiesLoaded_varFrom0_1
COMMENT_LABEL $085A bank 0 replace
LABEL $0860 noBigBonus
LABEL $0889 noShopAfter
EQU $32 SHOP_WAIT_TIMER
LABEL $0876 shopWaitLoop
LABEL $087E shopWaitDone
LABEL $087E REPLACE_1_2_doShop00_varFromIRQ1_18
COMMENT_LABEL $087E bank 0 replace
LABEL $00AA WARPLEN
LABEL $091B noWarpAfter
LABEL $0B3C initWarp
COMMENT_LABEL $0B3C #isfunction
LABEL $089A REPLACE_1_2_warp1data_varFromIRQ1_1
LABEL $08A0 REPLACE_1_2_warp1data_varFromIRQ1_2
LABEL $08A6 REPLACE_1_2_warp1data_varFromIRQ1_3
LABEL $08AC inWarp
LABEL $091B warpDone
LABEL $08E2 addWarp
LABEL $08D3 noFailureTest
LABEL $08C2 noEOR61
LABEL $08EF warplenDone
LABEL $0919 noPlayerMovement62
LABEL $090A leftPlayerMovement62
LABEL $08F9 rightPlayerMovement62
LABEL $0919 playerMovementDone62
EQU $00 DONT_INCREASE_LEVELS
EQU $00 ENDLESS_DEMO
LABEL $0B9F initLevel
COMMENT_LABEL $0B9F #isfunction
LABEL $0930 doFailure1
LABEL $C8E3 titletextIntensity
LABEL $C817 titletextFadeDirection
LABEL $C818 titletextDisplayDone
LABEL $096E warpDoneLoop
LABEL $0968 REPLACE_1_2_levelSpeech_varFromIRQ0_1
LABEL $0987 noShopTest
LABEL $0975 REPLACE_1_2_getButtonState_varFrom0_32
COMMENT_LABEL $0975 bank 0 replace
LABEL $097F REPLACE_1_2_doShop00_varFromIRQ1_118
COMMENT_LABEL $097F bank 0 replace
LABEL $099A noDoubleInc
LABEL $09A1 noTrippleInc
LABEL $09A5 noLevelDisplay1
LABEL $0A19 nextLevelDone
LABEL $09C4 noTitleInBoss
LABEL $09BE REPLACE_1_2_showLevelTitleStep_varFromIRQ0_1
LABEL $09D8 notDisplayWarpFailure
LABEL $09D0 REPLACE_1_2_drawWarpFailure_varFrom0_1
COMMENT_LABEL $09D0 bank 0 replace
LABEL $09F0 doNotprintLevel
LABEL $09E3 REPLACE_1_2_drawLevelString00_varFrom0_3
COMMENT_LABEL $09E3 bank 0 replace
LABEL $09FD noBonusLevel
LABEL $09F4 REPLACE_1_2_drawBonusString00_varFrom0_3
COMMENT_LABEL $09F4 bank 0 replace
LABEL $0A0A noKamikazeLevel
LABEL $0A01 REPLACE_1_2_drawKamikazeString00_varFrom0_3
COMMENT_LABEL $0A01 bank 0 replace
LABEL $0A10 REPLACE_1_2_drawBossString00_varFrom0_3
COMMENT_LABEL $0A10 bank 0 replace
LABEL $0A16 noBossLevel1
LABEL $0A21 noWarpFailureHere
LABEL $120B initNormalJMPPointer
COMMENT_LABEL $120B #isfunction
LABEL $23A4 initBoss1
COMMENT_LABEL $23A4 #isfunction
LABEL $20EA initBoss2
COMMENT_LABEL $20EA #isfunction
LABEL $1DF9 initBoss3
COMMENT_LABEL $1DF9 #isfunction
LABEL $1914 initBoss4
COMMENT_LABEL $1914 #isfunction
LABEL $0A8D tryBonusX
LABEL $46A0 BonusEList
LABEL $0A80 LF33D6565
LABEL $2843 SMVB_drawSmart
COMMENT_LABEL $2843 #isfunction
LABEL $0ABA tryBonusT
LABEL $4636 BonusXList
LABEL $0AAD LF33D6868
LABEL $0AE7 tryBonusR
LABEL $4687 BonusTList
LABEL $0ADA LF33D7171
LABEL $0B14 tryBonusA
LABEL $464F BonusRList
LABEL $0B07 LF33D7474
LABEL $0B3B bonusDisplayDone
LABEL $4669 BonusAList
LABEL $0B34 LF33D7777
LABEL $0B5E scoopiesAreSave
LABEL $0B64 doNotKeepScoopies
LABEL $0B5E REPLACE_1_2_ensureScoopiesSafety_varFrom0_3
COMMENT_LABEL $0B5E bank 0 replace
LABEL $0B70 next_PS_list_entry_ig3_s
LABEL $0B85 spawmNextStar
LABEL $762A starWarpBehaviour
COMMENT_LABEL $762A #isfunction
LABEL $9EF9 failureLevels
LABEL $0BCF noFailure
LABEL $9F0D levels
LABEL $0C1E levelGot1
LABEL $0C1B levelGot
LABEL $0BE8 noDownGradeMax
LABEL $0BEB REPLACE_1_2_levelRollOverAchievementTest_varFromIRQ1_1
LABEL $0BF1 backFromlevelRollOverAchievementTest
LABEL $0C0D notMaxDif
LABEL $0C56 directLevel
LABEL $0C3F isNormalLevel
LABEL $0C5B noNormalLevel
LABEL $0C46 nextEnemyCountInfo
LABEL $0C7B isNoBugLevel
LABEL $0CD5 easy3
LABEL $0CB7 normal3
LABEL $0CFE hard3
LABEL $0C8F impossible3
LABEL $0C8B superImpossible
LABEL $0C9C contimp3
LABEL $0C9C dontChangeBonusLevels1
LABEL $0CAF challengeNoShotIncrease1
LABEL $0D30 difCont3
LABEL $0CDD noBugsInThisLevel
LABEL $0D18 challengeNoShotIncrease2
LABEL $0D2D dontChangeBonusLevels2
LABEL $0D4C keepEnemyShots
LABEL $0D40 noteasy3
LABEL $0D49 easyWarpDone
LABEL $0D47 notNormal3
LABEL $0D5D initLevelContinue
LABEL $0D5D REPLACE_1_2_initLevelInt0_varFromIRQ0_1
LABEL $0D66 REPLACE_1_2_adjustShotDamage_varFrom0_4
COMMENT_LABEL $0D66 bank 0 replace
LABEL $126A initNormalEnemyShots
COMMENT_LABEL $126A #isfunction
LABEL $0D75 REPLACE_1_2_ensureScoopiesSafety_varFrom0_4
COMMENT_LABEL $0D75 bank 0 replace
LABEL $0D7B REPLACE_1_2_ensureScoopiesLoaded_varFrom0_2
COMMENT_LABEL $0D7B bank 0 replace
LABEL $128C initPlayerShotList
COMMENT_LABEL $128C #isfunction
LABEL $0D99 doFailure2
COMMENT_LABEL $0D99 #isfunction
LABEL $0DA1 doFailure3
LABEL $0D95 doFailuressss
LABEL $9EFD failureLevel1
LABEL $0DB4 bugFailureOk
LABEL $0DC5 notSecondFailure
LABEL $0DC5 not_easy3
LABEL $0DCC spawnNextFailureBug
LABEL $0E20 noBugSpawnFailure
LABEL $0DE2 noBugHpChange_Failure
LABEL $0DFC noEOR78
LABEL $0E07 noEOR79
LABEL $7D90 failureBehaviour
COMMENT_LABEL $7D90 #isfunction
LABEL $0E2B REPLACE_1_2_initGame0_varFromIRQ0_1
LABEL $11E9 initNormalBonus
COMMENT_LABEL $11E9 #isfunction
LABEL $0E51 REPLACE_1_2_initAchievementValues_varFromIRQ0_1
LABEL $0E91 noDemo
LABEL $5B9B enemyPlayerControlledRightBehaviour
COMMENT_LABEL $5B9B #isfunction
LABEL $2DEA enemy1Definition
LABEL $5C23 enemyPlayerControlledLeftBehaviour
COMMENT_LABEL $5C23 #isfunction
LABEL $0E85 REPLACE_1_2_ensureScoopiesSafety_varFrom0_5
COMMENT_LABEL $0E85 bank 0 replace
LABEL $0E8B REPLACE_1_2_initDemo_varFromIRQ0_1
EQU $00 PLAYER_SHIELD_START
LABEL $0E91 reinitJumpBacks
LABEL $0E97 beQuiet
LABEL $0E97 QUIET
LABEL $0FD5 enemies_done_dying
LABEL $0FD9 shots_done_dying
LABEL $0FDF stars_done_dying
LABEL $0EFF REPLACE_1_2_lastExplosionData_varFromIRQ1_1
LABEL $0F27 isBossFightNoDeatchBonus
LABEL $0F21 REPLACE_1_2_initDeathBonus_varFromIRQ0_1
LABEL $0F27 returnDeathBonus
LABEL $0F27 main_dying
COMMENT_LABEL $0F27 #isfunction
LABEL $0F31 noAnimChange_m3
LABEL $0F4B noboss1DisplayInDying
LABEL $0F43 REPLACE_1_2_displayBoss1_varFrom0_3
COMMENT_LABEL $0F43 bank 0 replace
LABEL $0F46 bossDisplay_01
LABEL $0F7C noadditionalDisplay
LABEL $0F54 noboss2DisplayInDying
LABEL $0F4F REPLACE_1_2_displayBoss2_varFrom0_3
COMMENT_LABEL $0F4F bank 0 replace
LABEL $0F5D noboss3DisplayInDying
LABEL $0F58 REPLACE_1_2_displayBoss3_varFrom0_3
COMMENT_LABEL $0F58 bank 0 replace
LABEL $0F66 noboss4DisplayInDying
LABEL $0F61 REPLACE_1_2_displayBoss4_varFrom0_3
COMMENT_LABEL $0F61 bank 0 replace
LABEL $10EC doPlayerExplosion
COMMENT_LABEL $10EC #isfunction
LABEL $0FE6 dyingDone
LABEL $0FEB nextBonusBehaviourTest
LABEL $0FED REPLACE_1_2_risingBonusBehaviour_varFrom0_0
COMMENT_LABEL $0FED bank 0 replace
LABEL $0FF7 noBehaviorChange
LABEL $0FF2 REPLACE_1_2_fallingBonusBehaviour_varFrom0_0
COMMENT_LABEL $0FF2 bank 0 replace
LABEL $1012 notGameOver
LABEL $100C REPLACE_1_2_gameOverFinalScoring_varFromIRQ1_1
EQU $00 BOSS_FIGHT_DEATH_JUMP
LABEL $103A noBossDeathFight
LABEL $1027 noEOR86
LABEL $1034 REPLACE_1_2_showBossDeath_varFromIRQ0_1
LABEL $103A backFromBothDeathMessage
LABEL $1047 noLock
LABEL $10AB lockPurchased_jmp
EQU $00 AUTO_FIRE
LABEL $105E timerOkHere
LABEL $106B noShotReduce
LABEL $1075 noShotReduce2
LABEL $1093 noShotReduce3
LABEL $108D noMul87
LABEL $10A3 noShotReduce4
LABEL $10AB bulletAdjustOk
LABEL $10AB reinitLevelStartFromDodger
LABEL $10B5 thisWasNoBossFight
LABEL $10BB doBossExplosion
COMMENT_LABEL $10BB #isfunction
LABEL $10EB bossEntrype__Ret
LABEL $10F7 bossEntrype
LABEL $0001 SPEED_ADD
COMMENT_LABEL $0001 how fast expanding
LABEL $0005 ANGLE_ADD
COMMENT_LABEL $0005 how many dots per "circle" (63/ x)
LABEL $C8C4 tmp8Count
LABEL $0002 ANGLE_ROT_ADD
COMMENT_LABEL $0002 how fast inner rotating
LABEL $C8C3 tmp8
LABEL $110C next_exangle_rot_ob_scale
LABEL $1653 getCircleCoordinate
LABEL $C8C1 tmp16_pos
LABEL $C8B1 tmp16_neg
LABEL $1127 LF33D9090
LABEL $84A0 AnimList
LABEL $115C LF33D9292
LABEL $1176 LF425_lg_193
LABEL $11A0 macroEnd93
LABEL $117F Draw_VLp_lessGap_193
LABEL $1197 LF425_lg93
LABEL $11E4 LF33D9595
LABEL $11E8 exitExplosionSub
LABEL $11F5 next_list_entry_igb2_boss
LABEL $121D REPLACE_1_2_playerShotsDoneMain_varFrom0_0
COMMENT_LABEL $121D bank 0 replace
LABEL $1230 next_PS_list_entry_ig3_s1
LABEL $1252 next_list_entry_ig
LABEL $1276 next_list_entry_ig2
LABEL $1298 next_PS_list_entry_ig3
LABEL $12AB initRandomBossExplosion
LABEL $12AB REPLACE_1_2_explosion1Data_varFromIRQ1_3
LABEL $12B8 sound2
LABEL $12C5 soundDone
LABEL $12C2 sound1
LABEL $12D1 noEOR96
LABEL $12E4 noEOR97
LABEL $12F1 notOOBbe1
LABEL $12F9 noEOR98
LABEL $1306 notOOBbe2
LABEL $131C noAnimChange_m1_b2
LABEL $1373 noPlayerMovement101
LABEL $1364 leftPlayerMovement101
LABEL $1353 rightPlayerMovement101
LABEL $1373 playerMovementDone101
LABEL $0014 BOSS1_Y_LOW
LABEL $1397 startFresh102
LABEL $139A nextShotTestLoaded102
LABEL $1386 enemyOutOfBounds102
LABEL $13A8 godShotHere103
LABEL $1421 endm103
EQU $02 shot_y_radius_corrdction
LABEL $13BA shotIsAlive1103
LABEL $13DA not6Shot103
LABEL $13C2 not4Shot103
LABEL $13DC shotdone103
LABEL $13CA not3Shot103
LABEL $13D2 not2Shot103
LABEL $13F4 ok1103
LABEL $140A ok2103
LABEL $141E okok103
EQU $00 NO_2SHOT_TEST
LABEL $1429 loadNextShot2104
LABEL $1437 startFresh2104
LABEL $142F loadNextShot3104
LABEL $1448 nextShotTestLoaded2104
LABEL $1457 nextShotTestLoadedreally104
LABEL $14EC noSameShots104
LABEL $1473 godShotHere105
LABEL $14EC endm105
LABEL $1485 shotIsAlive1105
LABEL $14A5 not6Shot105
LABEL $148D not4Shot105
LABEL $14A7 shotdone105
LABEL $1495 not3Shot105
LABEL $149D not2Shot105
LABEL $14BF ok1105
LABEL $14D5 ok2105
LABEL $14E9 okok105
LABEL $14FF noPlayerHit_b1
LABEL $14FF REPLACE_1_2_doFighterPrep_varFromIRQ0_6
LABEL $1505 initBossFight
COMMENT_LABEL $1505 in A number of shots to initialize
LABEL $150F next_list_entry_ig2_b1
LABEL $C894 isBoss1
LABEL $153A extroBoss
COMMENT_LABEL $153A #isfunction
LABEL $1549 notBoss1
LABEL $157F loopyboss3End
LABEL $1585 REPLACE_1_2_JoyDigitalHorizontal00_varFrom0_5
COMMENT_LABEL $1585 bank 0 replace
LABEL $159B notDrunken_mrbo
LABEL $159B REPLACE_1_2_doymsound100_varFromIRQ1_3
LABEL $15E8 noexplosions
LABEL $15C8 only2Explosions
LABEL $15C5 exp1BossCorrect
LABEL $15D4 exp2BossCorrect
LABEL $15E3 exp3BossCorrect
LABEL $15EE endOfEndOfBossDisplay
LABEL $15E8 REPLACE_1_2_displayBossResult00_varFrom0_1
LABEL $160D doBlackHoleInit
LABEL $15FD blackHoleInitDone
LABEL $1613 loopyboss3End_1
LABEL $1616 REPLACE_1_2_JoyDigitalHorizontal00_varFrom0_15
COMMENT_LABEL $1616 bank 0 replace
LABEL $162C notDrunken_mrbo3
LABEL $162C REPLACE_1_2_doymsound100_varFromIRQ1_123
LABEL $163F preHoleDone
LABEL $1637 REPLACE_1_2_displayBoss1_varFrom0_61
COMMENT_LABEL $1637 bank 0 replace
LABEL $163F REPLACE_1_2_doBoss1Explosion_varFrom0_1
COMMENT_LABEL $163F bank 0 replace
LABEL $1645 REPLACE_1_2_doBoss1Explosion_varFrom0_2
COMMENT_LABEL $1645 bank 0 replace
LABEL $164B REPLACE_1_2_doBoss1Explosion_varFrom0_3
COMMENT_LABEL $164B bank 0 replace
LABEL $FC6D BIOS_SIN_TABLE
LABEL $166E notBig
LABEL $167A cosNegative
LABEL $166A cosPositive
LABEL $167F spawnAll42
LABEL $1686 doSpawnEnemyAgain
LABEL $168E noEOR106
LABEL $1699 set7f_2
LABEL $169B ok63_2
LABEL $16A3 noEOR107
LABEL $16C6 enemySpawningDone
LABEL $6A68 fallCashBehaviour
COMMENT_LABEL $6A68 #isfunction
LABEL $16C9 damagePlus
LABEL $16D1 cashDouble
LABEL $16D9 multi2String
LABEL $16E2 multi5String
LABEL $16EB immunity1String
LABEL $16F3 immunity2String
LABEL $16FB timerString
LABEL $1702 rankAllString
LABEL $170B rankString
LABEL $1710 cashbombString
LABEL $1710 diamonbombString
LABEL $1715 extraBullet
LABEL $171D extraBulletMiss
LABEL $1725 extraSpeed
LABEL $172C extraSlow
LABEL $1733 extraGunSpeed
LABEL $1739 slowerGunSpeed
LABEL $173F smartBombAdded
LABEL $1745 cash5
LABEL $174D cash200
LABEL $1757 cash20
LABEL $1760 cash50
LABEL $1769 extraArmor
LABEL $176F extraShield
LABEL $1776 extraScoop
LABEL $177C extraShot1
LABEL $1783 extraShot2
LABEL $178A extraShot3
LABEL $1791 MineDisplayString
LABEL $1797 TribbleString
LABEL $179F SecretString
LABEL $17A7 AchieveString
LABEL $17B0 extraLifeString
LABEL $17B6 drunkenString
LABEL $17BE autofireString
LABEL $17C7 DemoString
LABEL $17CD DrunkenMasterString
LABEL $17D7 displaySpriteCalibration
LABEL $2A96 SM_Fighter_0
LABEL $4188 BugSin_0
LABEL $1814 backFromBugPrintCalib
LABEL $4407 Bug_Destroyer
LABEL $1834 backFromBugPrintCalib2
EQU $3C BOSS1_HIT_X_OFFSET
EQU $07 BOSS2_HIT_X_OFFSET
EQU $14 BOSS2_Y_LOW
EQU $1E BOSS3_HIT_X_OFFSET
EQU $1E BOSS4_HIT_X_OFFSET
LABEL $00C8 LASER_TIME
EQU $3C BETWEEN_TIME
EQU $40 BOSS_Y_POSSITION_4
COMMENT_LABEL $40 $60
LABEL $1837 coldetectBoss3_4
LABEL $1889 xCheckOnly_laser_34
LABEL $185D nonNegb2_34
LABEL $1885 notHit_34
LABEL $1863 xCheckOnly_34
LABEL $1871 testOnB3_1_34
LABEL $187B testOnB3_2_34
LABEL $8460 removeCurrentShotAndObjectBoss
LABEL $1896 subInitBoss4
COMMENT_LABEL $1896 #isfunction
LABEL $18AF REPLACE_1_2_playerShotsDoneBoss04_varFrom0_0
LABEL $18C1 next_list_entry_igb4
LABEL $1916 REPLACE_1_2_initTitleRAM_varFrom0_19
LABEL $191C REPLACE_1_2_boss4Intro_varFromIRQ0_9
LABEL $1939 REPLACE_1_2_adjustShotDamage_varFrom0_42
COMMENT_LABEL $1939 bank 0 replace
LABEL $1956 easy8
LABEL $1951 normal8
LABEL $1951 hard8
LABEL $194C impossible8
LABEL $1959 difCont8
LABEL $1D62 enemies_done_boss4
LABEL $1970 enemiesShots_done_boss4
LABEL $1970 main1Boss4
COMMENT_LABEL $1970 #isfunction
LABEL $197F nowBulletSpawnb4
LABEL $19AD backToTestBoss4_1
LABEL $19BE backToTestBoss4_2
LABEL $1D75 extroBoss4
COMMENT_LABEL $1D75 #isfunction
LABEL $19C5 REPLACE_1_2_displayBoss4_varFrom0_4
LABEL $19E3 continueCurrentStageBoss4
LABEL $19E3 not10
LABEL $1A6B nothingSpecialAtAll
LABEL $1A66 startRotateWeapon
LABEL $1A06 weaponLinesOnly
LABEL $1A0A doWeaponLines
LABEL $1D52 WeaponList
LABEL $1A11 Draw_VLpWeapon
LABEL $1D44 initBoss4LaserPhase
COMMENT_LABEL $1D44 #isfunction
LABEL $1BA4 laserFireStage
LABEL $1B44 initVader
COMMENT_LABEL $1B44 #isfunction
LABEL $1BF6 handleBossLaserShots
COMMENT_LABEL $1BF6 #isfunction
LABEL $1B65 drawLuke
COMMENT_LABEL $1B65 #isfunction
LABEL $1A90 enemyVader
LABEL $1A97 VaderAngle8Table
LABEL $1A97 VaderAnimTable
LABEL $1AA9 VaderList
LABEL $1AA9 Vader
LABEL $288E SMVB_continue_single
COMMENT_LABEL $288E #isfunction
LABEL $29B5 SMVB_startDraw_single
COMMENT_LABEL $29B5 #isfunction
LABEL $2878 SMVB_continue3_single
COMMENT_LABEL $2878 #isfunction
LABEL $2902 SMVB_continue_double
COMMENT_LABEL $2902 #isfunction
LABEL $286D SMVB_continue4_single
COMMENT_LABEL $286D #isfunction
LABEL $2925 SMVB_startMove_single
COMMENT_LABEL $2925 #isfunction
LABEL $2A47 SMVB_lastDraw_rts2
COMMENT_LABEL $2A47 #isfunction
LABEL $1B0A XWing
LABEL $284C SMVB_continue7_single
COMMENT_LABEL $284C #isfunction
LABEL $2857 SMVB_continue6_single
COMMENT_LABEL $2857 #isfunction
LABEL $2A25 SMVB_lastDraw_rts
COMMENT_LABEL $2A25 #isfunction
LABEL $95C5 vaderLoopyPattern
LABEL $1B64 noSpawnBoss4
LABEL $95C5 vaderIntroPattern
COMMENT_LABEL $95C5 entry8
LABEL $5579 enemyIntroPatternBehaviourVader
COMMENT_LABEL $5579 #isfunction
LABEL $1B6B lukeIsNeg
LABEL $1B7E noLukeDec
LABEL $1B8E lukeOk
LABEL $1BA3 lukeInvisible
LABEL $1BC8 noextendedLaser
LABEL $1BAB noextendedLaser2
LABEL $1BE1 fireLaser
COMMENT_LABEL $1BE1 #isfunction
LABEL $1BFF noLaser1
LABEL $1C10 boss4FireLaser
COMMENT_LABEL $1C10 #isfunction
LABEL $1C07 noLaser2
LABEL $1C0F noLaser3
LABEL $1C3F okAsislaser
LABEL $1C41 storeHere
LABEL $1CF5 clipDToMax
COMMENT_LABEL $1CF5 #isfunction
LABEL $1C7B okAsislaser2
LABEL $1C7D storeHere2
LABEL $1CA0 LF3F4_b4
EQU -$40 BOSS4_LASER_YEND
LABEL $1CCD nomaxOverflow
LABEL $1CE4 boss4InitGroundExplosion
COMMENT_LABEL $1CE4 #isfunction
LABEL $1CDE doneLser
LABEL $1CD9 noMinDec
EQU -$28 BOSS3_LASER_LENGTH
LABEL $1CDD noMaxDec
LABEL $1CF4 exIsInit
LABEL $1D04 maxShotPos
LABEL $1D0B bPosb4_1
LABEL $1D19 difDByTmp
LABEL $1D16 bPosB4_2
LABEL $1D40 divide_by_zero113
LABEL $1D38 divide_next113
LABEL $1D2A divide_next1113
LABEL $1D32 divide_by_zero1113
LABEL $1D43 divide_end113
LABEL $1D88 extro4PointerSUB
LABEL $1D88 REPLACE_1_2_displayFullDeathstar_varFrom0_2
EQU $60 BOSS_Y_POSSITION_3
LABEL $1D8E subInitBoss3
LABEL $1DB3 next_list_entry_igb3
LABEL $2080 boss3Shots
LABEL $1DEA loadAgaina
LABEL $1FB2 boss3MoveData
LABEL $1DF5 movementOka
LABEL $1DFB REPLACE_1_2_initTitleRAM_varFrom0_17
LABEL $1E01 REPLACE_1_2_doBoss3Intro00_varFromIRQ0_9
LABEL $1E09 REPLACE_1_2_playerShotsDoneBoss03_varFrom0_0
LABEL $5C8B initMovementBoss3
LABEL $1E20 REPLACE_1_2_adjustShotDamage_varFrom0_43
COMMENT_LABEL $1E20 bank 0 replace
LABEL $1E3D easy7
LABEL $1E38 normal7
LABEL $1E38 hard7
LABEL $1E33 impossible7
LABEL $1E40 difCont7
LABEL $1F9F enemies_done_boss3
LABEL $1E4F enemiesShots_done_boss3
LABEL $1E4F main1Boss3
COMMENT_LABEL $1E4F #isfunction
LABEL $1E7B backToTestBoss3_1
LABEL $1E8C backToTestBoss3_2
LABEL $20A6 extroBoss3
COMMENT_LABEL $20A6 #isfunction
LABEL $1E93 bossFightNotDoneBoss3
LABEL $1EBA isNotNegBoss3y
LABEL $1EEA boss3TargetNotReached
LABEL $1EC6 isNotNegBoss3x
LABEL $1EE7 boss3NextTargetOk
LABEL $1ED9 loadAgain
LABEL $1EE4 movementOk
LABEL $1F08 boss3NotDirectHit
LABEL $1F01 noNegPosBoss3
LABEL $1F23 noHPChangeBoss3
LABEL $1F1D REPLACE_1_2_explosion1Data_varFromIRQ1_31
LABEL $1F23 REPLACE_1_2_displayBoss3_varFrom0_9
COMMENT_LABEL $1F23 bank 0 replace
LABEL $1F9F noNewShotBoss3
LABEL $1F58 shotBoss3Ok
LABEL $1F75 boss3ysubok
LABEL $1F78 nextLetterBoss3
LABEL $1F9A noNewShotBoss3_a
LABEL $1F93 boss3yaddok
LABEL $2023 sinDif0Move
LABEL $2009 sinDif1Move
LABEL $1FC6 sinDif3Move
LABEL $1FEC sinDif2Move
LABEL $2037 boss3Run
LABEL $707D letter_R_AtPlayerBehaviour
COMMENT_LABEL $707D #isfunction
LABEL $7082 letter_U_AtPlayerBehaviour
COMMENT_LABEL $7082 #isfunction
LABEL $7087 letter_N_AtPlayerBehaviour
COMMENT_LABEL $7087 #isfunction
LABEL $2040 boss3Run2
LABEL $7041 letter_SIGN_AtPlayerBehaviour
LABEL $204D boss3Coward
LABEL $7064 letter_C_AtPlayerBehaviour
COMMENT_LABEL $7064 #isfunction
LABEL $7069 letter_O_AtPlayerBehaviour
COMMENT_LABEL $7069 #isfunction
LABEL $706E letter_W_AtPlayerBehaviour
COMMENT_LABEL $706E #isfunction
LABEL $7073 letter_A_AtPlayerBehaviour
COMMENT_LABEL $7073 #isfunction
LABEL $7078 letter_D_AtPlayerBehaviour
COMMENT_LABEL $7078 #isfunction
LABEL $205C boss3IHUNGER
LABEL $705A letter_I_AtPlayerBehaviour
COMMENT_LABEL $705A #isfunction
LABEL $705F letter_SPACE_AtPlayerBehaviour
COMMENT_LABEL $705F #isfunction
LABEL $7055 letter_H_AtPlayerBehaviour
COMMENT_LABEL $7055 #isfunction
LABEL $7050 letter_G_AtPlayerBehaviour
COMMENT_LABEL $7050 #isfunction
LABEL $704B letter_E_AtPlayerBehaviour
COMMENT_LABEL $704B #isfunction
LABEL $206F boss3BEWARE
LABEL $7046 letter_B_AtPlayerBehaviour
LABEL $2084 REPLACE_0_2_voxRun_varFromIRQ0_1
LABEL $208A REPLACE_0_2_voxRun_varFromIRQ0_2
LABEL $2090 REPLACE_0_2_voxRun_varFromIRQ0_3
LABEL $2096 REPLACE_0_2_voxCoward_varFromIRQ0_1
LABEL $209C REPLACE_0_2_voxIHunger_varFromIRQ0_1
LABEL $20A2 REPLACE_0_2_voxBeware_varFromIRQ0_1
LABEL $20B4 extro3PointerSUB
LABEL $20B4 REPLACE_1_2_displayBoss3001_varFrom0_1
COMMENT_LABEL $20B4 bank 0 replace
LABEL $20BA subInitBoss2
LABEL $20DB REPLACE_1_2_playerShotsDoneBoss02_varFrom0_0
LABEL $20EC REPLACE_1_2_initTitleRAM_varFrom0_22
LABEL $20F2 REPLACE_1_2_doBoss2Intro00_varFromIRQ0_9
LABEL $2105 REPLACE_1_2_adjustShotDamage_varFrom0_44
COMMENT_LABEL $2105 bank 0 replace
LABEL $2122 easy6
LABEL $211D normal6
LABEL $211D hard6
LABEL $2118 impossible6
LABEL $2125 difCont6
LABEL $2140 next_list_entry_swarm
LABEL $2212 enemies_done_boss2
LABEL $2168 enemiesShots_done_boss2
LABEL $2168 boss2Loop
COMMENT_LABEL $2168 #isfunction
LABEL $2177 noBackgroundNoiseQueen
LABEL $2171 REPLACE_1_2_queenSoundData_varFromIRQ1_3
LABEL $2191 boss2Shrink
LABEL $21DF bossSizingDone
LABEL $21D0 dodecBoss2
LABEL $21B4 dodecBoss2_shot2
EQU $00 NO_SWARM
LABEL $22F1 spawnSwarm
COMMENT_LABEL $22F1 #isfunction
LABEL $6544 calibrationSwarm
COMMENT_LABEL $6544 #isfunction
LABEL $2261 notHit119
LABEL $2254 xCheckOnly_laser119
LABEL $2232 xCheckOnly119
LABEL $2248 _scoopCenterHit119
LABEL $22A9 notHit120
LABEL $229C xCheckOnly_laser120
LABEL $227A xCheckOnly120
LABEL $2290 _scoopCenterHit120
LABEL $2348 extroBoss2
COMMENT_LABEL $2348 #isfunction
LABEL $22B7 bossFightNotDoneBoss2
LABEL $22B7 REPLACE_1_2_displayBoss2_varFrom0_9
COMMENT_LABEL $22B7 bank 0 replace
LABEL $22D7 backy1s_2
LABEL $22D2 backy1s
LABEL $4E2B newEnemyObject
COMMENT_LABEL $4E2B #isfunction
LABEL $2344 spawnSwarm_end
LABEL $6574 swarmBehaviour
COMMENT_LABEL $6574 #isfunction
LABEL $230B noEOR122
LABEL $2316 swarmyaok
LABEL $2320 noEOR123
LABEL $2329 xPosCorrect_1
LABEL $232F xPosCorrect_2
LABEL $2356 extro2PointerSUB
LABEL $2356 REPLACE_1_2_displayBoss2_varFrom0_8
COMMENT_LABEL $2356 bank 0 replace
LABEL $235C subInitBoss1
LABEL $2364 noBoss1Change
LABEL $2590 enemies_done_boss1
LABEL $23EA enemiesShots_done_boss1
LABEL $239D REPLACE_1_2_playerShotsDoneBoss01_varFrom0_0
LABEL $23AB REPLACE_1_2_doBoss1Intro00_varFromIRQ0_9
LABEL $23D6 easy5
LABEL $23D1 normal5
LABEL $23D1 hard5
LABEL $23CC impossible5
LABEL $23D9 difCont5
LABEL $23E4 REPLACE_1_2_adjustShotDamage_varFrom0_41
COMMENT_LABEL $23E4 bank 0 replace
LABEL $23EA main1Boss1
COMMENT_LABEL $23EA #isfunction
LABEL $244F notHit125
LABEL $2445 xCheckOnly_laser125
LABEL $241B xCheckOnly125
LABEL $2429 testOnB3_1125
LABEL $2434 testOnB3_2125
LABEL $2499 notHit126
LABEL $248F xCheckOnly_laser126
LABEL $2465 xCheckOnly126
LABEL $2473 testOnB3_1126
LABEL $247E testOnB3_2126
LABEL $25A3 extroBoss1
COMMENT_LABEL $25A3 #isfunction
LABEL $24A0 REPLACE_1_2_displayBoss1_varFrom0_4
COMMENT_LABEL $24A0 bank 0 replace
LABEL $24BA boss1MoveLeft
LABEL $24AB boss1MoveRight
LABEL $24C7 boss1MoveDone
LABEL $2501 noShotSpawnBoss1
LABEL $24E4 doAnotherShotBoss1
LABEL $253D noNormalShotBoss1
LABEL $257D noMissileBoss1
LABEL $2550 reduceLoop
LABEL $2558 noReduce
LABEL $25B1 extro1PointerSUB
LABEL $25B1 REPLACE_1_2_displayBoss1_varFrom0_6
COMMENT_LABEL $25B1 bank 0 replace
LABEL $25B7 addScore_d
COMMENT_LABEL $25B7 #isfunction
LABEL $25BA LF861_1x_d
LABEL $25C9 LF861_1x_dd
LABEL $25E0 LF861_1x
LABEL $25F9 compareScore_in
LABEL $25DD addScore_b
COMMENT_LABEL $25DD #isfunction
LABEL $25EC LF86D_1x
LABEL $25F7 LF878_1x
LABEL $2607 score0_ok
LABEL $261B score1_ok
LABEL $262B score2_ok
LABEL $264D score3_ok
LABEL $265B compare100000
LABEL $2678 score_restok
LABEL $267A font_5_data_shift_0
LABEL $267A font5a_line1
LABEL $26D5 font5a_line2
EQU $05 FONT_HEIGHT
EQU $5B FONT_LENGTH
LABEL $265A FONT_START_A
COMMENT_LABEL $265A // space is 1
LABEL $27C6 FONT_END
EQU $01 SHITREG_POKE_VALUE
EQU $07 VB_SPRITE_SCALE
LABEL $2841 SMVBdrawSmart70
COMMENT_LABEL $2841 #isfunction
LABEL $2846 SMVB_continue_yd4_yStays_single
COMMENT_LABEL $2846 #isfunction
LABEL $2846 SMVB_continue_yStays_single
COMMENT_LABEL $2846 #isfunction
LABEL $2862 SMVB_continue5_single
COMMENT_LABEL $2862 #isfunction
LABEL $2883 SMVB_continue2_single
COMMENT_LABEL $2883 #isfunction
LABEL $2890 SMVB_continue_newY_eq_oldX_single
COMMENT_LABEL $2890 #isfunction
LABEL $2899 SMVB_continue_yd4_single
COMMENT_LABEL $2899 #isfunction
LABEL $289B SMVB_continue_yd4_newY_eq_oldX_single
COMMENT_LABEL $289B #isfunction
LABEL $28A5 SMVB_continue_yd6_single
COMMENT_LABEL $28A5 #isfunction
LABEL $28B1 SMVB_continue_yd4_yEqx_single
COMMENT_LABEL $28B1 #isfunction
LABEL $28BC SMVB_continue_yEqx_single
COMMENT_LABEL $28BC #isfunction
LABEL $28C6 SMVB_continue_tripple
COMMENT_LABEL $28C6 #isfunction
LABEL $28F4 cont2
LABEL $28D1 SMVB_continue_hex
COMMENT_LABEL $28D1 #isfunction
LABEL $28DC cont5
LABEL $28DC SMVB_continue_octo
COMMENT_LABEL $28DC #isfunction
LABEL $28E4 cont4
LABEL $28EC cont3
LABEL $28FC SMVB_repeat_same
COMMENT_LABEL $28FC #isfunction
LABEL $290D SMVB_continue_yd4_double
COMMENT_LABEL $290D #isfunction
LABEL $2919 SMVB_continue_yd6_double
COMMENT_LABEL $2919 #isfunction
LABEL $2925 SMVB_startMove_yd4_single
COMMENT_LABEL $2925 #isfunction
LABEL $2933 SMVB_startMove_single_sj_yd4
COMMENT_LABEL $2933 #isfunction
LABEL $2933 SMVB_startMove_single_sj
COMMENT_LABEL $2933 #isfunction
LABEL $2942 SMVB_startMove_yd4_double
COMMENT_LABEL $2942 #isfunction
LABEL $2942 SMVB_startMove_double
COMMENT_LABEL $2942 #isfunction
LABEL $298A SM_repeat_same2
COMMENT_LABEL $298A #isfunction
LABEL $2950 SMVB_startDraw_double
COMMENT_LABEL $2950 #isfunction
LABEL $295E SMVB_startMove_tripple
COMMENT_LABEL $295E #isfunction
LABEL $2982 move2
LABEL $296C SMVB_startMove_quadro
COMMENT_LABEL $296C #isfunction
LABEL $297A move3
LABEL $2990 SMVB_startMove_yStays_single
COMMENT_LABEL $2990 #isfunction
LABEL $299C SMVB_startMove_yStays_single_sj
LABEL $29A7 SMVB_startDraw_yStays_single
COMMENT_LABEL $29A7 #isfunction
LABEL $29AF SMVB_startDraw_xyStays_single
COMMENT_LABEL $29AF #isfunction
LABEL $29B5 SMVB_startDraw_yd4_single
COMMENT_LABEL $29B5 #isfunction
LABEL $29C3 SMVB_startDraw_yEqx_single
COMMENT_LABEL $29C3 #isfunction
LABEL $29C3 SMVB_startDraw_yd4_yEqx_single
COMMENT_LABEL $29C3 #isfunction
LABEL $29D1 SMVB_startMove_yEqx_single
COMMENT_LABEL $29D1 #isfunction
LABEL $29DD SMVB_startMove_yd4_yEqx_single
COMMENT_LABEL $29DD #isfunction
LABEL $29EA SMVB_startMove_xyStays_single
COMMENT_LABEL $29EA #isfunction
LABEL $29F0 SMVB_startMove_yEqx_single_sj
COMMENT_LABEL $29F0 #isfunction
LABEL $2A00 SMVB_startMove_newY_eq_oldX_single
COMMENT_LABEL $2A00 #isfunction
LABEL $2A0C SMVB_startMove_newY_eq_oldX_single_sj
COMMENT_LABEL $2A0C #isfunction
LABEL $2A19 SMVB_startDraw_newY_eq_oldX_single
COMMENT_LABEL $2A19 #isfunction
LABEL $2A25 SMVB_FlagWait
LABEL $2A2B SMVB_rts
COMMENT_LABEL $2A2B #isfunction
LABEL $2A37 SMVB_lastDraw_rts_stay
COMMENT_LABEL $2A37 #isfunction
LABEL $2A37 SMVB_FlagWait3
COMMENT_LABEL $2A37 #isfunction
LABEL $2A40 SMVB_lastMove_rts_stay
COMMENT_LABEL $2A40 #isfunction
LABEL $2A42 SMVB_FlagWait3_2
LABEL $2A4F SMVB_rts2
COMMENT_LABEL $2A4F #isfunction
LABEL $2A7A buzzVectrex7
EQU $01 USE_FIGHTER_ANIM
LABEL $2A88 SM_Fighter_Anim
LABEL $2B07 SM_Fighter_1
LABEL $2B78 font5Def
LABEL $2B7C colorCycleData
LABEL $00F8 MESSAGE_TEXT_HEIGHT
EQU $50 MESSAGE_TEXT_WIDTH
LABEL $2B8B testNextState1
LABEL $2BC9 testNextState2
LABEL $2D0F scrollOut
LABEL $2BE7 testNextState3
LABEL $2D12 scrollIn
LABEL $2C05 testNextState4
LABEL $2C47 testNextState5
LABEL $2C47 normalMessageCont
LABEL $2C5C noColorCycle
LABEL $2C5C noReset
LABEL $2C8F LF33D331331
LABEL $2C9A anotherLine
LABEL $2CB9 LF4CB_5332
LABEL $2CB5 LF4C7_5332
LABEL $2CF2 outHere332
LABEL $2CD7 LF4EB_5332
LABEL $2D12 intLineTest
LABEL $2D21 test_1
LABEL $2D58 do_line_start
LABEL $2D2C test_2
LABEL $2D38 test_3
LABEL $2D44 test_4
LABEL $2D50 test_5
LABEL $2D52 LF33D335335
LABEL $2DC7 do0Lines
LABEL $2D5D LF33D336336
LABEL $2D68 do_line
LABEL $2D87 LF4CB_5337
LABEL $2D83 LF4C7_5337
LABEL $2DC0 outHere337
LABEL $2DA5 LF4EB_5337
LABEL $2DCE REPLACE_0_2_SaucerWindowAnim_varFromIRQ1_1
COMMENT_LABEL $2DCE bank 1 replace
LABEL $2DD1 REPLACE_0_2_SaucerWindowAnim_varFromIRQ1_2
COMMENT_LABEL $2DD1 bank 1 replace
LABEL $2DD5 REPLACE_0_2_MoneyMothershipAnim_varFromIRQ1_1
COMMENT_LABEL $2DD5 bank 1 replace
LABEL $2DD8 REPLACE_0_2_MoneyMothershipAnim_varFromIRQ1_2
COMMENT_LABEL $2DD8 bank 1 replace
LABEL $2DDC REPLACE_0_2_MegaFiendAnim_varFromIRQ1_1
COMMENT_LABEL $2DDC bank 1 replace
LABEL $2DDF REPLACE_0_2_MegaFiendAnim_varFromIRQ1_2
COMMENT_LABEL $2DDF bank 1 replace
LABEL $2DE3 REPLACE_0_2_MoneySuckerBaseAnim_varFromIRQ1_1
COMMENT_LABEL $2DE3 bank 1 replace
LABEL $2DE6 REPLACE_0_2_MoneySuckerBaseAnim_varFromIRQ1_2
COMMENT_LABEL $2DE6 bank 1 replace
LABEL $2DE8 higherThanBiggies
LABEL $2E10 Enemy1Angle8Table
LABEL $2E06 Enemy1AnimTable
LABEL $2DF1 enemy1Definition2
LABEL $2DF8 enemy1Definition3
LABEL $2DFF enemy1Definition_dw
LABEL $3038 Enemy1_8
LABEL $2E22 Enemy1_0
LABEL $307E Enemy1_9
LABEL $2E68 Enemy1_1
LABEL $2EAA Enemy1_2
LABEL $2EEC Enemy1_3
LABEL $2F2E Enemy1_4
LABEL $2F70 Enemy1_5
LABEL $2FB4 Enemy1_6
LABEL $2FF6 Enemy1_7
LABEL $2E22 Enemy1Right
COMMENT_LABEL $2E22 used for super bomb explosion
LABEL $30C4 enemy2Definition
LABEL $30EA Enemy2Angle8Table
LABEL $30E0 Enemy2WaitAnim
LABEL $30CB enemy2Definition2
LABEL $30D2 enemy2Definition3
LABEL $30D9 enemy2Definition_dw
LABEL $30FC Enemy2_0
LABEL $3310 Enemy2_8
LABEL $3352 Enemy2_9
LABEL $313E Enemy2_1
LABEL $3180 Enemy2_2
LABEL $31C2 Enemy2_3
LABEL $3204 Enemy2_4
LABEL $324A Enemy2_5
LABEL $328C Enemy2_6
LABEL $32CE Enemy2_7
LABEL $3394 enemy3Definition
LABEL $339B Enemy3Angle8Table
LABEL $339B Enemy3WaitAnim
LABEL $33AD Enemy3_0
LABEL $33E2 enemy4Definition
LABEL $33FC Enemy4Angle8Table
LABEL $33F2 Enemy4WaitAnim
LABEL $33EA enemy4Definition2
LABEL $340E Enemy4_0
LABEL $367D Enemy4_9
LABEL $3638 Enemy4_8
LABEL $3453 Enemy4_1
LABEL $3498 Enemy4_2
LABEL $34DD Enemy4_3
LABEL $3524 Enemy4_4
LABEL $3569 Enemy4_5
LABEL $35AE Enemy4_6
LABEL $35F3 Enemy4_7
LABEL $36C2 enemySin1Definition
LABEL $36F6 EnemySin1Angle8Table
LABEL $36EC EnemySin1WaitAnim
LABEL $36C9 enemySin1Definition_noID
LABEL $36D0 enemySin1Definition_noShot
LABEL $36D7 enemySin1Definition_bonus
LABEL $36DE enemySin1Definition_debris
LABEL $36E5 enemySin1Definition_glas_debris_wait
LABEL $3708 EnemySin_0
LABEL $393C EnemySin_8
LABEL $3983 EnemySin_9
LABEL $3751 EnemySin_1
LABEL $3798 EnemySin_2
LABEL $37DD EnemySin_3
LABEL $3824 EnemySin_4
LABEL $386D EnemySin_5
LABEL $38B2 EnemySin_6
LABEL $38F7 EnemySin_7
LABEL $39CC enemySin2Definition
LABEL $3A08 EnemySin2Angle8Table
LABEL $39F6 EnemySin2WaitAnim
LABEL $39D3 enemySin2Definition_noID
LABEL $39DA enemySin2Definition_noShot
LABEL $39E1 enemySin2Definition_bonus
LABEL $39E8 enemySin2Definition_debris
LABEL $39EF enemySin2Definition_glas_debris_wait
LABEL $3AC6 EnemySin2_2
LABEL $3AE8 EnemySin2_3_0
LABEL $3AF9 EnemySin2_4
LABEL $3B1B EnemySin2_5_0
LABEL $3B2C EnemySin2_6
LABEL $3B4E EnemySin2_7_0
LABEL $3B5F EnemySin2_8
LABEL $3B81 EnemySin2_9_0
LABEL $3AD7 EnemySin2_3
LABEL $3B0A EnemySin2_5
LABEL $3B3D EnemySin2_7
LABEL $3B70 EnemySin2_9
LABEL $3A1A EnemySin2_0
LABEL $3A73 EnemySin2_1
LABEL $3B92 enemySin3Definition
LABEL $3BA8 EnemySin3Angle8Table
LABEL $3B9A EnemySin3WaitAnim
LABEL $3BBA Ufo_0
LABEL $3E02 Ufo_8
LABEL $3E4B Ufo_9
LABEL $3E94 Ufo_10
LABEL $3C03 Ufo_1
LABEL $3C4C Ufo_2
LABEL $3C95 Ufo_3
LABEL $3CDE Ufo_4
LABEL $3D27 Ufo_5
LABEL $3D70 Ufo_6
LABEL $3DB9 Ufo_7
LABEL $3EDD BirdOfPreyDefinition1
LABEL $4527 BirdOfPrey_anim
LABEL $3EE4 BirdOfPreyDefinition2
LABEL $3EEB BirdOfPreyDefinition3
LABEL $3EF2 BirdOfPreyDefinition4
LABEL $3EF9 BirdOfPreyDefinition5
LABEL $3F00 BirdOfPreyDefinition6
COMMENT_LABEL $3F00 random shots!
LABEL $3F07 bigBugDestroyerDefinition1
LABEL $3F23 Bug_Destroyer_anim
LABEL $3F0E bigBugDestroyerDefinition1_b
LABEL $3F15 bigBugDestroyerDefinition2
LABEL $3F1C bigBugDestroyerDefinition3
LABEL $3F27 bigBug1Definition
LABEL $3F3C BigBug
LABEL $3F2E bigBug2Definition
LABEL $3F35 bigBug3Definition
LABEL $3F7A BigBug_0
LABEL $402A BigBug_1
LABEL $40DA BigBug_2
LABEL $3F46 bigBugSin1Definition
LABEL $3F70 BigBugSin
LABEL $3F4D bigBugSin2Definition
LABEL $3F54 bigBugSin3Definition
LABEL $3F5B bigBugSin3Definition100
LABEL $3F62 bigBugSin2Definition100
LABEL $3F69 bigBugSin1Definition100
LABEL $41DB BugSin_1
LABEL $422E BugSin_2
LABEL $4281 BugSin_3
LABEL $452B BirdOfPrey
LABEL $45F9 Swarmer
LABEL $45FB Swarmer_0
EQU $00 DRAW_SMART
LABEL $4625 failureBug1Definition
LABEL $4628 REPLACE_0_2_WarperAnimData_varFromIRQ1_1
COMMENT_LABEL $4628 bank 1 replace
LABEL $462C BonusStaticLists
EQU $2D ANGLE_DIF
COMMENT_LABEL $2D 360/16
LABEL $46C1 doIntroAppearance
COMMENT_LABEL $46C1 #isfunction
LABEL $46D9 spawnAllEnemies
LABEL $46D8 notFinishedIntro
LABEL $46E2 spawnNextEnemy
LABEL $4764 spawningDone
LABEL $46F0 compareEnemyCountAgainDA
LABEL $46F8 enemyCountOkDA
LABEL $4707 noShieldEnemy_a
LABEL $4720 easy1_a
LABEL $4725 difCont1_a
LABEL $471C hard1_a
LABEL $471A impossible_a
LABEL $5CE8 directIntroBehaviour
COMMENT_LABEL $5CE8 #isfunction
LABEL $47B1 normalDif
LABEL $479A not54
LABEL $47A6 specialLevelsDone
LABEL $47C2 doIntroForReal
LABEL $47C1 doneDoIntro1
LABEL $47E0 compareEnemyCountAgain
LABEL $47E8 enemyCountOk
LABEL $47F7 noShieldEnemy
LABEL $4815 easy1
LABEL $481A difCont1
LABEL $4811 hard1
LABEL $480F impossible
LABEL $4838 enemyGetNoUID
LABEL $484A notEmptyPattern
LABEL $580E enemyDelayBehaviour
COMMENT_LABEL $580E #isfunction
LABEL $485E goOnIntro
LABEL $4855 noInversePatternIntro
LABEL $558F enemyIntroPatternBehaviour
COMMENT_LABEL $558F #isfunction
LABEL $BA5B enemyTribble
LABEL $48B0 normalEnemy
LABEL $4870 noEOR339
LABEL $487B trib_swarmyaok
LABEL $4885 noEOR340
LABEL $488E trib_xPosCorrect_1
LABEL $4894 trib_xPosCorrect_2
LABEL $5E77 tribbleBehaviour
COMMENT_LABEL $5E77 #isfunction
LABEL $48E6 thisPatternNotEnded
LABEL $48BA thisIntroPatternIsDone
LABEL $48E6 introWavesNotFinishedYet
LABEL $48E6 notSpawned
LABEL $48E6 done
EQU $3C SCOOP_RADIUS_Y
EQU $1E SCOOP_RADIUS_X
EQU $0F PLAYER_RADIUS_X
EQU $16 PLAYER_RADIUS_Y
LABEL $48E7 shotBehaviourStandardStart
LABEL $4991 doScoopCheck342
LABEL $48F2 isBugEnemy342
LABEL $49B1 notHit342
LABEL $4900 noNeg342
LABEL $4932 notHit_x342
LABEL $492A notHit_Shot_removeEnemy342
LABEL $49AC playerCaughtShot342
LABEL $8319 yesExplodeEnemy
EQU $00 SCOOPIE_DONT_DIE
LABEL $4984 checkRightScoop342
LABEL $494D checkLeftScoop342
LABEL $4958 scoopyHit342
LABEL $4EE5 enemyExplosionBehaviour
COMMENT_LABEL $4EE5 #isfunction
LABEL $499D noNeg2342
LABEL $591E repellEnemy
COMMENT_LABEL $591E #isfunction
LABEL $49B1 shotBehaviourStandardStartNoBase
LABEL $49B1 shotBehaviourStandardnoAdditional
LABEL $49B1 dontCheckAllAfterAll
LABEL $4BBC notHit345
LABEL $4A7A laser_xCheckOnly345
EQU $00 LARGE_OBJECT
COMMENT_LABEL $00 #noDoubleWarn
LABEL $49CD noNewMin346
LABEL $49DF xCheckOnly345
LABEL $4A97 notHitLeftOfCenter345
LABEL $4B32 notHitRightOfCenter345
LABEL $49EF scoopCenterHit345
EQU $00 ENEMY_UNDYING
LABEL $49FB _removeCurrentShotAndObject345
LABEL $49FD REPLACE_2_2_zeroPlayerShotBehaviour_varFrom0_0345
LABEL $4A1A centerHit345
LABEL $4A25 noInc345
LABEL $4A2E noLaserHere345
LABEL $7F98 isLazerShot
LABEL $4A43 isFiveShot345
LABEL $4A53 removeShot4_e1345
LABEL $4A5F removeShot3_e1345
LABEL $4A6B removeShot2_e1345
LABEL $8047 isNo5Shot
LABEL $8057 shotHasNoScoopies
LABEL $8105 shotHandleDone_noBoss
LABEL $80BA makeShot3
LABEL $80C5 makeShot2
LABEL $80D0 makeShot1
LABEL $4A85 laser_xCheckOnly2345
LABEL $4A92 okok345
LABEL $4AB1 xCheckOnly2345
LABEL $4ADC noShieldShot1345
LABEL $4AEA noScoopyLeft1345
LABEL $4AF3 multiShotLeftScoop345
LABEL $4AE2 storeScoopPlusOne345
LABEL $4AE4 storeScoop345
LABEL $4B20 laser_xCheckOnly3345
LABEL $4B2D okok2345
LABEL $4B4C xCheckOnly3345
LABEL $4B77 noShieldShot2345
LABEL $4B87 noScoopyRight345
LABEL $4B90 multiShotRightScoop345
LABEL $4B80 storeRightScoopPlusOne345
LABEL $4B81 storeRightScoop345
LABEL $4DBF notHit348
LABEL $4C7D laser_xCheckOnly348
LABEL $4BE2 xCheckOnly348
LABEL $4C9A notHitLeftOfCenter348
LABEL $4D35 notHitRightOfCenter348
LABEL $4BF2 scoopCenterHit348
LABEL $4BFE _removeCurrentShotAndObject348
LABEL $4C00 REPLACE_2_2_zeroPlayerShotBehaviour_varFrom0_0348
LABEL $4C1D centerHit348
LABEL $4C28 noInc348
LABEL $4C31 noLaserHere348
LABEL $4C46 isFiveShot348
LABEL $4C56 removeShot4_e1348
LABEL $4C62 removeShot3_e1348
LABEL $4C6E removeShot2_e1348
LABEL $4C88 laser_xCheckOnly2348
LABEL $4C95 okok348
LABEL $4CB4 xCheckOnly2348
LABEL $4CDF noShieldShot1348
LABEL $4CED noScoopyLeft1348
LABEL $4CF6 multiShotLeftScoop348
LABEL $4CE5 storeScoopPlusOne348
LABEL $4CE7 storeScoop348
LABEL $4D23 laser_xCheckOnly3348
LABEL $4D30 okok2348
LABEL $4D4F xCheckOnly3348
LABEL $4D7A noShieldShot2348
LABEL $4D8A noScoopyRight348
LABEL $4D93 multiShotRightScoop348
LABEL $4D83 storeRightScoopPlusOne348
LABEL $4D84 storeRightScoop348
LABEL $4DBF shotBehaviourStandardTestShootingOnly
LABEL $4E25 noBulletSpawn349
EQU $00 ENEMY_NO_SHOOTING
LABEL $4DD9 try_shot349
LABEL $52B1 enemyWaitingBehaviour
COMMENT_LABEL $52B1 #isfunction
LABEL $4DFD shotseeminglyOk349
LABEL $4DF2 noEOR350
LABEL $4E0D doBullet349
LABEL $4E05 noEOR351
LABEL $4E25 shotBehaviourStandardStartNoCol
LABEL $4E2E tryNextEO
LABEL $4E89 cs_done_no
LABEL $4E69 noLefty
LABEL $4E5F leftyIsRight
LABEL $4E81 noRighty
LABEL $4E98 spawnEnemy_end
LABEL $4F23 enemySimpleBehaviour
LABEL $4E9C destroyEnemyObject
COMMENT_LABEL $4E9C #isfunction
LABEL $4EAC was_not_first_enem
COMMENT_LABEL $4EAC find previous, go thru all objects from first and look where "I" am the next...
LABEL $4EA3 was_first_enem
LABEL $4EBF enemyRemoveDone
LABEL $4EB0 try_next_enem
LABEL $4EB9 found_next_switch_enem
LABEL $4EDF LF33D353353
LABEL $4EF5 explosionBevaiourEntryFromShotTest
LABEL $4F11 LF33D355355
LABEL $4F23 enemySingleAttackAbsolutBehaviour
COMMENT_LABEL $4F23 #isfunction
LABEL $4F39 back1Shot
LABEL $4F5F yIsCorrectPosition_ab
LABEL $4F50 increaseYPos
LABEL $4F45 decAgain1
LABEL $4F77 yDoneB_ab
LABEL $4F54 incAgain1_a
LABEL $4F6F targetXisNegativeAngle_ab
LABEL $4F93 xNotIsCorrectPosition_ab
LABEL $4F89 yposIsLowerDoAngle10
LABEL $4FB1 xIsCorrectPosition_ab
LABEL $4FA4 targetXisNegative_ab
LABEL $4F99 incAgain2_a
LABEL $4FA8 decAgain2
LABEL $5085 notThereYetPosition_ab
LABEL $4FD2 macroStart358
LABEL $5060 doRelativePattern358
LABEL $504F doTargetPattern358
LABEL $4FEE doAbsolutPattern358
LABEL $4FF9 targetPatternCont358
LABEL $502E yIsNeg358
LABEL $5023 yIsPosxIsNeg358
LABEL $501F yIsPosxIsNull358
LABEL $5014 yIsPosxIsPos358
LABEL $501B yNotNull1358
LABEL $503F angleDone358
LABEL $502A yNotNull2358
LABEL $503B yIsNegxIsNull358
LABEL $5037 yIsNegxIsNeg358
LABEL $5033 yIsNegxIsPos358
LABEL $5106 enemySingleAttackRelativeBehaviour
COMMENT_LABEL $5106 #isfunction
LABEL $50E2 outOfPattern
LABEL $523F thisPatternNotDone_srp
LABEL $50B6 normalEndMacro359
LABEL $50D6 normalEndMacro2359
LABEL $50A5 LF33D360360
LABEL $50DF out359
LABEL $50C5 LF33D362362
LABEL $50DB LF33D364364
LABEL $5298 endAttackBehaviourDirectly
LABEL $50F3 clonedBehaviour
COMMENT_LABEL $50F3 #isfunction
LABEL $5101 cloneDelayDone
LABEL $511C back2Shot
LABEL $5140 noNeg1_srp
LABEL $514D noNeg2_srp
LABEL $5224 thereIsANextPattern_srp
LABEL $5178 macroStart366
LABEL $5206 doRelativePattern366
LABEL $51F5 doTargetPattern366
LABEL $5194 doAbsolutPattern366
LABEL $519F targetPatternCont366
LABEL $51D4 yIsNeg366
LABEL $51C9 yIsPosxIsNeg366
LABEL $51C5 yIsPosxIsNull366
LABEL $51BA yIsPosxIsPos366
LABEL $51C1 yNotNull1366
LABEL $51E5 angleDone366
LABEL $51D0 yNotNull2366
LABEL $51E1 yIsNegxIsNull366
LABEL $51DD yIsNegxIsNeg366
LABEL $51D9 yIsNegxIsPos366
LABEL $5231 nextRelativeTargerAdd
LABEL $523F goOnEnemyPatternBehaviour_srp
LABEL $526C normalEndMacro367
LABEL $528C normalEndMacro2367
LABEL $525B LF33D368368
LABEL $5295 out367
LABEL $527B LF33D370370
LABEL $5291 LF33D372372
LABEL $52AB LF33D373373
LABEL $52C7 back4Shot
EQU $00 NO_ATTACK_PATTERN
LABEL $5500 notAgain375
LABEL $52ED noEOR376
LABEL $5306 noEOR377
LABEL $5322 easy2375
LABEL $532D difCont2375
LABEL $5325 hard2375
LABEL $5318 impossible2375
LABEL $5336 macroStart379
LABEL $5453 doRelativePattern379
LABEL $5442 doTargetPattern379
LABEL $5352 doAbsolutPattern379
LABEL $535D targetPatternCont379
LABEL $5392 yIsNeg379
LABEL $5387 yIsPosxIsNeg379
LABEL $5383 yIsPosxIsNull379
LABEL $5378 yIsPosxIsPos379
LABEL $537F yNotNull1379
LABEL $53A3 angleDone379
LABEL $538E yNotNull2379
LABEL $539F yIsNegxIsNull379
LABEL $539B yIsNegxIsNeg379
LABEL $5397 yIsNegxIsPos379
LABEL $543F macroEnd380
LABEL $53E0 anotherClone380
LABEL $54FD macroEnd381
LABEL $549E anotherClone381
LABEL $550F noWobble
LABEL $5521 noAnimChangeEnemy
LABEL $5524 animNotFinished
LABEL $554D normalEndMacro382
LABEL $556D normalEndMacro2382
LABEL $553C LF33D383383
LABEL $5576 out382
LABEL $555C LF33D385385
LABEL $5572 LF33D387387
LABEL $56D1 back3Shot
LABEL $55A5 back3Shot_patternCheck
LABEL $55BB noEOR390
LABEL $56D1 noAdditionalPattern
LABEL $56D1 notAgain_nm
LABEL $55FD noEOR391
LABEL $5614 noEOR392
LABEL $89D4 attackPatternsIntro
LABEL $5625 macroStart_nm
LABEL $56B3 doRelativePattern_nm
LABEL $56A2 doTargetPattern_nm
LABEL $5641 doAbsolutPattern_nm
LABEL $564C targetPatternCont_nm
LABEL $5681 yIsNeg_nm
LABEL $5676 yIsPosxIsNeg_nm
LABEL $5672 yIsPosxIsNull_nm
LABEL $5667 yIsPosxIsPos_nm
LABEL $566E yNotNull1_nm
LABEL $5692 angleDone_nm
LABEL $567D yNotNull2_nm
LABEL $568E yIsNegxIsNull_nm
LABEL $568A yIsNegxIsNeg_nm
LABEL $5686 yIsNegxIsPos_nm
LABEL $56F4 noInverserPatternGame1
LABEL $56FC noInverserPatternGameCont1
LABEL $5703 noNeg1
LABEL $57A2 thisPatternNotDone
LABEL $5714 noNeg2
LABEL $571A initNextPattern
LABEL $578D thereIsANextPattern
LABEL $5735 patternsDone
LABEL $577E noSpecialType
LABEL $5858 enemyFlyHomeBehaviour
COMMENT_LABEL $5858 #isfunction
LABEL $57A2 goOnEnemyPatternBehaviour
LABEL $5786 noSpecialType2
LABEL $579C noInversePatternNew1
LABEL $57B3 noInversePatternNew2
LABEL $5806 angleInverse
LABEL $57DA normalEndMacro393
LABEL $57FA normalEndMacro2393
LABEL $57C9 LF33D394394
LABEL $5803 out393
LABEL $57E9 LF33D396396
LABEL $57FF LF33D398398
LABEL $5853 delayDone
LABEL $5812 enemyDelayJumpInto
LABEL $5833 targetNegative
LABEL $582F targetPositive
LABEL $5835 targetCorrected
LABEL $586E back5Shot
LABEL $5882 yIsCorrectPosition
LABEL $5895 yDoneB
LABEL $588F targetXisNegativeAngle
LABEL $58A3 targetXisNegative
LABEL $589B targetXisPositive
LABEL $58AB xIsCorrectPosition
LABEL $58AF xIsCorrectPosition_continue
LABEL $58C5 notThereYetPosition
LABEL $58CB endAllBiggy
LABEL $58F2 normalEndMacro400
LABEL $5912 normalEndMacro2400
LABEL $58E1 LF33D401401
LABEL $591B out400
LABEL $5901 LF33D403403
LABEL $5917 LF33D405405
LABEL $5930 repellPreSetupDone
LABEL $5AE8 doScoopEneme1
LABEL $5A35 doScoopEneme2
LABEL $593E doReallyRepell
LABEL $5955 back406
LABEL $596F noEOR407
LABEL $59B5 enemyRepellBehaviour
COMMENT_LABEL $59B5 #isfunction
LABEL $597E lastDrawBeforeRepell
LABEL $59A9 normalEndMacro2_repell
LABEL $5997 LF33D408408
LABEL $59AE LF33D410410
LABEL $5A01 noAnimChangeEnemy_repell
LABEL $5A04 animNotFinished_repell
LABEL $5A29 normalEndMacro2_repell2
LABEL $5A17 LF33D412412
LABEL $5A2E LF33D414414
LABEL $5A4B positionScoop2Behaviour
COMMENT_LABEL $5A4B #isfunction
LABEL $5A6B rotatingDoneScoop2
LABEL $5AB4 continueScoop2Behaviour
LABEL $5A97 seekingX2PlayerDone
LABEL $5A85 scoop2NoNeg
LABEL $5A91 xPosScoop2Reached
LABEL $5ADC normalEndMacro2_repell2_2
LABEL $5ACA LF33D416416
LABEL $5AE1 LF33D418418
LABEL $5AFE positionScoop1Behaviour
COMMENT_LABEL $5AFE #isfunction
LABEL $5B1E rotatingDoneScoop1
LABEL $5B67 continueScoop1Behaviour
LABEL $5B4A seekingXPlayerDone
LABEL $5B38 scoop1NoNeg
LABEL $5B44 xPosScoop1Reached
LABEL $5B8F normalEndMacro2_repell2_csb
LABEL $5B7D LF33D420420
LABEL $5B94 LF33D422422
LABEL $5B9B scoopRightXTranslationTable
LABEL $5BD9 contRight
LABEL $5C03 brightnessTable1
LABEL $5BE1 contRight2
LABEL $5BFA normalEndMacro2_pControlled1
LABEL $5BE3 LF33D424424
LABEL $5BFD LF33D426426
LABEL $5C61 contLeft
LABEL $5C69 contLeft2
LABEL $5C6B LF33D428428
LABEL $5C82 normalEndMacro2_pControlled2
LABEL $5C85 LF33D430430
LABEL $5CA9 addyAgainSpeedBoss3
LABEL $5CCE addxAgainSpeedBoss3
LABEL $5D13 noAnimChangeEnemyDA
LABEL $5D16 animNotFinishedDA
LABEL $5D26 stayHereDA
LABEL $5D35 LF33D432432
LABEL $5D47 enemyDebrisBomberBehaviour
COMMENT_LABEL $5D47 #isfunction
LABEL $5E01 doScoopCheck435
LABEL $5D62 isBugEnemy435
LABEL $5E21 notHit435
LABEL $5D70 noNeg435
LABEL $5DA2 notHit_x435
LABEL $5D9A notHit_Shot_removeEnemy435
LABEL $5E1C playerCaughtShot435
LABEL $5DF4 checkRightScoop435
LABEL $5DBD checkLeftScoop435
LABEL $5DC8 scoopyHit435
LABEL $5E0D noNeg2435
LABEL $5E2B debrisBomberEntry
LABEL $5E42 noAnimChangeEnemyDB
LABEL $BB0A DebrisBombList
LABEL $5E45 animNotFinishedDB
LABEL $5E6B normalEndMacro2DB
LABEL $5E59 LF33D437437
LABEL $5E70 LF33D439439
LABEL $5E9B back4Shot_tribble
LABEL $5E9B tribbleNotExplode
LABEL $5EC3 initNewDirectionTribble
LABEL $5EB3 verticalChangeDoneTribble
LABEL $5EB1 verticalGoDownTribble
LABEL $5F2F tribbleMovementDone
LABEL $5EBF horizontalGoRightTribble
LABEL $5EC1 horizontalChangeDoneTribble
LABEL $5ED7 normalyTribble1
LABEL $5EFD verticalIs0Tribble
LABEL $5EDF normalyTribble2
LABEL $5EE7 noEOR442
LABEL $5EF6 noEOR444
LABEL $5F07 normalxTribble1
LABEL $5F2D horizontalIs0Tribble
LABEL $5F0F normalxTribble2
LABEL $5F17 noEOR446
LABEL $5F26 noEOR448
LABEL $5F2D horizontalIsRightTribble
LABEL $5F2F notHitTribble
LABEL $BA68 enemyTribbleAngle8Table
LABEL $5F42 noAnimChangeEnemyTribble
LABEL $5F45 animNotFinishedTribble
LABEL $5F5D normalEndMacro_Tribble
LABEL $5F7D normalEndMacro2_Tribble
LABEL $5F67 out_Tribble2
LABEL $5F6C LF33D449449
LABEL $5F86 out_Tribble
LABEL $5F82 LF33D451451
LABEL $5F89 fallDiamondBehaviour
COMMENT_LABEL $5F89 #isfunction
LABEL $5FEC notHit_diamond
LABEL $5FA7 noNegDiam
LABEL $5FBB nosfx91
LABEL $5FB5 REPLACE_1_2_collectDiamondData_varFromIRQ1_3
LABEL $5FCD back453
LABEL $5FE6 noRollOver_1454
LABEL $5FE9 back454
LABEL $BBB0 FallingDiamnond
LABEL $601E normalEndMacro2Dia
LABEL $600C LF33D455455
LABEL $6023 LF33D457457
LABEL $602A largeObjectshotBehaviourStandardStartNoBase
LABEL $602A largeObjectshotBehaviourStandardnoAdditional
LABEL $62BA notHit459
LABEL $6140 laser_xCheckOnly459
LABEL $6048 noNewMin460
LABEL $605E xCheckOnly459
LABEL $6076 isBaseShot459
LABEL $615D notHitLeftOfCenter459
LABEL $6211 notHitRightOfCenter459
LABEL $6088 scoopCenterHit459
LABEL $6094 _removeCurrentShotAndObject459
LABEL $6096 REPLACE_2_2_zeroPlayerShotBehaviour_varFrom0_0459
LABEL $60B3 centerHit459
LABEL $60BE noInc459
LABEL $60CD noLaserHere459
LABEL $60E3 isFiveShot459
LABEL $6112 removeShot4_e1459
LABEL $6132 removeShot3_e1459
LABEL $6138 removeShot2_e1459
LABEL $60F9 noLeftScoopyBiggy459
LABEL $6106 noRightScoopyBiggy459
LABEL $6119 storeAndOut459
LABEL $6124 noLeftScoopyBiggy4459
LABEL $612A noRightScoopyBiggy4459
LABEL $614B laser_xCheckOnly2459
LABEL $6158 okok459
LABEL $6177 xCheckOnly2459
LABEL $61A2 noShieldShot1459
LABEL $61B0 noScoopyLeft1459
LABEL $61B9 multiShotLeftScoop459
LABEL $61A8 storeScoopPlusOne459
LABEL $61AA storeScoop459
LABEL $61FF laser_xCheckOnly3459
LABEL $620C okok2459
LABEL $622B xCheckOnly3459
LABEL $6256 noShieldShot2459
LABEL $6266 noScoopyRight459
LABEL $626F multiShotRightScoop459
LABEL $625F storeRightScoopPlusOne459
LABEL $6260 storeRightScoop459
LABEL $653E notHit462
LABEL $63C4 laser_xCheckOnly462
LABEL $62E2 xCheckOnly462
LABEL $62FA isBaseShot462
LABEL $63E1 notHitLeftOfCenter462
LABEL $6495 notHitRightOfCenter462
LABEL $630C scoopCenterHit462
LABEL $6318 _removeCurrentShotAndObject462
LABEL $631A REPLACE_2_2_zeroPlayerShotBehaviour_varFrom0_0462
LABEL $6337 centerHit462
LABEL $6342 noInc462
LABEL $6351 noLaserHere462
LABEL $6367 isFiveShot462
LABEL $6396 removeShot4_e1462
LABEL $63B6 removeShot3_e1462
LABEL $63BC removeShot2_e1462
LABEL $637D noLeftScoopyBiggy462
LABEL $638A noRightScoopyBiggy462
LABEL $639D storeAndOut462
LABEL $63A8 noLeftScoopyBiggy4462
LABEL $63AE noRightScoopyBiggy4462
LABEL $63CF laser_xCheckOnly2462
LABEL $63DC okok462
LABEL $63FB xCheckOnly2462
LABEL $6426 noShieldShot1462
LABEL $6434 noScoopyLeft1462
LABEL $643D multiShotLeftScoop462
LABEL $642C storeScoopPlusOne462
LABEL $642E storeScoop462
LABEL $6483 laser_xCheckOnly3462
LABEL $6490 okok2462
LABEL $64AF xCheckOnly3462
LABEL $64DA noShieldShot2462
LABEL $64EA noScoopyRight462
LABEL $64F3 multiShotRightScoop462
LABEL $64E3 storeRightScoopPlusOne462
LABEL $64E4 storeRightScoop462
LABEL $653E largeObjectshotBehaviourStandardStartNoCol
LABEL $6566 buzzVectrex6
LABEL $65DB notHitTestSwarm
LABEL $6596 testNextHitSwarm464
LABEL $66A8 notHitSwarm
LABEL $65B4 noyCheck464
LABEL $65AE possibleHitYSwarm1464
LABEL $65AA tryNextSwarmShot464
LABEL $7F45 removeCurrentShotAndObject
COMMENT_LABEL $7F45 #isfunction
LABEL $65DB back4Shot_swarm
LABEL $661E initNewDirectionSwarm
LABEL $65F8 notHitPlayerSwarm_ll
LABEL $65EF noNeg_nm_ll
LABEL $660A verticalChangeDoneSwarm
LABEL $6608 verticalGoDownSwarm
LABEL $66A8 swarmMovementDone
LABEL $6619 horizontalGoRightSwarm
LABEL $661B horizontalChangeDoneSwarm
LABEL $663C noadditionalSwarmAttacker
LABEL $662B noEOR465
LABEL $663C noKamikaze
LABEL $6930 swarmAttackBehaviour
COMMENT_LABEL $6930 #isfunction
LABEL $6650 normalySwarm1
LABEL $6676 verticalIs0Swarm
LABEL $6658 normalySwarm2
LABEL $6660 noEOR467
LABEL $666F noEOR469
LABEL $6676 verticalIsDown
LABEL $6680 normalxSwarm1
LABEL $66A6 horizontalIs0Swarm
LABEL $6688 normalxSwarm2
LABEL $6690 noEOR471
LABEL $669F noEOR473
LABEL $66A6 horizontalIsRight
LABEL $68DB SwarmerDirect
LABEL $66BB noAnimChangeEnemySwarm
LABEL $66BE animNotFinishedSwarm
LABEL $66D6 normalEndMacro_swarm
LABEL $66F6 normalEndMacro2_swarm
LABEL $66E0 out_swarm2
LABEL $66E5 LF33D474474
LABEL $66F9 out_swarm
LABEL $66FB SwarmAnim1_d
LABEL $6703 LF33D477477
LABEL $6773 SwarmAnim2_d
LABEL $677B LF33D488488
LABEL $67EB SwarmAnim3_d
LABEL $67F3 LF33D499499
LABEL $6863 SwarmAnim4_d
LABEL $686B LF33D510510
LABEL $68E9 swarmExplosionBehaviour
COMMENT_LABEL $68E9 #isfunction
LABEL $691A LF33D521521
LABEL $699A notHitTestSwarm_nm
LABEL $6952 testNextHitSwarm_nm
LABEL $699A notHitSwarm_nm
LABEL $6970 noyCheck_nm
LABEL $696A possibleHitYSwarm1_nm
LABEL $6966 tryNextSwarmShot_nm
LABEL $69B1 notHitPlayerSwarm
LABEL $69A8 noNeg_nm
LABEL $69BB changebehaviour
LABEL $69C9 noswarmBehaviour
LABEL $69D1 noEOR524
LABEL $69DA playerIsLowerSwarm
LABEL $69DC noXChangeSwarm
LABEL $69F5 back4Shot_saucer
LABEL $69FA REPLACE_1_2_saucerBehaviourBank1_varFromIRQ1_1
LABEL $6A00 backBank3Behaviour
LABEL $6A1B back4Shot_moneyMothership
LABEL $6A20 REPLACE_1_2_moneyMothershipBehaviourBank1_varFromIRQ1_1
LABEL $6A3C back4Shot_moneySucker
LABEL $6A41 REPLACE_1_2_moneySuckerBehaviourBank1_varFromIRQ1_1
LABEL $6A5D back4Shot_megaFiend
LABEL $6A62 REPLACE_1_2_megaFiendBehaviourBank1_varFromIRQ1_1
LABEL $6A78 REPLACE_1_2_fallCashBehaviourBank1_varFromIRQ1_1
LABEL $6A7E getUPointer1
LABEL $6A82 REPLACE_1_2_getUPointer1Back_varFromIRQ1_1
LABEL $6A88 getUPointer2
LABEL $6A8C REPLACE_1_2_getUPointer2Back_varFromIRQ1_1
LABEL $6A92 enemyHS1Behaviour
LABEL $6AA4 noAnimChangeEnemyHS
LABEL $6AA7 animNotFinishedHS
LABEL $6AC5 notDownhs
LABEL $6B0D positioningDonehs
LABEL $6ADD notUphs
LABEL $6AF5 notLefths
LABEL $6B0D notRighths
LABEL $6B18 LF33D531531
LABEL $6B2A lastNormalEnemyAddress
EQU $32 DIRECTION_CHANGE_DELAY
EQU $23 SHOT_SCOOPY_X_RANGE
EQU $0C SHOT_PLAYER_X_RANGE
LABEL $0096 SHOT_PLAYER_Y_TEST_MIN
LABEL $6B2A newShotObject
COMMENT_LABEL $6B2A #isfunction
LABEL $6B43 cs_done_nos
LABEL $6B43 spawnShot_end_noShot
LABEL $6B60 nosfx10
LABEL $6B5A REPLACE_1_2_dragonData_varFromIRQ1_7
LABEL $6CAB simpleShotBehaviour
COMMENT_LABEL $6CAB #isfunction
LABEL $6BE1 spawnShot_end
LABEL $6C00 spawnTripple
LABEL $6B96 addyAgainSpeed
LABEL $6BE2 missileShot_spawn
LABEL $6BBB addxAgainSpeed
LABEL $6DAB shotAtPlayerBehaviour
COMMENT_LABEL $6DAB #isfunction
LABEL $6BE1 nosfx9122
LABEL $6BDB REPLACE_1_2_BugSeekerData_varFromIRQ1_3
LABEL $6EAA missileAtPlayerBehaviour
COMMENT_LABEL $6EAA #isfunction
LABEL $6BFF nosfxmis
LABEL $6BF9 REPLACE_1_2_fireMissileData_varFromIRQ1_3
LABEL $6C2F toSmall
LABEL $6C52 tolarge
LABEL $6C5F nosfx912
LABEL $6C59 REPLACE_1_2_enemyTripleShotData_varFromIRQ1_3
LABEL $6C60 playerCaughtShot
COMMENT_LABEL $6C60 #isfunction
LABEL $6C65 notHit_Shot_removeShot
LABEL $6C65 removeShot
COMMENT_LABEL $6C65 #isfunction
LABEL $6C75 was_not_first_eshot
COMMENT_LABEL $6C75 find previous, go thru all objects from first and look where "I" am the next...
LABEL $6C6C was_first_eshot
LABEL $6C88 exit_eshot
LABEL $6C79 try_next_eshot
LABEL $6C82 found_next_switch_eshot
LABEL $6C97 LF33D534534
LABEL $6D7A notHit_Shot
LABEL $6CD3 xCompareOk_ssb
LABEL $6CCD posSignx1_ssb
LABEL $6D2D bulletRightOfPlayer
LABEL $6CDA bulletLeftOfPlayer
LABEL $6D51 playrWasHit_ssb
LABEL $6CDF notPlayerHit_Shot_left
LABEL $6D03 removeScoopRest
LABEL $6D31 notPlayerHit_Shot_right
LABEL $6D8C LF33D537537
LABEL $6E4E notHit_Shot_bug
LABEL $6DD3 xCompareOk_sapb
LABEL $6DCF posSignx1_sapb
LABEL $6E00 bulletRightOfPlayer_sapb
LABEL $6DDA bulletLeftOfPlayer_sapb
LABEL $6E25 playrWasHit_sapb
LABEL $6DDF notPlayerHit_Shot_left_sapb
LABEL $6E04 notPlayerHit_Shot_right_sapb
LABEL $6E6D LF33D545545
LABEL $6F4D notHit_Shot_bug_missile
LABEL $6ED2 xCompareOk_sapb_missile
LABEL $6ECE posSignx1_sapb_missile
LABEL $6EFF bulletRightOfPlayer_sapb_missile
LABEL $6ED9 bulletLeftOfPlayer_sapb_missile
LABEL $6F24 playrWasHit_sapb_missile
LABEL $6EDE notPlayerHit_Shot_left_sapb_missile
LABEL $6F03 notPlayerHit_Shot_right_sapb_missile
LABEL $6F63 noYChangeMissile
LABEL $6F84 noNewMissileDirection
LABEL $6F67 newMissileDrection
LABEL $6F6F noEOR547
LABEL $6F82 goRightMissile
LABEL $6F8E LF33D548548
LABEL $6F9D LF33D550550
LABEL $6FDD noEOR551
LABEL $7027 addxAgainSpeedMissile
LABEL $7041 REPLACE_1_2_Alphabet28_varFrom0_0
LABEL $708C _letterAtPlayerBehaviour
COMMENT_LABEL $708C #isfunction
LABEL $7046 REPLACE_1_2_Alphabet1_varFrom0_0
LABEL $704B REPLACE_1_2_Alphabet4_varFrom0_0
LABEL $7050 REPLACE_1_2_Alphabet6_varFrom0_0
LABEL $7055 REPLACE_1_2_Alphabet7_varFrom0_0
LABEL $705A REPLACE_1_2_Alphabet8_varFrom0_0
LABEL $705F REPLACE_1_2_Alphabet27_varFrom0_0
LABEL $7064 REPLACE_1_2_Alphabet2_varFrom0_0
LABEL $7069 REPLACE_1_2_Alphabet14_varFrom0_0
LABEL $706E REPLACE_1_2_Alphabet22_varFrom0_0
LABEL $7073 REPLACE_1_2_Alphabet0_varFrom0_0
LABEL $7078 REPLACE_1_2_Alphabet3_varFrom0_0
LABEL $707D REPLACE_1_2_Alphabet17_varFrom0_0
LABEL $7082 REPLACE_1_2_Alphabet20_varFrom0_0
LABEL $7087 REPLACE_1_2_Alphabet13_varFrom0_0
LABEL $70C8 notHit_Shot_letter
LABEL $70B2 xCompareOk_letter
LABEL $70AE posSignx1_letter
LABEL $70C2 bulletRightOfPlayer_letter
LABEL $70B9 bulletLeftOfPlayer_sapb_letter
LABEL $70E9 removeShot_aa
EQU $1E LETTERSIZE_BOSS3
LABEL $70E4 BackFromDraw_Vlp0_0
EQU $0F BONUS_PLAYER_X_RANGE
LABEL $0094 BONUS_PLAYER_Y_TEST_MIN
EQU $01 STAR_OR_DEFINED
LABEL $70EC newStarObject
COMMENT_LABEL $70EC #isfunction
LABEL $7105 cs_done_star
LABEL $7188 spawnStar_end
LABEL $71B7 simpleStarBehaviour
COMMENT_LABEL $71B7 #isfunction
LABEL $711D noEOR553
LABEL $712A noEOR554
LABEL $7137 noEOR555
LABEL $7144 noEOR556
LABEL $7151 noEOR557
LABEL $003F TWINKLE_AND
LABEL $000F TWINKLE_OR
COMMENT_LABEL $000F lowest twinkle brightness
LABEL $7164 noEOR558
LABEL $7171 noEOR559
LABEL $717E noEOR560
LABEL $7189 warpStars
LABEL $71A0 warpStars2
LABEL $7831 simpleStarBehaviourHS
COMMENT_LABEL $7831 #isfunction
LABEL $7198 noEOR561
LABEL $7826 simpleStarBehaviour2
COMMENT_LABEL $7826 #isfunction
LABEL $71AD noEOR562
EQU $60 STAR_SHIFT
COMMENT_LABEL $60 $e0
LABEL $72DA firstStars
LABEL $71E5 notBottom1
LABEL $71DA noEOR564
LABEL $71F0 LF33D565565
LABEL $7235 notBottom2
LABEL $722A noEOR569
LABEL $7240 LF33D570570
LABEL $7278 notBottom3
LABEL $726D noEOR573
LABEL $7283 LF33D574574
LABEL $72BB notBottom4
LABEL $72B0 noEOR577
LABEL $72C9 LF33D578578
LABEL $7304 noPlayerMovement579
LABEL $72F5 leftPlayerMovement579
LABEL $72E4 rightPlayerMovement579
LABEL $7304 playerMovementDone579
LABEL $731B notBottom1_1
LABEL $7310 noEOR580
LABEL $7326 LF33D581581
EQU $00 NO_WOBBLE
LABEL $737C noWobbleChange585
LABEL $736F wobbleAdd585
LABEL $7360 wobbleDec585
LABEL $7393 notBottom2_1
LABEL $7388 noEOR586
LABEL $739E LF33D587587
LABEL $73DE startFresh590
LABEL $73E1 nextShotTestLoaded590
LABEL $73CD enemyOutOfBounds590
LABEL $73EF godShotHere591
LABEL $7468 endm591
LABEL $7401 shotIsAlive1591
LABEL $7421 not6Shot591
LABEL $7409 not4Shot591
LABEL $7423 shotdone591
LABEL $7411 not3Shot591
LABEL $7419 not2Shot591
LABEL $743B ok1591
LABEL $7451 ok2591
LABEL $7465 okok591
LABEL $747F notBottom3_1
LABEL $7474 noEOR592
LABEL $748A LF33D593593
LABEL $74B3 loadNextShot2596
LABEL $74C1 startFresh2596
LABEL $74B9 loadNextShot3596
LABEL $74D2 nextShotTestLoaded2596
LABEL $74E1 nextShotTestLoadedreally596
LABEL $7576 noSameShots596
LABEL $74FD godShotHere597
LABEL $7576 endm597
LABEL $750F shotIsAlive1597
LABEL $752F not6Shot597
LABEL $7517 not4Shot597
LABEL $7531 shotdone597
LABEL $751F not3Shot597
LABEL $7527 not2Shot597
LABEL $7549 ok1597
LABEL $755F ok2597
LABEL $7573 okok597
LABEL $7592 notBottom4_1
LABEL $7587 noEOR598
LABEL $75A0 LF33D599599
LABEL $75BF noReduceStars
LABEL $75CD removeOneStar
COMMENT_LABEL $75CD #isfunction
LABEL $75CC noAddStars
LABEL $75D0 was_first_star
LABEL $75E9 was_first_and_last_star
LABEL $75DB was_first_not_last_star
LABEL $75F7 was_not_first_star
COMMENT_LABEL $75F7 find previous, go thru all objects from first and look where "I" am the next...
LABEL $75FB try_next_star
LABEL $7604 found_next_switch_star
LABEL $761C was_not_first_but_last_star
LABEL $760E was_not_first_and_not_last_star
LABEL $00FF STAR_SHIFT_WARP
LABEL $7658 notBottom1Warp604
LABEL $764B noEOR606
LABEL $765A notBottom1Warp2604
LABEL $7666 pl604
LABEL $766E LF33D607607
LABEL $76D4 notBottom1Warp610
LABEL $76C7 noEOR612
LABEL $76D6 notBottom1Warp2610
LABEL $76E2 pl610
LABEL $76EA LF33D613613
LABEL $7750 notBottom1Warp616
LABEL $7743 noEOR618
LABEL $7752 notBottom1Warp2616
LABEL $775E pl616
LABEL $7766 LF33D619619
LABEL $77CC notBottom1Warp622
LABEL $77BF noEOR624
LABEL $77CE notBottom1Warp2622
LABEL $77DA pl622
LABEL $77E2 LF33D625625
LABEL $7826 REPLACE_1_2_simpleStarBehaviour2Bank2_varFrom0_1
LABEL $782C backToStarBehaviour
LABEL $7831 REPLACE_1_2_simpleStarBehaviourHSBank2_varFrom0_1
LABEL $7837 backToStarBehaviourHS
EQU $0D BUG_HIT_X_OFFSET_SCOOP
EQU $05 BUG_HIT_X_OFFSET
EQU $05 BUG_HIT_Y_OFFSET
LABEL $783C shotBehaviourStandardStartBug
LABEL $79E3 notHit630
LABEL $7902 laser_xCheckOnly630
LABEL $7856 noNewMin631
LABEL $7868 xCheckOnly630
LABEL $791F notHitLeftOfCenter630
LABEL $7989 notHitRightOfCenter630
LABEL $787F scoopCenterHit630
LABEL $788B _removeCurrentShotAndObject630
LABEL $788D REPLACE_2_2_zeroPlayerShotBehaviour_varFrom0_1630
LABEL $78AA centerHit630
LABEL $78B5 noInc2630
LABEL $78DF removeShot4630
LABEL $78EC removeShot3630
LABEL $78F6 removeShot2630
LABEL $8184 shotHandleDone_Bug
LABEL $790D laser_xCheckOnly2630
LABEL $791A okok630
LABEL $7939 xCheckOnly2630
LABEL $796E noScoopyLeft1630
LABEL $7977 laser_xCheckOnly3630
LABEL $7984 okok2630
LABEL $799F xCheckOnly3630
LABEL $79DA noScoopyRight630
LABEL $79C4 noShieldShot2630
LABEL $7B84 notHit633
LABEL $7AA3 laser_xCheckOnly633
LABEL $7A09 xCheckOnly633
LABEL $7AC0 notHitLeftOfCenter633
LABEL $7B2A notHitRightOfCenter633
LABEL $7A20 scoopCenterHit633
LABEL $7A2C _removeCurrentShotAndObject633
LABEL $7A2E REPLACE_2_2_zeroPlayerShotBehaviour_varFrom0_1633
LABEL $7A4B centerHit633
LABEL $7A56 noInc2633
LABEL $7A80 removeShot4633
LABEL $7A8D removeShot3633
LABEL $7A97 removeShot2633
LABEL $7AAE laser_xCheckOnly2633
LABEL $7ABB okok633
LABEL $7ADA xCheckOnly2633
LABEL $7B0F noScoopyLeft1633
LABEL $7B18 laser_xCheckOnly3633
LABEL $7B25 okok2633
LABEL $7B40 xCheckOnly3633
LABEL $7B7B noScoopyRight633
LABEL $7B65 noShieldShot2633
LABEL $7BDE noBulletSpawn634
LABEL $7B99 try_shot634
LABEL $7BC1 noEOR635
LABEL $7BD2 makeTripple634
LABEL $7BD9 makeMissile634
LABEL $7BCB makeHunter634
LABEL $7BDB noBulletSpawn_1634
LABEL $7C0C noAnimChangeEnemyBug1
LABEL $7C0F animNotFinishedBug1
LABEL $7C67 noIntChangeBug
LABEL $7C81 bugBehaviourGoAbsolut
COMMENT_LABEL $7C81 #isfunction
LABEL $7C35 noEOR637
LABEL $7C40 noEOR638
LABEL $7C6F LF33D639639
LABEL $7C9B back1ShotBug
EQU $00 BUGS_DONT_MOVE
LABEL $7CAE noNegB1
LABEL $7CFB noNewTargetNecessary
LABEL $7CB9 noNegB2
LABEL $7CC9 noEOR642
LABEL $7CD4 noEOR643
LABEL $7D0F noAnimChangeEnemyBug2
LABEL $7D12 animNotFinishedBug2
LABEL $7D16 doneWBug2
LABEL $7D3B normalEndMacro644
LABEL $7D5B normalEndMacro2644
LABEL $7D2A LF33D645645
LABEL $7D64 out644
LABEL $7D4A LF33D647647
LABEL $7D60 LF33D649649
LABEL $7D67 enemyExplosionBank1StubBehaviour
COMMENT_LABEL $7D67 #isfunction
LABEL $7D77 explosionEntryFromHitCheck
LABEL $7D85 REPLACE_1_2_enemyBank1ExplosionBehaviour_varFromIRQ1_1
LABEL $7D8B backToExplosionBehaviour
LABEL $7DAA back2ShotBug
LABEL $7DAF REPLACE_1_2_failureBehaviourBank1_varFromIRQ1_1
LABEL $7DB5 backToBehaviour
EQU $06 SHIP_TEST_SIZE
LABEL $7DBA dodgerBehaviour
COMMENT_LABEL $7DBA #isfunction
LABEL $7E96 isAlreadyDeadDodger
LABEL $000C DODGER_SIZE
LABEL $7DDF dodgerSizeOk
LABEL $7DEB notOObDodger0
LABEL $7E96 oob_dodger
LABEL $7E01 no_oob_dodger1
LABEL $7E96 noHitDodger
LABEL $7E18 no_oob_dodger2
LABEL $000D DODGER_ORG_LIST
LABEL $7F1A DodgerDiamond
LABEL $7E6A dieBastard
LABEL $7ED0 gotDiamond
LABEL $7E4D addScoreDiamondDodgerDone
LABEL $7E5B notCounted
LABEL $7E68 nosfx11
LABEL $7E62 REPLACE_1_2_collectDiamondData_varFromIRQ1_4
LABEL $7ED8 removeAsteroid
LABEL $7EC9 wasHit
LABEL $7E85 REPLACE_1_2_lastExplosionData_varFromIRQ1_42
EQU $00 MINESTORM_INVINCIBLE
LABEL $000A DODGER_FALLSPEED
LABEL $7EB0 LF33D656656
LABEL $7EE6 was_not_first_dodge
COMMENT_LABEL $7EE6 find previous, go thru all objects from first and look where "I" am the next...
LABEL $7EDF was_first_dodge
LABEL $7EF7 dodgeRemoveDone
LABEL $7EEA try_next_dodge
LABEL $7EF3 found_next_switch_dodge
LABEL $7F14 LF33D658658
LABEL $7F50 noInc
LABEL $7F70 noShieldTestSwarmer
LABEL $7F88 is5Shot
LABEL $7F8B isOneShot
LABEL $80D9 shotHandleDone
COMMENT_LABEL $80D9 #isfunction
LABEL $7FF4 mainLaser
LABEL $7FD5 rightLaser
LABEL $7FB6 leftLaser
LABEL $7FC7 enterLaserValuesLeft
LABEL $7FBB testLaserValuesLeft
LABEL $7FE6 enterLaserValuesRight
LABEL $7FDA testLaserValuesRight
LABEL $8005 enterLaserValues
LABEL $7FF9 testLaserValues
LABEL $8032 normalMainLaser
LABEL $8022 noleftLserBiggySet
LABEL $8032 noRightLserBiggySet
LABEL $804F REPLACE_1_2_zeroPlayerShotBehaviour_varFrom0_0
LABEL $8086 was_not_first_repls
COMMENT_LABEL $8086 find previous, go thru all objects from first and look where "I" am the next...
LABEL $805C was_first_repls
LABEL $8079 wasNottestShot1659
LABEL $8084 wasNottestShot2659
LABEL $80D9 shotHandleDoneRemoved
LABEL $808A try_next_repls
LABEL $8093 found_next_switch_repls
LABEL $80AD wasNottestShot1660
LABEL $80B8 wasNottestShot2660
LABEL $80BE REPLACE_1_2_threePlayerShotBehaviour_varFrom0_0
LABEL $80C9 REPLACE_1_2_twoPlayerShotBehaviour_varFrom0_0
LABEL $80D4 REPLACE_1_2_onePlayerShotBehaviour_varFrom0_0
LABEL $8105 noBossFight
LABEL $8404 notBoss1Fight
LABEL $80E6 boss1Fight
LABEL $80E6 bossFight1shr
LABEL $80F5 noLaserShot
LABEL $80FB noLaserDamgeThisRound
LABEL $80F8 doWeaponDamage
LABEL $80FB noWeaponDamage
LABEL $80FB wasSuperShot
LABEL $8127 normalEnemy_ne
LABEL $810E doWeaponDamage1_ne
LABEL $8115 noWeaponDamage1_ne
LABEL $8241 yesExplodeEnemy_biggy
LABEL $8184 bugHp
LABEL $814E notShootable
LABEL $8136 doWeaponDamage1
LABEL $8139 noWeaponDamage1
LABEL $8146 endofHit
LABEL $816F notShootable2
LABEL $8160 noLaserTest
LABEL $816A nextShotOk
LABEL $817F nextShotOk2
LABEL $8186 doWeaponDamage2
LABEL $8199 yesExplodeBug
LABEL $8195 noWeaponDamage2
LABEL $81A7 yesExplodeEnemy_bug
LABEL $81FB explodeNormalBug
LABEL $81BF entryFromOtherBigs
LABEL $81D6 back661
LABEL $81D6 entryFromOtherBigsWithoutScore
LABEL $821A back662
LABEL $82FF doMoneyMothership
LABEL $82C9 doMoneySucker
LABEL $8275 doSaucerDeath
LABEL $825F addpointsBiggy
LABEL $8272 back663
LABEL $827F notNullSaucer
LABEL $82A1 dropRank1
LABEL $82A9 dropRank2
LABEL $82B1 dropRank3
LABEL $82B9 dropRank4
LABEL $82C1 dropRank5
LABEL $8299 dropRank6
LABEL $82E4 noAdditionSpawns
LABEL $82F2 REPLACE_1_2_spawnRandomMoney_varFrom0_1
LABEL $830C REPLACE_1_2_spawnMoney200_varFrom0_1
LABEL $8319 noMoneyMothership
LABEL $8330 back664
LABEL $8330 yesExplodeEnemyWithoutScoreing
LABEL $8348 wasAttacker
LABEL $834B wasNotAttacker
LABEL $836A noDebrisBomber
LABEL $8367 goEnemyDebris
LABEL $836D bank1ExplosionEntry
LABEL $8379 noNewBonusSpawn
LABEL $BA62 enemyTribbleWaitAnim
LABEL $83D1 noTribbleWasShot
LABEL $83BC continueTribbleDeath
LABEL $83E6 goEnemyExplode
LABEL $83F2 LF33D666666
LABEL $840B swarmHitBoss2
LABEL $840D doWeaponDamage3
LABEL $8410 noWeaponDamage3
LABEL $8420 yesExplodeEnemy_b2
LABEL $8414 wasSuperShot2_b2
LABEL $8442 goEnemyExplodeB2
LABEL $844E LF33D668668
LABEL $8460 notBoss2Fight
LABEL $846B noIncBoss
LABEL $8493 removeShot4_b
LABEL $8495 removeShot3_b
LABEL $8497 removeShot2_b
LABEL $8497 remove1Shot4b
EQU $01 EX_COUNT
LABEL $84B0 Triangle1
LABEL $84B7 Triangle2
LABEL $84BE Line1
LABEL $84C2 Line2
LABEL $84C6 Line3
LABEL $84CA Square1
LABEL $84D4 Square2
LABEL $84DE Square3
EQU $0F DodgerObject
LABEL $84EB startDodger1
LABEL $84EB startDodger_1
LABEL $84EF REPLACE_1_2_ensureScoopiesSafety_varFrom0_6
COMMENT_LABEL $84EF bank 0 replace
LABEL $C84D oldMultiplyer
COMMENT_LABEL $C84D 1
LABEL $C84F oldTimer
COMMENT_LABEL $C84F 2
LABEL $8537 noTimes5x
LABEL $8569 noTimes2x
LABEL $8545 doMulti2
LABEL $853E noPermanentMulti2
LABEL $8569 doNotReplaceHigherMultiplyer
LABEL $858E noEOR670
LABEL $8598 noDiamondRun
EQU $00 DIAMOND_STORM
LABEL $859B REPLACE_1_2_dodgerIntroMusic_varFromIRQ1_71
LABEL $859E REPLACE_1_2_PLYINIT_varFromIRQ1_71
LABEL $85A4 dodgerIntroLoop
LABEL $85A4 REPLACE_1_2_PLYPLAYNOLOOP2_varFromIRQ1_71
LABEL $85E6 dodgerIntroDone
LABEL $85B7 notDrunken_mrs2
LABEL $85CA noDoubleIncDodger
LABEL $85D1 noTrippleIncDodger
LABEL $85DE dodgerIntroNotDone
LABEL $85DE REPLACE_1_2_drawMinestormString00_varFrom0_6
COMMENT_LABEL $85DE bank 0 replace
LABEL $8760 initDodger
COMMENT_LABEL $8760 #isfunction
LABEL $85F5 MSloop1
LABEL $85F5 dodgerMain
LABEL $85FB REPLACE_1_2_doymsound100_varFromIRQ1_32
LABEL $8647 notDeadYetDodger
LABEL $891D dyingDoneDodger
LABEL $8707 skipBecauseOfDeath
LABEL $8652 noBackgroundNoiseDodger
LABEL $864C REPLACE_1_2_backgrounddata_varFromIRQ1_3
LABEL $8652 REPLACE_1_2_getButtonState_varFrom0_3
COMMENT_LABEL $8652 bank 0 replace
LABEL $8662 noMSHelp
LABEL $865C REPLACE_1_2_showMSHelp_varFromIRQ0_3
LABEL $8680 noAccelDodge
LABEL $8669 REPLACE_1_2_noiseOnlyData_varFromIRQ1_3
LABEL $866F noAccelNoiseDodger
EQU $07 MAX_MINSTORM_SPEED_HI
LABEL $867B accelOk
LABEL $86A1 accelDoneDodge
LABEL $8687 REPLACE_1_2_noiseOnlyDeAccelData_varFromIRQ1_3
LABEL $868D noDeAccelNoiseDodger
LABEL $86EB noProgress
LABEL $86BD incAgain1_d
LABEL $86D8 addScoreBackDodger1
LABEL $88A7 dodgerFinished1
LABEL $86EB REPLACE_1_2_JoyDigitalHorizontal00_varFrom0_2
COMMENT_LABEL $86EB bank 0 replace
LABEL $86FE notDrunken_dodger
LABEL $8701 REPLACE_1_2_drawPlayerDodger_varFromIRQ0_5
COMMENT_LABEL $8701 bank 0 replace
LABEL $871B testNewEnemies
LABEL $88C3 dodgerFinished2
LABEL $8732 noNewEnemies
LABEL $8732 noNewSpawn
LABEL $8830 initAsteroidU
LABEL $87BB precalcMines
LABEL $8750 dodger_done
LABEL $8759 stars_doneDodger
LABEL $877B next_list_entry_dodger
LABEL $EE3D MINE1
LABEL $EE53 MINE2
LABEL $EE6F MINE3
LABEL $EE8E MINE4
LABEL $87F7 doM3
LABEL $87D0 noDodgerAngleOverflow1
LABEL $87E6 noDodgerAngleOverflow2
LABEL $8801 noDodgerAngleOverflow3
LABEL $880D doM4
LABEL $8817 noDodgerAngleOverflow4
LABEL $8828 mineList
LABEL $883D noEOR682
LABEL $884F noEOR683
LABEL $886A isDiamondRunDodger
LABEL $8863 noEOR684
LABEL $8871 noDiamond
LABEL $8871 mineInitDone
LABEL $887D noEOR685
LABEL $8892 noEOR686
LABEL $8897 notToBigDodgerSpeed
LABEL $889F noEOR687
LABEL $88AF resultValues
LABEL $88ED dogdgeResultDone
LABEL $890D doScore
LABEL $891D noScore
LABEL $8915 addAgainDodgerScore
LABEL $8965 dogderDoneLoop
LABEL $895F REPLACE_1_2_MineStorm1Data_varFromIRQ1_1
COMMENT_LABEL $895F bank 1 replace
LABEL $896D notDrunken_mrs2_2
LABEL $8973 REPLACE_1_2_displayMinestormResult00_varFrom0_1
COMMENT_LABEL $8973 bank 0 replace
LABEL $8980 dodgerResultDone
LABEL $8988 noMul689
LABEL $89A3 REPLACE_1_2_leaveDodgerAchievementTest_varFrom0_1
COMMENT_LABEL $89A3 bank 0 replace
LABEL $89A9 dodgerAchievementBack
LABEL $89AC attackPatterns0
LABEL $89DC attackMiddleStupid
LABEL $89F4 attackRightStupid
LABEL $89E8 attackLeftStupid
LABEL $89B4 attackPatterns1
LABEL $8A10 attackLoopingAndFlyRight
LABEL $8A30 attackLoopingAndFlyLeft
LABEL $89BC attackPatterns2
LABEL $8A44 attackSingleLooping
LABEL $8A00 attackDirect2
LABEL $89C4 attackPatterns3
LABEL $8A08 attackDirect4
LABEL $89CC attackPatterns4
LABEL $8A7C attackDropDead
LABEL $8A54 attackMiddleZigZag
LABEL $8A58 attackMiddleZigZagDirect
LABEL $8AD4 singleLoopingOnlyPattern
COMMENT_LABEL $8AD4 speed 100
LABEL $8A24 attackMiddleLoopEndless
LABEL $8A94 singleLoopingRelativePattern
COMMENT_LABEL $8A94 speed 100
LABEL $8B0C attackZig
COMMENT_LABEL $8B0C speed 400
LABEL $8B1C attackZag
COMMENT_LABEL $8B1C speed 400
LABEL $8B2C enemyDefinitions1
LABEL $8B2F enemyDefinitions2
LABEL $8B32 enemyDefinitions3
LABEL $8B32 enemyDefinitions4
LABEL $8B32 enemyDefinitions5
LABEL $8B37 enemyDefinitions6
LABEL $8B3C enemyDefinitions7
LABEL $8B32 enemyDefinitions8
LABEL $8B32 enemyDefinitions9
LABEL $8B43 enemyDefinitions10
LABEL $8B32 enemyDefinitions11
LABEL $8B4C enemyDefinitions12
LABEL $8B51 enemyDefinitions13
LABEL $8B5E enemyDefinitions14
LABEL $8B5E enemyDefinitions15
LABEL $8B4C enemyDefinitions16
LABEL $8B6B enemyDefinitions17
LABEL $8B72 enemyDefinitions18
LABEL $8B72 enemyDefinitions19
LABEL $8B43 enemyDefinitions20
LABEL $8B77 enemyDefinitions21
LABEL $8B7C enemyDefinitions22
LABEL $8B7C enemyDefinitions23
LABEL $8B89 enemyDefinitions24
LABEL $8B8E enemyDefinitions25
LABEL $8B93 enemyDefinitions26
LABEL $8B93 enemyDefinitions27
LABEL $8B9C enemyDefinitions28
LABEL $8BA1 enemyDefinitions29
LABEL $8BAE enemyDefinitions30
LABEL $8B8E enemyDefinitions31
LABEL $8BB3 enemyDefinitions32
LABEL $8BB8 enemyDefinitions33
LABEL $8BB8 enemyDefinitions34
LABEL $8BC9 enemyDefinitions35
LABEL $8BCE enemyDefinitions36
LABEL $8BD5 enemyDefinitions37
LABEL $8BD5 enemyDefinitions38
LABEL $8BCE enemyDefinitions39
LABEL $8BCE enemyDefinitions40
LABEL $8BD8 enemyDefinitions41
LABEL $8BD5 enemyDefinitions42
LABEL $8BD5 enemyDefinitions43
LABEL $8BE1 enemyDefinitions44
LABEL $8BE6 enemyDefinitions45
LABEL $8BE9 enemyDefinitions46
LABEL $8B8E enemyDefinitions47
LABEL $8BCE enemyDefinitions48
LABEL $8B93 enemyDefinitions49
LABEL $8BEC enemyDefinitions50
LABEL $A54D enemySW1Definition_1_wait
LABEL $A554 enemySW1Definition_2_wait
LABEL $A55B enemySW1Definition_3_wait
LABEL $A515 enemySW1Definition_1
LABEL $A523 enemySW1Definition_2
LABEL $A538 enemySW1Definition_3
LABEL $8BF9 enemyDefinitions51
LABEL $A8BD enemySW2Definition_3
LABEL $8BFC enemyDefinitions52
LABEL $A8A8 enemySW2Definition_2
LABEL $8BFF enemyDefinitions53
LABEL $ABA7 enemySW3Definition_shield
LABEL $AC63 enemySW4Definition
LABEL $8C0A enemyDefinitions54
LABEL $A89A enemySW2Definition_1
LABEL $8BEC enemyDefinitions55
LABEL $8C33 enemyDefinitions56
LABEL $8C38 enemyDefinitions57
LABEL $8C3F enemyDefinitions58
LABEL $8C6E enemyDefinitions59
LABEL $AC5C enemySW4Definition_1
LABEL $8C75 enemyDefinitions60
LABEL $8C78 enemyDefinitions61
LABEL $8C78 enemyDefinitions62
LABEL $8C78 enemyDefinitions63
LABEL $8C78 enemyDefinitions64
LABEL $8C87 enemyDefinitions65
LABEL $8CB0 enemyDefinitions66
LABEL $A8C4 enemySW2Definition_3_debris
LABEL $A8CB enemySW2Definition_3_debris_wait
LABEL $A53F enemySW1Definition_3_debris
LABEL $A546 enemySW1Definition_3_debris_wait
LABEL $8CB0 enemyDefinitions67
LABEL $8C78 enemyDefinitions68
LABEL $8CB9 enemyDefinitions69
LABEL $A51C enemySW1Definition_1_hp
LABEL $A8A1 enemySW2Definition_1_hp
LABEL $8CC8 enemyDefinitions70
LABEL $8C78 enemyDefinitions71
LABEL $8C78 enemyDefinitions72
LABEL $8C78 enemyDefinitions73
LABEL $8CC8 enemyDefinitions74
LABEL $8CD5 enemyDefinitions75
LABEL $B097 enemyTR1Definition_1
LABEL $8CD8 enemyDefinitions76
LABEL $B3FA enemyTR2Definition_1
LABEL $B772 enemyTR3Definition_1
LABEL $8CDF enemyDefinitions77
LABEL $8CDF enemyDefinitions78
LABEL $8D20 enemyDefinitions79
LABEL $B780 enemyTR3Definition_2
LABEL $B787 enemyTR3Definition_1_clone
LABEL $8CD8 enemyDefinitions80
LABEL $8D29 enemyDefinitions81
LABEL $8D2C enemyDefinitions82
LABEL $8D55 enemyDefinitions83
LABEL $B779 enemyTR3Definition_1_fast
LABEL $8D58 enemyDefinitions84
LABEL $B401 enemyTR2Definition_1_fast
LABEL $8D5B enemyDefinitions85
LABEL $B09E enemyTR1Definition_1_fast
LABEL $8D58 enemyDefinitions86
LABEL $8D5E enemyDefinitions87
LABEL $8D63 enemyDefinitions88
LABEL $8D66 enemyDefinitions89
LABEL $8D66 enemyDefinitions90
LABEL $8D8F enemyDefinitions91
LABEL $8DB8 enemyDefinitions92
LABEL $8DBD enemyDefinitions93
LABEL $8DBD enemyDefinitions94
LABEL $8DBD enemyDefinitions95
LABEL $8DC0 enemyDefinitions96
LABEL $8DC3 enemyDefinitions97
LABEL $8DC3 enemyDefinitions98
LABEL $8DBD enemyDefinitions99
LABEL $8DCA vaderDefinition
LABEL $8DCD emptyPattern
LABEL $8DD7 entryPatternVShapeRightToLeft_slow
LABEL $8DF1 entryPatternVShapeRightToLeft_slow_start
LABEL $8E0B kamikaze_middleToLeft
LABEL $8E35 entryPatternLeftStraightDownZigLeftOut
LABEL $8E57 entryPatternLeftStraightDownZigLeftOut_noWait
LABEL $8E79 kamikazeEnterLeftMiddleZagDownMiddleOut
LABEL $8EA5 kamikaze1_1
LABEL $8EB7 kamikaze1_2
LABEL $8EC9 kamikaze1_3
LABEL $8EDB kamikaze1_4
LABEL $8EED kamikaze1_5
LABEL $8EFF kamikaze3_1
LABEL $8F11 kamikaze3_2
LABEL $8F23 kamikaze3_3
LABEL $8F35 kamikaze3_4
LABEL $8F47 kamikaze3_5
LABEL $8F59 entryPatternEnterMiddleSquareWaveExitRight
LABEL $8FBB kamikaze_middleStepLeft
LABEL $8FD5 kamikaze_rightStepMiddle
LABEL $8FEF entryPatternEnterMiddleSquareWaveExitRight2
LABEL $9041 entryPatternVShapeRightToLeft_fast
LABEL $905B entryPatternBottomRightTopLeftOut_fast
LABEL $9075 entryPatternBottomZigZag
LABEL $9097 entryPatternTopSmallZigZag_higher
LABEL $90D9 entryPatternTopSmallZigZag_higher_fast
LABEL $911B entryPatternTopSmallZigZag_lower
LABEL $915D entryPatternTopSmallZigZag_lower_fast
LABEL $919F kamikaze_leftTop_RightBottom_zigZag
LABEL $91E1 entryPatternBonusTriangleTopMiddleLeftRight
LABEL $9203 entryPatternNineToCenterToThree
LABEL $921D entryPatternTenToCenterToTwo_start
LABEL $9237 entryPatternTenToCenterToTwo
LABEL $9251 entryPatternElevenToCenterToOne_start
LABEL $926B entryPatternElevenToCenterToOne
LABEL $9285 entryPatternElevenPToCenterToOneP
LABEL $929F blockStraightLeft
LABEL $92B1 blockStraightRight
LABEL $92C3 blockFive1
LABEL $92C3 bigBlock3
LABEL $92D5 blockFive2
LABEL $92D5 bigBlock4
LABEL $92E7 blockFive3
LABEL $92E7 bigBlock5
LABEL $92F9 blockFive4
LABEL $92F9 bigBlock6
LABEL $930B blockFive5
LABEL $930B bigBlock7
LABEL $931D bigBlock1a
LABEL $932F bigBlock1b
LABEL $9341 bigBlock1
LABEL $9353 bigBlock2
LABEL $9365 bigBlock8
LABEL $9377 bigBlock9
LABEL $9389 bigBlock10
LABEL $939B bigBlock11
LABEL $93AD bigBlock12
LABEL $93BF bonus56Pattern
LABEL $93E9 bonus64Pattern_a
LABEL $9423 bonus64Pattern_b
LABEL $945D bonus72Pattern
LABEL $946F kamikaze_60
LABEL $9489 kamikaze_76
LABEL $94C3 kamikaze_84
LABEL $94D5 kamikaze_92
LABEL $94FF kamikaze_68
LABEL $9531 pattern75
LABEL $955B bonus80Pattern
LABEL $9575 bonus88Pattern1
LABEL $9587 bonus88Pattern2
LABEL $9599 bonus92Pattern1
LABEL $95AB bonus92Pattern2
LABEL $95C5 blockLoopPattern
LABEL $961F Level1Intro
COMMENT_LABEL $961F empty
LABEL $9631 Level2Intro
LABEL $9631 Level3Intro
LABEL $9643 Level4Intro_Kamikaze
LABEL $9631 Level5Intro
LABEL $9655 Level6Intro
LABEL $9667 Level7Intro
LABEL $9679 Level8Intro_Bonus
LABEL $968B Level9Intro
LABEL $969D Level10Intro
LABEL $968B Level11Intro
LABEL $96AF Level12Intro_Kamikaze
LABEL $9729 Level13Intro
LABEL $9729 Level14Intro
LABEL $968B Level15Intro
LABEL $973B Level16Intro_Bonus
LABEL $969D Level17Intro
LABEL $968B Level18Intro
LABEL $969D Level19Intro
LABEL $974D Level20Intro_Kamikaze
LABEL $968B Level21Intro
LABEL $969D Level22Intro
LABEL $975F Level23Intro
LABEL $9771 Level24Intro_Bonus
LABEL $9783 Level25Intro
LABEL $978D Level26Intro
LABEL $979F Level27Intro
LABEL $97B1 Level28Intro_Kamikaze
LABEL $97C3 Level29Intro
LABEL $97DD Level30Intro
LABEL $9783 Level31Intro
LABEL $97EF Level32Intro_Bonus
LABEL $9801 Level33Intro
LABEL $9801 Level34Intro
LABEL $9823 Level35Intro
LABEL $9835 Level36Intro_Kamikaze
LABEL $9887 Level37Intro
LABEL $9899 Level38Intro
LABEL $9899 Level39Intro
LABEL $98EB Level40Intro_Bonus
LABEL $9905 Level41Intro
LABEL $995F Level42Intro
LABEL $995F Level43Intro
LABEL $9965 Level44Intro_Kamikaze
LABEL $995F Level45Intro
LABEL $995F Level46Intro
LABEL $9783 Level47Intro
LABEL $99BF Level48Intro_Bonus
LABEL $99C9 Level49Intro
LABEL $9A23 Level50Intro
LABEL $9A2B fourtyEntry
LABEL $9A73 twentyEntry
LABEL $9AC9 Level51Intro
LABEL $9B1B Level52Intro_Kamikaze
LABEL $9B7D Level53Intro
LABEL $9B93 Level54Intro
LABEL $9A2B Level55Intro
LABEL $9BE5 Level56Intro_Bonus
LABEL $9AC9 Level57Intro
LABEL $9BEF Level58Intro
LABEL $9887 Level59Intro
LABEL $9BFD Level60Intro_Kamikaze
LABEL $9C0F Level61Intro
LABEL $9C29 Level62Intro
LABEL $9C3B Level63Intro
LABEL $9C45 Level64Intro_Bonus
LABEL $9AC9 Level65Intro
LABEL $979F Level66Intro
LABEL $9A2B Level67Intro
LABEL $9C57 Level68Intro_Kamikaze
LABEL $8DCD Level69Intro
COMMENT_LABEL $8DCD don't care is appear
LABEL $9A23 Level70Intro
LABEL $9823 Level71Intro
LABEL $9C69 Level72Intro_Bonus
LABEL $9887 Level73Intro
LABEL $9905 Level74Intro
LABEL $9C7B Level75Intro
LABEL $9C8D Level76Intro_Kamikaze
LABEL $9C9F Level77Intro
LABEL $9C9F Level78Intro
LABEL $9C7B Level79Intro
LABEL $9CD9 Level80Intro_Bonus
LABEL $9CEB Level81Intro_Tribble
LABEL $9CF1 Level82Intro
LABEL $8DCD Level83Intro
COMMENT_LABEL $8DCD don't care is appear
LABEL $9D2B Level84Intro_Kamikaze
LABEL $8DCD Level85Intro
COMMENT_LABEL $8DCD don't care is appear
LABEL $8DCD Level86Intro
COMMENT_LABEL $8DCD don't care is appear
LABEL $8DCD Level87Intro
COMMENT_LABEL $8DCD don't care is appear
LABEL $9D3D Level88Intro_Bonus
LABEL $9AC9 Level89Intro
LABEL $9AC9 Level90Intro
LABEL $9899 Level91Intro
LABEL $9D4F Level92Intro_Kamikaze
LABEL $9D61 Level93Intro
LABEL $9A73 Level94Intro
LABEL $8DCD Level95Intro
COMMENT_LABEL $8DCD don't care is appear
LABEL $9D83 Level96Intro_Bonus
LABEL $9A73 Level97Intro
LABEL $9A2B Level98Intro
LABEL $9D95 waitingPatternBigBlock
LABEL $9DBF waitingPattern1
LABEL $9DE7 waitingPattern1_a
LABEL $9E0F waitingPattern1_bottom
LABEL $9E37 waitingPatternBigBlock2
LABEL $9E4F waitingPattern2
LABEL $9E77 waitingPattern4
LABEL $9E9F waitingPattern5
LABEL $9EC7 waitingPattern_2Blocker
COMMENT_LABEL $9EC7 20 positions
LABEL $9ED1 waitingPattern_4Blocker
LABEL $9ED1 waitingPatternBlock
LABEL $9FDD level1
LABEL $9FE9 level2
LABEL $9FF5 level3
LABEL $A005 level4
LABEL $A011 level5
LABEL $A01D level6
LABEL $A029 level7
LABEL $A039 level8
LABEL $A045 level9
LABEL $A051 level10
LABEL $A05D level11
LABEL $A06D level12
LABEL $A079 level13
LABEL $A085 level14
LABEL $A091 level15
LABEL $A0A1 level16
LABEL $A0AD level17
LABEL $A0B9 level18
LABEL $A0C5 level19
LABEL $A0D5 level20
LABEL $A0E1 level21
LABEL $A0ED level22
LABEL $A0F9 level23
LABEL $A109 level24
LABEL $A4E5 level25_Boss2_Queen
LABEL $A115 level25
LABEL $A121 level26
LABEL $A12D level27
LABEL $A13D level28
LABEL $A149 level29
LABEL $A155 level30
LABEL $A161 level31
LABEL $A171 level32
LABEL $A17D level33
LABEL $A189 level34
LABEL $A195 level35
LABEL $A1A5 level36
LABEL $A1B1 level37
LABEL $A1BD level38
LABEL $A1C9 level39
LABEL $A1D9 level40
LABEL $A1E5 level41
LABEL $A1F1 level42
LABEL $A1FD level43
LABEL $A20D level44
LABEL $A219 level45
LABEL $A225 level46
LABEL $A231 level47
LABEL $A241 level48
LABEL $A24D level49
LABEL $A4F1 level50_Boss3_sinistar
LABEL $A259 level50
LABEL $A265 level51
LABEL $A275 level52
LABEL $A281 level53
LABEL $A28D level54
LABEL $A299 level55
LABEL $A2A9 level56
LABEL $A2B5 level57
LABEL $A2C1 level58
LABEL $A2CD level59
LABEL $A2DD level60
LABEL $A2E9 level61
LABEL $A2F5 level62
LABEL $A301 level63
LABEL $A311 level64
LABEL $A31D level65
LABEL $A329 level66
LABEL $A335 level67
LABEL $A345 level68
LABEL $A351 level69
LABEL $A35D level70
LABEL $A369 level71
LABEL $A379 level72
LABEL $A385 level73
LABEL $A391 level74
LABEL $A4FD level75_Boss4_deathstar
LABEL $A39D level75
LABEL $A3AD level76
LABEL $A3B9 level77
LABEL $A3C5 level78
LABEL $A3D1 level79
LABEL $A3E1 level80
LABEL $A3ED level81
COMMENT_LABEL $A3ED tribble
LABEL $A3F9 level82
LABEL $A405 level83
LABEL $A415 level84
LABEL $A421 level85
LABEL $A42D level86
LABEL $A439 level87
LABEL $A449 level88
LABEL $A455 level89
LABEL $A461 level90
LABEL $A46D level91
LABEL $A47D level92
LABEL $A489 level93
LABEL $A495 level94
LABEL $A4A1 level95
LABEL $A4B1 level96
LABEL $A4BD level97
LABEL $A4C9 level98
LABEL $A4D5 level99
LABEL $A509 level100_Boss1_Borg
LABEL $A515 enemySW1Definition1
LABEL $A56C EnemySW1Angle8Table
LABEL $A562 EnemySW1WaitAnim
LABEL $A52A enemySW1Definition_2_debris
LABEL $A531 enemySW1Definition_2_debris_wait
LABEL $A57E TieFighterSW_0
LABEL $A7FE TieFighterSW_8
LABEL $A84C TieFighterSW_9
LABEL $A5CC TieFighterSW_1
LABEL $A61A TieFighterSW_2
LABEL $A66C TieFighterSW_3
LABEL $A6BE TieFighterSW_4
LABEL $A70C TieFighterSW_5
LABEL $A75A TieFighterSW_6
LABEL $A7AC TieFighterSW_7
LABEL $A8F1 EnemySW2Angle8Table
LABEL $A8E7 EnemySW2WaitAnim
LABEL $A8AF enemySW2Definition_2_debris
LABEL $A8B6 enemySW2Definition_2_debris_wait
LABEL $A8D2 enemySW2Definition_1_wait
LABEL $A8D9 enemySW2Definition_2_wait
LABEL $A8E0 enemySW2Definition_3_wait
LABEL $AB27 ImperialFighterSW_8
LABEL $A903 ImperialFighterSW_0
LABEL $AB67 ImperialFighterSW_9
LABEL $A943 ImperialFighterSW_1
LABEL $A989 ImperialFighterSW_2
LABEL $A9CF ImperialFighterSW_3
LABEL $AA15 ImperialFighterSW_4
LABEL $AA55 ImperialFighterSW_5
LABEL $AA9B ImperialFighterSW_6
LABEL $AAE1 ImperialFighterSW_7
LABEL $ABA7 enemySW3DefinitionShield
LABEL $ABAE EnemySW3Angle8Table
LABEL $ABB6 EnemySW3WaitAnim
LABEL $ABC0 Blob_0
LABEL $ABF4 Blob_1
LABEL $AC28 Blob_2
LABEL $AC5C enemySW4Definition1
LABEL $AC75 EnemySW4Angle8Table
LABEL $AC6B EnemySW4WaitAnim
LABEL $AC87 XWing_0
LABEL $AFC9 XWing_8
LABEL $B030 XWing_9
LABEL $ACEE XWing_1
LABEL $AD55 XWing_2
LABEL $ADBE XWing_3
LABEL $AE92 XWing_5
LABEL $AEF7 XWing_6
LABEL $AF5C XWing_7
LABEL $AE2B XWing_4
LABEL $B097 enemyTR1Definition1
LABEL $B0AF EnemyTR1Angle8Table
LABEL $B0A5 EnemyTR1WaitAnim
LABEL $B0C1 Ferengi_0
LABEL $B35C Ferengi_8
LABEL $B3AB Ferengi_9
LABEL $B110 Ferengi_1
LABEL $B164 Ferengi_2
LABEL $B1B8 Ferengi_3
LABEL $B20C Ferengi_4
LABEL $B260 Ferengi_5
LABEL $B2B4 Ferengi_6
LABEL $B308 Ferengi_7
LABEL $B3FA enemyTR2Definition1
LABEL $B412 EnemyTR2Angle8Table
LABEL $B408 EnemyTR2WaitAnim
LABEL $B424 Tamarian_0
LABEL $B6C4 Tamarian_8
LABEL $B71B Tamarian_9
LABEL $B47B Tamarian_1
LABEL $B4CC Tamarian_2
LABEL $B521 Tamarian_3
LABEL $B578 Tamarian_4
LABEL $B5CD Tamarian_5
LABEL $B61E Tamarian_6
LABEL $B673 Tamarian_7
LABEL $B772 enemyTR3Definition1
LABEL $B799 EnemyTR3Angle8Table
LABEL $B78F EnemyTR3WaitAnim
LABEL $B7AB Klingon_0
LABEL $B9CB Klingon_8
LABEL $BA13 Klingon_9
LABEL $B799 _SM_animData
LABEL $B7F5 Klingon_1
LABEL $B837 Klingon_2
LABEL $B879 Klingon_3
LABEL $B8BB Klingon_4
LABEL $B901 Klingon_5
LABEL $B947 Klingon_6
LABEL $B989 Klingon_7
LABEL $BA7A Tribble_0
LABEL $BAC2 Tribble_1
LABEL $BB14 DebrisBomb_0
LABEL $BB48 DebrisBomb_1
LABEL $BB7C DebrisBomb_2
LABEL $BBE7 displaySwarmCalibration
LABEL $BC09 LF33D692692
LABEL $BE37 *
COMMENT_LINE $0000 ; hey dissi "watch $circleHalf 2 0"
COMMENT_LINE $0000 1369 bytes left
COMMENT_LINE $0000 following is needed for VIDE:
COMMENT_LINE $0000 to replace "vars" in this bank with values from the other bank
COMMENT_LINE $0000 #genVarlist# varFrom1
COMMENT_LINE $0000 TODO:
COMMENT_LINE $0000 und zwar ist mir bei mir und in bildern/videos anderer aufgefallen, dass das bild leicht nach links verschoben ist,
COMMENT_LINE $0000 zumindest aber das quadrat in der kalibration
COMMENT_LINE $0000 DB       "VERSION 1.00"              ; Cartridges 1-30
COMMENT_LINE $0000 DB       "VERSION 1.01"              ; Cartridges 1-31 - "all" fixed: Immunity 2 games by wheel, was ovewritten bei level rollover
COMMENT_LINE $0000 DB       "VERSION 1.02"              ; fixed: Immunity setting could overwrite multiplyer, that caused the mulitplyer to
COMMENT_LINE $0000 be "0" whiech effectively was 256 -> huge scores!
COMMENT_LINE $0000 DB       "VERSION 1.03"              ; fixed: bug in boss 4, gamescale positive -> endless loop
COMMENT_LINE $0000 fixed: pause mode glitch, shots can go thru shields
COMMENT_LINE $0000 fixed:in dodger was potential to get the multiplyers mixed up
COMMENT_LINE $0000 added version number to title
COMMENT_LINE $0000 todo: no warp, difficulty up, some more powerm no achievements, different high score, no warp
COMMENT_LINE $0000 Enemies have one bullet less (need RAM)
COMMENT_LINE $0000 song: introMusic is replaced with title music (one song less), needed ROM space
COMMENT_LINE $0000 so if "nmi" testing is done, STACK this must be changed
COMMENT_LINE $0000 but beware!!! if lower than $CBFC
COMMENT_LINE $0000 Stack underflow will occur at some stage!!! - unless precaution is taken!
COMMENT_LINE $0000 no save game possible
COMMENT_LINE $0000 not enabled with VecFever
COMMENT_LINE $0000 if enabled "normal" save game is disabled!
COMMENT_LINE $0000 less stars
COMMENT_LINE $0000 1 less player shot
COMMENT_LINE $0000 wheel does not show, and gives random results
COMMENT_LINE $0000 ................
COMMENT_LINE $0000 . VecFever Start
COMMENT_LINE $0000 ................
COMMENT_LINE $0000 if  VecFever = 1
COMMENT_LINE $0000 Vectorblade ASSUMES a VecFever is present!
COMMENT_LINE $0000 no Further testing is done, VecFever facilities are used without questions... or answers!
COMMENT_LINE $0000 Also VecFever with a IRQ (address-)line and Firmware >= 1.21 is assumed.
COMMENT_LINE $0000 In that case options and highscores are saved using the
COMMENT_LINE $0000 ShadowRAM and copy to ROM feature (upper 16k)
COMMENT_LINE $0000 The V4E structure lies in Bank 1 ($8030) - followed by options and the highscore table(s).
COMMENT_LINE $0000 VECFEVER_FAKE = 1 ; don't execute any RAM/ROM copy for persistency
COMMENT_LINE $0000 COLOR LED not working due to timing issues in VecFever
COMMENT_LINE $0000 Thomas disabled LED with IRQ-rom access (V4E type 10)
COMMENT_LINE $0000 ...............
COMMENT_LINE $0000 . VecFever End
COMMENT_LINE $0000 ...............
COMMENT_LINE $0000 defines for game difficulties
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . Test values Start
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . REAL values Start
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 LEVEL_SELECT        =        1 ; enable select difficulty levek (by adding achievements
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 . REAL values End
COMMENT_LINE $0000 ...................
COMMENT_LINE $0000 directions
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 all banks start with this!
COMMENT_LINE $0000 this file is part of Vectorblade, written by Malban in 2018-2020
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 DEFINE SECTION
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 load vectrex bios routine definitions
COMMENT $C800 RAM and defines
COMMENT_LINE $C800 all banks
COMMENT_LINE $C800 this file is part of Vectorblade, written by Malban in 2018-2020
COMMENT $C800 if = 0, than old "INIT_SHOT_TEST" must be used!
COMMENT_LINE $C800 ;;;;
COMMENT_LINE $C800 enemy behaviour defines
COMMENT_LINE $C800 Single attack pattern
COMMENT_LINE $C800 TYPE of pattern, pattern address/data
COMMENT_LINE $C800 can not drop randomly - only frommoney mothership!
COMMENT_LINE $C800 random drops
COMMENT_LINE $C800 load vectrex bios routine definitions
COMMENT $C800 vectrex function includes
COMMENT_LINE $C800 commented out, all functions that are hurtfull to cranky VIA
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C800 this file contains includes for vectrex BIOS functions and variables      ;
COMMENT_LINE $C800 it was written by Bruce Tomlin, slighte changed by Malban                 ;
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C800 $C839                             ;Pointer to copyright string during startup
COMMENT_LINE $C800 $C83B                             ;High score cold-start flag (=0 if valid)
COMMENT_LINE $C800 $C83C                             ;temp byte
COMMENT_LINE $C800 $C840                             ;        register 12
COMMENT_LINE $C800 $C841                             ;        register 11
COMMENT_LINE $C800 $C843                             ;        register 9
COMMENT_LINE $C800 $C844                             ;        register 8
COMMENT_LINE $C800 $C848                             ;        register 4
COMMENT_LINE $C800 $C849                             ;        register 3
COMMENT_LINE $C800 $C84A                             ;        register 2
COMMENT_LINE $C800 $C84C                             ;        register 0
COMMENT_LINE $C800 $C85E                             ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $C800 $C868...$C876                             ;Unused?
COMMENT_LINE $C800 $C878                             ;Unused?
COMMENT_LINE $C800 $C880 - $CBEA is user RAM                            ;
COMMENT_LINE $C800 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $C800 1 mux sel 0
COMMENT_LINE $C800 2 mux sel 1
COMMENT_LINE $C800 3 sound BC1
COMMENT_LINE $C800 4 sound BDIR
COMMENT_LINE $C800 5 comparator input
COMMENT_LINE $C800 6 external device (slot pin 35) initialized to input
COMMENT_LINE $C800 7 /RAMP
COMMENT_LINE $C800 0 PA latch enable
COMMENT_LINE $C800 1 PB latch enable
COMMENT_LINE $C800 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $C800 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $C800 4 /
COMMENT_LINE $C800 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $C800 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $C800 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $C800 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $C800 1 \
COMMENT_LINE $C800 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $C800 3 /
COMMENT_LINE $C800 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $C800 5 \
COMMENT_LINE $C800 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $C800 7 /
COMMENT_LINE $C800 bit                             cleared by
COMMENT_LINE $C800 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $C800 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $C800 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $C800 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $C800 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $C800 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $C800 0 CA2 interrupt enable
COMMENT_LINE $C800 1 CA1 interrupt enable
COMMENT_LINE $C800 2 shift register interrupt enable
COMMENT_LINE $C800 3 CB2 interrupt enable
COMMENT_LINE $C800 4 CB1 interrupt enable
COMMENT_LINE $C800 5 timer 2 interrupt enable
COMMENT_LINE $C800 6 timer 1 interrupt enable
COMMENT_LINE $C800 7 IER set/clear control
COMMENT_LINE $C800 Rot_VL_dft      EQU     $F637   ;
COMMENT_LINE $C800 Rot_VL_ab       EQU     $F610   ;
COMMENT_LINE $C800 Rot_VL          EQU     $F616   ;
COMMENT_LINE $C800 Rot_VL_Mode_a   EQU     $F61F   ;
COMMENT_LINE $C800 Rot_VL_Mode     EQU     $F62B   ;
COMMENT_LINE $C800 Rot_VL_dft      EQU     $F637   ;
COMMENT $C800 vectrex macro includes
COMMENT_LINE $C800 all banks
COMMENT_LINE $C800 PC not usable :-)
COMMENT_LINE $C800 cmpx #4
COMMENT_LINE $C800 pshs d,y,x,pc,u,cc;16
COMMENT_LINE $C800 puls d,y,x,pc,u,cc; 16
COMMENT_LINE $C800 pshs y,x,pc,u,d;15
COMMENT_LINE $C800 puls y,x,pc,u,d; 15
COMMENT_LINE $C800 pshs y,x,pc,u,cc;14
COMMENT_LINE $C800 puls y,x,pc,u,cc; 14
COMMENT_LINE $C800 pshs a,x,pc,u,cc;13
COMMENT_LINE $C800 puls a,x,pc,u,cc;13
COMMENT_LINE $C800 pshs x,pc,u,cc;12
COMMENT_LINE $C800 puls x,pc,u,cc;12
COMMENT_LINE $C800 pshs pc,u,d;11
COMMENT_LINE $C800 puls pc,u,d;11
COMMENT_LINE $C800 pshs pc,u,cc;10
COMMENT_LINE $C800 puls pc,u,cc;10
COMMENT_LINE $C800 pshs u,d;9
COMMENT_LINE $C800 puls u,d;9
COMMENT_LINE $C800 pshs u,cc;8
COMMENT_LINE $C800 puls u,cc;8
COMMENT_LINE $C800 pshs u;7
COMMENT_LINE $C800 puls u;7
COMMENT_LINE $C800 pshs cc;6
COMMENT_LINE $C800 puls cc;6
COMMENT_LINE $C800 tfr a,a; 6
COMMENT_LINE $C800 brn 0; 3
COMMENT_LINE $C800 NOP ; 2
COMMENT_LINE $C800 for usigae in vectorblade
COMMENT_LINE $C800 the "massive" stack usage is forbidden -> since stack is rare and
COMMENT_LINE $C800 can overwrite data
COMMENT_LINE $C800 max 3 byte PUSH!
COMMENT $0000 wait 2 cycles
COMMENT $0000 wait 3 cycles
COMMENT $0000 wait 6 cycles
COMMENT $0000 wait 12 cycles
COMMENT $0000 wait 14 cycles
COMMENT $0000 wait 16 cycles
COMMENT $0000 wait 18 cycles
COMMENT $0000 wait 20 cycles
COMMENT $0000 wait 22 cycles
COMMENT $0000 wait 24 cycles
COMMENT $0000 wait 26 cycles
COMMENT $0000 wait 28 cycles
COMMENT_LINE $0000 nop      (SPRITE_SCALE-8)/2
COMMENT $0000 1 secpnd
COMMENT_LINE $0000 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 a = $18, b = $83 disable RAMP, muxsel=false, channel 1 (integrators offsets)
COMMENT $0000 Clear D/A output
COMMENT $0000 set mux to channel 1, leave mux disabled
COMMENT $0000 enable mux, reset integrator offset values
COMMENT_LINE $0000 nop 4
COMMENT $0000 /BLANK high and /ZERO low
COMMENT $0000 Disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 scale for placing first point
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 move to time 1 lo, this means scaling
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 recal counter, about 21 Minutes befor roll over
COMMENT $0000 Wait for timer t2
COMMENT $0000 Store refresh value
COMMENT $0000 into timer t2
COMMENT $0000 blank low and zero low
COMMENT $0000 clear shift register
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D *2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D /2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 "random" Galois LFSR
COMMENT $0000 27, 28 is different is still same
COMMENT_LINE $0000 hey dissi "pri nt a = #a"
COMMENT_LINE $0000 hey dissi "pri nt a = #a"
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 expect DP = d0
COMMENT_LINE $0000 playes one piece of music, that is given as param
COMMENT $0000 this piece of music
COMMENT $0000 NOW
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 y must be set more than xx cycles on some vectrex
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT_LINE $0000 nop
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT_LINE $0000 uses x and d
COMMENT_LINE $0000 prints the numbers in a and b at a location given
COMMENT_LINE $0000 prints in hex
COMMENT_LINE $0000 need 6 bytes RAM starting with tmp_debug
COMMENT $0000 save the numbers
COMMENT $0000 save the numbers
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT_LINE $0000 DIGITAL_JOYTICK_LOOP_MIN  EQU  $08
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT $0000 mux disabled, mux sel = 01 (vertical pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive y)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value y was pushed UP
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved up
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved down
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 beq noymove\?
COMMENT_LINE $0000 bra noxmove\? ; if y moved I assume no X move
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $C800 ***************************************************************************
COMMENT_LINE $C800 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 this whole block does the player movement according to current joystick data
COMMENT_LINE $0000 the testing whether the end of the screen is reached seems dumb - can I do that better?
COMMENT $0000 half a pixel per "move"
COMMENT $0000 half a pixel per "move"
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 this whole block does the player movement according to current joystick data
COMMENT_LINE $0000 the testing whether the end of the screen is reached seems dumb - can I do that better?
COMMENT $0000 half a pixel per "move"
COMMENT $0000 half a pixel per "move"
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0000 ;;;;;
COMMENT_LINE $0000 do the "wobbling" of enemies in waiting position
COMMENT $0000 was tst
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 reg u can be used!
COMMENT $0000 bank 1 replace
COMMENT $0000 enemyTribble
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 times 8 == 1600 points a biggy, times 5 = 8000 points max
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 following is "old shot"
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 if last time something was hit and
COMMENT_LINE $0000 the bullet is still active
COMMENT_LINE $0000 do not switch - we probably will hit again!
COMMENT $0000 was tst
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 use next shot that "fits
COMMENT $0000 was tst
COMMENT_LINE $0000 new
COMMENT_LINE $0000 new end
COMMENT $0000 was tst
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 always use testShot + 5 for testShot 2
COMMENT $0000 was tst
COMMENT_LINE $0000 new
COMMENT_LINE $0000 new end
COMMENT $0000 was tst
COMMENT_LINE $0000 veryify that testShot is not the same
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 loop count
COMMENT $0000 scale width
COMMENT $0000 go ++ to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 -CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go left
COMMENT_LINE $0000 draw
COMMENT $0000 switch to y int, enable mux
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 go +- to next step
COMMENT_LINE $0000 move
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Store Y in D/A register
COMMENT_LINE $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 +CORRECTION ; intervall add right is only half intervall add up
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store Y in D/A register
COMMENT $0000 enable timer
COMMENT $0000 draw go right
COMMENT_LINE $0000 draw
COMMENT $0000 Store Y in D/A register
COMMENT $0000 switch to y int, enable mux
COMMENT_LINE $0000 no wait since Y is 0
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 draws the fighter (anim) and all that goes with it (armor, shield or scoop)
COMMENT_LINE $0000 only one addition at any given time at once
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT $0000 dec playerBonusCounter
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT_LINE $0000 draw cleanup
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 position
COMMENT $0000 position
COMMENT $0000 start at 0
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte?
COMMENT $0000 Advance to next point in list
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 brn 0 ; max ten scale
COMMENT_LINE $0000 NOP                     ;Wait a moment more
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 *******
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 LDA      #$40                         ;B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT_LINE $0000 LF425_lg\?
COMMENT_LINE $0000 BITA     >VIA_int_flags               ;Wait for T1 to time out
COMMENT_LINE $0000 BEQ      LF425_lg\?
COMMENT $0000 Advance to next point in list
COMMENT $0000 Get next coordinate pair
COMMENT_LINE $0000 LDA      ,X                           ;Get next pattern byte
COMMENT_LINE $0000 BLE      Draw_VLp_lessGap_1\?           ;Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 tst ,x+
COMMENT $0000 faster than tst?
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 there are never to 0 after another
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT_LINE $0000 nop
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 clra
COMMENT_LINE $0000 tst ,x+
COMMENT $0000 faster than tst?
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT_LINE $0000 there are never to 0 after another
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Get next coordinate pair
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Get pattern byte
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Store pattern in shift register
COMMENT $0000 Clear T1H
COMMENT $0000 B-reg = T1 interrupt bit
COMMENT_LINE $0000 0 is ok
COMMENT $0000 Advance to next point in list
COMMENT $0000 Wait for T1 to time out
COMMENT $0000 Get next pattern byte
COMMENT $0000 Go back if high bit of pattern is set
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $C800 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 position to explosion
COMMENT $0000 * If the scale factor for the explosion
COMMENT $0000 * has not surpassed the max value, then
COMMENT $0000 max 63
COMMENT_LINE $0000 get position of dot and move there
COMMENT $0000 DRAW_VLP
COMMENT_LINE $0000 ldb EX_START_SIZE+u_offset1,u    ;
COMMENT_LINE $0000 return to center of explosion
COMMENT $0000 max 63
COMMENT_LINE $0000 complete explosion done
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 easy
COMMENT $0000 5
COMMENT $0000 6
COMMENT $0000 7
COMMENT_LINE $0000 bullet 0 - 4 = standard damage
COMMENT $0000 easy
COMMENT $0000 1
COMMENT $0000 2
COMMENT_LINE $0000 with damage adjust no negative weapon damage allowed anymore!
COMMENT_LINE $0000 (negative was damage each second round only)
COMMENT_LINE $0000 boss fight must be hard! They don't resprect extra damage!
COMMENT $0000 max non negative damage
COMMENT_LINE $0000 im warp failure non working on impossible
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 +10 new since, enemies now start at the bottom
COMMENT $0000 y wise a fixed compare is used, since y wise all shots are equal
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 one time macro
COMMENT_LINE $0000 biggies only above level 25
COMMENT_LINE $0000 bra noMoneyStealer\?
COMMENT_LINE $0000 here possibly a special BIGGY spawn
COMMENT_LINE $0000 lbne isIntroNoBug ; statistically 1/255 = every 2.5 seconds -> to many!
COMMENT $0000 statistically each about *25 = 60 seconds .. lets try that
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** CASH STEALER *****************
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 init money stealer
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** BIG FIEND ********************
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 -------
COMMENT_LINE $0000 init super alien
COMMENT_LINE $0000 -------
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 -------
COMMENT $0000 one time macro
COMMENT $0000 no saucer in the first five level
COMMENT $0000 bonusTimerLength
COMMENT_LINE $0000 timer saucer!
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** TIME OUT - SAUCER ************
COMMENT_LINE $0000 *********************************
COMMENT $0000 start at upper right (for now)
COMMENT_LINE $0000 *********************************
COMMENT_LINE $0000 ** TIME OUT - MOTHERSHIP ********
COMMENT_LINE $0000 *********************************
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 ;; saucer init done
COMMENT_LINE $0000 -------
COMMENT $0000 one time macro
COMMENT $0000 was tst
COMMENT_LINE $0000 init bug
COMMENT_LINE $0000 big bugs only appear if a reduced count of normal enemies are on screen
COMMENT_LINE $0000 each bug with (atm) 4 enemies less (actually 3 - since the bug counts too)
COMMENT $0000 allow more than 4 bugs *shudder*
COMMENT_LINE $0000 lsra
COMMENT $0000 all 8 bits
COMMENT $0000 start at upper right (for now)
COMMENT $0000 perhaps first Bug entry behaviour ("beam in")
COMMENT_LINE $0000 ;; bug init done
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 do not allow playing of any other "sfx" till this is over
COMMENT $0000 secretChannel1
COMMENT $0000 secretChannel2
COMMENT $0000 secretChannel3
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 do not allow playing of any other "sfx" till this is over
COMMENT $0000 achievementChannel1
COMMENT $0000 achievementChannel2
COMMENT $0000 achievementChannel3
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 a = 0, and stays 0
COMMENT $0000 Copy the byte
COMMENT $0000 Decrement the count
COMMENT $0000 Go back until finished
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 copy block
COMMENT $0000 jsr Move_Mem_a
COMMENT_LINE $0000 copy block end
COMMENT_LINE $0000 copy block
COMMENT $0000 jsr Move_Mem_a
COMMENT_LINE $0000 copy block end
COMMENT_LINE $0000 all "linkage" and enemy list stuff is done after warp!
COMMENT_LINE $0000 .....................................................
COMMENT $0000 and remember that we created a new object
COMMENT_LINE $0000 set the new empty head
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 head of our empty list
COMMENT_LINE $0000 load last of current object list
COMMENT_LINE $0000 the old head is always our next
COMMENT $0000 enemyPlayerControlledLeftBehaviour
COMMENT $0000 enemyPlayerControlledRightBehaviour
COMMENT $0000 enemyPlayerControlledRightBehaviour
COMMENT $0000 enemyPlayerControlledLeftBehaviour
COMMENT_LINE $0000 newobject is always head
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 ensure scoopy1 is lower scoopy 2
COMMENT $0000 jsr newEnemyObject
COMMENT $0000 this is no enemy - in the level sense!
COMMENT_LINE $0000 object struct in u
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr Move_Mem_a
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr newEnemyObject
COMMENT $0000 this is no enemy - in the level sense!
COMMENT_LINE $0000 object struct in u
COMMENT_LINE $0000 x dest
COMMENT_LINE $0000 us source
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 jsr Move_Mem_a
COMMENT $0000 the next in out empty list will be the new
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 used in COL_DETECT_ALL
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 ldd ,u
COMMENT_LINE $0000 cmpd #lazerPlayerShotBehaviour
COMMENT_LINE $0000 bne normalShot\?
COMMENT_LINE $0000 ldd #-1
COMMENT_LINE $0000 std testBase
COMMENT_LINE $0000 bra      endm\?
COMMENT_LINE $0000 normalShot\?
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 used in TEST_ALL_SHOTS
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 ldd ,u
COMMENT_LINE $0000 cmpd #lazerPlayerShotBehaviour
COMMENT_LINE $0000 bne normalShot\?
COMMENT_LINE $0000 ldd #-1
COMMENT_LINE $0000 std testBase
COMMENT_LINE $0000 bra      endm\?
COMMENT_LINE $0000 normalShot\?
COMMENT_LINE $0000 must be 1 or 5, which are "equal" in radius
COMMENT $0000 tmp 1 is current 1 radius for scoopy check
COMMENT $0000 make x 0 based 0 - 255
COMMENT $0000 tmp2_tmp is zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $0000 and take as lowest position "0"
COMMENT $0000 reload zero based shot x position
COMMENT_LINE $0000 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $0000 might be OOB
COMMENT_LINE $0000 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $0000 and take as highest position "255"
COMMENT_LINE $0000 test for center radii are done
COMMENT_LINE $0000 with scoopy unmodified x radius
COMMENT_LINE $0000 correct it!
COMMENT_LINE $0000 radii must be chose, so that
COMMENT_LINE $0000 no overflow/underflow can occur!
COMMENT $0000 reload zero based shot x position
COMMENT $0000 reload zero based shot x position
COMMENT $0000 max
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0000 definition of bank switch macros
COMMENT $0000 Prepare DDR Registers % 1101 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT $0000 Prepare DDR Registers % 1001 1111 1111 1111
COMMENT $0000 all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT $0000 A = $01, B = 0
COMMENT $0000 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT $0000 interrupt DISABLED - clear ALL interrupts to ensure other bank
COMMENT $0000 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
COMMENT_LINE $0000 ensure shift is "normal"
COMMENT $0000 0 = shift,
COMMENT $0000 interrupt ENABLED
COMMENT_LINE $0000 todo
COMMENT_LINE $0000 ensure T1 setup correctly
COMMENT_LINE $0000 - it usually is
COMMENT $0000 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
COMMENT_LINE $0000 and now "trigger a interrupt
COMMENT $0000 a VERY short T1 timer
COMMENT $0000 start timer
COMMENT $0000 Peer Test
COMMENT_LINE $0000 by the time, the macros "leaves" the interrupt is set!
COMMENT $0000 interrupt ENABLED
COMMENT $0000 ensure that shift can generate interrupt
COMMENT_LINE $0000 for some reason or another, VIA doesn't like a
COMMENT_LINE $0000 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0000 (only on a real vectrex, not Vide)
COMMENT $0000 and write 0 to shift (a) and $98 to aux (shift out enable)
COMMENT $0000 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
COMMENT_LINE $0000 wait 20 cycles till store of aux (these are 23)
COMMENT $0000 12
COMMENT $0000 3
COMMENT_LINE $0000 nop      10
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 ********************** STRUCTRUES *********************************
COMMENT_LINE $0000 *******************************************************************
COMMENT_LINE $0000 10 bytes
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 flash length when hit (might be bits) 3 bits max
COMMENT_LINE $C801 SWARM_ALL_PURPOSE
COMMENT_LINE $C801 high bits have movemnt info
COMMENT_LINE $C801 vvhh xfff
COMMENT_LINE $C801 f = flash counter
COMMENT_LINE $C801 vertical
COMMENT_LINE $C801 v0 0 = no vertical movement
COMMENT_LINE $C801 11 = up
COMMENT_LINE $C801 01 = down
COMMENT_LINE $C801 00 = not used
COMMENT_LINE $C801 horizontal
COMMENT_LINE $C801 h0 0 = no horzontal movement
COMMENT_LINE $C801 11 = left
COMMENT_LINE $C801 01 = right
COMMENT_LINE $C801 00 = not used
COMMENT_LINE $C801 SWARM_MOVEMENT_INFO = -1 go to startpos
COMMENT_LINE $C801 sxxx cccc = counter till movement changes
COMMENT_LINE $C801 s = 1 -> start -> move to startposition
COMMENT_LINE $C801 x = not used
COMMENT_LINE $C800 10 bytes
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 SWARM_ALL_PURPOSE,1 ; #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 11 bytes - "like" swarm
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 flash length when hit (might be bits) 3 bits max
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 21 byte
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 D current position for calculation only
COMMENT $C800 if attack pattern is absolut - than here go the target coordinates
COMMENT $C800 is 2 bytes, but shares second byte with ANIM count
COMMENT $C800 in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
COMMENT $C800 current position in animation table of vectorlists
COMMENT $C800 lower nibble when attack pattern
COMMENT $C800 where in the current pattern are we?
COMMENT_LINE $C801 uper nibble, when attack pattern
COMMENT_LINE $C801 which pattern "trail" to follow
COMMENT $C800 UID of curretn enemies -> defines position in waiting state
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT_LINE $C801 speed of falling debris
COMMENT $C800 hit points = upper 5 bits
COMMENT $C800 all 8 bits
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 #noDoubleWarn
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT $C800 #noDoubleWarn
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 D current position for calculation only
COMMENT $C800 #
COMMENT $C800 count down to next animation sequence
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT $C800 D current position ; BUG TARGET POS
COMMENT $C800 D ; BUG TARGET POS
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 D current position for calculation only , Y is pos, y low is addy
COMMENT $C800 1 byte ; D current position for calculation only
COMMENT $C800 1 byte ; D current position for calculation only
COMMENT $C800 is 2 bytes, but shares second byte with ANIM count
COMMENT $C800 in absolut movement the lower 3 bits are speed and angle is 0-7 instead 0-14
COMMENT $C800 where in the current pattern are we?
COMMENT_LINE $C801 uper nibble, when attack pattern
COMMENT_LINE $C801 which pattern "trail" to follow
COMMENT $C800 UID of curretn enemies -> defines position in waiting state
COMMENT $C800 delay, negative -> explosion, positive countdown for enemy Hit Brightness (<= HIT_FLASH_LENGTH only)
COMMENT_LINE $C801 speed of falling debris
COMMENT $C800 shot delay = lower 3 bits
COMMENT $C800 this can be reduced to one byte!
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 only missile and "normal"
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 #noDoubleWarn
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT $C800 low 6 bit - anim, hi 2 bit speed
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 13 for 4 stars
COMMENT $C800 D current position
COMMENT $C800 D
COMMENT $C800 PC
COMMENT $C800 positive = end of list
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 10 bytes
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
COMMENT $C800 D current position
COMMENT $C800 PC
COMMENT $C800 alternating 0 and != 0, left or right slope starting
COMMENT $C800 upper nibble left, lower nibble right , bit 0+1: 001 1 SHOT, 010 2 SHOT, 011 3 SHOT, 100 4 SHOT
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 or in case of direct appearence the number of enemies!
COMMENT $C800 or in case of direct appearence the number of enemies!
COMMENT $C800 pointer to attack pattern list - pointer to 4 pointers to attack patterns
COMMENT $C800 high nibble max shots, low nibble max attack patterns
COMMENT_LINE $C801 ds       LEVEL_MAX_SHOTS_IN_AIR, 1
COMMENT_LINE $C801 ds       LEVEL_MAX_ATTACK_PATTERNS, 1
COMMENT $C800 how probable is it that enemies shoots
COMMENT $C800 how probable is it that bonus drops
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 when flight pattern definition
COMMENT_LINE $C800 how enemies enter the level
COMMENT_LINE $C800 calcs are done in an Excel sheet
COMMENT $C800 depending on speed
COMMENT $C800 this is now SPEED offset for compare!
COMMENT_LINE $C800 arbitraty number of PatternLine, end with both y and xadder = 0
COMMENT $C800 when pointer = 0, than end of list
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT $C800 if zero -> BigBug
COMMENT $C800 see above
COMMENT $C800 bug only (for now), lower nibble speed, uppernibble
COMMENT_LINE $C801 #mt3n, m= 1 can fire missiles, t = 1 can fire target shots, 3 = 1 can fire tripples
COMMENT_LINE $C801 if m = 1 than always missile
COMMENT_LINE $C801 if 3 = 1 than always tripple (if not missile)
COMMENT_LINE $C801 t else
COMMENT_LINE $C801 if debris - than ALSO speed of falling debris
COMMENT $C800 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT_LINE $C800 ;;;;
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 ****************************************************************************************************
COMMENT_LINE $C800 RAM that is "always" the same
COMMENT_LINE $C800 CBFC as TOP Stack is as yet unused RAM!
COMMENT_LINE $C800 still possible RAM savings!
COMMENT_LINE $C800 flashAvailable     only 1 bit needed!
COMMENT_LINE $C800 I don't really want to touch those:
COMMENT_LINE $C800 tacScan             ds       1 ; only two values +1/-1
COMMENT_LINE $C800 difficulty          ds       1 ; really only the lowest 4 bits
COMMENT_LINE $C800 SAVE2_ENEMY_ADDRESS = cbc0
COMMENT_LINE $C800 SAVE1_ENEMY_ADDRESS = cbd5
COMMENT $C80F speed of bugshot, and "flag" if bugshot
COMMENT $C811 only used in shop
COMMENT_LINE $C814 GAMEPHASE_INTRO     =        0                            ; level attack wave phase
COMMENT_LINE $C814 GAMEPHASE_INGAME    =        1                            ; in game phase (not attack waves)
COMMENT_LINE $C814 game_phase          ds       1
COMMENT $C815 offset of enemies in "waiting" position -16 - + 16
COMMENT $C816 direction of wobble movemnt positive = add, negative = sub
COMMENT $C81A BIT FLAG only one attack pattern initiated per round
COMMENT_LINE $C81B Vec Joys should not be moved
COMMENT_LINE $C81B lastJoyMove         ds       0
COMMENT $C81B EQU $C81B ;Joystick 1 left/right; #noDoubleWarn
COMMENT $C81C EQU $C81C ;Joystick 1 up/down; #noDoubleWarn
COMMENT $C81D sfx player used
COMMENT $C81F sfx player used
COMMENT $C821 how much time is left in level
COMMENT $C822 only two values +1/-1
COMMENT_LINE $C825 0 bytes left! next is Vec_Loop_Count -> which I use
COMMENT $C825 $c825 / $c826 Vec_Loop_Count
COMMENT $C827 for the current intro pattern the # of spawned, enemies, ; VecBightness
COMMENT $C828 Vec_Dot_Dwell, Vec_Pattern
COMMENT_LINE $C82A after that some "String stuff" I use wihtin print sync String
COMMENT_LINE $C82A ;;;;;;;;;;
COMMENT $C82A Vec_Counters ; $c82e 17 byte
COMMENT_LINE $C830 following 5 definitions are the jmp (on stack) addresses back to the main game loop
COMMENT_LINE $C830 from the 5 different linked lists
COMMENT_LINE $C830 these can be = in RAM, since lists can be reused in different game sections
COMMENT $C838 #handle_after
COMMENT_LINE $C83A reuse!
COMMENT $C83A compare value to above 5 addresses - these must be greater than above addreses,
COMMENT_LINE $C83A compare is used to decide whether list is empty or not
COMMENT $C83A BIT FLAG when an enemy is hit by bullet - but not destroyed - the enemy "flashes", this indicates a current flash (reset by next normal colored enemy)
COMMENT $C83B is allways negated value -> easier/faster compare!
COMMENT $C83C during level intro - each "permanent" enemy receives a UID, this is the counter for that
COMMENT $C83D $C83d / $C83e when using Wait Recal -> than this is Vec_Rfrsh -> not to be overwritten!
COMMENT_LINE $C83F than follows the Vec_Music double buffer
COMMENT_LINE $C83F I use that also to optimize PSG writing
COMMENT_LINE $C83F ;;;;;;;;;;
COMMENT $C84D 1 = allow, 0, = no allow
COMMENT $C84D delay countdown between appearance of enemies in current intro pattern
COMMENT_LINE $C84E IntroPattern->P_DELAY_BETWEEN_ENEMIES
COMMENT $C84E UID counter for each enemy per level, used only during intro to position each spawned enemy
COMMENT $C84F pointer to current active intro pattern
COMMENT $C851 number of current pattern in level structure (from 0 terminated list)
COMMENT $C852 right
COMMENT $C854 state of joystick button only bit 0 for current and bit 1 for last, ANY button
COMMENT $C855 for convenience - a copy of above for the last gameround
COMMENT $C858 7 digit score
COMMENT_LINE $C864 still only one Fighter direct bonus active at any one given time
COMMENT_LINE $C864 newer bonus trumps older bonus
COMMENT $C864 bitfield for SHIELD, SUCKER ...
COMMENT_LINE $C865 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C865 ;;; Game vars
COMMENT_LINE $C865 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $C865 messenger
COMMENT $C867 count down value to when the next intro pattern starts (value defined in pattern)
COMMENT $C868 left
COMMENT $C86A if zero, than no bugs, otherwise count of bugs yet to spawn
COMMENT $C86C the current "letter" bonus are remembered here per "bit"
COMMENT $C86D one enemy is allowed to shoot per round, the one and only allowed shots start coordinates (0 - no shot)
COMMENT $C86F sfx player used
COMMENT $C871 statistics
COMMENT $C875 16 bit current x position of player - hi byte is used to position
COMMENT $C877 16 bit left/right speed of player 255 = 1 "pixel"
COMMENT $C879 maximum number of shots player is currently allowed to have in the air
COMMENT $C87A current number of bullets per shot (1-4)
COMMENT $C87B speed of shots fired by player (16 bit)
COMMENT $C87E Vec_Music_Flag - used in pasue! ; used in objectEnemy for sign checks of coordinates
COMMENT_LINE $C87F used as size in level intro display!; used as scale and counter...
COMMENT_LINE $C87F ;;;;;;;
COMMENT_LINE $C880 0 bytes left?
COMMENT_LINE $C880 ;;;;;;;;;;
COMMENT_LINE $C880 this is $c880                    ORG      $c880                        ; start of our ram space
COMMENT $C880 each round = to 0, when an enemy is hit during round this is "inc"ed. And a sound played in next round
COMMENT_LINE $C881 all kinds of object list, partly reused
COMMENT $C881 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C883 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C886 Four different "stack" linked lists for Objects
COMMENT_LINE $C886 1) all enemies (and explosions)
COMMENT $C886 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C888 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C88B reuse
COMMENT_LINE $C88B 2) all Player shots
COMMENT $C88B if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C88D if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C890 3) all Enemy shots
COMMENT $C890 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C892 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C895 4) all Bonus "things"
COMMENT $C895 if empty these contain a value that points to a RTS, smaller than OBJECT_LIST_COMPARE_ADDRESS
COMMENT $C897 if greater OBJECT_LIST_COMPARE_ADDRESS, than this is a pointer to a RAM location of an Object
COMMENT_LINE $C89A ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C89A following two can be used in game
COMMENT_LINE $C89A before usage they must be reinit however!
COMMENT $C89A only used in desktop/title ; also stores on easy the destroyed warp enemy count
COMMENT $C89A indicates this is the first batch of start to be displayed -> does in move macro stuff
COMMENT $C89C bit: 1 yes, 0 no
COMMENT_LINE $C89D use this as bitfiled for sound (and other things)
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ################################################################################
COMMENT_LINE $C89E ********************************************************************
COMMENT_LINE $C89E save to eEprom Starts here!
COMMENT_LINE $C89E one "direct" copy of current OptionStruct from flash
COMMENT $C89E swarm
COMMENT $C89F Calibration ZeroRef value (Kristof Tuts) stored here
COMMENT $C8A0 major havoc
COMMENT $C8A1 text -> STRING_SCALE
COMMENT $C8A2 boss
COMMENT $C8A4 can be calculated from achievements and in game secrets!
COMMENT_LINE $C8A5 saved bits
COMMENT_LINE $C8A5 lowest 4 bits are saved
COMMENT_LINE $C8A5 highest 4 bits are erased with load
COMMENT_LINE $C8A5 variable bits (only used per game - not saved)
COMMENT $C8A5 %00000001 = 1 No Buzz, 0 = buzz
COMMENT $C8A6 40 bitflags
COMMENT $C8AD saved - but not shown (yet?)
COMMENT_LINE $C8AE is BITSAVE
COMMENT_LINE $C8AE MMMM MMII
COMMENT_LINE $C8AE II = 1 imunity to 1 shot, = 2 imunity to 1 and 2 shot
COMMENT_LINE $C8AE M = Multiplyer bits, max 63
COMMENT $C8AE current multiply factor (1 = default)
COMMENT $C8AE only 1 or 2 can also be calculated
COMMENT $C8AF located in old HS block
COMMENT $C8B1 OptionStruct
COMMENT $C8B1 or more
COMMENT $C8B1 or more
COMMENT $C8B1 bug behaviour internal ; end of game word
COMMENT $C8B1 attation before dumping -> resued below
COMMENT $C8B7 the current "letter" bonus are remembered here per "bit" for DISPLAY
COMMENT_LINE $C8B8 MUST not be reused!
COMMENT_LINE $C8B8 ;;
COMMENT $C8BC countdown each 2 round, thus 255 about 10s
COMMENT $C8C0 needed between start of enemy objects and laser test
COMMENT $C8C1 really only temporary not accross round
COMMENT $C8C2 really only temporary not accross round, used by boss2 to indicate boss hit in shot tests
COMMENT $C8C3 really only temporary not accross round ; 3 is "INNER" of 1 and 2
COMMENT $C8C4 really only temporary not accross round
COMMENT_LINE $C8C6 per game round only two of the player shots are tested
COMMENT_LINE $C8C6 agains the enemies
COMMENT_LINE $C8C6 the current to be tested shot is pointer stored in "testShot"
COMMENT $C8D4 ATTENTION!!!
COMMENT $C8D4 bossfight stores DS (bank 0), while player shots are displayed
COMMENT $C8D4 used while printing string with vectors
COMMENT $C8D6 only used during intro patterns
COMMENT_LINE $C8D8 9 bytes of RAM for the damned restricted laser
COMMENT $C8E1 really only the lowest 4 bits , highest bit hardcore = 1, not hardcore = 0
COMMENT $C8E4 damage one bullet does, if negative than only damage in even rounds (laser) (not supported any longer!)
COMMENT $C8E5 same as above, shifted to upper 5 bits for fast usage
COMMENT $C8E6 same as above, doubled and shifted
COMMENT $C8E7 time a bonus lasts
COMMENT $C8E9 pointer to current level structure
COMMENT $C8EB timer for score multiplyer
COMMENT_LINE $C8ED enemyDestructed     ds       1                            ;
COMMENT_LINE $C8ED lock handling is BITSAVE
COMMENT_LINE $C8ED not GAMEPHASE_INTRO     ; in game phase (not attack waves)
COMMENT $C8ED lower nibble is lock count, upper nibble is IDSW -
COMMENT_LINE $C8EE I - if set than INTRO phase of game!
COMMENT_LINE $C8EE D - enemyDestructed -a flag, indicates, that there are NO live enemies (boss/warp)
COMMENT_LINE $C8EE W = 1 keep scoopies in warp,
COMMENT_LINE $C8EE W = 0 lose scoopies in Warp,
COMMENT_LINE $C8EE S = 0 scoopies can be killed,
COMMENT_LINE $C8EE S = 1 scoopies are shielded,
COMMENT $C8F1 xpos
COMMENT $C8F4 0-3 ; negative hs stars
COMMENT_LINE $C8F6 hidden Secret 3 Scoops!
COMMENT $C8F7 doublings
COMMENT $C8F8 ERD0rrbb
COMMENT_LINE $C8F9 rr rate counter "overall",
COMMENT_LINE $C8F9 bb counter of consecutive same bonus
COMMENT_LINE $C8F9 E=1 extra still in order,
COMMENT_LINE $C8F9 R=1 rank still in order
COMMENT_LINE $C8F9 D=1 drunken master
COMMENT $C8FE 1 for continues save ; #noDoubleWarn
COMMENT_LINE $C8FE RAM for "in game"
COMMENT_LINE $C8FE ***************************************************************************
COMMENT_LINE $C8FE Variable / RAM SECTION
COMMENT_LINE $C8FE ***************************************************************************
COMMENT_LINE $C8FE insert your variables (RAM usage) in the BSS section
COMMENT_LINE $C8FE user RAM starts at $c880
COMMENT_LINE $C8FE ;;;;;;;;;
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE ;;; Game vars
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE followed by the storage area for abve defined lists
COMMENT_LINE $C8FE less shots with NMI to
COMMENT_LINE $C8FE prevent stack overflow!
COMMENT_LINE $C976 only to identify objects in RAM
COMMENT_LINE $C9A6 only to identify objects in RAM
COMMENT_LINE $C9E7 only to identify objects in RAM
COMMENT_LINE $CB8B only to identify objects in RAM
COMMENT_LINE $CBEF only to identify objects in RAM
COMMENT_LINE $CBEF reuse
COMMENT_LINE $CBEF must be smaller than  playershotobject_list_end  - (EnemyStruct*2)
COMMENT_LINE $CBEF game over candle
COMMENT_LINE $CBEF -----
COMMENT_LINE $CBEF here after comes directly the STACK
COMMENT_LINE $CBEF on occasion stack overwrite the last player shot,
COMMENT_LINE $CBEF but SUPPOSEDLY only when no player shots are active.
COMMENT_LINE $CBEF Known:
COMMENT_LINE $CBEF - Achievement display
COMMENT_LINE $CBEF - VecVox on level intro display
COMMENT_LINE $CBEF - playing music pieces (e.g. intro to boss)
COMMENT_LINE $CBEF - boss kills player (shots are not drawn anymore)
COMMENT_LINE $CBEF RAM used in title screen
COMMENT_LINE $C83F simple redefines for source compatability
COMMENT_LINE $C8FE ;;;;;;;;;
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C8FE ;;; Game vars
COMMENT_LINE $C8FE ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C906 followed by the storage area for abve defined lists
COMMENT_LINE $C9D8 space where VecFever functions can be executed
COMMENT_LINE $C9D8 this can be moved on RAM shortage to "object" definition space
COMMENT_LINE $C9D8 no RAM function should be necessary while in game
COMMENT_LINE $C9D8 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9D8 ;;; Arkos vars
COMMENT_LINE $C9D8 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9D8 if no in game music -> this can be moved on RAM shortage to "object" definition space
COMMENT_LINE $C9D8 start of some RAM Vars for Arkos Tracker
COMMENT_LINE $C9D8 below RAM usuage is 74 byte (without psh shadow/work registers, which are = to
COMMENT_LINE $C9D8 vectrex default RAM locations)
COMMENT $C9D8 $c9d9
COMMENT_LINE $C9DC following are player vars which are channel independend
COMMENT $C9DC height of pattern
COMMENT $C9DD speed of pattern
COMMENT $C9DE current speed position (count down to 0)
COMMENT $C9DF current height position (count down to 0)
COMMENT $C9E0 address of instrument table
COMMENT $C9E2 current linker position
COMMENT $C9E4 retrigger "flag" - if same as PLY_PSGREG13, than not retriggered, otherewise - yes
COMMENT $C9E5 start position of current special track
COMMENT $C9E7 current position in special track
COMMENT $C9E9 wait counter for special track (count down to 0)
COMMENT_LINE $C9EA in general in below player, y reg points to the start of
COMMENT_LINE $C9EA following structure (one for each channel)
COMMENT $CA1D special - this is used for retrigger activities
COMMENT $CA1E these two are used to stay "channel" independend
COMMENT $CA20 they are loaded befor the "work" routines with the corresponding regs of the current channel
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 VBTitle
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 ********************************************************************
COMMENT_LINE $CA23 Defines
COMMENT $CA23 pointer to the actual MAP tile in the map (the Macro)
COMMENT_LINE $CA2B top and bottom
COMMENT_LINE $CA2B since the sprite is taller than one tile high
COMMENT_LINE $CA2B we take a top and bottom tile collision
COMMENT_LINE $CA2B if both are clean - than no collision
COMMENT_LINE $CA2B if one is "not clean" than collision
COMMENT_LINE $CA3C last_joy_y          ds       1                            ; and Y, for checking, we don't want an autorun feature...
COMMENT_LINE $CA3C last_joy_x          ds       1                            ; last joystick position X,
COMMENT $CA3C position in level, that is the upper left corner
COMMENT $CA3D position in level, that is the upper left corner
COMMENT $CA3F fine "pixel" for scrolling
COMMENT $CA40 size depends on tile map definition
COMMENT $CA47 position where the next tile is printed at
COMMENT_LINE $CA4A tiles collected are stored with the x position
COMMENT_LINE $CA4A that means all collectable tiles must have a
COMMENT_LINE $CA4A different X position!
COMMENT_LINE $CA4E tmp_debug           ds       6
COMMENT_LINE $CA52 at max 8 different animation counters!
COMMENT_LINE $CA5B lookaHead buffers
COMMENT $CA5B position where the next tile is printed at, used by look ahead
COMMENT_LINE $CA5E clipping
COMMENT_LINE $CA60 tmp1 ds 2
COMMENT $CA66 "round" counter of scroll text -> if 1 (or higher) the scrolltext has been fully shown
COMMENT $CA7D maximum 20 vectors to clip - also used as buffer
COMMENT $CAD7 maximum 20 vectors to clip - also used as buffer
COMMENT $CB31 maximum 20 vectors to clip - also used as buffer
COMMENT $CB8D about $cbc2
COMMENT_LINE $CB8D the following values determine the "strength" of the
COMMENT_LINE $CB8D maximum move for the grid to be build
COMMENT_LINE $CB8D the size of the grid should always be chosen with maximum strength and manipulated via scale
COMMENT_LINE $CB8D max strength in anything is ALWAYS preferable to larger scale!
COMMENT_LINE $CB8D determines the number of tiles on screen
COMMENT_LINE $CB8D size of tiles in "pixel", size here means in relation to position in grid
COMMENT_LINE $CB8D a "pixel" is a 1 step move in the "SCALE_MOVE" scale
COMMENT_LINE $CB8D the "hardware" size of a tile is determinded by the scale "SCALE_VLIST", which should be much much smaller than
COMMENT_LINE $CB8D the move scale.
COMMENT_LINE $CB8D The relation between the two is experimentally determined!
COMMENT_LINE $CB8D e.g. 254 / 12 = 21 => tile width in scales
COMMENT_LINE $CB8D these are the values added by a single tile to the position
COMMENT_LINE $CB8D exact should be whats commented out
COMMENT_LINE $CB8D 16 for easier calc
COMMENT_LINE $CB8D start pos of draw is uper left corner
COMMENT_LINE $CB8D in cartesian minX, maxY
COMMENT_LINE $CB8D only 5 rows displayed!
COMMENT_LINE $CB8D END_POS_VERTICAL = START_POS_VERTICAL - (FULL_TILES_VERTICAL*TILE_HEIGHT)
COMMENT_LINE $CB8D following not done!
COMMENT $CB95 %0000UDLR
COMMENT $CB96 %0000UDLR
COMMENT_LINE $CB98 is when no more vars are added, and max 30 vectors in tile clipping zone!
COMMENT_LINE $CB98 THIS MUST END BEFORE SCOOPY SAVE POSITION!
COMMENT_LINE $CB98 --------------------------------------------------------------------------------
COMMENT_LINE $CB98 object structures and vars for tile mobs
COMMENT_LINE $CB98 reuses RAM
COMMENT $C906 PC
COMMENT $C906 positive = end of list
COMMENT_LINE $C992 --------------------------------------------------------------------------------
COMMENT_LINE $C992 RAM highscore
COMMENT $CA7D 8*4 = 32 byte
COMMENT $CA9D 8*4 = 32 byte
COMMENT $CABD 2 only when displaying hs
COMMENT_LINE $CB21 RAM used in dodger
COMMENT_LINE $C9CD ***************************************************************************
COMMENT_LINE $C9CD Variable / RAM SECTION
COMMENT_LINE $C9CD ***************************************************************************
COMMENT_LINE $C9CD insert your variables (RAM usage) in the BSS section
COMMENT_LINE $C9CD user RAM starts at $c880
COMMENT_LINE $C9CD ;;;;;;;;;
COMMENT_LINE $C9CD ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9CD ;;; Game vars
COMMENT_LINE $C9CD ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C9CD followed by the storage area for abve defined lists
COMMENT $CB26 word 3 byte! x = word
COMMENT $CB26 word
COMMENT $CB26 word
COMMENT_LINE $CB9D RAM used in boss fights
COMMENT_LINE $CB63 23 byte following
COMMENT_LINE $CB6C BOSS 1
COMMENT_LINE $CB7A BOSS 2
COMMENT $CB71 1 = grow; 0 = shrink
COMMENT $CB72 1 = grow; 0 = shrink
COMMENT_LINE $CB73 BOSS 3
COMMENT_LINE $CB5F four to much!
COMMENT_LINE $CB63 BOSS 4
COMMENT_LINE $CAC5 org bossfightStart -4- BOSS4_LASER_COUNT*(Boss4LaserBeam+Boss4GroundExplosion)
COMMENT_LINE $CAE2 ***************************************************************************
COMMENT_LINE $CAE2 HEADER SECTION
COMMENT_LINE $CAE2 ***************************************************************************
COMMENT_LINE $CAE2 The cartridge ROM starts at address 0
COMMENT_LINE $0000 for dissi compatability I leave the header in for now!
COMMENT_LINE $0000 the first few bytes are mandatory, otherwise the BIOS will not load
COMMENT_LINE $0000 the ROM file, and will start MineStorm instead
COMMENT $0000 'g' is copyright sign
COMMENT $000B music from the rom
COMMENT $000D hight, width, rel y, rel x (from 0,0)
COMMENT $0011 some game information, ending with $80
COMMENT $001D hight, width, rel y, rel x (from 0,0)
COMMENT $0021 some game information
COMMENT_LINE $002E if  VECFEVER = 1
COMMENT_LINE $002E DB       $F8, $50, -$00, -$50           ; hight, width, rel y, rel x (from 0,0)
COMMENT_LINE $002E DB       "GOLD 5 (VF)", $80            ; some game information, ending with $80
COMMENT_LINE $002E else
COMMENT_LINE $002E DB       $F8, $50, -$00, -$30           ; hight, width, rel y, rel x (from 0,0)
COMMENT_LINE $002E DB       "GOLD 5", $80                 ; some game information, ending with $80
COMMENT_LINE $002E endif
COMMENT $002E end of game header
COMMENT_LINE $002F ***************************************************************************
COMMENT_LINE $002F CODE SECTION
COMMENT_LINE $002F ***************************************************************************
FORCE_SYMBOL $002F main
COMMENT_LINE $0032 .....................................................
COMMENT_LINE $0032 todo
COMMENT_LINE $0032 ensure T1 setup correctly
COMMENT_LINE $0032 - it usually is
COMMENT $0032 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0032
FORCE_SYMBOL $0034 VIA_int_enable
COMMENT_LINE $0036 and now "trigger a interrupt
COMMENT $0036 a VERY short T1 timer
FORCE_NO_SYMBOL $0036
FORCE_SYMBOL $0038 VIA_t1_cnt_lo
COMMENT $003B start timer
FORCE_SYMBOL $003B VIA_t1_cnt_hi
COMMENT $003D Peer Test
COMMENT_LINE $003F by the time, the macros "leaves" the interrupt is set!
COMMENT $003F Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $003F
COMMENT $0041 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0041 VIA_DDR_b
COMMENT $0043 A = $01, B = 0
FORCE_NO_SYMBOL $0043
COMMENT $0045 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0045 VIA_port_b
FORCE_NO_SYMBOL $0047
COMMENT_LINE $0049 PB6 1
COMMENT_LINE $0049 todo
COMMENT_LINE $0049 ensure T1 setup correctly
COMMENT_LINE $0049 - it usually is
COMMENT $0049 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0049
FORCE_SYMBOL $004B VIA_int_enable
COMMENT_LINE $004D and now "trigger a interrupt
COMMENT $004D a VERY short T1 timer
FORCE_NO_SYMBOL $004D
FORCE_SYMBOL $004F VIA_t1_cnt_lo
COMMENT $0052 start timer
FORCE_SYMBOL $0052 VIA_t1_cnt_hi
COMMENT $0054 Peer Test
COMMENT_LINE $0056 by the time, the macros "leaves" the interrupt is set!
COMMENT $0056 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0056
COMMENT $0058 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0058 VIA_DDR_b
COMMENT $005A A = $01, B = 0
FORCE_NO_SYMBOL $005A
COMMENT $005C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $005C VIA_port_b
FORCE_NO_SYMBOL $005E
COMMENT $0060 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0060
COMMENT $0062 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0062 VIA_DDR_b
COMMENT $0064 A = $01, B = 0
FORCE_NO_SYMBOL $0064
COMMENT $0066 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0066 VIA_port_b
COMMENT $0068 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0068
FORCE_SYMBOL $006A VIA_int_enable
COMMENT_LINE $006C ensure shift is "normal"
COMMENT $006C 0 = shift,
FORCE_NO_SYMBOL $006C
FORCE_SYMBOL $006E VIA_aux_cntl
FORCE_SYMBOL $0070 gameScale
FORCE_SYMBOL $0073 VIA_t1_cnt_lo
COMMENT_LINE $0076 todo
COMMENT_LINE $0076 ensure T1 setup correctly
COMMENT_LINE $0076 - it usually is
COMMENT $0076 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0076
FORCE_SYMBOL $0078 VIA_int_enable
COMMENT_LINE $007A and now "trigger a interrupt
COMMENT $007A a VERY short T1 timer
FORCE_NO_SYMBOL $007A
FORCE_SYMBOL $007C VIA_t1_cnt_lo
COMMENT $007F start timer
FORCE_SYMBOL $007F VIA_t1_cnt_hi
COMMENT $0081 Peer Test
COMMENT_LINE $0083 by the time, the macros "leaves" the interrupt is set!
COMMENT $0083 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0083
COMMENT $0085 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0085 VIA_DDR_b
COMMENT $0087 A = $01, B = 0
FORCE_NO_SYMBOL $0087
COMMENT $0089 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0089 VIA_port_b
FORCE_NO_SYMBOL $008B
COMMENT $008D Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $008D
COMMENT $008F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $008F VIA_DDR_b
COMMENT $0091 A = $01, B = 0
FORCE_NO_SYMBOL $0091
COMMENT $0093 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0093 VIA_port_b
COMMENT $0095 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0095
FORCE_SYMBOL $0097 VIA_int_enable
COMMENT_LINE $0099 ensure shift is "normal"
COMMENT $0099 0 = shift,
FORCE_NO_SYMBOL $0099
FORCE_SYMBOL $009B VIA_aux_cntl
COMMENT $009E ensure that shift can generate interrupt
FORCE_NO_SYMBOL $009E
COMMENT_LINE $00A1 for some reason or another, VIA doesn't like a
COMMENT_LINE $00A1 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00A1 (only on a real vectrex, not Vide)
FORCE_SYMBOL $00A1 VIA_aux_cntl
COMMENT $00A3 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00A3 VIA_shift_reg
COMMENT $00A5 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00A5
FORCE_SYMBOL $00A7 VIA_int_enable
COMMENT_LINE $00A9 wait 20 cycles till store of aux (these are 23)
COMMENT $00A9 12
COMMENT $00AA 3
FORCE_NO_SYMBOL $00AA
COMMENT_LINE $00AC nop      10
FORCE_SYMBOL $00AC VIA_aux_cntl
COMMENT $00AE Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00AE
COMMENT $00B0 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00B0 VIA_DDR_b
COMMENT $00B2 A = $01, B = 0
FORCE_NO_SYMBOL $00B2
COMMENT $00B4 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00B4 VIA_port_b
FORCE_NO_SYMBOL $00B6
COMMENT $00B8 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $00B8
COMMENT $00BA all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00BA VIA_DDR_b
COMMENT $00BC A = $01, B = 0
FORCE_NO_SYMBOL $00BC
COMMENT $00BE ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $00BE VIA_port_b
COMMENT $00C0 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C0
FORCE_SYMBOL $00C2 VIA_int_enable
COMMENT_LINE $00C4 ensure shift is "normal"
COMMENT $00C4 0 = shift,
FORCE_NO_SYMBOL $00C4
FORCE_SYMBOL $00C6 VIA_aux_cntl
COMMENT_LINE $00C9 PB6 stays
COMMENT_LINE $00C9 todo
COMMENT_LINE $00C9 ensure T1 setup correctly
COMMENT_LINE $00C9 - it usually is
COMMENT $00C9 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00C9
FORCE_SYMBOL $00CB VIA_int_enable
COMMENT_LINE $00CD and now "trigger a interrupt
COMMENT $00CD a VERY short T1 timer
FORCE_NO_SYMBOL $00CD
FORCE_SYMBOL $00CF VIA_t1_cnt_lo
COMMENT $00D2 start timer
FORCE_SYMBOL $00D2 VIA_t1_cnt_hi
COMMENT $00D4 Peer Test
COMMENT_LINE $00D6 by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $00D6
COMMENT $00D8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00D8
FORCE_SYMBOL $00DA VIA_int_enable
COMMENT_LINE $00DC ensure shift is "normal"
COMMENT $00DC 0 = shift,
FORCE_NO_SYMBOL $00DC
FORCE_SYMBOL $00DE VIA_aux_cntl
COMMENT_LINE $00E1 PB6 stays
COMMENT $00E1 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $00E1
COMMENT_LINE $00E4 for some reason or another, VIA doesn't like a
COMMENT_LINE $00E4 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $00E4 (only on a real vectrex, not Vide)
FORCE_SYMBOL $00E4 VIA_aux_cntl
COMMENT $00E6 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $00E6 VIA_shift_reg
COMMENT $00E8 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $00E8
FORCE_SYMBOL $00EA VIA_int_enable
COMMENT_LINE $00EC wait 20 cycles till store of aux (these are 23)
COMMENT $00EC 12
COMMENT $00ED 3
FORCE_NO_SYMBOL $00ED
COMMENT_LINE $00EF nop      10
FORCE_SYMBOL $00EF VIA_aux_cntl
FORCE_NO_SYMBOL $00F1
COMMENT $00F3 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $00F3
FORCE_SYMBOL $00F5 VIA_int_enable
COMMENT_LINE $00F7 ensure shift is "normal"
COMMENT $00F7 0 = shift,
FORCE_NO_SYMBOL $00F7
FORCE_SYMBOL $00F9 VIA_aux_cntl
COMMENT_LINE $00FC for now only changes IRQ and y reg
COMMENT_LINE $00FC ...........
COMMENT $00FC Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $00FC
COMMENT $00FE all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $00FE VIA_DDR_b
COMMENT $0100 A = $01, B = 0
FORCE_NO_SYMBOL $0100
COMMENT $0102 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0102 VIA_port_b
COMMENT_LINE $0106 ...........
COMMENT $0106 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0106
COMMENT $0108 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0108 VIA_DDR_b
COMMENT $010A A = $01, B = 0
FORCE_NO_SYMBOL $010A
COMMENT $010C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $010C VIA_port_b
COMMENT $010E ensure that shift can generate interrupt
FORCE_NO_SYMBOL $010E
COMMENT_LINE $0111 for some reason or another, VIA doesn't like a
COMMENT_LINE $0111 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0111 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0111 VIA_aux_cntl
COMMENT $0113 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0113 VIA_shift_reg
COMMENT $0115 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0115
FORCE_SYMBOL $0117 VIA_int_enable
COMMENT_LINE $0119 wait 20 cycles till store of aux (these are 23)
COMMENT $0119 12
COMMENT $011A 3
FORCE_NO_SYMBOL $011A
COMMENT_LINE $011C nop      10
FORCE_SYMBOL $011C VIA_aux_cntl
FORCE_NO_SYMBOL $011E
COMMENT_LINE $0120 ...........
COMMENT $0120 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0120
FORCE_SYMBOL $0122 VIA_int_enable
COMMENT_LINE $0124 ensure shift is "normal"
COMMENT $0124 0 = shift,
FORCE_NO_SYMBOL $0124
FORCE_SYMBOL $0126 VIA_aux_cntl
COMMENT $0128 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0128
COMMENT $012A all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $012A VIA_DDR_b
COMMENT $012C A = $01, B = 0
FORCE_NO_SYMBOL $012C
COMMENT $012E ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $012E VIA_port_b
FORCE_NO_SYMBOL $0130
COMMENT_LINE $0132 ...........
COMMENT_LINE $0132 _jmpBankIRQ3X
COMMENT_LINE $0132 ATTENTION!
COMMENT_LINE $0132 THIS DOES NOT WORK ON A REAL VECTREX
COMMENT_LINE $0132 DUNNO WHY?
COMMENT_LINE $0132 AUX setting is needed, when SHIFT was changed!
COMMENT_LINE $0132 IRQ_TO_1
COMMENT_LINE $0132 PB6_TO_1
COMMENT_LINE $0132 jmp      ,x
COMMENT_LINE $0132 ...........
COMMENT $0132 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0132
COMMENT $0134 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0134 VIA_DDR_b
COMMENT $0136 A = $01, B = 0
FORCE_NO_SYMBOL $0136
COMMENT $0138 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0138 VIA_port_b
COMMENT $013A 0 = shift,
FORCE_NO_SYMBOL $013A
FORCE_SYMBOL $013D VIA_shift_reg
FORCE_SYMBOL $013F VIA_aux_cntl
COMMENT $0141 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0141
FORCE_SYMBOL $0143 VIA_int_enable
FORCE_NO_SYMBOL $0145
COMMENT_LINE $0147 ...........
COMMENT $0147 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0147
FORCE_SYMBOL $0149 VIA_int_enable
COMMENT_LINE $014B ensure shift is "normal"
COMMENT $014B 0 = shift,
FORCE_NO_SYMBOL $014B
FORCE_SYMBOL $014D VIA_aux_cntl
FORCE_NO_SYMBOL $014F
COMMENT $0151 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $0151
COMMENT_LINE $0154 for some reason or another, VIA doesn't like a
COMMENT_LINE $0154 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $0154 (only on a real vectrex, not Vide)
FORCE_SYMBOL $0154 VIA_aux_cntl
COMMENT $0156 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $0156 VIA_shift_reg
COMMENT $0158 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $0158
FORCE_SYMBOL $015A VIA_int_enable
COMMENT_LINE $015C wait 20 cycles till store of aux (these are 23)
COMMENT $015C 12
COMMENT $015D 3
FORCE_NO_SYMBOL $015D
COMMENT_LINE $015F nop      10
FORCE_SYMBOL $015F VIA_aux_cntl
COMMENT_LINE $0162 ...........
COMMENT_LINE $0162 PB6 stays 1
COMMENT_LINE $0162 todo
COMMENT_LINE $0162 ensure T1 setup correctly
COMMENT_LINE $0162 - it usually is
COMMENT $0162 bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0162
FORCE_SYMBOL $0164 VIA_int_enable
COMMENT_LINE $0166 and now "trigger a interrupt
COMMENT $0166 a VERY short T1 timer
FORCE_NO_SYMBOL $0166
FORCE_SYMBOL $0168 VIA_t1_cnt_lo
COMMENT $016B start timer
FORCE_SYMBOL $016B VIA_t1_cnt_hi
COMMENT $016D Peer Test
COMMENT_LINE $016F by the time, the macros "leaves" the interrupt is set!
FORCE_NO_SYMBOL $016F
COMMENT $0171 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0171
FORCE_SYMBOL $0173 VIA_int_enable
COMMENT_LINE $0175 ensure shift is "normal"
COMMENT $0175 0 = shift,
FORCE_NO_SYMBOL $0175
FORCE_SYMBOL $0177 VIA_aux_cntl
COMMENT_LINE $017A ...........
COMMENT $017A Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $017A
COMMENT $017C all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $017C VIA_DDR_b
COMMENT $017E A = $01, B = 0
FORCE_NO_SYMBOL $017E
COMMENT $0180 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0180 VIA_port_b
FORCE_NO_SYMBOL $0182
COMMENT $0184 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0184
COMMENT $0186 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0186 VIA_DDR_b
COMMENT $0188 A = $01, B = 0
FORCE_NO_SYMBOL $0188
COMMENT $018A ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $018A VIA_port_b
COMMENT_LINE $018D ...........
COMMENT $018D Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $018D
COMMENT $018F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $018F VIA_DDR_b
COMMENT $0191 A = $01, B = 0
FORCE_NO_SYMBOL $0191
COMMENT $0193 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0193 VIA_port_b
COMMENT $0195 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0195
FORCE_SYMBOL $0197 VIA_int_enable
COMMENT_LINE $0199 ensure shift is "normal"
COMMENT $0199 0 = shift,
FORCE_NO_SYMBOL $0199
FORCE_SYMBOL $019B VIA_aux_cntl
FORCE_NO_SYMBOL $019D
COMMENT_LINE $019F todo
COMMENT_LINE $019F ensure T1 setup correctly
COMMENT_LINE $019F - it usually is
COMMENT $019F bit 7 = 1, each other "1" sets the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $019F
FORCE_SYMBOL $01A1 VIA_int_enable
COMMENT_LINE $01A3 and now "trigger a interrupt
COMMENT $01A3 a VERY short T1 timer
FORCE_NO_SYMBOL $01A3
FORCE_SYMBOL $01A5 VIA_t1_cnt_lo
COMMENT $01A8 start timer
FORCE_SYMBOL $01A8 VIA_t1_cnt_hi
COMMENT $01AA Peer Test
COMMENT_LINE $01AC by the time, the macros "leaves" the interrupt is set!
COMMENT $01AC Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01AC
COMMENT $01AE all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01AE VIA_DDR_b
COMMENT $01B0 A = $01, B = 0
FORCE_NO_SYMBOL $01B0
COMMENT $01B2 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01B2 VIA_port_b
COMMENT $01B5 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $01B5
COMMENT $01B7 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01B7 VIA_DDR_b
COMMENT $01B9 A = $01, B = 0
FORCE_NO_SYMBOL $01B9
COMMENT $01BB ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01BB VIA_port_b
COMMENT $01BD bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01BD
FORCE_SYMBOL $01BF VIA_int_enable
COMMENT_LINE $01C1 ensure shift is "normal"
COMMENT $01C1 0 = shift,
FORCE_NO_SYMBOL $01C1
FORCE_SYMBOL $01C3 VIA_aux_cntl
FORCE_NO_SYMBOL $01C5
COMMENT $01C7 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01C7
COMMENT_LINE $01CA for some reason or another, VIA doesn't like a
COMMENT_LINE $01CA std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01CA (only on a real vectrex, not Vide)
FORCE_SYMBOL $01CA VIA_aux_cntl
COMMENT $01CC and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01CC VIA_shift_reg
COMMENT $01CE bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01CE
FORCE_SYMBOL $01D0 VIA_int_enable
COMMENT_LINE $01D2 wait 20 cycles till store of aux (these are 23)
COMMENT $01D2 12
COMMENT $01D3 3
FORCE_NO_SYMBOL $01D3
COMMENT_LINE $01D5 nop      10
FORCE_SYMBOL $01D5 VIA_aux_cntl
COMMENT $01D7 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01D7
COMMENT $01D9 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01D9 VIA_DDR_b
COMMENT $01DB A = $01, B = 0
FORCE_NO_SYMBOL $01DB
COMMENT $01DD ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01DD VIA_port_b
COMMENT $01E0 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $01E0
COMMENT $01E2 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $01E2 VIA_DDR_b
COMMENT $01E4 A = $01, B = 0
FORCE_NO_SYMBOL $01E4
COMMENT $01E6 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $01E6 VIA_port_b
COMMENT $01E8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $01E8
FORCE_SYMBOL $01EA VIA_int_enable
COMMENT_LINE $01EC ensure shift is "normal"
COMMENT $01EC 0 = shift,
FORCE_NO_SYMBOL $01EC
FORCE_SYMBOL $01EE VIA_aux_cntl
FORCE_NO_SYMBOL $01F0
COMMENT $01F2 ensure that shift can generate interrupt
FORCE_NO_SYMBOL $01F2
COMMENT_LINE $01F5 for some reason or another, VIA doesn't like a
COMMENT_LINE $01F5 std VIA_shift_reg, Bankswitching (IRQ?) than crashes!
COMMENT_LINE $01F5 (only on a real vectrex, not Vide)
FORCE_SYMBOL $01F5 VIA_aux_cntl
COMMENT $01F7 and write 0 to shift (a) and $98 to aux (shift out enable)
FORCE_SYMBOL $01F7 VIA_shift_reg
COMMENT $01F9 bit 7 = 1, each other "1" enables interrupts(bit 6 = t1, bit 2 = shift), both enabled
FORCE_NO_SYMBOL $01F9
FORCE_SYMBOL $01FB VIA_int_enable
COMMENT_LINE $01FD wait 20 cycles till store of aux (these are 23)
COMMENT $01FD 12
COMMENT $01FE 3
FORCE_NO_SYMBOL $01FE
COMMENT_LINE $0200 nop      10
FORCE_SYMBOL $0200 VIA_aux_cntl
COMMENT $0202 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0202
COMMENT $0204 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0204 VIA_DDR_b
COMMENT $0206 A = $01, B = 0
FORCE_NO_SYMBOL $0206
COMMENT $0208 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0208 VIA_port_b
COMMENT $020B Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $020B
COMMENT $020D all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $020D VIA_DDR_b
COMMENT $020F A = $01, B = 0
FORCE_NO_SYMBOL $020F
COMMENT $0211 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0211 VIA_port_b
COMMENT $0213 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $0213
FORCE_SYMBOL $0215 VIA_int_enable
COMMENT_LINE $0217 ensure shift is "normal"
COMMENT $0217 0 = shift,
FORCE_NO_SYMBOL $0217
FORCE_SYMBOL $0219 VIA_aux_cntl
FORCE_NO_SYMBOL $021B
COMMENT $021D bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $021D
FORCE_SYMBOL $021F VIA_int_enable
COMMENT_LINE $0221 ensure shift is "normal"
COMMENT $0221 0 = shift,
FORCE_NO_SYMBOL $0221
FORCE_SYMBOL $0223 VIA_aux_cntl
FORCE_NO_SYMBOL $0225
COMMENT_LINE $0227 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0227 initialize jumps across bank
COMMENT_LINE $0227 one accros bank JSR (inclusive all) takes 46 cycles!
COMMENT_LINE $0227 these are bank switches only from bank 2 / 3
COMMENT_LINE $0227 IRQ is allways not enabled!
COMMENT_LINE $0227 bank 0 here means bank 2
COMMENT_LINE $0227 bank 1 here means bank 3
COMMENT_LINE $0227 (remnants from using only 2 banks)
COMMENT_LINE $0227 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0227 ensure bank 0
COMMENT_LINE $0227 ensure bit 6 = 0
COMMENT_LINE $0227 PB6_TO_0
COMMENT $0227 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0227
COMMENT $0229 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0229 VIA_DDR_b
COMMENT $022B A = $01, B = 0
FORCE_NO_SYMBOL $022B
COMMENT $022D ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $022D VIA_port_b
FORCE_NO_SYMBOL $022F
COMMENT_LINE $0231 ensure bank1
COMMENT $0231 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0231
COMMENT $0233 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0233 VIA_DDR_b
COMMENT_LINE $0236 ...........
COMMENT_LINE $0236 ensure bank 0
COMMENT_LINE $0236 ensure bit 6 = 0
COMMENT $0236 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0236
COMMENT $0238 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0238 VIA_DDR_b
COMMENT $023A A = $01, B = 0
FORCE_NO_SYMBOL $023A
COMMENT $023C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $023C VIA_port_b
FORCE_NO_SYMBOL $023E
COMMENT_LINE $0240 ...........
COMMENT_LINE $0240 ensure bank1
COMMENT $0240 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0240
COMMENT $0242 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0242 VIA_DDR_b
FORCE_NO_SYMBOL $0244
COMMENT_LINE $0246 ensure bank 0
COMMENT_LINE $0246 ensure bit 6 = 0
COMMENT $0246 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0246
COMMENT $0248 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0248 VIA_DDR_b
COMMENT $024A A = $01, B = 0
FORCE_NO_SYMBOL $024A
COMMENT $024C ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $024C VIA_port_b
COMMENT_LINE $024F ...........
COMMENT_LINE $024F ensure bank 0
COMMENT_LINE $024F ensure bit 6 = 0
COMMENT $024F Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $024F
COMMENT $0251 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0251 VIA_DDR_b
FORCE_NO_SYMBOL $0253
COMMENT_LINE $0255 ...........
COMMENT_LINE $0255 changes y instead of d
COMMENT_LINE $0255 ensure bank1
FORCE_NO_SYMBOL $0255
FORCE_SYMBOL $0259 VIA_port_a
FORCE_NO_SYMBOL $025C
COMMENT_LINE $025E ensure bank 0
COMMENT_LINE $025E ensure bit 6 = 0
FORCE_NO_SYMBOL $025E
FORCE_SYMBOL $0261 VIA_port_b
FORCE_NO_SYMBOL $0263
FORCE_SYMBOL $0266 VIA_port_a
COMMENT_LINE $0269 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0269 ensure bank1
COMMENT $0269 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0269
COMMENT $026B all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $026B VIA_DDR_b
FORCE_SYMBOL $026D bonus_doneChallenge
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0270 ensure bank1
COMMENT $0270 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0270
COMMENT $0272 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0272 VIA_DDR_b
FORCE_SYMBOL $0274 bonus_done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0277 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $0277
COMMENT $0279 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0279 VIA_DDR_b
FORCE_SYMBOL $027B bonus_done_dying
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $027E A = $01, B = 0
FORCE_NO_SYMBOL $027E
COMMENT $0280 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0280 VIA_port_b
COMMENT $0282 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0282
COMMENT $0284 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $0284 VIA_DDR_b
FORCE_NO_SYMBOL $0286
COMMENT_LINE $0289 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0289 A = $01, B = 0
FORCE_NO_SYMBOL $0289
COMMENT $028B ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $028B VIA_port_b
COMMENT $028D Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $028D
COMMENT $028F all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $028F VIA_DDR_b
FORCE_NO_SYMBOL $0291
COMMENT_LINE $0294 .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT_LINE $0294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0294 used in boss 3
COMMENT_LINE $0294 must be in bank 0 & 1, since here(0) the letters are
COMMENT_LINE $0294 defined, and the behaviour is located in (1)!
COMMENT_LINE $0294 switching between banks is done within this routine!
COMMENT_LINE $0294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0294 A = $01, B = 0
FORCE_NO_SYMBOL $0294
COMMENT $0296 ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
FORCE_SYMBOL $0296 VIA_port_b
COMMENT $0298 Prepare DDR Registers % 1101 1111 1111 1111
FORCE_NO_SYMBOL $0298
COMMENT $029A all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $029A VIA_DDR_b
FORCE_NO_SYMBOL $029C
FORCE_SYMBOL $029E VIA_int_flags
COMMENT $02A2 Get next coordinate pair
FORCE_NO_SYMBOL $02A2
COMMENT $02A4 Send Y to A/D
FORCE_SYMBOL $02A4 VIA_port_a
COMMENT $02A6 Enable mux
FORCE_SYMBOL $02A6 VIA_port_b
COMMENT $02A8 Get pattern byte?
FORCE_NO_SYMBOL $02A8
COMMENT $02AA Advance to next point in list
FORCE_NO_SYMBOL $02AA
COMMENT $02AC Disable mux
FORCE_SYMBOL $02AC VIA_port_b
COMMENT $02AE Send X to A/D
FORCE_SYMBOL $02AE VIA_port_a
COMMENT $02B0 Store pattern in shift register
FORCE_SYMBOL $02B0 VIA_shift_reg
COMMENT $02B2 Clear T1H
FORCE_SYMBOL $02B2 VIA_t1_cnt_hi
COMMENT $02B4 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $02B4
COMMENT $02B7 Wait for T1 to time out
FORCE_SYMBOL $02B7 VIA_int_flags
COMMENT $02BB Wait a moment more
COMMENT $02BC Clear shift register (blank output)
FORCE_SYMBOL $02BC VIA_shift_reg
COMMENT $02BE Get next pattern byte
FORCE_NO_SYMBOL $02BE
COMMENT $02C0 Go back if high bit of pattern is set
COMMENT_LINE $02C2 zero
FORCE_SYMBOL $02C2 gameScale
FORCE_NO_SYMBOL $02C5
FORCE_SYMBOL $02C7 VIA_t1_cnt_lo
FORCE_SYMBOL $02C9 VIA_shift_reg
FORCE_NO_SYMBOL $02CB
COMMENT $02CD /BLANK low and /ZERO low
FORCE_SYMBOL $02CD VIA_cntl
FORCE_NO_SYMBOL $02CF
FORCE_SYMBOL $02D2 VIA_port_b
COMMENT_LINE $02D4 ensure bank1
COMMENT $02D4 Prepare DDR Registers % 1001 1111 1111 1111
FORCE_NO_SYMBOL $02D4
COMMENT $02D6 all ORB/ORA to output except ORB 5, PB6 goes LOW
FORCE_SYMBOL $02D6 VIA_DDR_b
FORCE_NO_SYMBOL $02D8
COMMENT_LINE $02DA ***************************************************************************
COMMENT_LINE $02DA ***************************************************************************
COMMENT_LINE $02DA CODE SECTION
COMMENT_LINE $02DA ***************************************************************************
COMMENT_LINE $02DA here the cartridge program starts off
COMMENT_LINE $02DA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 .........
COMMENT_LINE $0000 test the wheel
COMMENT_LINE $0000 REPLACE_1_2_bandit_varFromIRQ1_132
COMMENT_LINE $0000 ldx      #0                           ; bandit
COMMENT_LINE $0000 jmp      jmpBankIRQ1Shift
COMMENT_LINE $0000 backFromBandit
FORCE_NO_SYMBOL $02DA
COMMENT $02DC default
FORCE_SYMBOL $02DC gameScale
FORCE_SYMBOL $02DF chosenStartLevel
FORCE_SYMBOL $02E2 Vec_Loop_Count
COMMENT $02E8 bit 7 = 0, each other "1" clears the IEflag, bit 6 = T1
FORCE_NO_SYMBOL $02E8
FORCE_SYMBOL $02EA VIA_int_enable
COMMENT $02EC main00
FORCE_NO_SYMBOL $02EC
FORCE_SYMBOL $02EF jmpBank0X
COMMENT_LINE $02F2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $02F2 here upon "cartridge" start (after some inits in bank 0)
COMMENT_LINE $02F2 remember the currently played max level - so we can start (chose to start) at that level
FORCE_SYMBOL $02F2 difficulty
FORCE_NO_SYMBOL $02F5
FORCE_NO_SYMBOL $02F9
FORCE_SYMBOL $02FB maxLevelReached
FORCE_SYMBOL $0300 levelCount
FORCE_SYMBOL $0303 maxLevelReached
FORCE_SYMBOL $0308 maxLevelReached
FORCE_SYMBOL $030B clear_all_sound
COMMENT $030E gameOver00
FORCE_NO_SYMBOL $030E
FORCE_SYMBOL $0311 jmpBank0X
COMMENT_LINE $0314 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0314 here after calibration (for now)
FORCE_SYMBOL $0314 initGame
COMMENT $0317 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0317 spawnStar
COMMENT $031A needed if first level is a boss level...
FORCE_SYMBOL $031A afterDying
COMMENT_LINE $031D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $031D this is the actual game loop start
COMMENT_LINE $031D and init stack there
COMMENT $031D CBFC ; correct the stack to default address
FORCE_SYMBOL $031D MY_STACK
COMMENT_LINE $0321 The T2 timer rest is different (real vectrex 8, emulator 5 *256)
COMMENT_LINE $0321 so the vectrex has time enough to spawn a new = of stars
COMMENT_LINE $0321 within the adjustStar routine -> the emulator does not
COMMENT_LINE $0321 so - here comes the addidtional RANDOM calls
COMMENT_LINE $0321 but that also means, that
COMMENT_LINE $0321 within one vectrex round, the cycle difference summarize to
COMMENT_LINE $0321 up to 768 cycles -> which emulation wise is horrible!
COMMENT_LINE $0321 ;;;;;;;;;;;;;;;;;
COMMENT_LINE $0321 possibly in Move
COMMENT_LINE $0321 ;;;;;;;;;;;;;;;;;
COMMENT $0321 one global animation counter
FORCE_SYMBOL $0321 animDelayCounter
FORCE_SYMBOL $0326 ANIMATION_DELAY
FORCE_SYMBOL $0328 animDelayCounter
FORCE_SYMBOL $032B animDelayCounter
FORCE_SYMBOL $032E adjustStars
COMMENT_LINE $0331 ;;;;;;;;;;;;;;;;;
COMMENT_LINE $0331 ;;;;;;;;;;;;;;;;;
COMMENT_LINE $0331 when not recal macro
FORCE_SYMBOL $0331 VIA_t2_hi
FORCE_SYMBOL $0333 t2_rest
COMMENT $0336 removes "DOT" in the middle
FORCE_SYMBOL $0337 attackPatternInitiated
FORCE_SYMBOL $033A VIA_shift_reg
FORCE_NO_SYMBOL $033C
COMMENT $033E recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $033E Vec_Loop_Count
FORCE_NO_SYMBOL $0341
FORCE_SYMBOL $0343 Vec_Loop_Count
FORCE_SYMBOL $0346 VIA_t2_hi
FORCE_SYMBOL $0348 t2_rest
COMMENT $034B Wait for timer t2
FORCE_SYMBOL $034B VIA_int_flags
COMMENT $034F Store refresh value
FORCE_NO_SYMBOL $034F
COMMENT $0352 into timer t2
FORCE_SYMBOL $0352 VIA_t2_lo
FORCE_NO_SYMBOL $0354
COMMENT $0357 blank low and zero low
FORCE_SYMBOL $0357 VIA_cntl
COMMENT $0359 clear shift register
FORCE_SYMBOL $0359 VIA_shift_reg
COMMENT $035B clear D/A register
FORCE_SYMBOL $035B VIA_port_a
FORCE_NO_SYMBOL $035D
COMMENT $0360 mux=1, disable mux
FORCE_SYMBOL $0360 VIA_port_b
COMMENT $0362 mux=1, enable mux
FORCE_SYMBOL $0362 VIA_port_b
FORCE_NO_SYMBOL $0364
COMMENT $0366 disable mux
FORCE_SYMBOL $0366 VIA_port_b
COMMENT_LINE $0368 MY_WAIT_RECAL
COMMENT_LINE $0368 in wait recal cosutom
COMMENT_LINE $0368 some "in move" stuff could be handled
COMMENT_LINE $0368 ;;;;;
COMMENT_LINE $0368 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0368 check which game stage we are in
COMMENT_LINE $0368 if "starting" do the intro, which "plays" the intro patterns and
COMMENT_LINE $0368 spawns enemies
FORCE_SYMBOL $0368 currentLevelPointer
FORCE_SYMBOL $036B LEVEL_TYPE
FORCE_NO_SYMBOL $036D
FORCE_SYMBOL $036F LEVEL_TYPE_FAILURE
COMMENT_LINE $0375 biggies only above level 25
COMMENT_LINE $0375 bra noMoneyStealer\?
FORCE_SYMBOL $0375 levelCount
FORCE_NO_SYMBOL $0378
FORCE_SYMBOL $037E levelMaxEnemy
FORCE_SYMBOL $0381 enemyCount
FORCE_NO_SYMBOL $0384
COMMENT_LINE $038A here possibly a special BIGGY spawn
FORCE_SYMBOL $038A random_seed2
FORCE_NO_SYMBOL $0390
FORCE_SYMBOL $0392 random_seed2
FORCE_NO_SYMBOL $0395
COMMENT_LINE $039B lbne isIntroNoBug ; statistically 1/255 = every 2.5 seconds -> to many!
FORCE_SYMBOL $039B random_seed
FORCE_NO_SYMBOL $03A1
FORCE_SYMBOL $03A3 random_seed
FORCE_NO_SYMBOL $03A6
COMMENT $03A8 statistically each about *25 = 60 seconds .. lets try that
FORCE_SYMBOL $03AC difficulty
FORCE_SYMBOL $03B1 playerCashW
FORCE_NO_SYMBOL $03B4
COMMENT_LINE $03BA *********************************
COMMENT_LINE $03BA ** CASH STEALER *****************
COMMENT_LINE $03BA *********************************
COMMENT_LINE $03BA -------
COMMENT_LINE $03BA init money stealer
FORCE_SYMBOL $03BA diverseFlags
FORCE_SYMBOL $03BD BIT_BIG_ENEMY_IN_PLAY
FORCE_SYMBOL $03C1 spawnEnemy
FORCE_SYMBOL $03C6 diverseFlags
FORCE_SYMBOL $03C9 BIT_BIG_ENEMY_IN_PLAY
FORCE_SYMBOL $03CB diverseFlags
FORCE_SYMBOL $03CE enemyMoneySucker
FORCE_SYMBOL $03D1 ENEMY_STRUCT
FORCE_NO_SYMBOL $03D4
FORCE_SYMBOL $03D7 ALL_PURPOSE
FORCE_SYMBOL $03DA MY_PATTERN
FORCE_SYMBOL $03DC ANIM_POSITION
FORCE_SYMBOL $03DE MONEY_SUCK_TIMER
FORCE_SYMBOL $03E0 MONEYSUCKER_HP
FORCE_SYMBOL $03E3 BIG_HP
FORCE_SYMBOL $03E5 suckerAddress
COMMENT $03E8 start at upper right (for now)
FORCE_SYMBOL $03EB Y_POS
COMMENT $03ED perhaps first Bug entry behaviour ("beam in")
FORCE_SYMBOL $03ED moneySuckerBehaviour
FORCE_SYMBOL $03F0 BEHAVIOUR
COMMENT_LINE $03F2 -------
COMMENT_LINE $03F4 *********************************
COMMENT_LINE $03F4 ** BIG FIEND ********************
COMMENT_LINE $03F4 *********************************
COMMENT_LINE $03F4 -------
COMMENT_LINE $03F4 init super alien
COMMENT_LINE $03F4 -------
FORCE_SYMBOL $03F4 diverseFlags
FORCE_SYMBOL $03F7 BIT_BIG_ENEMY_IN_PLAY
FORCE_SYMBOL $03FB spawnEnemy
FORCE_SYMBOL $0400 diverseFlags
FORCE_SYMBOL $0403 BIT_BIG_ENEMY_IN_PLAY
FORCE_SYMBOL $0405 diverseFlags
FORCE_SYMBOL $0408 enemyMegaFiend
FORCE_SYMBOL $040B ENEMY_STRUCT
FORCE_NO_SYMBOL $040E
FORCE_SYMBOL $0411 ALL_PURPOSE
FORCE_SYMBOL $0414 MY_PATTERN
FORCE_SYMBOL $0416 ANIM_POSITION
FORCE_SYMBOL $0418 STAY_HERE_LOOP_COUNTER
FORCE_SYMBOL $041A MEGAFIEND_HP
FORCE_SYMBOL $041D BIG_HP
COMMENT $041F start at upper right (for now)
FORCE_NO_SYMBOL $041F
FORCE_SYMBOL $0422 Y_POS
COMMENT $0424 perhaps first Bug entry behaviour ("beam in")
FORCE_SYMBOL $0424 megaFiendBehaviour
FORCE_SYMBOL $0427 BEHAVIOUR
FORCE_SYMBOL $0429 lockPurchased
FORCE_SYMBOL $042C GAMEPHASE_INTRO
COMMENT_LINE $042E cmpa     #GAMEPHASE_INTRO             ; new ships are still spawning, begining of a level...
FORCE_SYMBOL $0430 doIntro
FORCE_SYMBOL $0433 isIntroNoBug
COMMENT_LINE $0436 bugs are only starting when intro phase is done
COMMENT_LINE $0436 and several other conditions are met
FORCE_SYMBOL $0436 levelTimer
FORCE_NO_SYMBOL $0439
FORCE_SYMBOL $043C levelTimer
FORCE_SYMBOL $0443 difficulty
FORCE_NO_SYMBOL $0446
FORCE_SYMBOL $044A levelCount
COMMENT $044D no saucer in the first five level
FORCE_NO_SYMBOL $044D
COMMENT $0451 bonusTimerLength
FORCE_SYMBOL $0454 saucerCount
FORCE_NO_SYMBOL $045C
FORCE_NO_SYMBOL $0461
FORCE_SYMBOL $046B levelTimer
FORCE_SYMBOL $046E diverseFlags
FORCE_SYMBOL $0471 BIT_BIG_ENEMY_IN_PLAY
FORCE_SYMBOL $0475 spawnEnemy
COMMENT_LINE $047A timer saucer!
FORCE_SYMBOL $047A saucerCount
FORCE_SYMBOL $047D diverseFlags
FORCE_SYMBOL $0480 BIT_BIG_ENEMY_IN_PLAY
FORCE_SYMBOL $0482 diverseFlags
COMMENT_LINE $0485 *********************************
COMMENT_LINE $0485 ** TIME OUT - SAUCER ************
COMMENT_LINE $0485 *********************************
FORCE_SYMBOL $0485 enemySaucerDefinition
FORCE_SYMBOL $0488 ENEMY_STRUCT
FORCE_NO_SYMBOL $048B
FORCE_SYMBOL $048E ALL_PURPOSE
FORCE_SYMBOL $0491 MY_PATTERN
FORCE_SYMBOL $0493 ANIM_POSITION
FORCE_SYMBOL $0495 SAUCER_HP
FORCE_SYMBOL $0498 BIG_HP
COMMENT $049A start at upper right (for now)
FORCE_NO_SYMBOL $049A
FORCE_SYMBOL $049D Y_POS
FORCE_SYMBOL $049F saucerCount
FORCE_NO_SYMBOL $04A2
COMMENT_LINE $04A6 *********************************
COMMENT_LINE $04A6 ** TIME OUT - MOTHERSHIP ********
COMMENT_LINE $04A6 *********************************
FORCE_SYMBOL $04A6 enemyMoneyMothershipDefinition
FORCE_SYMBOL $04A9 ENEMY_STRUCT
FORCE_SYMBOL $04AC MONEYMOTHERSHIP_HP
FORCE_SYMBOL $04AF BIG_HP
COMMENT $04B1 perhaps first Bug entry behaviour ("beam in")
FORCE_SYMBOL $04B1 moneyMothershipBehaviour
FORCE_SYMBOL $04B4 BEHAVIOUR
FORCE_NO_SYMBOL $04B6
FORCE_SYMBOL $04B9 levelTimer
COMMENT $04BE perhaps first Bug entry behaviour ("beam in")
FORCE_SYMBOL $04BE saucerBehaviour
FORCE_SYMBOL $04C1 BEHAVIOUR
COMMENT_LINE $04C3 ;; saucer init done
COMMENT $04C3 was tst
FORCE_SYMBOL $04C3 bugsSpawnedInLevel
FORCE_SYMBOL $04C8 enemyCount
FORCE_SYMBOL $04CB nextBugEnemyCount
COMMENT_LINE $04D0 init bug
FORCE_SYMBOL $04D0 spawnEnemy
COMMENT_LINE $04D5 big bugs only appear if a reduced count of normal enemies are on screen
COMMENT_LINE $04D5 each bug with (atm) 4 enemies less (actually 3 - since the bug counts too)
FORCE_SYMBOL $04D5 nextBugEnemyCount
FORCE_NO_SYMBOL $04D8
COMMENT $04DA allow more than 4 bugs *shudder*
FORCE_NO_SYMBOL $04DA
FORCE_NO_SYMBOL $04DE
FORCE_SYMBOL $04E0 nextBugEnemyCount
FORCE_SYMBOL $04E3 bugsSpawnedInLevel
FORCE_SYMBOL $04E6 currentLevelPointer
FORCE_SYMBOL $04EA LEVEL_BUG_DEFINITION
FORCE_SYMBOL $04ED ENEMY_STRUCT
FORCE_SYMBOL $04F1 BUG_ENEMY_HP
FORCE_SYMBOL $04F3 difficulty
FORCE_NO_SYMBOL $04F6
COMMENT_LINE $04FA lsra
COMMENT $04FA all 8 bits
FORCE_SYMBOL $04FA BUG_ENEMY_HITPOINTS
FORCE_NO_SYMBOL $04FD
FORCE_SYMBOL $0500 ALL_PURPOSE
FORCE_SYMBOL $0503 MY_PATTERN
FORCE_SYMBOL $0505 ANIM_POSITION
FORCE_SYMBOL $0507 BUG_SHOT_DELAY
FORCE_SYMBOL $0509 BUG_APPEARING_INTENSITY
FORCE_SYMBOL $050C random_seed
FORCE_NO_SYMBOL $0512
FORCE_SYMBOL $0514 random_seed
COMMENT $0517 start at upper right (for now)
FORCE_NO_SYMBOL $0517
FORCE_SYMBOL $0519 Y_POS
FORCE_SYMBOL $051B Y_POS16
FORCE_SYMBOL $051D X_POS16
COMMENT $0523 perhaps first Bug entry behaviour ("beam in")
FORCE_SYMBOL $0523 bugEntryBehaviour
FORCE_SYMBOL $0526 BEHAVIOUR
COMMENT_LINE $0528 ;; bug init done
COMMENT $0528 messsaging -> todo
FORCE_SYMBOL $0528 displayScore
FORCE_SYMBOL $052B DEFAULT_ENEMY_INTENSITY
COMMENT $052D Store intensity in D/A
FORCE_SYMBOL $052D VIA_port_a
COMMENT $052F mux disabled channel 2
FORCE_NO_SYMBOL $052F
FORCE_SYMBOL $0532 VIA_port_b
COMMENT $0534 mux enabled channel 2
FORCE_SYMBOL $0534 VIA_port_b
COMMENT $0536 turn off mux
FORCE_SYMBOL $0536 VIA_port_b
FORCE_SYMBOL $0538 displayStaticBonus
COMMENT_LINE $053B draw the player ship
FORCE_SYMBOL $053B calibrationZero7
FORCE_SYMBOL $053E PLAYER_YPOS
FORCE_SYMBOL $0540 gameScale
FORCE_SYMBOL $0543 VIA_t1_cnt_lo
FORCE_SYMBOL $0545 playerXpos
COMMENT $0548 Store Y in D/A register
FORCE_SYMBOL $0548 VIA_port_a
COMMENT $054A Blank low, zero high?
FORCE_NO_SYMBOL $054A
FORCE_SYMBOL $054C VIA_cntl
COMMENT $054F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $054F VIA_port_b
COMMENT $0551 y must be set more than xx cycles on some vectrex
COMMENT $0552 Disable mux
FORCE_SYMBOL $0552 VIA_port_b
COMMENT $0554 Store X in D/A register
FORCE_SYMBOL $0554 VIA_port_a
COMMENT $0556 enable timer
FORCE_SYMBOL $0556 VIA_t1_cnt_hi
COMMENT_LINE $0558 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0558 ;;;;;
COMMENT_LINE $0558 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $0558 ;;;;;
COMMENT $0558 testing if all enemies are dead -> level done
FORCE_SYMBOL $0558 lockPurchased
COMMENT $055B only testing, when in game, otherwise the start of a level would be the end (no enemies)
FORCE_SYMBOL $055B GAMEPHASE_INTRO
COMMENT_LINE $055D lda      game_phase                   ; testing if all enemies are dead -> level done
COMMENT_LINE $055D cmpa     #GAMEPHASE_INGAME            ; only testing, when in game, otherwise the start of a level would be the end (no enemies)
COMMENT $055F is enemy count 0
FORCE_SYMBOL $055F enemyCount
COMMENT $0562 yes init next level
FORCE_SYMBOL $0566 bulletSpawnAt
FORCE_SYMBOL $056B spawnShot
FORCE_NO_SYMBOL $056E
FORCE_SYMBOL $0571 bulletSpawnAt
FORCE_SYMBOL $0574 isBugShot
FORCE_SYMBOL $0577 playerWasHitFor
COMMENT_LINE $057C KA BOOM
FORCE_SYMBOL $057C playerDying
COMMENT $057F doFighterPrep
FORCE_NO_SYMBOL $057F
FORCE_SYMBOL $0582 jsrBank0_fromBank3_Shift
COMMENT_LINE $0000 usage of DS (Stack) forbidden below!!!
COMMENT_LINE $0000 (in main loop)
COMMENT_LINE $0000 the object lists and smart draw use both stacks
COMMENT_LINE $0000 the object list uses DS as object list pointer
COMMENT_LINE $0000 and the smart draw uses "U" as User stack pointer
COMMENT $0585 returns to bonus_done
FORCE_SYMBOL $0585 doMainBank0_m
COMMENT_LINE $0588 laser stuff below costs about 100 cycles!
COMMENT $0588 must be exactly between player shots spawn and enemy drawn
FORCE_NO_SYMBOL $0588
FORCE_SYMBOL $058A laserLowestY
FORCE_SYMBOL $058D laserLowestYRight
FORCE_SYMBOL $0590 laserLowestYLeft
FORCE_NO_SYMBOL $0593
FORCE_SYMBOL $0596 laserEnemyPointer
FORCE_SYMBOL $0599 laserEnemyPointerRight
FORCE_SYMBOL $059C laserEnemyPointerLeft
FORCE_SYMBOL $059F tmp2_tmp_unique
COMMENT $05A2 ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $05A2 laserTag
COMMENT_LINE $05A5 does also shot initialization
COMMENT_LINE $05A5 must happen before enemy display
COMMENT_LINE $05A5 CAN HAPPEN IN MOVE
FORCE_SYMBOL $05A5 in_moveFlag
FORCE_SYMBOL $05A8 starlist_objects_head
COMMENT $05AC (D = y,x) ; do all objects
COMMENT $05AE CBFC ; correct the stack to default address
FORCE_SYMBOL $05AE MY_STACK
FORCE_SYMBOL $05B2 calibrationZero7
COMMENT_LINE $05B5 clr laserTag ; ensure in enemy display this is 0 (for laser shot inhibitaion)
COMMENT $05B5 ensure first enemy resets intensity
FORCE_SYMBOL $05B5 lightningOn
FORCE_SYMBOL $05B8 enemylist_objects_head
COMMENT $05BC (D = y,x) ; do all objects
FORCE_SYMBOL $05BE playerNumberOfBulletsPerShot
COMMENT $05C1 laser
FORCE_NO_SYMBOL $05C1
FORCE_SYMBOL $05C5 laserEnemyPointer
FORCE_SYMBOL $05CA laserTag
FORCE_SYMBOL $05CD backy1
FORCE_SYMBOL $05D0 backJump
FORCE_SYMBOL $05D3 laserEnemyPointer
FORCE_SYMBOL $05D7 lasershotReEntry
FORCE_SYMBOL $05DA laserEnemyPointerLeft
FORCE_SYMBOL $05DF laserTag
FORCE_SYMBOL $05E2 backy2
FORCE_SYMBOL $05E5 backJump
FORCE_SYMBOL $05E8 laserEnemyPointerLeft
FORCE_SYMBOL $05EC lasershotReEntry
FORCE_SYMBOL $05EF laserEnemyPointerRight
FORCE_SYMBOL $05F4 laserTag
FORCE_SYMBOL $05F7 backy3
FORCE_SYMBOL $05FA backJump
FORCE_SYMBOL $05FD laserEnemyPointerRight
FORCE_SYMBOL $0601 lasershotReEntry
FORCE_NO_SYMBOL $0604
COMMENT $0607 clear D/A register
FORCE_SYMBOL $0607 VIA_port_a
COMMENT $0609 mux=1, disable mux
FORCE_SYMBOL $0609 VIA_port_b
COMMENT $060B mux=1, enable mux
FORCE_SYMBOL $060B VIA_port_b
COMMENT $060D do it again
FORCE_SYMBOL $060D VIA_port_b
FORCE_NO_SYMBOL $060F
COMMENT $0611 disable mux
FORCE_SYMBOL $0611 VIA_port_b
COMMENT_LINE $0613 anti cranky "A" 18 cycles :-(
COMMENT_LINE $0613 lda      #-50                           ; a = $18, b = $83 disable RAMP, muxsel=false, channel 1 (integrators offsets)
COMMENT_LINE $0613 clrb
COMMENT_LINE $0613 stb       <VIA_port_b                    ; Clear D/A output
COMMENT_LINE $0613 sta      <VIA_port_a                    ; Clear D/A output
COMMENT_LINE $0613 incb
COMMENT_LINE $0613 stb       <VIA_port_b                    ; Clear D/A output
FORCE_SYMBOL $0613 shotlist_objects_head
COMMENT $0617 shots are always bright!
FORCE_NO_SYMBOL $0617
COMMENT $0619 Store intensity in D/A
FORCE_SYMBOL $0619 VIA_port_a
COMMENT $061B mux disabled channel 2
FORCE_NO_SYMBOL $061B
FORCE_SYMBOL $061E VIA_port_b
COMMENT $0620 mux enabled channel 2
FORCE_SYMBOL $0620 VIA_port_b
COMMENT $0622 turn off mux
FORCE_SYMBOL $0622 VIA_port_b
COMMENT_LINE $063A shots_done
COMMENT_LINE $063A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $063A player_score
FORCE_SYMBOL $063E multiplyer
FORCE_SYMBOL $0643 player_score_4
FORCE_SYMBOL $0649 addScoreBack1
FORCE_SYMBOL $064C compare10000
COMMENT_LINE $064F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $064F player_score
FORCE_SYMBOL $0653 multiplyer
FORCE_SYMBOL $0658 player_score_4
FORCE_SYMBOL $065B player_score_4
FORCE_NO_SYMBOL $065E
FORCE_SYMBOL $0660 player_score_3
FORCE_SYMBOL $0663 player_score_3
FORCE_SYMBOL $0669 addScoreBack12
FORCE_SYMBOL $066C checkScore
FORCE_SYMBOL $066F addScoreBack11
FORCE_SYMBOL $0672 checkScore
FORCE_SYMBOL $0675 addScoreBack1
FORCE_SYMBOL $0678 checkScore
COMMENT_LINE $067C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $067C player_score
FORCE_SYMBOL $0680 multiplyer
FORCE_SYMBOL $0685 player_score_3
FORCE_SYMBOL $068B addScoreBack1
FORCE_SYMBOL $068E checkScore
COMMENT_LINE $0691 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0691 player_score
FORCE_SYMBOL $0695 multiplyer
FORCE_SYMBOL $069A player_score_2
FORCE_SYMBOL $06A0 addScoreBack1
FORCE_SYMBOL $06A3 checkScore
COMMENT_LINE $06A6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $06A6 display a complete
COMMENT_LINE $06A6 "Main" round including falling bonus, score, fighter, fighter movement, ym, stars
COMMENT_LINE $06A6 ....... challenge bonus start
FORCE_SYMBOL $06A6 animDelayCounter
FORCE_SYMBOL $06AB ANIMATION_DELAY
FORCE_SYMBOL $06AD animDelayCounter
FORCE_SYMBOL $06B0 animDelayCounter
FORCE_SYMBOL $06B4 VIA_shift_reg
COMMENT $06B6 Vectrex BIOS recalibration
FORCE_SYMBOL $06B6 Wait_Recal
COMMENT $06B9 JoyDigitalHorizontal00
FORCE_NO_SYMBOL $06B9
FORCE_SYMBOL $06BC jsrBank0X
FORCE_SYMBOL $06BF drunkTimer
FORCE_SYMBOL $06C4 drunkTimer
FORCE_SYMBOL $06C7 Vec_Joy_1_X
FORCE_SYMBOL $06CC Vec_Joy_1_X
COMMENT $06CF messsaging -> todo
FORCE_SYMBOL $06CF displayScore
FORCE_SYMBOL $06D2 DEFAULT_ENEMY_INTENSITY
COMMENT $06D4 Store intensity in D/A
FORCE_SYMBOL $06D4 VIA_port_a
COMMENT $06D6 mux disabled channel 2
FORCE_NO_SYMBOL $06D6
FORCE_SYMBOL $06D9 VIA_port_b
COMMENT $06DB mux enabled channel 2
FORCE_SYMBOL $06DB VIA_port_b
COMMENT $06DD turn off mux
FORCE_SYMBOL $06DD VIA_port_b
FORCE_SYMBOL $06DF displayStaticBonus
COMMENT_LINE $06E2 draw the player ship
FORCE_SYMBOL $06E2 calibrationZero7
FORCE_SYMBOL $06E5 gameScale
FORCE_SYMBOL $06E8 VIA_t1_cnt_lo
FORCE_SYMBOL $06EA PLAYER_YPOS
FORCE_SYMBOL $06EC playerXpos
COMMENT $06EF Store Y in D/A register
FORCE_SYMBOL $06EF VIA_port_a
COMMENT $06F1 Blank low, zero high?
FORCE_NO_SYMBOL $06F1
FORCE_SYMBOL $06F3 VIA_cntl
COMMENT $06F6 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $06F6 VIA_port_b
COMMENT $06F8 y must be set more than xx cycles on some vectrex
COMMENT $06F9 Disable mux
FORCE_SYMBOL $06F9 VIA_port_b
COMMENT $06FB Store X in D/A register
FORCE_SYMBOL $06FB VIA_port_a
COMMENT $06FD enable timer
FORCE_SYMBOL $06FD VIA_t1_cnt_hi
COMMENT $06FF doFighterPrep
FORCE_NO_SYMBOL $06FF
FORCE_SYMBOL $0702 jsrBank0_fromBank3_Shift
FORCE_SYMBOL $0705 calibrationZero7
FORCE_SYMBOL $0708 gameScale
FORCE_SYMBOL $070B VIA_t1_cnt_lo
FORCE_SYMBOL $070D backJump
COMMENT $0711 sound and bonus in bank 0
FORCE_SYMBOL $0711 doMainBank0
COMMENT $0714 just "in star"
FORCE_SYMBOL $0714 in_moveFlag
COMMENT $0717 also calcs player movement "in move"
FORCE_SYMBOL $0717 starlist_objects_head
COMMENT $071B (D = y,x) ; do all objects
COMMENT $071D load stack, backJump here is a "tmp"
FORCE_SYMBOL $071D backJump
COMMENT_LINE $0721 cleanup drawing
FORCE_NO_SYMBOL $0721
FORCE_SYMBOL $0723 gameScale
COMMENT $0726 /BLANK low and /ZERO low
FORCE_SYMBOL $0726 VIA_cntl
FORCE_SYMBOL $0728 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $072A
FORCE_SYMBOL $072D VIA_port_b
COMMENT_LINE $0730 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0730 display a
COMMENT_LINE $0730 "Main" round including fighter, fighter movement, player movement
COMMENT_LINE $0730 no dying check!
COMMENT_LINE $0730 used e.g. when boss is defeated
FORCE_SYMBOL $0730 bossFightPlayerStuff
COMMENT $0733 doymsound100
FORCE_NO_SYMBOL $0733
FORCE_SYMBOL $0736 jsrBank1_fromBank3_T1
COMMENT $0739 JoyDigitalHorizontal00
FORCE_NO_SYMBOL $0739
FORCE_SYMBOL $073C jsrBank0X
FORCE_SYMBOL $073F drunkTimer
FORCE_SYMBOL $0744 drunkTimer
FORCE_SYMBOL $0747 Vec_Joy_1_X
FORCE_SYMBOL $074C Vec_Joy_1_X
COMMENT_LINE $074F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $074F sets up above "main" round (which isnt the main game loop)
COMMENT_LINE $074F it is a everything BUT main game loop :-)
FORCE_SYMBOL $074F initStars
COMMENT $0752 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0752 spawnStar
COMMENT_LINE $0755 ensure empty shotlist
COMMENT_LINE $0755 and ensure that star routines do not
COMMENT_LINE $0755 go out of whack by testing for shots
FORCE_SYMBOL $0755 PLAYERSHOTS_DONE
FORCE_SYMBOL $0758 testShot
FORCE_SYMBOL $075B test2Shot
FORCE_SYMBOL $075E playershotlist_objects_head
FORCE_SYMBOL $0762 jmpBackBonusChallenge
FORCE_SYMBOL $0765 BONUS_DONE_A
FORCE_SYMBOL $0768 stars_doneChallenge
FORCE_SYMBOL $076B STARS_DONE_A
COMMENT_LINE $076F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $076F called from highscore, displays the enemies circliing
FORCE_SYMBOL $076F enemylist_objects_head
COMMENT $0773 (D = y,x) ; do all objects
COMMENT $0775 enemiesDoneHS
FORCE_NO_SYMBOL $0775
FORCE_SYMBOL $0778 jmpBankIRQ1Shift
COMMENT_LINE $077B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $077B called from highscore, displays the stars
FORCE_SYMBOL $077B starlist_objects_head
COMMENT $077F (D = y,x) ; do all objects
COMMENT $0781 starsDoneIn02
FORCE_NO_SYMBOL $0781
FORCE_SYMBOL $0784 jmpBankIRQ1Shift
COMMENT_LINE $0787 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0787 called from highscoreedit, displays the stars
FORCE_SYMBOL $0787 starlist_objects_head
COMMENT $078B (D = y,x) ; do all objects
FORCE_NO_SYMBOL $078D
FORCE_SYMBOL $0790 jmpBankIRQ1Shift
COMMENT_LINE $0793 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0793 levelDoneAchievementTest
FORCE_NO_SYMBOL $0793
FORCE_SYMBOL $0796 jmpBank0X
FORCE_SYMBOL $0799 diamondCount
FORCE_SYMBOL $079C SUPER_DIAMOND_BORDER
COMMENT $07A2 doSuperDiamond
FORCE_NO_SYMBOL $07A2
FORCE_SYMBOL $07A5 jmpBankIRQ1Shift
FORCE_SYMBOL $07A8 doWarpFailure
FORCE_SYMBOL $07AB currentLevelPointer
FORCE_SYMBOL $07AE LEVEL_TYPE
FORCE_NO_SYMBOL $07B0
FORCE_SYMBOL $07B2 LEVEL_TYPE_BONUS
COMMENT_LINE $07B8 ..................................................
COMMENT_LINE $07B8 show CHALLENGE RESULT
FORCE_SYMBOL $07BA lockPurchased
FORCE_SYMBOL $07BD ENEMY_DESTRUCTED_FLAG
FORCE_SYMBOL $07BF lockPurchased
FORCE_NO_SYMBOL $07C2
FORCE_SYMBOL $07C4 levelEnemyCount
FORCE_SYMBOL $07C7 bonusSpawnCount
FORCE_SYMBOL $07CA bonusHitCount
FORCE_SYMBOL $07CF perfectBonus
COMMENT $07D2 ensureScoopiesSafety
FORCE_NO_SYMBOL $07D2
FORCE_SYMBOL $07D5 jsrBank0X
COMMENT_LINE $07DA destroy player shots, since
COMMENT_LINE $07DA we reuse the space for FW
COMMENT_LINE $07DA if shots were handled in
COMMENT_LINE $07DA the stars -> crash can occur!
FORCE_NO_SYMBOL $07DA
FORCE_SYMBOL $07DD playershotlist_objects_head
FORCE_SYMBOL $07E0 testShot
FORCE_SYMBOL $07E3 test2Shot
FORCE_NO_SYMBOL $07E6
FORCE_SYMBOL $07E8 levelEnemyCount
FORCE_SYMBOL $07EB perfectBonus
FORCE_SYMBOL $07EE perfectBonus
FORCE_NO_SYMBOL $07F1
FORCE_NO_SYMBOL $07F5
FORCE_SYMBOL $07F7 perfectBonus
FORCE_NO_SYMBOL $07FA
FORCE_NO_SYMBOL $0806
COMMENT $080D perfect bonus!
FORCE_SYMBOL $080D addScore1000
COMMENT $0816 afterChallengeAchievementTest
FORCE_NO_SYMBOL $0816
FORCE_SYMBOL $0819 jmpBank0X
COMMENT $081C ensureScoopiesSafety
FORCE_NO_SYMBOL $081C
FORCE_SYMBOL $081F jsrBank0X
COMMENT $0822 backFromFireWorks ; explosions jump back to here after all have been rendered
FORCE_NO_SYMBOL $0822
FORCE_SYMBOL $0825 FW_PARTICLES_DONE_A
COMMENT_LINE $0828 setup objects
FORCE_SYMBOL $0828 FIREWOKRS_PARTICLE_COUNT
FORCE_SYMBOL $082A fwobject_list
FORCE_SYMBOL $082D fwlist_empty_head
FORCE_SYMBOL $0830 FW_PARTICLES_DONE
FORCE_SYMBOL $0834 VelocityParticle
FORCE_SYMBOL $0836 FW_NEXT_OBJECT
FORCE_NO_SYMBOL $0838
FORCE_SYMBOL $083F FW_NEXT_OBJECT
FORCE_SYMBOL $0842 fwlist_objects_head
FORCE_SYMBOL $0846 displayAMainRound
FORCE_SYMBOL $0849 Intensity_3F
COMMENT $084C displayChallengeResult00
FORCE_NO_SYMBOL $084C
FORCE_SYMBOL $084F jsrBank0X
FORCE_SYMBOL $0852 levelEnemyCount
COMMENT $0855 and repeat "forever"
COMMENT_LINE $0857 challenge show Bonus done
COMMENT_LINE $0857 ..................................................
COMMENT_LINE $0857 lda lockPurchased
COMMENT_LINE $0857 anda #$ff-ENEMY_DESTRUCTED_FLAG
COMMENT_LINE $0857 sta lockPurchased
FORCE_SYMBOL $0857 initNormalEnemies
COMMENT $085A ensureScoopiesLoaded
FORCE_NO_SYMBOL $085A
FORCE_SYMBOL $085D jsrBank0X
FORCE_SYMBOL $0860 currentLevelPointer
FORCE_SYMBOL $0863 LEVEL_TYPE
FORCE_SYMBOL $0865 LEVEL_TYPE_SHOP_AFTER
FORCE_SYMBOL $0869 isDemoMode
FORCE_SYMBOL $086E SHOP_WAIT_TIMER
FORCE_SYMBOL $0870 tmp16_tmp
FORCE_SYMBOL $0873 setUpMainRound_woStars
FORCE_SYMBOL $0876 displayAMainRound
FORCE_SYMBOL $0879 tmp16_tmp
COMMENT $087E doShop00
FORCE_NO_SYMBOL $087E
FORCE_SYMBOL $0881 jsrBank1_fromBank3_T1
FORCE_SYMBOL $0884 currentLevelPointer
FORCE_SYMBOL $0887 LEVEL_TYPE
FORCE_SYMBOL $0889 LEVEL_TYPE_WARP_AFTER
FORCE_SYMBOL $088F initWarp
COMMENT $0892 127 "rounds" for one warp sequence (2 1/2 s about)
FORCE_SYMBOL $0892 WARPLEN
FORCE_SYMBOL $0894 tmp1
FORCE_SYMBOL $0897 setUpMainRound_woStars
COMMENT $089A warp1data
FORCE_NO_SYMBOL $089A
FORCE_SYMBOL $089D sfx_pointer_1
COMMENT $08A0 warp1data
FORCE_NO_SYMBOL $08A0
FORCE_SYMBOL $08A3 sfx_pointer_2
COMMENT $08A6 warp1data
FORCE_NO_SYMBOL $08A6
FORCE_SYMBOL $08A9 sfx_pointer_3
FORCE_SYMBOL $08AC tmp1
FORCE_SYMBOL $08B1 tmp1
FORCE_SYMBOL $08BA random_seed
FORCE_NO_SYMBOL $08C0
FORCE_SYMBOL $08C2 random_seed
FORCE_SYMBOL $08C5 WARP_FAILURE_BORDER
FORCE_NO_SYMBOL $08C9
FORCE_SYMBOL $08CB doWarpFailure
COMMENT $08CE otherwise a second warp failure is not shown
FORCE_SYMBOL $08CE currentLevelPointer
FORCE_SYMBOL $08D3 warpLen
FORCE_NO_SYMBOL $08D6
COMMENT $08D8 not longer than 125
COMMENT $08DA lem of a "star" i warp mode
FORCE_SYMBOL $08DA warpLen
FORCE_SYMBOL $08DD warpLen
FORCE_SYMBOL $08E2 warpLen
FORCE_NO_SYMBOL $08E5
COMMENT $08E7 not longer than 125
FORCE_SYMBOL $08E9 warpLen
FORCE_SYMBOL $08EC warpLen
COMMENT $08EF usually the stars do the playermovement, the warp stars-> dont
FORCE_SYMBOL $08EF displayAMainRound
COMMENT_LINE $08F2 ;;;;;
COMMENT_LINE $08F2 ;;;;;
COMMENT_LINE $08F2 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $08F2 ;;;;;
COMMENT_LINE $08F2 this whole block does the player movement according to current joystick data
COMMENT_LINE $08F2 the testing whether the end of the screen is reached seems dumb - can I do that better?
FORCE_SYMBOL $08F2 Vec_Joy_1_X
COMMENT $08F9 half a pixel per "move"
FORCE_SYMBOL $08F9 playerXpos
FORCE_SYMBOL $08FC playerSpeed
FORCE_NO_SYMBOL $08FF
FORCE_SYMBOL $0905 playerXpos
COMMENT $090A half a pixel per "move"
FORCE_SYMBOL $090A playerXpos
FORCE_SYMBOL $090D playerSpeed
FORCE_NO_SYMBOL $0910
FORCE_SYMBOL $0916 playerXpos
COMMENT $0919 and repeat forever
COMMENT_LINE $091B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $091B test
FORCE_NO_SYMBOL $091B
FORCE_SYMBOL $091E currentLevelPointer
FORCE_SYMBOL $0921 levelCount
FORCE_SYMBOL $0924 levelsPlayed
FORCE_NO_SYMBOL $0927
FORCE_SYMBOL $092A levelsPlayed
FORCE_SYMBOL $092D initLevel
COMMENT $0930 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0930 spawnStar
COMMENT $0933 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0933 spawnStar
COMMENT $0936 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0936 spawnStar
COMMENT $0939 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0939 spawnStar
COMMENT $093C one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $093C spawnStar
COMMENT_LINE $093F display LEVEL Info
COMMENT_LINE $093F ; level intro text
FORCE_SYMBOL $093F titletextIntensity
COMMENT $0942 0 is fade in
FORCE_SYMBOL $0942 titletextFadeDirection
COMMENT $0945 0 = not done
FORCE_SYMBOL $0945 titletextDisplayDone
COMMENT_LINE $0948 ; level intro text
COMMENT $0948 scale of "LEVEL"
FORCE_SYMBOL $0948 tmp1
FORCE_SYMBOL $094B setUpMainRound
FORCE_SYMBOL $094E doWarpFailure
FORCE_SYMBOL $0953 currentLevelPointer
FORCE_SYMBOL $0956 LEVEL_TYPE
FORCE_SYMBOL $0958 LEVEL_TYPE_BOSS1
FORCE_SYMBOL $095C LEVEL_TYPE_BOSS2
FORCE_SYMBOL $0960 LEVEL_TYPE_BOSS3
FORCE_SYMBOL $0964 LEVEL_TYPE_BOSS4
COMMENT $0968 levelSpeech
FORCE_NO_SYMBOL $0968
FORCE_SYMBOL $096B jsrBank0_fromBank3_T1
FORCE_SYMBOL $0971 ACHIEVEMENT_FLAG_BYTE4_SPY_RANK1
COMMENT_LINE $0975 test Joystick Button
COMMENT $0975 getButtonState
FORCE_NO_SYMBOL $0975
FORCE_SYMBOL $0978 jsrBank0X
COMMENT_LINE $097B in a button state
COMMENT $097B if button 3+4 both pressed
FORCE_NO_SYMBOL $097B
COMMENT_LINE $097F enter shop
COMMENT $097F doShop00
FORCE_NO_SYMBOL $097F
FORCE_SYMBOL $0982 jsrBank1_fromBank3_T1
FORCE_SYMBOL $0987 displayAMainRound
FORCE_SYMBOL $098A Intensity_3F
FORCE_SYMBOL $098D tmp1
FORCE_SYMBOL $0990 tmp1
FORCE_NO_SYMBOL $0993
FORCE_SYMBOL $0997 tmp1
FORCE_NO_SYMBOL $099A
FORCE_SYMBOL $099E tmp1
FORCE_NO_SYMBOL $09A1
COMMENT $09A3 nextLevelDone
FORCE_NO_SYMBOL $09A5
FORCE_SYMBOL $09A9 currentLevelPointer
FORCE_SYMBOL $09AC LEVEL_TYPE
FORCE_SYMBOL $09AE LEVEL_TYPE_BOSS1
FORCE_SYMBOL $09B2 LEVEL_TYPE_BOSS2
FORCE_SYMBOL $09B6 LEVEL_TYPE_BOSS3
FORCE_SYMBOL $09BA LEVEL_TYPE_BOSS4
COMMENT $09BE showLevelTitleStep
FORCE_NO_SYMBOL $09BE
FORCE_SYMBOL $09C1 jsrBank0_fromBank3_Shift
FORCE_SYMBOL $09C4 tmp1
FORCE_NO_SYMBOL $09C7
FORCE_SYMBOL $09CB doWarpFailure
COMMENT $09D0 drawWarpFailure
FORCE_NO_SYMBOL $09D0
FORCE_SYMBOL $09D3 jsrBank0X
FORCE_SYMBOL $09D8 currentLevelPointer
FORCE_SYMBOL $09DB LEVEL_TYPE
FORCE_NO_SYMBOL $09DD
FORCE_SYMBOL $09DF LEVEL_TYPE_BOSS1
COMMENT $09E3 drawLevelString00
FORCE_NO_SYMBOL $09E3
FORCE_SYMBOL $09E6 jsrBank0X
FORCE_SYMBOL $09E9 currentLevelPointer
FORCE_SYMBOL $09EC LEVEL_TYPE
FORCE_NO_SYMBOL $09EE
FORCE_SYMBOL $09F0 LEVEL_TYPE_BONUS
COMMENT $09F4 drawBonusString00
FORCE_NO_SYMBOL $09F4
FORCE_SYMBOL $09F7 jsrBank0X
COMMENT $09FA noKamikazeLevel
FORCE_SYMBOL $09FA warpDoneLoop
FORCE_SYMBOL $09FD LEVEL_TYPE_KAMIKAZE
COMMENT $0A01 drawKamikazeString00
FORCE_NO_SYMBOL $0A01
FORCE_SYMBOL $0A04 jsrBank0X
FORCE_SYMBOL $0A07 warpDoneLoop
FORCE_SYMBOL $0A0A LEVEL_TYPE_BOSS1
COMMENT $0A10 drawBossString00
FORCE_NO_SYMBOL $0A10
FORCE_SYMBOL $0A13 jsrBank0X
COMMENT $0A16 and repeat forever
FORCE_SYMBOL $0A16 warpDoneLoop
COMMENT_LINE $0A19 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0A19 reset levelstructure
COMMENT_LINE $0A19 to max 5 stars
FORCE_SYMBOL $0A19 doWarpFailure
FORCE_SYMBOL $0A1E doWarpFailure
FORCE_SYMBOL $0A21 initNormalJMPPointer
FORCE_SYMBOL $0A24 initLevel
FORCE_SYMBOL $0A27 currentLevelPointer
FORCE_SYMBOL $0A2A LEVEL_TYPE
FORCE_NO_SYMBOL $0A2C
FORCE_SYMBOL $0A2E LEVEL_TYPE_BOSS1
FORCE_SYMBOL $0A34 LEVEL_TYPE_BOSS2
FORCE_SYMBOL $0A3A LEVEL_TYPE_BOSS3
FORCE_SYMBOL $0A40 LEVEL_TYPE_BOSS4
COMMENT $0A46 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $0A46 spawnStar
COMMENT_LINE $0A49 ensure EXTRA is correct displayed on level start
FORCE_SYMBOL $0A49 bonusCollect
FORCE_SYMBOL $0A4C bonusCollectSave
COMMENT $0A4F ensure letter in air - will be displayed as collected after minestorm!
FORCE_SYMBOL $0A4F bonusDisplay
COMMENT $0A52 this is the actual game loop start
FORCE_SYMBOL $0A52 main_12
COMMENT_LINE $0A55 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 twice the speed ofdraw synced AND calibrated!
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0A55 see also: BonusHomeCoordinates
FORCE_SYMBOL $0A55 gameScale
FORCE_SYMBOL $0A58 VIA_t1_cnt_lo
FORCE_SYMBOL $0A5A bonusCollect
FORCE_SYMBOL $0A5D bonusDisplay
FORCE_NO_SYMBOL $0A60
COMMENT_LINE $0A64 DISPLAY_STATIC_BONUS  $7d, $90, BonusEList
COMMENT $0A67 Store Y in D/A register
FORCE_SYMBOL $0A67 VIA_port_a
COMMENT $0A69 Blank low, zero high?
FORCE_NO_SYMBOL $0A69
FORCE_SYMBOL $0A6B VIA_cntl
COMMENT $0A6E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0A6E VIA_port_b
COMMENT $0A70 y must be set more than xx cycles on some vectrex
COMMENT $0A71 Disable mux
FORCE_SYMBOL $0A71 VIA_port_b
COMMENT $0A73 Store X in D/A register
FORCE_SYMBOL $0A73 VIA_port_a
COMMENT $0A75 enable timer
FORCE_SYMBOL $0A75 VIA_t1_cnt_hi
FORCE_SYMBOL $0A77 BonusEList
FORCE_SYMBOL $0A7A OBJECT_SCALE
FORCE_SYMBOL $0A7C VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0A7E
FORCE_SYMBOL $0A80 VIA_int_flags
COMMENT $0A84 twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $0A84 SMVB_drawSmart
FORCE_SYMBOL $0A87 bonusCollect
FORCE_SYMBOL $0A8A bonusDisplay
FORCE_NO_SYMBOL $0A8D
COMMENT_LINE $0A91 DISPLAY_STATIC_BONUS  $7d, ($90+20), BonusXList
COMMENT $0A94 Store Y in D/A register
FORCE_SYMBOL $0A94 VIA_port_a
COMMENT $0A96 Blank low, zero high?
FORCE_NO_SYMBOL $0A96
FORCE_SYMBOL $0A98 VIA_cntl
COMMENT $0A9B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0A9B VIA_port_b
COMMENT $0A9D y must be set more than xx cycles on some vectrex
COMMENT $0A9E Disable mux
FORCE_SYMBOL $0A9E VIA_port_b
COMMENT $0AA0 Store X in D/A register
FORCE_SYMBOL $0AA0 VIA_port_a
COMMENT $0AA2 enable timer
FORCE_SYMBOL $0AA2 VIA_t1_cnt_hi
FORCE_SYMBOL $0AA4 BonusXList
FORCE_SYMBOL $0AA7 OBJECT_SCALE
FORCE_SYMBOL $0AA9 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0AAB
FORCE_SYMBOL $0AAD VIA_int_flags
COMMENT $0AB1 twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $0AB1 SMVB_drawSmart
FORCE_SYMBOL $0AB4 bonusCollect
FORCE_SYMBOL $0AB7 bonusDisplay
FORCE_NO_SYMBOL $0ABA
COMMENT_LINE $0ABE DISPLAY_STATIC_BONUS  $7d, ($90+20+20), BonusTList
COMMENT $0AC1 Store Y in D/A register
FORCE_SYMBOL $0AC1 VIA_port_a
COMMENT $0AC3 Blank low, zero high?
FORCE_NO_SYMBOL $0AC3
FORCE_SYMBOL $0AC5 VIA_cntl
COMMENT $0AC8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0AC8 VIA_port_b
COMMENT $0ACA y must be set more than xx cycles on some vectrex
COMMENT $0ACB Disable mux
FORCE_SYMBOL $0ACB VIA_port_b
COMMENT $0ACD Store X in D/A register
FORCE_SYMBOL $0ACD VIA_port_a
COMMENT $0ACF enable timer
FORCE_SYMBOL $0ACF VIA_t1_cnt_hi
FORCE_SYMBOL $0AD1 BonusTList
FORCE_SYMBOL $0AD4 OBJECT_SCALE
FORCE_SYMBOL $0AD6 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0AD8
FORCE_SYMBOL $0ADA VIA_int_flags
COMMENT $0ADE twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $0ADE SMVB_drawSmart
FORCE_SYMBOL $0AE1 bonusCollect
FORCE_SYMBOL $0AE4 bonusDisplay
FORCE_NO_SYMBOL $0AE7
COMMENT_LINE $0AEB DISPLAY_STATIC_BONUS  $7d, ($90+20+20+20), BonusRList
COMMENT $0AEE Store Y in D/A register
FORCE_SYMBOL $0AEE VIA_port_a
COMMENT $0AF0 Blank low, zero high?
FORCE_NO_SYMBOL $0AF0
FORCE_SYMBOL $0AF2 VIA_cntl
COMMENT $0AF5 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0AF5 VIA_port_b
COMMENT $0AF7 y must be set more than xx cycles on some vectrex
COMMENT $0AF8 Disable mux
FORCE_SYMBOL $0AF8 VIA_port_b
COMMENT $0AFA Store X in D/A register
FORCE_SYMBOL $0AFA VIA_port_a
COMMENT $0AFC enable timer
FORCE_SYMBOL $0AFC VIA_t1_cnt_hi
FORCE_SYMBOL $0AFE BonusRList
FORCE_SYMBOL $0B01 OBJECT_SCALE
FORCE_SYMBOL $0B03 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0B05
FORCE_SYMBOL $0B07 VIA_int_flags
COMMENT $0B0B twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $0B0B SMVB_drawSmart
FORCE_SYMBOL $0B0E bonusCollect
FORCE_SYMBOL $0B11 bonusDisplay
FORCE_NO_SYMBOL $0B14
COMMENT_LINE $0B18 DISPLAY_STATIC_BONUS  $7d, ($90+20+20+20+20), BonusAList
COMMENT $0B1B Store Y in D/A register
FORCE_SYMBOL $0B1B VIA_port_a
COMMENT $0B1D Blank low, zero high?
FORCE_NO_SYMBOL $0B1D
FORCE_SYMBOL $0B1F VIA_cntl
COMMENT $0B22 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0B22 VIA_port_b
COMMENT $0B24 y must be set more than xx cycles on some vectrex
COMMENT $0B25 Disable mux
FORCE_SYMBOL $0B25 VIA_port_b
COMMENT $0B27 Store X in D/A register
FORCE_SYMBOL $0B27 VIA_port_a
COMMENT $0B29 enable timer
FORCE_SYMBOL $0B29 VIA_t1_cnt_hi
FORCE_SYMBOL $0B2B BonusAList
FORCE_SYMBOL $0B2E OBJECT_SCALE
FORCE_SYMBOL $0B30 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $0B32
FORCE_SYMBOL $0B34 VIA_int_flags
COMMENT $0B38 twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $0B38 SMVB_drawSmart
COMMENT_LINE $0B3C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0B3C ensure no scoop in warp
FORCE_SYMBOL $0B3C lockPurchased
FORCE_SYMBOL $0B3F ENEMY_DESTRUCTED_FLAG
FORCE_SYMBOL $0B41 lockPurchased
FORCE_SYMBOL $0B44 lockPurchased
FORCE_NO_SYMBOL $0B47
FORCE_NO_SYMBOL $0B4B
FORCE_SYMBOL $0B4E scoopEnemy1
FORCE_SYMBOL $0B51 scoopEnemy2
FORCE_SYMBOL $0B54 lockPurchased
FORCE_NO_SYMBOL $0B57
COMMENT $0B59 switch off scoopy shielded
FORCE_SYMBOL $0B59 lockPurchased
COMMENT $0B5E ensureScoopiesSafety
FORCE_NO_SYMBOL $0B5E
FORCE_SYMBOL $0B61 jsrBank0X
COMMENT_LINE $0B64 ;;;;;;;;;;;;; expand starlist to be as high as 20 (times 4 = 80 stars)
COMMENT_LINE $0B64 stars
FORCE_SYMBOL $0B64 MAX_STAR_OBJECTS_WARP
FORCE_SYMBOL $0B66 starobject_list
FORCE_SYMBOL $0B69 starlist_empty_head
FORCE_SYMBOL $0B6C STARS_DONE
FORCE_SYMBOL $0B70 StarStruct
FORCE_SYMBOL $0B72 NEXT_STAR_OBJECT
FORCE_NO_SYMBOL $0B74
FORCE_SYMBOL $0B7B NEXT_STAR_OBJECT
FORCE_SYMBOL $0B7E starlist_objects_head
FORCE_SYMBOL $0B82 starCount
FORCE_SYMBOL $0B85 spawnStar
FORCE_SYMBOL $0B88 starWarpBehaviour
FORCE_SYMBOL $0B8B BEHAVIOUR
FORCE_SYMBOL $0B8D starCount
COMMENT $0B90 minus one because start at 0
FORCE_NO_SYMBOL $0B94
COMMENT $0B96 size of stars
FORCE_SYMBOL $0B96 warpLen
FORCE_NO_SYMBOL $0B99
COMMENT $0B9B speed of stars
FORCE_SYMBOL $0B9B warpSpeed
COMMENT_LINE $0B9F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0B9F ;;;;;;;;;;
COMMENT_LINE $0B9F all initialization that must be done for a
COMMENT_LINE $0B9F single level
COMMENT_LINE $0B9F expects currentLevelPointer to be = to the level
FORCE_NO_SYMBOL $0B9F
FORCE_SYMBOL $0BA2 realEnemyCount
FORCE_SYMBOL $0BA5 suckerAddress
FORCE_SYMBOL $0BA8 tacScan
FORCE_SYMBOL $0BAB diverseFlags
FORCE_SYMBOL $0BB0 diverseFlags
COMMENT $0BB3 in warp = 1
FORCE_SYMBOL $0BB3 lockPurchased
FORCE_SYMBOL $0BB8 lockPurchased
COMMENT_LINE $0BBB if is failure level -> reinit failure
FORCE_SYMBOL $0BBB currentLevelPointer
FORCE_SYMBOL $0BBE failureLevels
FORCE_SYMBOL $0BC3 levels
COMMENT_LINE $0BC8 last level was a failure :-)
FORCE_NO_SYMBOL $0BC8
FORCE_SYMBOL $0BCA doWarpFailure
FORCE_SYMBOL $0BCF levelCount
FORCE_SYMBOL $0BD4 levels
COMMENT $0BD9 zero terminated list...
COMMENT $0BDB redo from start if 0 encountered
FORCE_SYMBOL $0BDB levelCount
COMMENT_LINE $0BDE if at least ONCE level 100 reached, lock is "freed"
FORCE_SYMBOL $0BDE shopAllowFlags
FORCE_SYMBOL $0BE1 SHOP_LOCK
FORCE_SYMBOL $0BE3 SHOP_LASER_WEAPON
FORCE_SYMBOL $0BE5 shopAllowFlags
COMMENT $0BE8 increase additional live when level count loops
FORCE_SYMBOL $0BE8 difficulty
COMMENT $0BEB levelRollOverAchievementTest
FORCE_NO_SYMBOL $0BEB
FORCE_SYMBOL $0BEE jmpBankIRQ1Shift
FORCE_SYMBOL $0BF1 difficulty
FORCE_NO_SYMBOL $0BF4
COMMENT $0BF6 insure immunity 2 is kept! (wheel spin)
FORCE_SYMBOL $0BF6 downgradeImmunity
FORCE_SYMBOL $0BF9 downgradeImmunity
FORCE_SYMBOL $0BFC difficulty
FORCE_NO_SYMBOL $0BFF
FORCE_NO_SYMBOL $0C01
FORCE_NO_SYMBOL $0C05
COMMENT $0C07 insure immunity 2 is kept! (wheel spin)
FORCE_SYMBOL $0C07 downgradeImmunity
FORCE_SYMBOL $0C0A downgradeImmunity
FORCE_SYMBOL $0C0D difficulty
FORCE_NO_SYMBOL $0C10
FORCE_SYMBOL $0C12 SUPER_IMPOSSIBLE
FORCE_SYMBOL $0C16 difficulty
FORCE_SYMBOL $0C1B currentLevelPointer
FORCE_SYMBOL $0C1E stars_done
FORCE_SYMBOL $0C21 STARS_DONE_A
COMMENT $0C24 bonusTimerLength
FORCE_SYMBOL $0C27 levelTimer
FORCE_NO_SYMBOL $0C2A
FORCE_SYMBOL $0C2C levelMaxEnemy
COMMENT_LINE $0C2F when "normal" level, than here the maxmum enemies that can spawn
FORCE_SYMBOL $0C2F LEVEL_TYPE
FORCE_SYMBOL $0C31 LEVEL_APPEAR_AT_WAITING
FORCE_NO_SYMBOL $0C35
FORCE_SYMBOL $0C37 LEVEL_TYPE_NORMAL
FORCE_SYMBOL $0C3B LEVEL_TYPE_BIGGY
COMMENT_LINE $0C3F go thru level struct and count enemies
FORCE_SYMBOL $0C3F LEVEL_INTRO_PATTERN
FORCE_SYMBOL $0C43 levelMaxEnemy
FORCE_SYMBOL $0C4E levelMaxEnemy
FORCE_SYMBOL $0C51 levelMaxEnemy
FORCE_SYMBOL $0C56 LEVEL_ENEMY_COUNT
FORCE_SYMBOL $0C58 levelMaxEnemy
COMMENT_LINE $0C5B lda      #GAMEPHASE_INTRO
COMMENT_LINE $0C5B sta      game_phase
COMMENT $0C5B testing if all enemies are dead -> level done
FORCE_SYMBOL $0C5B lockPurchased
COMMENT $0C5E only testing, when in game, otherwise the start of a level would be the end (no enemies)
FORCE_SYMBOL $0C5E GAMEPHASE_INTRO
COMMENT $0C60 testing if all enemies are dead -> level done
FORCE_SYMBOL $0C60 lockPurchased
FORCE_SYMBOL $0C63 currentLevelPointer
FORCE_SYMBOL $0C66 bugsSpawnedInLevel
FORCE_SYMBOL $0C69 LEVEL_TYPE
FORCE_NO_SYMBOL $0C6B
FORCE_SYMBOL $0C6D LEVEL_TYPE_BIGGY
FORCE_SYMBOL $0C71 LEVEL_BUG_COUNT
COMMENT $0C73 if != 0 than bug spawn
FORCE_SYMBOL $0C73 bugsSpawnedInLevel
COMMENT $0C76 at most 16 enemies on screen - than the first bug can appear (more would slow down the game)
FORCE_NO_SYMBOL $0C76
FORCE_SYMBOL $0C78 nextBugEnemyCount
FORCE_SYMBOL $0C7B difficulty
FORCE_NO_SYMBOL $0C7E
COMMENT $0C8B very VERY little bonus
FORCE_NO_SYMBOL $0C8B
FORCE_SYMBOL $0C8F LEVEL_BONUS_BORDER
FORCE_SYMBOL $0C91 LEVEL_TYPE
FORCE_NO_SYMBOL $0C93
FORCE_SYMBOL $0C95 LEVEL_TYPE_BONUS
FORCE_SYMBOL $0C9A LEVEL_BONUS_BORDER
FORCE_SYMBOL $0C9C levelBonusBorder
FORCE_NO_SYMBOL $0C9F
FORCE_SYMBOL $0CA1 levelMaxAttackPatterns
FORCE_SYMBOL $0CA5 LEVEL_TYPE
FORCE_NO_SYMBOL $0CA7
FORCE_SYMBOL $0CA9 LEVEL_TYPE_BONUS
FORCE_NO_SYMBOL $0CAD
FORCE_SYMBOL $0CAF levelMaxEnemyShots
FORCE_SYMBOL $0CB2 levelBulletBorder
FORCE_SYMBOL $0CB7 LEVEL_MAX_ITEMS
FORCE_NO_SYMBOL $0CB9
FORCE_SYMBOL $0CBB levelMaxAttackPatterns
FORCE_SYMBOL $0CBE LEVEL_MAX_ITEMS
FORCE_SYMBOL $0CC4 levelMaxEnemyShots
FORCE_SYMBOL $0CC7 LEVEL_BULLET_BORDER
FORCE_SYMBOL $0CC9 levelBulletBorder
FORCE_SYMBOL $0CCC LEVEL_BONUS_BORDER
FORCE_NO_SYMBOL $0CCE
FORCE_SYMBOL $0CD0 levelBonusBorder
FORCE_SYMBOL $0CD5 bugsSpawnedInLevel
COMMENT $0CDA 1 bug less
FORCE_SYMBOL $0CDA bugsSpawnedInLevel
FORCE_SYMBOL $0CDD LEVEL_MAX_ITEMS
FORCE_NO_SYMBOL $0CDF
FORCE_SYMBOL $0CE2 levelMaxAttackPatterns
FORCE_SYMBOL $0CE5 LEVEL_MAX_ITEMS
FORCE_SYMBOL $0CEC levelMaxEnemyShots
FORCE_SYMBOL $0CEF LEVEL_BULLET_BORDER
FORCE_SYMBOL $0CF2 levelBulletBorder
FORCE_SYMBOL $0CF5 LEVEL_BONUS_BORDER
FORCE_NO_SYMBOL $0CF7
FORCE_SYMBOL $0CF9 levelBonusBorder
FORCE_SYMBOL $0CFE LEVEL_MAX_ITEMS
FORCE_NO_SYMBOL $0D00
FORCE_NO_SYMBOL $0D02
FORCE_SYMBOL $0D04 levelMaxAttackPatterns
FORCE_SYMBOL $0D08 LEVEL_TYPE
FORCE_NO_SYMBOL $0D0A
FORCE_SYMBOL $0D0C LEVEL_TYPE_BONUS
FORCE_SYMBOL $0D10 LEVEL_MAX_ITEMS
FORCE_NO_SYMBOL $0D16
FORCE_SYMBOL $0D18 levelMaxEnemyShots
FORCE_SYMBOL $0D1B LEVEL_BULLET_BORDER
FORCE_NO_SYMBOL $0D1D
FORCE_SYMBOL $0D1F levelBulletBorder
FORCE_SYMBOL $0D22 LEVEL_BONUS_BORDER
FORCE_SYMBOL $0D24 LEVEL_TYPE
FORCE_NO_SYMBOL $0D26
FORCE_SYMBOL $0D28 LEVEL_TYPE_BONUS
FORCE_SYMBOL $0D2D levelBonusBorder
FORCE_SYMBOL $0D30 doWarpFailure
FORCE_SYMBOL $0D35 difficulty
FORCE_NO_SYMBOL $0D38
FORCE_NO_SYMBOL $0D3C
FORCE_NO_SYMBOL $0D43
FORCE_NO_SYMBOL $0D47
FORCE_SYMBOL $0D49 levelMaxEnemyShots
COMMENT_LINE $0D4C .......................................................
FORCE_SYMBOL $0D4C LEVEL_INTRO_PATTERN
FORCE_SYMBOL $0D4E LINE_PATTERN_INVERS
COMMENT $0D50 also stores patternEnemyCount
FORCE_SYMBOL $0D50 inversePatttern
COMMENT $0D53 start with pattern 0 of intro pattern for this level
FORCE_SYMBOL $0D53 LINE_PATTERN_DEF
FORCE_SYMBOL $0D55 introWaveCurrentPattern
FORCE_SYMBOL $0D58 P_DELAY_BETWEEN_ENEMIES
FORCE_SYMBOL $0D5A introWaveEnemyDelayCount
COMMENT $0D5D initLevelInt0
FORCE_NO_SYMBOL $0D5D
FORCE_SYMBOL $0D60 jsrBank0_fromBank3_T1
FORCE_SYMBOL $0D63 clear_all_sound
COMMENT $0D66 adjustShotDamage
FORCE_NO_SYMBOL $0D66
FORCE_SYMBOL $0D69 jsrBank0X
COMMENT_LINE $0D6C ADJUST_SHOT_DAMAGE
COMMENT_LINE $0D6C initialize the empty object list
COMMENT_LINE $0D6C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D6C enemies
FORCE_SYMBOL $0D6C initNormalEnemies
COMMENT_LINE $0D6F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0D6F initStars
COMMENT_LINE $0D72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D72 SHOTS
FORCE_SYMBOL $0D72 initNormalEnemyShots
COMMENT $0D75 ensureScoopiesSafety
FORCE_NO_SYMBOL $0D75
FORCE_SYMBOL $0D78 jsrBank0X
COMMENT $0D7B ensureScoopiesLoaded
FORCE_NO_SYMBOL $0D7B
FORCE_SYMBOL $0D7E jsrBank0X
COMMENT_LINE $0D81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0D81 initPlayerShotList
FORCE_SYMBOL $0D84 doWarpFailure
FORCE_NO_SYMBOL $0D87
FORCE_NO_SYMBOL $0D8D
FORCE_NO_SYMBOL $0D91
FORCE_SYMBOL $0D95 saucerCount
COMMENT_LINE $0D99 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D99 random failure level load
COMMENT_LINE $0D99 init "failure" bugs
COMMENT_LINE $0D99 go main
COMMENT_LINE $0D99 now the actual failure level
COMMENT_LINE $0D99 change of plans - there are NO different failure levels
COMMENT_LINE $0D99 ldy      #failureLevels
COMMENT_LINE $0D99 RANDOM_A
COMMENT_LINE $0D99 lda      #0
COMMENT_LINE $0D99 lsla
COMMENT_LINE $0D99 ldy      a,y
FORCE_SYMBOL $0D99 failureLevel1
FORCE_SYMBOL $0D9D currentLevelPointer
FORCE_SYMBOL $0DA1 currentLevelPointer
FORCE_SYMBOL $0DA5 LEVEL_BUG_COUNT
FORCE_SYMBOL $0DA7 levelCount
FORCE_NO_SYMBOL $0DAE
FORCE_NO_SYMBOL $0DB2
FORCE_SYMBOL $0DB4 doWarpFailure
FORCE_NO_SYMBOL $0DB7
FORCE_SYMBOL $0DBB difficulty
FORCE_NO_SYMBOL $0DBE
COMMENT $0DC2 reload left over enemies
FORCE_SYMBOL $0DC2 joystickDir
FORCE_SYMBOL $0DC5 nextBugEnemyCount
COMMENT $0DC8 CBFC ; correct the stack to default address
FORCE_SYMBOL $0DC8 MY_STACK
FORCE_SYMBOL $0DCC spawnEnemy
FORCE_SYMBOL $0DD1 currentLevelPointer
FORCE_SYMBOL $0DD5 LEVEL_BUG_DEFINITION
FORCE_SYMBOL $0DD7 ENEMY_STRUCT
FORCE_SYMBOL $0DDA BUG_ENEMY_HP
FORCE_SYMBOL $0DDC difficulty
COMMENT_LINE $0DE1 easy4
COMMENT $0DE2 all 8 bits
FORCE_SYMBOL $0DE2 BUG_ENEMY_HITPOINTS
FORCE_NO_SYMBOL $0DE5
FORCE_SYMBOL $0DE8 ALL_PURPOSE
FORCE_SYMBOL $0DEB MY_PATTERN
FORCE_SYMBOL $0DED ANIM_POSITION
FORCE_SYMBOL $0DEF BUG_SHOT_DELAY
FORCE_SYMBOL $0DF1 BUG_APPEARING_INTENSITY
FORCE_SYMBOL $0DF4 random_seed
FORCE_NO_SYMBOL $0DFA
FORCE_SYMBOL $0DFC random_seed
FORCE_SYMBOL $0DFF random_seed
FORCE_NO_SYMBOL $0E05
FORCE_SYMBOL $0E07 random_seed
COMMENT $0E0A only spawn in upper half of screen
FORCE_NO_SYMBOL $0E0A
FORCE_SYMBOL $0E0C Y_POS
FORCE_SYMBOL $0E0E Y_POS16
FORCE_SYMBOL $0E10 X_POS16
COMMENT $0E16 perhaps first Bug entry behaviour ("beam in")
FORCE_SYMBOL $0E16 failureBehaviour
FORCE_SYMBOL $0E19 BEHAVIOUR
FORCE_SYMBOL $0E1B nextBugEnemyCount
COMMENT_LINE $0E20 ;; bug init done
COMMENT_LINE $0E20 lda      #GAMEPHASE_INGAME            ; only testing, when in game, otherwise the start of a level would be the end (no enemies)
COMMENT_LINE $0E20 sta      game_phase                   ; testing if all enemies are dead -> level done
COMMENT $0E20 testing if all enemies are dead -> level done
FORCE_SYMBOL $0E20 lockPurchased
COMMENT $0E23 only testing, when in game, otherwise the start of a level would be the end (no enemies)
COMMENT $0E25 testing if all enemies are dead -> level done
FORCE_SYMBOL $0E25 lockPurchased
FORCE_SYMBOL $0E28 main12
COMMENT_LINE $0E2B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0E2B all inits needed for a completely new game
COMMENT $0E2B initGame0
FORCE_NO_SYMBOL $0E2B
FORCE_SYMBOL $0E2E jsrBank0_fromBank3_T1
FORCE_SYMBOL $0E31 initNormalBonus
FORCE_NO_SYMBOL $0E34
FORCE_SYMBOL $0E36 laserLowestY
FORCE_SYMBOL $0E39 laserLowestYRight
FORCE_SYMBOL $0E3C laserLowestYLeft
FORCE_NO_SYMBOL $0E3F
FORCE_SYMBOL $0E42 laserEnemyPointer
FORCE_SYMBOL $0E45 laserEnemyPointerRight
FORCE_SYMBOL $0E48 laserEnemyPointerLeft
FORCE_SYMBOL $0E4B tmp2_tmp_unique
COMMENT $0E4E ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $0E4E laserTag
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 return addresses for (pul draws)
COMMENT_LINE $0000 in game!
COMMENT $0E51 initAchievementValues
FORCE_NO_SYMBOL $0E51
FORCE_SYMBOL $0E54 jsrBank0_fromBank3_T1
FORCE_SYMBOL $0E57 isDemoMode
COMMENT_LINE $0E5C init scoopies
FORCE_SYMBOL $0E5C spawnEnemy
FORCE_SYMBOL $0E5F enemyPlayerControlledRightBehaviour
FORCE_SYMBOL $0E62 BEHAVIOUR
FORCE_SYMBOL $0E64 enemy1Definition
COMMENT $0E68 hp get overwritten anyway - so we can store 16 bit
FORCE_SYMBOL $0E68 ENEMY_STRUCT
FORCE_SYMBOL $0E6C scoopEnemy1
FORCE_SYMBOL $0E6F spawnEnemy
FORCE_SYMBOL $0E72 enemyPlayerControlledLeftBehaviour
FORCE_SYMBOL $0E75 BEHAVIOUR
FORCE_SYMBOL $0E77 enemy1Definition
COMMENT $0E7B hp get overwritten anyway - so we can store 16 bit
FORCE_SYMBOL $0E7B ENEMY_STRUCT
FORCE_SYMBOL $0E7F scoopEnemy2
FORCE_SYMBOL $0E82 enemyCount
COMMENT $0E85 ensureScoopiesSafety
FORCE_NO_SYMBOL $0E85
FORCE_SYMBOL $0E88 jsrBank0X
COMMENT $0E8B initDemo
FORCE_NO_SYMBOL $0E8B
FORCE_SYMBOL $0E8E jsrBank0_fromBank3_T1
FORCE_SYMBOL $0E91 initNormalJMPPointer
FORCE_SYMBOL $0E94 initLevel
COMMENT_LINE $0E97 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $0E97
FORCE_SYMBOL $0E9A sfx_pointer_3
FORCE_SYMBOL $0E9D sfx_pointer_2
FORCE_SYMBOL $0EA0 sfx_pointer_1
COMMENT $0EA3 no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $0EA3 Vec_Music_Flag
COMMENT $0EA6 shadow regs
FORCE_SYMBOL $0EA6 Init_Music_Buf
COMMENT $0EA9 ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $0EA9 Do_Sound
COMMENT_LINE $0EAC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0EAC init player explosion
COMMENT_LINE $0EAC clear drunken
FORCE_SYMBOL $0EAC drunkTimer
FORCE_SYMBOL $0EAF lockPurchased
FORCE_NO_SYMBOL $0EB2
COMMENT $0EB4 switch off scoopy shielded
FORCE_SYMBOL $0EB4 lockPurchased
FORCE_SYMBOL $0EB7 playerExplosionSpace
FORCE_NO_SYMBOL $0EBA
COMMENT $0EBC position
FORCE_SYMBOL $0EBC EX_START_SIZE
FORCE_SYMBOL $0EBE MAX_PLAYER_EXPLOSION_SIZE
COMMENT $0EC0 position
FORCE_SYMBOL $0EC0 EX_MAX_SIZE
COMMENT $0EC2 start at 0
FORCE_SYMBOL $0EC2 EX_STEP
COMMENT $0EC4 bank0 jump back to bank 1
FORCE_SYMBOL $0EC4 jmpBack3BonusDying
FORCE_SYMBOL $0EC7 BONUS_DONE_A
FORCE_SYMBOL $0ECA enemies_done_dying
FORCE_SYMBOL $0ECD ENEMY_DONE_A
FORCE_SYMBOL $0ED0 shots_done_dying
FORCE_SYMBOL $0ED3 SHOTS_DONE_A
FORCE_SYMBOL $0ED6 stars_done_dying
FORCE_SYMBOL $0ED9 STARS_DONE_A
FORCE_SYMBOL $0EDC multiplyer
FORCE_SYMBOL $0EDF MULTIPLY_0_AND
FORCE_SYMBOL $0EE1 MULTIPLY_1_OR
FORCE_SYMBOL $0EE3 multiplyer
FORCE_NO_SYMBOL $0EE6
FORCE_SYMBOL $0EE8 player_score_80
COMMENT $0EEB ensure no warp failure
FORCE_SYMBOL $0EEB saucerCount
FORCE_SYMBOL $0EEE playerAnim
FORCE_SYMBOL $0EF1 playerBonusActive
FORCE_SYMBOL $0EF4 ANIMATION_DELAY
FORCE_SYMBOL $0EF6 playAnimDelayCounter
FORCE_SYMBOL $0EF9 current_button_state
FORCE_SYMBOL $0EFC Vec_Joy_1_X
COMMENT $0EFF lastExplosionData
FORCE_NO_SYMBOL $0EFF
FORCE_SYMBOL $0F02 sfx_pointer_1
FORCE_SYMBOL $0F05 sfx_pointer_2
FORCE_SYMBOL $0F08 sfx_pointer_3
COMMENT $0F0B doesnt make sense here - player dying is not moving at all
FORCE_SYMBOL $0F0B in_moveFlag
COMMENT $0F0E doesn't make sense here - while player is dying - no need for new attack patterns
FORCE_SYMBOL $0F0E playerBonusActive
FORCE_NO_SYMBOL $0F11
FORCE_SYMBOL $0F14 scoopEnemy1
FORCE_SYMBOL $0F17 scoopEnemy2
FORCE_SYMBOL $0F1A diverseFlags
FORCE_SYMBOL $0F1D BIT_FLAG_IS_BOSSFIGHT_ANY
COMMENT $0F21 initDeathBonus
FORCE_NO_SYMBOL $0F21
FORCE_SYMBOL $0F24 jmpBankIRQ0Shift
COMMENT_LINE $0F27 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F27 not using "main" function, because fighter is not drawn
FORCE_SYMBOL $0F27 animDelayCounter
FORCE_SYMBOL $0F2C ANIMATION_DELAY
FORCE_SYMBOL $0F2E animDelayCounter
FORCE_SYMBOL $0F31 animDelayCounter
COMMENT_LINE $0F34 when not recal macro
COMMENT $0F34 Vectrex BIOS recalibration
FORCE_SYMBOL $0F34 Wait_Recal
FORCE_SYMBOL $0F37 Intensity_3F
FORCE_SYMBOL $0F3A diverseFlags
FORCE_SYMBOL $0F3D BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_NO_SYMBOL $0F3F
COMMENT $0F43 displayBoss1
FORCE_NO_SYMBOL $0F43
FORCE_SYMBOL $0F46 jsrBank0X
FORCE_NO_SYMBOL $0F4B
COMMENT $0F4F displayBoss2
FORCE_NO_SYMBOL $0F4F
FORCE_NO_SYMBOL $0F54
COMMENT $0F58 displayBoss3
FORCE_NO_SYMBOL $0F58
FORCE_NO_SYMBOL $0F5D
COMMENT $0F61 displayBoss4
FORCE_NO_SYMBOL $0F61
FORCE_SYMBOL $0F66 attackPatternInitiated
COMMENT $0F69 messsaging
FORCE_SYMBOL $0F69 displayScore
FORCE_SYMBOL $0F6C DEFAULT_ENEMY_INTENSITY
COMMENT $0F6E Store intensity in D/A
FORCE_SYMBOL $0F6E VIA_port_a
COMMENT $0F70 mux disabled channel 2
FORCE_NO_SYMBOL $0F70
FORCE_SYMBOL $0F73 VIA_port_b
COMMENT $0F75 mux enabled channel 2
FORCE_SYMBOL $0F75 VIA_port_b
COMMENT $0F77 turn off mux
FORCE_SYMBOL $0F77 VIA_port_b
FORCE_SYMBOL $0F79 displayStaticBonus
COMMENT_LINE $0F7C draw the player ship
COMMENT_LINE $0F7C optimization pending (in Move etc)
FORCE_NO_SYMBOL $0F82
COMMENT $0F84 Store intensity in D/A
FORCE_SYMBOL $0F84 VIA_port_a
COMMENT $0F86 mux disabled channel 2
FORCE_NO_SYMBOL $0F86
FORCE_SYMBOL $0F89 VIA_port_b
COMMENT $0F8B mux enabled channel 2
FORCE_SYMBOL $0F8B VIA_port_b
COMMENT $0F8D turn off mux
FORCE_SYMBOL $0F8D VIA_port_b
FORCE_SYMBOL $0F8F calibrationZero7
FORCE_SYMBOL $0F92 PLAYER_YPOS
FORCE_SYMBOL $0F94 gameScale
FORCE_SYMBOL $0F97 VIA_t1_cnt_lo
FORCE_SYMBOL $0F99 playerXpos
COMMENT $0F9C Store Y in D/A register
FORCE_SYMBOL $0F9C VIA_port_a
COMMENT $0F9E Blank low, zero high?
FORCE_NO_SYMBOL $0F9E
FORCE_SYMBOL $0FA0 VIA_cntl
COMMENT $0FA3 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0FA3 VIA_port_b
COMMENT $0FA5 y must be set more than xx cycles on some vectrex
COMMENT $0FA6 Disable mux
FORCE_SYMBOL $0FA6 VIA_port_b
COMMENT $0FA8 Store X in D/A register
FORCE_SYMBOL $0FA8 VIA_port_a
COMMENT $0FAA enable timer
FORCE_SYMBOL $0FAA VIA_t1_cnt_hi
COMMENT_LINE $0FAC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0FAC doPlayerExplosion
COMMENT_LINE $0FAF usage of DS (Stack) forbidden below!!!
COMMENT_LINE $0FAF (in main loop)
COMMENT_LINE $0FAF the object lists and smart draw use both stacks
COMMENT_LINE $0FAF the object list uses DS as object list pointer
COMMENT_LINE $0FAF and the smart draw uses "U" as User stack pointer
FORCE_SYMBOL $0FAF doMainBank0
FORCE_NO_SYMBOL $0FB2
FORCE_SYMBOL $0FB4 laserLowestY
FORCE_SYMBOL $0FB7 laserLowestYRight
FORCE_SYMBOL $0FBA laserLowestYLeft
FORCE_NO_SYMBOL $0FBD
FORCE_SYMBOL $0FC0 laserEnemyPointer
FORCE_SYMBOL $0FC3 laserEnemyPointerRight
FORCE_SYMBOL $0FC6 laserEnemyPointerLeft
FORCE_SYMBOL $0FC9 tmp2_tmp_unique
COMMENT $0FCC ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $0FCC laserTag
FORCE_SYMBOL $0FCF enemylist_objects_head
COMMENT $0FD3 (D = y,x) ; do all objects
FORCE_NO_SYMBOL $0FD5
COMMENT $0FD7 ensure mode is correct for "ordinary" drawings...
FORCE_SYMBOL $0FD7 VIA_aux_cntl
FORCE_SYMBOL $0FD9 starlist_objects_head
COMMENT $0FDD (D = y,x) ; do all objects
COMMENT $0FDF CBFC ; correct the stack to default address
FORCE_SYMBOL $0FDF MY_STACK
COMMENT $0FE3 and repeat forever
FORCE_SYMBOL $0FE3 main_dying
COMMENT_LINE $0FE6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0FE9 MAX_BONUS_OBJECTS
FORCE_NO_SYMBOL $0FEB
COMMENT $0FED risingBonusBehaviour
FORCE_NO_SYMBOL $0FED
COMMENT $0FF2 fallingBonusBehaviour
FORCE_NO_SYMBOL $0FF2
FORCE_NO_SYMBOL $0FF5
FORCE_SYMBOL $0FF7 BonusStruct
FORCE_SYMBOL $0FFC enemyCount
FORCE_SYMBOL $0FFF joystickDir
FORCE_SYMBOL $1002 playerLives
FORCE_SYMBOL $1005 playerLives
COMMENT $100C gameOverFinalScoring
FORCE_NO_SYMBOL $100C
FORCE_SYMBOL $100F jmpBankIRQ1Shift
COMMENT_LINE $1012 lbeq     gameOver
COMMENT_LINE $1012 reduce player shot stats if possible
COMMENT_LINE $1012 after a death
COMMENT_LINE $1012 ensure EXTRA is displayed correctly
FORCE_SYMBOL $1012 bonusCollect
FORCE_SYMBOL $1015 bonusDisplay
COMMENT_LINE $1018 boss death random level go back (1-4)
FORCE_SYMBOL $1018 diverseFlags
FORCE_SYMBOL $101B BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $101F random_seed
FORCE_NO_SYMBOL $1025
FORCE_SYMBOL $1027 random_seed
FORCE_NO_SYMBOL $102A
FORCE_SYMBOL $102E levelCount
FORCE_SYMBOL $1031 levelCount
COMMENT $1034 showBossDeath
FORCE_NO_SYMBOL $1034
FORCE_SYMBOL $1037 jmpBankIRQ0T1
FORCE_SYMBOL $103A lockPurchased
FORCE_NO_SYMBOL $103D
FORCE_SYMBOL $1042 lockPurchased
COMMENT_LINE $1047 switch off autofire
FORCE_SYMBOL $1047 diverseFlags
FORCE_NO_SYMBOL $104A
FORCE_SYMBOL $104C diverseFlags
COMMENT_LINE $0000 reduce timer
FORCE_SYMBOL $104F bonusTimerLength
COMMENT $1052 sub five seconds
FORCE_NO_SYMBOL $1052
FORCE_NO_SYMBOL $1055
COMMENT $105B min Value 5s
FORCE_NO_SYMBOL $105B
FORCE_SYMBOL $105E bonusTimerLength
COMMENT_LINE $1061 reduce shot type
FORCE_SYMBOL $1061 playerNumberOfBulletsPerShot
FORCE_NO_SYMBOL $1064
FORCE_SYMBOL $1068 playerNumberOfBulletsPerShot
COMMENT_LINE $106B reduce shot count in air
FORCE_SYMBOL $106B playerMaxShotInAir
FORCE_NO_SYMBOL $106E
FORCE_SYMBOL $1072 playerMaxShotInAir
COMMENT_LINE $1075 reduce shot speed
FORCE_SYMBOL $1075 playerShotSpeed
FORCE_SYMBOL $1078 MIN_PLAYER_SPEED
FORCE_SYMBOL $107F playerShotSpeed
FORCE_SYMBOL $1082 playerShotSpeed
FORCE_NO_SYMBOL $1085
FORCE_SYMBOL $1087 playerShotSpeed
COMMENT $108D +10 new since, enemies now start at the bottom
COMMENT $1090 y wise a fixed compare is used, since y wise all shots are equal
FORCE_SYMBOL $1090 shotYRadius
COMMENT_LINE $1093 reduce player Speed
FORCE_SYMBOL $1093 playerSpeed
FORCE_SYMBOL $1096 MIN_PLAYER_SPEED
FORCE_SYMBOL $109D playerSpeed
FORCE_SYMBOL $10A0 playerSpeed
COMMENT_LINE $10A3 reduce shotpower
FORCE_SYMBOL $10A3 bulletDamageAdjust
FORCE_SYMBOL $10A8 bulletDamageAdjust
COMMENT_LINE $10AB BONUS
FORCE_SYMBOL $10AB diverseFlags
FORCE_SYMBOL $10AE BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_SYMBOL $10B2 initNormalBonus
FORCE_SYMBOL $10B5 reinitJumpBacks
COMMENT $10B8 reinit current level -
FORCE_SYMBOL $10B8 afterDying
COMMENT_LINE $10BB ***************************************************************************
COMMENT_LINE $10BB u must be preloaded with explosion struct pointer
COMMENT $10BB * If the scale factor for the explosion
FORCE_SYMBOL $10BB EX_START_SIZE
COMMENT $10BD * has not surpassed the max value, then
FORCE_SYMBOL $10BD EX_MAX_SIZE
FORCE_NO_SYMBOL $10C3
COMMENT $10C5 Store intensity in D/A
FORCE_SYMBOL $10C5 VIA_port_a
COMMENT $10C7 mux disabled channel 2
FORCE_NO_SYMBOL $10C7
FORCE_SYMBOL $10CA VIA_port_b
COMMENT $10CC mux enabled channel 2
FORCE_SYMBOL $10CC VIA_port_b
COMMENT $10CE turn off mux
FORCE_SYMBOL $10CE VIA_port_b
FORCE_SYMBOL $10D0 gameScale
FORCE_SYMBOL $10D3 VIA_t1_cnt_lo
FORCE_SYMBOL $10D5 EXPLOSION_POS
COMMENT $10D7 Store Y in D/A register
FORCE_SYMBOL $10D7 VIA_port_a
COMMENT $10D9 Blank low, zero high?
FORCE_NO_SYMBOL $10D9
FORCE_SYMBOL $10DB VIA_cntl
COMMENT $10DE Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $10DE VIA_port_b
COMMENT $10E0 y must be set more than xx cycles on some vectrex
COMMENT $10E1 Disable mux
FORCE_SYMBOL $10E1 VIA_port_b
COMMENT $10E3 Store X in D/A register
FORCE_SYMBOL $10E3 VIA_port_a
COMMENT $10E5 enable timer
FORCE_SYMBOL $10E5 VIA_t1_cnt_hi
COMMENT $10E7 * If the scale factor for the explosion
FORCE_SYMBOL $10E7 EX_START_SIZE
COMMENT_LINE $10EC ***************************************************************************
COMMENT_LINE $10EC position to explosion
FORCE_SYMBOL $10EC playerExplosionSpace
COMMENT $10EF * If the scale factor for the explosion
FORCE_SYMBOL $10EF EX_START_SIZE
COMMENT $10F1 * has not surpassed the max value, then
FORCE_SYMBOL $10F1 EX_MAX_SIZE
COMMENT $10F3 stack is "autocorrected" when level starts
FORCE_SYMBOL $10F7 SPEED_ADD
FORCE_SYMBOL $10F9 EX_START_SIZE
FORCE_SYMBOL $10FC VIA_shift_reg
FORCE_SYMBOL $1100 tmp8Count
FORCE_SYMBOL $1103 ANGLE_ROT_ADD
COMMENT $1105 max 63
FORCE_NO_SYMBOL $1105
FORCE_SYMBOL $1107 EX_STEP
FORCE_SYMBOL $1109 tmp8
FORCE_SYMBOL $110C getCircleCoordinate
FORCE_SYMBOL $110F tmp16_pos
FORCE_SYMBOL $1114 tmp16_neg
FORCE_SYMBOL $1117 playerXpos
FORCE_SYMBOL $111B tmp8Count
FORCE_NO_SYMBOL $111F
FORCE_SYMBOL $1121 EX_START_SIZE
FORCE_SYMBOL $1123 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1125
FORCE_SYMBOL $1127 VIA_int_flags
COMMENT_LINE $112B get position of dot and move there
FORCE_SYMBOL $112B tmp16_pos
COMMENT $112E Store Y in D/A register
FORCE_SYMBOL $112E VIA_port_a
COMMENT $1130 Blank low, zero high?
FORCE_NO_SYMBOL $1130
FORCE_SYMBOL $1132 VIA_cntl
COMMENT $1135 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1135 VIA_port_b
COMMENT $1137 y must be set more than xx cycles on some vectrex
COMMENT $1138 Disable mux
FORCE_SYMBOL $1138 VIA_port_b
COMMENT $113A Store X in D/A register
FORCE_SYMBOL $113A VIA_port_a
COMMENT $113C enable timer
FORCE_SYMBOL $113C VIA_t1_cnt_hi
FORCE_SYMBOL $113E playerXpos
FORCE_SYMBOL $1142 tmp8Count
FORCE_NO_SYMBOL $1145
FORCE_NO_SYMBOL $1147
FORCE_SYMBOL $1149 VIA_t1_cnt_lo
FORCE_SYMBOL $114B playerXpos
FORCE_SYMBOL $114F tmp8Count
FORCE_NO_SYMBOL $1152
FORCE_SYMBOL $1155 AnimList
FORCE_NO_SYMBOL $115A
FORCE_SYMBOL $115C VIA_int_flags
COMMENT $1160 DRAW_VLP
COMMENT $1160 Get next coordinate pair
FORCE_NO_SYMBOL $1160
COMMENT $1162 Send Y to A/D
FORCE_SYMBOL $1162 VIA_port_a
COMMENT $1164 Enable mux
FORCE_SYMBOL $1164 VIA_port_b
COMMENT $1166 Get pattern byte
FORCE_NO_SYMBOL $1166
COMMENT $1168 Disable mux
FORCE_SYMBOL $1168 VIA_port_b
COMMENT $116A Send X to A/D
FORCE_SYMBOL $116A VIA_port_a
FORCE_NO_SYMBOL $116C
COMMENT $116E Store pattern in shift register
FORCE_SYMBOL $116E VIA_shift_reg
COMMENT $1170 Clear T1H
FORCE_SYMBOL $1170 VIA_t1_cnt_hi
COMMENT $1172 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $1172
COMMENT_LINE $1174 0 is ok
COMMENT $1174 Advance to next point in list
FORCE_NO_SYMBOL $1174
COMMENT $1176 Wait for T1 to time out
FORCE_SYMBOL $1176 VIA_int_flags
COMMENT $117B Get next pattern byte
FORCE_NO_SYMBOL $117B
COMMENT $117F Clear shift register (blank output)
FORCE_SYMBOL $117F VIA_shift_reg
COMMENT $1181 Get next coordinate pair
FORCE_NO_SYMBOL $1181
COMMENT $1183 Send Y to A/D
FORCE_SYMBOL $1183 VIA_port_a
COMMENT $1185 Enable mux
FORCE_SYMBOL $1185 VIA_port_b
COMMENT $1187 Get pattern byte
FORCE_NO_SYMBOL $1187
COMMENT $1189 Disable mux
FORCE_SYMBOL $1189 VIA_port_b
COMMENT $118B Send X to A/D
FORCE_SYMBOL $118B VIA_port_a
FORCE_NO_SYMBOL $118D
COMMENT $118F Store pattern in shift register
FORCE_SYMBOL $118F VIA_shift_reg
COMMENT $1191 Clear T1H
FORCE_SYMBOL $1191 VIA_t1_cnt_hi
COMMENT $1193 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $1193
COMMENT_LINE $1195 0 is ok
COMMENT $1195 Advance to next point in list
FORCE_NO_SYMBOL $1195
COMMENT $1197 Wait for T1 to time out
FORCE_SYMBOL $1197 VIA_int_flags
COMMENT $119C Get next pattern byte
FORCE_NO_SYMBOL $119C
COMMENT $119E Go back if high bit of pattern is set
COMMENT $11A0 Clear shift register (blank output)
FORCE_SYMBOL $11A0 VIA_shift_reg
FORCE_SYMBOL $11A2 playerXpos
FORCE_SYMBOL $11A6 tmp8Count
FORCE_NO_SYMBOL $11AA
FORCE_SYMBOL $11AC EX_START_SIZE
FORCE_SYMBOL $11AE VIA_t1_cnt_lo
FORCE_SYMBOL $11B0 tmp16_neg
COMMENT_LINE $11B3 return to center of explosion
COMMENT $11B3 Store Y in D/A register
FORCE_SYMBOL $11B3 VIA_port_a
COMMENT $11B5 Blank low, zero high?
FORCE_NO_SYMBOL $11B5
FORCE_SYMBOL $11B7 VIA_cntl
COMMENT $11BA Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $11BA VIA_port_b
COMMENT $11BC y must be set more than xx cycles on some vectrex
COMMENT $11BD Disable mux
FORCE_SYMBOL $11BD VIA_port_b
COMMENT $11BF Store X in D/A register
FORCE_SYMBOL $11BF VIA_port_a
COMMENT $11C1 enable timer
FORCE_SYMBOL $11C1 VIA_t1_cnt_hi
FORCE_SYMBOL $11C3 ANGLE_ADD
FORCE_SYMBOL $11C5 tmp8
COMMENT $11C8 max 63
FORCE_NO_SYMBOL $11C8
FORCE_SYMBOL $11CA tmp8
FORCE_SYMBOL $11CD tmp8Count
COMMENT_LINE $11D4 complete explosion done
FORCE_SYMBOL $11D4 gameScale
FORCE_SYMBOL $11D7 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $11D9
COMMENT $11DB /BLANK low and /ZERO low
FORCE_SYMBOL $11DB VIA_cntl
FORCE_NO_SYMBOL $11DD
FORCE_SYMBOL $11E0 VIA_port_b
FORCE_NO_SYMBOL $11E2
FORCE_SYMBOL $11E4 VIA_int_flags
COMMENT_LINE $11E9 ***************************************************************************
COMMENT_LINE $11E9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $11E9 MAX_BONUS_OBJECTS
FORCE_SYMBOL $11EB bonusobject_list
FORCE_SYMBOL $11EE bonuslist_empty_head
FORCE_SYMBOL $11F1 BONUS_DONE
FORCE_SYMBOL $11F5 BonusStruct
FORCE_SYMBOL $11F7 NEXT_BONUS_OBJECT
FORCE_NO_SYMBOL $11F9
FORCE_SYMBOL $1200 NEXT_BONUS_OBJECT
FORCE_SYMBOL $1203 bonuslist_objects_head
FORCE_SYMBOL $1207 bonusCount
COMMENT_LINE $120B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $120B jmpBack1BonusIngame
FORCE_SYMBOL $120E BONUS_DONE_A
FORCE_SYMBOL $1211 enemies_done
FORCE_SYMBOL $1214 ENEMY_DONE_A
FORCE_SYMBOL $1217 shots_done
FORCE_SYMBOL $121A SHOTS_DONE_A
FORCE_NO_SYMBOL $121D
FORCE_SYMBOL $1220 PLAYERSHOTS_DONE_A
COMMENT_LINE $1224 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1224 stars
FORCE_SYMBOL $1224 MAX_STAR_OBJECTS
FORCE_SYMBOL $1226 starobject_list
FORCE_SYMBOL $1229 starlist_empty_head
FORCE_SYMBOL $122C STARS_DONE
FORCE_SYMBOL $1230 StarStruct
FORCE_SYMBOL $1232 NEXT_STAR_OBJECT
FORCE_NO_SYMBOL $1234
FORCE_SYMBOL $123B NEXT_STAR_OBJECT
FORCE_SYMBOL $123E starlist_objects_head
FORCE_SYMBOL $1242 starCount
COMMENT_LINE $1246 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1246 MAX_ENEMY_OBJECTS
FORCE_SYMBOL $1248 enemyobject_list
FORCE_SYMBOL $124B enemylist_empty_head
FORCE_SYMBOL $124E ENEMY_DONE
FORCE_SYMBOL $1252 EnemyStruct
FORCE_SYMBOL $1255 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1257 BIT_MASK
FORCE_NO_SYMBOL $125A
FORCE_SYMBOL $1262 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1265 enemylist_objects_head
COMMENT_LINE $126A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $126A SHOTS
FORCE_SYMBOL $126A MAX_SHOT_OBJECTS
FORCE_SYMBOL $126C shotobject_list
FORCE_SYMBOL $126F shotlist_empty_head
FORCE_SYMBOL $1272 SHOTS_DONE
FORCE_SYMBOL $1276 ShotStruct
FORCE_SYMBOL $1278 NEXT_SHOT_OBJECT
FORCE_NO_SYMBOL $127A
FORCE_SYMBOL $1281 NEXT_SHOT_OBJECT
FORCE_SYMBOL $1284 shotlist_objects_head
FORCE_SYMBOL $1288 shotCount
COMMENT_LINE $128C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $128C player shots
FORCE_SYMBOL $128C MAX_PLAYERSHOT_OBJECTS
FORCE_SYMBOL $128E playershotobject_list
FORCE_SYMBOL $1291 playershotlist_empty_head
FORCE_SYMBOL $1294 PLAYERSHOTS_DONE
FORCE_SYMBOL $1298 PlayerShotStruct
FORCE_SYMBOL $129A NEXT_PLAYERSHOT_OBJECT
FORCE_NO_SYMBOL $129C
FORCE_SYMBOL $12A3 NEXT_PLAYERSHOT_OBJECT
FORCE_SYMBOL $12A6 playershotlist_objects_head
COMMENT_LINE $12AB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $12AB explosion1Data
FORCE_NO_SYMBOL $12AB
FORCE_SYMBOL $12AE sfx_pointer_3
FORCE_SYMBOL $12B3 sfx_pointer_3
FORCE_SYMBOL $12B8 sfx_pointer_2
FORCE_SYMBOL $12BD sfx_pointer_2
FORCE_SYMBOL $12C2 sfx_pointer_1
FORCE_NO_SYMBOL $12C5
COMMENT $12C7 position
FORCE_SYMBOL $12C7 EX_START_SIZE
FORCE_SYMBOL $12C9 random_seed
FORCE_NO_SYMBOL $12CF
FORCE_SYMBOL $12D1 random_seed
COMMENT $12D4 max 64
FORCE_NO_SYMBOL $12D4
COMMENT $12D6 min 15
FORCE_NO_SYMBOL $12D6
COMMENT $12D8 position
FORCE_SYMBOL $12D8 EX_MAX_SIZE
COMMENT $12DA start at 0
FORCE_SYMBOL $12DA EX_STEP
FORCE_SYMBOL $12DC random_seed
FORCE_NO_SYMBOL $12E2
FORCE_SYMBOL $12E4 random_seed
FORCE_NO_SYMBOL $12E7
FORCE_SYMBOL $12E9 bossPosY
FORCE_SYMBOL $12EE bossPosY
FORCE_SYMBOL $12F1 random_seed
FORCE_NO_SYMBOL $12F7
FORCE_SYMBOL $12F9 random_seed
FORCE_NO_SYMBOL $12FC
FORCE_SYMBOL $12FE bossPosX
FORCE_SYMBOL $1303 bossPosX
FORCE_SYMBOL $1306 EXPLOSION_POS
COMMENT_LINE $1309 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1309 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1309 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $130A boss has no stars, so this should be irrelevant
FORCE_SYMBOL $130A in_moveFlag
FORCE_SYMBOL $130D VIA_shift_reg
COMMENT $130F Vectrex BIOS recalibration
FORCE_SYMBOL $130F Wait_Recal
COMMENT $1312 one global animation counter
FORCE_SYMBOL $1312 animDelayCounter
FORCE_SYMBOL $1317 ANIMATION_DELAY
FORCE_SYMBOL $1319 animDelayCounter
FORCE_SYMBOL $131C animDelayCounter
COMMENT $131F boss has no single enemies , so this should be irrelevant
FORCE_SYMBOL $131F attackPatternInitiated
FORCE_SYMBOL $1322 DEFAULT_ENEMY_INTENSITY
COMMENT $1324 Store intensity in D/A
FORCE_SYMBOL $1324 VIA_port_a
COMMENT $1326 mux disabled channel 2
FORCE_NO_SYMBOL $1326
FORCE_SYMBOL $1329 VIA_port_b
COMMENT $132B mux enabled channel 2
FORCE_SYMBOL $132B VIA_port_b
COMMENT $132D turn off mux
FORCE_SYMBOL $132D VIA_port_b
COMMENT_LINE $132F draw the player ship
COMMENT_LINE $132F optimization pending (in Move etc)
FORCE_SYMBOL $132F calibrationZero7
FORCE_SYMBOL $1332 PLAYER_YPOS
FORCE_SYMBOL $1334 gameScale
FORCE_SYMBOL $1337 VIA_t1_cnt_lo
FORCE_SYMBOL $1339 playerXpos
COMMENT $133C Store Y in D/A register
FORCE_SYMBOL $133C VIA_port_a
COMMENT $133E Blank low, zero high?
FORCE_NO_SYMBOL $133E
FORCE_SYMBOL $1340 VIA_cntl
COMMENT $1343 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1343 VIA_port_b
COMMENT $1345 y must be set more than xx cycles on some vectrex
COMMENT $1346 Disable mux
FORCE_SYMBOL $1346 VIA_port_b
COMMENT $1348 Store X in D/A register
FORCE_SYMBOL $1348 VIA_port_a
COMMENT $134A enable timer
FORCE_SYMBOL $134A VIA_t1_cnt_hi
COMMENT_LINE $134C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $134C THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $134C ;;;;;
COMMENT_LINE $134C todo one = of stars
COMMENT_LINE $134C than following macros are included "free"
COMMENT $134C normally this is done in "stars" - here we have to do it "manually"
COMMENT_LINE $134C ;;;;;
COMMENT_LINE $134C ;;;;;
COMMENT_LINE $134C THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $134C ;;;;;
COMMENT_LINE $134C this whole block does the player movement according to current joystick data
COMMENT_LINE $134C the testing whether the end of the screen is reached seems dumb - can I do that better?
FORCE_SYMBOL $134C Vec_Joy_1_X
COMMENT $1353 half a pixel per "move"
FORCE_SYMBOL $1353 playerXpos
FORCE_SYMBOL $1356 playerSpeed
FORCE_NO_SYMBOL $1359
FORCE_SYMBOL $135F playerXpos
COMMENT $1364 half a pixel per "move"
FORCE_SYMBOL $1364 playerXpos
FORCE_SYMBOL $1367 playerSpeed
FORCE_NO_SYMBOL $136A
FORCE_SYMBOL $1370 playerXpos
FORCE_SYMBOL $1373 BOSS1_Y_LOW
FORCE_SYMBOL $1375 enemyMINY
COMMENT $1378 normally this is done in "stars" - here we have to do it "manually"
FORCE_SYMBOL $1378 testShot
FORCE_SYMBOL $137B OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $1381 if last time something was hit and
COMMENT_LINE $1381 the bullet is still active
COMMENT_LINE $1381 do not switch - we probably will hit again!
COMMENT $1381 was tst
FORCE_SYMBOL $1381 explosionSound
FORCE_SYMBOL $1386 NEXT_SHOT_OBJECT
FORCE_SYMBOL $1388 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $138E enemyMINY
FORCE_SYMBOL $1391 Y_POS
FORCE_SYMBOL $1397 playershotlist_objects_head
FORCE_SYMBOL $139A OBJECT_LIST_COMPARE_ADDRESS
FORCE_NO_SYMBOL $13A0
FORCE_SYMBOL $13A3 testShot
FORCE_SYMBOL $13AB Y_POS
FORCE_SYMBOL $13AD shot_y_radius_corrdction
FORCE_SYMBOL $13B2 SHOT_RADIUS
FORCE_SYMBOL $13B6 SHOT_RADIUS1
FORCE_SYMBOL $13BA SHOT_RADIUS4
FORCE_NO_SYMBOL $13BE
FORCE_SYMBOL $13C2 SHOT_RADIUS3
FORCE_NO_SYMBOL $13C6
FORCE_SYMBOL $13CA SHOT_RADIUS2
FORCE_NO_SYMBOL $13CE
FORCE_SYMBOL $13D2 SHOT_RADIUS6
FORCE_NO_SYMBOL $13D6
COMMENT_LINE $13DA must be 1 or 5, which are "equal" in radius
FORCE_NO_SYMBOL $13DA
COMMENT $13DC tmp 1 is current 1 radius for scoopy check
FORCE_SYMBOL $13DC tmp3_tmp
COMMENT $13DF make x 0 based 0 - 255
FORCE_NO_SYMBOL $13DF
COMMENT $13E1 tmp2_tmp is zero based shot x position
FORCE_SYMBOL $13E1 tmp2_tmp
FORCE_SYMBOL $13E4 tmp3_tmp
FORCE_SYMBOL $13E7 tmp3_tmp
FORCE_SYMBOL $13EA tmp3_tmp
COMMENT_LINE $13ED in b now 3 radii to the left of zero based shot position
COMMENT_LINE $13ED might be OOB
COMMENT_LINE $13ED therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $13ED and take as lowest position "0"
FORCE_SYMBOL $13ED tmp2_tmp
FORCE_NO_SYMBOL $13F2
COMMENT $13F7 reload zero based shot x position
FORCE_SYMBOL $13F7 tmp2_tmp
FORCE_SYMBOL $13FA tmp3_tmp
FORCE_SYMBOL $13FD tmp3_tmp
FORCE_SYMBOL $1400 tmp3_tmp
COMMENT_LINE $1403 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $1403 might be OOB
COMMENT_LINE $1403 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $1403 and take as highest position "255"
FORCE_SYMBOL $1403 tmp2_tmp
FORCE_NO_SYMBOL $1408
COMMENT_LINE $140D test for center radii are done
COMMENT_LINE $140D with scoopy unmodified x radius
COMMENT_LINE $140D correct it!
COMMENT_LINE $140D radii must be chose, so that
COMMENT_LINE $140D no overflow/underflow can occur!
COMMENT $140D reload zero based shot x position
FORCE_SYMBOL $140D tmp2_tmp
FORCE_SYMBOL $1410 SHOT_RADIUS
COMMENT $1415 reload zero based shot x position
FORCE_SYMBOL $1415 tmp2_tmp
FORCE_SYMBOL $1418 SHOT_RADIUS
COMMENT $141C max
FORCE_NO_SYMBOL $141C
COMMENT $1421 normally this is done in "stars" - here we have to do it "manually"
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 always use testShot + 5 for testShot 2
FORCE_NO_SYMBOL $1421
FORCE_SYMBOL $1423 tmp3_tmp
FORCE_SYMBOL $1426 testShot
FORCE_SYMBOL $1429 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $142F NEXT_SHOT_OBJECT
FORCE_SYMBOL $1431 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $1437 was tst
FORCE_SYMBOL $1437 tmp3_tmp
FORCE_SYMBOL $143C tmp3_tmp
FORCE_SYMBOL $143F playershotlist_objects_head
COMMENT_LINE $1442 new
FORCE_SYMBOL $1442 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $1448 new end
FORCE_SYMBOL $144B enemyMINY
FORCE_SYMBOL $144E Y_POS
COMMENT $1452 was tst
FORCE_SYMBOL $1452 tmp3_tmp
FORCE_NO_SYMBOL $1457
FORCE_SYMBOL $145A test2Shot
FORCE_SYMBOL $145D testShot
FORCE_SYMBOL $1465 OBJECT_LIST_COMPARE_ADDRESS
FORCE_NO_SYMBOL $146B
FORCE_SYMBOL $146E test2Shot
FORCE_SYMBOL $1476 Y_POS
FORCE_SYMBOL $1478 shot_y_radius_corrdction
FORCE_SYMBOL $147D SHOT_RADIUS
FORCE_SYMBOL $1481 SHOT_RADIUS1
FORCE_SYMBOL $1485 SHOT_RADIUS4
FORCE_NO_SYMBOL $1489
FORCE_SYMBOL $148D SHOT_RADIUS3
FORCE_NO_SYMBOL $1491
FORCE_SYMBOL $1495 SHOT_RADIUS2
FORCE_NO_SYMBOL $1499
FORCE_SYMBOL $149D SHOT_RADIUS6
FORCE_NO_SYMBOL $14A1
COMMENT_LINE $14A5 must be 1 or 5, which are "equal" in radius
FORCE_NO_SYMBOL $14A5
COMMENT $14A7 tmp 1 is current 1 radius for scoopy check
FORCE_SYMBOL $14A7 tmp3_tmp
COMMENT $14AA make x 0 based 0 - 255
FORCE_NO_SYMBOL $14AA
COMMENT $14AC tmp2_tmp is zero based shot x position
FORCE_SYMBOL $14AC tmp2_tmp
FORCE_SYMBOL $14AF tmp3_tmp
FORCE_SYMBOL $14B2 tmp3_tmp
FORCE_SYMBOL $14B5 tmp3_tmp
COMMENT_LINE $14B8 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $14B8 might be OOB
COMMENT_LINE $14B8 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $14B8 and take as lowest position "0"
FORCE_SYMBOL $14B8 tmp2_tmp
FORCE_NO_SYMBOL $14BD
COMMENT $14C2 reload zero based shot x position
FORCE_SYMBOL $14C2 tmp2_tmp
FORCE_SYMBOL $14C5 tmp3_tmp
FORCE_SYMBOL $14C8 tmp3_tmp
FORCE_SYMBOL $14CB tmp3_tmp
COMMENT_LINE $14CE in b now 3 radii to the right of zero based shot position
COMMENT_LINE $14CE might be OOB
COMMENT_LINE $14CE therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $14CE and take as highest position "255"
FORCE_SYMBOL $14CE tmp2_tmp
FORCE_NO_SYMBOL $14D3
COMMENT_LINE $14D8 test for center radii are done
COMMENT_LINE $14D8 with scoopy unmodified x radius
COMMENT_LINE $14D8 correct it!
COMMENT_LINE $14D8 radii must be chose, so that
COMMENT_LINE $14D8 no overflow/underflow can occur!
COMMENT $14D8 reload zero based shot x position
FORCE_SYMBOL $14D8 tmp2_tmp
FORCE_SYMBOL $14DB SHOT_RADIUS
COMMENT $14E0 reload zero based shot x position
FORCE_SYMBOL $14E0 tmp2_tmp
FORCE_SYMBOL $14E3 SHOT_RADIUS
COMMENT $14E7 max
FORCE_NO_SYMBOL $14E7
COMMENT_LINE $14EC veryify that testShot is not the same
COMMENT_LINE $14EC ....
FORCE_NO_SYMBOL $14EC
FORCE_SYMBOL $14EE enemyMINY
FORCE_SYMBOL $14F1 playerWasHitFor
FORCE_SYMBOL $14F6 allowBossShots
FORCE_SYMBOL $14F9 initPlayerShotList
FORCE_SYMBOL $14FC playerDying
COMMENT_LINE $14FF ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $14FF doFighterPrep
FORCE_NO_SYMBOL $14FF
FORCE_SYMBOL $1502 jsrBank0_fromBank3_Shift
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1505 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1505 SHOTS - boss is allowed to fire more than 10 shots!
COMMENT_LINE $1505 lda      #MAX_SHOT_OBJECTS_BOSS
FORCE_SYMBOL $1505 shotobject_list
FORCE_SYMBOL $1508 shotlist_empty_head
FORCE_SYMBOL $150B SHOTS_DONE
FORCE_SYMBOL $150F ShotStruct
FORCE_SYMBOL $1511 NEXT_SHOT_OBJECT
FORCE_NO_SYMBOL $1513
FORCE_SYMBOL $151A NEXT_SHOT_OBJECT
FORCE_SYMBOL $151D shotlist_objects_head
COMMENT_LINE $1521 ;;;;;;;;;;;;;
FORCE_NO_SYMBOL $1521
FORCE_SYMBOL $1523 shotSpeed
FORCE_SYMBOL $1526 initLevelContinue
FORCE_SYMBOL $1529 bossMoveDir
COMMENT_LINE $152C ensure no scoop in boss
FORCE_SYMBOL $152C playerBonusActive
FORCE_SYMBOL $152F BITFIELD_NOT_SCOOP
FORCE_SYMBOL $1531 playerBonusActive
FORCE_NO_SYMBOL $1534
FORCE_SYMBOL $1536 allowBossShots
COMMENT_LINE $153A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $153A isBoss1
FORCE_SYMBOL $153D diverseFlags
FORCE_SYMBOL $1540 BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_NO_SYMBOL $1542
FORCE_SYMBOL $1546 isBoss1
FORCE_SYMBOL $1549 diverseFlags
FORCE_NO_SYMBOL $154C
FORCE_SYMBOL $154E diverseFlags
FORCE_SYMBOL $1551 lockPurchased
FORCE_NO_SYMBOL $1554
COMMENT $1556 switch off scoopy shielded
FORCE_SYMBOL $1556 lockPurchased
FORCE_SYMBOL $1559 allowBossShots
FORCE_SYMBOL $155C initPlayerShotList
FORCE_SYMBOL $155F addScore25000
FORCE_NO_SYMBOL $1562
FORCE_SYMBOL $1564 boss3ShieldCount
FORCE_NO_SYMBOL $1567
FORCE_SYMBOL $156A bossTimer
FORCE_SYMBOL $156D bossExplosionSpace1
FORCE_SYMBOL $1570 initRandomBossExplosion
FORCE_SYMBOL $1573 bossExplosionSpace2
FORCE_SYMBOL $1576 initRandomBossExplosion
FORCE_SYMBOL $1579 bossExplosionSpace3
FORCE_SYMBOL $157C initRandomBossExplosion
COMMENT_LINE $157F hack to circumvent player from shooting!
FORCE_SYMBOL $157F current_button_state
FORCE_SYMBOL $1582 bossFightPlayerStuff
COMMENT $1585 JoyDigitalHorizontal00
FORCE_NO_SYMBOL $1585
FORCE_SYMBOL $1588 jsrBank0X
FORCE_SYMBOL $158B drunkTimer
FORCE_SYMBOL $1590 drunkTimer
FORCE_SYMBOL $1593 Vec_Joy_1_X
FORCE_SYMBOL $1598 Vec_Joy_1_X
COMMENT $159B doymsound100
FORCE_NO_SYMBOL $159B
FORCE_SYMBOL $159E jsrBank1_fromBank3_T1
FORCE_SYMBOL $15A1 bossTimer
FORCE_NO_SYMBOL $15A4
FORCE_SYMBOL $15AA bossExtroPointer
FORCE_NO_SYMBOL $15AD
FORCE_SYMBOL $15AF calibrationZero7
FORCE_SYMBOL $15B2 explosionCount
FORCE_NO_SYMBOL $15B5
COMMENT_LINE $15B9 draw Explosion
COMMENT_LINE $15B9 optimization pending (in Move etc)
FORCE_SYMBOL $15B9 bossExplosionSpace1
COMMENT $15BC position
FORCE_SYMBOL $15BC EX_START_SIZE
COMMENT $15BE * has not surpassed the max value, then
FORCE_SYMBOL $15BE EX_MAX_SIZE
FORCE_SYMBOL $15C2 initRandomBossExplosion
FORCE_SYMBOL $15C5 doBossExplosion
FORCE_SYMBOL $15C8 bossExplosionSpace2
COMMENT $15CB position
FORCE_SYMBOL $15CB EX_START_SIZE
COMMENT $15CD * has not surpassed the max value, then
FORCE_SYMBOL $15CD EX_MAX_SIZE
FORCE_SYMBOL $15D1 initRandomBossExplosion
FORCE_SYMBOL $15D4 doBossExplosion
FORCE_SYMBOL $15D7 bossExplosionSpace3
COMMENT $15DA position
FORCE_SYMBOL $15DA EX_START_SIZE
COMMENT $15DC * has not surpassed the max value, then
FORCE_SYMBOL $15DC EX_MAX_SIZE
FORCE_SYMBOL $15E0 initRandomBossExplosion
FORCE_SYMBOL $15E3 doBossExplosion
COMMENT_LINE $15E6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $15E8 displayBossResult00
FORCE_NO_SYMBOL $15E8
FORCE_SYMBOL $15EB jsrBank0X
FORCE_SYMBOL $15EE bossTimer
FORCE_SYMBOL $15F3 bossTimer
FORCE_SYMBOL $15F8 isBoss1
COMMENT_LINE $15FD initialize the empty object list
COMMENT_LINE $15FD finish everything and go on to next level
FORCE_SYMBOL $15FD initNormalBonus
FORCE_SYMBOL $1600 initNormalJMPPointer
FORCE_SYMBOL $1603 initNormalEnemies
FORCE_SYMBOL $1607 tmp1
FORCE_SYMBOL $160A noBonusLevel_nl
COMMENT_LINE $160D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $160D shrink boss
COMMENT_LINE $160D & explode
FORCE_NO_SYMBOL $160D
FORCE_SYMBOL $1610 bossPosY
COMMENT_LINE $1613 hack to circumvent player from shooting!
FORCE_SYMBOL $1613 bossFightPlayerStuff
COMMENT $1616 JoyDigitalHorizontal00
FORCE_NO_SYMBOL $1616
FORCE_SYMBOL $1619 jsrBank0X
FORCE_SYMBOL $161C drunkTimer
FORCE_SYMBOL $1621 drunkTimer
FORCE_SYMBOL $1624 Vec_Joy_1_X
FORCE_SYMBOL $1629 Vec_Joy_1_X
COMMENT $162C doymsound100
FORCE_NO_SYMBOL $162C
FORCE_SYMBOL $162F jsrBank1_fromBank3_T1
FORCE_SYMBOL $1632 boss1Scale
COMMENT $1637 displayBoss1
FORCE_NO_SYMBOL $1637
FORCE_SYMBOL $163A jsrBank0X
COMMENT $163F doBoss1Explosion
FORCE_NO_SYMBOL $163F
FORCE_SYMBOL $1642 jsrBank0X
COMMENT $1645 doBoss1Explosion
FORCE_NO_SYMBOL $1645
FORCE_SYMBOL $1648 jsrBank0X
COMMENT $164B doBoss1Explosion
FORCE_NO_SYMBOL $164B
FORCE_SYMBOL $164E jsrBank0X
COMMENT_LINE $1653 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1653 entry an angle 0-63 - which means 0-360 in b
COMMENT_LINE $1653 result in D (signed values) (y,x coordinate)
COMMENT_LINE $1653 a = y = sin, b = x = cos (which is acually mathematically wrong)
FORCE_SYMBOL $1653 BIOS_SIN_TABLE
COMMENT $1657 is bit 5 set if so > 180
FORCE_NO_SYMBOL $1657
FORCE_NO_SYMBOL $165B
COMMENT $165F half it
COMMENT $1660 >180 -> sin is negative
COMMENT_LINE $1661 cos start
COMMENT $1661 prepare cosinus
FORCE_NO_SYMBOL $1661
FORCE_NO_SYMBOL $1664
FORCE_NO_SYMBOL $1668
COMMENT $1670 half it
COMMENT $1671 prepare cosinus
FORCE_NO_SYMBOL $1671
FORCE_NO_SYMBOL $1674
FORCE_NO_SYMBOL $1678
COMMENT_LINE $167F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $167F bonusSpawnPosition
FORCE_NO_SYMBOL $1682
FORCE_SYMBOL $1686 random_seed
FORCE_NO_SYMBOL $168C
FORCE_SYMBOL $168E random_seed
FORCE_NO_SYMBOL $1691
FORCE_NO_SYMBOL $1693
FORCE_NO_SYMBOL $1699
FORCE_SYMBOL $169B random_seed
FORCE_NO_SYMBOL $16A1
FORCE_SYMBOL $16A3 random_seed
FORCE_NO_SYMBOL $16A6
FORCE_NO_SYMBOL $16A9
FORCE_SYMBOL $16AB bonusSpawnPosition
FORCE_SYMBOL $16AE spawnEnemy
COMMENT $16B1 savety measure
FORCE_SYMBOL $16B3 bonusSpawnPosition
COMMENT $16B6 set start pos
FORCE_SYMBOL $16B6 Y_POS
COMMENT $16BA negative means this enemy is an explosion
FORCE_SYMBOL $16BA ALL_PURPOSE
COMMENT $16BD fallCashBehaviour
FORCE_SYMBOL $16BD fallCashBehaviour
FORCE_SYMBOL $16C0 BEHAVIOUR
FORCE_SYMBOL $16C2 ANIM_POSITION
FORCE_NO_SYMBOL $16C6
COMMENT_LINE $16C9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $16C9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $16C9 ***************************************************************************
COMMENT_LINE $16C9 DATA SECTION
COMMENT_LINE $16C9 ***************************************************************************
COMMENT_LINE $16C9 -----------------------------------------------------------------------------
COMMENT_LINE $1710 rankNegativeString
COMMENT_LINE $1710 db       "rank-", $80
COMMENT_LINE $1791 extraShot4
COMMENT_LINE $1791 db       "SHOT 4", $80
COMMENT_LINE $17D7 -----------------------------------------------------------------------------
COMMENT_LINE $0000 -----------------------------------------------------------------------------
FORCE_SYMBOL $17D7 calibrationZero7
FORCE_SYMBOL $17DA gameScale
FORCE_SYMBOL $17DD VIA_t1_cnt_lo
FORCE_SYMBOL $17E0 VIA_shift_reg
FORCE_NO_SYMBOL $17E2
FORCE_SYMBOL $17E5 Moveto_d
FORCE_SYMBOL $17E8 OBJECT_SCALE
FORCE_SYMBOL $17EA VIA_t1_cnt_lo
FORCE_SYMBOL $17EC SM_Fighter_0
COMMENT $17EF twice the speed ofdraw synced AND calibrated!
FORCE_SYMBOL $17EF SMVB_drawSmart
FORCE_SYMBOL $17F2 calibrationZero7
FORCE_SYMBOL $17F6 VIA_shift_reg
FORCE_NO_SYMBOL $17F8
FORCE_SYMBOL $17FB Moveto_d
FORCE_SYMBOL $17FE OBJECT_SCALE
FORCE_SYMBOL $1800 VIA_t1_cnt_lo
FORCE_SYMBOL $1802 BugSin_0
COMMENT_LINE $1805 ...
FORCE_SYMBOL $1805 backFromBugPrintCalib
FORCE_SYMBOL $1808 ENEMY_DONE_A
FORCE_SYMBOL $180D ENEMY_DONE
FORCE_SYMBOL $1814 calibrationZero7
FORCE_SYMBOL $1818 VIA_shift_reg
FORCE_NO_SYMBOL $181A
FORCE_SYMBOL $181D Moveto_d
FORCE_SYMBOL $1820 OBJECT_SCALE
FORCE_SYMBOL $1822 VIA_t1_cnt_lo
FORCE_SYMBOL $1824 Bug_Destroyer
COMMENT_LINE $1827 ...
FORCE_SYMBOL $1827 backFromBugPrintCalib2
FORCE_SYMBOL $182A ENEMY_DONE_A
FORCE_SYMBOL $182D ENEMY_DONE
COMMENT_LINE $1837 -----------------------------------------------------------------------------
COMMENT $1837 macros
COMMENT_LINE $1837 macros only: bank 3
COMMENT_LINE $0000 colision detection player shot -> enemy
COMMENT_LINE $0000 only two shots are tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $0000 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $0000 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $0000 ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $0000 laser
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $0000 for "easyness" - just we say here if
COMMENT_LINE $0000 y pos of shot is >= enemyPos than we hit!
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 pos of boss2, boss start at the top
COMMENT_LINE $0000 suba #$20; reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 for laser cut off
COMMENT $0000 main laser only
COMMENT_LINE $0000 ..........
COMMENT $0000 laser
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $0000 for "easyness" - just we say here if
COMMENT_LINE $0000 y pos of shot is >= enemyPos than we hit!
COMMENT $0000 pos of boss2, boss start at the top
COMMENT $0000 reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 no scoopy with boss Swarm!
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 pos of boss2, boss start at the top
COMMENT $0000 reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 for laser cut off
COMMENT $0000 main laser only
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 todo
COMMENT_LINE $0000 EXACTLY SAME AS BOSS 4
COMMENT $0000 laser
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $0000 for "easyness" - just we say here if
COMMENT_LINE $0000 y pos of shot is >= enemyPos than we hit!
COMMENT $0000 pos of boss2, boss start at the top
COMMENT $0000 pos of boss2, boss start at the top
COMMENT_LINE $0000 subd #$28; reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 no scoopy with boss Swarm!
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 pos of boss2, boss start at the top
COMMENT $0000 reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 for laser cut off
COMMENT $0000 main laser only
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 todo
COMMENT $0000 laser
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $0000 for "easyness" - just we say here if
COMMENT_LINE $0000 y pos of shot is >= enemyPos than we hit!
COMMENT $0000 pos of boss2, boss start at the top
COMMENT $0000 pos of boss2, boss start at the top
COMMENT_LINE $0000 subd #$28; reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 no scoopy with boss Swarm!
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 pos of boss2, boss start at the top
COMMENT $0000 reduce by some offset to get the "mouth" part
COMMENT_LINE $0000 for laser cut off
COMMENT $0000 main laser only
COMMENT_LINE $0000 ..........
COMMENT_LINE $1837 diverse banks, see "if else clauses"
COMMENT_LINE $1837 Boss "Death star"
COMMENT_LINE $1837 ;;;;;; *****************************************
COMMENT_LINE $1837 ;;;;;; * BANK 3 *
COMMENT_LINE $1837 ;;;;;; *****************************************
COMMENT_LINE $1837 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1837 playerNumberOfBulletsPerShot
COMMENT $183A laser
FORCE_NO_SYMBOL $183A
COMMENT_LINE $183E "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $183E we do not need to test the shot itself for validity!
COMMENT_LINE $183E yTest
COMMENT_LINE $183E for "easyness" - just we say here if
COMMENT_LINE $183E y pos of shot is >= enemyPos than we hit!
COMMENT $183E pos of boss2, boss start at the top
FORCE_SYMBOL $183E bossPosY
FORCE_NO_SYMBOL $1841
FORCE_SYMBOL $1843 enemyMINY
COMMENT $1846 pos of boss2, boss start at the top
FORCE_SYMBOL $1846 bossPosY
COMMENT_LINE $184A subd #$28; reduce by some offset to get the "mouth" part
FORCE_SYMBOL $184A tmp3_tmp
FORCE_SYMBOL $184D T_YPOS
FORCE_SYMBOL $1850 tmp3_tmp
FORCE_SYMBOL $1855 tmp3_tmp
FORCE_SYMBOL $185A tmp3_tmp
FORCE_NO_SYMBOL $185D
COMMENT_LINE $1863 ;;;; y done
COMMENT_LINE $1863 xTest
FORCE_SYMBOL $1863 bossPosX
COMMENT $1866 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $1866
COMMENT_LINE $1868 test center
FORCE_SYMBOL $1868 tmp1
FORCE_SYMBOL $186B BOSS3_HIT_X_OFFSET
FORCE_NO_SYMBOL $186F
FORCE_SYMBOL $1871 T_XPOS0_MINUS_1_RADIUS
COMMENT $1873 enemy is on left side of shot
COMMENT_LINE $1875 in b 0 based enemy pos
FORCE_NO_SYMBOL $1879
FORCE_SYMBOL $187B T_XPOS0_PLUS_1_RADIUS
COMMENT $187D enemy is on right side of shot
FORCE_SYMBOL $187F tmp2_tmp_unique
FORCE_SYMBOL $1882 removeCurrentShotAndObjectBoss
COMMENT_LINE $1885 ..........
FORCE_SYMBOL $1885 backJump
COMMENT $1889 pos of boss2, boss start at the top
FORCE_SYMBOL $1889 bossPosY
COMMENT $188C reduce by some offset to get the "mouth" part
FORCE_NO_SYMBOL $188C
COMMENT_LINE $188E for laser cut off
FORCE_SYMBOL $188E laserTmp
COMMENT $1891 main laser only
FORCE_SYMBOL $1891 laserTmp2
COMMENT_LINE $1896 .....................................................
FORCE_SYMBOL $1896 lockPurchased
FORCE_SYMBOL $1899 ENEMY_DESTRUCTED_FLAG
FORCE_SYMBOL $189B lockPurchased
COMMENT_LINE $189E destroy scoopies!
FORCE_NO_SYMBOL $189E
FORCE_SYMBOL $18A1 displayExplosions
FORCE_SYMBOL $18A4 scoopEnemy1
FORCE_SYMBOL $18A7 scoopEnemy2
FORCE_SYMBOL $18AA MAX_SHOT_OBJECTS_BOSS
FORCE_SYMBOL $18AC initBossFight
FORCE_NO_SYMBOL $18AF
FORCE_SYMBOL $18B2 PLAYERSHOTS_DONE_A
COMMENT_LINE $18B5 enemies
FORCE_SYMBOL $18B5 MAX_ENEMY_OBJECTS_BOSS4
FORCE_SYMBOL $18B7 enemyobject_list
FORCE_SYMBOL $18BA enemylist_empty_head
FORCE_SYMBOL $18BD ENEMY_DONE
FORCE_SYMBOL $18C1 EnemyStruct
FORCE_SYMBOL $18C4 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $18C6 BIT_MASK
FORCE_NO_SYMBOL $18C9
FORCE_SYMBOL $18D1 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $18D4 enemylist_objects_head
FORCE_SYMBOL $18D8 boss4WeaponActive
FORCE_SYMBOL $18DB allowBossShots
COMMENT_LINE $18DE quick hack - zero 2 laser shots
FORCE_SYMBOL $18DE boss4laserData
FORCE_NO_SYMBOL $18E1
FORCE_SYMBOL $18F0 boss4explosionData
FORCE_SYMBOL $18FF signFlag
FORCE_SYMBOL $1902 b4_divide_tmp
FORCE_SYMBOL $1905 b4_tmp1
FORCE_SYMBOL $1908 b4_tmp2
FORCE_NO_SYMBOL $190B
FORCE_SYMBOL $190D levelBulletBorder
FORCE_SYMBOL $1910 lukeX
COMMENT_LINE $1914 .....................................................
COMMENT_LINE $1914 Boss  intro
COMMENT $1916 initTitleRAM
FORCE_NO_SYMBOL $1916
FORCE_SYMBOL $1919 jsrBank0X
COMMENT $191C boss4Intro
FORCE_NO_SYMBOL $191C
FORCE_SYMBOL $191F jsrBank0_fromBank3_T1
FORCE_SYMBOL $1922 subInitBoss4
FORCE_SYMBOL $1925 displayExplosions
FORCE_SYMBOL $1928 allowBossShots
COMMENT_LINE $192B initialize boss fight 3 for real
COMMENT_LINE $192B done in bank 0
FORCE_SYMBOL $192E bossPosY
FORCE_SYMBOL $1931 diverseFlags
COMMENT $1934 boss flag
FORCE_NO_SYMBOL $1934
FORCE_SYMBOL $1936 diverseFlags
COMMENT $1939 adjustShotDamage
FORCE_NO_SYMBOL $1939
FORCE_SYMBOL $193C jsrBank0X
FORCE_SYMBOL $193F difficulty
FORCE_NO_SYMBOL $1942
FORCE_SYMBOL $1956 BOSS4_HITPOINTS
FORCE_SYMBOL $1959 bossHP
FORCE_SYMBOL $195C enemies_done_boss4
FORCE_SYMBOL $195F ENEMY_DONE_A
FORCE_SYMBOL $1962 enemiesShots_done_boss4
FORCE_SYMBOL $1965 SHOTS_DONE_A
FORCE_SYMBOL $1968 boss4ShotStage
COMMENT $196B 2s
FORCE_NO_SYMBOL $196B
FORCE_SYMBOL $196D boss4ShotStageDelayCounter
COMMENT_LINE $1970 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1970 CBFC ; correct the stack to default address
FORCE_SYMBOL $1970 MY_STACK
COMMENT_LINE $1974 initialize all "round" stuff for player
FORCE_SYMBOL $1974 bossFightPlayerStuff
FORCE_SYMBOL $1977 bulletSpawnAt
FORCE_SYMBOL $197C spawnShot
FORCE_NO_SYMBOL $197F
FORCE_SYMBOL $1982 bulletSpawnAt
FORCE_SYMBOL $1985 isBugShot
FORCE_SYMBOL $1988 bossWasHit
FORCE_NO_SYMBOL $198B
FORCE_SYMBOL $198D laserLowestY
FORCE_NO_SYMBOL $1990
FORCE_SYMBOL $1993 laserEnemyPointer
FORCE_SYMBOL $1996 tmp2_tmp_unique
COMMENT $1999 ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $1999 laserTag
FORCE_SYMBOL $199C testShot
FORCE_NO_SYMBOL $19A0
FORCE_SYMBOL $19A4 backToTestBoss4_1
FORCE_SYMBOL $19A7 backJump
FORCE_SYMBOL $19AA coldetectBoss3_4
FORCE_SYMBOL $19AD test2Shot
FORCE_NO_SYMBOL $19B1
FORCE_SYMBOL $19B5 backToTestBoss4_2
FORCE_SYMBOL $19B8 backJump
FORCE_SYMBOL $19BB coldetectBoss3_4
COMMENT_LINE $19BE check for boss death
FORCE_SYMBOL $19BE bossHP
COMMENT_LINE $19C5 display boss in bank 0
COMMENT $19C5 displayBoss4
FORCE_NO_SYMBOL $19C5
FORCE_SYMBOL $19C8 jsrBank0X
FORCE_SYMBOL $19CB boss4ShotStageDelayCounter
COMMENT_LINE $19D0 do fight!
FORCE_SYMBOL $19D0 boss4ShotStage
FORCE_NO_SYMBOL $19D3
FORCE_SYMBOL $19D5 boss4ShotStageDelayCounter
FORCE_SYMBOL $19D8 boss4ShotStage
FORCE_NO_SYMBOL $19DE
FORCE_SYMBOL $19E0 boss4ShotStageDelayCounter
FORCE_SYMBOL $19E3 gameScale
FORCE_SYMBOL $19E6 VIA_t1_cnt_lo
COMMENT $19E8 claibration reset
FORCE_SYMBOL $19E8 Reset0Ref
FORCE_SYMBOL $19EB boss4ShotStage
COMMENT_LINE $19EE stage 0: waiting for weapon initialze
COMMENT_LINE $19F1 stage 1: start rotating
COMMENT_LINE $19F3 stage 2-8: switch on supporting lasers
FORCE_SYMBOL $19F3 bossPosY
FORCE_SYMBOL $19FA Moveto_d
FORCE_SYMBOL $19FD boss4ShotStage
FORCE_NO_SYMBOL $1A00
FORCE_NO_SYMBOL $1A04
FORCE_SYMBOL $1A07 boss4ShotLineCounter
FORCE_SYMBOL $1A0C VIA_t1_cnt_lo
FORCE_SYMBOL $1A0E WeaponList
COMMENT_LINE $1A11 DRAW
COMMENT $1A11 Get next coordinate pair
COMMENT $1A13 Send Y to A/D
FORCE_SYMBOL $1A13 VIA_port_a
COMMENT $1A15 Enable mux
FORCE_SYMBOL $1A15 VIA_port_b
COMMENT $1A18 Disable mux
FORCE_SYMBOL $1A18 VIA_port_b
COMMENT $1A1A Send X to A/D
FORCE_SYMBOL $1A1A VIA_port_a
FORCE_NO_SYMBOL $1A1C
COMMENT $1A1F Clear T1H
FORCE_SYMBOL $1A1F VIA_t1_cnt_hi
FORCE_SYMBOL $1A21 VIA_shift_reg
COMMENT $1A23 Get next coordinate pair
FORCE_SYMBOL $1A2F VIA_shift_reg
COMMENT_LINE $1A31 MOVE BACK
COMMENT $1A31 Send Y to A/D
FORCE_SYMBOL $1A31 VIA_port_a
COMMENT $1A33 Enable mux
FORCE_SYMBOL $1A33 VIA_port_b
COMMENT $1A36 Disable mux
FORCE_SYMBOL $1A36 VIA_port_b
COMMENT $1A38 Send X to A/D
FORCE_SYMBOL $1A38 VIA_port_a
COMMENT $1A3A Clear T1H
FORCE_SYMBOL $1A3A VIA_t1_cnt_hi
FORCE_SYMBOL $1A41 boss4ShotLineCounter
FORCE_NO_SYMBOL $1A46
COMMENT $1A48 /BLANK low and /ZERO low
FORCE_SYMBOL $1A48 VIA_cntl
COMMENT_LINE $1A4A ..........
FORCE_SYMBOL $1A4A boss4ShotStage
FORCE_NO_SYMBOL $1A4D
COMMENT_LINE $1A51 stage: 9 prepare laser, next stage 4 seconds
FORCE_NO_SYMBOL $1A55
COMMENT_LINE $1A57 stage: 10 start firing
COMMENT_LINE $1A5B stage 11: reset to stage 0
FORCE_SYMBOL $1A5B boss4ShotStage
FORCE_SYMBOL $1A5E boss4WeaponActive
FORCE_SYMBOL $1A61 initVader
COMMENT_LINE $1A66 laserIsReady
COMMENT_LINE $1A66 fire shots each ## rounds
FORCE_NO_SYMBOL $1A66
FORCE_SYMBOL $1A68 boss4WeaponActive
FORCE_SYMBOL $1A6B handleBossLaserShots
FORCE_SYMBOL $1A6E calibrationZero7
FORCE_SYMBOL $1A71 drawLuke
FORCE_NO_SYMBOL $1A74
COMMENT $1A76 /BLANK low and /ZERO low
FORCE_SYMBOL $1A76 VIA_cntl
FORCE_SYMBOL $1A78 gameScale
FORCE_SYMBOL $1A7B VIA_t1_cnt_lo
COMMENT_LINE $1A7D jsr drawVader vader is enemy
FORCE_SYMBOL $1A7D DEFAULT_ENEMY_INTENSITY
COMMENT $1A7F Store intensity in D/A
FORCE_SYMBOL $1A7F VIA_port_a
COMMENT $1A81 mux disabled channel 2
FORCE_NO_SYMBOL $1A81
FORCE_SYMBOL $1A84 VIA_port_b
COMMENT $1A86 mux enabled channel 2
FORCE_SYMBOL $1A86 VIA_port_b
COMMENT $1A88 turn off mux
FORCE_SYMBOL $1A88 VIA_port_b
FORCE_SYMBOL $1A8A enemylist_objects_head
COMMENT $1A8E (D = y,x) ; do all objects _> jumps to enemies_done_boss4
COMMENT_LINE $1A90 .....................................................
FORCE_SYMBOL $1B44 bonusSpawnCount
FORCE_SYMBOL $1B4B patternDelayCounter
FORCE_NO_SYMBOL $1B4E
FORCE_SYMBOL $1B50 introWaveEnemyDelayCount
FORCE_SYMBOL $1B53 vaderIntroPattern
FORCE_SYMBOL $1B56 introWaveCurrentPattern
FORCE_SYMBOL $1B59 doIntro
COMMENT_LINE $1B5C only one enemy - can do it hardcoded!
FORCE_SYMBOL $1B5C enemylist_objects_head
FORCE_SYMBOL $1B5F enemyIntroPatternBehaviourVader
FORCE_NO_SYMBOL $1B62
COMMENT_LINE $1B65 ..............................................
FORCE_SYMBOL $1B65 lukeX
FORCE_NO_SYMBOL $1B6B
FORCE_SYMBOL $1B6D Intensity_a
FORCE_SYMBOL $1B70 gameScale
FORCE_SYMBOL $1B72 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $1B77
FORCE_SYMBOL $1B7B lukeX
FORCE_SYMBOL $1B7E lukeX
FORCE_NO_SYMBOL $1B89
FORCE_SYMBOL $1B8B lukeX
FORCE_SYMBOL $1B8E bossPosX
FORCE_SYMBOL $1B91 bossPosY
FORCE_NO_SYMBOL $1B94
FORCE_SYMBOL $1B96 Moveto_d
FORCE_NO_SYMBOL $1B99
FORCE_SYMBOL $1B9B VIA_t1_cnt_lo
FORCE_SYMBOL $1B9D XWing
FORCE_SYMBOL $1BA0 SMVB_drawSmart
COMMENT_LINE $1BA4 ..............................................
FORCE_SYMBOL $1BA4 difficulty
FORCE_NO_SYMBOL $1BA7
COMMENT_LINE $1BAB deca
COMMENT_LINE $1BAB beq noextendedLaser2
COMMENT_LINE $1BAB salvae
COMMENT_LINE $1BAB ldu      #boss4laserData
COMMENT_LINE $1BAB lda      boss4ShotStageDelayCounter
COMMENT_LINE $1BAB cmpa     #LASER_TIME - 5
COMMENT_LINE $1BAB beq      fireLaser
COMMENT_LINE $1BAB cmpa     #LASER_TIME - 5 -BETWEEN_TIME/2-BETWEEN_TIME/2-BETWEEN_TIME/2
COMMENT_LINE $1BAB beq      fireLaser
COMMENT_LINE $1BAB leau     4,u
COMMENT_LINE $1BAB cmpa     #LASER_TIME - 5 -BETWEEN_TIME/2
COMMENT_LINE $1BAB beq      fireLaser
COMMENT_LINE $1BAB cmpa     #LASER_TIME - 5 -BETWEEN_TIME/2-BETWEEN_TIME/2-BETWEEN_TIME/2-BETWEEN_TIME/2
COMMENT_LINE $1BAB beq      fireLaser
COMMENT_LINE $1BAB leau     4,u
COMMENT_LINE $1BAB cmpa     #LASER_TIME - 5 -BETWEEN_TIME/2-BETWEEN_TIME/2
COMMENT_LINE $1BAB beq      fireLaser
COMMENT_LINE $1BAB jmp      nothingSpecialAtAll
COMMENT_LINE $1BAB salvae
FORCE_SYMBOL $1BAB boss4laserData
FORCE_SYMBOL $1BAE boss4ShotStageDelayCounter
FORCE_NO_SYMBOL $1BB9
FORCE_NO_SYMBOL $1BBF
FORCE_SYMBOL $1BC5 nothingSpecialAtAll
FORCE_SYMBOL $1BC8 boss4laserData
FORCE_SYMBOL $1BCB boss4ShotStageDelayCounter
FORCE_NO_SYMBOL $1BD2
FORCE_NO_SYMBOL $1BD8
FORCE_SYMBOL $1BDE nothingSpecialAtAll
FORCE_NO_SYMBOL $1BE1
FORCE_SYMBOL $1BE4 playerXpos
COMMENT $1BE7 half the player pos
FORCE_SYMBOL $1BE8 boss4LaserTarget
FORCE_SYMBOL $1BEA bossPosY
FORCE_SYMBOL $1BED boss4shotMax
FORCE_SYMBOL $1BF1 boss4shotMin
FORCE_SYMBOL $1BF3 nothingSpecialAtAll
COMMENT_LINE $1BF6 ..............................................
FORCE_SYMBOL $1BF6 boss4laserData
FORCE_NO_SYMBOL $1BF9
FORCE_NO_SYMBOL $1BFF
FORCE_NO_SYMBOL $1C01
FORCE_NO_SYMBOL $1C07
FORCE_NO_SYMBOL $1C09
COMMENT_LINE $1C10 ..............................................
COMMENT_LINE $1C10 input U pointer to laser struct
FORCE_SYMBOL $1C10 gameScale
FORCE_SYMBOL $1C13 VIA_t1_cnt_lo
COMMENT_LINE $1C15 get lazer start
FORCE_SYMBOL $1C15 bossPosY
FORCE_SYMBOL $1C1C boss4LaserStartTmp
COMMENT $1C20 start of weapon pos (1/2)
FORCE_SYMBOL $1C20 maxYSum
FORCE_SYMBOL $1C26 boss4LaserTarget
FORCE_SYMBOL $1C2A boss4LaserTargetTmp
FORCE_SYMBOL $1C2D boss4LaserStartTmp
FORCE_SYMBOL $1C30 b4_tmp2
FORCE_SYMBOL $1C33 Moveto_d
FORCE_SYMBOL $1C36 gameScale
FORCE_NO_SYMBOL $1C3B
FORCE_SYMBOL $1C41 VIA_t1_cnt_lo
FORCE_SYMBOL $1C43 boss4shotMax
FORCE_SYMBOL $1C47 boss4LaserTargetTmp
FORCE_SYMBOL $1C4A clipDToMax
FORCE_SYMBOL $1C4D boss4LaserStartTmp
FORCE_SYMBOL $1C50 Moveto_d
FORCE_SYMBOL $1C53 b4_tmp2
FORCE_SYMBOL $1C57 b4_tmp2
FORCE_SYMBOL $1C5D b4_tmp2
FORCE_SYMBOL $1C60 b4_tmp2
FORCE_SYMBOL $1C63 maxYSum
FORCE_SYMBOL $1C66 boss4LaserStartTmp
COMMENT $1C69 start of laser which is LIT
FORCE_SYMBOL $1C69 maxYSum
COMMENT_LINE $1C6E get laser End
FORCE_SYMBOL $1C6E boss4shotMin
FORCE_SYMBOL $1C72 gameScale
FORCE_NO_SYMBOL $1C77
FORCE_SYMBOL $1C7D VIA_t1_cnt_lo
FORCE_SYMBOL $1C7F boss4LaserTargetTmp
FORCE_SYMBOL $1C82 boss4LaserStartTmp
FORCE_SYMBOL $1C8A boss4LaserStartTmp
COMMENT $1C8D Send Y to A/D
FORCE_SYMBOL $1C8D VIA_port_a
COMMENT $1C8F Enable mux
FORCE_SYMBOL $1C8F VIA_port_b
COMMENT $1C92 Disable mux
FORCE_SYMBOL $1C92 VIA_port_b
COMMENT $1C94 Send X to A/D
FORCE_SYMBOL $1C94 VIA_port_a
COMMENT $1C96 Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $1C96
COMMENT $1C99 Put pattern in shift register
FORCE_SYMBOL $1C99 VIA_shift_reg
COMMENT $1C9B Set T1H (scale factor?)
FORCE_SYMBOL $1C9B VIA_t1_cnt_hi
COMMENT $1C9D B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $1C9D
COMMENT $1CA0 Wait for T1 to time out
FORCE_SYMBOL $1CA0 VIA_int_flags
COMMENT $1CA4 Wait a moment more
COMMENT $1CA5 Clear shift register (blank output)
FORCE_SYMBOL $1CA5 VIA_shift_reg
FORCE_NO_SYMBOL $1CA7
COMMENT $1CA9 /BLANK low and /ZERO low
FORCE_SYMBOL $1CA9 VIA_cntl
FORCE_SYMBOL $1CAE b4_tmp2
FORCE_SYMBOL $1CB1 b4_tmp2
FORCE_SYMBOL $1CB6 boss4LaserStartTmp
FORCE_SYMBOL $1CB9 maxYSum
COMMENT $1CBC end of laser which is LIT
FORCE_SYMBOL $1CBC maxYSum
COMMENT_LINE $1CBF in maxYSum is the start position of the "lit" laser part
FORCE_SYMBOL $1CBF BOSS4_LASER_YEND
FORCE_SYMBOL $1CC5 boss4shotMin
FORCE_SYMBOL $1CC7 boss4shotMin
FORCE_SYMBOL $1CCD boss4shotMin
FORCE_SYMBOL $1CCF BOSS3_LASER_LENGTH
FORCE_SYMBOL $1CD3 boss4shotMin
FORCE_SYMBOL $1CD5 boss4shotMin
FORCE_SYMBOL $1CD9 boss4shotMax
FORCE_SYMBOL $1CDB boss4shotMax
FORCE_NO_SYMBOL $1CDE
FORCE_NO_SYMBOL $1CE1
COMMENT_LINE $1CE4 bra nothingSpecialAtAll
COMMENT_LINE $1CE4 ..............................................
COMMENT_LINE $1CE4 in u current laser pointer
COMMENT_LINE $1CE4 explosion pointer is u + 8
COMMENT_LINE $1CE4 ypos is player "ground"
COMMENT_LINE $1CE4 x pos = boss4LaserTargetTmp+1
COMMENT_LINE $1CE4 struct Boss4GroundExplosion
COMMENT_LINE $1CE4 ds ExPosy, 1
COMMENT_LINE $1CE4 ds ExPosx, 1
COMMENT_LINE $1CE4 ds ExSizeCounter, 1
COMMENT_LINE $1CE4 ds ExSize, 1
COMMENT_LINE $1CE4 end struct
COMMENT_LINE $1CE4 end current laser
COMMENT $1CE8 this is double scale
FORCE_SYMBOL $1CE8 b4_tmp2
FORCE_NO_SYMBOL $1CEC
COMMENT $1CF0 min explosion size
FORCE_NO_SYMBOL $1CF0
COMMENT_LINE $1CF5 ..............................................
COMMENT_LINE $1CF5 in "d"
COMMENT_LINE $1CF5 resulting y is always boss4shotMax, that is the delta of the first move gap
COMMENT $1CF5 assuming boss4shotMax is alsways negative
FORCE_SYMBOL $1CF6 b4_tmp1
COMMENT $1CF9 clear space for DIF, and set dif value
COMMENT_LINE $1CFC sta signFlag ; assuming always moving down -> thus negative
FORCE_SYMBOL $1CFC signFlag
FORCE_NO_SYMBOL $1CFF
COMMENT_LINE $1D04 in a abs(delta)
COMMENT $1D04 x value
FORCE_SYMBOL $1D07 signFlag
COMMENT_LINE $1D0B bvc bPosb4_1 ; $80 has overflow = ->
COMMENT_LINE $1D0B ldb #$7f
COMMENT_LINE $1D0C in d = abs(Ydelta) * abs(x)
COMMENT_LINE $1D0C new X = sign * (d/abs(y))
FORCE_SYMBOL $1D0E signFlag
FORCE_NO_SYMBOL $1D11
COMMENT $1D16 new y is the max
FORCE_NO_SYMBOL $1D16
COMMENT_LINE $1D19 ..............................................
COMMENT_LINE $1D19 -------------------------------------------------------------------------------------------
COMMENT_LINE $1D19 ***************************************************************************
COMMENT_LINE $1D19 divides D by tmp1, result in B
COMMENT_LINE $1D19 uses divide_tmp as storage
COMMENT_LINE $1D19 only 8 bit in tmp1, but must be manually poked to tmp1 + 1
COMMENT_LINE $1D19 sign is correctly handled
COMMENT_LINE $1D19 can probably be optimized like hell
COMMENT_LINE $1D19 perhaps only nearing the result
COMMENT_LINE $1D19 using 2 shifts and a plus
COMMENT_LINE $1D19 might be worth a try,
COMMENT_LINE $1D19 see vectrex emulator for algorithm...
COMMENT_LINE $1D19 could be implemented with a tabel, which in turn
COMMENT_LINE $1D19 could be caclulated on the fly... (upon startup)
COMMENT_LINE $1D19 this makro divides exact, but slow
FORCE_SYMBOL $1D19 b4_divide_tmp
FORCE_SYMBOL $1D21 b4_divide_tmp
FORCE_NO_SYMBOL $1D24
FORCE_SYMBOL $1D2A b4_divide_tmp
FORCE_SYMBOL $1D2D b4_tmp1
FORCE_SYMBOL $1D32 b4_divide_tmp
FORCE_SYMBOL $1D38 b4_divide_tmp
FORCE_SYMBOL $1D3B b4_tmp1
FORCE_SYMBOL $1D40 b4_divide_tmp
COMMENT_LINE $1D44 ..............................................
COMMENT $1D44 laser fires x second
FORCE_SYMBOL $1D44 LASER_TIME
FORCE_SYMBOL $1D46 boss4ShotStageDelayCounter
FORCE_SYMBOL $1D49 boss4ShotStage
FORCE_SYMBOL $1D4C boss4WeaponActive
FORCE_SYMBOL $1D4F nothingSpecialAtAll
COMMENT_LINE $1D52 ..............................................
COMMENT_LINE $1D52 ..............................................
COMMENT $1D52 y, x
COMMENT $1D54 y, x
COMMENT $1D56 y, x
COMMENT $1D58 y, x
COMMENT $1D5A y, x
COMMENT $1D5C y, x
COMMENT $1D5E y, x
COMMENT $1D60 y, x
FORCE_NO_SYMBOL $1D62
COMMENT $1D64 Store intensity in D/A
FORCE_SYMBOL $1D64 VIA_port_a
COMMENT $1D66 mux disabled channel 2
FORCE_NO_SYMBOL $1D66
FORCE_SYMBOL $1D69 VIA_port_b
COMMENT $1D6B mux enabled channel 2
FORCE_SYMBOL $1D6B VIA_port_b
COMMENT $1D6D turn off mux
FORCE_SYMBOL $1D6D VIA_port_b
FORCE_SYMBOL $1D6F shotlist_objects_head
COMMENT $1D73 jumpsto enemiesShots_done_boss4, which is: main1Boss4
COMMENT_LINE $1D75 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1D75 Boss fight done
FORCE_NO_SYMBOL $1D75
FORCE_SYMBOL $1D77 explosionCount
FORCE_SYMBOL $1D7C boss4WeaponActive
FORCE_SYMBOL $1D7F extro4PointerSUB
FORCE_SYMBOL $1D82 bossExtroPointer
FORCE_SYMBOL $1D85 extroBoss
COMMENT $1D88 displayFullDeathstar
FORCE_NO_SYMBOL $1D88
FORCE_SYMBOL $1D8B jsrBank0X
COMMENT_LINE $1D8E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1D8E diverse banks, see "if else clauses"
COMMENT_LINE $1D8E Boss "Sinistar"
COMMENT_LINE $1D8E ;;;;;; *****************************************
COMMENT_LINE $1D8E ;;;;;; * BANK 3 *
COMMENT_LINE $1D8E ;;;;;; *****************************************
COMMENT_LINE $1D8E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $1D8E lockPurchased
FORCE_SYMBOL $1D91 ENEMY_DESTRUCTED_FLAG
FORCE_SYMBOL $1D93 lockPurchased
COMMENT_LINE $1D96 destroy scoopies!
FORCE_NO_SYMBOL $1D96
FORCE_SYMBOL $1D99 bossIntroStage
FORCE_SYMBOL $1D9C scoopEnemy1
FORCE_SYMBOL $1D9F scoopEnemy2
FORCE_SYMBOL $1DA2 MAX_SHOT_OBJECTS_BOSS
FORCE_SYMBOL $1DA4 initBossFight
COMMENT_LINE $1DA7 enemies
FORCE_SYMBOL $1DA7 MAX_ENEMY_OBJECTS_BOSS3
FORCE_SYMBOL $1DA9 enemyobject_list
FORCE_SYMBOL $1DAC enemylist_empty_head
FORCE_SYMBOL $1DAF ENEMY_DONE
FORCE_SYMBOL $1DB3 EnemyStruct
FORCE_SYMBOL $1DB6 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1DB8 BIT_MASK
FORCE_NO_SYMBOL $1DBB
FORCE_SYMBOL $1DC3 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $1DC6 enemylist_objects_head
FORCE_SYMBOL $1DCA boss2Direction
FORCE_NO_SYMBOL $1DCD
FORCE_SYMBOL $1DCF boss2Scale
FORCE_SYMBOL $1DD2 boss3LetterCannonWait
FORCE_SYMBOL $1DD5 boss3ShieldCount
FORCE_SYMBOL $1DD8 boss3Shots
FORCE_SYMBOL $1DDB boss3LetterCannonPointer
FORCE_SYMBOL $1DDE BOSS3_HITPOINTS
FORCE_SYMBOL $1DE1 boss3HPCompare
COMMENT_LINE $1DE4 ldd #boss3MoveData
FORCE_SYMBOL $1DE4 difficulty
FORCE_NO_SYMBOL $1DE7
FORCE_SYMBOL $1DEA boss3MoveData
FORCE_NO_SYMBOL $1DF1
FORCE_SYMBOL $1DF5 boss3MovementPointer
COMMENT_LINE $1DF8 std      boss3MovementPointer
COMMENT_LINE $1DF9 .....................................................
COMMENT_LINE $1DF9 Boss  intro
COMMENT $1DFB initTitleRAM
FORCE_NO_SYMBOL $1DFB
FORCE_SYMBOL $1DFE jsrBank0X
COMMENT $1E01 doBoss3Intro00
FORCE_NO_SYMBOL $1E01
FORCE_SYMBOL $1E04 jsrBank0_fromBank3_T1
COMMENT_LINE $1E09 initialize boss fight 3 for real
COMMENT_LINE $1E09 done in bank 0
FORCE_NO_SYMBOL $1E09
FORCE_SYMBOL $1E0C PLAYERSHOTS_DONE_A
FORCE_SYMBOL $1E12 bossPosY
FORCE_SYMBOL $1E15 initMovementBoss3
FORCE_SYMBOL $1E18 diverseFlags
COMMENT $1E1B boss 3 flag
FORCE_NO_SYMBOL $1E1B
FORCE_SYMBOL $1E1D diverseFlags
COMMENT $1E20 adjustShotDamage
FORCE_NO_SYMBOL $1E20
FORCE_SYMBOL $1E23 jsrBank0X
FORCE_SYMBOL $1E26 difficulty
FORCE_NO_SYMBOL $1E29
FORCE_SYMBOL $1E3D BOSS3_HITPOINTS
FORCE_SYMBOL $1E40 bossHP
FORCE_SYMBOL $1E43 enemies_done_boss3
FORCE_SYMBOL $1E46 ENEMY_DONE_A
FORCE_SYMBOL $1E49 enemiesShots_done_boss3
FORCE_SYMBOL $1E4C SHOTS_DONE_A
COMMENT_LINE $1E4F .....................................................
COMMENT_LINE $1E4F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1E4F CBFC ; correct the stack to default address
FORCE_SYMBOL $1E4F MY_STACK
COMMENT_LINE $1E53 initialize all "round" stuff for player
FORCE_SYMBOL $1E53 bossFightPlayerStuff
FORCE_SYMBOL $1E56 bossWasHit
FORCE_NO_SYMBOL $1E59
FORCE_SYMBOL $1E5B laserLowestY
FORCE_NO_SYMBOL $1E5E
FORCE_SYMBOL $1E61 laserEnemyPointer
FORCE_SYMBOL $1E64 tmp2_tmp_unique
COMMENT $1E67 ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $1E67 laserTag
COMMENT_LINE $1E6A in x the current shot object pointer
FORCE_SYMBOL $1E6A testShot
FORCE_NO_SYMBOL $1E6E
FORCE_SYMBOL $1E72 backToTestBoss3_1
FORCE_SYMBOL $1E75 backJump
FORCE_SYMBOL $1E78 coldetectBoss3_4
FORCE_SYMBOL $1E7B test2Shot
FORCE_NO_SYMBOL $1E7F
FORCE_SYMBOL $1E83 backToTestBoss3_2
FORCE_SYMBOL $1E86 backJump
FORCE_SYMBOL $1E89 coldetectBoss3_4
COMMENT_LINE $1E8C check for boss deat
FORCE_SYMBOL $1E8C bossHP
COMMENT_LINE $1E93 ....................  move boss
COMMENT_LINE $1E93 check if destination is reached
COMMENT_LINE $1E93 if so get next moevement pointer
COMMENT_LINE $1E93 and init next movement
FORCE_SYMBOL $1E93 boss3YposNow16
FORCE_SYMBOL $1E96 boss3Ypos16
FORCE_SYMBOL $1E9B boss3YposNow16
FORCE_SYMBOL $1E9E boss3XposNow16
FORCE_SYMBOL $1EA1 boss3Xpos16
FORCE_SYMBOL $1EA6 boss3XposNow16
FORCE_SYMBOL $1EA9 boss3YposNow16
FORCE_SYMBOL $1EAC boss3XposNow16
FORCE_SYMBOL $1EAF boss3MovementPointer
FORCE_SYMBOL $1EB2 bossPosY
FORCE_NO_SYMBOL $1EB5
FORCE_NO_SYMBOL $1EBA
FORCE_NO_SYMBOL $1EC1
FORCE_NO_SYMBOL $1EC6
FORCE_NO_SYMBOL $1ECA
FORCE_SYMBOL $1ECC boss3MovementPointer
FORCE_NO_SYMBOL $1ECF
FORCE_SYMBOL $1ED3 difficulty
FORCE_NO_SYMBOL $1ED6
FORCE_SYMBOL $1ED9 boss3MoveData
FORCE_NO_SYMBOL $1EE0
FORCE_SYMBOL $1EE4 boss3MovementPointer
FORCE_SYMBOL $1EE7 initMovementBoss3
COMMENT_LINE $1EEA ................ boss move done
COMMENT_LINE $1EEA ................ check boss collision
FORCE_SYMBOL $1EEA bossPosY
COMMENT $1EF1 make unsigned
FORCE_NO_SYMBOL $1EF1
FORCE_SYMBOL $1EF3 tmp1_tmp
FORCE_SYMBOL $1EF6 playerXpos
FORCE_NO_SYMBOL $1EF9
FORCE_SYMBOL $1EFB tmp1_tmp
FORCE_NO_SYMBOL $1F01
FORCE_SYMBOL $1F05 playerWasHitFor
COMMENT_LINE $1F08 ................ check boss collision done
COMMENT_LINE $1F08 ................ check boss damage and shield stuff
FORCE_SYMBOL $1F08 bossHP
FORCE_SYMBOL $1F0B boss3HPCompare
FORCE_SYMBOL $1F11 boss3HPCompare
FORCE_NO_SYMBOL $1F14
FORCE_SYMBOL $1F17 boss3HPCompare
FORCE_SYMBOL $1F1A boss3ShieldCount
COMMENT_LINE $1F1D init exploding shield
COMMENT $1F1D explosion1Data
FORCE_NO_SYMBOL $1F1D
FORCE_SYMBOL $1F20 sfx_pointer_3
COMMENT_LINE $1F23 ................ check boss damage and shield stuff done
COMMENT_LINE $1F23 display boss in bank 0
COMMENT $1F23 displayBoss3
FORCE_NO_SYMBOL $1F23
FORCE_SYMBOL $1F26 jsrBank0X
COMMENT_LINE $1F29 disable calibration
FORCE_NO_SYMBOL $1F29
FORCE_SYMBOL $1F2B VIA_cntl
FORCE_NO_SYMBOL $1F2D
FORCE_SYMBOL $1F30 VIA_port_b
FORCE_SYMBOL $1F33 VIA_port_b
FORCE_NO_SYMBOL $1F35
FORCE_SYMBOL $1F37 VIA_port_b
FORCE_NO_SYMBOL $1F39
FORCE_SYMBOL $1F3C VIA_port_a
FORCE_SYMBOL $1F3E VIA_port_b
COMMENT_LINE $1F40 ................ boss shooting
FORCE_SYMBOL $1F40 bossPosY
FORCE_SYMBOL $1F45 boss3LetterCannonWait
FORCE_SYMBOL $1F4A boss3LetterCannonPointer
FORCE_SYMBOL $1F52 boss3Shots
COMMENT $1F58 speed 3 (lower 4 nibbles), and target shot (upper 4 nibbles = 0)
FORCE_SYMBOL $1F5A isBugShot
COMMENT $1F5D wait for next shot
FORCE_SYMBOL $1F5F boss3LetterCannonWait
FORCE_SYMBOL $1F64 vox_addr
FORCE_SYMBOL $1F67 boss3LetterCannonPointer
FORCE_SYMBOL $1F6A playerXpos
FORCE_NO_SYMBOL $1F73
FORCE_SYMBOL $1F75 playerXpos
COMMENT $1F78 add some value
FORCE_SYMBOL $1F78 bossPosY
FORCE_SYMBOL $1F7B bulletSpawnAt
FORCE_SYMBOL $1F7E spawnShot
FORCE_SYMBOL $1F81 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $1F88 BEHAVIOUR
FORCE_SYMBOL $1F8A playerXpos
FORCE_NO_SYMBOL $1F8D
FORCE_NO_SYMBOL $1F91
FORCE_SYMBOL $1F93 playerXpos
FORCE_NO_SYMBOL $1F96
FORCE_SYMBOL $1F9C playerXpos
COMMENT_LINE $1F9F ................ boss shooting done
COMMENT_LINE $1F9F display other objects/shots
COMMENT_LINE $1F9F boss two HAS no enemies!
COMMENT_LINE $1F9F lda      #DEFAULT_ENEMY_INTENSITY
COMMENT_LINE $1F9F _INTENSITY_A
COMMENT_LINE $1F9F lds      enemylist_objects_head
COMMENT_LINE $1F9F puls     d,pc                           ; (D = y,x) ; do all objects
FORCE_NO_SYMBOL $1F9F
COMMENT $1FA1 Store intensity in D/A
FORCE_SYMBOL $1FA1 VIA_port_a
COMMENT $1FA3 mux disabled channel 2
FORCE_NO_SYMBOL $1FA3
FORCE_SYMBOL $1FA6 VIA_port_b
COMMENT $1FA8 mux enabled channel 2
FORCE_SYMBOL $1FA8 VIA_port_b
COMMENT $1FAA turn off mux
FORCE_SYMBOL $1FAA VIA_port_b
FORCE_SYMBOL $1FAC shotlist_objects_head
COMMENT $1FB0 jumps back to enemiesShots_done_boss3 = main1Boss3
COMMENT_LINE $1FB2 .....................................................
COMMENT_LINE $1FB2 boss 3 movement list
COMMENT $1FEC y,x,speed
COMMENT $1FEF y,x,speed
COMMENT $1FF2 y,x,speed
COMMENT $1FF5 y,x,speed
COMMENT $1FF8 y,x,speed
COMMENT $2004 y,x,speed
COMMENT $2009 y,x,speed
COMMENT $200C y,x,speed
COMMENT $200F y,x,speed
COMMENT $2012 y,x,speed
COMMENT $2015 y,x,speed
COMMENT $2018 y,x,speed
COMMENT $201B y,x,speed
COMMENT $201E y,x,speed
COMMENT_LINE $2023 org
COMMENT $2023 y,x,speed
COMMENT $2026 y,x,speed
COMMENT $2029 y,x,speed
COMMENT $202C y,x,speed
COMMENT $202F y,x,speed
COMMENT $2032 y,x,speed
COMMENT_LINE $2037 boss 3 "shots"
COMMENT $2037 how far backwards from curretn player X, des the first letter hit (increased by 20)
COMMENT $2040 how far backwards from curretn player X, des the first letter hit (increased by 20)
COMMENT $204D how far backwards from curretn player X, des the first letter hit (increased by 20)
COMMENT $205C how far backwards from curretn player X, des the first letter hit (increased by 20)
COMMENT $206F how far backwards from curretn player X, des the first letter hit (increased by 20)
COMMENT_LINE $2080 //"Beware, I live!", "I hunger, coward!", "I am Sinistar!", "Run! Run! Run!", "Beware, coward!", "I hunger!", "Run, coward!", and a loud roaring sound.
COMMENT_LINE $2080 shot structs
COMMENT $2082 speed, rounds to wait, till next
COMMENT $2088 speed, rounds to wait, till next
COMMENT $208E speed, rounds to wait, till next
COMMENT $2094 speed, rounds to wait, till next
COMMENT $209A speed, rounds to wait, till next
COMMENT $20A0 speed, rounds to wait, till next
COMMENT $20A4 repeat
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 Boss fight done
FORCE_NO_SYMBOL $20A6
FORCE_SYMBOL $20A8 explosionCount
FORCE_SYMBOL $20AB extro3PointerSUB
FORCE_SYMBOL $20AE bossExtroPointer
FORCE_SYMBOL $20B1 extroBoss
COMMENT $20B4 displayBoss3001
FORCE_NO_SYMBOL $20B4
FORCE_SYMBOL $20B7 jsrBank0X
COMMENT_LINE $20BA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $20BA single swarm members attack?
COMMENT_LINE $20BA diverse banks, see "if else clauses"
COMMENT_LINE $20BA Boss "Insect Queen"
COMMENT_LINE $20BA ;;;;;; *****************************************
COMMENT_LINE $20BA ;;;;;; * BANK 3 *
COMMENT_LINE $20BA ;;;;;; *****************************************
COMMENT_LINE $20BA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $20BA lockPurchased
FORCE_SYMBOL $20BD ENEMY_DESTRUCTED_FLAG
FORCE_SYMBOL $20BF lockPurchased
COMMENT_LINE $20C2 destroy scoopies!
FORCE_NO_SYMBOL $20C2
FORCE_SYMBOL $20C5 bossIntroStage
FORCE_SYMBOL $20C8 scoopEnemy1
FORCE_SYMBOL $20CB scoopEnemy2
FORCE_SYMBOL $20CE boss2Direction
FORCE_NO_SYMBOL $20D1
FORCE_SYMBOL $20D3 boss2Scale
FORCE_SYMBOL $20D6 MAX_SHOT_OBJECTS
FORCE_SYMBOL $20D8 initBossFight
COMMENT_LINE $20DB done in bank 2
FORCE_NO_SYMBOL $20DB
FORCE_SYMBOL $20DE PLAYERSHOTS_DONE_A
FORCE_SYMBOL $20E1 difficulty
FORCE_NO_SYMBOL $20E4
FORCE_SYMBOL $20E6 maxSwarmAttacker
COMMENT_LINE $20EA .....................................................
COMMENT_LINE $20EC no stars
COMMENT_LINE $20EC no bonus
COMMENT_LINE $20EC special is queen in the middle
COMMENT_LINE $20EC swarm bug appear to protect the queen
COMMENT_LINE $20EC Boss  intro
COMMENT $20EC initTitleRAM
FORCE_NO_SYMBOL $20EC
FORCE_SYMBOL $20EF jsrBank0X
COMMENT $20F2 doBoss2Intro00
FORCE_NO_SYMBOL $20F2
FORCE_SYMBOL $20F5 jsrBank0_fromBank3_T1
FORCE_SYMBOL $20FA clear_all_sound
FORCE_SYMBOL $20FD diverseFlags
COMMENT $2100 flag for boss 2
FORCE_NO_SYMBOL $2100
FORCE_SYMBOL $2102 diverseFlags
COMMENT $2105 adjustShotDamage
FORCE_NO_SYMBOL $2105
FORCE_SYMBOL $2108 jsrBank0X
FORCE_SYMBOL $210B difficulty
FORCE_NO_SYMBOL $210E
FORCE_SYMBOL $2122 BOSS2_HITPOINTS
FORCE_SYMBOL $2125 bossHP
FORCE_NO_SYMBOL $2128
FORCE_SYMBOL $212B bossPosY
FORCE_NO_SYMBOL $212E
COMMENT $2131 ensure the swarm does not spawn bullets
FORCE_SYMBOL $2131 bulletSpawnAt
COMMENT_LINE $2134 init boss fight 2
COMMENT_LINE $2134 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $2134 init swarm enemyList
COMMENT_LINE $2134 MAX_SWARM_OBJECTS = 40
COMMENT_LINE $2134 swarmobject_list = bonusobject_list
COMMENT_LINE $2134 swarmobject_list_end = enemyobject_list_end
COMMENT_LINE $2134 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $2134 MAX_SWARM_OBJECTS
FORCE_SYMBOL $2136 swarmobject_list
FORCE_SYMBOL $2139 enemylist_empty_head
FORCE_SYMBOL $213C ENEMY_DONE
FORCE_SYMBOL $2140 SwarmEnemy
FORCE_SYMBOL $2142 NEXT_ENEMY_OBJECT
FORCE_NO_SYMBOL $2144
FORCE_SYMBOL $214B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $214E enemylist_objects_head
COMMENT_LINE $2152 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $2152 enemies_done_boss2
FORCE_SYMBOL $2155 ENEMY_DONE_A
FORCE_SYMBOL $2158 enemiesShots_done_boss2
FORCE_SYMBOL $215B SHOTS_DONE_A
COMMENT_LINE $215E add one big bug -> the queen
FORCE_NO_SYMBOL $215E
FORCE_SYMBOL $2160 boss2Scale
COMMENT $2163 grow
FORCE_NO_SYMBOL $2163
FORCE_SYMBOL $2165 boss2Direction
COMMENT $2168 CBFC ; correct the stack to default address
FORCE_SYMBOL $2168 MY_STACK
FORCE_SYMBOL $216C sfx_pointer_1
COMMENT $2171 queenSoundData
FORCE_NO_SYMBOL $2171
FORCE_SYMBOL $2174 sfx_pointer_1
FORCE_SYMBOL $2177 boss2Direction
FORCE_NO_SYMBOL $217C
FORCE_SYMBOL $2180 boss2Scale
FORCE_NO_SYMBOL $2183
FORCE_SYMBOL $2185 boss2Scale
COMMENT $218A attack
FORCE_NO_SYMBOL $218A
FORCE_SYMBOL $218C boss2Direction
FORCE_SYMBOL $2191 boss2Scale
FORCE_NO_SYMBOL $2194
FORCE_NO_SYMBOL $2198
COMMENT_LINE $219C position of newly spawned antenna shots
FORCE_NO_SYMBOL $219C
FORCE_SYMBOL $219F bulletSpawnAt
FORCE_NO_SYMBOL $21A2
FORCE_SYMBOL $21A4 isBugShot
FORCE_SYMBOL $21A7 spawnShot
FORCE_NO_SYMBOL $21AA
FORCE_SYMBOL $21AF spawnShot
COMMENT_LINE $21B4 position of newly spawned fang shots
FORCE_NO_SYMBOL $21B4
FORCE_SYMBOL $21B7 bulletSpawnAt
FORCE_NO_SYMBOL $21BA
FORCE_SYMBOL $21BD isBugShot
FORCE_SYMBOL $21C0 shotSpeed
FORCE_SYMBOL $21C3 spawnShot
FORCE_NO_SYMBOL $21C6
FORCE_SYMBOL $21CB spawnShot
FORCE_SYMBOL $21D0 boss2Scale
FORCE_NO_SYMBOL $21D3
FORCE_SYMBOL $21D5 boss2Scale
COMMENT $21DA grow
FORCE_NO_SYMBOL $21DA
FORCE_SYMBOL $21DC boss2Direction
FORCE_SYMBOL $21DF bossFightPlayerStuff
COMMENT_LINE $21E2 spawn a swarm member every x cycles -> endlessly!
FORCE_SYMBOL $21E2 spawnSwarm
FORCE_SYMBOL $21E5 bossWasHit
FORCE_NO_SYMBOL $21E8
FORCE_SYMBOL $21EA laserLowestY
FORCE_NO_SYMBOL $21ED
FORCE_SYMBOL $21F0 laserEnemyPointer
FORCE_SYMBOL $21F3 tmp2_tmp_unique
COMMENT $21F6 ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $21F6 laserTag
FORCE_SYMBOL $21F9 DEFAULT_ENEMY_INTENSITY
COMMENT $21FB Store intensity in D/A
FORCE_SYMBOL $21FB VIA_port_a
COMMENT $21FD mux disabled channel 2
FORCE_NO_SYMBOL $21FD
FORCE_SYMBOL $2200 VIA_port_b
COMMENT $2202 mux enabled channel 2
FORCE_SYMBOL $2202 VIA_port_b
COMMENT $2204 turn off mux
FORCE_SYMBOL $2204 VIA_port_b
FORCE_SYMBOL $2206 calibrationSwarm
FORCE_SYMBOL $2209 laserTag
FORCE_SYMBOL $220C enemylist_objects_head
COMMENT $2210 (D = y,x) ; do all objects
COMMENT $2212 CBFC ; correct the stack to default address
FORCE_SYMBOL $2212 MY_STACK
FORCE_SYMBOL $2216 tmp2_tmp_unique
FORCE_SYMBOL $2219 testShot
FORCE_SYMBOL $221E playerNumberOfBulletsPerShot
COMMENT $2221 laser
FORCE_NO_SYMBOL $2221
COMMENT_LINE $2225 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $2225 we do not need to test the shot itself for validity!
COMMENT_LINE $2225 yTest
COMMENT_LINE $2225 for "easyness" - just we say here if
COMMENT_LINE $2225 y pos of shot is >= enemyPos than we hit!
COMMENT $2225 pos of boss2, boss start at the top
FORCE_SYMBOL $2225 bossPosY
COMMENT $2228 reduce by some offset to get the "mouth" part
FORCE_NO_SYMBOL $2228
FORCE_SYMBOL $222A enemyMINY
COMMENT_LINE $2232 ;;;; y done
COMMENT_LINE $2232 xTest
FORCE_SYMBOL $2232 bossPosX
COMMENT $2235 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $2235
COMMENT_LINE $2237 test center
FORCE_SYMBOL $2237 tmp1
FORCE_SYMBOL $223A BOSS2_HIT_X_OFFSET
COMMENT $223F enemy is on left side of shot
COMMENT_LINE $2241 in b 0 based enemy pos
COMMENT $2246 enemy is on right side of shot
COMMENT_LINE $2248 ..........
COMMENT_LINE $2248 no scoopy with boss Swarm!
COMMENT_LINE $2248 if only scoop shots are left - we can not hit with "own" cannon
FORCE_SYMBOL $2248 notHit119
FORCE_SYMBOL $224B backJump
FORCE_SYMBOL $224E tmp2_tmp_unique
FORCE_SYMBOL $2251 removeCurrentShotAndObjectBoss
COMMENT $2254 pos of boss2, boss start at the top
FORCE_SYMBOL $2254 bossPosY
COMMENT $2257 reduce by some offset to get the "mouth" part
FORCE_NO_SYMBOL $2257
COMMENT_LINE $2259 for laser cut off
FORCE_SYMBOL $2259 laserTmp
COMMENT $225C main laser only
FORCE_SYMBOL $225C laserTmp2
COMMENT_LINE $2261 ..........
FORCE_SYMBOL $2261 test2Shot
FORCE_SYMBOL $2266 playerNumberOfBulletsPerShot
COMMENT $2269 laser
FORCE_NO_SYMBOL $2269
COMMENT_LINE $226D "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $226D we do not need to test the shot itself for validity!
COMMENT_LINE $226D yTest
COMMENT_LINE $226D for "easyness" - just we say here if
COMMENT_LINE $226D y pos of shot is >= enemyPos than we hit!
COMMENT $226D pos of boss2, boss start at the top
FORCE_SYMBOL $226D bossPosY
COMMENT $2270 reduce by some offset to get the "mouth" part
FORCE_NO_SYMBOL $2270
FORCE_SYMBOL $2272 enemyMINY
COMMENT_LINE $227A ;;;; y done
COMMENT_LINE $227A xTest
FORCE_SYMBOL $227A bossPosX
COMMENT $227D x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $227D
COMMENT_LINE $227F test center
FORCE_SYMBOL $227F tmp1
FORCE_SYMBOL $2282 BOSS2_HIT_X_OFFSET
COMMENT $2287 enemy is on left side of shot
COMMENT_LINE $2289 in b 0 based enemy pos
COMMENT $228E enemy is on right side of shot
COMMENT_LINE $2290 ..........
COMMENT_LINE $2290 no scoopy with boss Swarm!
COMMENT_LINE $2290 if only scoop shots are left - we can not hit with "own" cannon
FORCE_SYMBOL $2290 notHit120
FORCE_SYMBOL $2293 backJump
FORCE_SYMBOL $2296 tmp2_tmp_unique
FORCE_SYMBOL $2299 removeCurrentShotAndObjectBoss
COMMENT $229C pos of boss2, boss start at the top
FORCE_SYMBOL $229C bossPosY
COMMENT $229F reduce by some offset to get the "mouth" part
FORCE_NO_SYMBOL $229F
COMMENT_LINE $22A1 for laser cut off
FORCE_SYMBOL $22A1 laserTmp
COMMENT $22A4 main laser only
FORCE_SYMBOL $22A4 laserTmp2
COMMENT_LINE $22A9 ..........
FORCE_SYMBOL $22A9 tmp2_tmp_unique
COMMENT_LINE $22AC Boss fight done
FORCE_NO_SYMBOL $22AC
COMMENT $22AE Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $22AE VIA_aux_cntl
FORCE_SYMBOL $22B0 bossHP
COMMENT_LINE $22B7 spawn player shots after displyay
COMMENT $22B7 displayBoss2
FORCE_NO_SYMBOL $22B7
FORCE_SYMBOL $22BA jsrBank0X
COMMENT_LINE $22BD .
FORCE_SYMBOL $22BD laserEnemyPointer
FORCE_SYMBOL $22C2 laserTag
FORCE_SYMBOL $22C5 backy1s
FORCE_SYMBOL $22C8 backJump
FORCE_SYMBOL $22CB laserEnemyPointer
FORCE_SYMBOL $22CF lasershotReEntry
FORCE_SYMBOL $22D2 gameScale
FORCE_SYMBOL $22D5 VIA_t1_cnt_lo
COMMENT_LINE $22D7 .
COMMENT $22D7 CBFC ; correct the stack to default address
FORCE_SYMBOL $22D7 MY_STACK
FORCE_SYMBOL $22DB calibrationZero7
FORCE_NO_SYMBOL $22DE
COMMENT $22E0 Store intensity in D/A
FORCE_SYMBOL $22E0 VIA_port_a
COMMENT $22E2 mux disabled channel 2
FORCE_NO_SYMBOL $22E2
FORCE_SYMBOL $22E5 VIA_port_b
COMMENT $22E7 mux enabled channel 2
FORCE_SYMBOL $22E7 VIA_port_b
COMMENT $22E9 turn off mux
FORCE_SYMBOL $22E9 VIA_port_b
FORCE_SYMBOL $22EB shotlist_objects_head
COMMENT $22EF jumps to enemiesShots_done_boss2
COMMENT_LINE $22F1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $22F1 "create" (or rather get) new object
FORCE_SYMBOL $22F1 newEnemyObject
FORCE_SYMBOL $22F4 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $22FA swarmBehaviour
FORCE_SYMBOL $22FD BEHAVIOUR
FORCE_SYMBOL $22FF SWARM_HP
FORCE_SYMBOL $2301 SWARM_HIT_POINTS
FORCE_SYMBOL $2303 random_seed
FORCE_NO_SYMBOL $2309
FORCE_SYMBOL $230B random_seed
FORCE_NO_SYMBOL $230E
FORCE_NO_SYMBOL $2314
FORCE_SYMBOL $2316 Y_POS
FORCE_SYMBOL $2318 random_seed2
FORCE_NO_SYMBOL $231E
FORCE_SYMBOL $2320 random_seed2
FORCE_SYMBOL $232F X_POS
FORCE_SYMBOL $2331 SWARM_ANIM_POS
COMMENT $2333 flash length
FORCE_SYMBOL $2333 SWARM_ALL_PURPOSE
FORCE_SYMBOL $2335 swarmCounter
FORCE_SYMBOL $2338 swarmCounter
FORCE_NO_SYMBOL $233B
FORCE_SYMBOL $2341 SWARM_MOVEMENT_INFO
FORCE_NO_SYMBOL $2344
COMMENT_LINE $2348 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $2348 Boss fight done
FORCE_NO_SYMBOL $2348
FORCE_SYMBOL $234A explosionCount
FORCE_SYMBOL $234D extro2PointerSUB
FORCE_SYMBOL $2350 bossExtroPointer
FORCE_SYMBOL $2353 extroBoss
COMMENT $2356 displayBoss2
FORCE_NO_SYMBOL $2356
FORCE_SYMBOL $2359 jsrBank0X
COMMENT_LINE $235C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $235C diverse banks, see "if else clauses"
COMMENT_LINE $235C End boss "BORG"
COMMENT_LINE $235C ;;;;;; *****************************************
COMMENT_LINE $235C ;;;;;; * BANK 3 *
COMMENT_LINE $235C ;;;;;; *****************************************
FORCE_SYMBOL $235C difficulty
COMMENT $2361 disable shield
FORCE_SYMBOL $2361 playerBonusActive
FORCE_SYMBOL $2364 lockPurchased
COMMENT $2367 mark all enemies as dead
FORCE_SYMBOL $2367 ENEMY_DESTRUCTED_FLAG
FORCE_SYMBOL $2369 lockPurchased
FORCE_NO_SYMBOL $236C
FORCE_SYMBOL $236F bossIntroStage
FORCE_SYMBOL $2372 scoopEnemy1
FORCE_SYMBOL $2375 scoopEnemy2
FORCE_SYMBOL $2378 leftSmallGunAnimCounter
FORCE_SYMBOL $237B rightSmallGunAnimCounter
FORCE_SYMBOL $237E leftBigGunAnimCounter
FORCE_SYMBOL $2381 rightBigGunAnimCounter
FORCE_SYMBOL $2384 allowBossShots
FORCE_NO_SYMBOL $2387
FORCE_SYMBOL $2389 bossPosY
FORCE_SYMBOL $238C MAX_SHOT_OBJECTS_BOSS
FORCE_SYMBOL $238E initBossFight
COMMENT_LINE $2391 init boss jump backs
FORCE_SYMBOL $2391 enemies_done_boss1
FORCE_SYMBOL $2394 ENEMY_DONE_A
FORCE_SYMBOL $2397 enemiesShots_done_boss1
FORCE_SYMBOL $239A SHOTS_DONE_A
COMMENT_LINE $239D done in bank 0
FORCE_NO_SYMBOL $239D
FORCE_SYMBOL $23A0 PLAYERSHOTS_DONE_A
COMMENT_LINE $23A4 .....................................................
COMMENT_LINE $23A4 destroy scoopies!
FORCE_SYMBOL $23A6 BOSS_SPRITE_SCALE
FORCE_SYMBOL $23A8 boss1Scale
COMMENT_LINE $23AB intro
COMMENT $23AB doBoss1Intro00
FORCE_NO_SYMBOL $23AB
FORCE_SYMBOL $23AE jsrBank0_fromBank3_T1
COMMENT $23B1 music destroys structures
FORCE_SYMBOL $23B3 allowBossShots
FORCE_SYMBOL $23B6 clear_all_sound
COMMENT $23B9 fire "seeking" shot
FORCE_NO_SYMBOL $23B9
FORCE_SYMBOL $23BC bossTimer
FORCE_SYMBOL $23BF difficulty
FORCE_NO_SYMBOL $23C2
FORCE_SYMBOL $23D6 BOSS1_HITPOINTS
FORCE_SYMBOL $23D9 bossHP
FORCE_SYMBOL $23DC diverseFlags
COMMENT $23DF boss 1
FORCE_NO_SYMBOL $23DF
FORCE_SYMBOL $23E1 diverseFlags
COMMENT $23E4 adjustShotDamage
FORCE_NO_SYMBOL $23E4
FORCE_SYMBOL $23E7 jsrBank0X
COMMENT_LINE $23EA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $23EA Boss fight 1 Bank 1
COMMENT_LINE $23EA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $23EA CBFC ; correct the stack to default address
FORCE_SYMBOL $23EA MY_STACK
FORCE_SYMBOL $23EE bossFightPlayerStuff
FORCE_SYMBOL $23F1 bossWasHit
FORCE_NO_SYMBOL $23F4
FORCE_SYMBOL $23F6 laserLowestY
FORCE_NO_SYMBOL $23F9
FORCE_SYMBOL $23FC laserEnemyPointer
FORCE_SYMBOL $23FF tmp2_tmp_unique
COMMENT $2402 ensure in enemy display this is 0 (for laser shot inhibitaion)
FORCE_SYMBOL $2402 laserTag
COMMENT_LINE $2405 colision detection player shot -> enemy
COMMENT_LINE $2405 only two shots are tested per game round
COMMENT_LINE $2405 two shots
COMMENT_LINE $2405 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $2405 in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $2405 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $2405 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $2405 ergo ALL purpuse negtaive serves no purpose anymore!
FORCE_SYMBOL $2405 testShot
FORCE_SYMBOL $240A playerNumberOfBulletsPerShot
COMMENT $240D laser
FORCE_NO_SYMBOL $240D
COMMENT_LINE $2411 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $2411 we do not need to test the shot itself for validity!
COMMENT_LINE $2411 yTest
COMMENT_LINE $2411 for "easyness" - just we say here if
COMMENT_LINE $2411 y pos of shot is >= enemyPos than we hit!
FORCE_SYMBOL $2411 BOSS1_Y_LOW
FORCE_SYMBOL $2413 enemyMINY
COMMENT_LINE $241B ;;;; y done
COMMENT_LINE $241B xTest
FORCE_SYMBOL $241B bossPosX
COMMENT $241E x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $241E
COMMENT_LINE $2420 test center
FORCE_SYMBOL $2420 tmp1
FORCE_SYMBOL $2423 BOSS1_HIT_X_OFFSET
FORCE_NO_SYMBOL $2427
COMMENT $242C enemy is on left side of shot
COMMENT_LINE $242E in b 0 based enemy pos
FORCE_NO_SYMBOL $2432
COMMENT $2437 enemy is on right side of shot
COMMENT_LINE $2439 ..........
COMMENT_LINE $2439 if only scoop shots are left - we can not hit with "own" cannon
FORCE_SYMBOL $2439 notHit125
FORCE_SYMBOL $243C backJump
FORCE_SYMBOL $243F tmp2_tmp_unique
FORCE_SYMBOL $2442 removeCurrentShotAndObjectBoss
COMMENT $2445 pos of boss2, boss start at the top
FORCE_SYMBOL $2445 BOSS1_Y_LOW
COMMENT_LINE $2447 suba #$20; reduce by some offset to get the "mouth" part
COMMENT_LINE $2447 for laser cut off
FORCE_SYMBOL $2447 laserTmp
COMMENT $244A main laser only
FORCE_SYMBOL $244A laserTmp2
COMMENT_LINE $244F ..........
COMMENT_LINE $244F colision detection player shot -> enemy
COMMENT_LINE $244F only two shots are tested per game round
COMMENT_LINE $244F two shots
COMMENT_LINE $244F main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $244F in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $244F is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $244F all behaviours with negative all purpose do not call col detect
COMMENT_LINE $244F ergo ALL purpuse negtaive serves no purpose anymore!
FORCE_SYMBOL $244F test2Shot
FORCE_SYMBOL $2454 playerNumberOfBulletsPerShot
COMMENT $2457 laser
FORCE_NO_SYMBOL $2457
COMMENT_LINE $245B "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $245B we do not need to test the shot itself for validity!
COMMENT_LINE $245B yTest
COMMENT_LINE $245B for "easyness" - just we say here if
COMMENT_LINE $245B y pos of shot is >= enemyPos than we hit!
FORCE_SYMBOL $245B BOSS1_Y_LOW
FORCE_SYMBOL $245D enemyMINY
COMMENT_LINE $2465 ;;;; y done
COMMENT_LINE $2465 xTest
FORCE_SYMBOL $2465 bossPosX
COMMENT $2468 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $2468
COMMENT_LINE $246A test center
FORCE_SYMBOL $246A tmp1
FORCE_SYMBOL $246D BOSS1_HIT_X_OFFSET
FORCE_NO_SYMBOL $2471
COMMENT $2476 enemy is on left side of shot
COMMENT_LINE $2478 in b 0 based enemy pos
FORCE_NO_SYMBOL $247C
COMMENT $2481 enemy is on right side of shot
COMMENT_LINE $2483 ..........
COMMENT_LINE $2483 if only scoop shots are left - we can not hit with "own" cannon
FORCE_SYMBOL $2483 notHit126
FORCE_SYMBOL $2486 backJump
FORCE_SYMBOL $2489 tmp2_tmp_unique
FORCE_SYMBOL $248C removeCurrentShotAndObjectBoss
COMMENT $248F pos of boss2, boss start at the top
FORCE_SYMBOL $248F BOSS1_Y_LOW
COMMENT_LINE $2491 suba #$20; reduce by some offset to get the "mouth" part
COMMENT_LINE $2491 for laser cut off
FORCE_SYMBOL $2491 laserTmp
COMMENT $2494 main laser only
FORCE_SYMBOL $2494 laserTmp2
COMMENT_LINE $2499 ..........
COMMENT_LINE $2499 test Boss fight done
FORCE_SYMBOL $2499 bossHP
COMMENT_LINE $249C "extro"
COMMENT $24A0 displayBoss1
FORCE_NO_SYMBOL $24A0
FORCE_SYMBOL $24A3 jsrBank0X
FORCE_SYMBOL $24A6 bossMoveDir
FORCE_SYMBOL $24AB bossPosX
FORCE_SYMBOL $24AE bossPosX
FORCE_NO_SYMBOL $24B1
FORCE_SYMBOL $24B5 bossMoveDir
FORCE_SYMBOL $24BA bossPosX
FORCE_SYMBOL $24BD bossPosX
FORCE_SYMBOL $24C4 bossMoveDir
FORCE_NO_SYMBOL $24CA
FORCE_NO_SYMBOL $24CC
COMMENT_LINE $24D0 using a bug shot with "playerX" target data
COMMENT_LINE $24D0 to spawn "bigBug" target shots
COMMENT_LINE $24D0 only we do not want to shoot at the player, but rather a couple of "parallel" target shots
COMMENT_LINE $24D0 so we save the original player pos
COMMENT_LINE $24D0 use it as a "target" X
COMMENT_LINE $24D0 and restore the pos later
FORCE_SYMBOL $24D0 playerXpos
COMMENT $24D5 five "parallel" target shots
FORCE_NO_SYMBOL $24D5
COMMENT $24D7 boss fight tmp
FORCE_SYMBOL $24D7 tmp3
FORCE_NO_SYMBOL $24DA
COMMENT $24DC at imaginary playerX pos
FORCE_SYMBOL $24DC playerXpos
COMMENT $24DF speed 3 - and bugshot 2 normal = target shot
FORCE_NO_SYMBOL $24DF
FORCE_SYMBOL $24E1 isBugShot
COMMENT $24E4 y pos of shot
FORCE_NO_SYMBOL $24E4
FORCE_SYMBOL $24E6 bossPosX
FORCE_SYMBOL $24E9 bulletSpawnAt
FORCE_SYMBOL $24EC spawnShot
FORCE_SYMBOL $24EF playerXpos
FORCE_NO_SYMBOL $24F2
FORCE_SYMBOL $24F4 playerXpos
FORCE_SYMBOL $24F7 tmp3
COMMENT $24FE player pos restored
FORCE_SYMBOL $24FE playerXpos
FORCE_NO_SYMBOL $2504
COMMENT $2506 timing for boss shots
FORCE_NO_SYMBOL $2506
FORCE_SYMBOL $250A isBugShot
FORCE_SYMBOL $250D leftSmallGunAnimStart
FORCE_SYMBOL $2510 rightSmallGunAnimStart
FORCE_SYMBOL $2513 ANIMATION_DELAY
FORCE_SYMBOL $2515 leftSmallGunAnimDelayCounter
FORCE_SYMBOL $2518 rightSmallGunAnimDelayCounter
FORCE_NO_SYMBOL $251B
FORCE_SYMBOL $251D leftSmallGunAnimCounter
FORCE_SYMBOL $2520 rightSmallGunAnimCounter
COMMENT $2523 y spawn pos
FORCE_NO_SYMBOL $2523
FORCE_SYMBOL $2525 bossPosX
COMMENT $2528 x spawn pos
FORCE_NO_SYMBOL $2528
FORCE_SYMBOL $252A bulletSpawnAt
COMMENT $252D "normal" bullet spawn
FORCE_SYMBOL $252D spawnShot
FORCE_NO_SYMBOL $2530
FORCE_SYMBOL $2532 bossPosX
FORCE_NO_SYMBOL $2535
FORCE_SYMBOL $2537 bulletSpawnAt
FORCE_SYMBOL $253A spawnShot
FORCE_SYMBOL $253D bossTimer
COMMENT $2542 every "x" rounds spawn a seeking missile
FORCE_SYMBOL $2542 bossTimer
COMMENT_LINE $2547 ...
COMMENT $2547 we could reduce that with higher difficulty?
FORCE_NO_SYMBOL $2547
FORCE_SYMBOL $254A bossTimer
FORCE_SYMBOL $254D difficulty
FORCE_SYMBOL $2558 playerXpos
FORCE_SYMBOL $255B bossPosX
COMMENT $255E missile speed 1
FORCE_NO_SYMBOL $255E
COMMENT $2560 and "MISSILE" seeking type
FORCE_SYMBOL $2560 isBugShot
COMMENT $2563 y pos
FORCE_NO_SYMBOL $2563
FORCE_SYMBOL $2565 bossPosX
COMMENT $2568 x pos
FORCE_NO_SYMBOL $2568
FORCE_SYMBOL $256A bulletSpawnAt
COMMENT $256D spawn missile
FORCE_SYMBOL $256D spawnShot
FORCE_SYMBOL $2570 rightBigGunAnimStart
FORCE_SYMBOL $2573 ANIMATION_DELAY
FORCE_SYMBOL $2575 rightBigGunAnimDelayCounter
FORCE_NO_SYMBOL $2578
FORCE_SYMBOL $257A rightBigGunAnimCounter
COMMENT_LINE $257D ...
COMMENT_LINE $257D the object lists and smart draw use both stacks
COMMENT_LINE $257D the object list uses DS as object list pointer
COMMENT_LINE $257D and the smart draw uses "U" as User stack pointer
FORCE_SYMBOL $257D DEFAULT_ENEMY_INTENSITY
COMMENT $257F Store intensity in D/A
FORCE_SYMBOL $257F VIA_port_a
COMMENT $2581 mux disabled channel 2
FORCE_NO_SYMBOL $2581
FORCE_SYMBOL $2584 VIA_port_b
COMMENT $2586 mux enabled channel 2
FORCE_SYMBOL $2586 VIA_port_b
COMMENT $2588 turn off mux
FORCE_SYMBOL $2588 VIA_port_b
FORCE_SYMBOL $258A enemylist_objects_head
COMMENT $258E (D = y,x) ; do all objects
FORCE_NO_SYMBOL $2590
COMMENT $2592 Store intensity in D/A
FORCE_SYMBOL $2592 VIA_port_a
COMMENT $2594 mux disabled channel 2
FORCE_NO_SYMBOL $2594
FORCE_SYMBOL $2597 VIA_port_b
COMMENT $2599 mux enabled channel 2
FORCE_SYMBOL $2599 VIA_port_b
COMMENT $259B turn off mux
FORCE_SYMBOL $259B VIA_port_b
FORCE_SYMBOL $259D shotlist_objects_head
COMMENT $25A1 goes back to "enemiesShots_done_boss1" = main1Boss1
COMMENT_LINE $25A3 .....................................................
COMMENT_LINE $25A3 Boss fight done
FORCE_NO_SYMBOL $25A3
FORCE_SYMBOL $25A5 explosionCount
FORCE_SYMBOL $25A8 extro1PointerSUB
FORCE_SYMBOL $25AB bossExtroPointer
FORCE_SYMBOL $25AE extroBoss
COMMENT $25B1 displayBoss1
FORCE_NO_SYMBOL $25B1
FORCE_SYMBOL $25B4 jsrBank0X
COMMENT_LINE $25B7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $25B7 bank 2+3
COMMENT_LINE $25B7 input score in d
COMMENT_LINE $25B7 output adds score to ascii score
COMMENT_LINE $25B7 held in player_score_... (in y)
COMMENT_LINE $25B7 destroys x
COMMENT_LINE $25B7 9999 max
COMMENT $25B7 Initialize BCD result to zero
FORCE_NO_SYMBOL $25B7
COMMENT $25BA Add in the thousands
FORCE_NO_SYMBOL $25BA
FORCE_NO_SYMBOL $25C0
FORCE_NO_SYMBOL $25C3
COMMENT $25C9 Add in the hundreds
FORCE_NO_SYMBOL $25C9
FORCE_NO_SYMBOL $25CF
FORCE_NO_SYMBOL $25D2
FORCE_NO_SYMBOL $25D8
COMMENT_LINE $25DB ldy #player_score is assumed!
COMMENT_LINE $25DD .....................................................
COMMENT_LINE $25DD convert to bcd
COMMENT $25DD Initialize BCD result to zero
FORCE_NO_SYMBOL $25DD
COMMENT $25E0 Add in the hundreds
FORCE_NO_SYMBOL $25E0
FORCE_NO_SYMBOL $25E4
FORCE_NO_SYMBOL $25E6
COMMENT $25EC Add in the tens
FORCE_NO_SYMBOL $25EC
FORCE_NO_SYMBOL $25F0
FORCE_NO_SYMBOL $25F2
COMMENT $25F7 Add in the ones
COMMENT $25F9 Move it to the D-register
FORCE_NO_SYMBOL $25FB
FORCE_NO_SYMBOL $25FD
FORCE_NO_SYMBOL $2603
FORCE_NO_SYMBOL $2605
FORCE_NO_SYMBOL $2607
FORCE_NO_SYMBOL $260F
FORCE_NO_SYMBOL $2611
FORCE_NO_SYMBOL $2617
FORCE_NO_SYMBOL $2619
FORCE_NO_SYMBOL $261B
FORCE_NO_SYMBOL $261F
FORCE_NO_SYMBOL $2621
FORCE_NO_SYMBOL $2627
FORCE_NO_SYMBOL $2629
FORCE_NO_SYMBOL $262B
FORCE_NO_SYMBOL $2631
FORCE_NO_SYMBOL $2633
FORCE_NO_SYMBOL $2639
FORCE_NO_SYMBOL $263B
COMMENT_LINE $263D special case, since here score of more than 10 in this digit can be added (25)
FORCE_NO_SYMBOL $2641
FORCE_NO_SYMBOL $2643
FORCE_NO_SYMBOL $2649
FORCE_NO_SYMBOL $264B
FORCE_NO_SYMBOL $264D
FORCE_NO_SYMBOL $264F
COMMENT $2653 score_restok? if this one did
FORCE_NO_SYMBOL $2655
FORCE_NO_SYMBOL $2657
FORCE_NO_SYMBOL $2659
FORCE_NO_SYMBOL $265B
FORCE_NO_SYMBOL $2661
FORCE_NO_SYMBOL $2663
FORCE_NO_SYMBOL $2665
FORCE_NO_SYMBOL $2667
COMMENT_LINE $266D place 9 to every digit - because of roll over
COMMENT_LINE $266D todo remember rollover? -> than digits can be kept...
FORCE_NO_SYMBOL $2670
FORCE_NO_SYMBOL $2672
FORCE_NO_SYMBOL $2674
FORCE_NO_SYMBOL $2676
FORCE_NO_SYMBOL $2678
COMMENT_LINE $267A bank 2
COMMENT $267A forward
COMMENT $26D5 forward
COMMENT $2730 forward
COMMENT $278B forward
COMMENT $27E6 forward
COMMENT_LINE $2841 for scale 7
COMMENT_LINE $2841 we need WAIT6 after a poke to hi
COMMENT_LINE $2841 followd directly by a set_y_int
COMMENT_LINE $2841 todo
COMMENT_LINE $2841 last draw could contain $F in A
COMMENT_LINE $2841 than load not needed - attention
COMMENT_LINE $2841 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $2841 also in X could be some sensible value in X for one of the other
COMMENT_LINE $2841 SMVB_lastDraw_rts2                                ;#isfunction
COMMENT_LINE $2841 list format
COMMENT_LINE $2841 y pos byte -> REG A
COMMENT_LINE $2841 VIA_B for x reg = 01 *256 + x pos byte -> REG X
COMMENT_LINE $2841 pointer to draw function -> PC
COMMENT_LINE $2841 5 bytes per "position" (except continuous)
COMMENT_LINE $2841 reg A must be constantly == 0!
COMMENT_LINE $2841 opti finding
COMMENT_LINE $2841 a)  Findings T1 can be 2 cycles "off" -> smartlist max scale of "optimium" reduced from 9 to 7 scale :-(
COMMENT_LINE $2841 b ) y and z sampling need up to 4 cycles to bare fruit (poke b reg)
COMMENT_LINE $2841 90% vectrex (guess) need 0 cycles
COMMENT_LINE $2841 95% vectrex are content with 2 cycles (1 nop)
COMMENT_LINE $2841 some few vectrex NEED 4 cycles!!! ARGH!
COMMENT_LINE $2841 c)  std to reg b of via (Y Reg) does not always / everywhere work
COMMENT_LINE $2841 delays needed for 5% of vectrex
COMMENT_LINE $2841 cost on a "full" screen
COMMENT_LINE $2841 about 2000 cycles
COMMENT_LINE $2841 VECTREX_SAVE_DELAY  =        1
COMMENT_LINE $0000 nop 3
COMMENT_LINE $0000 nop
COMMENT_LINE $0000 nop
COMMENT_LINE $0000 it IS better to first = A and THAN B
COMMENT $0000 4
COMMENT $0000 4
COMMENT_LINE $2841 NOPS add one less, since PULL X is one cycle more than pull a!
COMMENT $0000 5
COMMENT $0000 5
COMMENT $0000 5
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $2846 ***************************************************************************
COMMENT_LINE $2846 /* HIGHEST SCALE FOR SMARTLIST + CONTINUE is 16!
COMMENT_LINE $2846 SMVB_setScale:                                            ;#isfunction
COMMENT_LINE $2846 stb      <VIA_t1_cnt_lo
COMMENT_LINE $2846 pulu     b,x,pc
COMMENT $2846 5
FORCE_SYMBOL $2846 VIA_port_b
COMMENT $2848 4
FORCE_SYMBOL $2848 VIA_t1_cnt_hi
COMMENT_LINE $284C it IS better to first = A and THAN B
COMMENT $284C 4
FORCE_SYMBOL $284C VIA_port_a
COMMENT $284E 4
FORCE_SYMBOL $284E VIA_port_b
COMMENT $2850 4
COMMENT_LINE $2851 nop 3
COMMENT $2851 5
FORCE_SYMBOL $2851 VIA_port_b
COMMENT $2853 4
FORCE_SYMBOL $2853 VIA_t1_cnt_hi
COMMENT $2855 21
COMMENT_LINE $0000 this is one pulu cycle more!
COMMENT_LINE $0000 thus ADD_NOPS can be one cycle less!
COMMENT_LINE $0000 minus 6!
COMMENT $2855 5+3
COMMENT_LINE $2857 it IS better to first = A and THAN B
COMMENT $2857 4
FORCE_SYMBOL $2857 VIA_port_a
COMMENT $2859 4
FORCE_SYMBOL $2859 VIA_port_b
COMMENT $285B 4
COMMENT_LINE $285C nop 3
COMMENT $285C 5
FORCE_SYMBOL $285C VIA_port_b
COMMENT $285E 4
FORCE_SYMBOL $285E VIA_t1_cnt_hi
COMMENT $2860 21
COMMENT $2860 5+3
COMMENT_LINE $2862 it IS better to first = A and THAN B
COMMENT $2862 4
FORCE_SYMBOL $2862 VIA_port_a
COMMENT $2864 4
FORCE_SYMBOL $2864 VIA_port_b
COMMENT $2866 4
COMMENT_LINE $2867 nop 3
COMMENT $2867 5
FORCE_SYMBOL $2867 VIA_port_b
COMMENT $2869 4
FORCE_SYMBOL $2869 VIA_t1_cnt_hi
COMMENT $286B 21
COMMENT $286B 5+3
COMMENT_LINE $286D it IS better to first = A and THAN B
COMMENT $286D 4
FORCE_SYMBOL $286D VIA_port_a
COMMENT $286F 4
FORCE_SYMBOL $286F VIA_port_b
COMMENT $2871 4
COMMENT_LINE $2872 nop 3
COMMENT $2872 5
FORCE_SYMBOL $2872 VIA_port_b
COMMENT $2874 4
FORCE_SYMBOL $2874 VIA_t1_cnt_hi
COMMENT $2876 21
COMMENT $2876 5+3
COMMENT_LINE $2878 it IS better to first = A and THAN B
COMMENT $2878 4
FORCE_SYMBOL $2878 VIA_port_a
COMMENT $287A 4
FORCE_SYMBOL $287A VIA_port_b
COMMENT $287C 4
COMMENT_LINE $287D nop 3
COMMENT $287D 5
FORCE_SYMBOL $287D VIA_port_b
COMMENT $287F 4
FORCE_SYMBOL $287F VIA_t1_cnt_hi
COMMENT $2881 21
COMMENT $2881 5+3
COMMENT_LINE $2883 it IS better to first = A and THAN B
COMMENT $2883 4
FORCE_SYMBOL $2883 VIA_port_a
COMMENT $2885 4
FORCE_SYMBOL $2885 VIA_port_b
COMMENT $2887 4
COMMENT_LINE $2888 nop 3
COMMENT $2888 5
FORCE_SYMBOL $2888 VIA_port_b
COMMENT $288A 4
FORCE_SYMBOL $288A VIA_t1_cnt_hi
COMMENT $288C 21
COMMENT $288C 5+3
COMMENT_LINE $288E continue uses same shift
COMMENT $288E 4 shift not changed, move might also be a draw
FORCE_SYMBOL $288E VIA_port_a
COMMENT_LINE $2890 y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $2890 4
FORCE_SYMBOL $2890 VIA_port_b
COMMENT $2892 4
COMMENT_LINE $2893 nop 3
COMMENT $2893 5
FORCE_SYMBOL $2893 VIA_port_b
FORCE_SYMBOL $2895 VIA_t1_cnt_hi
COMMENT $2899 4 shift not changed, move might also be a draw
FORCE_SYMBOL $2899 VIA_port_a
COMMENT_LINE $289B y is inherently known to be == old_x, y was = to 0 by generator
COMMENT $289B 4
FORCE_SYMBOL $289B VIA_port_b
COMMENT $289D 4
COMMENT $289D wait 2 cycles
COMMENT $289E wait 2 cycles
COMMENT_LINE $289F nop 3
COMMENT $289F 5
FORCE_SYMBOL $289F VIA_port_b
FORCE_SYMBOL $28A1 VIA_t1_cnt_hi
COMMENT $28A5 4 shift not changed, move might also be a draw
FORCE_SYMBOL $28A5 VIA_port_a
COMMENT $28A7 4
FORCE_SYMBOL $28A7 VIA_port_b
COMMENT $28A9 4
COMMENT $28A9 wait 6 cycles
COMMENT_LINE $28AB nop 3
COMMENT $28AB 5
FORCE_SYMBOL $28AB VIA_port_b
FORCE_SYMBOL $28AD VIA_t1_cnt_hi
COMMENT_LINE $0000 continue uses same shift
COMMENT_LINE $0000 y is inherently known to be == x,
COMMENT_LINE $28B1 it IS better to first = A and THAN B
COMMENT $28B1 4
FORCE_SYMBOL $28B1 VIA_port_a
COMMENT $28B3 4
FORCE_SYMBOL $28B3 VIA_port_b
COMMENT $28B5 4
COMMENT_LINE $28B6 nop 3
COMMENT_LINE $28B6 nop
COMMENT_LINE $28B6 nop
FORCE_SYMBOL $28B6 VIA_port_b
FORCE_SYMBOL $28B8 VIA_t1_cnt_hi
COMMENT_LINE $28BC it IS better to first = A and THAN B
COMMENT $28BC 4
FORCE_SYMBOL $28BC VIA_port_a
COMMENT $28BE 4
FORCE_SYMBOL $28BE VIA_port_b
COMMENT $28C0 4
COMMENT_LINE $28C0 nop 3
FORCE_SYMBOL $28C0 VIA_port_b
FORCE_SYMBOL $28C2 VIA_t1_cnt_hi
COMMENT_LINE $28C6 it IS better to first = A and THAN B
COMMENT $28C6 4
FORCE_SYMBOL $28C6 VIA_port_a
COMMENT $28C8 4
FORCE_SYMBOL $28C8 VIA_port_b
COMMENT $28CA 4
COMMENT_LINE $28CB nop 3
COMMENT $28CB 5
FORCE_SYMBOL $28CB VIA_port_b
FORCE_SYMBOL $28CD VIA_t1_cnt_hi
COMMENT_LINE $28D1 SMVB_continue_quadro                                      ;#isfunction
COMMENT_LINE $28D1 SET_Y_INT
COMMENT_LINE $28D1 Y_DELAY                               ; 4
COMMENT_LINE $28D1 stx      <VIA_port_b                  ; 5
COMMENT_LINE $28D1 sta      <VIA_t1_cnt_hi
COMMENT_LINE $28D1 ADD_NOPS
COMMENT_LINE $28D1 bra      cont3
COMMENT_LINE $28D1 it IS better to first = A and THAN B
COMMENT $28D1 4
FORCE_SYMBOL $28D1 VIA_port_a
COMMENT $28D3 4
FORCE_SYMBOL $28D3 VIA_port_b
COMMENT $28D5 4
COMMENT_LINE $28D6 nop 3
COMMENT $28D6 5
FORCE_SYMBOL $28D6 VIA_port_b
FORCE_SYMBOL $28D8 VIA_t1_cnt_hi
COMMENT_LINE $28DC SET_Y_INT
COMMENT_LINE $28DC Y_DELAY                               ; 4
COMMENT_LINE $28DC stx      <VIA_port_b                  ; 5
COMMENT_LINE $28DC sta      <VIA_t1_cnt_hi
COMMENT_LINE $28DC ADD_NOPS
COMMENT_LINE $28DC WAIT_BEFORE
COMMENT $28DC wait 3 cycles
COMMENT $28DE wait 2 cycles
COMMENT $28DF wait 2 cycles
FORCE_SYMBOL $28E0 VIA_t1_cnt_hi
COMMENT $28E2 wait 3 cycles
COMMENT $28E4 wait 3 cycles
COMMENT $28E6 wait 2 cycles
COMMENT $28E7 wait 2 cycles
FORCE_SYMBOL $28E8 VIA_t1_cnt_hi
COMMENT $28EA wait 3 cycles
COMMENT $28EC wait 3 cycles
COMMENT $28EE wait 2 cycles
COMMENT $28EF wait 2 cycles
FORCE_SYMBOL $28F0 VIA_t1_cnt_hi
COMMENT $28F2 wait 3 cycles
COMMENT $28F4 wait 3 cycles
COMMENT $28F6 wait 2 cycles
COMMENT $28F7 wait 2 cycles
FORCE_SYMBOL $28F8 VIA_t1_cnt_hi
FORCE_SYMBOL $28FE VIA_t1_cnt_hi
COMMENT_LINE $2902 it IS better to first = A and THAN B
COMMENT $2902 4
FORCE_SYMBOL $2902 VIA_port_a
COMMENT $2904 4
FORCE_SYMBOL $2904 VIA_port_b
COMMENT $2906 4
COMMENT_LINE $2907 nop 3
COMMENT $2907 5
FORCE_SYMBOL $2907 VIA_port_b
FORCE_SYMBOL $2909 VIA_t1_cnt_hi
COMMENT_LINE $290D it IS better to first = A and THAN B
COMMENT $290D 4
FORCE_SYMBOL $290D VIA_port_a
COMMENT $290F 4
FORCE_SYMBOL $290F VIA_port_b
COMMENT $2911 4
COMMENT $2911 wait 2 cycles
COMMENT $2912 wait 2 cycles
COMMENT_LINE $2913 nop 3
COMMENT $2913 5
FORCE_SYMBOL $2913 VIA_port_b
FORCE_SYMBOL $2915 VIA_t1_cnt_hi
COMMENT_LINE $2919 it IS better to first = A and THAN B
COMMENT $2919 4
FORCE_SYMBOL $2919 VIA_port_a
COMMENT $291B 4
FORCE_SYMBOL $291B VIA_port_b
COMMENT $291D 4
COMMENT $291D wait 6 cycles
COMMENT_LINE $291F nop 3
COMMENT $291F 5
FORCE_SYMBOL $291F VIA_port_b
FORCE_SYMBOL $2921 VIA_t1_cnt_hi
COMMENT_LINE $2925 it IS better to first = A and THAN B
COMMENT $2925 4
FORCE_SYMBOL $2925 VIA_port_a
COMMENT $2927 4
FORCE_SYMBOL $2927 VIA_port_b
FORCE_NO_SYMBOL $2929
FORCE_SYMBOL $292B VIA_shift_reg
COMMENT_LINE $292D nop 3
COMMENT $292D 5
FORCE_SYMBOL $292D VIA_port_b
FORCE_SYMBOL $292F VIA_t1_cnt_hi
COMMENT_LINE $2933 it IS better to first = A and THAN B
COMMENT $2933 4
FORCE_SYMBOL $2933 VIA_port_a
COMMENT $2935 4
FORCE_SYMBOL $2935 VIA_port_b
FORCE_NO_SYMBOL $2937
COMMENT_LINE $2939 nop 3
COMMENT $2939 5
FORCE_SYMBOL $2939 VIA_port_b
FORCE_SYMBOL $293B VIA_t1_cnt_hi
FORCE_SYMBOL $293D VIA_shift_reg
COMMENT $293F reduced by ldu ,u - 5 cycles
COMMENT_LINE $2942 it IS better to first = A and THAN B
COMMENT $2942 4
FORCE_SYMBOL $2942 VIA_port_a
COMMENT $2944 4
FORCE_SYMBOL $2944 VIA_port_b
FORCE_NO_SYMBOL $2946
FORCE_SYMBOL $2948 VIA_shift_reg
COMMENT_LINE $294A nop 3
COMMENT $294A 5
FORCE_SYMBOL $294A VIA_port_b
FORCE_SYMBOL $294C VIA_t1_cnt_hi
COMMENT_LINE $2950 it IS better to first = A and THAN B
COMMENT $2950 4
FORCE_SYMBOL $2950 VIA_port_a
COMMENT $2952 4
FORCE_SYMBOL $2952 VIA_port_b
COMMENT $2954 2
FORCE_SYMBOL $2954 SHITREG_POKE_VALUE
COMMENT $2956 4
FORCE_SYMBOL $2956 VIA_shift_reg
COMMENT_LINE $2958 nop 3
COMMENT $2958 5
FORCE_SYMBOL $2958 VIA_port_b
COMMENT $295A 4
FORCE_SYMBOL $295A VIA_t1_cnt_hi
COMMENT_LINE $295E it IS better to first = A and THAN B
COMMENT $295E 4
FORCE_SYMBOL $295E VIA_port_a
COMMENT $2960 4
FORCE_SYMBOL $2960 VIA_port_b
FORCE_NO_SYMBOL $2962
FORCE_SYMBOL $2964 VIA_shift_reg
COMMENT_LINE $2966 nop 3
COMMENT $2966 5
FORCE_SYMBOL $2966 VIA_port_b
FORCE_SYMBOL $2968 VIA_t1_cnt_hi
COMMENT_LINE $296C it IS better to first = A and THAN B
COMMENT $296C 4
FORCE_SYMBOL $296C VIA_port_a
COMMENT $296E 4
FORCE_SYMBOL $296E VIA_port_b
FORCE_NO_SYMBOL $2970
FORCE_SYMBOL $2972 VIA_shift_reg
COMMENT_LINE $2974 nop 3
COMMENT $2974 5
FORCE_SYMBOL $2974 VIA_port_b
FORCE_SYMBOL $2976 VIA_t1_cnt_hi
COMMENT $297A wait 3 cycles
COMMENT $297C wait 2 cycles
COMMENT $297D wait 2 cycles
FORCE_SYMBOL $297E VIA_t1_cnt_hi
COMMENT $2980 wait 3 cycles
COMMENT $2982 wait 3 cycles
COMMENT $2984 wait 2 cycles
COMMENT $2985 wait 2 cycles
FORCE_SYMBOL $2986 VIA_t1_cnt_hi
FORCE_SYMBOL $298C VIA_t1_cnt_hi
FORCE_NO_SYMBOL $2992
FORCE_SYMBOL $2994 VIA_shift_reg
COMMENT_LINE $2996 nop 3
COMMENT $2996 5
FORCE_SYMBOL $2996 VIA_port_b
FORCE_SYMBOL $2998 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $299C
COMMENT_LINE $299E nop 3
COMMENT $299E 5
FORCE_SYMBOL $299E VIA_port_b
FORCE_SYMBOL $29A0 VIA_t1_cnt_hi
FORCE_SYMBOL $29A2 VIA_shift_reg
COMMENT $29A4 reduced by ldu ,u - 5 cycles
COMMENT_LINE $29A7 assuming b = 1
COMMENT $29A7 4
FORCE_SYMBOL $29A7 VIA_shift_reg
COMMENT_LINE $29A9 nop 3
COMMENT $29A9 5
FORCE_SYMBOL $29A9 VIA_port_b
COMMENT $29AB 4
FORCE_SYMBOL $29AB VIA_t1_cnt_hi
COMMENT_LINE $29AF assume b contains SHIFT
FORCE_SYMBOL $29AF VIA_shift_reg
FORCE_SYMBOL $29B1 VIA_t1_cnt_hi
COMMENT_LINE $29B5 SMVB_startDraw_yStays_single_sj                           ;#isfunction
COMMENT_LINE $29B5 ldb      #SHITREG_POKE_VALUE          ; 2
COMMENT_LINE $29B5 stb      <VIA_shift_reg               ; 4
COMMENT_LINE $29B5 DELAY_NONE
COMMENT_LINE $29B5 stx      <VIA_port_b                  ; 5
COMMENT_LINE $29B5 sta      <VIA_t1_cnt_hi               ; 4
COMMENT_LINE $29B5 ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $29B5 ldu      ,u
COMMENT_LINE $29B5 pulu     b,x,pc
COMMENT_LINE $29B5 it IS better to first = A and THAN B
COMMENT $29B5 4
FORCE_SYMBOL $29B5 VIA_port_a
COMMENT $29B7 4
FORCE_SYMBOL $29B7 VIA_port_b
COMMENT $29B9 2
FORCE_SYMBOL $29B9 SHITREG_POKE_VALUE
COMMENT $29BB 4
FORCE_SYMBOL $29BB VIA_shift_reg
COMMENT_LINE $29BD nop 3
COMMENT $29BD 5
FORCE_SYMBOL $29BD VIA_port_b
COMMENT $29BF 4
FORCE_SYMBOL $29BF VIA_t1_cnt_hi
COMMENT_LINE $0000 SMVB_startDraw_yEqx_single_sj                             ;#isfunction
COMMENT_LINE $0000 SET_Y_INT
COMMENT_LINE $0000 ldb      #$01
COMMENT_LINE $0000 stb      <VIA_shift_reg               ; 4 - ASSUMING SHITREG_POKE_VALUE = 1
COMMENT_LINE $0000 DELAY_NONE
COMMENT_LINE $0000 stb      <VIA_port_b
COMMENT_LINE $0000 sta      <VIA_t1_cnt_hi
COMMENT_LINE $0000 ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $0000 ldu      ,u
COMMENT_LINE $0000 pulu     b,x,pc
COMMENT_LINE $29C3 it IS better to first = A and THAN B
COMMENT $29C3 4
FORCE_SYMBOL $29C3 VIA_port_a
COMMENT $29C5 4
FORCE_SYMBOL $29C5 VIA_port_b
FORCE_NO_SYMBOL $29C7
COMMENT $29C9 4 - ASSUMING SHITREG_POKE_VALUE = 1
FORCE_SYMBOL $29C9 VIA_shift_reg
COMMENT_LINE $29CB nop 3
FORCE_SYMBOL $29CB VIA_port_b
FORCE_SYMBOL $29CD VIA_t1_cnt_hi
COMMENT_LINE $29D1 it IS better to first = A and THAN B
COMMENT $29D1 4
FORCE_SYMBOL $29D1 VIA_port_a
COMMENT $29D3 4
FORCE_SYMBOL $29D3 VIA_port_b
COMMENT_LINE $29D5 nop 3
FORCE_SYMBOL $29D5 VIA_port_b
FORCE_SYMBOL $29D7 VIA_t1_cnt_hi
COMMENT $29D9 4
FORCE_SYMBOL $29D9 VIA_shift_reg
COMMENT_LINE $29DD it IS better to first = A and THAN B
COMMENT $29DD 4
FORCE_SYMBOL $29DD VIA_port_a
COMMENT $29DF 4
FORCE_SYMBOL $29DF VIA_port_b
COMMENT_LINE $29E2 nop 3
COMMENT_LINE $29E2 nop
COMMENT_LINE $29E2 nop
FORCE_SYMBOL $29E2 VIA_port_b
FORCE_SYMBOL $29E4 VIA_t1_cnt_hi
COMMENT $29E6 4
FORCE_SYMBOL $29E6 VIA_shift_reg
FORCE_SYMBOL $29EA VIA_t1_cnt_hi
FORCE_SYMBOL $29EC VIA_shift_reg
COMMENT_LINE $29F0 it IS better to first = A and THAN B
COMMENT $29F0 4
FORCE_SYMBOL $29F0 VIA_port_a
COMMENT $29F2 4
FORCE_SYMBOL $29F2 VIA_port_b
COMMENT $29F4 wait 2 cycles
COMMENT_LINE $29F5 nop 3
FORCE_SYMBOL $29F5 VIA_port_b
FORCE_SYMBOL $29F7 VIA_t1_cnt_hi
COMMENT $29F9 4
FORCE_SYMBOL $29F9 VIA_shift_reg
COMMENT $29FB reduced by ldu ,u - 5 cycles
FORCE_NO_SYMBOL $29FC
COMMENT_LINE $2A00 SMVB_startMove_yd4_yEqx_single_sj                         ;#isfunction
COMMENT_LINE $2A00 SET_Y_INT
COMMENT_LINE $2A00 WAIT2
COMMENT_LINE $2A00 Y_DELAY_HALF_4
COMMENT_LINE $2A00 stx      <VIA_port_b
COMMENT_LINE $2A00 sta      <VIA_t1_cnt_hi
COMMENT_LINE $2A00 sta      <VIA_shift_reg               ; 4
COMMENT_LINE $2A00 ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $2A00 ldu      ,u
COMMENT_LINE $2A00 pulu     b,x,pc
COMMENT $2A00 4
FORCE_SYMBOL $2A00 VIA_port_b
FORCE_NO_SYMBOL $2A02
FORCE_SYMBOL $2A04 VIA_shift_reg
COMMENT_LINE $2A06 nop 3
COMMENT $2A06 5
FORCE_SYMBOL $2A06 VIA_port_b
FORCE_SYMBOL $2A08 VIA_t1_cnt_hi
COMMENT $2A0A reduced by ldu ,u - 5 cycles
COMMENT $2A0C 4
FORCE_SYMBOL $2A0C VIA_port_b
FORCE_NO_SYMBOL $2A0E
COMMENT_LINE $2A10 nop 3
COMMENT $2A10 5
FORCE_SYMBOL $2A10 VIA_port_b
FORCE_SYMBOL $2A12 VIA_t1_cnt_hi
FORCE_SYMBOL $2A14 VIA_shift_reg
COMMENT $2A16 reduced by ldu ,u - 5 cycles
COMMENT $2A19 4
FORCE_SYMBOL $2A19 VIA_port_b
FORCE_SYMBOL $2A1B SHITREG_POKE_VALUE
COMMENT $2A1D 4
FORCE_SYMBOL $2A1D VIA_shift_reg
COMMENT_LINE $2A1F nop 3
COMMENT $2A1F 5
FORCE_SYMBOL $2A1F VIA_port_b
FORCE_SYMBOL $2A21 VIA_t1_cnt_hi
COMMENT_LINE $2A25 SMVB_startDraw_newY_eq_oldX_single_sj:                    ;#isfunction
COMMENT_LINE $2A25 sta      <VIA_port_b                  ; 4
COMMENT_LINE $2A25 ldb      #SHITREG_POKE_VALUE
COMMENT_LINE $2A25 stb      <VIA_shift_reg               ; 4
COMMENT_LINE $2A25 DELAY_NONE
COMMENT_LINE $2A25 stx      <VIA_port_b                  ; 5
COMMENT_LINE $2A25 sta      <VIA_t1_cnt_hi
COMMENT_LINE $2A25 ADD_NOPS_NOU                          ; reduced by ldu ,u - 5 cycles
COMMENT_LINE $2A25 ldu      ,u
COMMENT_LINE $2A25 pulu     b,x,pc
FORCE_SYMBOL $2A25 VIA_int_flags
COMMENT $2A27 wait 6 cycles
COMMENT_LINE $2A29 my new VIA
COMMENT_LINE $2A29 seems to = T1 falsely when = during a
COMMENT_LINE $2A29 specific event (e.g. timer = 0)
COMMENT_LINE $2A29 if that happens, either the I flags are not
COMMENT_LINE $2A29 reseted - or T1 Hi = to very hi,
COMMENT_LINE $2A29 anyway, when in warp, the last "SMVB_continue_yStays_single"
COMMENT_LINE $2A29 of the failure bugs
COMMENT_LINE $2A29 when the explosion has a growth of 4 that condition is
COMMENT_LINE $2A29 met and vectrex HALTS dure to this check
COMMENT_LINE $2A29 setting it to DISABLES
COMMENT_LINE $2A29 doesn't make much difference in a 7 scale Smart draw!
COMMENT_LINE $2A29 so for now I just disable it
COMMENT_LINE $2A29 beq      SMVB_FlagWait
FORCE_SYMBOL $2A29 VIA_shift_reg
FORCE_SYMBOL $2A2B gameScale
FORCE_NO_SYMBOL $2A2E
COMMENT $2A30 /BLANK low and /ZERO low
FORCE_SYMBOL $2A30 VIA_cntl
FORCE_SYMBOL $2A32 VIA_t1_cnt_lo
COMMENT_LINE $2A34 and ensures integrators are clean (good positioning!)
FORCE_SYMBOL $2A34 VIA_port_b
COMMENT_LINE $2A37 // TODO CHECK WITH SHIELD + CO
FORCE_SYMBOL $2A37 VIA_int_flags
FORCE_SYMBOL $2A3B VIA_shift_reg
FORCE_NO_SYMBOL $2A40
FORCE_SYMBOL $2A42 VIA_int_flags
COMMENT_LINE $2A47 todo
COMMENT_LINE $2A47 last draw could contain $F in A
COMMENT_LINE $2A47 than load not needed - attention
COMMENT_LINE $2A47 when cycles are not done for load, than shift value might be needed 2 higher!
COMMENT_LINE $2A47 also in X could be some sensible value in X for one of the other
COMMENT_LINE $2A47 ldb      #$f0
FORCE_SYMBOL $2A48 VIA_shift_reg
FORCE_SYMBOL $2A4A gameScale
FORCE_SYMBOL $2A4D VIA_t1_cnt_lo
COMMENT_LINE $2A4F extended on purpose to gain one cycle of time
COMMENT_LINE $2A4F to reset to
COMMENT_LINE $2A4F a) swithc light off before zeroing
COMMENT_LINE $2A4F b) zero
FORCE_NO_SYMBOL $2A4F
COMMENT $2A51 /BLANK low and /ZERO low
FORCE_SYMBOL $2A51 VIA_cntl
FORCE_SYMBOL $2A54 VIA_port_b
COMMENT_LINE $2A57 nop 10
COMMENT $2A57 (D = y,x, pc = next object)
FORCE_NO_SYMBOL $2A59
FORCE_SYMBOL $2A5B VIA_cntl
FORCE_NO_SYMBOL $2A5D
FORCE_SYMBOL $2A60 VIA_port_b
FORCE_SYMBOL $2A62 VIA_port_b
FORCE_SYMBOL $2A64 calibrationValue7
FORCE_SYMBOL $2A67 additionalFlags
FORCE_NO_SYMBOL $2A6A
FORCE_NO_SYMBOL $2A6E
FORCE_SYMBOL $2A70 VIA_port_b
COMMENT $2A72 2 cycles
FORCE_NO_SYMBOL $2A72
FORCE_SYMBOL $2A75 VIA_port_a
FORCE_SYMBOL $2A77 VIA_port_b
FORCE_NO_SYMBOL $2A7A
FORCE_SYMBOL $2A7C VIA_port_b
COMMENT $2A7E 2 cycles
FORCE_NO_SYMBOL $2A7E
FORCE_SYMBOL $2A81 VIA_port_a
FORCE_SYMBOL $2A85 VIA_port_b
COMMENT_LINE $2A88 bank 3 + 0
COMMENT $2A88 CURRENT_BANK = 3
COMMENT $2A88 list of all single vectorlists in this
COMMENT $2A8C list of all single vectorlists in this
COMMENT $2A90 list of all single vectorlists in this
COMMENT $2B78 USE_FIGHTER_ANIM = 1
COMMENT_LINE $2B78 bank 3
COMMENT_LINE $2B78 score display is realized as a "message" system
COMMENT_LINE $2B78 Score is the default message but there can be others
COMMENT_LINE $2B78 Configuarble Blinking scrolling in from left, right top button!
COMMENT_LINE $2B78 uses five font
COMMENT_LINE $2B78 font can be colorized (per line top/bottom
COMMENT_LINE $2B78 Calib X,Y
COMMENT_LINE $2B78 color table
COMMENT_LINE $2B78 text
COMMENT_LINE $2B78 effect: Blink, intensity, colorCycle
COMMENT_LINE $2B78 mode: multi line (text scrolls in out vertically)
COMMENT_LINE $2B78 default text (score)
COMMENT_LINE $2B7C 12
COMMENT_LINE $2B8B output "here" one line of a string
COMMENT_LINE $2B8B return to beginning with one step down
COMMENT_LINE $2B8B pointer to string in "Vec_Str_Ptr"
COMMENT_LINE $2B8B size in Vec_Text_Height / Vec_Text_Width
COMMENT_LINE $2B8B start of font in x (correct line) in font bit map
COMMENT $0000 Update RAMP, set mux to channel 1
COMMENT $0000 Enable mux
COMMENT $0000 Disable RAMP, set mux to channel 0
COMMENT $0000 Enable mux
COMMENT $0000 Get text width
COMMENT $0000 Disable RAMP, set mux to channel 0
COMMENT $0000 Send it to the D/A
COMMENT $0000 Point to start of text string
COMMENT $0000 Enable RAMP, disable mux
COMMENT $0000 Get bitmap from chargen table
COMMENT $0000 Save in shift register
COMMENT $0000 Get next character
COMMENT $0000 Go back if not terminator
COMMENT $0000 disable RAMP, disable mux
COMMENT $0000 Negate text width to D/A
COMMENT $0000 Enable RAMP, disable mux
COMMENT $0000 Check for last row
COMMENT $0000 Branch if last row
COMMENT $0000 Point to next chargen row
COMMENT $0000 Get string length
COMMENT $0000 - 2
COMMENT $0000 * 2
COMMENT $0000 Delay a moment
COMMENT $0000 Delay some more in a loop
COMMENT $0000 Disable RAMP, disable mux
COMMENT $0000 Get text height
COMMENT $0000 Store text height in D/A
COMMENT $0000 Enable mux
COMMENT $0000 Wait a moment
COMMENT $0000 disable RAMP, disable mux
COMMENT $0000 Clear D/A
COMMENT $0000 Enable RAMP, disable mux
COMMENT $0000 Disable RAMP, disable mux
COMMENT_LINE $0000 string pointer in        Vec_Str_Ptr
COMMENT_LINE $0000 in D position
COMMENT $0000 Point to start of chargen bitmaps
COMMENT $0000 $8x = disable RAMP?
COMMENT $0000 Clear D/A output
COMMENT $0000 Shift reg mode = 110, T1 PB7 enabled
COMMENT $0000 T1->PB7 enabled
COMMENT $0000 $0x = enable RAMP?
COMMENT_LINE $0000 all other states are checked "in move"
FORCE_NO_SYMBOL $2B8B
COMMENT $2B8D Store intensity in D/A
FORCE_SYMBOL $2B8D VIA_port_a
COMMENT $2B8F mux disabled channel 2
FORCE_NO_SYMBOL $2B8F
FORCE_SYMBOL $2B92 VIA_port_b
COMMENT $2B94 mux enabled channel 2
FORCE_SYMBOL $2B94 VIA_port_b
COMMENT $2B96 turn off mux
FORCE_SYMBOL $2B96 VIA_port_b
COMMENT_LINE $2B98 ldd      #$7f10
FORCE_NO_SYMBOL $2B98
COMMENT $2B9B Store Y in D/A register
FORCE_SYMBOL $2B9B VIA_port_a
COMMENT $2B9D Blank low, zero high?
FORCE_NO_SYMBOL $2B9D
FORCE_SYMBOL $2B9F VIA_cntl
COMMENT $2BA2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $2BA2 VIA_port_b
COMMENT $2BA4 y must be set more than xx cycles on some vectrex
COMMENT $2BA5 Disable mux
FORCE_SYMBOL $2BA5 VIA_port_b
COMMENT $2BA7 Store X in D/A register
FORCE_SYMBOL $2BA7 VIA_port_a
COMMENT $2BA9 enable timer
FORCE_SYMBOL $2BA9 VIA_t1_cnt_hi
COMMENT $2BAB a = messageState, b = messageTimer
FORCE_SYMBOL $2BAB messageState
FORCE_SYMBOL $2BAE MESSAGE_STATE_SCROLL_NORMAL_OUT
FORCE_SYMBOL $2BB2 messageTimer
FORCE_SYMBOL $2BB5 messageTimer
FORCE_SYMBOL $2BBC MESSAGE_STATE_SCROLL_MESSAGE_IN
FORCE_SYMBOL $2BBE messageState
FORCE_NO_SYMBOL $2BC1
FORCE_SYMBOL $2BC3 messageTimer
FORCE_SYMBOL $2BC6 scrollOut
FORCE_SYMBOL $2BC9 MESSAGE_STATE_SCROLL_MESSAGE_IN
FORCE_SYMBOL $2BCD messagePointer
FORCE_SYMBOL $2BD0 messageTimer
FORCE_SYMBOL $2BD3 messageTimer
FORCE_SYMBOL $2BDA MESSAGE_STATE_STAY_TIMED
FORCE_SYMBOL $2BDC messageState
FORCE_NO_SYMBOL $2BDF
FORCE_SYMBOL $2BE1 messageTimer
FORCE_SYMBOL $2BE4 scrollIn
FORCE_SYMBOL $2BE7 MESSAGE_STATE_SCROLL_MESSAGE_OUT
FORCE_SYMBOL $2BEB messagePointer
FORCE_SYMBOL $2BEE messageTimer
FORCE_SYMBOL $2BF1 messageTimer
FORCE_SYMBOL $2BF8 MESSAGE_STATE_SCROLL_NORMAL_IN
FORCE_SYMBOL $2BFA messageState
FORCE_NO_SYMBOL $2BFD
FORCE_SYMBOL $2BFF messageTimer
FORCE_SYMBOL $2C02 scrollOut
FORCE_SYMBOL $2C05 MESSAGE_STATE_SCROLL_NORMAL_IN
FORCE_SYMBOL $2C09 messageTimer
FORCE_SYMBOL $2C0C messageTimer
FORCE_SYMBOL $2C13 MESSAGE_STATE_STAY
FORCE_SYMBOL $2C15 messageState
FORCE_NO_SYMBOL $2C18
FORCE_SYMBOL $2C1A messageTimer
FORCE_SYMBOL $2C1D scrollIn
COMMENT_LINE $2C20 ------------------------------------------------------
COMMENT $2C20 score isdefault
FORCE_SYMBOL $2C20 player_score
COMMENT $2C23 movement scale
FORCE_SYMBOL $2C23 gameScale
FORCE_SYMBOL $2C26 VIA_t1_cnt_lo
COMMENT $2C28 check message state
FORCE_SYMBOL $2C28 messageState
COMMENT $2C2B if normal "score" jump to color cycle
FORCE_SYMBOL $2C2B MESSAGE_STATE_STAY
COMMENT $2C2F a "timed" message is stable
FORCE_SYMBOL $2C2F MESSAGE_STATE_STAY_TIMED
COMMENT $2C31 not? than check next possible state
COMMENT $2C35 get the current message
FORCE_SYMBOL $2C35 messagePointer
COMMENT $2C38 checkif timer expired
FORCE_SYMBOL $2C38 messageTimer
COMMENT $2C3D if expired - scroll this message out!
FORCE_SYMBOL $2C3D MESSAGE_STATE_SCROLL_MESSAGE_OUT
COMMENT $2C3F save new message state
FORCE_SYMBOL $2C3F messageState
COMMENT $2C42 in steps of 2 (keeping 2 rounds each)
FORCE_NO_SYMBOL $2C42
COMMENT $2C44 save timer
FORCE_SYMBOL $2C44 messageTimer
COMMENT_LINE $2C47 jmp normalMessageCont ; -> also jump to color cycling
FORCE_SYMBOL $2C47 colorCycleCount
FORCE_NO_SYMBOL $2C4D
FORCE_SYMBOL $2C51 colorCycleCount
FORCE_NO_SYMBOL $2C54
FORCE_SYMBOL $2C59 colorCycleCount
FORCE_SYMBOL $2C5C colorCycleData
COMMENT $2C64 Store intensity in D/A
FORCE_SYMBOL $2C64 VIA_port_a
COMMENT $2C66 mux disabled channel 2
FORCE_NO_SYMBOL $2C66
FORCE_SYMBOL $2C69 VIA_port_b
COMMENT $2C6B mux enabled channel 2
FORCE_SYMBOL $2C6B VIA_port_b
COMMENT $2C6D turn off mux
FORCE_SYMBOL $2C6D VIA_port_b
FORCE_NO_SYMBOL $2C6F
COMMENT $2C72 Store Y in D/A register
FORCE_SYMBOL $2C72 VIA_port_a
COMMENT $2C74 Blank low, zero high?
FORCE_NO_SYMBOL $2C74
FORCE_SYMBOL $2C76 VIA_cntl
COMMENT $2C79 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $2C79 VIA_port_b
COMMENT $2C7B y must be set more than xx cycles on some vectrex
COMMENT $2C7C Disable mux
FORCE_SYMBOL $2C7C VIA_port_b
COMMENT $2C7E Store X in D/A register
FORCE_SYMBOL $2C7E VIA_port_a
COMMENT $2C80 enable timer
FORCE_SYMBOL $2C80 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $2C82
FORCE_SYMBOL $2C84 tmp2_tmp
FORCE_SYMBOL $2C87 Vec_Str_Ptr
COMMENT $2C8A Point to start of chargen bitmaps
FORCE_SYMBOL $2C8A FONT_START_A
FORCE_NO_SYMBOL $2C8D
FORCE_SYMBOL $2C8F VIA_int_flags
COMMENT $2C93 $8x = disable RAMP?
FORCE_NO_SYMBOL $2C93
COMMENT $2C96 Clear D/A output
FORCE_SYMBOL $2C96 VIA_port_a
COMMENT $2C98 Shift reg mode = 110, T1 PB7 enabled
FORCE_SYMBOL $2C98 VIA_aux_cntl
COMMENT $2C9A Update RAMP, set mux to channel 1
FORCE_SYMBOL $2C9A VIA_port_b
COMMENT $2C9D Enable mux
FORCE_SYMBOL $2C9D VIA_port_b
FORCE_NO_SYMBOL $2C9F
COMMENT $2CA2 Disable RAMP, set mux to channel 0
FORCE_SYMBOL $2CA2 VIA_port_b
COMMENT $2CA4 Enable mux
FORCE_SYMBOL $2CA4 VIA_port_b
COMMENT $2CA6 Get text width
FORCE_SYMBOL $2CA6 MESSAGE_TEXT_WIDTH
COMMENT $2CA8 Disable RAMP, set mux to channel 0
FORCE_SYMBOL $2CA8 VIA_port_b
COMMENT $2CAA Send it to the D/A
FORCE_SYMBOL $2CAA VIA_port_a
FORCE_NO_SYMBOL $2CAC
COMMENT $2CAE Point to start of text string
FORCE_SYMBOL $2CAE Vec_Str_Ptr
COMMENT $2CB1 Enable RAMP, disable mux
FORCE_SYMBOL $2CB1 VIA_port_b
COMMENT $2CB5 Get bitmap from chargen table
COMMENT $2CB7 Save in shift register
FORCE_SYMBOL $2CB7 VIA_shift_reg
COMMENT $2CB9 Get next character
COMMENT $2CBB Go back if not terminator
FORCE_NO_SYMBOL $2CBD
COMMENT $2CBF disable RAMP, disable mux
FORCE_SYMBOL $2CBF VIA_port_b
COMMENT $2CC1 Negate text width to D/A
FORCE_SYMBOL $2CC1 VIA_port_a
COMMENT $2CC3 Enable RAMP, disable mux
FORCE_SYMBOL $2CC3 VIA_port_b
COMMENT $2CC5 Check for last row
FORCE_SYMBOL $2CC5 FONT_END
COMMENT $2CC8 Branch if last row
COMMENT $2CCA Point to next chargen row
FORCE_SYMBOL $2CCA FONT_LENGTH
COMMENT $2CCD Get string length
FORCE_SYMBOL $2CCF Vec_Str_Ptr
COMMENT $2CD2 - 2
FORCE_NO_SYMBOL $2CD2
COMMENT $2CD4 * 2
COMMENT $2CD5 Delay a moment
FORCE_NO_SYMBOL $2CD7
COMMENT $2CDB Delay some more in a loop
COMMENT $2CDD Disable RAMP, disable mux
FORCE_SYMBOL $2CDD VIA_port_b
COMMENT $2CDF Get text height
FORCE_SYMBOL $2CDF MESSAGE_TEXT_HEIGHT
COMMENT $2CE1 Store text height in D/A
FORCE_SYMBOL $2CE1 VIA_port_a
COMMENT $2CE4 Enable mux
FORCE_SYMBOL $2CE4 VIA_port_b
FORCE_NO_SYMBOL $2CE6
COMMENT $2CE9 Wait a moment
COMMENT $2CEA disable RAMP, disable mux
FORCE_SYMBOL $2CEA VIA_port_b
COMMENT $2CEC Clear D/A
FORCE_SYMBOL $2CEC VIA_port_a
COMMENT $2CEE Enable RAMP, disable mux
FORCE_SYMBOL $2CEE VIA_port_b
COMMENT $2CF0 Disable RAMP, disable mux
FORCE_SYMBOL $2CF0 VIA_port_b
COMMENT $2CF2 y pointer to color ta
COMMENT $2CF4 intensity 8 keeps ramp to disabled!
COMMENT $2CF4 Store intensity in D/A
FORCE_SYMBOL $2CF4 VIA_port_a
COMMENT $2CF6 mux disabled channel 2
FORCE_NO_SYMBOL $2CF6
FORCE_SYMBOL $2CF9 VIA_port_b
COMMENT $2CFB mux enabled channel 2
FORCE_SYMBOL $2CFB VIA_port_b
COMMENT $2CFD turn off mux
FORCE_SYMBOL $2CFD VIA_port_b
COMMENT $2CFF needed aftr intensity setting!
FORCE_SYMBOL $2CFF VIA_port_a
COMMENT $2D01 $0x = enable RAMP?
FORCE_NO_SYMBOL $2D01
FORCE_SYMBOL $2D03 tmp2_tmp
FORCE_NO_SYMBOL $2D08
COMMENT $2D0A T1->PB7 enabled
FORCE_SYMBOL $2D0A VIA_aux_cntl
FORCE_SYMBOL $2D0C calibrationZero7
COMMENT_LINE $2D0F scroll position is messageTimer/2
COMMENT_LINE $2D0F scroll message is in U
COMMENT_LINE $2D0F scrolling is out in the top
COMMENT_LINE $2D0F scrolling is in from top
FORCE_NO_SYMBOL $2D10
COMMENT $2D12 Point to start of chargen bitmaps
FORCE_SYMBOL $2D12 FONT_START_A
FORCE_SYMBOL $2D15 Vec_Str_Ptr
COMMENT_LINE $2D19 that many lines we "skip"
COMMENT_LINE $2D19 prepare String
FORCE_NO_SYMBOL $2D19
FORCE_NO_SYMBOL $2D1D
FORCE_NO_SYMBOL $2D21
COMMENT $2D25 Point to next chargen row
FORCE_SYMBOL $2D25 FONT_LENGTH
FORCE_NO_SYMBOL $2D28
FORCE_NO_SYMBOL $2D2C
COMMENT $2D30 Point to next chargen row
FORCE_NO_SYMBOL $2D34
FORCE_NO_SYMBOL $2D38
COMMENT $2D3C Point to next chargen row
FORCE_NO_SYMBOL $2D40
FORCE_NO_SYMBOL $2D44
COMMENT $2D48 Point to next chargen row
FORCE_NO_SYMBOL $2D4C
FORCE_NO_SYMBOL $2D50
FORCE_SYMBOL $2D52 VIA_int_flags
FORCE_SYMBOL $2D58 tmp2_tmp
FORCE_NO_SYMBOL $2D5B
FORCE_SYMBOL $2D5D VIA_int_flags
COMMENT $2D61 $8x = disable RAMP?
FORCE_NO_SYMBOL $2D61
COMMENT $2D64 Clear D/A output
FORCE_SYMBOL $2D64 VIA_port_a
COMMENT $2D66 Shift reg mode = 110, T1 PB7 enabled
FORCE_SYMBOL $2D66 VIA_aux_cntl
COMMENT $2D68 Update RAMP, set mux to channel 1
FORCE_SYMBOL $2D68 VIA_port_b
COMMENT $2D6B Enable mux
FORCE_SYMBOL $2D6B VIA_port_b
FORCE_NO_SYMBOL $2D6D
COMMENT $2D70 Disable RAMP, set mux to channel 0
FORCE_SYMBOL $2D70 VIA_port_b
COMMENT $2D72 Enable mux
FORCE_SYMBOL $2D72 VIA_port_b
COMMENT $2D74 Get text width
FORCE_SYMBOL $2D74 MESSAGE_TEXT_WIDTH
COMMENT $2D76 Disable RAMP, set mux to channel 0
FORCE_SYMBOL $2D76 VIA_port_b
COMMENT $2D78 Send it to the D/A
FORCE_SYMBOL $2D78 VIA_port_a
FORCE_NO_SYMBOL $2D7A
COMMENT $2D7C Point to start of text string
FORCE_SYMBOL $2D7C Vec_Str_Ptr
COMMENT $2D7F Enable RAMP, disable mux
FORCE_SYMBOL $2D7F VIA_port_b
COMMENT $2D83 Get bitmap from chargen table
COMMENT $2D85 Save in shift register
FORCE_SYMBOL $2D85 VIA_shift_reg
COMMENT $2D87 Get next character
COMMENT $2D89 Go back if not terminator
FORCE_NO_SYMBOL $2D8B
COMMENT $2D8D disable RAMP, disable mux
FORCE_SYMBOL $2D8D VIA_port_b
COMMENT $2D8F Negate text width to D/A
FORCE_SYMBOL $2D8F VIA_port_a
COMMENT $2D91 Enable RAMP, disable mux
FORCE_SYMBOL $2D91 VIA_port_b
COMMENT $2D93 Check for last row
FORCE_SYMBOL $2D93 FONT_END
COMMENT $2D96 Branch if last row
COMMENT $2D98 Point to next chargen row
FORCE_SYMBOL $2D98 FONT_LENGTH
COMMENT $2D9B Get string length
FORCE_SYMBOL $2D9D Vec_Str_Ptr
COMMENT $2DA0 - 2
FORCE_NO_SYMBOL $2DA0
COMMENT $2DA2 * 2
COMMENT $2DA3 Delay a moment
FORCE_NO_SYMBOL $2DA5
COMMENT $2DA9 Delay some more in a loop
COMMENT $2DAB Disable RAMP, disable mux
FORCE_SYMBOL $2DAB VIA_port_b
COMMENT $2DAD Get text height
FORCE_SYMBOL $2DAD MESSAGE_TEXT_HEIGHT
COMMENT $2DAF Store text height in D/A
FORCE_SYMBOL $2DAF VIA_port_a
COMMENT $2DB2 Enable mux
FORCE_SYMBOL $2DB2 VIA_port_b
FORCE_NO_SYMBOL $2DB4
COMMENT $2DB7 Wait a moment
COMMENT $2DB8 disable RAMP, disable mux
FORCE_SYMBOL $2DB8 VIA_port_b
COMMENT $2DBA Clear D/A
FORCE_SYMBOL $2DBA VIA_port_a
COMMENT $2DBC Enable RAMP, disable mux
FORCE_SYMBOL $2DBC VIA_port_b
COMMENT $2DBE Disable RAMP, disable mux
FORCE_SYMBOL $2DBE VIA_port_b
COMMENT $2DC0 $0x = enable RAMP?
FORCE_NO_SYMBOL $2DC0
FORCE_SYMBOL $2DC2 tmp2_tmp
FORCE_NO_SYMBOL $2DC7
COMMENT $2DC9 T1->PB7 enabled
FORCE_SYMBOL $2DC9 VIA_aux_cntl
FORCE_SYMBOL $2DCB calibrationZero7
COMMENT $2DCE SaucerWindowAnim
COMMENT $2DD1 SaucerWindowAnim
COMMENT $2DD3 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $2DD5 MoneyMothershipAnim
COMMENT $2DD8 MoneyMothershipAnim
COMMENT $2DDA ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $2DDC MegaFiendAnim
COMMENT $2DDF MegaFiendAnim
COMMENT $2DE1 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $2DE3 MoneySuckerBaseAnim
COMMENT $2DE6 MoneySuckerBaseAnim
COMMENT $2DE8 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $2DEC HP
COMMENT $2DEF 0+TYPE_CAN_CLONE, 64+60; ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT_LINE $2DF1 2 clone + 60 delay
COMMENT $2DF6 0+TYPE_CAN_CLONE, 64+60; ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT_LINE $2DF8 2 clone + 60 delay
COMMENT $2DFD 0+TYPE_CAN_CLONE, 64+60; ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT_LINE $2DFF 2 clone + 60 delay
COMMENT $2E01 hp
COMMENT $2E10 list of all single vectorlists in this
COMMENT $30C6 hp
COMMENT $30DB hp
COMMENT $30EA list of all single vectorlists in this
COMMENT $32D3 y was $2E, now SHIFT Poke
COMMENT $3394 blocker
COMMENT $3396 hp
COMMENT $339B list of all single vectorlists in this
COMMENT $339D list of all single vectorlists in this
COMMENT $339F list of all single vectorlists in this
COMMENT $33A1 list of all single vectorlists in this
COMMENT $33A3 list of all single vectorlists in this
COMMENT $33A5 list of all single vectorlists in this
COMMENT $33A7 list of all single vectorlists in this
COMMENT $33A9 list of all single vectorlists in this
COMMENT $33E7 ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $33EF ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $33F2 list of all single vectorlists in this
COMMENT $33FC list of all single vectorlists in this
COMMENT $36C7 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $36CE ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $36D5 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $36DC ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $36E3 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $36EA ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $36EC list of all single vectorlists in this
COMMENT $36F6 list of all single vectorlists in this
COMMENT $39D1 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $39D8 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $39DF ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $39E6 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $39ED ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $39F4 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $3A1A y is -$48
COMMENT $3A64 y is -$6B
COMMENT $3A9E y is -$67
COMMENT $3ADC y is $42
COMMENT $3AE1 y is -$42
COMMENT $3AED y is $42
COMMENT $3AF2 y is -$42
COMMENT $3AFE y is $00
COMMENT $3B03 y is $00
COMMENT $3B14 y is $42
COMMENT $3B25 y is $42
COMMENT $3B42 y was -$42
COMMENT $3B47 y is $42
COMMENT $3B53 y was -$42
COMMENT $3B58 y is $42
COMMENT $3B64 y is $00
COMMENT $3B69 y is $00
COMMENT $3B7A y is -$42
COMMENT $3B8B y is -$42
COMMENT $3B94 HP
COMMENT $3B97 ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $3B9A list of all single vectorlists in this
COMMENT $3BA8 list of all single vectorlists in this
COMMENT $3CC1 y is $57
COMMENT $3DE5 y is -$57
COMMENT $3EDD not used MUST be zero to identify a bug enemy
COMMENT $3EDF hp
COMMENT $3EE2 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3EE4 not used MUST be zero to identify a bug enemy
COMMENT $3EE6 hp
COMMENT $3EE9 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3EEB not used MUST be zero to identify a bug enemy
COMMENT $3EED hp
COMMENT $3EF0 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3EF2 not used MUST be zero to identify a bug enemy
COMMENT $3EF4 hp
COMMENT $3EF7 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3EF9 not used MUST be zero to identify a bug enemy
COMMENT $3EFB hp
COMMENT $3EFE 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F00 not used MUST be zero to identify a bug enemy
COMMENT $3F02 hp
COMMENT $3F05 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F07 not used MUST be zero to identify a bug enemy
COMMENT $3F09 hp
COMMENT $3F0C 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F0E not used MUST be zero to identify a bug enemy
COMMENT $3F10 hp
COMMENT $3F13 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F15 not used MUST be zero to identify a bug enemy
COMMENT $3F17 hp
COMMENT $3F1A 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F1C not used MUST be zero to identify a bug enemy
COMMENT $3F1E hp
COMMENT $3F21 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F27 not used MUST be zero to identify a bug enemy
COMMENT $3F29 hp
COMMENT $3F2C bullet speed +32 and is tripple shot
COMMENT $3F2E not used MUST be zero to identify a bug enemy
COMMENT $3F30 hp
COMMENT $3F33 1+128,TYPE_NONE ; bullet speed and is target shot
COMMENT $3F35 not used MUST be zero to identify a bug enemy
COMMENT $3F37 hp
COMMENT $3F3A 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F3C list of all single vectorlists in this
COMMENT $3F46 not used MUST be zero to identify a bug enemy
COMMENT $3F48 hp
COMMENT $3F4B bullet speed +32 and is tripple shot
COMMENT $3F4D not used MUST be zero to identify a bug enemy
COMMENT $3F4F hp
COMMENT $3F52 1+128 ,TYPE_NONE ; bullet speed and is target shot
COMMENT $3F54 not used MUST be zero to identify a bug enemy
COMMENT $3F56 hp
COMMENT $3F59 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F5B not used MUST be zero to identify a bug enemy
COMMENT $3F5D hp
COMMENT $3F60 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT $3F62 not used MUST be zero to identify a bug enemy
COMMENT $3F64 hp
COMMENT $3F67 1+128 ,TYPE_NONE ; bullet speed and is target shot
COMMENT $3F69 not used MUST be zero to identify a bug enemy
COMMENT $3F6B hp
COMMENT $3F6E bullet speed +32 and is tripple shot
COMMENT $3F70 list of all single vectorlists in this
COMMENT $42A8 y is $2E
COMMENT $42DB y was -$61, now SHIFT Poke
COMMENT $436D y is $26
COMMENT $43A0 y was -$51, now SHIFT Poke
COMMENT $4527 list of all single vectorlists in this
COMMENT $456F y is $0F
COMMENT_LINE $45F9 one swarm element for explosion with "normal" explode!
COMMENT $45F9 list of all single vectorlists in this
COMMENT $4625 not used MUST be zero to identify a bug enemy
COMMENT $4627 hp
COMMENT $4628 WarperAnimData
COMMENT $462A 1+128 ,TYPE_NONE ; bullet speed and is missile
COMMENT_LINE $462C bank 2
COMMENT_LINE $46C1 bank 3
COMMENT_LINE $46C1 ****************************************************************************************************
COMMENT_LINE $46C1 patterns for enemies to enter the game
COMMENT_LINE $46C1 each pattern
COMMENT_LINE $46C1 has a series of "checkpoints"
COMMENT_LINE $46C1 a starting coordinate y, x
COMMENT_LINE $46C1 a 8 bit "adder" to reach the next coordinate
COMMENT_LINE $46C1 and an angle. that the enemies should be displayed with
COMMENT_LINE $46C1 PATTERN_TARGET_REACHED_RADIUS  =  1                       ; radius arround a point that is checked whether the designated target of the pattern has been reached
COMMENT_LINE $46C1 spawns enemies according to the current levels
COMMENT_LINE $46C1 spawn patterns
FORCE_SYMBOL $46C1 patternDelayCounter
FORCE_SYMBOL $46C6 patternDelayCounter
FORCE_SYMBOL $46C9 patternDelayCounter
FORCE_NO_SYMBOL $46CC
FORCE_SYMBOL $46D0 lockPurchased
FORCE_SYMBOL $46D5 lockPurchased
COMMENT_LINE $46D8 lda      #GAMEPHASE_INGAME
COMMENT_LINE $46D8 sta      game_phase
COMMENT_LINE $46D9 ...............................................................................
FORCE_SYMBOL $46D9 LEVEL_ENEMY_COUNT
FORCE_SYMBOL $46DB tmp1_tmp
FORCE_SYMBOL $46DE currentLevelPointer
COMMENT_LINE $46E2 in y the current level struct
FORCE_SYMBOL $46E2 spawnEnemy
COMMENT $46E5 savety measure
FORCE_SYMBOL $46E7 bonusSpawnCount
FORCE_SYMBOL $46EA LEVEL_ENEMY_DEFINITION
FORCE_SYMBOL $46ED levelEnemyCount
COMMENT $46F0 number of different enemy definitions in this level
FORCE_NO_SYMBOL $46F0
FORCE_NO_SYMBOL $46F4
FORCE_NO_SYMBOL $46F8
COMMENT $46FB current enemy definition
FORCE_SYMBOL $46FE ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $4700 TYPE_SHIELD
COMMENT $4704 don't count shield enemies as level finish enemies
FORCE_SYMBOL $4704 enemyCount
COMMENT $4707 hp get overwritten anyway - so we can store 16 bit
FORCE_SYMBOL $4707 ENEMY_STRUCT
COMMENT_LINE $470B in y the current enemy struct
COMMENT_LINE $470B in u current enemy object struct
FORCE_SYMBOL $470B ENEMY_STRENGTH
FORCE_SYMBOL $470D difficulty
FORCE_NO_SYMBOL $4710
COMMENT $4715 normal
FORCE_NO_SYMBOL $471A
FORCE_NO_SYMBOL $471C
FORCE_NO_SYMBOL $4723
COMMENT $4727 HP in upper nibble
COMMENT $4728 lower nibble is BITMASK = 0
FORCE_SYMBOL $4728 HITPOINTS
FORCE_SYMBOL $472B ALL_PURPOSE
FORCE_SYMBOL $472E MY_PATTERN
FORCE_SYMBOL $4730 ANIM_POSITION
FORCE_SYMBOL $4732 PATTERN_POSITION
FORCE_SYMBOL $4734 levelEnemyCountUID
FORCE_SYMBOL $4737 POSITION
FORCE_SYMBOL $473A levelEnemyCountUID
FORCE_SYMBOL $473D levelEnemyCount
FORCE_SYMBOL $4740 directIntroBehaviour
FORCE_SYMBOL $4743 BEHAVIOUR
FORCE_SYMBOL $4745 currentLevelPointer
COMMENT $4749 in x now waiting pattern pointer
FORCE_SYMBOL $4749 LEVEL_WAITING_PATTERN
FORCE_SYMBOL $474B POSITION
COMMENT $4751 target y, x position in d
FORCE_NO_SYMBOL $4751
FORCE_SYMBOL $4753 Y_POS
FORCE_SYMBOL $4755 Y_POS16
FORCE_SYMBOL $4757 X_POS16
FORCE_SYMBOL $475D tmp1_tmp
FORCE_SYMBOL $4764 patternDelayCounter
COMMENT_LINE $4768 ...............................................................................
FORCE_SYMBOL $4768 currentLevelPointer
FORCE_SYMBOL $476C difficulty
FORCE_NO_SYMBOL $476F
FORCE_SYMBOL $4771 SUPER_IMPOSSIBLE
FORCE_SYMBOL $4775 LEVEL_TYPE
FORCE_NO_SYMBOL $4777
FORCE_SYMBOL $4779 LEVEL_TYPE_KAMIKAZE
FORCE_SYMBOL $477D LEVEL_TYPE
FORCE_NO_SYMBOL $477F
FORCE_SYMBOL $4781 LEVEL_TYPE_BONUS
FORCE_NO_SYMBOL $4785
FORCE_SYMBOL $4788 tmp1_tmp
FORCE_SYMBOL $478B levelCount
FORCE_NO_SYMBOL $478E
FORCE_NO_SYMBOL $4792
FORCE_SYMBOL $4795 tmp1_tmp
COMMENT $479A these shields MOVE - looping pattern -> cannot be done with "static"
COMMENT $479E tribble
FORCE_NO_SYMBOL $479E
COMMENT $47A2 boss 3
FORCE_NO_SYMBOL $47A2
COMMENT_LINE $47A6 lda      #GAMEPHASE_INGAME
COMMENT_LINE $47A6 sta      game_phase
FORCE_SYMBOL $47A6 lockPurchased
FORCE_SYMBOL $47AB lockPurchased
FORCE_SYMBOL $47AE spawnNextEnemy
FORCE_SYMBOL $47B1 LEVEL_TYPE
FORCE_SYMBOL $47B3 LEVEL_APPEAR_AT_WAITING
FORCE_SYMBOL $47B9 patternDelayCounter
FORCE_SYMBOL $47BE patternDelayCounter
COMMENT_LINE $47C2 ...............................................................................
FORCE_SYMBOL $47C2 introWaveEnemyDelayCount
COMMENT $47C7 like above "entry"
FORCE_SYMBOL $47C7 introWaveCurrentPattern
FORCE_SYMBOL $47CA P_DELAY_BETWEEN_ENEMIES
FORCE_SYMBOL $47CC introWaveEnemyDelayCount
FORCE_SYMBOL $47CF spawnEnemy
FORCE_SYMBOL $47D4 levelMaxEnemy
FORCE_SYMBOL $47D7 bonusSpawnCount
FORCE_SYMBOL $47DA LEVEL_ENEMY_DEFINITION
FORCE_SYMBOL $47DD levelEnemyCount
COMMENT $47E0 number of different enemy definitions in this level
FORCE_NO_SYMBOL $47E0
FORCE_NO_SYMBOL $47E4
FORCE_NO_SYMBOL $47E8
COMMENT $47EB current enemy definition
FORCE_SYMBOL $47EE ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $47F0 TYPE_SHIELD
COMMENT $47F4 don't count shield enemies as level finish enemies
FORCE_SYMBOL $47F4 enemyCount
COMMENT $47F7 hp get overwritten anyway - so we can store 16 bit
FORCE_SYMBOL $47F7 ENEMY_STRUCT
FORCE_SYMBOL $47FB inversePatttern
FORCE_SYMBOL $47FE INVERSE_INTRO_PATTERN
FORCE_SYMBOL $4800 ENEMY_STRENGTH
FORCE_SYMBOL $4802 difficulty
FORCE_NO_SYMBOL $4805
FORCE_NO_SYMBOL $480F
FORCE_NO_SYMBOL $4811
FORCE_NO_SYMBOL $4818
COMMENT $481C HP in upper nibble
COMMENT $481D lower nibble is BITMASK = 0
FORCE_SYMBOL $481D HITPOINTS
FORCE_SYMBOL $4820 ALL_PURPOSE
FORCE_SYMBOL $4823 MY_PATTERN
FORCE_SYMBOL $4825 ANIM_POSITION
FORCE_SYMBOL $4827 PATTERN_POSITION
FORCE_SYMBOL $4829 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $482B TYPE_DONT_WAIT
FORCE_SYMBOL $482F levelEnemyCountUID
FORCE_SYMBOL $4832 POSITION
FORCE_SYMBOL $4835 levelEnemyCountUID
FORCE_SYMBOL $4838 levelEnemyCount
FORCE_SYMBOL $483B introWaveEnemyCount
COMMENT $483E first position
FORCE_SYMBOL $4842 enemyDelayBehaviour
FORCE_SYMBOL $4845 ALL_PURPOSE
FORCE_SYMBOL $484A Y_POS
FORCE_SYMBOL $484C Y_POS16
FORCE_SYMBOL $484E INVERSE_INTRO_PATTERN
FORCE_SYMBOL $4853 X_POS
FORCE_SYMBOL $4855 X_POS16
FORCE_SYMBOL $485B enemyIntroPatternBehaviour
FORCE_SYMBOL $485E enemyTribble
COMMENT_LINE $4864 init tribble
FORCE_NO_SYMBOL $4864
FORCE_SYMBOL $4866 TRIBBLE_HIT_POINTS
FORCE_SYMBOL $4868 random_seed
FORCE_NO_SYMBOL $486E
FORCE_SYMBOL $4870 random_seed
FORCE_NO_SYMBOL $4873
FORCE_NO_SYMBOL $4879
FORCE_SYMBOL $487B Y_POS
FORCE_SYMBOL $487D random_seed2
FORCE_NO_SYMBOL $4883
FORCE_SYMBOL $4885 random_seed2
FORCE_SYMBOL $4894 X_POS
FORCE_SYMBOL $4896 TRIBBLE_ANIM_POS
COMMENT $4898 flash length
FORCE_SYMBOL $4898 TRIBBLE_ALL_PURPOSE
FORCE_SYMBOL $489A swarmCounter
FORCE_SYMBOL $489D swarmCounter
FORCE_NO_SYMBOL $48A0
FORCE_SYMBOL $48A6 TRIBBLE_MOVEMENT_INFO
FORCE_NO_SYMBOL $48A8
FORCE_SYMBOL $48AB TRIBBLE_LIFE_TIME
COMMENT_LINE $48AD TribbleEnemyStruct
FORCE_SYMBOL $48AD tribbleBehaviour
FORCE_SYMBOL $48B0 BEHAVIOUR
FORCE_SYMBOL $48B2 introWaveEnemyCount
COMMENT $48B5 ,x ; P_NUMBER_OF_ENEMIES,x
FORCE_SYMBOL $48B5 patternEnemyCount
COMMENT_LINE $48BA init next intro pattern if available
FORCE_SYMBOL $48BA introWaveEnemyCount
FORCE_SYMBOL $48BD currentLevelPointer
COMMENT $48C0 list of level pattern are pointed to by x
FORCE_SYMBOL $48C0 LEVEL_INTRO_PATTERN
FORCE_SYMBOL $48C2 introWaveCurrentPatternCount
FORCE_SYMBOL $48C5 introWaveCurrentPatternCount
COMMENT_LINE $48C8 if $20 or greater, than result negative -> crash
COMMENT $48C9 times two since 16bit pointer
COMMENT $48CA times two since 16bit pointer
FORCE_SYMBOL $48CD LINE_PATTERN_INVERS
COMMENT $48CF also stores patternEnemyCount
FORCE_SYMBOL $48CF inversePatttern
FORCE_SYMBOL $48D2 LINE_PATTERN_DEF
FORCE_SYMBOL $48D4 P_START_DELAY_OF_PATTERN
FORCE_SYMBOL $48D6 patternDelayCounter
FORCE_SYMBOL $48D9 introWaveCurrentPattern
COMMENT_LINE $48DE in game vars
COMMENT_LINE $48DE lda      #GAMEPHASE_INGAME
COMMENT_LINE $48DE sta      game_phase
FORCE_SYMBOL $48DE lockPurchased
FORCE_SYMBOL $48E3 lockPurchased
COMMENT_LINE $48E7 ...............................................................................
COMMENT_LINE $48E7 Bakn 3
COMMENT_LINE $48E7 COL DETECT macros use about 3,5kB
COMMENT_LINE $48E7 using a conditional + include
COMMENT_LINE $48E7 I can reuse the colision detection for both bugs and "normal" enemies!
COMMENT_LINE $48E7 actually it is not the reuse I am keen on - but rather to have
COMMENT_LINE $48E7 the collision detection in a singular place
COMMENT_LINE $48E7 macros only: bank 3
COMMENT_LINE $0000 collision detection player shot -> enemy
COMMENT_LINE $0000 only two shots are tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 in b is still the xcoordinate of the current enemy that is tested for this shot
COMMENT_LINE $0000 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $0000 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $0000 ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $0000 load address of current shot structure to be tested
COMMENT $0000 laser
COMMENT $0000 MIN check is only done with the first to be tested shot
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT $0000 higher y tollerance
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT_LINE $0000 if large object, check if middle shot is zero and than test the correct scoopy instead
COMMENT_LINE $0000 REMOVED since SHOT_RADIUS0 == 0!!!
COMMENT_LINE $0000 cmpa #SHOT_RADIUS0
COMMENT $0000 enemy is on left side of shot
COMMENT $0000 enemy is on right side of shot
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 a zero shot cannot hit! (WAS TST)
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
COMMENT_LINE $0000 center shot is zero - check if a scoopy might hit!
COMMENT $0000 notHitShotIsZero
COMMENT $0000 (was tst)
COMMENT $0000 next game round, play an explosion
COMMENT_LINE $0000 laser
COMMENT_LINE $0000 should I do a "shield" check here, as in object.asm?
COMMENT_LINE $0000 probably yes... but most of the time
COMMENT_LINE $0000 this works out well...
COMMENT_LINE $0000 AND, shrinked shots can sometimes "weazle" through shield enemies
COMMENT_LINE $0000 which I find cool :-)
COMMENT_LINE $0000 ldb      SHOT_RADIUS, x
COMMENT_LINE $0000 five shot is also a "1" time shot
COMMENT $0000 positive is supershot
COMMENT $0000 tst
COMMENT_LINE $0000 ---
COMMENT_LINE $0000 remove 3 points of damage
COMMENT $0000 should be bulletDamage * 2
COMMENT $0000 3 times damage
COMMENT_LINE $0000 remove fullscoopy damage
COMMENT_LINE $0000 and remove scoopy shot
COMMENT $0000 tst
COMMENT_LINE $0000 for easyness I assume always a FULL-1 scoopy shot
COMMENT $0000 3 times damage
COMMENT_LINE $0000 for easyness I assume always a FULL-1 scoopy shot
COMMENT $0000 3 times damage
COMMENT $0000 remove shot, do one damage!
COMMENT_LINE $0000 remove 2 points of damage
COMMENT $0000 2 times
COMMENT_LINE $0000 remove 1 points of damage
COMMENT $0000 1 times
COMMENT $0000 ---------------------------------------------------------------------
COMMENT $0000 should be bulletDamage * 2
COMMENT $0000 should be bulletDamage
COMMENT_LINE $0000 remove 2 points of damage
COMMENT_LINE $0000 remove 1 points of damage
COMMENT $0000 laser = main
COMMENT $0000 y pos
COMMENT $0000 laser = right scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test left
COMMENT $0000 enemy is on left side of left shot
COMMENT_LINE $0000 left HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove shot when shield
COMMENT $0000 remove
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 left scoopy has hit
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT_LINE $0000 left scoopy with more than one bullet
COMMENT_LINE $0000 in a number of bullets in scoopy -2
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 laser = left scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we no there is no left hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test right
COMMENT $0000 enemy is on right side of right shot
COMMENT_LINE $0000 right HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove shot when shield
COMMENT $0000 remove
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 right scoopy has hit
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT_LINE $0000 right scoopy with more than one bullet
COMMENT_LINE $0000 in a number of bullets in scoopy -2
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 collision detection player shot -> enemy
COMMENT_LINE $0000 only two shots are tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $0000 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $0000 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $0000 ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $0000 laser
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $0000 bugs are also bigger in y dimensions
COMMENT_LINE $0000 but they move so slow - this probably does not
COMMENT_LINE $0000 matter
COMMENT_LINE $0000 anyway - have to test!
COMMENT_LINE $0000 TODO
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 a zero shot cannot hit! (TST)
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
COMMENT_LINE $0000 ---
COMMENT_LINE $0000 center shot is zero - check if a scoopy might hit!
COMMENT $0000 notHitShotIsZero
COMMENT $0000 (tst)
COMMENT $0000 next game round, play an explosion
COMMENT_LINE $0000 five shot is also a "1" time shot
COMMENT $0000 positive is supershot
COMMENT $0000 TST
COMMENT_LINE $0000 ---
COMMENT_LINE $0000 remove 2 points of damage
COMMENT_LINE $0000 bugs take less damage -> blame vtk!!!
COMMENT_LINE $0000 suba     bulletDamage
COMMENT_LINE $0000 suba #3 ; one is reduced by"ordanary handler
COMMENT_LINE $0000 remove 1 points of damage
COMMENT_LINE $0000 suba     bulletDamage
COMMENT_LINE $0000 suba #2 ; one is reduced by"ordanary handler
COMMENT_LINE $0000 remove 1/2 points of damage
COMMENT_LINE $0000 lda      BUG_ENEMY_HITPOINTS +u_offset1,s
COMMENT_LINE $0000 suba     bulletDamage
COMMENT_LINE $0000 suba #1 ; one is reduced by"ordanary handler
COMMENT $0000 laser = main
COMMENT $0000 y pos
COMMENT $0000 laser = right scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT $0000 correct b for bug compare
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test left
COMMENT $0000 enemy is on left side of left shot
COMMENT_LINE $0000 left HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 remove all scoop shots and do damage for all
COMMENT_LINE $0000 here it means do (scoop shot -1)*damage
COMMENT $0000 set this shot to 0, but keep left
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT $0000 laser = left scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we no there is no left hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT $0000 correct b for bug compare
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test right
COMMENT $0000 enemy is on right side of right shot
COMMENT_LINE $0000 right HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove all scoop shots and do damage for all
COMMENT_LINE $0000 here it means do (scoop shot -1)*damage
COMMENT $0000 set this shot to 0, but keep left
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 build a testshot to 1
COMMENT_LINE $0000 x can be used
COMMENT_LINE $0000 on a "hit" this may be 0 (null)
COMMENT_LINE $0000 collision detection player shot -> enemy
COMMENT_LINE $0000 only one shot is tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 shield saved player (from all shots)
COMMENT $0000 armor saved player for one shot
COMMENT_LINE $0000 = HP = 0
COMMENT_LINE $0000 if enemy collides with player -> it is dead!
COMMENT_LINE $0000 or explode directly :-)
COMMENT $0000 shotHandleDoneRemoved
COMMENT_LINE $0000 check scoop collision
COMMENT $0000 easy difficulty -> scoops are not hit by enemies/debris
COMMENT_LINE $0000 in b "radius" from player center (ABS)
COMMENT_LINE $0000 possible scoop hit, check if scoop exists
COMMENT_LINE $0000 check for left or right
COMMENT $0000 added to ensure leftmost debris does not collide with right most scoopies
COMMENT $0000 there is no scoopy!
COMMENT_LINE $0000 left scoopy hit -> explode !
COMMENT $0000 because after explosion, the remove enemy - does again a "dec enemy count" this would screw the counting
COMMENT_LINE $0000 since scoopies were removed before!
COMMENT $0000 negative means this enemy is an explosion
COMMENT $0000 negative means this enemy is an explosion
COMMENT $0000 scale
COMMENT_LINE $0000 lda #$7f ; intensity
COMMENT $0000 there is no scoopy!
COMMENT_LINE $0000 right scoopy hit -> explode !
COMMENT_LINE $0000 or scoop it
COMMENT $0000 TODO strength of enemy bullet
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 only one shot possible per round
COMMENT $0000 do not shoot again in xx rounds
COMMENT $0000 only lower nibble BIT_MASK+u_offset1,s
COMMENT $0000 in waiting shots might not be allowed
COMMENT $0000 waiting has double chance to not initate bullet
COMMENT $0000 bullet delay for enemy = 15 rounds
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 preload next user stack
COMMENT $0000 preload next user stack
COMMENT $0000 preload next user stack
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 start cloning
COMMENT_LINE $0000 basically spawn
COMMENT_LINE $0000 can't jsr here - cause we occupied the Stack register
COMMENT $0000 delay between clones
COMMENT $0000 number of clones
COMMENT $0000 set the new empty head
COMMENT $0000 the next in out empty list will be the new
COMMENT $0000 head of our empty list
COMMENT $0000 and remember that we created a new object
COMMENT_LINE $0000 copy this enemy
COMMENT_LINE $0000 clone delay
COMMENT $0000 correct attack pattern count -> clone is also attacking!
COMMENT $0000 delay between clones
COMMENT $0000 is increased between each clone
COMMENT $0000 get the next behavoiur and store it "somewhere"
COMMENT $0000 pattern positions will allways be 0, position will be set to ff
COMMENT_LINE $0000 = clone behaviour
COMMENT $0000 just waits - than starts exactly as clone
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 in x correct pattern position in pattern list
COMMENT_LINE $0000 macro is always exited with a jump to some place else (outside macro)
COMMENT_LINE $0000 the pattern line x is pointing to is check for pattern
COMMENT_LINE $0000 a) relative pattern (+ subpatterns)
COMMENT_LINE $0000 b) absolut pattern
COMMENT_LINE $0000 c) relative pattern
COMMENT_LINE $0000 d) jump to other pattern
COMMENT_LINE $0000 e end of pattern list
COMMENT_LINE $0000 SINGLE_ATTACK_RELATIVE_PATTERN  =  0                      ; relative means - it uses the current address of the enemy as start
COMMENT_LINE $0000 SINGLE_ATTACK_TARGET_ENEMY_PATTERN  =  1                  ; TARGET - uses somehow the players coordinate as coordinate info
COMMENT_LINE $0000 SINGLE_ATTACK_ABSOLUT_PATTERN  =  2                      ; moves from current position to an absolut screen position
COMMENT_LINE $0000 SINGLE_ATTACK_JUMP = 3
COMMENT_LINE $0000 else jump
COMMENT $0000 speed
COMMENT $0000 second word in attack pattern are target coordinate
COMMENT_LINE $0000 get delta of now and target
COMMENT_LINE $0000 divide coordinates by half for angle test
COMMENT_LINE $0000 otherwise we overflow 2 complements
COMMENT_LINE $0000 std _tmpY
COMMENT_LINE $0000 in tmp half of the delta value between target and current pos
COMMENT_LINE $0000 NEW: (angles now between 0-7, not 0 to 20)
COMMENT_LINE $0000 in d is delta
COMMENT_LINE $0000 if y < 0 than angle from 5 to 15
COMMENT_LINE $0000 if y > 0-5 and 15-20
COMMENT_LINE $0000 if x > 0 than angle between 0-10
COMMENT_LINE $0000 if x < 0 than angle between 10 -20
COMMENT_LINE $0000 if x == 0 angle = 5 or 15
COMMENT_LINE $0000 if y == 0 angle = 0 or 10
COMMENT_LINE $0000 if y abs == y abs than angle in the middle of ranges (2.5, 7.5, 12.5, 17.5)
COMMENT_LINE $0000 keep speed
COMMENT $0000 lower 3 bits are speed
COMMENT $0000 angle is 0 - 7 (must be doubled)
COMMENT $0000 jump out of macro
COMMENT_LINE $0000 same as absolut - but target is current fighter position
COMMENT $0000 speed
COMMENT_LINE $0000 that this is a relative pattern "SINGLE_ATTACK_RELATIVE_PATTERN"
COMMENT_LINE $0000 but checks must consider it may be otherwise!
COMMENT $0000 second word in attack pattern is the first sub pattern
COMMENT $0000 dw 0,0 = end of pattern, leave macro and enter delay!
COMMENT_LINE $0000 in x pointer to sub pattern
COMMENT_LINE $0000 Y_POS
COMMENT_LINE $0000 X_POS will be out target coordinates in this behaviour
COMMENT_LINE $0000 costs cylces - > but I don't have more RAM
COMMENT_LINE $0000 = 16 bit pos to same as 8 bit pos
COMMENT_LINE $0000 due to wobble this is not kept the same when in
COMMENT_LINE $0000 waiting position
COMMENT $0000 jump into relative behaviour
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 exactly the same as above except TEST_FOR_CLONE macro
COMMENT_LINE $0000 cloning is only initiated when waiting -> attack is done
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 this is actually a JSR RTS
COMMENT_LINE $0000 without using stack
COMMENT_LINE $0000 PC-return address is kept in U
FORCE_SYMBOL $48E9 playerBonusActive
FORCE_SYMBOL $48EC BITFIELD_SCOOP
FORCE_SYMBOL $48FA playerXpos
FORCE_SYMBOL $4900 PLAYER_RADIUS_X
FORCE_SYMBOL $4904 playerBonusActive
COMMENT $4907 shield saved player (from all shots)
FORCE_SYMBOL $4907 BITFIELD_SHIELD
FORCE_SYMBOL $490B BITFIELD_ARMOR
COMMENT $490D armor saved player for one shot
FORCE_SYMBOL $4913 playerBonusActive
FORCE_SYMBOL $4916 playerBonusActive
FORCE_SYMBOL $491B BITFIELD_SHIELD
FORCE_SYMBOL $491D playerBonusActive
COMMENT $4920 1 secpnd
FORCE_NO_SYMBOL $4920
FORCE_SYMBOL $4925 playerBonusCounter
FORCE_NO_SYMBOL $492A
FORCE_SYMBOL $492C explosionSound
COMMENT_LINE $492F = HP = 0
COMMENT_LINE $492F if enemy collides with player -> it is dead!
COMMENT_LINE $492F or explode directly :-)
COMMENT $492F shotHandleDoneRemoved
FORCE_SYMBOL $492F yesExplodeEnemy
FORCE_SYMBOL $4932 lockPurchased
FORCE_NO_SYMBOL $4935
COMMENT_LINE $4939 check scoop collision
FORCE_SYMBOL $4939 difficulty
FORCE_NO_SYMBOL $493C
COMMENT $493E easy difficulty -> scoops are not hit by enemies/debris
COMMENT_LINE $4940 in b "radius" from player center (ABS)
FORCE_SYMBOL $4940 SCOOP_RADIUS_X
COMMENT_LINE $4944 possible scoop hit, check if scoop exists
COMMENT_LINE $4944 check for left or right
FORCE_SYMBOL $4946 playerXpos
COMMENT $4949 added to ensure leftmost debris does not collide with right most scoopies
FORCE_SYMBOL $494D scoopEnemy2
COMMENT $4950 there is no scoopy!
COMMENT_LINE $4952 left scoopy hit -> explode !
FORCE_NO_SYMBOL $4952
FORCE_SYMBOL $4955 scoopEnemy2
FORCE_NO_SYMBOL $4958
FORCE_SYMBOL $495A explosionSound
COMMENT $495D because after explosion, the remove enemy - does again a "dec enemy count" this would screw the counting
FORCE_SYMBOL $495D enemyCount
COMMENT_LINE $4960 since scoopies were removed before!
COMMENT $4962 negative means this enemy is an explosion
FORCE_SYMBOL $4962 ALL_PURPOSE
FORCE_SYMBOL $4965 enemyExplosionBehaviour
COMMENT $4968 negative means this enemy is an explosion
FORCE_SYMBOL $4968 BEHAVIOUR
FORCE_SYMBOL $496A ANIM_POSITION
FORCE_SYMBOL $496C ENEMY_STRUCT
FORCE_SYMBOL $4970 WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $4973
FORCE_SYMBOL $4976 SMARTLIST_ORG
COMMENT $4979 scale
FORCE_NO_SYMBOL $4979
FORCE_SYMBOL $497C EXPLOSION_SCALE
COMMENT_LINE $497F lda #$7f ; intensity
FORCE_SYMBOL $497F EXPLOSION_INTENSITY
FORCE_SYMBOL $4984 scoopEnemy1
COMMENT $4987 there is no scoopy!
COMMENT_LINE $4989 right scoopy hit -> explode !
FORCE_NO_SYMBOL $4989
FORCE_SYMBOL $498C scoopEnemy1
FORCE_SYMBOL $4997 playerXpos
FORCE_SYMBOL $499D SCOOP_RADIUS_X
FORCE_SYMBOL $49A3 ANGLE8_TABLE
COMMENT_LINE $49A9 or scoop it
FORCE_SYMBOL $49A9 repellEnemy
COMMENT $49AC TODO strength of enemy bullet
FORCE_NO_SYMBOL $49AC
FORCE_SYMBOL $49AE playerWasHitFor
COMMENT_LINE $49B1 if no of enemies < threshold -> test all shots
COMMENT_LINE $49B3 collision detection player shot -> enemy
COMMENT_LINE $49B3 only two shots are tested per game round
COMMENT_LINE $49B3 two shots
COMMENT_LINE $49B3 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $49B3 in b is still the xcoordinate of the current enemy that is tested for this shot
COMMENT_LINE $49B3 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $49B3 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $49B3 ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $49B3 load address of current shot structure to be tested
FORCE_SYMBOL $49B3 testShot
FORCE_SYMBOL $49BA playerNumberOfBulletsPerShot
COMMENT $49BD laser
FORCE_NO_SYMBOL $49BD
COMMENT $49C5 MIN check is only done with the first to be tested shot
FORCE_SYMBOL $49C5 enemyMINY
FORCE_SYMBOL $49CA enemyMINY
COMMENT_LINE $49CD "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $49CD we do not need to test the shot itself for validity!
COMMENT_LINE $49CD yTest
FORCE_SYMBOL $49D8 shotYRadius
COMMENT_LINE $49DF ;;;; y done
COMMENT_LINE $49DF xTest
COMMENT $49DF x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $49DF
COMMENT_LINE $49E1 test center
COMMENT $49E4 enemy is on left side of shot
COMMENT_LINE $49E8 in b 0 based enemy pos
COMMENT $49EB enemy is on right side of shot
COMMENT_LINE $49EF ..........
COMMENT_LINE $49EF if only scoop shots are left - we can not hit with "own" cannon
COMMENT $49EF a zero shot cannot hit! (WAS TST)
FORCE_SYMBOL $49EF SHOT_RADIUS
FORCE_SYMBOL $49F5 notHit345
FORCE_SYMBOL $49F8 backJump
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
FORCE_SYMBOL $49FB BEHAVIOUR
FORCE_NO_SYMBOL $49FD
COMMENT_LINE $4A03 center shot is zero - check if a scoopy might hit!
FORCE_SYMBOL $4A03 tmp1
FORCE_SYMBOL $4A0D tmp1
COMMENT $4A17 notHitShotIsZero
FORCE_SYMBOL $4A17 notHit345
FORCE_SYMBOL $4A1A tmp_isSupershot
COMMENT $4A1D (was tst)
FORCE_SYMBOL $4A1D explosionSound
COMMENT $4A22 next game round, play an explosion
FORCE_SYMBOL $4A22 explosionSound
COMMENT_LINE $4A25 laser
FORCE_SYMBOL $4A25 SHOT_RADIUS
FORCE_SYMBOL $4A27 SHOT_RADIUS6
FORCE_SYMBOL $4A2B isLazerShot
COMMENT_LINE $4A2E should I do a "shield" check here, as in object.asm?
COMMENT_LINE $4A2E probably yes... but most of the time
COMMENT_LINE $4A2E this works out well...
COMMENT_LINE $4A2E AND, shrinked shots can sometimes "weazle" through shield enemies
COMMENT_LINE $4A2E which I find cool :-)
FORCE_SYMBOL $4A2E SHOT_RADIUS5
COMMENT_LINE $4A34 ldb      SHOT_RADIUS, x
FORCE_SYMBOL $4A34 SHOT_RADIUS4
FORCE_SYMBOL $4A38 SHOT_RADIUS3
FORCE_SYMBOL $4A3C SHOT_RADIUS2
FORCE_SYMBOL $4A40 isNo5Shot
COMMENT_LINE $4A43 five shot is also a "1" time shot
COMMENT $4A43 positive is supershot
FORCE_SYMBOL $4A43 tmp_isSupershot
COMMENT $4A46 tst
FORCE_SYMBOL $4A46 SCOOP_SHOTS
FORCE_SYMBOL $4A4C SHOT_RADIUS0
FORCE_SYMBOL $4A4E SHOT_RADIUS
FORCE_SYMBOL $4A50 shotHandleDone_noBoss
COMMENT_LINE $4A53 ---
COMMENT_LINE $4A53 remove 3 points of damage
COMMENT $4A53 should be bulletDamage * 2
FORCE_SYMBOL $4A53 shiftDoubleBulletDamage
COMMENT $4A5A should be bulletDamage
FORCE_SYMBOL $4A5A shiftBulletDamage
COMMENT_LINE $4A5F remove 2 points of damage
FORCE_SYMBOL $4A5F shiftDoubleBulletDamage
FORCE_SYMBOL $4A66 shiftBulletDamage
COMMENT_LINE $4A6B remove 1 points of damage
FORCE_SYMBOL $4A6B shiftDoubleBulletDamage
FORCE_SYMBOL $4A72 shiftBulletDamage
FORCE_SYMBOL $4A77 isNo5Shot
COMMENT $4A7A laser = main
FORCE_SYMBOL $4A7A laserTmp2
COMMENT $4A7F y pos
FORCE_SYMBOL $4A7F laserTmp
FORCE_SYMBOL $4A82 xCheckOnly345
FORCE_NO_SYMBOL $4A85
COMMENT $4A87 laser = right scoop
FORCE_SYMBOL $4A87 laserTmp2
COMMENT $4A8C assume 10 lower
FORCE_NO_SYMBOL $4A8C
FORCE_NO_SYMBOL $4A90
FORCE_SYMBOL $4A92 laserTmp
COMMENT_LINE $4A97 ..........
COMMENT_LINE $4A97 ..........
COMMENT_LINE $4A97 check if there are scoopies
COMMENT $4A97 two nibbles
FORCE_SYMBOL $4A97 SCOOP_SHOTS
FORCE_NO_SYMBOL $4A99
COMMENT $4A9B we kno there is no right hit possible, because we came from center!
COMMENT_LINE $4A9F side shots are lower - test that here...
FORCE_SYMBOL $4A9F playerNumberOfBulletsPerShot
COMMENT $4AA2 laser
FORCE_NO_SYMBOL $4AA2
COMMENT $4AA8 assume 10 lower
FORCE_NO_SYMBOL $4AA8
COMMENT_LINE $4AB1 in b x pos of enemy - 0 based!
COMMENT_LINE $4AB1 test left
COMMENT $4AB4 enemy is on left side of left shot
COMMENT_LINE $4AB8 left HIT!
COMMENT_LINE $4AB8 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $4AB8 notHit345
FORCE_SYMBOL $4ABB backJump
FORCE_SYMBOL $4ABE playerNumberOfBulletsPerShot
COMMENT $4AC1 laser
FORCE_NO_SYMBOL $4AC1
COMMENT $4AC3 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $4AC7 :::::::::::::::::::::::::
COMMENT_LINE $4AC7 remove shot when shield
FORCE_SYMBOL $4ACA ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $4ACC TYPE_SHIELD
COMMENT $4ACE remove
FORCE_SYMBOL $4AD0 SCOOP_SHOTS
FORCE_NO_SYMBOL $4AD2
FORCE_SYMBOL $4AD4 SCOOP_SHOTS
COMMENT_LINE $4ADC remove shot when shield
COMMENT_LINE $4ADC :::::::::::::::::::::::::
COMMENT_LINE $4ADC left scoopy has hit
FORCE_SYMBOL $4ADC SCOOP_SHOTS
FORCE_NO_SYMBOL $4ADE
FORCE_NO_SYMBOL $4AE2
FORCE_SYMBOL $4AE4 SCOOP_SHOTS
COMMENT_LINE $4AEA test for radius of shot
FORCE_SYMBOL $4AEA SHOT_RADIUS
COMMENT $4AEC jump out to remove this shot entirely
COMMENT $4AF0 go to enemy "hit" handling
FORCE_SYMBOL $4AF0 shotHandleDone_noBoss
COMMENT_LINE $4AF3 left scoopy with more than one bullet
COMMENT_LINE $4AF3 in a number of bullets in scoopy -2
FORCE_NO_SYMBOL $4AF3
COMMENT $4AF7 should be bulletDamage
FORCE_SYMBOL $4AF7 shiftBulletDamage
FORCE_NO_SYMBOL $4B00
FORCE_NO_SYMBOL $4B04
COMMENT $4B06 should be bulletDamage
FORCE_SYMBOL $4B06 shiftBulletDamage
FORCE_NO_SYMBOL $4B0F
FORCE_NO_SYMBOL $4B13
COMMENT $4B15 should be bulletDamage
FORCE_SYMBOL $4B15 shiftBulletDamage
FORCE_NO_SYMBOL $4B20
COMMENT $4B22 laser = left scoop
FORCE_SYMBOL $4B22 laserTmp2
COMMENT $4B27 assume 10 lower
FORCE_NO_SYMBOL $4B27
FORCE_NO_SYMBOL $4B2B
FORCE_SYMBOL $4B2D laserTmp
COMMENT_LINE $4B32 ..........
COMMENT_LINE $4B32 check if there are scoopies
COMMENT $4B32 two nibbles
FORCE_SYMBOL $4B32 SCOOP_SHOTS
FORCE_NO_SYMBOL $4B34
COMMENT $4B36 we no there is no left hit possible, because we came from center!
COMMENT_LINE $4B3A side shots are lower - test that here...
FORCE_SYMBOL $4B3A playerNumberOfBulletsPerShot
COMMENT $4B3D laser
FORCE_NO_SYMBOL $4B3D
COMMENT $4B43 assume 10 lower
FORCE_NO_SYMBOL $4B43
COMMENT_LINE $4B4C in b x pos of enemy - 0 based!
COMMENT_LINE $4B4C test right
COMMENT $4B4F enemy is on right side of right shot
COMMENT_LINE $4B53 right HIT!
COMMENT_LINE $4B53 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $4B53 notHit345
FORCE_SYMBOL $4B56 backJump
FORCE_SYMBOL $4B59 playerNumberOfBulletsPerShot
COMMENT $4B5C laser
FORCE_NO_SYMBOL $4B5C
COMMENT $4B5E shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $4B62 :::::::::::::::::::::::::
COMMENT_LINE $4B62 remove shot when shield
FORCE_SYMBOL $4B65 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $4B67 TYPE_SHIELD
COMMENT $4B69 remove
FORCE_SYMBOL $4B6B SCOOP_SHOTS
FORCE_NO_SYMBOL $4B6D
FORCE_SYMBOL $4B6F SCOOP_SHOTS
COMMENT_LINE $4B77 remove shot when shield
COMMENT_LINE $4B77 :::::::::::::::::::::::::
FORCE_SYMBOL $4B77 SCOOP_SHOTS
COMMENT_LINE $4B7B right scoopy has hit
FORCE_SYMBOL $4B7B SCOOP_SHOTS
FORCE_SYMBOL $4B81 SCOOP_SHOTS
COMMENT_LINE $4B87 test for radius of shot
FORCE_SYMBOL $4B87 SHOT_RADIUS
COMMENT $4B89 jump out to remove this shot entirely
COMMENT $4B8D go to enemy "hit" handling
FORCE_SYMBOL $4B8D shotHandleDone_noBoss
COMMENT_LINE $4B90 right scoopy with more than one bullet
COMMENT_LINE $4B90 in a number of bullets in scoopy -2
COMMENT $4B93 should be bulletDamage
FORCE_SYMBOL $4B93 shiftBulletDamage
FORCE_NO_SYMBOL $4B9C
COMMENT $4BA1 should be bulletDamage
FORCE_SYMBOL $4BA1 shiftBulletDamage
FORCE_NO_SYMBOL $4BAA
COMMENT $4BAF should be bulletDamage
FORCE_SYMBOL $4BAF shiftBulletDamage
COMMENT_LINE $4BBC ..........
COMMENT_LINE $4BBE collision detection player shot -> enemy
COMMENT_LINE $4BBE only two shots are tested per game round
COMMENT_LINE $4BBE two shots
COMMENT_LINE $4BBE main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $4BBE in b is still the xcoordinate of the current enemy that is tested for this shot
COMMENT_LINE $4BBE is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $4BBE all behaviours with negative all purpose do not call col detect
COMMENT_LINE $4BBE ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $4BBE load address of current shot structure to be tested
FORCE_SYMBOL $4BBE test2Shot
FORCE_SYMBOL $4BC5 playerNumberOfBulletsPerShot
COMMENT $4BC8 laser
FORCE_NO_SYMBOL $4BC8
COMMENT $4BD0 MIN check is only done with the first to be tested shot
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
FORCE_SYMBOL $4BDB shotYRadius
COMMENT_LINE $4BE2 ;;;; y done
COMMENT_LINE $4BE2 xTest
COMMENT $4BE2 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $4BE2
COMMENT_LINE $4BE4 test center
COMMENT $4BE7 enemy is on left side of shot
COMMENT_LINE $4BEB in b 0 based enemy pos
COMMENT $4BEE enemy is on right side of shot
COMMENT_LINE $4BF2 ..........
COMMENT_LINE $4BF2 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $4BF2 a zero shot cannot hit! (WAS TST)
FORCE_SYMBOL $4BF2 SHOT_RADIUS
FORCE_SYMBOL $4BF8 notHit348
FORCE_SYMBOL $4BFB backJump
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
FORCE_SYMBOL $4BFE BEHAVIOUR
FORCE_NO_SYMBOL $4C00
COMMENT_LINE $4C06 center shot is zero - check if a scoopy might hit!
FORCE_SYMBOL $4C06 tmp1
FORCE_SYMBOL $4C10 tmp1
COMMENT $4C1A notHitShotIsZero
FORCE_SYMBOL $4C1A notHit348
FORCE_SYMBOL $4C1D tmp_isSupershot
COMMENT $4C20 (was tst)
FORCE_SYMBOL $4C20 explosionSound
COMMENT $4C25 next game round, play an explosion
FORCE_SYMBOL $4C25 explosionSound
COMMENT_LINE $4C28 laser
FORCE_SYMBOL $4C28 SHOT_RADIUS
FORCE_SYMBOL $4C2A SHOT_RADIUS6
FORCE_SYMBOL $4C2E isLazerShot
COMMENT_LINE $4C31 should I do a "shield" check here, as in object.asm?
COMMENT_LINE $4C31 probably yes... but most of the time
COMMENT_LINE $4C31 this works out well...
COMMENT_LINE $4C31 AND, shrinked shots can sometimes "weazle" through shield enemies
COMMENT_LINE $4C31 which I find cool :-)
FORCE_SYMBOL $4C31 SHOT_RADIUS5
COMMENT_LINE $4C37 ldb      SHOT_RADIUS, x
FORCE_SYMBOL $4C37 SHOT_RADIUS4
FORCE_SYMBOL $4C3B SHOT_RADIUS3
FORCE_SYMBOL $4C3F SHOT_RADIUS2
FORCE_SYMBOL $4C43 isNo5Shot
COMMENT_LINE $4C46 five shot is also a "1" time shot
COMMENT $4C46 positive is supershot
FORCE_SYMBOL $4C46 tmp_isSupershot
COMMENT $4C49 tst
FORCE_SYMBOL $4C49 SCOOP_SHOTS
FORCE_SYMBOL $4C4F SHOT_RADIUS0
FORCE_SYMBOL $4C51 SHOT_RADIUS
FORCE_SYMBOL $4C53 shotHandleDone_noBoss
COMMENT_LINE $4C56 ---
COMMENT_LINE $4C56 remove 3 points of damage
COMMENT $4C56 should be bulletDamage * 2
FORCE_SYMBOL $4C56 shiftDoubleBulletDamage
COMMENT $4C5D should be bulletDamage
FORCE_SYMBOL $4C5D shiftBulletDamage
COMMENT_LINE $4C62 remove 2 points of damage
FORCE_SYMBOL $4C62 shiftDoubleBulletDamage
FORCE_SYMBOL $4C69 shiftBulletDamage
COMMENT_LINE $4C6E remove 1 points of damage
FORCE_SYMBOL $4C6E shiftDoubleBulletDamage
FORCE_SYMBOL $4C75 shiftBulletDamage
FORCE_SYMBOL $4C7A isNo5Shot
COMMENT $4C7D laser = main
FORCE_SYMBOL $4C7D laserTmp2
COMMENT $4C82 y pos
FORCE_SYMBOL $4C82 laserTmp
FORCE_SYMBOL $4C85 xCheckOnly348
FORCE_NO_SYMBOL $4C88
COMMENT $4C8A laser = right scoop
FORCE_SYMBOL $4C8A laserTmp2
COMMENT $4C8F assume 10 lower
FORCE_NO_SYMBOL $4C8F
FORCE_NO_SYMBOL $4C93
FORCE_SYMBOL $4C95 laserTmp
COMMENT_LINE $4C9A ..........
COMMENT_LINE $4C9A ..........
COMMENT_LINE $4C9A check if there are scoopies
COMMENT $4C9A two nibbles
FORCE_SYMBOL $4C9A SCOOP_SHOTS
FORCE_NO_SYMBOL $4C9C
COMMENT $4C9E we kno there is no right hit possible, because we came from center!
COMMENT_LINE $4CA2 side shots are lower - test that here...
FORCE_SYMBOL $4CA2 playerNumberOfBulletsPerShot
COMMENT $4CA5 laser
FORCE_NO_SYMBOL $4CA5
COMMENT $4CAB assume 10 lower
FORCE_NO_SYMBOL $4CAB
COMMENT_LINE $4CB4 in b x pos of enemy - 0 based!
COMMENT_LINE $4CB4 test left
COMMENT $4CB7 enemy is on left side of left shot
COMMENT_LINE $4CBB left HIT!
COMMENT_LINE $4CBB i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $4CBB notHit348
FORCE_SYMBOL $4CBE backJump
FORCE_SYMBOL $4CC1 playerNumberOfBulletsPerShot
COMMENT $4CC4 laser
FORCE_NO_SYMBOL $4CC4
COMMENT $4CC6 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $4CCA :::::::::::::::::::::::::
COMMENT_LINE $4CCA remove shot when shield
FORCE_SYMBOL $4CCD ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $4CCF TYPE_SHIELD
COMMENT $4CD1 remove
FORCE_SYMBOL $4CD3 SCOOP_SHOTS
FORCE_NO_SYMBOL $4CD5
FORCE_SYMBOL $4CD7 SCOOP_SHOTS
COMMENT_LINE $4CDF remove shot when shield
COMMENT_LINE $4CDF :::::::::::::::::::::::::
COMMENT_LINE $4CDF left scoopy has hit
FORCE_SYMBOL $4CDF SCOOP_SHOTS
FORCE_NO_SYMBOL $4CE1
FORCE_NO_SYMBOL $4CE5
FORCE_SYMBOL $4CE7 SCOOP_SHOTS
COMMENT_LINE $4CED test for radius of shot
FORCE_SYMBOL $4CED SHOT_RADIUS
COMMENT $4CEF jump out to remove this shot entirely
COMMENT $4CF3 go to enemy "hit" handling
FORCE_SYMBOL $4CF3 shotHandleDone_noBoss
COMMENT_LINE $4CF6 left scoopy with more than one bullet
COMMENT_LINE $4CF6 in a number of bullets in scoopy -2
FORCE_NO_SYMBOL $4CF6
COMMENT $4CFA should be bulletDamage
FORCE_SYMBOL $4CFA shiftBulletDamage
FORCE_NO_SYMBOL $4D03
FORCE_NO_SYMBOL $4D07
COMMENT $4D09 should be bulletDamage
FORCE_SYMBOL $4D09 shiftBulletDamage
FORCE_NO_SYMBOL $4D12
FORCE_NO_SYMBOL $4D16
COMMENT $4D18 should be bulletDamage
FORCE_SYMBOL $4D18 shiftBulletDamage
FORCE_NO_SYMBOL $4D23
COMMENT $4D25 laser = left scoop
FORCE_SYMBOL $4D25 laserTmp2
COMMENT $4D2A assume 10 lower
FORCE_NO_SYMBOL $4D2A
FORCE_NO_SYMBOL $4D2E
FORCE_SYMBOL $4D30 laserTmp
COMMENT_LINE $4D35 ..........
COMMENT_LINE $4D35 check if there are scoopies
COMMENT $4D35 two nibbles
FORCE_SYMBOL $4D35 SCOOP_SHOTS
FORCE_NO_SYMBOL $4D37
COMMENT $4D39 we no there is no left hit possible, because we came from center!
COMMENT_LINE $4D3D side shots are lower - test that here...
FORCE_SYMBOL $4D3D playerNumberOfBulletsPerShot
COMMENT $4D40 laser
FORCE_NO_SYMBOL $4D40
COMMENT $4D46 assume 10 lower
FORCE_NO_SYMBOL $4D46
COMMENT_LINE $4D4F in b x pos of enemy - 0 based!
COMMENT_LINE $4D4F test right
COMMENT $4D52 enemy is on right side of right shot
COMMENT_LINE $4D56 right HIT!
COMMENT_LINE $4D56 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $4D56 notHit348
FORCE_SYMBOL $4D59 backJump
FORCE_SYMBOL $4D5C playerNumberOfBulletsPerShot
COMMENT $4D5F laser
FORCE_NO_SYMBOL $4D5F
COMMENT $4D61 shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $4D65 :::::::::::::::::::::::::
COMMENT_LINE $4D65 remove shot when shield
FORCE_SYMBOL $4D68 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $4D6A TYPE_SHIELD
COMMENT $4D6C remove
FORCE_SYMBOL $4D6E SCOOP_SHOTS
FORCE_NO_SYMBOL $4D70
FORCE_SYMBOL $4D72 SCOOP_SHOTS
COMMENT_LINE $4D7A remove shot when shield
COMMENT_LINE $4D7A :::::::::::::::::::::::::
FORCE_SYMBOL $4D7A SCOOP_SHOTS
COMMENT_LINE $4D7E right scoopy has hit
FORCE_SYMBOL $4D7E SCOOP_SHOTS
FORCE_SYMBOL $4D84 SCOOP_SHOTS
COMMENT_LINE $4D8A test for radius of shot
FORCE_SYMBOL $4D8A SHOT_RADIUS
COMMENT $4D8C jump out to remove this shot entirely
COMMENT $4D90 go to enemy "hit" handling
FORCE_SYMBOL $4D90 shotHandleDone_noBoss
COMMENT_LINE $4D93 right scoopy with more than one bullet
COMMENT_LINE $4D93 in a number of bullets in scoopy -2
COMMENT $4D96 should be bulletDamage
FORCE_SYMBOL $4D96 shiftBulletDamage
FORCE_NO_SYMBOL $4D9F
COMMENT $4DA4 should be bulletDamage
FORCE_SYMBOL $4DA4 shiftBulletDamage
FORCE_NO_SYMBOL $4DAD
COMMENT $4DB2 should be bulletDamage
FORCE_SYMBOL $4DB2 shiftBulletDamage
COMMENT_LINE $4DBF ..........
COMMENT $4DBF only one shot possible per round
FORCE_SYMBOL $4DBF bulletSpawnAt
FORCE_SYMBOL $4DC4 shotCount
FORCE_SYMBOL $4DC7 currentLevelPointer
FORCE_SYMBOL $4DCA levelMaxEnemyShots
COMMENT $4DCF do not shoot again in xx rounds
COMMENT $4DD1 only lower nibble BIT_MASK+u_offset1,s
FORCE_NO_SYMBOL $4DD1
COMMENT $4DD9 in waiting shots might not be allowed
FORCE_SYMBOL $4DDB enemyWaitingBehaviour
FORCE_SYMBOL $4DE1 currentLevelPointer
FORCE_SYMBOL $4DE4 LEVEL_TYPE
FORCE_SYMBOL $4DE6 LEVEL_TYPE_DONT_SHOOT_WHILE_WAITING
FORCE_SYMBOL $4DEA random_seed
FORCE_NO_SYMBOL $4DF0
FORCE_SYMBOL $4DF2 random_seed
COMMENT $4DF5 waiting has double chance to not initate bullet
FORCE_SYMBOL $4DF6 levelBulletBorder
FORCE_SYMBOL $4DFD random_seed
FORCE_NO_SYMBOL $4E03
FORCE_SYMBOL $4E05 random_seed
FORCE_SYMBOL $4E08 levelBulletBorder
FORCE_SYMBOL $4E0F ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $4E11 TYPE_DONT_SHOOT
COMMENT $4E15 bullet delay for enemy = 15 rounds
FORCE_NO_SYMBOL $4E15
FORCE_SYMBOL $4E1D bulletSpawnAt
FORCE_SYMBOL $4E20 ENEMY_BULLET_SPEED
FORCE_SYMBOL $4E22 shotSpeed
FORCE_SYMBOL $4E25 OBJECT_SCALE
FORCE_SYMBOL $4E27 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $4E29
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 new list object to U
COMMENT_LINE $0000 destroys d, u
COMMENT_LINE $0000 ensures scoopiesa are always first
FORCE_SYMBOL $4E2B enemylist_empty_head
FORCE_SYMBOL $4E2E OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $4E34 realEnemyCount
COMMENT $4E37 and remember that we created a new object
FORCE_SYMBOL $4E37 enemyCount
COMMENT_LINE $4E3A set the new empty head
COMMENT $4E3A the next in out empty list will be the new
FORCE_SYMBOL $4E3A NEXT_ENEMY_OBJECT
COMMENT $4E3C head of our empty list
FORCE_SYMBOL $4E3C enemylist_empty_head
COMMENT_LINE $4E3F the old head is always our next
FORCE_SYMBOL $4E41 enemylist_objects_head
FORCE_SYMBOL $4E45 BEHAVIOUR
FORCE_SYMBOL $4E47 enemyPlayerControlledLeftBehaviour
FORCE_SYMBOL $4E4F NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E51 BEHAVIOUR
FORCE_SYMBOL $4E53 enemyPlayerControlledRightBehaviour
FORCE_SYMBOL $4E59 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E5B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E5F NEXT_ENEMY_OBJECT
COMMENT $4E62 diffi
FORCE_SYMBOL $4E62 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E64 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E69 enemyPlayerControlledRightBehaviour
FORCE_SYMBOL $4E71 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E73 BEHAVIOUR
FORCE_SYMBOL $4E75 enemyPlayerControlledLeftBehaviour
FORCE_SYMBOL $4E7B NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E7D NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4E81 NEXT_ENEMY_OBJECT
COMMENT_LINE $4E84 newobject is always head
FORCE_SYMBOL $4E84 enemylist_objects_head
COMMENT_LINE $4E8A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4E8A leaves with Z flag
COMMENT_LINE $4E8A BEQ no spawn
COMMENT_LINE $4E8A BNE spawn Ok
COMMENT_LINE $4E8A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $4E8A "create" (or rather get) new object
FORCE_SYMBOL $4E8C OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $4E92 enemySimpleBehaviour
FORCE_SYMBOL $4E95 BEHAVIOUR
FORCE_NO_SYMBOL $4E98
COMMENT_LINE $4E9C this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $4E9C it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $4E9C sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $4E9C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4E9C in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $4E9C destroys x, y
COMMENT_LINE $4E9C puls from ds the next object behaviour
COMMENT_LINE $4E9C this version is called at the end of an explosion called by "behaviours"
COMMENT $4E9C x -> pointer object struture (correction of offset)
FORCE_SYMBOL $4E9C u_offset1
COMMENT $4E9E is it the first?
FORCE_SYMBOL $4E9E enemylist_objects_head
COMMENT $4EA1 no -> jump
COMMENT $4EA3 s pointer to next objext
FORCE_SYMBOL $4EA3 NEXT_ENEMY_OBJECT
COMMENT $4EA6 the next object will be the first
FORCE_SYMBOL $4EA6 enemylist_objects_head
COMMENT $4EAC start at list head
FORCE_SYMBOL $4EAC enemylist_objects_head
COMMENT $4EB0 am I the next object of the current investigated list element
FORCE_SYMBOL $4EB0 NEXT_ENEMY_OBJECT
COMMENT $4EB2 jup -> jump
COMMENT $4EB4 otherwise load the next as new current
FORCE_SYMBOL $4EB4 NEXT_ENEMY_OBJECT
COMMENT $4EB7 and search further
COMMENT $4EB9 we load "our" next object to s
FORCE_SYMBOL $4EB9 NEXT_ENEMY_OBJECT
COMMENT $4EBC and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $4EBC NEXT_ENEMY_OBJECT
COMMENT $4EBF and clean up the empties
FORCE_SYMBOL $4EBF enemyCount
FORCE_SYMBOL $4EC2 realEnemyCount
COMMENT $4EC5 set u free, as new free head
FORCE_SYMBOL $4EC5 enemylist_empty_head
COMMENT $4EC9 load to u the next linked list element
FORCE_SYMBOL $4EC9 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $4ECC enemylist_empty_head
COMMENT_LINE $4ECF do a clean ending - which is usually done at the end of "SmartDraw"
FORCE_SYMBOL $4ECF gameScale
FORCE_NO_SYMBOL $4ED2
COMMENT $4ED4 /BLANK low and /ZERO low
FORCE_SYMBOL $4ED4 VIA_cntl
FORCE_SYMBOL $4ED6 VIA_t1_cnt_lo
FORCE_SYMBOL $4ED9 VIA_port_a
FORCE_SYMBOL $4EDB VIA_port_b
FORCE_NO_SYMBOL $4EDD
FORCE_SYMBOL $4EDF VIA_int_flags
COMMENT $4EE3 (D = y,x, X = vectorlist)
COMMENT_LINE $4EE5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $4EE5 Store Y in D/A register
FORCE_SYMBOL $4EE5 VIA_port_a
COMMENT $4EE7 Blank low, zero high?
FORCE_NO_SYMBOL $4EE7
FORCE_SYMBOL $4EE9 VIA_cntl
COMMENT $4EEC Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4EEC VIA_port_b
COMMENT $4EEE y must be set more than xx cycles on some vectrex
COMMENT $4EEF Disable mux
FORCE_SYMBOL $4EEF VIA_port_b
COMMENT $4EF1 Store X in D/A register
FORCE_SYMBOL $4EF1 VIA_port_a
COMMENT $4EF3 enable timer
FORCE_SYMBOL $4EF3 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $4EF9
FORCE_SYMBOL $4EFB EXPLOSION_MAX_SCALE
FORCE_SYMBOL $4F01 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $4F05
COMMENT $4F09 preload next user stack
FORCE_SYMBOL $4F0C lightningOn
FORCE_NO_SYMBOL $4F0F
FORCE_SYMBOL $4F11 VIA_int_flags
COMMENT $4F15 Store intensity in D/A
FORCE_SYMBOL $4F15 VIA_port_a
COMMENT $4F17 mux disabled channel 2
FORCE_NO_SYMBOL $4F17
FORCE_SYMBOL $4F1A VIA_port_b
COMMENT $4F1C mux enabled channel 2
FORCE_SYMBOL $4F1C VIA_port_b
COMMENT $4F1E turn off mux
FORCE_SYMBOL $4F1E VIA_port_b
COMMENT_LINE $4F23 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4F23 not used
COMMENT_LINE $4F23 just statically displays an enemy on it position
COMMENT $4F23 Store Y in D/A register
FORCE_SYMBOL $4F23 VIA_port_a
COMMENT $4F25 Blank low, zero high?
FORCE_NO_SYMBOL $4F25
FORCE_SYMBOL $4F27 VIA_cntl
COMMENT $4F2A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4F2A VIA_port_b
COMMENT $4F2C y must be set more than xx cycles on some vectrex
COMMENT $4F2D Disable mux
FORCE_SYMBOL $4F2D VIA_port_b
COMMENT $4F2F Store X in D/A register
FORCE_SYMBOL $4F2F VIA_port_a
COMMENT $4F31 enable timer
FORCE_SYMBOL $4F31 VIA_t1_cnt_hi
FORCE_SYMBOL $4F33 back1Shot
FORCE_SYMBOL $4F36 shotBehaviourStandardStart
COMMENT $4F39 target y, x position in d
COMMENT_LINE $4F3B target y position is always smaller since we start at the top of the screen
COMMENT_LINE $4F41 load speed
FORCE_NO_SYMBOL $4F43
COMMENT $4F45 double check postions because of speed > 1
COMMENT $4F47 otherwise a BEQmight miss the target
FORCE_NO_SYMBOL $4F52
COMMENT_LINE $4F54 load speed
COMMENT $4F54 double check postions because of speed > 1
COMMENT_LINE $4F5F change angle
COMMENT_LINE $4F5F if x finish is positive
COMMENT_LINE $4F5F angle = 4 look right
COMMENT_LINE $4F5F if x finish is negative
COMMENT_LINE $4F5F angle = 12 look left
COMMENT_LINE $4F5F XPOS is current position
COMMENT_LINE $4F5F XPOS16 is from position
COMMENT_LINE $4F5F ldd loaded above is target position
COMMENT $4F5F target y, x position in d
FORCE_NO_SYMBOL $4F67
COMMENT $4F69 heading at 3 o'clock
FORCE_NO_SYMBOL $4F71
COMMENT $4F77 target y, x position in d
COMMENT_LINE $4F7D x is correct so
COMMENT_LINE $4F7D change angle to point either 12 o'clor or 6 o'clock
COMMENT $4F7D y pos
FORCE_NO_SYMBOL $4F83
FORCE_NO_SYMBOL $4F8B
FORCE_NO_SYMBOL $4F97
COMMENT $4F99 double check postions because of speed > 1
FORCE_NO_SYMBOL $4FA6
COMMENT $4FA8 double check postions because of speed > 1
COMMENT $4FB1 reload
COMMENT_LINE $4FBA we have reached target position
COMMENT_LINE $4FBA switch to waiting behaviour
COMMENT_LINE $4FC2 load next pattern if available
COMMENT $4FC4 uper nibble of same byte as
COMMENT $4FC6 add 1 to upper nibble
FORCE_NO_SYMBOL $4FC6
COMMENT $4FC8 this clears the sub pattern position in lower nibble
FORCE_NO_SYMBOL $4FC8
COMMENT $4FCA uper nibble of same byte as
FORCE_NO_SYMBOL $4FCE
COMMENT_LINE $4FD0 in a 4 times the pattern pos of upper nibble
COMMENT_LINE $4FD2 in x correct pattern position in pattern list
COMMENT_LINE $4FD2 absolut patterns do not have sub pattern, so look directly if there is
COMMENT_LINE $4FD2 a next pattern
FORCE_SYMBOL $4FD2 SINGLE_ATTACK_PATTERN_TYPE
COMMENT_LINE $4FD4 SINGLE_ATTACK_RELATIVE_PATTERN  =  0                      ; relative means - it uses the current address of the enemy as start
COMMENT_LINE $4FD4 SINGLE_ATTACK_TARGET_ENEMY_PATTERN  =  1                  ; TARGET - uses somehow the players coordinate as coordinate info
COMMENT_LINE $4FD4 SINGLE_ATTACK_ABSOLUT_PATTERN  =  2                      ; moves from current position to an absolut screen position
COMMENT_LINE $4FD4 SINGLE_ATTACK_JUMP = 3
FORCE_SYMBOL $4FD8 SINGLE_ATTACK_TARGET_ENEMY_PATTERN
FORCE_SYMBOL $4FDE SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LINE $4FE2 else jump
FORCE_SYMBOL $4FE2 SINGLE_ATTACK_PATTERN_NEXT_NO
FORCE_SYMBOL $4FE4 SINGLE_ATTACK_PATTERN_POINTER
FORCE_SYMBOL $4FEE enemySingleAttackAbsolutBehaviour
COMMENT $4FF3 speed
FORCE_SYMBOL $4FF3 SINGLE_ATTACK_SPEED
COMMENT $4FF7 second word in attack pattern are target coordinate
FORCE_NO_SYMBOL $4FF7
COMMENT_LINE $4FFB get delta of now and target
COMMENT_LINE $4FFB divide coordinates by half for angle test
COMMENT_LINE $4FFB otherwise we overflow 2 complements
FORCE_SYMBOL $4FFD _tmpY
FORCE_SYMBOL $5006 _tmpY
FORCE_SYMBOL $5009 _tmpX
COMMENT_LINE $500C std _tmpY
COMMENT_LINE $500C in tmp half of the delta value between target and current pos
COMMENT_LINE $500C NEW: (angles now between 0-7, not 0 to 20)
COMMENT_LINE $500C in d is delta
COMMENT_LINE $500C if y < 0 than angle from 5 to 15
COMMENT_LINE $500C if y > 0-5 and 15-20
COMMENT_LINE $500C if x > 0 than angle between 0-10
COMMENT_LINE $500C if x < 0 than angle between 10 -20
COMMENT_LINE $500C if x == 0 angle = 5 or 15
COMMENT_LINE $500C if y == 0 angle = 0 or 10
COMMENT_LINE $500C if y abs == y abs than angle in the middle of ranges (2.5, 7.5, 12.5, 17.5)
FORCE_NO_SYMBOL $5017
FORCE_NO_SYMBOL $501B
FORCE_NO_SYMBOL $501F
FORCE_NO_SYMBOL $5026
FORCE_NO_SYMBOL $502A
FORCE_NO_SYMBOL $5033
FORCE_NO_SYMBOL $5037
FORCE_NO_SYMBOL $503B
COMMENT_LINE $503F keep speed
COMMENT $503F lower 3 bits are speed
COMMENT $5040 angle is 0 - 7 (must be doubled)
FORCE_NO_SYMBOL $5044
COMMENT $504C jump out of macro
FORCE_SYMBOL $504C notThereYetPosition_ab
COMMENT_LINE $504F same as absolut - but target is current fighter position
FORCE_SYMBOL $504F enemySingleAttackAbsolutBehaviour
COMMENT $5054 speed
FORCE_SYMBOL $5054 SINGLE_ATTACK_SPEED
FORCE_SYMBOL $5058 playerXpos
FORCE_NO_SYMBOL $505B
FORCE_SYMBOL $505D targetPatternCont358
COMMENT_LINE $5060 that this is a relative pattern "SINGLE_ATTACK_RELATIVE_PATTERN"
COMMENT_LINE $5060 but checks must consider it may be otherwise!
FORCE_SYMBOL $5060 enemySingleAttackRelativeBehaviour
COMMENT $5065 second word in attack pattern is the first sub pattern
FORCE_NO_SYMBOL $5065
COMMENT $5067 dw 0,0 = end of pattern, leave macro and enter delay!
COMMENT_LINE $506D in x pointer to sub pattern
COMMENT_LINE $506D Y_POS
COMMENT_LINE $506D X_POS will be out target coordinates in this behaviour
COMMENT_LINE $506D costs cylces - > but I don't have more RAM
COMMENT_LINE $506D = 16 bit pos to same as 8 bit pos
COMMENT_LINE $506D due to wobble this is not kept the same when in
COMMENT_LINE $506D waiting position
FORCE_SYMBOL $5071 P_YPOS
COMMENT $507B jump into relative behaviour
FORCE_SYMBOL $507B thisPatternNotDone_srp
FORCE_SYMBOL $507E enemyWaitingBehaviour
FORCE_SYMBOL $5087 ANGLE8_TABLE
COMMENT $508D only upper 5 bits and doubled!
FORCE_NO_SYMBOL $508D
FORCE_SYMBOL $5095 HIT_FLASH_LENGTH
FORCE_SYMBOL $5099 lightningOn
COMMENT $509E preload next user stack
FORCE_NO_SYMBOL $50A1
FORCE_NO_SYMBOL $50A3
FORCE_SYMBOL $50A5 VIA_int_flags
COMMENT $50A9 Store intensity in D/A
FORCE_SYMBOL $50A9 VIA_port_a
COMMENT $50AB mux disabled channel 2
FORCE_NO_SYMBOL $50AB
FORCE_SYMBOL $50AE VIA_port_b
COMMENT $50B0 mux enabled channel 2
FORCE_SYMBOL $50B0 VIA_port_b
COMMENT $50B2 turn off mux
FORCE_SYMBOL $50B2 VIA_port_b
FORCE_SYMBOL $50B6 lightningOn
FORCE_SYMBOL $50BB lightningOn
COMMENT $50BE preload next user stack
FORCE_SYMBOL $50C1 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $50C3
FORCE_SYMBOL $50C5 VIA_int_flags
COMMENT $50C9 Store intensity in D/A
FORCE_SYMBOL $50C9 VIA_port_a
COMMENT $50CB mux disabled channel 2
FORCE_NO_SYMBOL $50CB
FORCE_SYMBOL $50CE VIA_port_b
COMMENT $50D0 mux enabled channel 2
FORCE_SYMBOL $50D0 VIA_port_b
COMMENT $50D2 turn off mux
FORCE_SYMBOL $50D2 VIA_port_b
COMMENT $50D6 preload next user stack
FORCE_NO_SYMBOL $50D9
FORCE_SYMBOL $50DB VIA_int_flags
COMMENT_LINE $50E2 exit current (single) pattern handling and init a standard delay behaviour
COMMENT_LINE $50E2 restore defaults
FORCE_SYMBOL $50E4 DELAY_TO_REAPEAR
COMMENT $50E8 delay some time after pattern before they reermage at thetop of the screen
FORCE_SYMBOL $50E8 enemyDelayBehaviour
FORCE_SYMBOL $50ED attackPatternCount
FORCE_SYMBOL $50F0 endAttackBehaviourDirectly
COMMENT_LINE $50F3 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $50F3 MUST not be resused
COMMENT_LINE $50F3 only to be called from WAITING BEHAVIOUR!
COMMENT $0000 allow only one init of attack pattern per round
COMMENT $0000 blocker do not attack
COMMENT $0000 in x a pointer to 4 possible attack patterns
COMMENT $0000 random attack pattern in x now (1 of four for this level!
COMMENT_LINE $0000 ok - now start an attack
COMMENT_LINE $0000 for now only "single" attacks
COMMENT_LINE $0000 for now only one attack pattern
COMMENT_LINE $0000 pattern with correct pattern pos in X
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $50F7 init clone "living"
COMMENT $50FD a "non" position (will not goto waiting)
FORCE_NO_SYMBOL $50FD
COMMENT $5101 preload next user stack
COMMENT $5104 (D = y,x, pc = next object)
COMMENT_LINE $5106 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5106 relative means - the enemie has a behaviour where it moves relative to its start position
COMMENT_LINE $5106 10 to the left- or so
COMMENT $5106 Store Y in D/A register
FORCE_SYMBOL $5106 VIA_port_a
COMMENT $5108 Blank low, zero high?
FORCE_NO_SYMBOL $5108
FORCE_SYMBOL $510A VIA_cntl
COMMENT $510D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $510D VIA_port_b
COMMENT $510F y must be set more than xx cycles on some vectrex
COMMENT $5110 Disable mux
FORCE_SYMBOL $5110 VIA_port_b
COMMENT $5112 Store X in D/A register
FORCE_SYMBOL $5112 VIA_port_a
COMMENT $5114 enable timer
FORCE_SYMBOL $5114 VIA_t1_cnt_hi
FORCE_SYMBOL $5116 back2Shot
FORCE_SYMBOL $5119 shotBehaviourStandardStart
COMMENT_LINE $511C move in pattern
COMMENT $5120 only lower nibble
FORCE_NO_SYMBOL $5120
COMMENT $5122 stupid - if it were in the upper nibble one asra would suffice!
COMMENT $5124 times 8
COMMENT $5125 position of y add in pattern
FORCE_SYMBOL $512B P_YADD
FORCE_SYMBOL $5135 P_XADD
COMMENT_LINE $513B check if next pattern position reached (near point to PATTERN_TARGET_REACHED_RADIUS)
FORCE_SYMBOL $5140 P_PATTERN_TARGET_RADIUS
FORCE_SYMBOL $514D P_PATTERN_TARGET_RADIUS
COMMENT_LINE $5153 initiate next relative subpattern (if avialble)
COMMENT_LINE $5153 in D current on screen position, which is base of next pattern
COMMENT_LINE $5153 unify positions, on multi pattern errors otherwise add up
COMMENT_LINE $515C check if this was last pattern of this sub pattern
COMMENT_LINE $5168 here finish the subpattern and do next pattern (if available)
COMMENT_LINE $5168 load next pattern if available
COMMENT $516A uper nibble of same byte as
COMMENT $516C add 1 to upper nibble
FORCE_NO_SYMBOL $516C
COMMENT $516E this clears the sub pattern position in lower nibble
FORCE_NO_SYMBOL $516E
COMMENT $5170 uper nibble of same byte as
FORCE_NO_SYMBOL $5174
COMMENT_LINE $5176 in a 4 times the pattern pos of upper nibble
COMMENT_LINE $5178 in x correct pattern position in pattern list
FORCE_SYMBOL $5178 SINGLE_ATTACK_PATTERN_TYPE
COMMENT_LINE $517A SINGLE_ATTACK_RELATIVE_PATTERN  =  0                      ; relative means - it uses the current address of the enemy as start
COMMENT_LINE $517A SINGLE_ATTACK_TARGET_ENEMY_PATTERN  =  1                  ; TARGET - uses somehow the players coordinate as coordinate info
COMMENT_LINE $517A SINGLE_ATTACK_ABSOLUT_PATTERN  =  2                      ; moves from current position to an absolut screen position
COMMENT_LINE $517A SINGLE_ATTACK_JUMP = 3
FORCE_SYMBOL $517E SINGLE_ATTACK_TARGET_ENEMY_PATTERN
FORCE_SYMBOL $5184 SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LINE $5188 else jump
FORCE_SYMBOL $5188 SINGLE_ATTACK_PATTERN_NEXT_NO
FORCE_SYMBOL $518A SINGLE_ATTACK_PATTERN_POINTER
FORCE_SYMBOL $5194 enemySingleAttackAbsolutBehaviour
COMMENT $5199 speed
FORCE_SYMBOL $5199 SINGLE_ATTACK_SPEED
COMMENT $519D second word in attack pattern are target coordinate
FORCE_NO_SYMBOL $519D
COMMENT_LINE $51A1 get delta of now and target
COMMENT_LINE $51A1 divide coordinates by half for angle test
COMMENT_LINE $51A1 otherwise we overflow 2 complements
FORCE_SYMBOL $51A3 _tmpY
FORCE_SYMBOL $51AC _tmpY
FORCE_SYMBOL $51AF _tmpX
COMMENT_LINE $51B2 std _tmpY
COMMENT_LINE $51B2 in tmp half of the delta value between target and current pos
COMMENT_LINE $51B2 NEW: (angles now between 0-7, not 0 to 20)
COMMENT_LINE $51B2 in d is delta
COMMENT_LINE $51B2 if y < 0 than angle from 5 to 15
COMMENT_LINE $51B2 if y > 0-5 and 15-20
COMMENT_LINE $51B2 if x > 0 than angle between 0-10
COMMENT_LINE $51B2 if x < 0 than angle between 10 -20
COMMENT_LINE $51B2 if x == 0 angle = 5 or 15
COMMENT_LINE $51B2 if y == 0 angle = 0 or 10
COMMENT_LINE $51B2 if y abs == y abs than angle in the middle of ranges (2.5, 7.5, 12.5, 17.5)
FORCE_NO_SYMBOL $51BD
FORCE_NO_SYMBOL $51C1
FORCE_NO_SYMBOL $51C5
FORCE_NO_SYMBOL $51CC
FORCE_NO_SYMBOL $51D0
FORCE_NO_SYMBOL $51D9
FORCE_NO_SYMBOL $51DD
FORCE_NO_SYMBOL $51E1
COMMENT_LINE $51E5 keep speed
COMMENT $51E5 lower 3 bits are speed
COMMENT $51E6 angle is 0 - 7 (must be doubled)
FORCE_NO_SYMBOL $51EA
COMMENT $51F2 jump out of macro
FORCE_SYMBOL $51F2 notThereYetPosition_ab
COMMENT_LINE $51F5 same as absolut - but target is current fighter position
FORCE_SYMBOL $51F5 enemySingleAttackAbsolutBehaviour
COMMENT $51FA speed
FORCE_SYMBOL $51FA SINGLE_ATTACK_SPEED
FORCE_SYMBOL $51FE playerXpos
FORCE_NO_SYMBOL $5201
FORCE_SYMBOL $5203 targetPatternCont366
COMMENT_LINE $5206 that this is a relative pattern "SINGLE_ATTACK_RELATIVE_PATTERN"
COMMENT_LINE $5206 but checks must consider it may be otherwise!
FORCE_SYMBOL $5206 enemySingleAttackRelativeBehaviour
COMMENT $520B second word in attack pattern is the first sub pattern
FORCE_NO_SYMBOL $520B
COMMENT $520D dw 0,0 = end of pattern, leave macro and enter delay!
COMMENT_LINE $5213 in x pointer to sub pattern
COMMENT_LINE $5213 Y_POS
COMMENT_LINE $5213 X_POS will be out target coordinates in this behaviour
COMMENT_LINE $5213 costs cylces - > but I don't have more RAM
COMMENT_LINE $5213 = 16 bit pos to same as 8 bit pos
COMMENT_LINE $5213 due to wobble this is not kept the same when in
COMMENT_LINE $5213 waiting position
FORCE_SYMBOL $5217 P_YPOS
COMMENT $5221 jump into relative behaviour
FORCE_SYMBOL $5221 thisPatternNotDone_srp
COMMENT_LINE $5224 ASSERT: upper nibble must never be reached by an INC!
COMMENT $5224 here init next pattern in list
COMMENT_LINE $5226 get next sub pattern to calculate the next relative address
COMMENT $522A only lower nibble
FORCE_NO_SYMBOL $522A
COMMENT $522E times 8
COMMENT_LINE $5231 add realtive target
FORCE_SYMBOL $5231 P_YPOS
FORCE_SYMBOL $5241 ANGLE8_TABLE
FORCE_SYMBOL $5243 P_ANGLE
FORCE_SYMBOL $524B HIT_FLASH_LENGTH
FORCE_SYMBOL $524F lightningOn
COMMENT $5254 preload next user stack
FORCE_NO_SYMBOL $5257
FORCE_NO_SYMBOL $5259
FORCE_SYMBOL $525B VIA_int_flags
COMMENT $525F Store intensity in D/A
FORCE_SYMBOL $525F VIA_port_a
COMMENT $5261 mux disabled channel 2
FORCE_NO_SYMBOL $5261
FORCE_SYMBOL $5264 VIA_port_b
COMMENT $5266 mux enabled channel 2
FORCE_SYMBOL $5266 VIA_port_b
COMMENT $5268 turn off mux
FORCE_SYMBOL $5268 VIA_port_b
FORCE_SYMBOL $526C lightningOn
FORCE_SYMBOL $5271 lightningOn
COMMENT $5274 preload next user stack
FORCE_SYMBOL $5277 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $5279
FORCE_SYMBOL $527B VIA_int_flags
COMMENT $527F Store intensity in D/A
FORCE_SYMBOL $527F VIA_port_a
COMMENT $5281 mux disabled channel 2
FORCE_NO_SYMBOL $5281
FORCE_SYMBOL $5284 VIA_port_b
COMMENT $5286 mux enabled channel 2
FORCE_SYMBOL $5286 VIA_port_b
COMMENT $5288 turn off mux
FORCE_SYMBOL $5288 VIA_port_b
COMMENT $528C preload next user stack
FORCE_NO_SYMBOL $528F
FORCE_SYMBOL $5291 VIA_int_flags
COMMENT $5298 preload next user stack
FORCE_SYMBOL $529B gameScale
FORCE_NO_SYMBOL $529E
COMMENT $52A0 /BLANK low and /ZERO low
FORCE_SYMBOL $52A0 VIA_cntl
FORCE_SYMBOL $52A2 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $52A4
FORCE_SYMBOL $52A7 VIA_port_b
FORCE_NO_SYMBOL $52A9
FORCE_SYMBOL $52AB VIA_int_flags
COMMENT $52AF (D = y,x, X = vectorlist)
COMMENT_LINE $52B1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $52B1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $52B1 enemy is in its waiting position
COMMENT_LINE $52B1 "wobbled" left and right
COMMENT $52B1 Store Y in D/A register
FORCE_SYMBOL $52B1 VIA_port_a
COMMENT $52B3 Blank low, zero high?
FORCE_NO_SYMBOL $52B3
FORCE_SYMBOL $52B5 VIA_cntl
COMMENT $52B8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $52B8 VIA_port_b
COMMENT $52BA y must be set more than xx cycles on some vectrex
COMMENT $52BB Disable mux
FORCE_SYMBOL $52BB VIA_port_b
COMMENT $52BD Store X in D/A register
FORCE_SYMBOL $52BD VIA_port_a
COMMENT $52BF enable timer
FORCE_SYMBOL $52BF VIA_t1_cnt_hi
FORCE_SYMBOL $52C1 back4Shot
COMMENT_LINE $52C4 optimize
COMMENT_LINE $52C4 use a "test" that does not collision dtection for player coords
COMMENT_LINE $52C4 we are in waiting position forgod sake - no player anywhere near by!
FORCE_SYMBOL $52C4 shotBehaviourStandardStartNoBase
COMMENT $52C7 allow only one init of attack pattern per round
FORCE_SYMBOL $52C7 attackPatternInitiated
FORCE_SYMBOL $52CE attackPatternCount
FORCE_SYMBOL $52D1 currentLevelPointer
FORCE_SYMBOL $52D4 levelMaxAttackPatterns
COMMENT $52DD blocker do not attack
FORCE_SYMBOL $52DD ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $52DF TYPE_DONT_ATTACK
FORCE_SYMBOL $52E5 random_seed
FORCE_NO_SYMBOL $52EB
FORCE_SYMBOL $52ED random_seed
FORCE_SYMBOL $52F0 ATTACK_PATTERN_PROBABILITY
FORCE_SYMBOL $52F6 attackPatternInitiated
FORCE_SYMBOL $52F9 attackPatternCount
COMMENT $52FC in x a pointer to 4 possible attack patterns
FORCE_SYMBOL $52FC LEVEL_ATTACK_PATTERN
FORCE_SYMBOL $52FE random_seed2
FORCE_NO_SYMBOL $5304
FORCE_SYMBOL $5306 random_seed2
FORCE_NO_SYMBOL $5309
FORCE_SYMBOL $530B difficulty
FORCE_NO_SYMBOL $530E
FORCE_NO_SYMBOL $5318
FORCE_NO_SYMBOL $531A
FORCE_NO_SYMBOL $531E
FORCE_NO_SYMBOL $5325
FORCE_NO_SYMBOL $5327
FORCE_NO_SYMBOL $532B
COMMENT $532E random attack pattern in x now (1 of four for this level!
COMMENT_LINE $5330 ok - now start an attack
COMMENT_LINE $5330 for now only "single" attacks
COMMENT_LINE $5330 for now only one attack pattern
COMMENT_LINE $5336 pattern with correct pattern pos in X
FORCE_SYMBOL $5336 SINGLE_ATTACK_PATTERN_TYPE
COMMENT_LINE $5338 SINGLE_ATTACK_RELATIVE_PATTERN  =  0                      ; relative means - it uses the current address of the enemy as start
COMMENT_LINE $5338 SINGLE_ATTACK_TARGET_ENEMY_PATTERN  =  1                  ; TARGET - uses somehow the players coordinate as coordinate info
COMMENT_LINE $5338 SINGLE_ATTACK_ABSOLUT_PATTERN  =  2                      ; moves from current position to an absolut screen position
COMMENT_LINE $5338 SINGLE_ATTACK_JUMP = 3
FORCE_SYMBOL $533C SINGLE_ATTACK_TARGET_ENEMY_PATTERN
FORCE_SYMBOL $5342 SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LINE $5346 else jump
FORCE_SYMBOL $5346 SINGLE_ATTACK_PATTERN_NEXT_NO
FORCE_SYMBOL $5348 SINGLE_ATTACK_PATTERN_POINTER
FORCE_SYMBOL $5352 enemySingleAttackAbsolutBehaviour
COMMENT $5357 speed
FORCE_SYMBOL $5357 SINGLE_ATTACK_SPEED
COMMENT $535B second word in attack pattern are target coordinate
FORCE_NO_SYMBOL $535B
COMMENT_LINE $535F get delta of now and target
COMMENT_LINE $535F divide coordinates by half for angle test
COMMENT_LINE $535F otherwise we overflow 2 complements
FORCE_SYMBOL $5361 _tmpY
FORCE_SYMBOL $536A _tmpY
FORCE_SYMBOL $536D _tmpX
COMMENT_LINE $5370 std _tmpY
COMMENT_LINE $5370 in tmp half of the delta value between target and current pos
COMMENT_LINE $5370 NEW: (angles now between 0-7, not 0 to 20)
COMMENT_LINE $5370 in d is delta
COMMENT_LINE $5370 if y < 0 than angle from 5 to 15
COMMENT_LINE $5370 if y > 0-5 and 15-20
COMMENT_LINE $5370 if x > 0 than angle between 0-10
COMMENT_LINE $5370 if x < 0 than angle between 10 -20
COMMENT_LINE $5370 if x == 0 angle = 5 or 15
COMMENT_LINE $5370 if y == 0 angle = 0 or 10
COMMENT_LINE $5370 if y abs == y abs than angle in the middle of ranges (2.5, 7.5, 12.5, 17.5)
FORCE_NO_SYMBOL $537B
FORCE_NO_SYMBOL $537F
FORCE_NO_SYMBOL $5383
FORCE_NO_SYMBOL $538A
FORCE_NO_SYMBOL $538E
FORCE_NO_SYMBOL $5397
FORCE_NO_SYMBOL $539B
FORCE_NO_SYMBOL $539F
COMMENT_LINE $53A3 keep speed
COMMENT $53A3 lower 3 bits are speed
COMMENT $53A4 angle is 0 - 7 (must be doubled)
FORCE_NO_SYMBOL $53A8
FORCE_SYMBOL $53B0 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $53B2 TYPE_CAN_CLONE
FORCE_SYMBOL $53B8 currentLevelPointer
FORCE_SYMBOL $53BB LEVEL_TYPE
FORCE_SYMBOL $53BD LEVEL_TYPE_BIGGY
FORCE_SYMBOL $53C1 enemyCount
FORCE_SYMBOL $53C4 CLONE_MAX_ENEMY_DISPLAYED
COMMENT_LINE $53C8 start cloning
COMMENT_LINE $53C8 basically spawn
COMMENT_LINE $53C8 can't jsr here - cause we occupied the Stack register
FORCE_SYMBOL $53CA CLONE_INFO
FORCE_NO_SYMBOL $53CC
COMMENT $53CE delay between clones
FORCE_SYMBOL $53CE tmp4_tmp
FORCE_SYMBOL $53D1 tmp2_tmp
FORCE_SYMBOL $53D4 CLONE_INFO
COMMENT $53DD number of clones
FORCE_SYMBOL $53DD tmp1_tmp
FORCE_SYMBOL $53E0 enemylist_empty_head
FORCE_SYMBOL $53E3 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $53E7 set the new empty head
COMMENT $53E9 the next in out empty list will be the new
FORCE_SYMBOL $53E9 NEXT_ENEMY_OBJECT
COMMENT $53EB head of our empty list
FORCE_SYMBOL $53EB enemylist_empty_head
FORCE_SYMBOL $53EE enemylist_objects_head
FORCE_SYMBOL $53F1 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $53F3 enemylist_objects_head
COMMENT $53F6 and remember that we created a new object
FORCE_SYMBOL $53F6 enemyCount
FORCE_SYMBOL $53F9 realEnemyCount
COMMENT_LINE $53FC copy this enemy
FORCE_SYMBOL $53FE Y_POS
FORCE_SYMBOL $5402 Y_POS16
FORCE_SYMBOL $5406 X_POS16
FORCE_SYMBOL $540A SUB_PATTERN
FORCE_SYMBOL $540E ANGLE_HOMEFLIGHT
FORCE_SYMBOL $5412 MY_PATTERN
FORCE_SYMBOL $5416 PATTERN_POSITION
FORCE_SYMBOL $541A ALL_PURPOSE
FORCE_SYMBOL $541F ENEMY_STRUCT
COMMENT_LINE $5422 clone delay
COMMENT $5422 correct attack pattern count -> clone is also attacking!
FORCE_SYMBOL $5422 attackPatternCount
FORCE_SYMBOL $5425 tmp2_tmp
COMMENT $5428 delay between clones
FORCE_SYMBOL $5428 ALL_PURPOSE
COMMENT $542B is increased between each clone
FORCE_SYMBOL $542B tmp4_tmp
FORCE_SYMBOL $542E tmp2_tmp
COMMENT $5431 get the next behavoiur and store it "somewhere"
COMMENT $5433 pattern positions will allways be 0, position will be set to ff
FORCE_SYMBOL $5433 PATTERN_POSITION
COMMENT_LINE $5435 = clone behaviour
COMMENT $5435 just waits - than starts exactly as clone
FORCE_SYMBOL $5435 clonedBehaviour
FORCE_SYMBOL $5438 BEHAVIOUR
FORCE_SYMBOL $543A tmp1_tmp
COMMENT $543F jump out of macro
FORCE_SYMBOL $543F notThereYetPosition_ab
COMMENT_LINE $5442 same as absolut - but target is current fighter position
FORCE_SYMBOL $5442 enemySingleAttackAbsolutBehaviour
COMMENT $5447 speed
FORCE_SYMBOL $5447 SINGLE_ATTACK_SPEED
FORCE_SYMBOL $544B playerXpos
FORCE_NO_SYMBOL $544E
FORCE_SYMBOL $5450 targetPatternCont379
COMMENT_LINE $5453 that this is a relative pattern "SINGLE_ATTACK_RELATIVE_PATTERN"
COMMENT_LINE $5453 but checks must consider it may be otherwise!
FORCE_SYMBOL $5453 enemySingleAttackRelativeBehaviour
COMMENT $5458 second word in attack pattern is the first sub pattern
FORCE_NO_SYMBOL $5458
COMMENT $545A dw 0,0 = end of pattern, leave macro and enter delay!
COMMENT_LINE $5460 in x pointer to sub pattern
COMMENT_LINE $5460 Y_POS
COMMENT_LINE $5460 X_POS will be out target coordinates in this behaviour
COMMENT_LINE $5460 costs cylces - > but I don't have more RAM
COMMENT_LINE $5460 = 16 bit pos to same as 8 bit pos
COMMENT_LINE $5460 due to wobble this is not kept the same when in
COMMENT_LINE $5460 waiting position
FORCE_SYMBOL $5464 P_YPOS
FORCE_SYMBOL $546E ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $5470 TYPE_CAN_CLONE
FORCE_SYMBOL $5476 currentLevelPointer
FORCE_SYMBOL $5479 LEVEL_TYPE
FORCE_SYMBOL $547B LEVEL_TYPE_BIGGY
FORCE_SYMBOL $547F enemyCount
FORCE_SYMBOL $5482 CLONE_MAX_ENEMY_DISPLAYED
COMMENT_LINE $5486 start cloning
COMMENT_LINE $5486 basically spawn
COMMENT_LINE $5486 can't jsr here - cause we occupied the Stack register
FORCE_SYMBOL $5488 CLONE_INFO
FORCE_NO_SYMBOL $548A
COMMENT $548C delay between clones
FORCE_SYMBOL $548C tmp4_tmp
FORCE_SYMBOL $548F tmp2_tmp
FORCE_SYMBOL $5492 CLONE_INFO
COMMENT $549B number of clones
FORCE_SYMBOL $549B tmp1_tmp
FORCE_SYMBOL $549E enemylist_empty_head
FORCE_SYMBOL $54A1 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $54A5 set the new empty head
COMMENT $54A7 the next in out empty list will be the new
FORCE_SYMBOL $54A7 NEXT_ENEMY_OBJECT
COMMENT $54A9 head of our empty list
FORCE_SYMBOL $54A9 enemylist_empty_head
FORCE_SYMBOL $54AC enemylist_objects_head
FORCE_SYMBOL $54AF NEXT_ENEMY_OBJECT
FORCE_SYMBOL $54B1 enemylist_objects_head
COMMENT $54B4 and remember that we created a new object
FORCE_SYMBOL $54B4 enemyCount
FORCE_SYMBOL $54B7 realEnemyCount
COMMENT_LINE $54BA copy this enemy
FORCE_SYMBOL $54BC Y_POS
FORCE_SYMBOL $54C0 Y_POS16
FORCE_SYMBOL $54C4 X_POS16
FORCE_SYMBOL $54C8 SUB_PATTERN
FORCE_SYMBOL $54CC ANGLE_HOMEFLIGHT
FORCE_SYMBOL $54D0 MY_PATTERN
FORCE_SYMBOL $54D4 PATTERN_POSITION
FORCE_SYMBOL $54D8 ALL_PURPOSE
FORCE_SYMBOL $54DD ENEMY_STRUCT
COMMENT_LINE $54E0 clone delay
COMMENT $54E0 correct attack pattern count -> clone is also attacking!
FORCE_SYMBOL $54E0 attackPatternCount
FORCE_SYMBOL $54E3 tmp2_tmp
COMMENT $54E6 delay between clones
FORCE_SYMBOL $54E6 ALL_PURPOSE
COMMENT $54E9 is increased between each clone
FORCE_SYMBOL $54E9 tmp4_tmp
FORCE_SYMBOL $54EC tmp2_tmp
COMMENT $54EF get the next behavoiur and store it "somewhere"
COMMENT $54F1 pattern positions will allways be 0, position will be set to ff
FORCE_SYMBOL $54F1 PATTERN_POSITION
COMMENT_LINE $54F3 = clone behaviour
COMMENT $54F3 just waits - than starts exactly as clone
FORCE_SYMBOL $54F3 clonedBehaviour
FORCE_SYMBOL $54F6 BEHAVIOUR
FORCE_SYMBOL $54F8 tmp1_tmp
COMMENT $54FD jump into relative behaviour
FORCE_SYMBOL $54FD thisPatternNotDone_srp
COMMENT_LINE $5500 above macro must jmp to noAnimChangeEnemy
COMMENT_LINE $5500 because ANIM_COUNT / ANIM POSITION
COMMENT_LINE $5500 is reused by Attack pattern
COMMENT_LINE $5500 if it would go on "normally"
COMMENT_LINE $5500 the Pattern data would be corrupted!
FORCE_SYMBOL $5502 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $5504 TYPE_SHIELD
FORCE_SYMBOL $550A globalPatternWobble
COMMENT_LINE $550F ldu      ENEMY_STRUCT+u_offset1,s
COMMENT_LINE $550F do animation of enemy
FORCE_SYMBOL $550F animDelayCounter
FORCE_SYMBOL $5519 WAIT_ANIM_TABLE
FORCE_SYMBOL $5524 WAIT_ANIM_TABLE
FORCE_SYMBOL $552C HIT_FLASH_LENGTH
FORCE_SYMBOL $5530 lightningOn
COMMENT $5535 preload next user stack
FORCE_NO_SYMBOL $5538
FORCE_NO_SYMBOL $553A
FORCE_SYMBOL $553C VIA_int_flags
COMMENT $5540 Store intensity in D/A
FORCE_SYMBOL $5540 VIA_port_a
COMMENT $5542 mux disabled channel 2
FORCE_NO_SYMBOL $5542
FORCE_SYMBOL $5545 VIA_port_b
COMMENT $5547 mux enabled channel 2
FORCE_SYMBOL $5547 VIA_port_b
COMMENT $5549 turn off mux
FORCE_SYMBOL $5549 VIA_port_b
FORCE_SYMBOL $554D lightningOn
FORCE_SYMBOL $5552 lightningOn
COMMENT $5555 preload next user stack
FORCE_SYMBOL $5558 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $555A
FORCE_SYMBOL $555C VIA_int_flags
COMMENT $5560 Store intensity in D/A
FORCE_SYMBOL $5560 VIA_port_a
COMMENT $5562 mux disabled channel 2
FORCE_NO_SYMBOL $5562
FORCE_SYMBOL $5565 VIA_port_b
COMMENT $5567 mux enabled channel 2
FORCE_SYMBOL $5567 VIA_port_b
COMMENT $5569 turn off mux
FORCE_SYMBOL $5569 VIA_port_b
COMMENT $556D preload next user stack
FORCE_NO_SYMBOL $5570
FORCE_SYMBOL $5572 VIA_int_flags
COMMENT_LINE $5579 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5579 behaviours for spawned
COMMENT_LINE $5579 enmies, they follow the pattern they belong to
COMMENT $5579 Store Y in D/A register
FORCE_SYMBOL $5579 VIA_port_a
COMMENT $557B Blank low, zero high?
FORCE_NO_SYMBOL $557B
FORCE_SYMBOL $557D VIA_cntl
COMMENT $5580 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5580 VIA_port_b
COMMENT $5582 y must be set more than xx cycles on some vectrex
COMMENT $5583 Disable mux
FORCE_SYMBOL $5583 VIA_port_b
COMMENT $5585 Store X in D/A register
FORCE_SYMBOL $5585 VIA_port_a
COMMENT $5587 enable timer
FORCE_SYMBOL $5587 VIA_t1_cnt_hi
FORCE_SYMBOL $5589 back3Shot
FORCE_SYMBOL $558C shotBehaviourStandardTestShootingOnly
COMMENT $558F Store Y in D/A register
FORCE_SYMBOL $558F VIA_port_a
COMMENT $5591 Blank low, zero high?
FORCE_NO_SYMBOL $5591
FORCE_SYMBOL $5593 VIA_cntl
COMMENT $5596 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5596 VIA_port_b
COMMENT $5598 y must be set more than xx cycles on some vectrex
COMMENT $5599 Disable mux
FORCE_SYMBOL $5599 VIA_port_b
COMMENT $559B Store X in D/A register
FORCE_SYMBOL $559B VIA_port_a
COMMENT $559D enable timer
FORCE_SYMBOL $559D VIA_t1_cnt_hi
FORCE_SYMBOL $559F back3Shot_patternCheck
FORCE_SYMBOL $55A2 shotBehaviourStandardStart
COMMENT_LINE $55A5 ----------------------------------------------
COMMENT_LINE $55A5 in higher difficulties allow
COMMENT_LINE $55A5 attack patterns in intro!
FORCE_SYMBOL $55A5 difficulty
FORCE_NO_SYMBOL $55A8
FORCE_SYMBOL $55B3 random_seed
FORCE_NO_SYMBOL $55B9
FORCE_SYMBOL $55BB random_seed
FORCE_NO_SYMBOL $55BE
COMMENT_LINE $55C4 .........
COMMENT $55C4 allow only one init of attack pattern per round
FORCE_SYMBOL $55C4 attackPatternInitiated
FORCE_SYMBOL $55CB attackPatternCount
FORCE_SYMBOL $55CE currentLevelPointer
FORCE_SYMBOL $55D1 LEVEL_TYPE
FORCE_NO_SYMBOL $55D3
FORCE_SYMBOL $55D5 LEVEL_TYPE_BONUS
FORCE_SYMBOL $55DB difficulty
FORCE_NO_SYMBOL $55DE
FORCE_SYMBOL $55E1 levelMaxAttackPatterns
FORCE_SYMBOL $55E4 attackPatternCount
COMMENT_LINE $55EB lbhs     notAgain_nm
COMMENT_LINE $55EB cmpa     levelMaxAttackPatterns
COMMENT_LINE $55EB lbhs     notAgain_nm
COMMENT $55ED blocker do not attack
FORCE_SYMBOL $55ED ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $55EF TYPE_DONT_ATTACK
FORCE_SYMBOL $55F5 random_seed
FORCE_NO_SYMBOL $55FB
FORCE_SYMBOL $55FD random_seed
FORCE_SYMBOL $5600 ATTACK_PATTERN_PROBABILITY
FORCE_SYMBOL $5606 attackPatternInitiated
FORCE_SYMBOL $5609 attackPatternCount
COMMENT_LINE $560C perhaps use special attack patterns for "middle" attacks?
FORCE_SYMBOL $560C random_seed2
FORCE_NO_SYMBOL $5612
FORCE_SYMBOL $5614 random_seed2
FORCE_SYMBOL $5617 attackPatternsIntro
COMMENT_LINE $561A ldx      LEVEL_ATTACK_PATTERN,x ; in x a pointer to 4 possible attack patterns
FORCE_NO_SYMBOL $561A
COMMENT $561D random attack pattern in x now (1 of four for this level!
COMMENT_LINE $561F ok - now start an attack
COMMENT_LINE $561F for now only "single" attacks
COMMENT_LINE $561F for now only one attack pattern
COMMENT_LINE $5625 pattern with correct pattern pos in X
FORCE_SYMBOL $5625 SINGLE_ATTACK_PATTERN_TYPE
COMMENT_LINE $5627 SINGLE_ATTACK_RELATIVE_PATTERN  =  0                      ; relative means - it uses the current address of the enemy as start
COMMENT_LINE $5627 SINGLE_ATTACK_TARGET_ENEMY_PATTERN  =  1                  ; TARGET - uses somehow the players coordinate as coordinate info
COMMENT_LINE $5627 SINGLE_ATTACK_ABSOLUT_PATTERN  =  2                      ; moves from current position to an absolut screen position
COMMENT_LINE $5627 SINGLE_ATTACK_JUMP = 3
FORCE_SYMBOL $562B SINGLE_ATTACK_TARGET_ENEMY_PATTERN
FORCE_SYMBOL $5631 SINGLE_ATTACK_ABSOLUT_PATTERN
COMMENT_LINE $5635 else jump
FORCE_SYMBOL $5635 SINGLE_ATTACK_PATTERN_NEXT_NO
FORCE_SYMBOL $5637 SINGLE_ATTACK_PATTERN_POINTER
FORCE_SYMBOL $5641 enemySingleAttackAbsolutBehaviour
COMMENT $5646 speed
FORCE_SYMBOL $5646 SINGLE_ATTACK_SPEED
COMMENT $564A second word in attack pattern are target coordinate
FORCE_NO_SYMBOL $564A
COMMENT_LINE $564E get delta of now and target
COMMENT_LINE $564E divide coordinates by half for angle test
COMMENT_LINE $564E otherwise we overflow 2 complements
FORCE_SYMBOL $5650 _tmpY
FORCE_SYMBOL $5659 _tmpY
FORCE_SYMBOL $565C _tmpX
COMMENT_LINE $565F std _tmpY
COMMENT_LINE $565F in tmp half of the delta value between target and current pos
COMMENT_LINE $565F NEW: (angles now between 0-7, not 0 to 20)
COMMENT_LINE $565F in d is delta
COMMENT_LINE $565F if y < 0 than angle from 5 to 15
COMMENT_LINE $565F if y > 0-5 and 15-20
COMMENT_LINE $565F if x > 0 than angle between 0-10
COMMENT_LINE $565F if x < 0 than angle between 10 -20
COMMENT_LINE $565F if x == 0 angle = 5 or 15
COMMENT_LINE $565F if y == 0 angle = 0 or 10
COMMENT_LINE $565F if y abs == y abs than angle in the middle of ranges (2.5, 7.5, 12.5, 17.5)
FORCE_NO_SYMBOL $566A
FORCE_NO_SYMBOL $566E
FORCE_NO_SYMBOL $5672
FORCE_NO_SYMBOL $5679
FORCE_NO_SYMBOL $567D
FORCE_NO_SYMBOL $5686
FORCE_NO_SYMBOL $568A
FORCE_NO_SYMBOL $568E
COMMENT_LINE $5692 keep speed
COMMENT $5692 lower 3 bits are speed
COMMENT $5693 angle is 0 - 7 (must be doubled)
FORCE_NO_SYMBOL $5697
COMMENT $569F jump out of macro
FORCE_SYMBOL $569F notThereYetPosition_ab
COMMENT_LINE $56A2 same as absolut - but target is current fighter position
FORCE_SYMBOL $56A2 enemySingleAttackAbsolutBehaviour
COMMENT $56A7 speed
FORCE_SYMBOL $56A7 SINGLE_ATTACK_SPEED
FORCE_SYMBOL $56AB playerXpos
FORCE_NO_SYMBOL $56AE
FORCE_SYMBOL $56B0 targetPatternCont_nm
COMMENT_LINE $56B3 that this is a relative pattern "SINGLE_ATTACK_RELATIVE_PATTERN"
COMMENT_LINE $56B3 but checks must consider it may be otherwise!
FORCE_SYMBOL $56B3 enemySingleAttackRelativeBehaviour
COMMENT $56B8 second word in attack pattern is the first sub pattern
FORCE_NO_SYMBOL $56B8
COMMENT $56BA dw 0,0 = end of pattern, leave macro and enter delay!
COMMENT_LINE $56C0 in x pointer to sub pattern
COMMENT_LINE $56C0 Y_POS
COMMENT_LINE $56C0 X_POS will be out target coordinates in this behaviour
COMMENT_LINE $56C0 costs cylces - > but I don't have more RAM
COMMENT_LINE $56C0 = 16 bit pos to same as 8 bit pos
COMMENT_LINE $56C0 due to wobble this is not kept the same when in
COMMENT_LINE $56C0 waiting position
FORCE_SYMBOL $56C4 P_YPOS
COMMENT $56CE jump into relative behaviour
FORCE_SYMBOL $56CE thisPatternNotDone_srp
COMMENT_LINE $56D1 .........
COMMENT_LINE $56D1 on higher level check if I should
COMMENT_LINE $56D1 start an immediate attack pattern!
COMMENT_LINE $56D1 ----------------------------------------------
COMMENT_LINE $56D1 move in pattern
COMMENT $56D7 times 8
COMMENT $56D8 TWO intro bytes of pattern
FORCE_SYMBOL $56D8 P_PATTERN_PATTERN_START
FORCE_SYMBOL $56DE P_YADD
FORCE_SYMBOL $56EA P_XADD
COMMENT_LINE $56F0 on inverse target check must also be inverse
FORCE_SYMBOL $56F4 P_XADD
COMMENT_LINE $56FC check if next pattern position reached (near point to PATTERN_TARGET_REACHED_RADIUS)
COMMENT $5701 force 7f to be inverse of $80
FORCE_NO_SYMBOL $5701
FORCE_SYMBOL $5703 P_PATTERN_TARGET_RADIUS
COMMENT $5712 force 7f to be inverse of $80
FORCE_NO_SYMBOL $5712
FORCE_SYMBOL $5714 P_PATTERN_TARGET_RADIUS
COMMENT_LINE $5726 check for pattern loop
COMMENT_LINE $5726 jhg
COMMENT_LINE $5726 if angle byte is != 0
COMMENT_LINE $5726 than angle byte is the (number-1) of the current pattern list to loop to!
COMMENT_LINE $5726 enter loop
COMMENT $5728 here init next pattern in list
COMMENT_LINE $572A load x with pointer to next (loop) pattern
COMMENT $572E times 8
COMMENT $572F THREE intro bytes of pattern
FORCE_SYMBOL $572F P_PATTERN_PATTERN_START
COMMENT_LINE $5735 check for kamikaze
FORCE_SYMBOL $5735 currentLevelPointer
FORCE_SYMBOL $5738 LEVEL_TYPE
FORCE_NO_SYMBOL $573A
FORCE_SYMBOL $573C LEVEL_TYPE_KAMIKAZE
COMMENT_LINE $573E remove enemie for good!
FORCE_SYMBOL $5742 LEVEL_TYPE_BONUS
COMMENT_LINE $5744 remove enemie for good!
COMMENT_LINE $5748 here finish the pattern and enter game mode
FORCE_SYMBOL $5748 DELAY_TO_REAPEAR
FORCE_SYMBOL $574E ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $5750 TYPE_DIRECT_WAIT
COMMENT_LINE $5754 only type now is "direct waiting"
COMMENT_LINE $5754 ....
FORCE_SYMBOL $5756 enemyFlyHomeBehaviour
FORCE_SYMBOL $575B currentLevelPointer
COMMENT $575E in x now waiting pattern pointer
FORCE_SYMBOL $575E LEVEL_WAITING_PATTERN
COMMENT_LINE $5760 calculate angle of enemy while flying home
COMMENT_LINE $5760 ensure respawn point random and in correct half of screen
COMMENT $576C target y, x position in d
COMMENT_LINE $5770 in b future x
COMMENT_LINE $5770 0 is current x
COMMENT_LINE $5770 0 is angle 10
COMMENT_LINE $5770 +127 is something like -4
COMMENT_LINE $5770 -127 is something like +4
COMMENT $5770 64
COMMENT $5771 32
COMMENT $5772 16
COMMENT $5773 8
COMMENT $5774 4
COMMENT $5775 2 4 times 2
COMMENT $5776 ensure divideable by 2
COMMENT $5778 middle is 8 (times 2) (8 is pointing down, less is pointing right, more is pointing left)
FORCE_NO_SYMBOL $5778
COMMENT $577A store angle of fligher to "ALL PURPOSE"
FORCE_SYMBOL $577E ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $5780 TYPE_DONT_WAIT
COMMENT $5786 delay some time after pattern before they reermage at thetop of the screen
FORCE_SYMBOL $5786 enemyDelayBehaviour
COMMENT $578D here init next pattern in list
COMMENT_LINE $578F reset positions to start position of next line
FORCE_SYMBOL $57A4 ANGLE8_TABLE
COMMENT $57A6 x boken
FORCE_SYMBOL $57A6 P_ANGLE
FORCE_SYMBOL $57AD angleInverse
FORCE_SYMBOL $57B9 HIT_FLASH_LENGTH
FORCE_SYMBOL $57BD lightningOn
COMMENT $57C2 preload next user stack
FORCE_NO_SYMBOL $57C5
FORCE_NO_SYMBOL $57C7
FORCE_SYMBOL $57C9 VIA_int_flags
COMMENT $57CD Store intensity in D/A
FORCE_SYMBOL $57CD VIA_port_a
COMMENT $57CF mux disabled channel 2
FORCE_NO_SYMBOL $57CF
FORCE_SYMBOL $57D2 VIA_port_b
COMMENT $57D4 mux enabled channel 2
FORCE_SYMBOL $57D4 VIA_port_b
COMMENT $57D6 turn off mux
FORCE_SYMBOL $57D6 VIA_port_b
FORCE_SYMBOL $57DA lightningOn
FORCE_SYMBOL $57DF lightningOn
COMMENT $57E2 preload next user stack
FORCE_SYMBOL $57E5 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $57E7
FORCE_SYMBOL $57E9 VIA_int_flags
COMMENT $57ED Store intensity in D/A
FORCE_SYMBOL $57ED VIA_port_a
COMMENT $57EF mux disabled channel 2
FORCE_NO_SYMBOL $57EF
FORCE_SYMBOL $57F2 VIA_port_b
COMMENT $57F4 mux enabled channel 2
FORCE_SYMBOL $57F4 VIA_port_b
COMMENT $57F6 turn off mux
FORCE_SYMBOL $57F6 VIA_port_b
COMMENT $57FA preload next user stack
FORCE_NO_SYMBOL $57FD
FORCE_SYMBOL $57FF VIA_int_flags
COMMENT_LINE $580E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $580E simple behaviour that counts
COMMENT_LINE $580E down a counter
COMMENT_LINE $580E nothing is displayed
COMMENT_LINE $580E after counter finished the "fly home" behaviour is initiated
COMMENT_LINE $5812 unkown position -> remove!
FORCE_SYMBOL $581A enemyFlyHomeBehaviour
FORCE_SYMBOL $581F currentLevelPointer
COMMENT $5822 in x now waiting pattern pointer
FORCE_SYMBOL $5822 LEVEL_WAITING_PATTERN
COMMENT_LINE $5824 calculate angle of enemy while flying home
COMMENT $5827 target y, x position in d
COMMENT_LINE $5829 ensure respawn point random and in correct half of screen
COMMENT $5829 "Random" counter x position
FORCE_NO_SYMBOL $582F
FORCE_NO_SYMBOL $5833
COMMENT $5838 ypos
FORCE_NO_SYMBOL $5838
COMMENT $5843 target y, x position in d
COMMENT_LINE $5847 in b future x
COMMENT_LINE $5847 0 is current x
COMMENT_LINE $5847 0 is angle 10
COMMENT_LINE $5847 +127 is something like -4
COMMENT_LINE $5847 -127 is something like +4
COMMENT $5847 64
COMMENT $5848 32
COMMENT $5849 16
COMMENT $584A 8
COMMENT $584B 4
COMMENT $584C 2 4 times 2
COMMENT $584D ensure divideable by 2
COMMENT $584F middle is 8 (times 2) (8 is pointing down, less is pointing right, more is pointing left)
FORCE_NO_SYMBOL $584F
COMMENT $5851 store angle of fligher to "ALL PURPOSE"
COMMENT $5853 preload next user stack
COMMENT $5856 (D = y,x, pc = next object)
COMMENT_LINE $5858 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5858 fly home behaviour
COMMENT_LINE $5858 from the current position the
COMMENT_LINE $5858 enemy flies on the shortes path to its
COMMENT_LINE $5858 Waiting position, speed = 255
COMMENT_LINE $5858 after that the Waiting behaviour is
COMMENT_LINE $5858 initiated!
COMMENT $5858 Store Y in D/A register
FORCE_SYMBOL $5858 VIA_port_a
COMMENT $585A Blank low, zero high?
FORCE_NO_SYMBOL $585A
FORCE_SYMBOL $585C VIA_cntl
COMMENT $585F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $585F VIA_port_b
COMMENT $5861 y must be set more than xx cycles on some vectrex
COMMENT $5862 Disable mux
FORCE_SYMBOL $5862 VIA_port_b
COMMENT $5864 Store X in D/A register
FORCE_SYMBOL $5864 VIA_port_a
COMMENT $5866 enable timer
FORCE_SYMBOL $5866 VIA_t1_cnt_hi
FORCE_SYMBOL $5868 back5Shot
FORCE_SYMBOL $586B shotBehaviourStandardStart
FORCE_SYMBOL $586E currentLevelPointer
COMMENT $5871 in x now waiting pattern pointer
FORCE_SYMBOL $5871 LEVEL_WAITING_PATTERN
COMMENT $5878 target y, x position in d
FORCE_NO_SYMBOL $5878
COMMENT_LINE $587A target y position is allways smaller since we start at the top of the screen
COMMENT_LINE $5882 change angle
COMMENT_LINE $5882 if x finish is positive
COMMENT_LINE $5882 angle = 4 look right
COMMENT_LINE $5882 if x finish is negative
COMMENT_LINE $5882 angle = 12 look left
COMMENT_LINE $5882 XPOS is current position
COMMENT_LINE $5882 XPOS16 is from position
COMMENT_LINE $5882 ldd loaded above is target position
COMMENT_LINE $5884 b is target
COMMENT $5887 3 o clock
COMMENT $588B reload
FORCE_NO_SYMBOL $588B
COMMENT $588F 9 oclock
COMMENT $5893 reload
FORCE_NO_SYMBOL $5893
COMMENT $5895 remember correct "b"
COMMENT $5897 see above
COMMENT_LINE $589B than we must add
COMMENT_LINE $58AB only possibleway is down
COMMENT $58AB 6 oclock
COMMENT $58AF reload
FORCE_NO_SYMBOL $58AF
COMMENT_LINE $58B6 we have reached target position
COMMENT_LINE $58B6 switch to waiting behaviour
FORCE_SYMBOL $58BE enemyWaitingBehaviour
FORCE_SYMBOL $58C7 ANGLE8_TABLE
FORCE_SYMBOL $58D1 HIT_FLASH_LENGTH
FORCE_SYMBOL $58D5 lightningOn
COMMENT $58DA preload next user stack
FORCE_NO_SYMBOL $58DD
FORCE_NO_SYMBOL $58DF
FORCE_SYMBOL $58E1 VIA_int_flags
COMMENT $58E5 Store intensity in D/A
FORCE_SYMBOL $58E5 VIA_port_a
COMMENT $58E7 mux disabled channel 2
FORCE_NO_SYMBOL $58E7
FORCE_SYMBOL $58EA VIA_port_b
COMMENT $58EC mux enabled channel 2
FORCE_SYMBOL $58EC VIA_port_b
COMMENT $58EE turn off mux
FORCE_SYMBOL $58EE VIA_port_b
FORCE_SYMBOL $58F2 lightningOn
FORCE_SYMBOL $58F7 lightningOn
COMMENT $58FA preload next user stack
FORCE_SYMBOL $58FD DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $58FF
FORCE_SYMBOL $5901 VIA_int_flags
COMMENT $5905 Store intensity in D/A
FORCE_SYMBOL $5905 VIA_port_a
COMMENT $5907 mux disabled channel 2
FORCE_NO_SYMBOL $5907
FORCE_SYMBOL $590A VIA_port_b
COMMENT $590C mux enabled channel 2
FORCE_SYMBOL $590C VIA_port_b
COMMENT $590E turn off mux
FORCE_SYMBOL $590E VIA_port_b
COMMENT $5912 preload next user stack
FORCE_NO_SYMBOL $5915
FORCE_SYMBOL $5917 VIA_int_flags
COMMENT_LINE $591E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $591E bonusHitCount
COMMENT $5923 negative means this enemy is an explosion - or at least not hitable
COMMENT_LINE $5925 check if enemy was in attack pattern
COMMENT_LINE $5925 if so reduce pattern
COMMENT_LINE $5927 depending on the type
COMMENT_LINE $5927 the repelling differs
FORCE_SYMBOL $5927 enemyIntroPatternBehaviour
FORCE_SYMBOL $592D attackPatternCount
FORCE_SYMBOL $5930 scoopEnemy1
FORCE_SYMBOL $5937 scoopEnemy2
FORCE_SYMBOL $593E enemyTribble
FORCE_SYMBOL $5943 player_score
FORCE_NO_SYMBOL $5947
FORCE_SYMBOL $5949 multiplyer
FORCE_SYMBOL $594F back406
FORCE_SYMBOL $5952 addScore_b
COMMENT_LINE $5955 setup animation
COMMENT $5955 angle 8 = 180 six o'clock ; angle is doubled in output!
FORCE_NO_SYMBOL $5955
COMMENT_LINE $5959 setup16 bit position
COMMENT_LINE $5962 we do random addies
COMMENT_LINE $5962 y speed is fixed +2
FORCE_NO_SYMBOL $5962
FORCE_SYMBOL $5967 random_seed
FORCE_NO_SYMBOL $596D
FORCE_SYMBOL $596F random_seed
FORCE_SYMBOL $5979 enemyRepellBehaviour
COMMENT $597C negative means this enemy is an explosion
FORCE_SYMBOL $597E OBJECT_SCALE
FORCE_SYMBOL $5980 VIA_t1_cnt_lo
FORCE_SYMBOL $5984 ANGLE8_TABLE
COMMENT $5986 just forexample load 180 degree enemy to start with
FORCE_NO_SYMBOL $5986
COMMENT_LINE $5988 END_ENEMY_DISPLAY
FORCE_SYMBOL $5988 lightningOn
FORCE_SYMBOL $598D lightningOn
COMMENT $5990 preload next user stack
FORCE_SYMBOL $5993 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $5995
FORCE_SYMBOL $5997 VIA_int_flags
COMMENT $599B Store intensity in D/A
FORCE_SYMBOL $599B VIA_port_a
COMMENT $599D mux disabled channel 2
FORCE_NO_SYMBOL $599D
FORCE_SYMBOL $59A0 VIA_port_b
COMMENT $59A2 mux enabled channel 2
FORCE_SYMBOL $59A2 VIA_port_b
COMMENT $59A4 turn off mux
FORCE_SYMBOL $59A4 VIA_port_b
COMMENT $59A9 preload next user stack
FORCE_NO_SYMBOL $59AC
FORCE_SYMBOL $59AE VIA_int_flags
COMMENT_LINE $59B5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $59B5 behaviour after a scoop repell
COMMENT $59B5 Store Y in D/A register
FORCE_SYMBOL $59B5 VIA_port_a
COMMENT $59B7 Blank low, zero high?
FORCE_NO_SYMBOL $59B7
FORCE_SYMBOL $59B9 VIA_cntl
COMMENT $59BC Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $59BC VIA_port_b
COMMENT $59BE y must be set more than xx cycles on some vectrex
COMMENT $59BF Disable mux
FORCE_SYMBOL $59BF VIA_port_b
COMMENT $59C1 Store X in D/A register
FORCE_SYMBOL $59C1 VIA_port_a
COMMENT $59C3 enable timer
FORCE_SYMBOL $59C3 VIA_t1_cnt_hi
FORCE_SYMBOL $59C5 OBJECT_SCALE
FORCE_SYMBOL $59C7 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $59D7
FORCE_NO_SYMBOL $59E1
COMMENT_LINE $59EF do animation of enemy
FORCE_SYMBOL $59EF animDelayCounter
FORCE_SYMBOL $59F9 ANGLE8_TABLE
FORCE_SYMBOL $5A04 ANGLE8_TABLE
FORCE_SYMBOL $5A08 lightningOn
FORCE_SYMBOL $5A0D lightningOn
COMMENT $5A10 preload next user stack
FORCE_SYMBOL $5A13 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $5A15
FORCE_SYMBOL $5A17 VIA_int_flags
COMMENT $5A1B Store intensity in D/A
FORCE_SYMBOL $5A1B VIA_port_a
COMMENT $5A1D mux disabled channel 2
FORCE_NO_SYMBOL $5A1D
FORCE_SYMBOL $5A20 VIA_port_b
COMMENT $5A22 mux enabled channel 2
FORCE_SYMBOL $5A22 VIA_port_b
COMMENT $5A24 turn off mux
FORCE_SYMBOL $5A24 VIA_port_b
COMMENT $5A29 preload next user stack
FORCE_NO_SYMBOL $5A2C
FORCE_SYMBOL $5A2E VIA_int_flags
FORCE_SYMBOL $5A35 enemyCount
FORCE_SYMBOL $5A38 u_offset1
COMMENT $5A3A remember scooped enemy
FORCE_SYMBOL $5A3A scoopEnemy2
FORCE_SYMBOL $5A3D positionScoop2Behaviour
COMMENT_LINE $5A44 current 8bit position in Y_POS
COMMENT $5A44 angle 8 = 180 six o'clock ; angle is doubled in output!
FORCE_NO_SYMBOL $5A44
FORCE_SYMBOL $5A48 lastDrawBeforeRepell
COMMENT_LINE $5A4B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5A4B rotate 180°
COMMENT_LINE $5A4B move to player pos X
COMMENT_LINE $5A4B stay in releative X pos
COMMENT_LINE $5A4B decrease y pos till on side of player
COMMENT_LINE $5A4B change behaviour to "playerControlledBehaviour"
COMMENT $5A4B Store Y in D/A register
FORCE_SYMBOL $5A4B VIA_port_a
COMMENT $5A4D Blank low, zero high?
FORCE_NO_SYMBOL $5A4D
FORCE_SYMBOL $5A4F VIA_cntl
COMMENT $5A52 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5A52 VIA_port_b
COMMENT $5A54 y must be set more than xx cycles on some vectrex
COMMENT $5A55 Disable mux
FORCE_SYMBOL $5A55 VIA_port_b
COMMENT $5A57 Store X in D/A register
FORCE_SYMBOL $5A57 VIA_port_a
COMMENT $5A59 enable timer
FORCE_SYMBOL $5A59 VIA_t1_cnt_hi
FORCE_SYMBOL $5A5B OBJECT_SCALE
FORCE_SYMBOL $5A5D VIA_t1_cnt_lo
FORCE_NO_SYMBOL $5A63
FORCE_SYMBOL $5A6F playerXpos
FORCE_SYMBOL $5A72 SCOOP_LEFT_PLAYER_XOFFSET
FORCE_NO_SYMBOL $5A79
FORCE_NO_SYMBOL $5A7F
FORCE_NO_SYMBOL $5A85
FORCE_NO_SYMBOL $5A8B
COMMENT_LINE $5A91 correct position to be BESIDE the player
FORCE_NO_SYMBOL $5A91
COMMENT_LINE $5A97 correct position to be BESIDE the player
COMMENT $5A97 from now on allways == XPOS player
FORCE_SYMBOL $5A97 playerXpos
FORCE_SYMBOL $5A9A SCOOP_LEFT_PLAYER_XOFFSET
FORCE_SYMBOL $5AA2 PLAYER_YPOS
COMMENT_LINE $5AA6 target reached - now switch to player controlled behaviour
FORCE_SYMBOL $5AA6 enemyPlayerControlledLeftBehaviour
COMMENT $5AA9 negative means this enemy is an explosion
FORCE_SYMBOL $5AAB SCOOP_PLAYER_YPOS
FORCE_SYMBOL $5AAD playerXpos
FORCE_SYMBOL $5AB0 SCOOP_LEFT_PLAYER_XOFFSET
FORCE_SYMBOL $5AB7 ANGLE8_TABLE
FORCE_SYMBOL $5ABB lightningOn
FORCE_SYMBOL $5AC0 lightningOn
COMMENT $5AC3 preload next user stack
FORCE_SYMBOL $5AC6 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $5AC8
FORCE_SYMBOL $5ACA VIA_int_flags
COMMENT $5ACE Store intensity in D/A
FORCE_SYMBOL $5ACE VIA_port_a
COMMENT $5AD0 mux disabled channel 2
FORCE_NO_SYMBOL $5AD0
FORCE_SYMBOL $5AD3 VIA_port_b
COMMENT $5AD5 mux enabled channel 2
FORCE_SYMBOL $5AD5 VIA_port_b
COMMENT $5AD7 turn off mux
FORCE_SYMBOL $5AD7 VIA_port_b
COMMENT $5ADC preload next user stack
FORCE_NO_SYMBOL $5ADF
FORCE_SYMBOL $5AE1 VIA_int_flags
FORCE_SYMBOL $5AE8 enemyCount
FORCE_SYMBOL $5AEB u_offset1
COMMENT $5AED remember scooped enemy
FORCE_SYMBOL $5AED scoopEnemy1
FORCE_SYMBOL $5AF0 positionScoop1Behaviour
COMMENT_LINE $5AF7 current 8bit position in Y_POS
COMMENT $5AF7 angle 8 = 180 six o'clock ; angle is doubled in output!
FORCE_NO_SYMBOL $5AF7
FORCE_SYMBOL $5AFB lastDrawBeforeRepell
COMMENT_LINE $5AFE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5AFE rotate 180°
COMMENT_LINE $5AFE move to player pos X
COMMENT_LINE $5AFE stay in releative X pos
COMMENT_LINE $5AFE decrease y pos till on side of player
COMMENT_LINE $5AFE change behaviour to "playerControlledBehaviour"
COMMENT $5AFE Store Y in D/A register
FORCE_SYMBOL $5AFE VIA_port_a
COMMENT $5B00 Blank low, zero high?
FORCE_NO_SYMBOL $5B00
FORCE_SYMBOL $5B02 VIA_cntl
COMMENT $5B05 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5B05 VIA_port_b
COMMENT $5B07 y must be set more than xx cycles on some vectrex
COMMENT $5B08 Disable mux
FORCE_SYMBOL $5B08 VIA_port_b
COMMENT $5B0A Store X in D/A register
FORCE_SYMBOL $5B0A VIA_port_a
COMMENT $5B0C enable timer
FORCE_SYMBOL $5B0C VIA_t1_cnt_hi
FORCE_SYMBOL $5B0E OBJECT_SCALE
FORCE_SYMBOL $5B10 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $5B16
FORCE_SYMBOL $5B22 playerXpos
FORCE_SYMBOL $5B25 SCOOP_RIGHT_PLAYER_XOFFSET
FORCE_NO_SYMBOL $5B2C
FORCE_NO_SYMBOL $5B32
FORCE_NO_SYMBOL $5B38
FORCE_NO_SYMBOL $5B3E
COMMENT_LINE $5B44 correct position to be BESIDE the player
FORCE_NO_SYMBOL $5B44
COMMENT_LINE $5B4A correct position to be BESIDE the player
COMMENT $5B4A from now on allways == XPOS player
FORCE_SYMBOL $5B4A playerXpos
FORCE_SYMBOL $5B4D SCOOP_RIGHT_PLAYER_XOFFSET
FORCE_SYMBOL $5B55 PLAYER_YPOS
COMMENT_LINE $5B59 target reached - now switch to player controlled behaviour
FORCE_SYMBOL $5B59 enemyPlayerControlledRightBehaviour
COMMENT $5B5C negative means this enemy is an explosion
FORCE_SYMBOL $5B5E SCOOP_PLAYER_YPOS
FORCE_SYMBOL $5B60 playerXpos
FORCE_SYMBOL $5B63 SCOOP_RIGHT_PLAYER_XOFFSET
FORCE_SYMBOL $5B6A ANGLE8_TABLE
FORCE_SYMBOL $5B6E lightningOn
FORCE_SYMBOL $5B73 lightningOn
COMMENT $5B76 preload next user stack
FORCE_SYMBOL $5B79 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $5B7B
FORCE_SYMBOL $5B7D VIA_int_flags
COMMENT $5B81 Store intensity in D/A
FORCE_SYMBOL $5B81 VIA_port_a
COMMENT $5B83 mux disabled channel 2
FORCE_NO_SYMBOL $5B83
FORCE_SYMBOL $5B86 VIA_port_b
COMMENT $5B88 mux enabled channel 2
FORCE_SYMBOL $5B88 VIA_port_b
COMMENT $5B8A turn off mux
FORCE_SYMBOL $5B8A VIA_port_b
COMMENT $5B8F preload next user stack
FORCE_NO_SYMBOL $5B92
FORCE_SYMBOL $5B94 VIA_int_flags
COMMENT_LINE $5B9B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5B9B behaviour after a scoop
COMMENT $5B9B Store Y in D/A register
FORCE_SYMBOL $5B9B VIA_port_a
COMMENT $5B9D Blank low, zero high?
FORCE_NO_SYMBOL $5B9D
FORCE_SYMBOL $5B9F VIA_cntl
COMMENT $5BA2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5BA2 VIA_port_b
COMMENT $5BA4 y must be set more than xx cycles on some vectrex
COMMENT $5BA5 Disable mux
FORCE_SYMBOL $5BA5 VIA_port_b
COMMENT $5BA7 Store X in D/A register
FORCE_SYMBOL $5BA7 VIA_port_a
COMMENT $5BA9 enable timer
FORCE_SYMBOL $5BA9 VIA_t1_cnt_hi
FORCE_SYMBOL $5BAB OBJECT_SCALE
FORCE_SYMBOL $5BAD VIA_t1_cnt_lo
FORCE_SYMBOL $5BAF SCOOP_PLAYER_YPOS
FORCE_SYMBOL $5BB1 playerXpos
FORCE_SYMBOL $5BB4 SCOOP_RIGHT_PLAYER_XOFFSET
FORCE_SYMBOL $5BBA WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $5BBC
COMMENT $5BBE preload next user stack
FORCE_SYMBOL $5BC1 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $5BC3 lockPurchased
FORCE_NO_SYMBOL $5BC6
FORCE_NO_SYMBOL $5BCD
FORCE_SYMBOL $5BCF brightnessTable1
FORCE_SYMBOL $5BD4 lightningOn
FORCE_SYMBOL $5BD9 lightningOn
FORCE_SYMBOL $5BDE lightningOn
FORCE_NO_SYMBOL $5BE1
FORCE_SYMBOL $5BE3 VIA_int_flags
COMMENT $5BE7 Store intensity in D/A
FORCE_SYMBOL $5BE7 VIA_port_a
COMMENT $5BE9 mux disabled channel 2
FORCE_NO_SYMBOL $5BE9
FORCE_SYMBOL $5BEC VIA_port_b
COMMENT $5BEE mux enabled channel 2
FORCE_SYMBOL $5BEE VIA_port_b
COMMENT $5BF0 turn off mux
FORCE_SYMBOL $5BF0 VIA_port_b
FORCE_NO_SYMBOL $5BF2
FORCE_SYMBOL $5BF5 VIA_port_b
FORCE_NO_SYMBOL $5BFB
FORCE_SYMBOL $5BFD VIA_int_flags
COMMENT_LINE $5C03 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5C23 behaviour after a scoop
COMMENT_LINE $5C23 nop 20
COMMENT $5C23 Store Y in D/A register
FORCE_SYMBOL $5C23 VIA_port_a
COMMENT $5C25 Blank low, zero high?
FORCE_NO_SYMBOL $5C25
FORCE_SYMBOL $5C27 VIA_cntl
COMMENT $5C2A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5C2A VIA_port_b
COMMENT $5C2C y must be set more than xx cycles on some vectrex
COMMENT $5C2D Disable mux
FORCE_SYMBOL $5C2D VIA_port_b
COMMENT $5C2F Store X in D/A register
FORCE_SYMBOL $5C2F VIA_port_a
COMMENT $5C31 enable timer
FORCE_SYMBOL $5C31 VIA_t1_cnt_hi
FORCE_SYMBOL $5C33 OBJECT_SCALE
FORCE_SYMBOL $5C35 VIA_t1_cnt_lo
FORCE_SYMBOL $5C37 SCOOP_PLAYER_YPOS
FORCE_SYMBOL $5C39 playerXpos
FORCE_SYMBOL $5C3C SCOOP_LEFT_PLAYER_XOFFSET
COMMENT_LINE $5C42 do animation of enemy
FORCE_SYMBOL $5C42 WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $5C44
COMMENT $5C46 preload next user stack
FORCE_SYMBOL $5C49 DEFAULT_ENEMY_INTENSITY
FORCE_SYMBOL $5C4B lockPurchased
FORCE_NO_SYMBOL $5C4E
FORCE_NO_SYMBOL $5C55
FORCE_SYMBOL $5C57 brightnessTable1
FORCE_SYMBOL $5C5C lightningOn
FORCE_SYMBOL $5C61 lightningOn
FORCE_SYMBOL $5C66 lightningOn
FORCE_NO_SYMBOL $5C69
FORCE_SYMBOL $5C6B VIA_int_flags
COMMENT $5C6F Store intensity in D/A
FORCE_SYMBOL $5C6F VIA_port_a
COMMENT $5C71 mux disabled channel 2
FORCE_NO_SYMBOL $5C71
FORCE_SYMBOL $5C74 VIA_port_b
COMMENT $5C76 mux enabled channel 2
FORCE_SYMBOL $5C76 VIA_port_b
COMMENT $5C78 turn off mux
FORCE_SYMBOL $5C78 VIA_port_b
FORCE_NO_SYMBOL $5C7A
FORCE_SYMBOL $5C7D VIA_port_b
FORCE_NO_SYMBOL $5C83
FORCE_SYMBOL $5C85 VIA_int_flags
FORCE_SYMBOL $5C8B boss3MovementPointer
COMMENT $5C8E speed
FORCE_NO_SYMBOL $5C8E
COMMENT $5C90 speed
FORCE_SYMBOL $5C90 tmp1
COMMENT_LINE $5C93 ldd bossPosY; current pos
COMMENT_LINE $5C93 ;;;; Y
FORCE_SYMBOL $5C93 bossPosY
FORCE_SYMBOL $5C97 boss3YposNow16
COMMENT $5C9A ypos of destination
FORCE_NO_SYMBOL $5C9A
FORCE_SYMBOL $5C9D boss3YposNow16
COMMENT $5CA0 delta
FORCE_SYMBOL $5CA0 boss3Ypos16
COMMENT $5CA3 delta
FORCE_SYMBOL $5CA6 boss3Ypos16
COMMENT $5CAB bullet speed
FORCE_SYMBOL $5CAB tmp1
COMMENT $5CB0 delta
FORCE_SYMBOL $5CB0 boss3Ypos16
COMMENT $5CB3 speed
FORCE_NO_SYMBOL $5CB3
COMMENT $5CB5 speed
FORCE_SYMBOL $5CB5 tmp1
COMMENT_LINE $5CB8 ;;;; X
COMMENT $5CB8 x pos of boss
FORCE_SYMBOL $5CBC boss3XposNow16
COMMENT $5CBF xpos of destination
FORCE_NO_SYMBOL $5CBF
FORCE_SYMBOL $5CC2 boss3XposNow16
COMMENT $5CC5 delta
FORCE_SYMBOL $5CC5 boss3Xpos16
COMMENT $5CC8 delta
FORCE_SYMBOL $5CCB boss3Xpos16
COMMENT $5CD0 bullet speed
FORCE_SYMBOL $5CD0 tmp1
COMMENT $5CD5 delta
FORCE_SYMBOL $5CD5 boss3Xpos16
FORCE_SYMBOL $5CD8 bossPosY
FORCE_SYMBOL $5CDB boss3YposNow16
FORCE_SYMBOL $5CDE boss3XposNow16
COMMENT_LINE $5CE8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $5CE8 Store Y in D/A register
FORCE_SYMBOL $5CE8 VIA_port_a
COMMENT $5CEA Blank low, zero high?
FORCE_NO_SYMBOL $5CEA
FORCE_SYMBOL $5CEC VIA_cntl
COMMENT $5CEF Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5CEF VIA_port_b
COMMENT $5CF1 y must be set more than xx cycles on some vectrex
COMMENT $5CF2 Disable mux
FORCE_SYMBOL $5CF2 VIA_port_b
COMMENT $5CF4 Store X in D/A register
FORCE_SYMBOL $5CF4 VIA_port_a
COMMENT $5CF6 enable timer
FORCE_SYMBOL $5CF6 VIA_t1_cnt_hi
FORCE_SYMBOL $5CFA globalPatternWobble
FORCE_SYMBOL $5D01 animDelayCounter
FORCE_SYMBOL $5D0B WAIT_ANIM_TABLE
FORCE_SYMBOL $5D16 WAIT_ANIM_TABLE
COMMENT_LINE $5D1A lda      game_phase ; testing if all enemies are dead -> level done
COMMENT_LINE $5D1A cmpa     #GAMEPHASE_INGAME ; only testing, when in game, otherwise the start of a level would be the end (no enemies)
COMMENT_LINE $5D1A bne      stayHereDA
FORCE_SYMBOL $5D1A lockPurchased
FORCE_SYMBOL $5D1D GAMEPHASE_INTRO
FORCE_SYMBOL $5D21 enemyWaitingBehaviour
COMMENT $5D26 preload next user stack
FORCE_SYMBOL $5D29 patternDelayCounter
FORCE_SYMBOL $5D2F VIA_t1_cnt_lo
FORCE_NO_SYMBOL $5D31
FORCE_NO_SYMBOL $5D33
FORCE_SYMBOL $5D35 VIA_int_flags
COMMENT $5D39 Store intensity in D/A
FORCE_SYMBOL $5D39 VIA_port_a
COMMENT $5D3B mux disabled channel 2
FORCE_NO_SYMBOL $5D3B
FORCE_SYMBOL $5D3E VIA_port_b
COMMENT $5D40 mux enabled channel 2
FORCE_SYMBOL $5D40 VIA_port_b
COMMENT $5D42 turn off mux
FORCE_SYMBOL $5D42 VIA_port_b
COMMENT_LINE $5D47 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $5D47 Store Y in D/A register
FORCE_SYMBOL $5D47 VIA_port_a
COMMENT $5D49 Blank low, zero high?
FORCE_NO_SYMBOL $5D49
FORCE_SYMBOL $5D4B VIA_cntl
COMMENT $5D4E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5D4E VIA_port_b
COMMENT $5D50 y must be set more than xx cycles on some vectrex
COMMENT $5D51 Disable mux
FORCE_SYMBOL $5D51 VIA_port_b
COMMENT $5D53 Store X in D/A register
FORCE_SYMBOL $5D53 VIA_port_a
COMMENT $5D55 enable timer
FORCE_SYMBOL $5D55 VIA_t1_cnt_hi
FORCE_SYMBOL $5D59 playerBonusActive
FORCE_SYMBOL $5D5C BITFIELD_SCOOP
FORCE_SYMBOL $5D6A playerXpos
FORCE_SYMBOL $5D70 PLAYER_RADIUS_X
FORCE_SYMBOL $5D74 playerBonusActive
COMMENT $5D77 shield saved player (from all shots)
FORCE_SYMBOL $5D77 BITFIELD_SHIELD
FORCE_SYMBOL $5D7B BITFIELD_ARMOR
COMMENT $5D7D armor saved player for one shot
FORCE_SYMBOL $5D83 playerBonusActive
FORCE_SYMBOL $5D86 playerBonusActive
FORCE_SYMBOL $5D8B BITFIELD_SHIELD
FORCE_SYMBOL $5D8D playerBonusActive
COMMENT $5D90 1 secpnd
FORCE_NO_SYMBOL $5D90
FORCE_SYMBOL $5D95 playerBonusCounter
FORCE_NO_SYMBOL $5D9A
FORCE_SYMBOL $5D9C explosionSound
COMMENT_LINE $5D9F = HP = 0
COMMENT_LINE $5D9F if enemy collides with player -> it is dead!
COMMENT_LINE $5D9F or explode directly :-)
COMMENT $5D9F shotHandleDoneRemoved
FORCE_SYMBOL $5D9F yesExplodeEnemy
FORCE_SYMBOL $5DA2 lockPurchased
FORCE_NO_SYMBOL $5DA5
COMMENT_LINE $5DA9 check scoop collision
FORCE_SYMBOL $5DA9 difficulty
FORCE_NO_SYMBOL $5DAC
COMMENT $5DAE easy difficulty -> scoops are not hit by enemies/debris
COMMENT_LINE $5DB0 in b "radius" from player center (ABS)
FORCE_SYMBOL $5DB0 SCOOP_RADIUS_X
COMMENT_LINE $5DB4 possible scoop hit, check if scoop exists
COMMENT_LINE $5DB4 check for left or right
FORCE_SYMBOL $5DB6 playerXpos
COMMENT $5DB9 added to ensure leftmost debris does not collide with right most scoopies
FORCE_SYMBOL $5DBD scoopEnemy2
COMMENT $5DC0 there is no scoopy!
COMMENT_LINE $5DC2 left scoopy hit -> explode !
FORCE_NO_SYMBOL $5DC2
FORCE_SYMBOL $5DC5 scoopEnemy2
FORCE_NO_SYMBOL $5DC8
FORCE_SYMBOL $5DCA explosionSound
COMMENT $5DCD because after explosion, the remove enemy - does again a "dec enemy count" this would screw the counting
FORCE_SYMBOL $5DCD enemyCount
COMMENT_LINE $5DD0 since scoopies were removed before!
COMMENT $5DD2 negative means this enemy is an explosion
FORCE_SYMBOL $5DD2 ALL_PURPOSE
FORCE_SYMBOL $5DD5 enemyExplosionBehaviour
COMMENT $5DD8 negative means this enemy is an explosion
FORCE_SYMBOL $5DD8 BEHAVIOUR
FORCE_SYMBOL $5DDA ANIM_POSITION
FORCE_SYMBOL $5DDC ENEMY_STRUCT
FORCE_SYMBOL $5DE0 WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $5DE3
FORCE_SYMBOL $5DE6 SMARTLIST_ORG
COMMENT $5DE9 scale
FORCE_NO_SYMBOL $5DE9
FORCE_SYMBOL $5DEC EXPLOSION_SCALE
COMMENT_LINE $5DEF lda #$7f ; intensity
FORCE_SYMBOL $5DEF EXPLOSION_INTENSITY
FORCE_SYMBOL $5DF4 scoopEnemy1
COMMENT $5DF7 there is no scoopy!
COMMENT_LINE $5DF9 right scoopy hit -> explode !
FORCE_NO_SYMBOL $5DF9
FORCE_SYMBOL $5DFC scoopEnemy1
FORCE_SYMBOL $5E07 playerXpos
FORCE_SYMBOL $5E0D SCOOP_RADIUS_X
FORCE_SYMBOL $5E13 ANGLE8_TABLE
COMMENT_LINE $5E19 or scoop it
FORCE_SYMBOL $5E19 repellEnemy
COMMENT $5E1C TODO strength of enemy bullet
FORCE_NO_SYMBOL $5E1C
FORCE_SYMBOL $5E1E playerWasHitFor
COMMENT_LINE $5E2B todo move down and vanish
FORCE_SYMBOL $5E2B OBJECT_SCALE
FORCE_SYMBOL $5E2D VIA_t1_cnt_lo
FORCE_SYMBOL $5E2F animDelayCounter
FORCE_SYMBOL $5E39 DebrisBombList
FORCE_SYMBOL $5E45 DebrisBombList
FORCE_SYMBOL $5E4A lightningOn
FORCE_SYMBOL $5E4F lightningOn
COMMENT $5E52 preload next user stack
FORCE_SYMBOL $5E55 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $5E57
FORCE_SYMBOL $5E59 VIA_int_flags
COMMENT $5E5D Store intensity in D/A
FORCE_SYMBOL $5E5D VIA_port_a
COMMENT $5E5F mux disabled channel 2
FORCE_NO_SYMBOL $5E5F
FORCE_SYMBOL $5E62 VIA_port_b
COMMENT $5E64 mux enabled channel 2
FORCE_SYMBOL $5E64 VIA_port_b
COMMENT $5E66 turn off mux
FORCE_SYMBOL $5E66 VIA_port_b
COMMENT $5E6B preload next user stack
FORCE_NO_SYMBOL $5E6E
FORCE_SYMBOL $5E70 VIA_int_flags
COMMENT_LINE $5E77 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $5E77 Store Y in D/A register
FORCE_SYMBOL $5E77 VIA_port_a
COMMENT $5E79 Blank low, zero high?
FORCE_NO_SYMBOL $5E79
FORCE_SYMBOL $5E7B VIA_cntl
COMMENT $5E7E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5E7E VIA_port_b
COMMENT $5E80 y must be set more than xx cycles on some vectrex
COMMENT $5E81 Disable mux
FORCE_SYMBOL $5E81 VIA_port_b
COMMENT $5E83 Store X in D/A register
FORCE_SYMBOL $5E83 VIA_port_a
COMMENT $5E85 enable timer
FORCE_SYMBOL $5E85 VIA_t1_cnt_hi
FORCE_SYMBOL $5E87 OBJECT_SCALE
FORCE_SYMBOL $5E89 VIA_t1_cnt_lo
COMMENT_LINE $5E93 tribleDieNaturalDeath
FORCE_SYMBOL $5E95 back4Shot_tribble
FORCE_SYMBOL $5E98 shotBehaviourStandardStart
COMMENT $5E9D get only the counter part
FORCE_NO_SYMBOL $5E9D
COMMENT_LINE $5EA1 now adjust current pos according to movement info in our swarm data
COMMENT_LINE $5EA5 vvhh xfff
COMMENT_LINE $5EA5 vertical
COMMENT_LINE $5EA5 v0 0 = no vertical movement
COMMENT_LINE $5EA5 11 = up
COMMENT_LINE $5EA5 01 = down
COMMENT_LINE $5EA5 00 = not used
FORCE_NO_SYMBOL $5EA5
FORCE_NO_SYMBOL $5EA9
COMMENT_LINE $5EB3 horizontal
COMMENT_LINE $5EB3 h0 0 = no horzontal movement
COMMENT_LINE $5EB3 11 = left
COMMENT_LINE $5EB3 01 = right
COMMENT_LINE $5EB3 00 = not used
FORCE_NO_SYMBOL $5EB3
COMMENT $5EB5 horizontalChangeDoneSwarm
FORCE_NO_SYMBOL $5EB7
COMMENT $5EBD horizontalChangeDoneSwarm
COMMENT $5EC5 counter till next movement change to 15
FORCE_NO_SYMBOL $5EC5
COMMENT $5ECB reset all movement parts in ALL_PURPOSE
FORCE_NO_SYMBOL $5ECB
FORCE_SYMBOL $5ECF TRIBBLE_MAX_Y
COMMENT $5ED3 force down
FORCE_NO_SYMBOL $5ED3
FORCE_SYMBOL $5ED7 TRIBBLE_MIN_Y
COMMENT $5EDB force up
FORCE_NO_SYMBOL $5EDB
COMMENT_LINE $5EDF vertical
COMMENT_LINE $5EDF v0h0 xfff
FORCE_SYMBOL $5EDF random_seed
FORCE_NO_SYMBOL $5EE5
FORCE_SYMBOL $5EE7 random_seed
FORCE_NO_SYMBOL $5EEC
FORCE_SYMBOL $5EEE random_seed
FORCE_NO_SYMBOL $5EF4
FORCE_SYMBOL $5EF6 random_seed
FORCE_NO_SYMBOL $5EFB
COMMENT_LINE $5EFD verticalIsDown
FORCE_SYMBOL $5EFF TRIBBLE_MAX_X
COMMENT $5F03 force right
FORCE_NO_SYMBOL $5F03
FORCE_SYMBOL $5F07 TRIBBLE_MIN_X
COMMENT $5F0B force left
FORCE_NO_SYMBOL $5F0B
COMMENT_LINE $5F0F horizontal
COMMENT_LINE $5F0F v0h0 xfff
FORCE_SYMBOL $5F0F random_seed
FORCE_NO_SYMBOL $5F15
FORCE_SYMBOL $5F17 random_seed
FORCE_NO_SYMBOL $5F1C
FORCE_SYMBOL $5F1E random_seed
FORCE_NO_SYMBOL $5F24
FORCE_SYMBOL $5F26 random_seed
FORCE_NO_SYMBOL $5F2B
COMMENT_LINE $5F2F for anim go to swam anim directly there is no enemy struct
FORCE_SYMBOL $5F2F enemyTribbleAngle8Table
COMMENT_LINE $5F32 do animation of enemy
FORCE_SYMBOL $5F32 animDelayCounter
FORCE_SYMBOL $5F45 enemyTribbleAngle8Table
COMMENT $5F4C check if we should "blink" (hit and not destroyed -> we blink)
FORCE_NO_SYMBOL $5F4C
FORCE_SYMBOL $5F50 HIT_FLASH_LENGTH
FORCE_SYMBOL $5F54 lightningOn
FORCE_NO_SYMBOL $5F59
FORCE_SYMBOL $5F5D lightningOn
FORCE_SYMBOL $5F62 lightningOn
COMMENT_LINE $5F65 lds      NEXT_ENEMY_OBJECT+u_offset1,s ; preload next user stack
FORCE_SYMBOL $5F65 DEFAULT_ENEMY_INTENSITY
COMMENT $5F67 preload next user stack
FORCE_NO_SYMBOL $5F6A
FORCE_SYMBOL $5F6C VIA_int_flags
COMMENT $5F70 Store intensity in D/A
FORCE_SYMBOL $5F70 VIA_port_a
COMMENT $5F72 mux disabled channel 2
FORCE_NO_SYMBOL $5F72
FORCE_SYMBOL $5F75 VIA_port_b
COMMENT $5F77 mux enabled channel 2
FORCE_SYMBOL $5F77 VIA_port_b
COMMENT $5F79 turn off mux
FORCE_SYMBOL $5F79 VIA_port_b
COMMENT $5F7D preload next user stack
FORCE_NO_SYMBOL $5F80
FORCE_SYMBOL $5F82 VIA_int_flags
COMMENT_LINE $5F89 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $5F89 Store Y in D/A register
FORCE_SYMBOL $5F89 VIA_port_a
COMMENT $5F8B Blank low, zero high?
FORCE_NO_SYMBOL $5F8B
FORCE_SYMBOL $5F8D VIA_cntl
COMMENT $5F90 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5F90 VIA_port_b
COMMENT $5F92 y must be set more than xx cycles on some vectrex
COMMENT $5F93 Disable mux
FORCE_SYMBOL $5F93 VIA_port_b
COMMENT $5F95 Store X in D/A register
FORCE_SYMBOL $5F95 VIA_port_a
COMMENT $5F97 enable timer
FORCE_SYMBOL $5F97 VIA_t1_cnt_hi
COMMENT_LINE $5F99 col detect with player
FORCE_SYMBOL $5FA1 playerXpos
FORCE_SYMBOL $5FA7 PLAYER_RADIUS_X
FORCE_SYMBOL $5FAB diamondCount
FORCE_SYMBOL $5FAE playSoundFlags
FORCE_NO_SYMBOL $5FB1
COMMENT $5FB5 collectDiamondData
FORCE_NO_SYMBOL $5FB5
FORCE_SYMBOL $5FB8 sfx_pointer_1
FORCE_SYMBOL $5FBB player_score
FORCE_NO_SYMBOL $5FBF
FORCE_SYMBOL $5FC1 multiplyer
FORCE_SYMBOL $5FC7 back453
FORCE_SYMBOL $5FCA addScore_d
FORCE_SYMBOL $5FCD playerCashW
FORCE_NO_SYMBOL $5FD0
FORCE_SYMBOL $5FD3 playerCashW
FORCE_SYMBOL $5FD6 playerCashW
FORCE_SYMBOL $5FD9 playerCashW
FORCE_SYMBOL $5FDE diverseFlags
FORCE_SYMBOL $5FE1 BIT_FLAG_CASH_ROLLOVER
FORCE_SYMBOL $5FE3 diverseFlags
FORCE_SYMBOL $5FE6 playerCashW
FORCE_SYMBOL $5FE9 destroyEnemyObject
COMMENT_LINE $5FEC = HP = 0
COMMENT_LINE $5FEC no shots can effect diamonds
COMMENT $5FEE falling speed
FORCE_NO_SYMBOL $5FEE
FORCE_SYMBOL $5FF6 OBJECT_SCALE
FORCE_SYMBOL $5FF8 VIA_t1_cnt_lo
FORCE_SYMBOL $5FFA FallingDiamnond
FORCE_SYMBOL $5FFD lightningOn
FORCE_SYMBOL $6002 lightningOn
COMMENT $6005 preload next user stack
FORCE_SYMBOL $6008 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $600A
FORCE_SYMBOL $600C VIA_int_flags
COMMENT $6010 Store intensity in D/A
FORCE_SYMBOL $6010 VIA_port_a
COMMENT $6012 mux disabled channel 2
FORCE_NO_SYMBOL $6012
FORCE_SYMBOL $6015 VIA_port_b
COMMENT $6017 mux enabled channel 2
FORCE_SYMBOL $6017 VIA_port_b
COMMENT $6019 turn off mux
FORCE_SYMBOL $6019 VIA_port_b
COMMENT $601E preload next user stack
FORCE_NO_SYMBOL $6021
FORCE_SYMBOL $6023 VIA_int_flags
COMMENT_LINE $602A ***************************************************************************
COMMENT_LINE $602A this is actually a JSR RTS
COMMENT_LINE $602A without using stack
COMMENT_LINE $602A PC-return address is kept in U
COMMENT_LINE $602A TEST_TO_SHOOT
COMMENT_LINE $602C collision detection player shot -> enemy
COMMENT_LINE $602C only two shots are tested per game round
COMMENT_LINE $602C two shots
COMMENT_LINE $602C main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $602C in b is still the xcoordinate of the current enemy that is tested for this shot
COMMENT_LINE $602C is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $602C all behaviours with negative all purpose do not call col detect
COMMENT_LINE $602C ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $602C load address of current shot structure to be tested
FORCE_SYMBOL $602C testShot
FORCE_SYMBOL $6033 playerNumberOfBulletsPerShot
COMMENT $6036 laser
FORCE_NO_SYMBOL $6036
COMMENT $603E MIN check is only done with the first to be tested shot
FORCE_NO_SYMBOL $603E
FORCE_SYMBOL $6040 enemyMINY
FORCE_SYMBOL $6045 enemyMINY
FORCE_NO_SYMBOL $6048
COMMENT_LINE $604A "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $604A we do not need to test the shot itself for validity!
COMMENT_LINE $604A yTest
COMMENT $6055 higher y tollerance
FORCE_NO_SYMBOL $6055
FORCE_SYMBOL $6057 shotYRadius
COMMENT_LINE $605E ;;;; y done
COMMENT_LINE $605E xTest
COMMENT $605E x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $605E
COMMENT_LINE $6060 test center
COMMENT_LINE $6060 if large object, check if middle shot is zero and than test the correct scoopy instead
FORCE_SYMBOL $6060 SHOT_RADIUS
COMMENT_LINE $6062 REMOVED since SHOT_RADIUS0 == 0!!!
COMMENT_LINE $6062 cmpa #SHOT_RADIUS0
FORCE_SYMBOL $6064 X_POS
FORCE_NO_SYMBOL $6066
FORCE_SYMBOL $6068 tmp1_tmp
FORCE_SYMBOL $606B tmp1_tmp
COMMENT $606E enemy is on left side of shot
COMMENT $6072 enemy is on right side of shot
FORCE_NO_SYMBOL $6076
COMMENT $607B enemy is on left side of shot
COMMENT_LINE $607F in b 0 based enemy pos
FORCE_NO_SYMBOL $607F
COMMENT $6084 enemy is on right side of shot
COMMENT_LINE $6088 ..........
COMMENT_LINE $6088 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $6088 a zero shot cannot hit! (WAS TST)
FORCE_SYMBOL $6088 SHOT_RADIUS
FORCE_SYMBOL $608E notHit459
FORCE_SYMBOL $6091 backJump
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
FORCE_SYMBOL $6094 BEHAVIOUR
FORCE_NO_SYMBOL $6096
COMMENT_LINE $609C center shot is zero - check if a scoopy might hit!
FORCE_SYMBOL $609C tmp1
FORCE_SYMBOL $60A6 tmp1
COMMENT $60B0 notHitShotIsZero
FORCE_SYMBOL $60B0 notHit459
FORCE_SYMBOL $60B3 tmp_isSupershot
COMMENT $60B6 (was tst)
FORCE_SYMBOL $60B6 explosionSound
COMMENT $60BB next game round, play an explosion
FORCE_SYMBOL $60BB explosionSound
COMMENT_LINE $60BE laser
FORCE_SYMBOL $60BE SHOT_RADIUS
FORCE_SYMBOL $60C0 SHOT_RADIUS6
FORCE_SYMBOL $60C4 laserTmp2
FORCE_SYMBOL $60C7 laserTmp2
FORCE_SYMBOL $60CA isLazerShot
COMMENT_LINE $60CD should I do a "shield" check here, as in object.asm?
COMMENT_LINE $60CD probably yes... but most of the time
COMMENT_LINE $60CD this works out well...
COMMENT_LINE $60CD AND, shrinked shots can sometimes "weazle" through shield enemies
COMMENT_LINE $60CD which I find cool :-)
FORCE_SYMBOL $60CD SHOT_RADIUS5
COMMENT_LINE $0000 ldb      SHOT_RADIUS, x
FORCE_SYMBOL $60D4 SHOT_RADIUS4
FORCE_SYMBOL $60D8 SHOT_RADIUS3
FORCE_SYMBOL $60DC SHOT_RADIUS2
FORCE_SYMBOL $60E0 isNo5Shot
COMMENT_LINE $60E3 five shot is also a "1" time shot
COMMENT $60E3 positive is supershot
FORCE_SYMBOL $60E3 tmp_isSupershot
COMMENT $60E6 tst
FORCE_SYMBOL $60E6 SCOOP_SHOTS
FORCE_NO_SYMBOL $60EC
FORCE_SYMBOL $60F0 bulletDamage
FORCE_NO_SYMBOL $60F9
FORCE_SYMBOL $60FD bulletDamage
FORCE_SYMBOL $6106 SCOOP_SHOTS
FORCE_SYMBOL $6108 shotHasNoScoopies
FORCE_SYMBOL $610B SHOT_RADIUS0
FORCE_SYMBOL $610D SHOT_RADIUS
FORCE_SYMBOL $610F shotHandleDone_noBoss
COMMENT_LINE $6112 ---
COMMENT_LINE $6112 remove 3 points of damage
COMMENT $6112 should be bulletDamage * 2
FORCE_SYMBOL $6112 bulletDamage
COMMENT $6116 3 times damage
FORCE_SYMBOL $6116 bulletDamage
COMMENT_LINE $611C remove fullscoopy damage
COMMENT_LINE $611C and remove scoopy shot
COMMENT $611C tst
FORCE_SYMBOL $611C SCOOP_SHOTS
COMMENT_LINE $611E for easyness I assume always a FULL-1 scoopy shot
FORCE_NO_SYMBOL $611E
COMMENT $6122 3 times damage
COMMENT_LINE $6124 for easyness I assume always a FULL-1 scoopy shot
FORCE_NO_SYMBOL $6124
COMMENT $6128 3 times damage
FORCE_SYMBOL $612A SCOOP_SHOTS
COMMENT $612F remove shot, do one damage!
FORCE_SYMBOL $612F isNo5Shot
COMMENT_LINE $6132 remove 2 points of damage
COMMENT $6132 2 times
FORCE_SYMBOL $6132 bulletDamage
COMMENT_LINE $6138 remove 1 points of damage
COMMENT $6138 1 times
FORCE_SYMBOL $6138 bulletDamage
COMMENT $613D ---------------------------------------------------------------------
FORCE_SYMBOL $613D isNo5Shot
COMMENT $6140 laser = main
FORCE_SYMBOL $6140 laserTmp2
COMMENT $6145 y pos
FORCE_SYMBOL $6145 laserTmp
FORCE_SYMBOL $6148 xCheckOnly459
FORCE_NO_SYMBOL $614B
COMMENT $614D laser = right scoop
FORCE_SYMBOL $614D laserTmp2
COMMENT $6152 assume 10 lower
FORCE_NO_SYMBOL $6152
FORCE_NO_SYMBOL $6156
FORCE_SYMBOL $6158 laserTmp
COMMENT_LINE $615D ..........
COMMENT_LINE $615D ..........
COMMENT_LINE $615D check if there are scoopies
COMMENT $615D two nibbles
FORCE_SYMBOL $615D SCOOP_SHOTS
FORCE_NO_SYMBOL $615F
COMMENT $6161 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $6165 side shots are lower - test that here...
FORCE_SYMBOL $6165 playerNumberOfBulletsPerShot
COMMENT $6168 laser
FORCE_NO_SYMBOL $6168
COMMENT $616E assume 10 lower
FORCE_NO_SYMBOL $616E
COMMENT_LINE $6177 in b x pos of enemy - 0 based!
COMMENT_LINE $6177 test left
COMMENT $617A enemy is on left side of left shot
COMMENT_LINE $617E left HIT!
COMMENT_LINE $617E i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $617E notHit459
FORCE_SYMBOL $6181 backJump
FORCE_SYMBOL $6184 playerNumberOfBulletsPerShot
COMMENT $6187 laser
FORCE_NO_SYMBOL $6187
COMMENT $6189 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $618D :::::::::::::::::::::::::
COMMENT_LINE $618D remove shot when shield
FORCE_SYMBOL $6190 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $6192 TYPE_SHIELD
COMMENT $6194 remove
FORCE_SYMBOL $6196 SCOOP_SHOTS
FORCE_NO_SYMBOL $6198
FORCE_SYMBOL $619A SCOOP_SHOTS
COMMENT_LINE $61A2 remove shot when shield
COMMENT_LINE $61A2 :::::::::::::::::::::::::
COMMENT_LINE $61A2 left scoopy has hit
FORCE_SYMBOL $61A2 SCOOP_SHOTS
FORCE_NO_SYMBOL $61A4
FORCE_NO_SYMBOL $61A8
FORCE_SYMBOL $61AA SCOOP_SHOTS
COMMENT_LINE $61B0 test for radius of shot
FORCE_SYMBOL $61B0 SHOT_RADIUS
COMMENT $61B2 jump out to remove this shot entirely
COMMENT $61B6 go to enemy "hit" handling
FORCE_SYMBOL $61B6 shotHandleDone_noBoss
COMMENT_LINE $61B9 left scoopy with more than one bullet
COMMENT_LINE $61B9 in a number of bullets in scoopy -2
FORCE_NO_SYMBOL $61BC
COMMENT $61BE should be bulletDamage
FORCE_SYMBOL $61BE bulletDamage
FORCE_NO_SYMBOL $61C4
FORCE_NO_SYMBOL $61CF
FORCE_NO_SYMBOL $61D3
COMMENT $61D5 should be bulletDamage
FORCE_SYMBOL $61D5 bulletDamage
FORCE_NO_SYMBOL $61DB
FORCE_NO_SYMBOL $61E6
FORCE_NO_SYMBOL $61EA
COMMENT $61EC should be bulletDamage
FORCE_SYMBOL $61EC bulletDamage
FORCE_NO_SYMBOL $61F2
FORCE_NO_SYMBOL $61FF
COMMENT $6201 laser = left scoop
FORCE_SYMBOL $6201 laserTmp2
COMMENT $6206 assume 10 lower
FORCE_NO_SYMBOL $6206
FORCE_NO_SYMBOL $620A
FORCE_SYMBOL $620C laserTmp
COMMENT_LINE $6211 ..........
COMMENT_LINE $6211 check if there are scoopies
COMMENT $6211 two nibbles
FORCE_SYMBOL $6211 SCOOP_SHOTS
FORCE_NO_SYMBOL $6213
COMMENT $6215 we no there is no left hit possible, because we came from center!
COMMENT_LINE $6219 side shots are lower - test that here...
FORCE_SYMBOL $6219 playerNumberOfBulletsPerShot
COMMENT $621C laser
FORCE_NO_SYMBOL $621C
COMMENT $6222 assume 10 lower
FORCE_NO_SYMBOL $6222
COMMENT_LINE $622B in b x pos of enemy - 0 based!
COMMENT_LINE $622B test right
COMMENT $622E enemy is on right side of right shot
COMMENT_LINE $6232 right HIT!
COMMENT_LINE $6232 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $6232 notHit459
FORCE_SYMBOL $6235 backJump
FORCE_SYMBOL $6238 playerNumberOfBulletsPerShot
COMMENT $623B laser
FORCE_NO_SYMBOL $623B
COMMENT $623D shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $6241 :::::::::::::::::::::::::
COMMENT_LINE $6241 remove shot when shield
FORCE_SYMBOL $6244 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $6246 TYPE_SHIELD
COMMENT $6248 remove
FORCE_SYMBOL $624A SCOOP_SHOTS
FORCE_NO_SYMBOL $624C
FORCE_SYMBOL $624E SCOOP_SHOTS
COMMENT_LINE $6256 remove shot when shield
COMMENT_LINE $6256 :::::::::::::::::::::::::
FORCE_SYMBOL $6256 SCOOP_SHOTS
COMMENT_LINE $625A right scoopy has hit
FORCE_SYMBOL $625A SCOOP_SHOTS
FORCE_SYMBOL $6260 SCOOP_SHOTS
COMMENT_LINE $6266 test for radius of shot
FORCE_SYMBOL $6266 SHOT_RADIUS
COMMENT $6268 jump out to remove this shot entirely
COMMENT $626C go to enemy "hit" handling
FORCE_SYMBOL $626C shotHandleDone_noBoss
COMMENT_LINE $626F right scoopy with more than one bullet
COMMENT_LINE $626F in a number of bullets in scoopy -2
COMMENT $6273 should be bulletDamage
FORCE_SYMBOL $6273 bulletDamage
FORCE_NO_SYMBOL $6279
FORCE_NO_SYMBOL $6284
COMMENT $628C should be bulletDamage
FORCE_SYMBOL $628C bulletDamage
FORCE_NO_SYMBOL $6292
FORCE_NO_SYMBOL $629D
COMMENT $62A5 should be bulletDamage
FORCE_SYMBOL $62A5 bulletDamage
FORCE_NO_SYMBOL $62AB
COMMENT_LINE $0000 ..........
COMMENT_LINE $62BC collision detection player shot -> enemy
COMMENT_LINE $62BC only two shots are tested per game round
COMMENT_LINE $62BC two shots
COMMENT_LINE $62BC main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $62BC in b is still the xcoordinate of the current enemy that is tested for this shot
COMMENT_LINE $62BC is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $62BC all behaviours with negative all purpose do not call col detect
COMMENT_LINE $62BC ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $62BC load address of current shot structure to be tested
FORCE_SYMBOL $62BC test2Shot
FORCE_SYMBOL $62C3 playerNumberOfBulletsPerShot
COMMENT $62C6 laser
FORCE_NO_SYMBOL $62C6
COMMENT $62CE MIN check is only done with the first to be tested shot
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT $62D9 higher y tollerance
FORCE_NO_SYMBOL $62D9
FORCE_SYMBOL $62DB shotYRadius
COMMENT_LINE $62E2 ;;;; y done
COMMENT_LINE $62E2 xTest
COMMENT $62E2 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $62E2
COMMENT_LINE $62E4 test center
COMMENT_LINE $62E4 if large object, check if middle shot is zero and than test the correct scoopy instead
FORCE_SYMBOL $62E4 SHOT_RADIUS
COMMENT_LINE $62E6 REMOVED since SHOT_RADIUS0 == 0!!!
COMMENT_LINE $62E6 cmpa #SHOT_RADIUS0
FORCE_SYMBOL $62E8 X_POS
FORCE_NO_SYMBOL $62EA
FORCE_SYMBOL $62EC tmp1_tmp
FORCE_SYMBOL $62EF tmp1_tmp
COMMENT $62F2 enemy is on left side of shot
COMMENT $62F6 enemy is on right side of shot
FORCE_NO_SYMBOL $62FA
COMMENT $62FF enemy is on left side of shot
COMMENT_LINE $6303 in b 0 based enemy pos
FORCE_NO_SYMBOL $6303
COMMENT $6308 enemy is on right side of shot
COMMENT_LINE $630C ..........
COMMENT_LINE $630C if only scoop shots are left - we can not hit with "own" cannon
COMMENT $630C a zero shot cannot hit! (WAS TST)
FORCE_SYMBOL $630C SHOT_RADIUS
FORCE_SYMBOL $6312 notHit462
FORCE_SYMBOL $6315 backJump
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
FORCE_SYMBOL $6318 BEHAVIOUR
FORCE_NO_SYMBOL $631A
COMMENT_LINE $6320 center shot is zero - check if a scoopy might hit!
FORCE_SYMBOL $6320 tmp1
FORCE_SYMBOL $632A tmp1
COMMENT $6334 notHitShotIsZero
FORCE_SYMBOL $6334 notHit462
FORCE_SYMBOL $6337 tmp_isSupershot
COMMENT $633A (was tst)
FORCE_SYMBOL $633A explosionSound
COMMENT $633F next game round, play an explosion
FORCE_SYMBOL $633F explosionSound
COMMENT_LINE $6342 laser
FORCE_SYMBOL $6342 SHOT_RADIUS
FORCE_SYMBOL $6344 SHOT_RADIUS6
FORCE_SYMBOL $6348 laserTmp2
FORCE_SYMBOL $634B laserTmp2
FORCE_SYMBOL $634E isLazerShot
COMMENT_LINE $6351 should I do a "shield" check here, as in object.asm?
COMMENT_LINE $6351 probably yes... but most of the time
COMMENT_LINE $6351 this works out well...
COMMENT_LINE $6351 AND, shrinked shots can sometimes "weazle" through shield enemies
COMMENT_LINE $6351 which I find cool :-)
FORCE_SYMBOL $6351 SHOT_RADIUS5
COMMENT_LINE $0000 ldb      SHOT_RADIUS, x
FORCE_SYMBOL $6358 SHOT_RADIUS4
FORCE_SYMBOL $635C SHOT_RADIUS3
FORCE_SYMBOL $6360 SHOT_RADIUS2
FORCE_SYMBOL $6364 isNo5Shot
COMMENT_LINE $6367 five shot is also a "1" time shot
COMMENT $6367 positive is supershot
FORCE_SYMBOL $6367 tmp_isSupershot
COMMENT $636A tst
FORCE_SYMBOL $636A SCOOP_SHOTS
FORCE_NO_SYMBOL $6370
FORCE_SYMBOL $6374 bulletDamage
FORCE_NO_SYMBOL $637D
FORCE_SYMBOL $6381 bulletDamage
FORCE_SYMBOL $638A SCOOP_SHOTS
FORCE_SYMBOL $638C shotHasNoScoopies
FORCE_SYMBOL $638F SHOT_RADIUS0
FORCE_SYMBOL $6391 SHOT_RADIUS
FORCE_SYMBOL $6393 shotHandleDone_noBoss
COMMENT_LINE $6396 ---
COMMENT_LINE $6396 remove 3 points of damage
COMMENT $6396 should be bulletDamage * 2
FORCE_SYMBOL $6396 bulletDamage
COMMENT $639A 3 times damage
FORCE_SYMBOL $639A bulletDamage
COMMENT_LINE $63A0 remove fullscoopy damage
COMMENT_LINE $63A0 and remove scoopy shot
COMMENT $63A0 tst
FORCE_SYMBOL $63A0 SCOOP_SHOTS
COMMENT_LINE $63A2 for easyness I assume always a FULL-1 scoopy shot
FORCE_NO_SYMBOL $63A2
COMMENT $63A6 3 times damage
COMMENT_LINE $63A8 for easyness I assume always a FULL-1 scoopy shot
FORCE_NO_SYMBOL $63A8
COMMENT $63AC 3 times damage
FORCE_SYMBOL $63AE SCOOP_SHOTS
COMMENT $63B3 remove shot, do one damage!
FORCE_SYMBOL $63B3 isNo5Shot
COMMENT_LINE $63B6 remove 2 points of damage
COMMENT $63B6 2 times
FORCE_SYMBOL $63B6 bulletDamage
COMMENT_LINE $63BC remove 1 points of damage
COMMENT $63BC 1 times
FORCE_SYMBOL $63BC bulletDamage
COMMENT $63C1 ---------------------------------------------------------------------
FORCE_SYMBOL $63C1 isNo5Shot
COMMENT $63C4 laser = main
FORCE_SYMBOL $63C4 laserTmp2
COMMENT $63C9 y pos
FORCE_SYMBOL $63C9 laserTmp
FORCE_SYMBOL $63CC xCheckOnly462
FORCE_NO_SYMBOL $63CF
COMMENT $63D1 laser = right scoop
FORCE_SYMBOL $63D1 laserTmp2
COMMENT $63D6 assume 10 lower
FORCE_NO_SYMBOL $63D6
FORCE_NO_SYMBOL $63DA
FORCE_SYMBOL $63DC laserTmp
COMMENT_LINE $63E1 ..........
COMMENT_LINE $63E1 ..........
COMMENT_LINE $63E1 check if there are scoopies
COMMENT $63E1 two nibbles
FORCE_SYMBOL $63E1 SCOOP_SHOTS
FORCE_NO_SYMBOL $63E3
COMMENT $63E5 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $63E9 side shots are lower - test that here...
FORCE_SYMBOL $63E9 playerNumberOfBulletsPerShot
COMMENT $63EC laser
FORCE_NO_SYMBOL $63EC
COMMENT $63F2 assume 10 lower
FORCE_NO_SYMBOL $63F2
COMMENT_LINE $63FB in b x pos of enemy - 0 based!
COMMENT_LINE $63FB test left
COMMENT $63FE enemy is on left side of left shot
COMMENT_LINE $6402 left HIT!
COMMENT_LINE $6402 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $6402 notHit462
FORCE_SYMBOL $6405 backJump
FORCE_SYMBOL $6408 playerNumberOfBulletsPerShot
COMMENT $640B laser
FORCE_NO_SYMBOL $640B
COMMENT $640D shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $6411 :::::::::::::::::::::::::
COMMENT_LINE $6411 remove shot when shield
FORCE_SYMBOL $6414 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $6416 TYPE_SHIELD
COMMENT $6418 remove
FORCE_SYMBOL $641A SCOOP_SHOTS
FORCE_NO_SYMBOL $641C
FORCE_SYMBOL $641E SCOOP_SHOTS
COMMENT_LINE $6426 remove shot when shield
COMMENT_LINE $6426 :::::::::::::::::::::::::
COMMENT_LINE $6426 left scoopy has hit
FORCE_SYMBOL $6426 SCOOP_SHOTS
FORCE_NO_SYMBOL $6428
FORCE_NO_SYMBOL $642C
FORCE_SYMBOL $642E SCOOP_SHOTS
COMMENT_LINE $6434 test for radius of shot
FORCE_SYMBOL $6434 SHOT_RADIUS
COMMENT $6436 jump out to remove this shot entirely
COMMENT $643A go to enemy "hit" handling
FORCE_SYMBOL $643A shotHandleDone_noBoss
COMMENT_LINE $643D left scoopy with more than one bullet
COMMENT_LINE $643D in a number of bullets in scoopy -2
FORCE_NO_SYMBOL $6440
COMMENT $6442 should be bulletDamage
FORCE_SYMBOL $6442 bulletDamage
FORCE_NO_SYMBOL $6448
FORCE_NO_SYMBOL $6453
FORCE_NO_SYMBOL $6457
COMMENT $6459 should be bulletDamage
FORCE_SYMBOL $6459 bulletDamage
FORCE_NO_SYMBOL $645F
FORCE_NO_SYMBOL $646A
FORCE_NO_SYMBOL $646E
COMMENT $6470 should be bulletDamage
FORCE_SYMBOL $6470 bulletDamage
FORCE_NO_SYMBOL $6476
FORCE_NO_SYMBOL $6483
COMMENT $6485 laser = left scoop
FORCE_SYMBOL $6485 laserTmp2
COMMENT $648A assume 10 lower
FORCE_NO_SYMBOL $648A
FORCE_NO_SYMBOL $648E
FORCE_SYMBOL $6490 laserTmp
COMMENT_LINE $6495 ..........
COMMENT_LINE $6495 check if there are scoopies
COMMENT $6495 two nibbles
FORCE_SYMBOL $6495 SCOOP_SHOTS
FORCE_NO_SYMBOL $6497
COMMENT $6499 we no there is no left hit possible, because we came from center!
COMMENT_LINE $649D side shots are lower - test that here...
FORCE_SYMBOL $649D playerNumberOfBulletsPerShot
COMMENT $64A0 laser
FORCE_NO_SYMBOL $64A0
COMMENT $64A6 assume 10 lower
FORCE_NO_SYMBOL $64A6
COMMENT_LINE $64AF in b x pos of enemy - 0 based!
COMMENT_LINE $64AF test right
COMMENT $64B2 enemy is on right side of right shot
COMMENT_LINE $64B6 right HIT!
COMMENT_LINE $64B6 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $64B6 notHit462
FORCE_SYMBOL $64B9 backJump
FORCE_SYMBOL $64BC playerNumberOfBulletsPerShot
COMMENT $64BF laser
FORCE_NO_SYMBOL $64BF
COMMENT $64C1 shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $64C5 :::::::::::::::::::::::::
COMMENT_LINE $64C5 remove shot when shield
FORCE_SYMBOL $64C8 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $64CA TYPE_SHIELD
COMMENT $64CC remove
FORCE_SYMBOL $64CE SCOOP_SHOTS
FORCE_NO_SYMBOL $64D0
FORCE_SYMBOL $64D2 SCOOP_SHOTS
COMMENT_LINE $64DA remove shot when shield
COMMENT_LINE $64DA :::::::::::::::::::::::::
FORCE_SYMBOL $64DA SCOOP_SHOTS
COMMENT_LINE $64DE right scoopy has hit
FORCE_SYMBOL $64DE SCOOP_SHOTS
FORCE_SYMBOL $64E4 SCOOP_SHOTS
COMMENT_LINE $64EA test for radius of shot
FORCE_SYMBOL $64EA SHOT_RADIUS
COMMENT $64EC jump out to remove this shot entirely
COMMENT $64F0 go to enemy "hit" handling
FORCE_SYMBOL $64F0 shotHandleDone_noBoss
COMMENT_LINE $64F3 right scoopy with more than one bullet
COMMENT_LINE $64F3 in a number of bullets in scoopy -2
COMMENT $64F7 should be bulletDamage
FORCE_SYMBOL $64F7 bulletDamage
FORCE_NO_SYMBOL $64FD
FORCE_NO_SYMBOL $6508
COMMENT $6510 should be bulletDamage
FORCE_SYMBOL $6510 bulletDamage
FORCE_NO_SYMBOL $6516
FORCE_NO_SYMBOL $6521
COMMENT $6529 should be bulletDamage
FORCE_SYMBOL $6529 bulletDamage
FORCE_NO_SYMBOL $652F
COMMENT_LINE $0000 ..........
FORCE_SYMBOL $653E OBJECT_SCALE
FORCE_SYMBOL $6540 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $6542
COMMENT_LINE $6544 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6544 bank 3
COMMENT_LINE $6544 macros only: bank 3
COMMENT_LINE $6544 SWARM draw routines!
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 use registers D, U, X (S) !
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 initialize draw and do first line
COMMENT_LINE $0000 this can be put into moveto
COMMENT $0000 x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $0000 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $0000 end of movement, above values could be set befor, end destroys "b"
COMMENT $0000 mux enabled, set dac to y value
COMMENT $0000 a = zero, b = blank disbaled, zero disabled
COMMENT $0000 mux disabled, set dac to x value
COMMENT $0000 Shift reg mode = 000 free disable, T1 PB7 disabled
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 any line after the first of our drawing
COMMENT_LINE $0000 loading Setup registers
COMMENT_LINE $0000 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $0000 pre load all values, since we must wait before we finish the current drawing
COMMENT $0000 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $0000 mux enabled, set dac to y value (strangly and luckily, timing
COMMENT $0000 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $0000 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $0000 mux disabled, set dac to x value
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 finish last line and deinit our drawing
COMMENT_LINE $0000 nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $0000 otherwise the last vector is not finished correctly
COMMENT $0000 preload scale andcntl value
COMMENT $0000 Shift reg mode = 000 free disable, T1 PB7 enabled
COMMENT_LINE $0000 nop 6 ; may be add one NOP for zeroing!
COMMENT_LINE $0000 ***************************************************************************************
FORCE_NO_SYMBOL $6544
FORCE_SYMBOL $6546 VIA_cntl
FORCE_NO_SYMBOL $6548
FORCE_SYMBOL $654B VIA_port_b
FORCE_SYMBOL $654E VIA_port_b
FORCE_SYMBOL $6550 calibrationValue6
FORCE_SYMBOL $6553 additionalFlags
FORCE_NO_SYMBOL $6556
FORCE_NO_SYMBOL $655A
FORCE_SYMBOL $655C VIA_port_b
COMMENT $655E 2 cycles
FORCE_NO_SYMBOL $655E
FORCE_SYMBOL $6561 VIA_port_a
FORCE_SYMBOL $6563 VIA_port_b
FORCE_NO_SYMBOL $6566
FORCE_SYMBOL $6568 VIA_port_b
COMMENT $656A 2 cycles
FORCE_NO_SYMBOL $656A
FORCE_SYMBOL $656D VIA_port_a
FORCE_SYMBOL $6571 VIA_port_b
COMMENT_LINE $0000 assuming:
COMMENT_LINE $0000 a) no scoopies
COMMENT_LINE $0000 b; x,y pos of swarmer "good" (in their rectangle - more or less)
COMMENT_LINE $0000 assuming no two shots on same or equivalent y pos
COMMENT $0000 end of player shot least reached , jump out of macro
COMMENT $0000 laser
COMMENT_LINE $0000 check for laser
COMMENT $0000 ypos of shot
COMMENT $0000 compared to ypos of swarmer
COMMENT_LINE $0000 y pos0 shot high than swarm0
COMMENT $0000 assume hight of swarmer of 10
COMMENT $0000 jump if y of shot +10 still higher than swarm (shot above swarm)
COMMENT_LINE $0000 ypos correct for hit, now test X
COMMENT_LINE $0000 x of swarm still in b
COMMENT $0000 start at left side of x
COMMENT $0000 adjust to size of shot and its right border
COMMENT $0000 swarm left pos is further right, than shot right pos
COMMENT $0000 switch pos to other side of swarmer
COMMENT $0000 and also to other side of shot
COMMENT $0000 swarm right pos is further left, than shot left pos
COMMENT_LINE $0000 swarm was hit
COMMENT $0000 init back jump, in case shot did not destroy swarmer (more HP)
COMMENT_LINE $0000 preparelaser knowledge
COMMENT $0000 laser = main
COMMENT $0000 y pos
COMMENT_LINE $0000 since there are so many swarmers, the "usual" hit detection for player shots
COMMENT_LINE $0000 does not produce satisfactory results
COMMENT_LINE $0000 different approach here:
COMMENT_LINE $0000 - for each swarmer ALL bullets are tested
COMMENT_LINE $0000 - each swarmer does random moevement
COMMENT_LINE $0000 above two points are alternated each round, so it either moves or is hit tested each round
COMMENT_LINE $0000 each swarm participant is either "odd" or "even" (one bit in SWARM_MOVEMENT_INFO (fourth bit))
COMMENT_LINE $0000 this bit determines the switching (together with Vec_Loop_Count), between above two subsections
COMMENT_LINE $0000 ;;
COMMENT $6574 Store Y in D/A register
FORCE_SYMBOL $6574 VIA_port_a
COMMENT $6576 Blank low, zero high?
FORCE_NO_SYMBOL $6576
FORCE_SYMBOL $6578 VIA_cntl
COMMENT $657B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $657B VIA_port_b
COMMENT $657D y must be set more than xx cycles on some vectrex
COMMENT $657E Disable mux
FORCE_SYMBOL $657E VIA_port_b
COMMENT $6580 Store X in D/A register
FORCE_SYMBOL $6580 VIA_port_a
COMMENT $6582 enable timer
FORCE_SYMBOL $6582 VIA_t1_cnt_hi
COMMENT $6586 odd or even swarm member
FORCE_NO_SYMBOL $6586
FORCE_NO_SYMBOL $658F
FORCE_SYMBOL $6593 playershotlist_objects_head
COMMENT_LINE $6596 assuming:
COMMENT_LINE $6596 a) no scoopies
COMMENT_LINE $6596 b; x,y pos of swarmer "good" (in their rectangle - more or less)
COMMENT_LINE $6596 assuming no two shots on same or equivalent y pos
FORCE_SYMBOL $6596 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $6599 end of player shot least reached , jump out of macro
FORCE_SYMBOL $659D playerNumberOfBulletsPerShot
COMMENT $65A0 laser
FORCE_NO_SYMBOL $65A0
COMMENT_LINE $65A4 check for laser
COMMENT $65A4 ypos of shot
FORCE_SYMBOL $65A4 Y_POS
COMMENT $65A6 compared to ypos of swarmer
FORCE_SYMBOL $65AA NEXT_PLAYERSHOT_OBJECT
COMMENT_LINE $65AE y pos0 shot high than swarm0
COMMENT $65AE assume hight of swarmer of 10
FORCE_NO_SYMBOL $65AE
COMMENT $65B2 jump if y of shot +10 still higher than swarm (shot above swarm)
COMMENT_LINE $65B4 ypos correct for hit, now test X
COMMENT_LINE $65B4 x of swarm still in b
COMMENT $65B4 start at left side of x
FORCE_NO_SYMBOL $65B4
COMMENT $65B6 adjust to size of shot and its right border
FORCE_SYMBOL $65B6 SHOT_RADIUS
FORCE_SYMBOL $65B8 X_POS
COMMENT $65BA swarm left pos is further right, than shot right pos
COMMENT $65BE switch pos to other side of swarmer
FORCE_NO_SYMBOL $65BE
COMMENT $65C0 and also to other side of shot
FORCE_SYMBOL $65C0 SHOT_RADIUS
FORCE_SYMBOL $65C2 SHOT_RADIUS
FORCE_SYMBOL $65C4 X_POS
COMMENT $65C6 swarm right pos is further left, than shot left pos
COMMENT_LINE $65CA swarm was hit
FORCE_SYMBOL $65CA notHitSwarm
COMMENT $65CD init back jump, in case shot did not destroy swarmer (more HP)
FORCE_SYMBOL $65CD backJump
COMMENT_LINE $65D0 preparelaser knowledge
COMMENT $65D0 laser = main
FORCE_SYMBOL $65D0 laserTmp2
COMMENT $65D5 y pos
FORCE_SYMBOL $65D5 laserTmp
FORCE_SYMBOL $65D8 removeCurrentShotAndObject
COMMENT_LINE $65DB check and adjust movement of swarmer
COMMENT_LINE $65DB adjust direction every 15*2 rounds
COMMENT $65DD get only the counter part
FORCE_NO_SYMBOL $65DD
FORCE_SYMBOL $65E9 playerXpos
FORCE_SYMBOL $65EF PLAYER_RADIUS_X
COMMENT $65F3 TODO strength of enemy bullet
FORCE_NO_SYMBOL $65F3
FORCE_SYMBOL $65F5 playerWasHitFor
COMMENT_LINE $65F8 now adjust current pos according to movement info in our swarm data
COMMENT_LINE $65FC vvhh xfff
COMMENT_LINE $65FC vertical
COMMENT_LINE $65FC v0 0 = no vertical movement
COMMENT_LINE $65FC 11 = up
COMMENT_LINE $65FC 01 = down
COMMENT_LINE $65FC 00 = not used
FORCE_NO_SYMBOL $65FC
FORCE_NO_SYMBOL $6600
COMMENT_LINE $6606 bvc verticalChangeDoneSwarm
COMMENT_LINE $6606 dec Y_POS+u_offset1,s ;should "never" come here (due to rectangle definition)
COMMENT_LINE $6606 dec Y_POS+u_offset1,s
COMMENT_LINE $660A bvc verticalChangeDoneSwarm
COMMENT_LINE $660A inc Y_POS+u_offset1,s ;should "never" come here (due to rectangle definition)
COMMENT_LINE $660A inc Y_POS+u_offset1,s
COMMENT_LINE $660A horizontal
COMMENT_LINE $660A h0 0 = no horzontal movement
COMMENT_LINE $660A 11 = left
COMMENT_LINE $660A 01 = right
COMMENT_LINE $660A 00 = not used
FORCE_NO_SYMBOL $660A
COMMENT $660C horizontalChangeDoneSwarm
FORCE_NO_SYMBOL $6610
COMMENT_LINE $6616 bvc horizontalChangeDoneSwarm
COMMENT_LINE $6616 dec X_POS+u_offset1,s
COMMENT_LINE $6616 dec X_POS+u_offset1,s
COMMENT $6616 horizontalChangeDoneSwarm
FORCE_SYMBOL $6616 swarmMovementDone
COMMENT_LINE $661B bvc horizontalChangeDoneSwarm
COMMENT_LINE $661B inc X_POS+u_offset1,s
COMMENT_LINE $661B inc X_POS+u_offset1,s
FORCE_SYMBOL $661B swarmMovementDone
FORCE_SYMBOL $661E maxSwarmAttacker
FORCE_SYMBOL $6623 random_seed
FORCE_NO_SYMBOL $6629
FORCE_SYMBOL $662B random_seed
FORCE_NO_SYMBOL $662E
FORCE_SYMBOL $6632 maxSwarmAttacker
FORCE_SYMBOL $6635 swarmAttackBehaviour
COMMENT $663E counter till next movement change to 15
FORCE_NO_SYMBOL $663E
COMMENT $6644 reset all movement parts in ALL_PURPOSE
FORCE_NO_SYMBOL $6644
FORCE_SYMBOL $6648 SWARM_MAX_Y
COMMENT $664C force down
FORCE_NO_SYMBOL $664C
FORCE_SYMBOL $6650 SWARM_MIN_Y
COMMENT $6654 force up
FORCE_NO_SYMBOL $6654
COMMENT_LINE $6658 vertical
COMMENT_LINE $6658 v0h0 xfff
FORCE_SYMBOL $6658 random_seed
FORCE_NO_SYMBOL $665E
FORCE_SYMBOL $6660 random_seed
FORCE_NO_SYMBOL $6665
FORCE_SYMBOL $6667 random_seed
FORCE_NO_SYMBOL $666D
FORCE_SYMBOL $666F random_seed
FORCE_NO_SYMBOL $6674
FORCE_SYMBOL $6678 SWARM_MAX_X
COMMENT $667C force right
FORCE_NO_SYMBOL $667C
FORCE_SYMBOL $6680 SWARM_MIN_X
COMMENT $6684 force left
FORCE_NO_SYMBOL $6684
COMMENT_LINE $6688 horizontal
COMMENT_LINE $6688 v0h0 xfff
FORCE_SYMBOL $6688 random_seed
FORCE_NO_SYMBOL $668E
FORCE_SYMBOL $6690 random_seed
FORCE_NO_SYMBOL $6695
FORCE_SYMBOL $6697 random_seed
FORCE_NO_SYMBOL $669D
FORCE_SYMBOL $669F random_seed
FORCE_NO_SYMBOL $66A4
COMMENT_LINE $66A8 for anim go to swam anim directly there is no enemy struct
FORCE_SYMBOL $66A8 SwarmerDirect
COMMENT_LINE $66AB do animation of enemy
FORCE_SYMBOL $66AB animDelayCounter
FORCE_SYMBOL $66BE SwarmerDirect
COMMENT $66C5 check if we should "blink" (hit and not destroyed -> we blink)
FORCE_NO_SYMBOL $66C5
FORCE_SYMBOL $66C9 HIT_FLASH_LENGTH
FORCE_SYMBOL $66CD lightningOn
FORCE_NO_SYMBOL $66D2
FORCE_SYMBOL $66D6 lightningOn
FORCE_SYMBOL $66DB lightningOn
FORCE_SYMBOL $66DE DEFAULT_ENEMY_INTENSITY
COMMENT $66E0 preload next user stack
FORCE_NO_SYMBOL $66E3
FORCE_SYMBOL $66E5 VIA_int_flags
COMMENT $66E9 Store intensity in D/A
FORCE_SYMBOL $66E9 VIA_port_a
COMMENT $66EB mux disabled channel 2
FORCE_NO_SYMBOL $66EB
FORCE_SYMBOL $66EE VIA_port_b
COMMENT $66F0 mux enabled channel 2
FORCE_SYMBOL $66F0 VIA_port_b
COMMENT $66F2 turn off mux
FORCE_SYMBOL $66F2 VIA_port_b
FORCE_NO_SYMBOL $66F4
COMMENT $66F6 preload next user stack
FORCE_NO_SYMBOL $66F9
COMMENT_LINE $66FB these routines leave aux with value of $80 - Shift reg mode = 000 free disable, T1 PB7 enabled
COMMENT_LINE $66FB "normally" the value is $98
COMMENT_LINE $66FB this can be put into moveto
COMMENT $66FB x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $66FE u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6701 end of movement, above values could be set befor, end destroys "b"
FORCE_NO_SYMBOL $6701
FORCE_SYMBOL $6703 VIA_int_flags
COMMENT $6707 mux enabled, set dac to y value
FORCE_SYMBOL $6707 VIA_port_b
COMMENT $6709 a = zero, b = blank disbaled, zero disabled
FORCE_NO_SYMBOL $6709
COMMENT $670C mux disabled, set dac to x value
FORCE_SYMBOL $670C VIA_port_b
COMMENT $670E Shift reg mode = 000 free disable, T1 PB7 disabled
FORCE_SYMBOL $670E VIA_aux_cntl
COMMENT_LINE $6710 loading Setup registers
COMMENT_LINE $6710 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6710 pre load all values, since we must wait before we finish the current drawing
COMMENT $6710 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6713 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6713 VIA_port_b
COMMENT $6715 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6718 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6718 mux disabled, set dac to x value
FORCE_SYMBOL $6718 VIA_port_b
COMMENT_LINE $671A loading Setup registers
COMMENT_LINE $671A directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $671A pre load all values, since we must wait before we finish the current drawing
COMMENT $671A u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $671D mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $671D VIA_port_b
COMMENT $671F u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6722 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6722 mux disabled, set dac to x value
FORCE_SYMBOL $6722 VIA_port_b
COMMENT_LINE $6724 loading Setup registers
COMMENT_LINE $6724 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6724 pre load all values, since we must wait before we finish the current drawing
COMMENT $6724 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6727 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6727 VIA_port_b
COMMENT $6729 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $672C nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $672C mux disabled, set dac to x value
FORCE_SYMBOL $672C VIA_port_b
COMMENT_LINE $672E loading Setup registers
COMMENT_LINE $672E directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $672E pre load all values, since we must wait before we finish the current drawing
COMMENT $672E u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6731 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6731 VIA_port_b
COMMENT $6733 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6736 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6736 mux disabled, set dac to x value
FORCE_SYMBOL $6736 VIA_port_b
COMMENT_LINE $6738 loading Setup registers
COMMENT_LINE $6738 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6738 pre load all values, since we must wait before we finish the current drawing
COMMENT $6738 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $673B mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $673B VIA_port_b
COMMENT $673D u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6740 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6740 mux disabled, set dac to x value
FORCE_SYMBOL $6740 VIA_port_b
COMMENT_LINE $6742 loading Setup registers
COMMENT_LINE $6742 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6742 pre load all values, since we must wait before we finish the current drawing
COMMENT $6742 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6745 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6745 VIA_port_b
COMMENT $6747 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $674A nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $674A mux disabled, set dac to x value
FORCE_SYMBOL $674A VIA_port_b
COMMENT_LINE $674C loading Setup registers
COMMENT_LINE $674C directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $674C pre load all values, since we must wait before we finish the current drawing
COMMENT $674C u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $674F mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $674F VIA_port_b
COMMENT $6751 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6754 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6754 mux disabled, set dac to x value
FORCE_SYMBOL $6754 VIA_port_b
COMMENT_LINE $6756 loading Setup registers
COMMENT_LINE $6756 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6756 pre load all values, since we must wait before we finish the current drawing
COMMENT $6756 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6759 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6759 VIA_port_b
COMMENT $675B u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $675E nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $675E mux disabled, set dac to x value
FORCE_SYMBOL $675E VIA_port_b
FORCE_SYMBOL $6760 gameScale
FORCE_SYMBOL $6763 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $6767
COMMENT_LINE $676A nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $676A otherwise the last vector is not finished correctly
COMMENT $676A preload scale andcntl value
COMMENT $676D Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $676D VIA_aux_cntl
FORCE_SYMBOL $676F VIA_port_b
COMMENT_LINE $6771 nop 6 ; may be add one NOP for zeroing!
COMMENT $6771 (D = y,x, pc = next object)
COMMENT_LINE $6773 this can be put into moveto
COMMENT $6773 x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $6776 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6779 end of movement, above values could be set befor, end destroys "b"
FORCE_NO_SYMBOL $6779
FORCE_SYMBOL $677B VIA_int_flags
COMMENT $677F mux enabled, set dac to y value
FORCE_SYMBOL $677F VIA_port_b
COMMENT $6781 a = zero, b = blank disbaled, zero disabled
FORCE_NO_SYMBOL $6781
COMMENT $6784 mux disabled, set dac to x value
FORCE_SYMBOL $6784 VIA_port_b
COMMENT $6786 Shift reg mode = 000 free disable, T1 PB7 disabled
FORCE_SYMBOL $6786 VIA_aux_cntl
COMMENT_LINE $6788 loading Setup registers
COMMENT_LINE $6788 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6788 pre load all values, since we must wait before we finish the current drawing
COMMENT $6788 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $678B mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $678B VIA_port_b
COMMENT $678D u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6790 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6790 mux disabled, set dac to x value
FORCE_SYMBOL $6790 VIA_port_b
COMMENT_LINE $6792 loading Setup registers
COMMENT_LINE $6792 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6792 pre load all values, since we must wait before we finish the current drawing
COMMENT $6792 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6795 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6795 VIA_port_b
COMMENT $6797 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $679A nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $679A mux disabled, set dac to x value
FORCE_SYMBOL $679A VIA_port_b
COMMENT_LINE $679C loading Setup registers
COMMENT_LINE $679C directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $679C pre load all values, since we must wait before we finish the current drawing
COMMENT $679C u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $679F mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $679F VIA_port_b
COMMENT $67A1 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $67A4 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $67A4 mux disabled, set dac to x value
FORCE_SYMBOL $67A4 VIA_port_b
COMMENT_LINE $67A6 loading Setup registers
COMMENT_LINE $67A6 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $67A6 pre load all values, since we must wait before we finish the current drawing
COMMENT $67A6 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $67A9 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $67A9 VIA_port_b
COMMENT $67AB u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $67AE nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $67AE mux disabled, set dac to x value
FORCE_SYMBOL $67AE VIA_port_b
COMMENT_LINE $67B0 loading Setup registers
COMMENT_LINE $67B0 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $67B0 pre load all values, since we must wait before we finish the current drawing
COMMENT $67B0 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $67B3 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $67B3 VIA_port_b
COMMENT $67B5 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $67B8 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $67B8 mux disabled, set dac to x value
FORCE_SYMBOL $67B8 VIA_port_b
COMMENT_LINE $67BA loading Setup registers
COMMENT_LINE $67BA directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $67BA pre load all values, since we must wait before we finish the current drawing
COMMENT $67BA u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $67BD mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $67BD VIA_port_b
COMMENT $67BF u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $67C2 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $67C2 mux disabled, set dac to x value
FORCE_SYMBOL $67C2 VIA_port_b
COMMENT_LINE $67C4 loading Setup registers
COMMENT_LINE $67C4 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $67C4 pre load all values, since we must wait before we finish the current drawing
COMMENT $67C4 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $67C7 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $67C7 VIA_port_b
COMMENT $67C9 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $67CC nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $67CC mux disabled, set dac to x value
FORCE_SYMBOL $67CC VIA_port_b
COMMENT_LINE $67CE loading Setup registers
COMMENT_LINE $67CE directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $67CE pre load all values, since we must wait before we finish the current drawing
COMMENT $67CE u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $67D1 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $67D1 VIA_port_b
COMMENT $67D3 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $67D6 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $67D6 mux disabled, set dac to x value
FORCE_SYMBOL $67D6 VIA_port_b
FORCE_SYMBOL $67D8 gameScale
FORCE_SYMBOL $67DB VIA_t1_cnt_lo
FORCE_NO_SYMBOL $67DF
COMMENT_LINE $67E2 nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $67E2 otherwise the last vector is not finished correctly
COMMENT $67E2 preload scale andcntl value
COMMENT $67E5 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $67E5 VIA_aux_cntl
FORCE_SYMBOL $67E7 VIA_port_b
COMMENT_LINE $67E9 nop 6 ; may be add one NOP for zeroing!
COMMENT $67E9 (D = y,x, pc = next object)
COMMENT_LINE $67EB this can be put into moveto
COMMENT $67EB x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $67EE u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $67F1 end of movement, above values could be set befor, end destroys "b"
FORCE_NO_SYMBOL $67F1
FORCE_SYMBOL $67F3 VIA_int_flags
COMMENT $67F7 mux enabled, set dac to y value
FORCE_SYMBOL $67F7 VIA_port_b
COMMENT $67F9 a = zero, b = blank disbaled, zero disabled
FORCE_NO_SYMBOL $67F9
COMMENT $67FC mux disabled, set dac to x value
FORCE_SYMBOL $67FC VIA_port_b
COMMENT $67FE Shift reg mode = 000 free disable, T1 PB7 disabled
FORCE_SYMBOL $67FE VIA_aux_cntl
COMMENT_LINE $6800 loading Setup registers
COMMENT_LINE $6800 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6800 pre load all values, since we must wait before we finish the current drawing
COMMENT $6800 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6803 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6803 VIA_port_b
COMMENT $6805 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6808 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6808 mux disabled, set dac to x value
FORCE_SYMBOL $6808 VIA_port_b
COMMENT_LINE $680A loading Setup registers
COMMENT_LINE $680A directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $680A pre load all values, since we must wait before we finish the current drawing
COMMENT $680A u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $680D mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $680D VIA_port_b
COMMENT $680F u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6812 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6812 mux disabled, set dac to x value
FORCE_SYMBOL $6812 VIA_port_b
COMMENT_LINE $6814 loading Setup registers
COMMENT_LINE $6814 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6814 pre load all values, since we must wait before we finish the current drawing
COMMENT $6814 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6817 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6817 VIA_port_b
COMMENT $6819 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $681C nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $681C mux disabled, set dac to x value
FORCE_SYMBOL $681C VIA_port_b
COMMENT_LINE $681E loading Setup registers
COMMENT_LINE $681E directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $681E pre load all values, since we must wait before we finish the current drawing
COMMENT $681E u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6821 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6821 VIA_port_b
COMMENT $6823 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6826 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6826 mux disabled, set dac to x value
FORCE_SYMBOL $6826 VIA_port_b
COMMENT_LINE $6828 loading Setup registers
COMMENT_LINE $6828 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6828 pre load all values, since we must wait before we finish the current drawing
COMMENT $6828 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $682B mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $682B VIA_port_b
COMMENT $682D u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6830 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6830 mux disabled, set dac to x value
FORCE_SYMBOL $6830 VIA_port_b
COMMENT_LINE $6832 loading Setup registers
COMMENT_LINE $6832 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6832 pre load all values, since we must wait before we finish the current drawing
COMMENT $6832 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6835 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6835 VIA_port_b
COMMENT $6837 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $683A nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $683A mux disabled, set dac to x value
FORCE_SYMBOL $683A VIA_port_b
COMMENT_LINE $683C loading Setup registers
COMMENT_LINE $683C directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $683C pre load all values, since we must wait before we finish the current drawing
COMMENT $683C u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $683F mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $683F VIA_port_b
COMMENT $6841 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6844 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6844 mux disabled, set dac to x value
FORCE_SYMBOL $6844 VIA_port_b
COMMENT_LINE $6846 loading Setup registers
COMMENT_LINE $6846 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6846 pre load all values, since we must wait before we finish the current drawing
COMMENT $6846 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6849 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6849 VIA_port_b
COMMENT $684B u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $684E nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $684E mux disabled, set dac to x value
FORCE_SYMBOL $684E VIA_port_b
FORCE_SYMBOL $6850 gameScale
FORCE_SYMBOL $6853 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $6857
COMMENT_LINE $685A nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $685A otherwise the last vector is not finished correctly
COMMENT $685A preload scale andcntl value
COMMENT $685D Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $685D VIA_aux_cntl
FORCE_SYMBOL $685F VIA_port_b
COMMENT_LINE $6861 nop 6 ; may be add one NOP for zeroing!
COMMENT $6861 (D = y,x, pc = next object)
COMMENT_LINE $6863 this can be put into moveto
COMMENT $6863 x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $6866 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6869 end of movement, above values could be set befor, end destroys "b"
FORCE_NO_SYMBOL $6869
FORCE_SYMBOL $686B VIA_int_flags
COMMENT $686F mux enabled, set dac to y value
FORCE_SYMBOL $686F VIA_port_b
COMMENT $6871 a = zero, b = blank disbaled, zero disabled
FORCE_NO_SYMBOL $6871
COMMENT $6874 mux disabled, set dac to x value
FORCE_SYMBOL $6874 VIA_port_b
COMMENT $6876 Shift reg mode = 000 free disable, T1 PB7 disabled
FORCE_SYMBOL $6876 VIA_aux_cntl
COMMENT_LINE $6878 loading Setup registers
COMMENT_LINE $6878 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6878 pre load all values, since we must wait before we finish the current drawing
COMMENT $6878 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $687B mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $687B VIA_port_b
COMMENT $687D u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6880 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6880 mux disabled, set dac to x value
FORCE_SYMBOL $6880 VIA_port_b
COMMENT_LINE $6882 loading Setup registers
COMMENT_LINE $6882 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6882 pre load all values, since we must wait before we finish the current drawing
COMMENT $6882 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6885 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6885 VIA_port_b
COMMENT $6887 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $688A nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $688A mux disabled, set dac to x value
FORCE_SYMBOL $688A VIA_port_b
COMMENT_LINE $688C loading Setup registers
COMMENT_LINE $688C directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $688C pre load all values, since we must wait before we finish the current drawing
COMMENT $688C u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $688F mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $688F VIA_port_b
COMMENT $6891 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $6894 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $6894 mux disabled, set dac to x value
FORCE_SYMBOL $6894 VIA_port_b
COMMENT_LINE $6896 loading Setup registers
COMMENT_LINE $6896 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $6896 pre load all values, since we must wait before we finish the current drawing
COMMENT $6896 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $6899 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $6899 VIA_port_b
COMMENT $689B u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $689E nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $689E mux disabled, set dac to x value
FORCE_SYMBOL $689E VIA_port_b
COMMENT_LINE $68A0 loading Setup registers
COMMENT_LINE $68A0 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $68A0 pre load all values, since we must wait before we finish the current drawing
COMMENT $68A0 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $68A3 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $68A3 VIA_port_b
COMMENT $68A5 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $68A8 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $68A8 mux disabled, set dac to x value
FORCE_SYMBOL $68A8 VIA_port_b
COMMENT_LINE $68AA loading Setup registers
COMMENT_LINE $68AA directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $68AA pre load all values, since we must wait before we finish the current drawing
COMMENT $68AA u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $68AD mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $68AD VIA_port_b
COMMENT $68AF u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $68B2 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $68B2 mux disabled, set dac to x value
FORCE_SYMBOL $68B2 VIA_port_b
COMMENT_LINE $68B4 loading Setup registers
COMMENT_LINE $68B4 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $68B4 pre load all values, since we must wait before we finish the current drawing
COMMENT $68B4 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $68B7 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $68B7 VIA_port_b
COMMENT $68B9 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $68BC nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $68BC mux disabled, set dac to x value
FORCE_SYMBOL $68BC VIA_port_b
COMMENT_LINE $68BE loading Setup registers
COMMENT_LINE $68BE directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $68BE pre load all values, since we must wait before we finish the current drawing
COMMENT $68BE u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $68C1 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $68C1 VIA_port_b
COMMENT $68C3 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $68C6 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $68C6 mux disabled, set dac to x value
FORCE_SYMBOL $68C6 VIA_port_b
FORCE_SYMBOL $68C8 gameScale
FORCE_SYMBOL $68CB VIA_t1_cnt_lo
FORCE_NO_SYMBOL $68CF
COMMENT_LINE $68D2 nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $68D2 otherwise the last vector is not finished correctly
COMMENT $68D2 preload scale andcntl value
COMMENT $68D5 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $68D5 VIA_aux_cntl
FORCE_SYMBOL $68D7 VIA_port_b
COMMENT_LINE $68D9 nop 6 ; may be add one NOP for zeroing!
COMMENT $68D9 (D = y,x, pc = next object)
COMMENT_LINE $68E9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $68E9 Store Y in D/A register
FORCE_SYMBOL $68E9 VIA_port_a
COMMENT $68EB Blank low, zero high?
FORCE_NO_SYMBOL $68EB
FORCE_SYMBOL $68ED VIA_cntl
COMMENT $68F0 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $68F0 VIA_port_b
COMMENT $68F2 y must be set more than xx cycles on some vectrex
COMMENT $68F3 Disable mux
FORCE_SYMBOL $68F3 VIA_port_b
COMMENT $68F5 Store X in D/A register
FORCE_SYMBOL $68F5 VIA_port_a
COMMENT $68F7 enable timer
FORCE_SYMBOL $68F7 VIA_t1_cnt_hi
FORCE_SYMBOL $68F9 Swarmer
FORCE_NO_SYMBOL $68FC
FORCE_NO_SYMBOL $6900
FORCE_SYMBOL $690A VIA_t1_cnt_lo
FORCE_NO_SYMBOL $690E
COMMENT $6912 preload next user stack
FORCE_SYMBOL $6915 lightningOn
FORCE_NO_SYMBOL $6918
FORCE_SYMBOL $691A VIA_int_flags
FORCE_NO_SYMBOL $691E
COMMENT $6920 ensure mode is correct for "ordinary" drawings...
FORCE_SYMBOL $6920 VIA_aux_cntl
COMMENT $6922 Store intensity in D/A
FORCE_SYMBOL $6922 VIA_port_a
COMMENT $6924 mux disabled channel 2
FORCE_NO_SYMBOL $6924
FORCE_SYMBOL $6927 VIA_port_b
COMMENT $6929 mux enabled channel 2
FORCE_SYMBOL $6929 VIA_port_b
COMMENT $692B turn off mux
FORCE_SYMBOL $692B VIA_port_b
COMMENT $6930 Store Y in D/A register
FORCE_SYMBOL $6930 VIA_port_a
COMMENT $6932 Blank low, zero high?
FORCE_NO_SYMBOL $6932
FORCE_SYMBOL $6934 VIA_cntl
COMMENT $6937 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6937 VIA_port_b
COMMENT $6939 y must be set more than xx cycles on some vectrex
COMMENT $693A Disable mux
FORCE_SYMBOL $693A VIA_port_b
COMMENT $693C Store X in D/A register
FORCE_SYMBOL $693C VIA_port_a
COMMENT $693E enable timer
FORCE_SYMBOL $693E VIA_t1_cnt_hi
COMMENT $6942 odd or even swarm member
FORCE_NO_SYMBOL $6942
FORCE_NO_SYMBOL $694B
FORCE_SYMBOL $694F playershotlist_objects_head
COMMENT_LINE $6952 assuming:
COMMENT_LINE $6952 a) no scoopies
COMMENT_LINE $6952 b; x,y pos of swarmer "good" (in their rectangle - more or less)
COMMENT_LINE $6952 assuming no two shots on same or equivalent y pos
FORCE_SYMBOL $6952 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $6955 end of player shot least reached , jump out of macro
FORCE_SYMBOL $6959 playerNumberOfBulletsPerShot
COMMENT $695C laser
FORCE_NO_SYMBOL $695C
COMMENT_LINE $6960 check for laser
COMMENT $6960 ypos of shot
FORCE_SYMBOL $6960 Y_POS
COMMENT $6962 compared to ypos of swarmer
FORCE_SYMBOL $6966 NEXT_PLAYERSHOT_OBJECT
COMMENT_LINE $696A y pos0 shot high than swarm0
COMMENT $696A assume hight of swarmer of 10
FORCE_NO_SYMBOL $696A
COMMENT $696E jump if y of shot +10 still higher than swarm (shot above swarm)
COMMENT_LINE $6970 ypos correct for hit, now test X
COMMENT_LINE $6970 x of swarm still in b
COMMENT $6970 start at left side of x
FORCE_NO_SYMBOL $6970
COMMENT $6972 adjust to size of shot and its right border
FORCE_SYMBOL $6972 SHOT_RADIUS
FORCE_SYMBOL $6974 X_POS
COMMENT $6976 swarm left pos is further right, than shot right pos
COMMENT $697A switch pos to other side of swarmer
FORCE_NO_SYMBOL $697A
COMMENT $697C and also to other side of shot
FORCE_SYMBOL $697C SHOT_RADIUS
FORCE_SYMBOL $697E SHOT_RADIUS
FORCE_SYMBOL $6980 X_POS
COMMENT $6982 swarm right pos is further left, than shot left pos
COMMENT_LINE $6986 swarm was hit
FORCE_SYMBOL $6986 notHitSwarm_nm
COMMENT $6989 init back jump, in case shot did not destroy swarmer (more HP)
FORCE_SYMBOL $6989 backJump
COMMENT_LINE $698C preparelaser knowledge
COMMENT $698C laser = main
FORCE_SYMBOL $698C laserTmp2
COMMENT $6991 y pos
FORCE_SYMBOL $6991 laserTmp
FORCE_SYMBOL $6994 maxSwarmAttacker
FORCE_SYMBOL $6997 removeCurrentShotAndObject
COMMENT_LINE $699A check and adjust movement of swarmer
COMMENT_LINE $699A ----
COMMENT_LINE $699A col detect player base
FORCE_SYMBOL $69A2 playerXpos
FORCE_SYMBOL $69A8 PLAYER_RADIUS_X
COMMENT $69AC TODO strength of enemy bullet
FORCE_NO_SYMBOL $69AC
FORCE_SYMBOL $69AE playerWasHitFor
COMMENT_LINE $69B1 = HP = 0
COMMENT_LINE $69B1 if enemy collides with player -> it is dead!
COMMENT_LINE $69B1 or explode directly :-)
COMMENT_LINE $69B1 ----
FORCE_SYMBOL $69BB swarmBehaviour
FORCE_NO_SYMBOL $69C2
FORCE_SYMBOL $69C6 maxSwarmAttacker
FORCE_SYMBOL $69C9 random_seed
FORCE_NO_SYMBOL $69CF
FORCE_SYMBOL $69D1 random_seed
COMMENT_LINE $69DC cmpa X_POS +u_offset1,s
COMMENT_LINE $69DC beq noXChangeSwarm2
COMMENT_LINE $69DC blt playerIsLowerSwarm
COMMENT_LINE $69DC inc X_POS +u_offset1,s
COMMENT_LINE $69DC bra noXChangeSwarm2
COMMENT_LINE $69DC playerIsLowerSwarm
COMMENT_LINE $69DC dec X_POS +u_offset1,s
COMMENT_LINE $69DC noXChangeSwarm2
FORCE_SYMBOL $69DC swarmMovementDone
COMMENT_LINE $69DF STUBS for BANK 1 enemies
COMMENT_LINE $69DF ***************************************************************************
COMMENT $69DF Store Y in D/A register
FORCE_SYMBOL $69DF VIA_port_a
COMMENT $69E1 Blank low, zero high?
FORCE_NO_SYMBOL $69E1
FORCE_SYMBOL $69E3 VIA_cntl
COMMENT $69E6 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $69E6 VIA_port_b
COMMENT $69E8 y must be set more than xx cycles on some vectrex
COMMENT $69E9 Disable mux
FORCE_SYMBOL $69E9 VIA_port_b
COMMENT $69EB Store X in D/A register
FORCE_SYMBOL $69EB VIA_port_a
COMMENT $69ED enable timer
FORCE_SYMBOL $69ED VIA_t1_cnt_hi
FORCE_SYMBOL $69EF back4Shot_saucer
FORCE_SYMBOL $69F2 largeObjectshotBehaviourStandardnoAdditional
COMMENT $69F7 do animation of enemy in bank 1
FORCE_SYMBOL $69F7 WAIT_ANIM_TABLE
COMMENT_LINE $69FA we are in bank one, so one switch IRQ
COMMENT $69FA saucerBehaviourBank1
FORCE_NO_SYMBOL $69FA
FORCE_SYMBOL $69FD jmpBankIRQ1Shift
COMMENT $6A00 preload next user stack
COMMENT_LINE $6A05 ***************************************************************************
COMMENT $6A05 Store Y in D/A register
FORCE_SYMBOL $6A05 VIA_port_a
COMMENT $6A07 Blank low, zero high?
FORCE_NO_SYMBOL $6A07
FORCE_SYMBOL $6A09 VIA_cntl
COMMENT $6A0C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6A0C VIA_port_b
COMMENT $6A0E y must be set more than xx cycles on some vectrex
COMMENT $6A0F Disable mux
FORCE_SYMBOL $6A0F VIA_port_b
COMMENT $6A11 Store X in D/A register
FORCE_SYMBOL $6A11 VIA_port_a
COMMENT $6A13 enable timer
FORCE_SYMBOL $6A13 VIA_t1_cnt_hi
FORCE_SYMBOL $6A15 back4Shot_moneyMothership
FORCE_SYMBOL $6A18 largeObjectshotBehaviourStandardnoAdditional
COMMENT $6A1D do animation of enemy in bank 1
FORCE_SYMBOL $6A1D WAIT_ANIM_TABLE
COMMENT_LINE $6A20 we are in bank one, so one switch IRQ
COMMENT $6A20 moneyMothershipBehaviourBank1
FORCE_NO_SYMBOL $6A20
FORCE_SYMBOL $6A23 jmpBankIRQ1Shift
COMMENT_LINE $6A26 ***************************************************************************
COMMENT $6A26 Store Y in D/A register
FORCE_SYMBOL $6A26 VIA_port_a
COMMENT $6A28 Blank low, zero high?
FORCE_NO_SYMBOL $6A28
FORCE_SYMBOL $6A2A VIA_cntl
COMMENT $6A2D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6A2D VIA_port_b
COMMENT $6A2F y must be set more than xx cycles on some vectrex
COMMENT $6A30 Disable mux
FORCE_SYMBOL $6A30 VIA_port_b
COMMENT $6A32 Store X in D/A register
FORCE_SYMBOL $6A32 VIA_port_a
COMMENT $6A34 enable timer
FORCE_SYMBOL $6A34 VIA_t1_cnt_hi
FORCE_SYMBOL $6A36 back4Shot_moneySucker
FORCE_SYMBOL $6A39 largeObjectshotBehaviourStandardnoAdditional
COMMENT $6A3E do animation of enemy in bank 1
FORCE_SYMBOL $6A3E WAIT_ANIM_TABLE
COMMENT_LINE $6A41 we are in bank one, so one switch IRQ
COMMENT $6A41 moneySuckerBehaviourBank1
FORCE_NO_SYMBOL $6A41
FORCE_SYMBOL $6A44 jmpBankIRQ1Shift
COMMENT_LINE $6A47 ***************************************************************************
COMMENT $6A47 Store Y in D/A register
FORCE_SYMBOL $6A47 VIA_port_a
COMMENT $6A49 Blank low, zero high?
FORCE_NO_SYMBOL $6A49
FORCE_SYMBOL $6A4B VIA_cntl
COMMENT $6A4E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6A4E VIA_port_b
COMMENT $6A50 y must be set more than xx cycles on some vectrex
COMMENT $6A51 Disable mux
FORCE_SYMBOL $6A51 VIA_port_b
COMMENT $6A53 Store X in D/A register
FORCE_SYMBOL $6A53 VIA_port_a
COMMENT $6A55 enable timer
FORCE_SYMBOL $6A55 VIA_t1_cnt_hi
FORCE_SYMBOL $6A57 back4Shot_megaFiend
FORCE_SYMBOL $6A5A largeObjectshotBehaviourStandardnoAdditional
COMMENT $6A5F do animation of enemy in bank 1
FORCE_SYMBOL $6A5F WAIT_ANIM_TABLE
COMMENT_LINE $6A62 we are in bank one, so one switch IRQ
COMMENT $6A62 megaFiendBehaviourBank1
FORCE_NO_SYMBOL $6A62
FORCE_SYMBOL $6A65 jmpBankIRQ1Shift
COMMENT_LINE $6A68 ***************************************************************************
COMMENT_LINE $6A68 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $6A68 Store Y in D/A register
FORCE_SYMBOL $6A68 VIA_port_a
COMMENT $6A6A Blank low, zero high?
FORCE_NO_SYMBOL $6A6A
FORCE_SYMBOL $6A6C VIA_cntl
COMMENT $6A6F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6A6F VIA_port_b
COMMENT $6A71 y must be set more than xx cycles on some vectrex
COMMENT $6A72 Disable mux
FORCE_SYMBOL $6A72 VIA_port_b
COMMENT $6A74 Store X in D/A register
FORCE_SYMBOL $6A74 VIA_port_a
COMMENT $6A76 enable timer
FORCE_SYMBOL $6A76 VIA_t1_cnt_hi
COMMENT_LINE $6A78 we are in bank one, so one switch IRQ
COMMENT $6A78 fallCashBehaviourBank1
FORCE_NO_SYMBOL $6A78
FORCE_SYMBOL $6A7B jmpBankIRQ1Shift
COMMENT_LINE $6A7E for big alien shooting the scoopy
FORCE_SYMBOL $6A7E WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $6A80
FORCE_NO_SYMBOL $6A82
FORCE_SYMBOL $6A85 jmpBankIRQ1Shift
FORCE_SYMBOL $6A88 WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $6A8A
FORCE_NO_SYMBOL $6A8C
FORCE_SYMBOL $6A8F jmpBankIRQ1Shift
COMMENT $6A92 Store Y in D/A register
FORCE_SYMBOL $6A92 VIA_port_a
COMMENT $6A94 Blank low, zero high?
FORCE_NO_SYMBOL $6A94
FORCE_SYMBOL $6A96 VIA_cntl
COMMENT $6A99 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6A99 VIA_port_b
COMMENT $6A9B y must be set more than xx cycles on some vectrex
COMMENT $6A9C Disable mux
FORCE_SYMBOL $6A9C VIA_port_b
COMMENT $6A9E Store X in D/A register
FORCE_SYMBOL $6A9E VIA_port_a
COMMENT $6AA0 enable timer
FORCE_SYMBOL $6AA0 VIA_t1_cnt_hi
FORCE_SYMBOL $6AA7 ANGLE8_TABLE
FORCE_SYMBOL $6AAD DOWN
FORCE_NO_SYMBOL $6AB7
COMMENT $6ABB facing left
FORCE_NO_SYMBOL $6ABB
FORCE_SYMBOL $6ABF LEFT
FORCE_SYMBOL $6AC5 UP
FORCE_NO_SYMBOL $6ACF
COMMENT $6AD3 facing right
FORCE_NO_SYMBOL $6AD3
FORCE_SYMBOL $6AD7 RIGHT
FORCE_SYMBOL $6ADD LEFT
FORCE_NO_SYMBOL $6AE7
FORCE_SYMBOL $6AEB UP
COMMENT $6AEF facing up
FORCE_NO_SYMBOL $6AEF
FORCE_SYMBOL $6AF5 RIGHT
FORCE_NO_SYMBOL $6AFF
COMMENT $6B03 facing down
FORCE_NO_SYMBOL $6B03
FORCE_SYMBOL $6B07 DOWN
FORCE_SYMBOL $6B0D OBJECT_SCALE
FORCE_SYMBOL $6B0F VIA_t1_cnt_lo
COMMENT $6B11 preload next user stack
FORCE_SYMBOL $6B14 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $6B16
FORCE_SYMBOL $6B18 VIA_int_flags
COMMENT $6B1C Store intensity in D/A
FORCE_SYMBOL $6B1C VIA_port_a
COMMENT $6B1E mux disabled channel 2
FORCE_NO_SYMBOL $6B1E
FORCE_SYMBOL $6B21 VIA_port_b
COMMENT $6B23 mux enabled channel 2
FORCE_SYMBOL $6B23 VIA_port_b
COMMENT $6B25 turn off mux
FORCE_SYMBOL $6B25 VIA_port_b
COMMENT_LINE $6B2A UP                  =        1
COMMENT_LINE $6B2A DOWN                =        2
COMMENT_LINE $6B2A LEFT                =        3
COMMENT_LINE $6B2A RIGHT               =        4
COMMENT_LINE $6B2A NONE                =        0
COMMENT_LINE $6B2A bank 3
COMMENT_LINE $6B2A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6B2A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6B2A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6B2A new list object to U
COMMENT_LINE $6B2A leaves with flags = to result
COMMENT_LINE $6B2A (positive = not successfull) ROM
COMMENT_LINE $6B2A negative = successfull RAM
COMMENT_LINE $6B2A destroys d, u
FORCE_SYMBOL $6B2A shotlist_empty_head
FORCE_SYMBOL $6B2D OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $6B33 set the new empty head
COMMENT $6B33 the next in out empty list will be the new
FORCE_SYMBOL $6B33 NEXT_SHOT_OBJECT
COMMENT $6B35 head of our empty list
FORCE_SYMBOL $6B35 shotlist_empty_head
COMMENT_LINE $6B38 load last of current object list
COMMENT_LINE $6B38 the old head is always our next
FORCE_SYMBOL $6B38 shotlist_objects_head
FORCE_SYMBOL $6B3B NEXT_SHOT_OBJECT
COMMENT_LINE $6B3D newobject is always head
FORCE_SYMBOL $6B3D shotlist_objects_head
COMMENT $6B40 and remember that we created a new object
FORCE_SYMBOL $6B40 shotCount
COMMENT_LINE $6B44 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6B44 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $6B44 "create" (or rather get) new object
COMMENT $6B46 pointer to new object now in X also
FORCE_NO_SYMBOL $6B46
FORCE_SYMBOL $6B48 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $6B4E isBugShot
FORCE_SYMBOL $6B53 playSoundFlags
FORCE_NO_SYMBOL $6B56
COMMENT $6B5A dragonData
FORCE_NO_SYMBOL $6B5A
FORCE_SYMBOL $6B5D sfx_pointer_2
COMMENT_LINE $6B60 copy and initialze new enemy
FORCE_SYMBOL $6B60 simpleShotBehaviour
FORCE_SYMBOL $6B63 BEHAVIOUR
FORCE_SYMBOL $6B65 bulletSpawnAt
FORCE_SYMBOL $6B68 Y_POS
FORCE_SYMBOL $6B6A shotSpeed
FORCE_SYMBOL $6B6D SHOT_SPEED
FORCE_SYMBOL $6B6F isBugShot
FORCE_NO_SYMBOL $6B74
FORCE_SYMBOL $6B76 tmp1
COMMENT $6B79 spawn shots below enemy(10 coords)
FORCE_NO_SYMBOL $6B79
FORCE_SYMBOL $6B7B bulletSpawnAt
FORCE_SYMBOL $6B7E isBugShot
FORCE_NO_SYMBOL $6B81
COMMENT_LINE $6B85 ;; Y
FORCE_SYMBOL $6B85 bulletSpawnAt
COMMENT_LINE $6B89 ??? shouldnt there be a exg a,b?
COMMENT_LINE $6B89 target - now
FORCE_SYMBOL $6B89 Y_POS_NOW16
FORCE_NO_SYMBOL $6B8B
FORCE_SYMBOL $6B8E Y_POS_NOW16
COMMENT $6B90 delta
FORCE_SYMBOL $6B90 Y_POS16
COMMENT $6B92 delta
FORCE_SYMBOL $6B94 Y_POS16
COMMENT $6B98 bullet speed
FORCE_SYMBOL $6B98 tmp1
COMMENT $6B9D delta
FORCE_SYMBOL $6B9D Y_POS16
FORCE_SYMBOL $6B9F isBugShot
FORCE_NO_SYMBOL $6BA4
FORCE_SYMBOL $6BA6 tmp1
COMMENT_LINE $6BA9 ;;
COMMENT_LINE $6BA9 ;; X
COMMENT_LINE $6BAD ??? shouldnt there be a exg a,b?
FORCE_SYMBOL $6BAD X_POS_NOW16
FORCE_SYMBOL $6BAF playerXpos
FORCE_SYMBOL $6BB3 X_POS_NOW16
COMMENT $6BB5 delta
FORCE_SYMBOL $6BB5 X_POS16
COMMENT $6BB7 delta
FORCE_SYMBOL $6BB9 X_POS16
COMMENT $6BBD bullet speed
FORCE_SYMBOL $6BBD tmp1
COMMENT $6BC2 delta
FORCE_SYMBOL $6BC2 X_POS16
FORCE_SYMBOL $6BC4 bulletSpawnAt
FORCE_SYMBOL $6BC7 Y_POS_NOW16
FORCE_SYMBOL $6BC9 X_POS_NOW16
COMMENT_LINE $6BCF now in Y_POS and X_POS the "addies"
COMMENT_LINE $6BCF in Y_POS16 teh coordinates
FORCE_SYMBOL $6BCF shotAtPlayerBehaviour
FORCE_SYMBOL $6BD2 BEHAVIOUR
FORCE_SYMBOL $6BD4 playSoundFlags
FORCE_NO_SYMBOL $6BD7
COMMENT $6BDB BugSeekerData
FORCE_NO_SYMBOL $6BDB
FORCE_SYMBOL $6BDE sfx_pointer_2
COMMENT_LINE $6BE2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $6BE2
FORCE_SYMBOL $6BE4 SHOT_SPEED
FORCE_SYMBOL $6BE6 DIRECTION_CHANGE_COUNTER
FORCE_SYMBOL $6BE8 bulletSpawnAt
FORCE_SYMBOL $6BEB Y_POS
FORCE_SYMBOL $6BED missileAtPlayerBehaviour
FORCE_SYMBOL $6BF0 BEHAVIOUR
FORCE_SYMBOL $6BF2 playSoundFlags
FORCE_NO_SYMBOL $6BF5
COMMENT $6BF9 fireMissileData
FORCE_NO_SYMBOL $6BF9
FORCE_SYMBOL $6BFC sfx_pointer_2
FORCE_NO_SYMBOL $6C00
FORCE_SYMBOL $6C02 SHOT_SPEED
FORCE_SYMBOL $6C04 shotSpeed
FORCE_SYMBOL $6C07 bulletSpawnAt
FORCE_SYMBOL $6C0A Y_POS
COMMENT_LINE $6C0C shot 1 done
COMMENT_LINE $6C0C spawn second shot
FORCE_NO_SYMBOL $6C0F
COMMENT $6C13 "create" (or rather get) new object
FORCE_SYMBOL $6C13 newShotObject
COMMENT $6C16 pointer to new object now in X also
FORCE_NO_SYMBOL $6C16
FORCE_SYMBOL $6C18 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $6C1E simpleShotBehaviour
FORCE_SYMBOL $6C21 BEHAVIOUR
FORCE_SYMBOL $6C23 bulletSpawnAt
FORCE_NO_SYMBOL $6C26
FORCE_SYMBOL $6C28 Y_POS
FORCE_SYMBOL $6C2A shotSpeed
FORCE_SYMBOL $6C2D SHOT_SPEED
COMMENT_LINE $6C2F spawn third shot
FORCE_NO_SYMBOL $6C32
COMMENT $6C36 "create" (or rather get) new object
FORCE_SYMBOL $6C36 newShotObject
COMMENT $6C39 pointer to new object now in X also
FORCE_NO_SYMBOL $6C39
FORCE_SYMBOL $6C3B OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $6C41 simpleShotBehaviour
FORCE_SYMBOL $6C44 BEHAVIOUR
FORCE_SYMBOL $6C46 bulletSpawnAt
FORCE_NO_SYMBOL $6C49
FORCE_SYMBOL $6C4B Y_POS
FORCE_SYMBOL $6C4D shotSpeed
FORCE_SYMBOL $6C50 SHOT_SPEED
FORCE_SYMBOL $6C52 playSoundFlags
FORCE_NO_SYMBOL $6C55
COMMENT $6C59 enemyTripleShotData
FORCE_NO_SYMBOL $6C59
FORCE_SYMBOL $6C5C sfx_pointer_2
COMMENT_LINE $6C60 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 cleanup shot
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 called when shot leaves the screen
COMMENT_LINE $0000 in ds+u_offset1 pointer to the object that must be removed
COMMENT_LINE $0000 destroys x, y
COMMENT_LINE $0000 sets u to pointer of next object in linked list (might be the "return" structure)
COMMENT_LINE $0000 this version is called at the end of an explosion or at the
COMMENT_LINE $0000 end of a score display, called by "behaviours"
COMMENT_LINE $0000 and thus the "return" is the call of the next object thru U stack
COMMENT $6C60 TODO strength of enemy bullet
FORCE_NO_SYMBOL $6C60
FORCE_SYMBOL $6C62 playerWasHitFor
COMMENT $6C65 x -> pointer object struture (correction of offset)
FORCE_SYMBOL $6C65 u_offset1
COMMENT $6C67 is it the first?
FORCE_SYMBOL $6C67 shotlist_objects_head
COMMENT $6C6A no -> jump
COMMENT $6C6C s pointer to next objext
FORCE_SYMBOL $6C6C NEXT_SHOT_OBJECT
COMMENT $6C6F the next object will be the first
FORCE_SYMBOL $6C6F shotlist_objects_head
COMMENT $6C75 start at list head
FORCE_SYMBOL $6C75 shotlist_objects_head
COMMENT $6C79 am I the next object of the current investigated list element
FORCE_SYMBOL $6C79 NEXT_SHOT_OBJECT
COMMENT $6C7B jup -> jump
COMMENT $6C7D otherwise load the next as new current
FORCE_SYMBOL $6C7D NEXT_SHOT_OBJECT
COMMENT $6C80 and search further
COMMENT $6C82 we load "our" next object to s
FORCE_SYMBOL $6C82 NEXT_SHOT_OBJECT
COMMENT $6C85 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $6C85 NEXT_SHOT_OBJECT
COMMENT $6C88 and clean up the empties
FORCE_SYMBOL $6C88 shotCount
COMMENT $6C8B set u free, as new free head
FORCE_SYMBOL $6C8B shotlist_empty_head
COMMENT $6C8F load to u the next linked list element
FORCE_SYMBOL $6C8F NEXT_SHOT_OBJECT
FORCE_SYMBOL $6C92 shotlist_empty_head
COMMENT_LINE $6C95 cleanup shot
FORCE_NO_SYMBOL $6C95
FORCE_SYMBOL $6C97 VIA_int_flags
FORCE_SYMBOL $6C9B gameScale
FORCE_SYMBOL $6C9E VIA_t1_cnt_lo
FORCE_NO_SYMBOL $6CA0
COMMENT $6CA2 /BLANK low and /ZERO low
FORCE_SYMBOL $6CA2 VIA_cntl
FORCE_NO_SYMBOL $6CA4
FORCE_SYMBOL $6CA7 VIA_port_b
COMMENT $6CA9 (D = y,x)
COMMENT_LINE $6CAB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6CAB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6CAB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $6CAB Store Y in D/A register
FORCE_SYMBOL $6CAB VIA_port_a
COMMENT $6CAD Blank low, zero high?
FORCE_NO_SYMBOL $6CAD
FORCE_SYMBOL $6CAF VIA_cntl
COMMENT $6CB2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6CB2 VIA_port_b
COMMENT $6CB4 y must be set more than xx cycles on some vectrex
COMMENT $6CB5 Disable mux
FORCE_SYMBOL $6CB5 VIA_port_b
COMMENT $6CB7 Store X in D/A register
FORCE_SYMBOL $6CB7 VIA_port_a
COMMENT $6CB9 enable timer
FORCE_SYMBOL $6CB9 VIA_t1_cnt_hi
COMMENT_LINE $6CBB ;;;;;
COMMENT_LINE $6CBB colision detection shot -> player
FORCE_SYMBOL $6CBD SHOT_PLAYER_Y_TEST_MIN
COMMENT_LINE $6CC3 ;;;;;;;;;;;
COMMENT_LINE $6CC3 in b is still x position, so start with that
COMMENT_LINE $6CC3 xTest
COMMENT_LINE $6CC3 first test, if we are not totally out of "whack"
COMMENT $6CC3 have pos different signs?
FORCE_SYMBOL $6CC3 playerXpos
COMMENT $6CC6 no than everything is fine
COMMENT_LINE $6CCD if different sign and absolut > 60 (or any other big number) - than on different side of screen!
FORCE_NO_SYMBOL $6CCD
COMMENT $6CCF sign compare OUT of Bounds!
COMMENT_LINE $6CD3 ;;;;;;;;;;;
FORCE_SYMBOL $6CD5 playerXpos
COMMENT_LINE $6CDB if b <= player width -> bullet hit player
COMMENT_LINE $6CDB else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $6CDB SHOT_PLAYER_X_RANGE
FORCE_SYMBOL $6CDF scoopEnemy2
COMMENT_LINE $6CE6 really an active scoopy?
FORCE_SYMBOL $6CE6 BEHAVIOUR
FORCE_SYMBOL $6CE8 enemyPlayerControlledLeftBehaviour
FORCE_SYMBOL $6CF0 SHOT_SCOOPY_X_RANGE
COMMENT_LINE $6CF6 handle scoopy left hit
FORCE_SYMBOL $6CF6 lockPurchased
FORCE_NO_SYMBOL $6CF9
FORCE_NO_SYMBOL $6CFD
FORCE_SYMBOL $6D00 scoopEnemy2
FORCE_NO_SYMBOL $6D03
FORCE_SYMBOL $6D05 explosionSound
COMMENT $6D08 because after explosion, the remove enemy - does again a "dec enemy count" this would screw the counting
FORCE_SYMBOL $6D08 enemyCount
COMMENT_LINE $6D0B since scoopies were removed before!
COMMENT $6D0D negative means this enemy is an explosion
FORCE_SYMBOL $6D0D ALL_PURPOSE
FORCE_SYMBOL $6D10 enemyExplosionBehaviour
COMMENT $6D13 negative means this enemy is an explosion
FORCE_SYMBOL $6D13 BEHAVIOUR
FORCE_SYMBOL $6D15 ANIM_POSITION
FORCE_SYMBOL $6D17 ENEMY_STRUCT
FORCE_SYMBOL $6D1A WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $6D1C
FORCE_SYMBOL $6D1E SMARTLIST_ORG
COMMENT $6D20 scale
FORCE_NO_SYMBOL $6D20
FORCE_SYMBOL $6D22 EXPLOSION_SCALE
COMMENT $6D25 intensity
FORCE_NO_SYMBOL $6D25
FORCE_SYMBOL $6D27 EXPLOSION_INTENSITY
FORCE_SYMBOL $6D2A removeShot
COMMENT_LINE $6D2D if b <= player width -> bullet hit player
COMMENT_LINE $6D2D else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $6D2D SHOT_PLAYER_X_RANGE
FORCE_SYMBOL $6D31 scoopEnemy1
COMMENT_LINE $6D36 really an active scoopy?
FORCE_SYMBOL $6D36 BEHAVIOUR
FORCE_SYMBOL $6D38 enemyPlayerControlledRightBehaviour
FORCE_SYMBOL $6D3E SHOT_SCOOPY_X_RANGE
FORCE_SYMBOL $6D42 lockPurchased
FORCE_NO_SYMBOL $6D45
COMMENT_LINE $6D49 handle scoopy right hit
FORCE_NO_SYMBOL $6D49
FORCE_SYMBOL $6D4C scoopEnemy1
FORCE_SYMBOL $6D51 playerBonusActive
COMMENT $6D54 shield saved player (from all shots)
FORCE_SYMBOL $6D54 BITFIELD_SHIELD
FORCE_SYMBOL $6D5A BITFIELD_ARMOR
COMMENT $6D5C armor saved player for one shot
FORCE_SYMBOL $6D62 playerBonusActive
FORCE_SYMBOL $6D65 playerBonusActive
FORCE_SYMBOL $6D6A BITFIELD_SHIELD
FORCE_SYMBOL $6D6C playerBonusActive
COMMENT $6D6F 1 secpnd
FORCE_NO_SYMBOL $6D6F
FORCE_SYMBOL $6D74 playerBonusCounter
FORCE_SYMBOL $6D77 notHit_Shot_removeShot
COMMENT $6D80 lower than top of the screen
FORCE_NO_SYMBOL $6D80
FORCE_NO_SYMBOL $6D88
FORCE_NO_SYMBOL $6D8A
FORCE_SYMBOL $6D8C VIA_int_flags
FORCE_SYMBOL $6D91 VIA_shift_reg
COMMENT $6D93 wait 6 cycles
COMMENT $6D95 wait 6 cycles
COMMENT $6D97 wait 6 cycles
COMMENT $6D99 wait 6 cycles
FORCE_NO_SYMBOL $6D9B
COMMENT $6D9D preload next user stack
FORCE_SYMBOL $6DA0 VIA_shift_reg
COMMENT $6DA2 /BLANK low and /ZERO low
FORCE_SYMBOL $6DA2 VIA_cntl
COMMENT $6DA4 other wise shots "jump" because they do not return completely to zero
COMMENT $6DA9 (D = y,x, pc = next object)
COMMENT_LINE $6DAB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6DAB lda Y_POS +u_offset1,s
COMMENT $6DAD Store Y in D/A register
FORCE_SYMBOL $6DAD VIA_port_a
COMMENT $6DAF Blank low, zero high?
FORCE_NO_SYMBOL $6DAF
FORCE_SYMBOL $6DB1 VIA_cntl
COMMENT $6DB4 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6DB4 VIA_port_b
COMMENT $6DB6 y must be set more than xx cycles on some vectrex
COMMENT $6DB7 Disable mux
FORCE_SYMBOL $6DB7 VIA_port_b
COMMENT $6DB9 Store X in D/A register
FORCE_SYMBOL $6DB9 VIA_port_a
COMMENT $6DBB enable timer
FORCE_SYMBOL $6DBB VIA_t1_cnt_hi
FORCE_SYMBOL $6DBF SHOT_PLAYER_Y_TEST_MIN
COMMENT_LINE $6DC5 ;;;;;;;;;;;
COMMENT_LINE $6DC5 first test, if we are not totally out of "whack"
COMMENT $6DC5 have pos different signs?
FORCE_SYMBOL $6DC5 playerXpos
COMMENT $6DC8 no than everything is fine
COMMENT_LINE $6DCF if different sign and absolut > 60 (or any other big number) - than on different side of screen!
FORCE_NO_SYMBOL $6DCF
COMMENT $6DD1 sign compare OUT of Bounds!
COMMENT_LINE $6DD3 ;;;;;;;;;;;
FORCE_SYMBOL $6DD5 playerXpos
COMMENT_LINE $6DDB if b <= player width -> bullet hit player
COMMENT_LINE $6DDB else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $6DDB SHOT_PLAYER_X_RANGE
FORCE_SYMBOL $6DDF scoopEnemy2
COMMENT_LINE $6DE4 really an active scoopy?
FORCE_SYMBOL $6DE4 BEHAVIOUR
FORCE_SYMBOL $6DE6 enemyPlayerControlledLeftBehaviour
FORCE_SYMBOL $6DEC SHOT_SCOOPY_X_RANGE
COMMENT_LINE $6DF0 handle scoopy left hit
FORCE_SYMBOL $6DF0 lockPurchased
FORCE_NO_SYMBOL $6DF3
FORCE_NO_SYMBOL $6DF7
FORCE_SYMBOL $6DFA scoopEnemy2
FORCE_SYMBOL $6DFD removeScoopRest
COMMENT_LINE $6E00 if b <= player width -> bullet hit player
COMMENT_LINE $6E00 else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $6E00 SHOT_PLAYER_X_RANGE
FORCE_SYMBOL $6E04 scoopEnemy1
COMMENT_LINE $6E09 really an active scoopy?
FORCE_SYMBOL $6E09 BEHAVIOUR
FORCE_SYMBOL $6E0B enemyPlayerControlledRightBehaviour
FORCE_SYMBOL $6E11 SHOT_SCOOPY_X_RANGE
FORCE_SYMBOL $6E15 lockPurchased
FORCE_NO_SYMBOL $6E18
COMMENT_LINE $6E1C handle scoopy right hit
FORCE_NO_SYMBOL $6E1C
FORCE_SYMBOL $6E1F scoopEnemy1
FORCE_SYMBOL $6E22 removeScoopRest
FORCE_SYMBOL $6E25 playerBonusActive
COMMENT $6E28 shield saved player (from all shots)
FORCE_SYMBOL $6E28 BITFIELD_SHIELD
FORCE_SYMBOL $6E2E BITFIELD_ARMOR
COMMENT $6E30 armor saved player for one shot
FORCE_SYMBOL $6E36 playerBonusActive
FORCE_SYMBOL $6E39 playerBonusActive
FORCE_SYMBOL $6E3E BITFIELD_SHIELD
FORCE_SYMBOL $6E40 playerBonusActive
COMMENT $6E43 1 secpnd
FORCE_NO_SYMBOL $6E43
FORCE_SYMBOL $6E48 playerBonusCounter
FORCE_SYMBOL $6E4B notHit_Shot_removeShot
COMMENT_LINE $6E4E should y add not be fixed?
FORCE_NO_SYMBOL $6E5A
COMMENT $0000 ensure shiftreg is 0
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 first line
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Clear T1H
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $6E62 ensure shiftreg is 0
COMMENT $6E63 Clear shift register (blank output)
FORCE_SYMBOL $6E63 VIA_shift_reg
FORCE_NO_SYMBOL $6E65
FORCE_SYMBOL $6E67 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $6E69
FORCE_NO_SYMBOL $6E6B
FORCE_SYMBOL $6E6D VIA_int_flags
COMMENT_LINE $6E72 first line
COMMENT $6E72 Enable mux
FORCE_SYMBOL $6E72 VIA_port_b
COMMENT $6E74 Disable mux
FORCE_SYMBOL $6E74 VIA_port_b
COMMENT $6E76 Send X to A/D
FORCE_SYMBOL $6E76 VIA_port_a
COMMENT $6E78 Clear shift register (blank output)
FORCE_SYMBOL $6E78 VIA_shift_reg
COMMENT $6E7A Clear T1H
FORCE_SYMBOL $6E7A VIA_t1_cnt_hi
COMMENT $6E7C Send Y to A/D
FORCE_SYMBOL $6E7C VIA_port_a
COMMENT $6E7E Enable mux
FORCE_SYMBOL $6E7E VIA_port_b
COMMENT $6E80 Disable mux
FORCE_SYMBOL $6E80 VIA_port_b
COMMENT $6E82 Send X to A/D
FORCE_SYMBOL $6E82 VIA_port_a
COMMENT $6E84 Clear T1H
FORCE_SYMBOL $6E84 VIA_t1_cnt_hi
COMMENT $6E87 Enable mux
FORCE_SYMBOL $6E87 VIA_port_b
COMMENT $6E89 Disable mux
FORCE_SYMBOL $6E89 VIA_port_b
COMMENT $6E8B Send X to A/D
FORCE_SYMBOL $6E8B VIA_port_a
COMMENT $6E8D Clear T1H
FORCE_SYMBOL $6E8D VIA_t1_cnt_hi
COMMENT $6E8F Send Y to A/D
FORCE_SYMBOL $6E8F VIA_port_a
COMMENT $6E91 Enable mux
FORCE_SYMBOL $6E91 VIA_port_b
COMMENT $6E93 Disable mux
FORCE_SYMBOL $6E93 VIA_port_b
COMMENT $6E95 Send X to A/D
FORCE_SYMBOL $6E95 VIA_port_a
COMMENT $6E97 Clear T1H
FORCE_SYMBOL $6E97 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $6E99
COMMENT $6E9C Clear shift register (blank output)
FORCE_SYMBOL $6E9C VIA_shift_reg
FORCE_SYMBOL $6E9E gameScale
COMMENT $6EA1 /BLANK low and /ZERO low
FORCE_SYMBOL $6EA1 VIA_cntl
FORCE_SYMBOL $6EA3 VIA_t1_cnt_lo
COMMENT $6EA5 preload next user stack
COMMENT $6EA8 (D = y,x, pc = next object)
COMMENT_LINE $6EAA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6EAA MY_MOVE_TO_D_START
COMMENT_LINE $6EAA jmp notHit_Shot_removeShot
COMMENT $6EAA Store Y in D/A register
FORCE_SYMBOL $6EAA VIA_port_a
COMMENT $6EAC Blank low, zero high?
FORCE_NO_SYMBOL $6EAC
FORCE_SYMBOL $6EAE VIA_cntl
COMMENT $6EB1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $6EB1 VIA_port_b
COMMENT $6EB3 y must be set more than xx cycles on some vectrex
COMMENT_LINE $6EB4 additional because of very cranky
COMMENT_LINE $6EB4 dunno why only here!
COMMENT $6EB4 y must be set more than xx cycles on some vectrex
COMMENT_LINE $6EB6 nop ; y must be set more than xx cycles on some vectrex
COMMENT $6EB6 Disable mux
FORCE_SYMBOL $6EB6 VIA_port_b
COMMENT $6EB8 Store X in D/A register
FORCE_SYMBOL $6EB8 VIA_port_a
COMMENT $6EBA enable timer
FORCE_SYMBOL $6EBA VIA_t1_cnt_hi
FORCE_SYMBOL $6EBE SHOT_PLAYER_Y_TEST_MIN
COMMENT_LINE $6EC4 ;;;;;;;;;;;
COMMENT_LINE $6EC4 first test, if we are not totally out of "whack"
COMMENT $6EC4 have pos different signs?
FORCE_SYMBOL $6EC4 playerXpos
COMMENT $6EC7 no than everything is fine
COMMENT_LINE $6ECE if different sign and absolut > 60 (or any other big number) - than on different side of screen!
FORCE_NO_SYMBOL $6ECE
COMMENT $6ED0 sign compare OUT of Bounds!
COMMENT_LINE $6ED2 ;;;;;;;;;;;
FORCE_SYMBOL $6ED4 playerXpos
COMMENT_LINE $6EDA if b <= player width -> bullet hit player
COMMENT_LINE $6EDA else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $6EDA SHOT_PLAYER_X_RANGE
FORCE_SYMBOL $6EDE scoopEnemy2
COMMENT_LINE $6EE3 really an active scoopy?
FORCE_SYMBOL $6EE3 BEHAVIOUR
FORCE_SYMBOL $6EE5 enemyPlayerControlledLeftBehaviour
FORCE_SYMBOL $6EEB SHOT_SCOOPY_X_RANGE
COMMENT_LINE $6EEF handle scoopy left hit
FORCE_SYMBOL $6EEF lockPurchased
FORCE_NO_SYMBOL $6EF2
FORCE_NO_SYMBOL $6EF6
FORCE_SYMBOL $6EF9 scoopEnemy2
FORCE_SYMBOL $6EFC removeScoopRest
COMMENT_LINE $6EFF if b <= player width -> bullet hit player
COMMENT_LINE $6EFF else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $6EFF SHOT_PLAYER_X_RANGE
FORCE_SYMBOL $6F03 scoopEnemy1
COMMENT_LINE $6F08 really an active scoopy?
FORCE_SYMBOL $6F08 BEHAVIOUR
FORCE_SYMBOL $6F0A enemyPlayerControlledRightBehaviour
FORCE_SYMBOL $6F10 SHOT_SCOOPY_X_RANGE
FORCE_SYMBOL $6F14 lockPurchased
FORCE_NO_SYMBOL $6F17
COMMENT_LINE $6F1B handle scoopy right hit
FORCE_NO_SYMBOL $6F1B
FORCE_SYMBOL $6F1E scoopEnemy1
FORCE_SYMBOL $6F21 removeScoopRest
FORCE_SYMBOL $6F24 playerBonusActive
COMMENT $6F27 shield saved player (from all shots)
FORCE_SYMBOL $6F27 BITFIELD_SHIELD
FORCE_SYMBOL $6F2D BITFIELD_ARMOR
COMMENT $6F2F armor saved player for one shot
FORCE_SYMBOL $6F35 playerBonusActive
FORCE_SYMBOL $6F38 playerBonusActive
FORCE_SYMBOL $6F3D BITFIELD_SHIELD
FORCE_SYMBOL $6F3F playerBonusActive
COMMENT $6F42 1 secpnd
FORCE_NO_SYMBOL $6F42
FORCE_SYMBOL $6F47 playerBonusCounter
FORCE_SYMBOL $6F4A notHit_Shot_removeShot
COMMENT_LINE $6F4D update posiition and
COMMENT_LINE $6F4D should y add not be fixed?
FORCE_NO_SYMBOL $6F50
FORCE_NO_SYMBOL $6F5B
FORCE_SYMBOL $6F67 random_seed
FORCE_NO_SYMBOL $6F6D
FORCE_SYMBOL $6F6F random_seed
FORCE_NO_SYMBOL $6F72
FORCE_SYMBOL $6F74 DIRECTION_CHANGE_DELAY
FORCE_NO_SYMBOL $6F78
FORCE_SYMBOL $6F7A playerXpos
FORCE_NO_SYMBOL $6F8C
FORCE_SYMBOL $6F8E VIA_int_flags
COMMENT $0000 ensure shiftreg is 0
COMMENT $0000 Clear shift register (blank output)
COMMENT_LINE $0000 first line
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Clear T1H
COMMENT $0000 Send Y to A/D
COMMENT $0000 Enable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Enable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear T1H
COMMENT $0000 Enable mux
COMMENT $0000 Send X to A/D
COMMENT $0000 Clear shift register (blank output)
COMMENT $0000 Clear T1H
COMMENT $6F92 ensure shiftreg is 0
COMMENT $6F93 Clear shift register (blank output)
FORCE_SYMBOL $6F93 VIA_shift_reg
FORCE_NO_SYMBOL $6F95
FORCE_SYMBOL $6F97 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $6F99
FORCE_NO_SYMBOL $6F9B
FORCE_SYMBOL $6F9D VIA_int_flags
COMMENT_LINE $6FA2 first line
COMMENT $6FA2 Send Y to A/D
FORCE_SYMBOL $6FA2 VIA_port_a
COMMENT $6FA4 Enable mux
FORCE_SYMBOL $6FA4 VIA_port_b
FORCE_SYMBOL $6FA6 VIA_port_b
COMMENT $6FA8 Send X to A/D
FORCE_SYMBOL $6FA8 VIA_port_a
COMMENT $6FAA Clear shift register (blank output)
FORCE_SYMBOL $6FAA VIA_shift_reg
COMMENT $6FAC Clear T1H
FORCE_SYMBOL $6FAC VIA_t1_cnt_hi
COMMENT $6FAE Send Y to A/D
FORCE_SYMBOL $6FAE VIA_port_a
COMMENT $6FB0 Enable mux
FORCE_SYMBOL $6FB0 VIA_port_b
FORCE_SYMBOL $6FB2 VIA_port_b
COMMENT $6FB6 Send X to A/D
FORCE_SYMBOL $6FB6 VIA_port_a
COMMENT $6FB8 Clear T1H
FORCE_SYMBOL $6FB8 VIA_t1_cnt_hi
COMMENT $6FBB Enable mux
FORCE_SYMBOL $6FBB VIA_port_b
FORCE_SYMBOL $6FBD VIA_port_b
COMMENT $6FC0 Send X to A/D
FORCE_SYMBOL $6FC0 VIA_port_a
COMMENT $6FC2 Clear T1H
FORCE_SYMBOL $6FC2 VIA_t1_cnt_hi
COMMENT $6FC6 Enable mux
FORCE_SYMBOL $6FC6 VIA_port_b
FORCE_SYMBOL $6FC8 VIA_port_b
COMMENT $6FCB Send X to A/D
FORCE_SYMBOL $6FCB VIA_port_a
COMMENT $6FCD Clear shift register (blank output)
FORCE_SYMBOL $6FCD VIA_shift_reg
COMMENT $6FCF Clear T1H
FORCE_SYMBOL $6FCF VIA_t1_cnt_hi
FORCE_NO_SYMBOL $6FD1
FORCE_SYMBOL $6FD3 VIA_t1_cnt_lo
FORCE_SYMBOL $6FD5 random_seed
FORCE_NO_SYMBOL $6FDB
FORCE_SYMBOL $6FDD random_seed
FORCE_NO_SYMBOL $6FE0
COMMENT $6FE2 length of "tail" of missile
FORCE_NO_SYMBOL $6FE2
COMMENT_LINE $6FE4 halfing the difference ensures we do not corss the byte bonudary!
FORCE_SYMBOL $6FE7 tmp1
FORCE_SYMBOL $6FEA playerXpos
FORCE_SYMBOL $6FEE tmp1
COMMENT $6FF2 Send Y to A/D
FORCE_SYMBOL $6FF2 VIA_port_a
COMMENT $6FF5 Enable mux
FORCE_SYMBOL $6FF5 VIA_port_b
FORCE_SYMBOL $6FF7 VIA_port_b
COMMENT $6FF9 Send X to A/D
FORCE_SYMBOL $6FF9 VIA_port_a
FORCE_NO_SYMBOL $6FFB
COMMENT $6FFD Clear shift register (blank output)
FORCE_SYMBOL $6FFD VIA_shift_reg
COMMENT $6FFF Clear T1H
FORCE_SYMBOL $6FFF VIA_t1_cnt_hi
FORCE_NO_SYMBOL $7007
COMMENT $700A Clear shift register (blank output)
FORCE_SYMBOL $700A VIA_shift_reg
COMMENT $700C preload next user stack
COMMENT $700F /BLANK low and /ZERO low
FORCE_SYMBOL $700F VIA_cntl
COMMENT_LINE $7011 cranky missile behavour of low shots after missiles
COMMENT $7013 Send Y to A/D
FORCE_SYMBOL $7013 VIA_port_a
COMMENT $7016 Enable mux
FORCE_SYMBOL $7016 VIA_port_b
FORCE_SYMBOL $7018 VIA_port_b
FORCE_SYMBOL $701A gameScale
FORCE_SYMBOL $701D VIA_t1_cnt_lo
COMMENT $701F (D = y,x, pc = next object)
COMMENT_LINE $7021 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7021 delta
FORCE_SYMBOL $7021 X_POS16
COMMENT $7023 delta
FORCE_SYMBOL $7025 X_POS16
COMMENT $7029 bullet speed
FORCE_SYMBOL $7029 tmp1
COMMENT $702E delta
FORCE_SYMBOL $702E X_POS16
FORCE_SYMBOL $7030 bulletSpawnAt
FORCE_SYMBOL $7033 Y_POS_NOW16
FORCE_SYMBOL $7035 X_POS_NOW16
FORCE_SYMBOL $703B missileAtPlayerBehaviour
FORCE_SYMBOL $703E BEHAVIOUR
COMMENT_LINE $7041 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7041 Alphabet28
FORCE_NO_SYMBOL $7041
COMMENT $7046 Alphabet1
FORCE_NO_SYMBOL $7046
COMMENT $704B Alphabet4
FORCE_NO_SYMBOL $704B
COMMENT $7050 Alphabet6
FORCE_NO_SYMBOL $7050
COMMENT $7055 Alphabet7
FORCE_NO_SYMBOL $7055
COMMENT $705A Alphabet8
FORCE_NO_SYMBOL $705A
COMMENT $705F Alphabet27
FORCE_NO_SYMBOL $705F
COMMENT $7064 Alphabet2
FORCE_NO_SYMBOL $7064
COMMENT $7069 Alphabet14
FORCE_NO_SYMBOL $7069
COMMENT $706E Alphabet22
FORCE_NO_SYMBOL $706E
COMMENT $7073 Alphabet0
FORCE_NO_SYMBOL $7073
COMMENT $7078 Alphabet3
FORCE_NO_SYMBOL $7078
COMMENT $707D Alphabet17
FORCE_NO_SYMBOL $707D
COMMENT $7082 Alphabet20
FORCE_NO_SYMBOL $7082
COMMENT $7087 Alphabet13
FORCE_NO_SYMBOL $7087
COMMENT $708E Store Y in D/A register
FORCE_SYMBOL $708E VIA_port_a
COMMENT $7090 Blank low, zero high?
FORCE_NO_SYMBOL $7090
FORCE_SYMBOL $7092 VIA_cntl
COMMENT $7095 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7095 VIA_port_b
COMMENT $7097 y must be set more than xx cycles on some vectrex
COMMENT $7098 Disable mux
FORCE_SYMBOL $7098 VIA_port_b
COMMENT $709A Store X in D/A register
FORCE_SYMBOL $709A VIA_port_a
COMMENT $709C enable timer
FORCE_SYMBOL $709C VIA_t1_cnt_hi
FORCE_SYMBOL $70A0 SHOT_PLAYER_Y_TEST_MIN
COMMENT_LINE $70A4 ;;;;;;;;;;;
COMMENT_LINE $70A4 first test, if we are not totally out of "whack"
COMMENT $70A4 have pos different signs?
FORCE_SYMBOL $70A4 playerXpos
COMMENT $70A7 no than everything is fine
COMMENT_LINE $70AE if different sign and absolut > 60 (or any other big number) - than on different side of screen!
FORCE_NO_SYMBOL $70AE
COMMENT $70B0 sign compare OUT of Bounds!
COMMENT_LINE $70B2 ;;;;;;;;;;;
FORCE_SYMBOL $70B4 playerXpos
COMMENT_LINE $70BA if b <= player width -> bullet hit player
COMMENT_LINE $70BA else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $70BA SHOT_PLAYER_X_RANGE
COMMENT_LINE $70C2 if b <= player width -> bullet hit player
COMMENT_LINE $70C2 else if b < scoopy width -> bullet hits left scoopy
FORCE_SYMBOL $70C2 SHOT_PLAYER_X_RANGE
COMMENT_LINE $70C8 should y add not be fixed?
FORCE_NO_SYMBOL $70D4
FORCE_SYMBOL $70DA LETTERSIZE_BOSS3
FORCE_SYMBOL $70DC VIA_t1_cnt_lo
FORCE_SYMBOL $70DE BackFromDraw_Vlp0_0
FORCE_SYMBOL $70E1 Draw_Vlp0_0
COMMENT $70E4 preload next user stack
COMMENT $70E7 (D = y,x, pc = next object)
FORCE_SYMBOL $70E9 removeShot
COMMENT_LINE $70EC bank 2
COMMENT_LINE $70EC all bonus stuff is in bank 0
COMMENT_LINE $70EC bank 3
COMMENT_LINE $70EC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $70EC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $70EC new list object to U
COMMENT_LINE $70EC leaves with flags = to result
COMMENT_LINE $70EC (positive = not successfull) ROM
COMMENT_LINE $70EC negative = successfull RAM
COMMENT_LINE $70EC destroys d, u
FORCE_SYMBOL $70EC starlist_empty_head
FORCE_SYMBOL $70EF OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $70F5 set the new empty head
COMMENT $70F5 the next in out empty list will be the new
FORCE_SYMBOL $70F5 NEXT_STAR_OBJECT
COMMENT $70F7 head of our empty list
FORCE_SYMBOL $70F7 starlist_empty_head
COMMENT_LINE $70FA load last of current object list
COMMENT_LINE $70FA the old head is always our next
FORCE_SYMBOL $70FA starlist_objects_head
FORCE_SYMBOL $70FD NEXT_STAR_OBJECT
COMMENT_LINE $70FF newobject is always head
FORCE_SYMBOL $70FF starlist_objects_head
COMMENT $7102 and remember that we created a new object
FORCE_SYMBOL $7102 starCount
COMMENT_LINE $7106 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7106 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7106 "create" (or rather get) new object
COMMENT $7108 pointer to new object now in X also
FORCE_NO_SYMBOL $7108
FORCE_SYMBOL $710A OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $7110 bpl spawnBonus_end ; if positve - there is no object left, jump out
COMMENT_LINE $7110 copy and initialze new enemy
FORCE_SYMBOL $7110 simpleStarBehaviour
FORCE_SYMBOL $7113 BEHAVIOUR
FORCE_SYMBOL $7115 random_seed
FORCE_NO_SYMBOL $711B
FORCE_SYMBOL $711D random_seed
FORCE_SYMBOL $7120 Y1_POS
FORCE_SYMBOL $7122 random_seed
FORCE_NO_SYMBOL $7128
FORCE_SYMBOL $712A random_seed
FORCE_SYMBOL $712D Y2_POS
FORCE_SYMBOL $712F random_seed
FORCE_NO_SYMBOL $7135
FORCE_SYMBOL $7137 random_seed
FORCE_SYMBOL $713A Y3_POS
FORCE_SYMBOL $713C random_seed
FORCE_NO_SYMBOL $7142
FORCE_SYMBOL $7144 random_seed
FORCE_SYMBOL $7147 Y4_POS
FORCE_SYMBOL $7149 random_seed
FORCE_NO_SYMBOL $714F
FORCE_SYMBOL $7151 random_seed
FORCE_SYMBOL $7154 X1_POS
FORCE_SYMBOL $7156 TWINKLE_AND
FORCE_SYMBOL $7158 TWINKLE_OR
FORCE_SYMBOL $715A TWINKLE
FORCE_SYMBOL $715C random_seed
FORCE_NO_SYMBOL $7162
FORCE_SYMBOL $7164 random_seed
FORCE_SYMBOL $7167 X2_POS
FORCE_SYMBOL $7169 random_seed
FORCE_NO_SYMBOL $716F
FORCE_SYMBOL $7171 random_seed
FORCE_SYMBOL $7174 X3_POS
FORCE_SYMBOL $7176 random_seed
FORCE_NO_SYMBOL $717C
FORCE_SYMBOL $717E random_seed
FORCE_SYMBOL $7181 X4_POS
FORCE_SYMBOL $7183 doWarpFailure
COMMENT_LINE $7189 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $718B simpleStarBehaviourHS
FORCE_SYMBOL $718E BEHAVIOUR
FORCE_SYMBOL $7190 random_seed
FORCE_NO_SYMBOL $7196
FORCE_SYMBOL $7198 random_seed
FORCE_NO_SYMBOL $719B
FORCE_SYMBOL $719D RADIUS
COMMENT_LINE $71A0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $71A0 simpleStarBehaviour2
FORCE_SYMBOL $71A3 BEHAVIOUR
FORCE_SYMBOL $71A5 random_seed2
FORCE_NO_SYMBOL $71AB
FORCE_SYMBOL $71AD random_seed2
FORCE_NO_SYMBOL $71B0
FORCE_NO_SYMBOL $71B2
FORCE_SYMBOL $71B4 TWINKLE
COMMENT_LINE $71B7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $71B7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $71B7 1 ;;;
COMMENT $71B7 Store Y in D/A register
FORCE_SYMBOL $71B7 VIA_port_a
COMMENT $71B9 Blank low, zero high?
FORCE_NO_SYMBOL $71B9
FORCE_SYMBOL $71BB VIA_cntl
COMMENT $71BE Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $71BE VIA_port_b
COMMENT $71C0 y must be set more than xx cycles on some vectrex
COMMENT $71C1 Disable mux
FORCE_SYMBOL $71C1 VIA_port_b
COMMENT $71C3 Store X in D/A register
FORCE_SYMBOL $71C3 VIA_port_a
COMMENT $71C5 enable timer
FORCE_SYMBOL $71C5 VIA_t1_cnt_hi
FORCE_SYMBOL $71C7 in_moveFlag
FORCE_SYMBOL $71D2 random_seed
FORCE_NO_SYMBOL $71D8
FORCE_SYMBOL $71DA random_seed
FORCE_SYMBOL $71DF TWINKLE_AND
FORCE_SYMBOL $71E1 TWINKLE_OR
FORCE_SYMBOL $71E5 tacScan
FORCE_NO_SYMBOL $71EE
FORCE_SYMBOL $71F0 VIA_int_flags
COMMENT $71F4 Store intensity in D/A
FORCE_SYMBOL $71F4 VIA_port_a
COMMENT $71F6 mux disabled channel 2
FORCE_NO_SYMBOL $71F6
FORCE_SYMBOL $71F9 VIA_port_b
COMMENT $71FB mux enabled channel 2
FORCE_SYMBOL $71FB VIA_port_b
COMMENT $71FD turn off mux
FORCE_SYMBOL $71FD VIA_port_b
FORCE_SYMBOL $71FF STAR_SHIFT
FORCE_SYMBOL $7201 VIA_shift_reg
FORCE_NO_SYMBOL $7203
COMMENT $7205 /BLANK low and /ZERO low
FORCE_SYMBOL $7205 VIA_cntl
FORCE_NO_SYMBOL $7207
FORCE_SYMBOL $720A VIA_port_b
COMMENT_LINE $720C 2 ;;;
COMMENT $720E Store Y in D/A register
FORCE_SYMBOL $720E VIA_port_a
COMMENT $7210 Blank low, zero high?
FORCE_NO_SYMBOL $7210
FORCE_SYMBOL $7212 VIA_cntl
COMMENT $7215 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7215 VIA_port_b
COMMENT $7217 y must be set more than xx cycles on some vectrex
COMMENT $7218 Disable mux
FORCE_SYMBOL $7218 VIA_port_b
COMMENT $721A Store X in D/A register
FORCE_SYMBOL $721A VIA_port_a
COMMENT $721C enable timer
FORCE_SYMBOL $721C VIA_t1_cnt_hi
FORCE_SYMBOL $7222 random_seed
FORCE_NO_SYMBOL $7228
FORCE_SYMBOL $722A random_seed
FORCE_SYMBOL $722F TWINKLE_AND
FORCE_SYMBOL $7231 TWINKLE_OR
FORCE_SYMBOL $7235 tacScan
FORCE_SYMBOL $723C STAR_SHIFT
FORCE_NO_SYMBOL $723E
FORCE_SYMBOL $7240 VIA_int_flags
FORCE_SYMBOL $7244 VIA_shift_reg
FORCE_NO_SYMBOL $7246
COMMENT $7248 /BLANK low and /ZERO low
FORCE_SYMBOL $7248 VIA_cntl
FORCE_NO_SYMBOL $724A
FORCE_SYMBOL $724D VIA_port_b
COMMENT_LINE $724F 3 ;;;
COMMENT $7251 Store Y in D/A register
FORCE_SYMBOL $7251 VIA_port_a
COMMENT $7253 Blank low, zero high?
FORCE_NO_SYMBOL $7253
FORCE_SYMBOL $7255 VIA_cntl
COMMENT $7258 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7258 VIA_port_b
COMMENT $725A y must be set more than xx cycles on some vectrex
COMMENT $725B Disable mux
FORCE_SYMBOL $725B VIA_port_b
COMMENT $725D Store X in D/A register
FORCE_SYMBOL $725D VIA_port_a
COMMENT $725F enable timer
FORCE_SYMBOL $725F VIA_t1_cnt_hi
FORCE_SYMBOL $7265 random_seed
FORCE_NO_SYMBOL $726B
FORCE_SYMBOL $726D random_seed
FORCE_SYMBOL $7272 TWINKLE_AND
FORCE_SYMBOL $7274 TWINKLE_OR
FORCE_SYMBOL $7278 tacScan
FORCE_SYMBOL $727F STAR_SHIFT
FORCE_NO_SYMBOL $7281
FORCE_SYMBOL $7283 VIA_int_flags
FORCE_SYMBOL $7287 VIA_shift_reg
FORCE_NO_SYMBOL $7289
COMMENT $728B /BLANK low and /ZERO low
FORCE_SYMBOL $728B VIA_cntl
FORCE_NO_SYMBOL $728D
FORCE_SYMBOL $7290 VIA_port_b
COMMENT_LINE $7292 4 ;;;
COMMENT $7294 Store Y in D/A register
FORCE_SYMBOL $7294 VIA_port_a
COMMENT $7296 Blank low, zero high?
FORCE_NO_SYMBOL $7296
FORCE_SYMBOL $7298 VIA_cntl
COMMENT $729B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $729B VIA_port_b
COMMENT $729D y must be set more than xx cycles on some vectrex
COMMENT $729E Disable mux
FORCE_SYMBOL $729E VIA_port_b
COMMENT $72A0 Store X in D/A register
FORCE_SYMBOL $72A0 VIA_port_a
COMMENT $72A2 enable timer
FORCE_SYMBOL $72A2 VIA_t1_cnt_hi
FORCE_SYMBOL $72A8 random_seed
FORCE_NO_SYMBOL $72AE
FORCE_SYMBOL $72B0 random_seed
FORCE_SYMBOL $72B5 TWINKLE_AND
FORCE_SYMBOL $72B7 TWINKLE_OR
FORCE_SYMBOL $72BB tacScan
FORCE_SYMBOL $72C2 STAR_SHIFT
COMMENT $72C4 preload next user stack
FORCE_NO_SYMBOL $72C7
FORCE_SYMBOL $72C9 VIA_int_flags
FORCE_SYMBOL $72CD VIA_shift_reg
COMMENT_LINE $72CF end
COMMENT_LINE $72CF clean up
FORCE_NO_SYMBOL $72CF
COMMENT $72D1 /BLANK low and /ZERO low
FORCE_SYMBOL $72D1 VIA_cntl
FORCE_NO_SYMBOL $72D3
FORCE_SYMBOL $72D6 VIA_port_b
COMMENT $72D8 (D = y,x, pc = next object)
COMMENT_LINE $72DA RNG must be first star!
COMMENT_LINE $72DA 1 ;;;
FORCE_SYMBOL $72DA in_moveFlag
COMMENT_LINE $72DD ;;;;;
COMMENT_LINE $72DD ;;;;;
COMMENT_LINE $72DD THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $72DD ;;;;;
COMMENT_LINE $72DD this whole block does the player movement according to current joystick data
COMMENT_LINE $72DD the testing whether the end of the screen is reached seems dumb - can I do that better?
FORCE_SYMBOL $72DD Vec_Joy_1_X
COMMENT $72E4 half a pixel per "move"
FORCE_SYMBOL $72E4 playerXpos
FORCE_SYMBOL $72E7 playerSpeed
FORCE_NO_SYMBOL $72EA
FORCE_SYMBOL $72F0 playerXpos
COMMENT $72F5 half a pixel per "move"
FORCE_SYMBOL $72F5 playerXpos
FORCE_SYMBOL $72F8 playerSpeed
FORCE_NO_SYMBOL $72FB
FORCE_SYMBOL $7301 playerXpos
FORCE_SYMBOL $7308 random_seed
FORCE_NO_SYMBOL $730E
FORCE_SYMBOL $7310 random_seed
FORCE_SYMBOL $7315 TWINKLE_AND
FORCE_SYMBOL $7317 TWINKLE_OR
FORCE_SYMBOL $731B tacScan
FORCE_NO_SYMBOL $7324
FORCE_SYMBOL $7326 VIA_int_flags
COMMENT $732A Store intensity in D/A
FORCE_SYMBOL $732A VIA_port_a
COMMENT $732C mux disabled channel 2
FORCE_NO_SYMBOL $732C
FORCE_SYMBOL $732F VIA_port_b
COMMENT $7331 mux enabled channel 2
FORCE_SYMBOL $7331 VIA_port_b
COMMENT $7333 turn off mux
FORCE_SYMBOL $7333 VIA_port_b
FORCE_SYMBOL $7335 STAR_SHIFT
FORCE_SYMBOL $7337 VIA_shift_reg
FORCE_NO_SYMBOL $7339
COMMENT $733B /BLANK low and /ZERO low
FORCE_SYMBOL $733B VIA_cntl
FORCE_NO_SYMBOL $733D
FORCE_SYMBOL $7340 VIA_port_b
COMMENT_LINE $7342 2 ;;;
COMMENT $7344 Store Y in D/A register
FORCE_SYMBOL $7344 VIA_port_a
COMMENT $7346 Blank low, zero high?
FORCE_NO_SYMBOL $7346
FORCE_SYMBOL $7348 VIA_cntl
COMMENT $734B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $734B VIA_port_b
COMMENT $734D y must be set more than xx cycles on some vectrex
COMMENT $734E Disable mux
FORCE_SYMBOL $734E VIA_port_b
COMMENT $7350 Store X in D/A register
FORCE_SYMBOL $7350 VIA_port_a
COMMENT $7352 enable timer
FORCE_SYMBOL $7352 VIA_t1_cnt_hi
COMMENT_LINE $7354 ;;;;;
COMMENT_LINE $7354 ;;;;;
COMMENT_LINE $7354 THIS BLOCK CAN BE HANDLED IN SOME MOVE
COMMENT_LINE $7354 ;;;;;
COMMENT_LINE $7354 do the "wobbling" of enemies in waiting position
FORCE_NO_SYMBOL $7357
COMMENT $735B was tst
FORCE_SYMBOL $735B globalPatternWobbleDirection
FORCE_SYMBOL $7360 globalPatternWobble
FORCE_SYMBOL $7363 globalPatternWobble
FORCE_SYMBOL $736A globalPatternWobbleDirection
FORCE_SYMBOL $736F globalPatternWobble
FORCE_SYMBOL $7372 globalPatternWobble
FORCE_NO_SYMBOL $7375
FORCE_SYMBOL $7379 globalPatternWobbleDirection
FORCE_SYMBOL $7380 random_seed
FORCE_NO_SYMBOL $7386
FORCE_SYMBOL $7388 random_seed
FORCE_SYMBOL $738D TWINKLE_AND
FORCE_SYMBOL $738F TWINKLE_OR
FORCE_SYMBOL $7393 tacScan
FORCE_SYMBOL $739A STAR_SHIFT
FORCE_NO_SYMBOL $739C
FORCE_SYMBOL $739E VIA_int_flags
FORCE_SYMBOL $73A2 VIA_shift_reg
FORCE_NO_SYMBOL $73A4
COMMENT $73A6 /BLANK low and /ZERO low
FORCE_SYMBOL $73A6 VIA_cntl
FORCE_NO_SYMBOL $73A8
FORCE_SYMBOL $73AB VIA_port_b
COMMENT_LINE $73AD 3 ;;;
COMMENT $73AF Store Y in D/A register
FORCE_SYMBOL $73AF VIA_port_a
COMMENT $73B1 Blank low, zero high?
FORCE_NO_SYMBOL $73B1
FORCE_SYMBOL $73B3 VIA_cntl
COMMENT $73B6 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $73B6 VIA_port_b
COMMENT $73B8 y must be set more than xx cycles on some vectrex
COMMENT $73B9 Disable mux
FORCE_SYMBOL $73B9 VIA_port_b
COMMENT $73BB Store X in D/A register
FORCE_SYMBOL $73BB VIA_port_a
COMMENT $73BD enable timer
FORCE_SYMBOL $73BD VIA_t1_cnt_hi
FORCE_SYMBOL $73BF testShot
FORCE_SYMBOL $73C2 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $73C8 if last time something was hit and
COMMENT_LINE $73C8 the bullet is still active
COMMENT_LINE $73C8 do not switch - we probably will hit again!
COMMENT $73C8 was tst
FORCE_SYMBOL $73C8 explosionSound
FORCE_SYMBOL $73CD NEXT_SHOT_OBJECT
FORCE_SYMBOL $73CF OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $73D5 enemyMINY
FORCE_SYMBOL $73D8 Y_POS
FORCE_SYMBOL $73DE playershotlist_objects_head
FORCE_SYMBOL $73E1 OBJECT_LIST_COMPARE_ADDRESS
FORCE_NO_SYMBOL $73E7
FORCE_SYMBOL $73EA testShot
FORCE_SYMBOL $73F2 Y_POS
FORCE_SYMBOL $73F4 shot_y_radius_corrdction
FORCE_SYMBOL $73F9 SHOT_RADIUS
FORCE_SYMBOL $73FD SHOT_RADIUS1
FORCE_SYMBOL $7401 SHOT_RADIUS4
FORCE_NO_SYMBOL $7405
FORCE_SYMBOL $7409 SHOT_RADIUS3
FORCE_NO_SYMBOL $740D
FORCE_SYMBOL $7411 SHOT_RADIUS2
FORCE_NO_SYMBOL $7415
FORCE_SYMBOL $7419 SHOT_RADIUS6
FORCE_NO_SYMBOL $741D
COMMENT_LINE $7421 must be 1 or 5, which are "equal" in radius
FORCE_NO_SYMBOL $7421
COMMENT $7423 tmp 1 is current 1 radius for scoopy check
FORCE_SYMBOL $7423 tmp3_tmp
COMMENT $7426 make x 0 based 0 - 255
FORCE_NO_SYMBOL $7426
COMMENT $7428 tmp2_tmp is zero based shot x position
FORCE_SYMBOL $7428 tmp2_tmp
FORCE_SYMBOL $742B tmp3_tmp
FORCE_SYMBOL $742E tmp3_tmp
FORCE_SYMBOL $7431 tmp3_tmp
COMMENT_LINE $7434 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $7434 might be OOB
COMMENT_LINE $7434 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $7434 and take as lowest position "0"
FORCE_SYMBOL $7434 tmp2_tmp
FORCE_NO_SYMBOL $7439
COMMENT $743E reload zero based shot x position
FORCE_SYMBOL $743E tmp2_tmp
FORCE_SYMBOL $7441 tmp3_tmp
FORCE_SYMBOL $7444 tmp3_tmp
FORCE_SYMBOL $7447 tmp3_tmp
COMMENT_LINE $744A in b now 3 radii to the right of zero based shot position
COMMENT_LINE $744A might be OOB
COMMENT_LINE $744A therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $744A and take as highest position "255"
FORCE_SYMBOL $744A tmp2_tmp
FORCE_NO_SYMBOL $744F
COMMENT_LINE $7454 test for center radii are done
COMMENT_LINE $7454 with scoopy unmodified x radius
COMMENT_LINE $7454 correct it!
COMMENT_LINE $7454 radii must be chose, so that
COMMENT_LINE $7454 no overflow/underflow can occur!
COMMENT $7454 reload zero based shot x position
FORCE_SYMBOL $7454 tmp2_tmp
FORCE_SYMBOL $7457 SHOT_RADIUS
COMMENT $745C reload zero based shot x position
FORCE_SYMBOL $745C tmp2_tmp
FORCE_SYMBOL $745F SHOT_RADIUS
COMMENT $7463 max
FORCE_NO_SYMBOL $7463
FORCE_SYMBOL $746C random_seed
FORCE_NO_SYMBOL $7472
FORCE_SYMBOL $7474 random_seed
FORCE_SYMBOL $7479 TWINKLE_AND
FORCE_SYMBOL $747B TWINKLE_OR
FORCE_SYMBOL $747F tacScan
FORCE_SYMBOL $7486 STAR_SHIFT
FORCE_NO_SYMBOL $7488
FORCE_SYMBOL $748A VIA_int_flags
FORCE_SYMBOL $748E VIA_shift_reg
FORCE_NO_SYMBOL $7490
COMMENT $7492 /BLANK low and /ZERO low
FORCE_SYMBOL $7492 VIA_cntl
FORCE_NO_SYMBOL $7494
FORCE_SYMBOL $7497 VIA_port_b
COMMENT_LINE $7499 4 ;;;
COMMENT $749B Store Y in D/A register
FORCE_SYMBOL $749B VIA_port_a
COMMENT $749D Blank low, zero high?
FORCE_NO_SYMBOL $749D
FORCE_SYMBOL $749F VIA_cntl
COMMENT $74A2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $74A2 VIA_port_b
COMMENT $74A4 y must be set more than xx cycles on some vectrex
COMMENT $74A5 Disable mux
FORCE_SYMBOL $74A5 VIA_port_b
COMMENT $74A7 Store X in D/A register
FORCE_SYMBOL $74A7 VIA_port_a
COMMENT $74A9 enable timer
FORCE_SYMBOL $74A9 VIA_t1_cnt_hi
COMMENT_LINE $0000 ....
COMMENT_LINE $0000 always use testShot + 5 for testShot 2
FORCE_NO_SYMBOL $74AB
FORCE_SYMBOL $74AD tmp3_tmp
FORCE_SYMBOL $74B0 testShot
FORCE_SYMBOL $74B3 OBJECT_LIST_COMPARE_ADDRESS
FORCE_SYMBOL $74B9 NEXT_SHOT_OBJECT
FORCE_SYMBOL $74BB OBJECT_LIST_COMPARE_ADDRESS
COMMENT $74C1 was tst
FORCE_SYMBOL $74C1 tmp3_tmp
FORCE_SYMBOL $74C6 tmp3_tmp
FORCE_SYMBOL $74C9 playershotlist_objects_head
COMMENT_LINE $74CC new
FORCE_SYMBOL $74CC OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $74D2 new end
FORCE_SYMBOL $74D5 enemyMINY
FORCE_SYMBOL $74D8 Y_POS
COMMENT $74DC was tst
FORCE_SYMBOL $74DC tmp3_tmp
FORCE_NO_SYMBOL $74E1
FORCE_SYMBOL $74E4 test2Shot
FORCE_SYMBOL $74E7 testShot
FORCE_SYMBOL $74EF OBJECT_LIST_COMPARE_ADDRESS
FORCE_NO_SYMBOL $74F5
FORCE_SYMBOL $74F8 test2Shot
FORCE_SYMBOL $7500 Y_POS
FORCE_SYMBOL $7502 shot_y_radius_corrdction
FORCE_SYMBOL $7507 SHOT_RADIUS
FORCE_SYMBOL $750B SHOT_RADIUS1
FORCE_SYMBOL $750F SHOT_RADIUS4
FORCE_NO_SYMBOL $7513
FORCE_SYMBOL $7517 SHOT_RADIUS3
FORCE_NO_SYMBOL $751B
FORCE_SYMBOL $751F SHOT_RADIUS2
FORCE_NO_SYMBOL $7523
FORCE_SYMBOL $7527 SHOT_RADIUS6
FORCE_NO_SYMBOL $752B
COMMENT_LINE $752F must be 1 or 5, which are "equal" in radius
FORCE_NO_SYMBOL $752F
COMMENT $7531 tmp 1 is current 1 radius for scoopy check
FORCE_SYMBOL $7531 tmp3_tmp
COMMENT $7534 make x 0 based 0 - 255
FORCE_NO_SYMBOL $7534
COMMENT $7536 tmp2_tmp is zero based shot x position
FORCE_SYMBOL $7536 tmp2_tmp
FORCE_SYMBOL $7539 tmp3_tmp
FORCE_SYMBOL $753C tmp3_tmp
FORCE_SYMBOL $753F tmp3_tmp
COMMENT_LINE $7542 in b now 3 radii to the left of zero based shot position
COMMENT_LINE $7542 might be OOB
COMMENT_LINE $7542 therefor check if result is lower than starting position, if no, we are oob
COMMENT_LINE $7542 and take as lowest position "0"
FORCE_SYMBOL $7542 tmp2_tmp
FORCE_NO_SYMBOL $7547
COMMENT $754C reload zero based shot x position
FORCE_SYMBOL $754C tmp2_tmp
FORCE_SYMBOL $754F tmp3_tmp
FORCE_SYMBOL $7552 tmp3_tmp
FORCE_SYMBOL $7555 tmp3_tmp
COMMENT_LINE $7558 in b now 3 radii to the right of zero based shot position
COMMENT_LINE $7558 might be OOB
COMMENT_LINE $7558 therefor check if result is higher than starting position, if no, we are oob
COMMENT_LINE $7558 and take as highest position "255"
FORCE_SYMBOL $7558 tmp2_tmp
FORCE_NO_SYMBOL $755D
COMMENT_LINE $7562 test for center radii are done
COMMENT_LINE $7562 with scoopy unmodified x radius
COMMENT_LINE $7562 correct it!
COMMENT_LINE $7562 radii must be chose, so that
COMMENT_LINE $7562 no overflow/underflow can occur!
COMMENT $7562 reload zero based shot x position
FORCE_SYMBOL $7562 tmp2_tmp
FORCE_SYMBOL $7565 SHOT_RADIUS
COMMENT $756A reload zero based shot x position
FORCE_SYMBOL $756A tmp2_tmp
FORCE_SYMBOL $756D SHOT_RADIUS
COMMENT $7571 max
FORCE_NO_SYMBOL $7571
COMMENT_LINE $7576 veryify that testShot is not the same
COMMENT_LINE $7576 ....
FORCE_NO_SYMBOL $7576
FORCE_SYMBOL $7578 enemyMINY
FORCE_SYMBOL $757F random_seed
FORCE_NO_SYMBOL $7585
FORCE_SYMBOL $7587 random_seed
FORCE_SYMBOL $758C TWINKLE_AND
FORCE_SYMBOL $758E TWINKLE_OR
FORCE_SYMBOL $7592 tacScan
FORCE_SYMBOL $7599 STAR_SHIFT
COMMENT $759B preload next user stack
FORCE_NO_SYMBOL $759E
FORCE_SYMBOL $75A0 VIA_int_flags
FORCE_SYMBOL $75A4 VIA_shift_reg
COMMENT_LINE $75A6 end
COMMENT_LINE $75A6 clean up
FORCE_NO_SYMBOL $75A6
COMMENT $75A8 /BLANK low and /ZERO low
FORCE_SYMBOL $75A8 VIA_cntl
FORCE_NO_SYMBOL $75AA
FORCE_SYMBOL $75AD VIA_port_b
COMMENT $75AF (D = y,x, pc = next object)
COMMENT_LINE $75B1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $75B1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $75B1 adjust number of stars according to
COMMENT_LINE $75B1 current time "left" in round
COMMENT_LINE $75B1 min = 1 Star spawn = 1200 cylces (about)
FORCE_SYMBOL $75B1 starCount
COMMENT $75B4 if only one start, than certainly no reduce
FORCE_NO_SYMBOL $75B4
FORCE_SYMBOL $75B8 t2_rest
COMMENT $75BB 2048 cycvle left
FORCE_NO_SYMBOL $75BB
COMMENT $75BD reduce starts by one
COMMENT $75BF minus 1 since start at 0
FORCE_SYMBOL $75C3 t2_rest
COMMENT $75C6 4096 cycvle left
FORCE_NO_SYMBOL $75C6
COMMENT_LINE $75CD this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $75CD it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $75CD sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $75CD is it the first?
FORCE_SYMBOL $75CD starlist_objects_head
COMMENT $75D0 s pointer to next objext
FORCE_SYMBOL $75D0 NEXT_STAR_OBJECT
COMMENT $75D2 the next object will be the first
FORCE_SYMBOL $75D2 starlist_objects_head
FORCE_SYMBOL $75D5 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $75DB if not - cleaning up of current "working" list is done
FORCE_SYMBOL $75DB starCount
COMMENT $75DE set u free, as new free head
FORCE_SYMBOL $75DE starlist_empty_head
COMMENT $75E2 load to u the next linked list element
FORCE_SYMBOL $75E2 NEXT_STAR_OBJECT
FORCE_SYMBOL $75E5 starlist_empty_head
COMMENT $75E8 (D = y,x)
COMMENT $75E9 and clean up the empties
FORCE_SYMBOL $75E9 starCount
COMMENT $75EC set u free, as new free head
FORCE_SYMBOL $75EC starlist_empty_head
COMMENT $75F0 load to u the next linked list element
FORCE_SYMBOL $75F0 NEXT_STAR_OBJECT
FORCE_SYMBOL $75F3 starlist_empty_head
COMMENT $75F6 (D = y,x)
COMMENT $75F7 start at list head
FORCE_SYMBOL $75F7 starlist_objects_head
COMMENT $75FB am I the next object of the current investigated list element
FORCE_SYMBOL $75FB NEXT_STAR_OBJECT
COMMENT $75FD jup -> jump
COMMENT $75FF otherwise load the next as new current
FORCE_SYMBOL $75FF NEXT_STAR_OBJECT
COMMENT $7602 and search further
COMMENT $7604 we load "our" next object to s
FORCE_SYMBOL $7604 NEXT_STAR_OBJECT
COMMENT $7606 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $7606 NEXT_STAR_OBJECT
FORCE_SYMBOL $7608 OBJECT_LIST_COMPARE_ADDRESS
COMMENT_LINE $760E bpl was_not_first_but_last_re ; of our next was positive, than we were last,
COMMENT $760E if not last, than finish and restore empties
FORCE_SYMBOL $760E starCount
COMMENT $7611 set u free, as new free head
FORCE_SYMBOL $7611 starlist_empty_head
COMMENT $7615 load to u the next linked list element
FORCE_SYMBOL $7615 NEXT_STAR_OBJECT
FORCE_SYMBOL $7618 starlist_empty_head
COMMENT $761B (D = y,x)
COMMENT $0000 Disable mux
COMMENT_LINE $0000 nop 10
COMMENT $761C and clean up the empties
FORCE_SYMBOL $761C starCount
COMMENT $761F set u free, as new free head
FORCE_SYMBOL $761F starlist_empty_head
COMMENT $7623 load to u the next linked list element
FORCE_SYMBOL $7623 NEXT_STAR_OBJECT
FORCE_SYMBOL $7626 starlist_empty_head
COMMENT $7629 (D = y,x)
COMMENT_LINE $762A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $762A 1 ;;;
COMMENT $762A Store Y in D/A register
FORCE_SYMBOL $762A VIA_port_a
COMMENT $762C Blank low, zero high?
FORCE_NO_SYMBOL $762C
FORCE_SYMBOL $762E VIA_cntl
COMMENT $7631 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7631 VIA_port_b
COMMENT $7633 y must be set more than xx cycles on some vectrex
COMMENT $7634 Disable mux
FORCE_SYMBOL $7634 VIA_port_b
COMMENT $7636 Store X in D/A register
FORCE_SYMBOL $7636 VIA_port_a
COMMENT $7638 enable timer
FORCE_SYMBOL $7638 VIA_t1_cnt_hi
FORCE_SYMBOL $763C warpSpeed
FORCE_SYMBOL $7643 random_seed
FORCE_NO_SYMBOL $7649
FORCE_SYMBOL $764B random_seed
FORCE_SYMBOL $7650 TWINKLE_AND
FORCE_SYMBOL $7652 TWINKLE_OR
FORCE_SYMBOL $765C VIA_t1_cnt_lo
FORCE_SYMBOL $765E warpLen
FORCE_SYMBOL $7666 tmp2_tmp
FORCE_NO_SYMBOL $766C
FORCE_SYMBOL $766E VIA_int_flags
COMMENT $7672 Store intensity in D/A
FORCE_SYMBOL $7672 VIA_port_a
COMMENT $7674 mux disabled channel 2
FORCE_NO_SYMBOL $7674
FORCE_SYMBOL $7677 VIA_port_b
COMMENT $7679 mux enabled channel 2
FORCE_SYMBOL $7679 VIA_port_b
COMMENT $767B turn off mux
FORCE_SYMBOL $767B VIA_port_b
FORCE_SYMBOL $767E tmp2_tmp
FORCE_SYMBOL $7681 VIA_port_b
COMMENT $7683 Disable mux
FORCE_SYMBOL $7683 VIA_port_b
FORCE_SYMBOL $7685 VIA_port_a
FORCE_SYMBOL $7687 STAR_SHIFT_WARP
FORCE_SYMBOL $7689 VIA_shift_reg
FORCE_SYMBOL $768B VIA_t1_cnt_hi
FORCE_SYMBOL $768D gameScale
FORCE_SYMBOL $7690 VIA_t1_cnt_lo
COMMENT_LINE $7692 nop 10
FORCE_SYMBOL $7699 VIA_shift_reg
FORCE_NO_SYMBOL $769B
COMMENT $769D /BLANK low and /ZERO low
FORCE_SYMBOL $769D VIA_cntl
FORCE_NO_SYMBOL $769F
FORCE_SYMBOL $76A2 VIA_port_b
COMMENT_LINE $76A4 2 ;;;
COMMENT $76A6 Store Y in D/A register
FORCE_SYMBOL $76A6 VIA_port_a
COMMENT $76A8 Blank low, zero high?
FORCE_NO_SYMBOL $76A8
FORCE_SYMBOL $76AA VIA_cntl
COMMENT $76AD Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $76AD VIA_port_b
COMMENT $76AF y must be set more than xx cycles on some vectrex
COMMENT $76B0 Disable mux
FORCE_SYMBOL $76B0 VIA_port_b
COMMENT $76B2 Store X in D/A register
FORCE_SYMBOL $76B2 VIA_port_a
COMMENT $76B4 enable timer
FORCE_SYMBOL $76B4 VIA_t1_cnt_hi
FORCE_SYMBOL $76B8 warpSpeed
FORCE_SYMBOL $76BF random_seed
FORCE_NO_SYMBOL $76C5
FORCE_SYMBOL $76C7 random_seed
FORCE_SYMBOL $76CC TWINKLE_AND
FORCE_SYMBOL $76CE TWINKLE_OR
FORCE_SYMBOL $76D8 VIA_t1_cnt_lo
FORCE_SYMBOL $76DA warpLen
FORCE_SYMBOL $76E2 tmp2_tmp
FORCE_NO_SYMBOL $76E8
FORCE_SYMBOL $76EA VIA_int_flags
COMMENT $76EE Store intensity in D/A
FORCE_SYMBOL $76EE VIA_port_a
COMMENT $76F0 mux disabled channel 2
FORCE_NO_SYMBOL $76F0
FORCE_SYMBOL $76F3 VIA_port_b
COMMENT $76F5 mux enabled channel 2
FORCE_SYMBOL $76F5 VIA_port_b
COMMENT $76F7 turn off mux
FORCE_SYMBOL $76F7 VIA_port_b
FORCE_SYMBOL $76FA tmp2_tmp
FORCE_SYMBOL $76FD VIA_port_b
COMMENT $76FF Disable mux
FORCE_SYMBOL $76FF VIA_port_b
FORCE_SYMBOL $7701 VIA_port_a
FORCE_SYMBOL $7703 STAR_SHIFT_WARP
FORCE_SYMBOL $7705 VIA_shift_reg
FORCE_SYMBOL $7707 VIA_t1_cnt_hi
FORCE_SYMBOL $7709 gameScale
FORCE_SYMBOL $770C VIA_t1_cnt_lo
COMMENT_LINE $770E nop 10
FORCE_SYMBOL $7715 VIA_shift_reg
FORCE_NO_SYMBOL $7717
COMMENT $7719 /BLANK low and /ZERO low
FORCE_SYMBOL $7719 VIA_cntl
FORCE_NO_SYMBOL $771B
FORCE_SYMBOL $771E VIA_port_b
COMMENT_LINE $7720 3 ;;;
COMMENT $7722 Store Y in D/A register
FORCE_SYMBOL $7722 VIA_port_a
COMMENT $7724 Blank low, zero high?
FORCE_NO_SYMBOL $7724
FORCE_SYMBOL $7726 VIA_cntl
COMMENT $7729 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7729 VIA_port_b
COMMENT $772B y must be set more than xx cycles on some vectrex
COMMENT $772C Disable mux
FORCE_SYMBOL $772C VIA_port_b
COMMENT $772E Store X in D/A register
FORCE_SYMBOL $772E VIA_port_a
COMMENT $7730 enable timer
FORCE_SYMBOL $7730 VIA_t1_cnt_hi
FORCE_SYMBOL $7734 warpSpeed
FORCE_SYMBOL $773B random_seed
FORCE_NO_SYMBOL $7741
FORCE_SYMBOL $7743 random_seed
FORCE_SYMBOL $7748 TWINKLE_AND
FORCE_SYMBOL $774A TWINKLE_OR
FORCE_SYMBOL $7754 VIA_t1_cnt_lo
FORCE_SYMBOL $7756 warpLen
FORCE_SYMBOL $775E tmp2_tmp
FORCE_NO_SYMBOL $7764
FORCE_SYMBOL $7766 VIA_int_flags
COMMENT $776A Store intensity in D/A
FORCE_SYMBOL $776A VIA_port_a
COMMENT $776C mux disabled channel 2
FORCE_NO_SYMBOL $776C
FORCE_SYMBOL $776F VIA_port_b
COMMENT $7771 mux enabled channel 2
FORCE_SYMBOL $7771 VIA_port_b
COMMENT $7773 turn off mux
FORCE_SYMBOL $7773 VIA_port_b
FORCE_SYMBOL $7776 tmp2_tmp
FORCE_SYMBOL $7779 VIA_port_b
COMMENT $777B Disable mux
FORCE_SYMBOL $777B VIA_port_b
FORCE_SYMBOL $777D VIA_port_a
FORCE_SYMBOL $777F STAR_SHIFT_WARP
FORCE_SYMBOL $7781 VIA_shift_reg
FORCE_SYMBOL $7783 VIA_t1_cnt_hi
FORCE_SYMBOL $7785 gameScale
FORCE_SYMBOL $7788 VIA_t1_cnt_lo
COMMENT_LINE $778A nop 10
FORCE_SYMBOL $7791 VIA_shift_reg
FORCE_NO_SYMBOL $7793
COMMENT $7795 /BLANK low and /ZERO low
FORCE_SYMBOL $7795 VIA_cntl
FORCE_NO_SYMBOL $7797
FORCE_SYMBOL $779A VIA_port_b
COMMENT_LINE $779C 4 ;;;
COMMENT $779E Store Y in D/A register
FORCE_SYMBOL $779E VIA_port_a
COMMENT $77A0 Blank low, zero high?
FORCE_NO_SYMBOL $77A0
FORCE_SYMBOL $77A2 VIA_cntl
COMMENT $77A5 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $77A5 VIA_port_b
COMMENT $77A7 y must be set more than xx cycles on some vectrex
COMMENT $77A8 Disable mux
FORCE_SYMBOL $77A8 VIA_port_b
COMMENT $77AA Store X in D/A register
FORCE_SYMBOL $77AA VIA_port_a
COMMENT $77AC enable timer
FORCE_SYMBOL $77AC VIA_t1_cnt_hi
FORCE_SYMBOL $77B0 warpSpeed
FORCE_SYMBOL $77B7 random_seed
FORCE_NO_SYMBOL $77BD
FORCE_SYMBOL $77BF random_seed
FORCE_SYMBOL $77C4 TWINKLE_AND
FORCE_SYMBOL $77C6 TWINKLE_OR
FORCE_SYMBOL $77D0 VIA_t1_cnt_lo
FORCE_SYMBOL $77D2 warpLen
FORCE_SYMBOL $77DA tmp2_tmp
FORCE_NO_SYMBOL $77E0
FORCE_SYMBOL $77E2 VIA_int_flags
COMMENT $77E6 Store intensity in D/A
FORCE_SYMBOL $77E6 VIA_port_a
COMMENT $77E8 mux disabled channel 2
FORCE_NO_SYMBOL $77E8
FORCE_SYMBOL $77EB VIA_port_b
COMMENT $77ED mux enabled channel 2
FORCE_SYMBOL $77ED VIA_port_b
COMMENT $77EF turn off mux
FORCE_SYMBOL $77EF VIA_port_b
FORCE_SYMBOL $77F2 tmp2_tmp
FORCE_SYMBOL $77F5 VIA_port_b
COMMENT $77F7 Disable mux
FORCE_SYMBOL $77F7 VIA_port_b
FORCE_SYMBOL $77F9 VIA_port_a
FORCE_SYMBOL $77FB STAR_SHIFT_WARP
FORCE_SYMBOL $77FD VIA_shift_reg
FORCE_SYMBOL $77FF VIA_t1_cnt_hi
FORCE_SYMBOL $7801 gameScale
FORCE_SYMBOL $7804 VIA_t1_cnt_lo
COMMENT_LINE $7806 nop 10
FORCE_SYMBOL $780D VIA_shift_reg
FORCE_NO_SYMBOL $780F
COMMENT $7811 /BLANK low and /ZERO low
FORCE_SYMBOL $7811 VIA_cntl
FORCE_NO_SYMBOL $7813
FORCE_SYMBOL $7816 VIA_port_b
COMMENT_LINE $7818 end
COMMENT $7818 preload next user stack
COMMENT_LINE $781B clean up
FORCE_NO_SYMBOL $781B
COMMENT $781D /BLANK low and /ZERO low
FORCE_SYMBOL $781D VIA_cntl
FORCE_NO_SYMBOL $781F
FORCE_SYMBOL $7822 VIA_port_b
COMMENT $7824 (D = y,x, pc = next object)
COMMENT_LINE $7826 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7826 2 ;;;
COMMENT $7826 simpleStarBehaviour2Bank2
FORCE_NO_SYMBOL $7826
FORCE_SYMBOL $7829 jmpBank0X
COMMENT $782C preload next user stack
COMMENT_LINE $782F clean up
COMMENT $782F (D = y,x, pc = next object)
COMMENT_LINE $7831 2 ;;;
COMMENT $7831 simpleStarBehaviourHSBank2
FORCE_NO_SYMBOL $7831
FORCE_SYMBOL $7834 jmpBank0X
COMMENT $7837 preload next user stack
COMMENT_LINE $783A clean up
COMMENT $783A (D = y,x, pc = next object)
COMMENT_LINE $783C bank 3
COMMENT_LINE $783C macros only: bank 3
COMMENT_LINE $0000 collision detection player shot -> enemy
COMMENT_LINE $0000 only two shots are tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 in b is still the xcoordinate of the current enemy that is tested for this shot
COMMENT_LINE $0000 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $0000 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $0000 ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $0000 load address of current shot structure to be tested
COMMENT $0000 laser
COMMENT $0000 MIN check is only done with the first to be tested shot
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT $0000 higher y tollerance
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT_LINE $0000 if large object, check if middle shot is zero and than test the correct scoopy instead
COMMENT_LINE $0000 REMOVED since SHOT_RADIUS0 == 0!!!
COMMENT_LINE $0000 cmpa #SHOT_RADIUS0
COMMENT $0000 enemy is on left side of shot
COMMENT $0000 enemy is on right side of shot
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 a zero shot cannot hit! (WAS TST)
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
COMMENT_LINE $0000 center shot is zero - check if a scoopy might hit!
COMMENT $0000 notHitShotIsZero
COMMENT $0000 (was tst)
COMMENT $0000 next game round, play an explosion
COMMENT_LINE $0000 laser
COMMENT_LINE $0000 should I do a "shield" check here, as in object.asm?
COMMENT_LINE $0000 probably yes... but most of the time
COMMENT_LINE $0000 this works out well...
COMMENT_LINE $0000 AND, shrinked shots can sometimes "weazle" through shield enemies
COMMENT_LINE $0000 which I find cool :-)
COMMENT_LINE $0000 ldb      SHOT_RADIUS, x
COMMENT_LINE $0000 five shot is also a "1" time shot
COMMENT $0000 positive is supershot
COMMENT $0000 tst
COMMENT_LINE $0000 ---
COMMENT_LINE $0000 remove 3 points of damage
COMMENT $0000 should be bulletDamage * 2
COMMENT $0000 3 times damage
COMMENT_LINE $0000 remove fullscoopy damage
COMMENT_LINE $0000 and remove scoopy shot
COMMENT $0000 tst
COMMENT_LINE $0000 for easyness I assume always a FULL-1 scoopy shot
COMMENT $0000 3 times damage
COMMENT_LINE $0000 for easyness I assume always a FULL-1 scoopy shot
COMMENT $0000 3 times damage
COMMENT $0000 remove shot, do one damage!
COMMENT_LINE $0000 remove 2 points of damage
COMMENT $0000 2 times
COMMENT_LINE $0000 remove 1 points of damage
COMMENT $0000 1 times
COMMENT $0000 ---------------------------------------------------------------------
COMMENT $0000 should be bulletDamage * 2
COMMENT $0000 should be bulletDamage
COMMENT_LINE $0000 remove 2 points of damage
COMMENT_LINE $0000 remove 1 points of damage
COMMENT $0000 laser = main
COMMENT $0000 y pos
COMMENT $0000 laser = right scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test left
COMMENT $0000 enemy is on left side of left shot
COMMENT_LINE $0000 left HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove shot when shield
COMMENT $0000 remove
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 left scoopy has hit
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT_LINE $0000 left scoopy with more than one bullet
COMMENT_LINE $0000 in a number of bullets in scoopy -2
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 laser = left scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we no there is no left hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test right
COMMENT $0000 enemy is on right side of right shot
COMMENT_LINE $0000 right HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove shot when shield
COMMENT $0000 remove
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 right scoopy has hit
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT_LINE $0000 right scoopy with more than one bullet
COMMENT_LINE $0000 in a number of bullets in scoopy -2
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT $0000 should be bulletDamage
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 collision detection player shot -> enemy
COMMENT_LINE $0000 only two shots are tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $0000 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $0000 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $0000 ergo ALL purpuse negtaive serves no purpose anymore!
COMMENT $0000 laser
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $0000 bugs are also bigger in y dimensions
COMMENT_LINE $0000 but they move so slow - this probably does not
COMMENT_LINE $0000 matter
COMMENT_LINE $0000 anyway - have to test!
COMMENT_LINE $0000 TODO
COMMENT_LINE $0000 ;;;; y done
COMMENT_LINE $0000 xTest
COMMENT $0000 x coordinate enemy now 0 based in b 0-255
COMMENT_LINE $0000 test center
COMMENT $0000 enemy is on left side of shot
COMMENT_LINE $0000 in b 0 based enemy pos
COMMENT $0000 enemy is on right side of shot
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $0000 a zero shot cannot hit! (TST)
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
COMMENT_LINE $0000 ---
COMMENT_LINE $0000 center shot is zero - check if a scoopy might hit!
COMMENT $0000 notHitShotIsZero
COMMENT $0000 (tst)
COMMENT $0000 next game round, play an explosion
COMMENT_LINE $0000 five shot is also a "1" time shot
COMMENT $0000 positive is supershot
COMMENT $0000 TST
COMMENT_LINE $0000 ---
COMMENT_LINE $0000 remove 2 points of damage
COMMENT_LINE $0000 bugs take less damage -> blame vtk!!!
COMMENT_LINE $0000 suba     bulletDamage
COMMENT_LINE $0000 suba #3 ; one is reduced by"ordanary handler
COMMENT_LINE $0000 remove 1 points of damage
COMMENT_LINE $0000 suba     bulletDamage
COMMENT_LINE $0000 suba #2 ; one is reduced by"ordanary handler
COMMENT_LINE $0000 remove 1/2 points of damage
COMMENT_LINE $0000 lda      BUG_ENEMY_HITPOINTS +u_offset1,s
COMMENT_LINE $0000 suba     bulletDamage
COMMENT_LINE $0000 suba #1 ; one is reduced by"ordanary handler
COMMENT $0000 laser = main
COMMENT $0000 y pos
COMMENT $0000 laser = right scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT $0000 correct b for bug compare
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test left
COMMENT $0000 enemy is on left side of left shot
COMMENT_LINE $0000 left HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 remove all scoop shots and do damage for all
COMMENT_LINE $0000 here it means do (scoop shot -1)*damage
COMMENT $0000 set this shot to 0, but keep left
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT $0000 laser = left scoop
COMMENT $0000 assume 10 lower
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 check if there are scoopies
COMMENT $0000 two nibbles
COMMENT $0000 we no there is no left hit possible, because we came from center!
COMMENT_LINE $0000 side shots are lower - test that here...
COMMENT $0000 laser
COMMENT $0000 assume 10 lower
COMMENT $0000 correct b for bug compare
COMMENT_LINE $0000 in b x pos of enemy - 0 based!
COMMENT_LINE $0000 test right
COMMENT $0000 enemy is on right side of right shot
COMMENT_LINE $0000 right HIT!
COMMENT_LINE $0000 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
COMMENT $0000 laser
COMMENT $0000 shotHandleDone_noBoss ;noScoopReduceRight\?
COMMENT_LINE $0000 remove shot when shield
COMMENT_LINE $0000 :::::::::::::::::::::::::
COMMENT_LINE $0000 remove all scoop shots and do damage for all
COMMENT_LINE $0000 here it means do (scoop shot -1)*damage
COMMENT $0000 set this shot to 0, but keep left
COMMENT_LINE $0000 test for radius of shot
COMMENT $0000 jump out to remove this shot entirely
COMMENT $0000 go to enemy "hit" handling
COMMENT_LINE $0000 ..........
COMMENT_LINE $0000 build a testshot to 1
COMMENT_LINE $0000 x can be used
COMMENT_LINE $0000 on a "hit" this may be 0 (null)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 colision detection player shot -> enemy
COMMENT_LINE $0000 only one shot is tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 colision detection player shot -> enemy
COMMENT_LINE $0000 only one shot is tested per game round
COMMENT_LINE $0000 two shots
COMMENT_LINE $0000 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 BUG_SHOT_DELAY_CYCLES  =     50
COMMENT_LINE $0000 perhaps randomize bug shot (only level 99)
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 this is actually a JSR RTS
COMMENT_LINE $0000 without using stack
COMMENT_LINE $0000 PC-return address is kept in U
COMMENT_LINE $783C collision detection player shot -> enemy
COMMENT_LINE $783C only two shots are tested per game round
COMMENT_LINE $783C two shots
COMMENT_LINE $783C main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $783C in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $783C is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $783C all behaviours with negative all purpose do not call col detect
COMMENT_LINE $783C ergo ALL purpuse negtaive serves no purpose anymore!
FORCE_SYMBOL $783C testShot
FORCE_SYMBOL $7843 playerNumberOfBulletsPerShot
COMMENT $7846 laser
FORCE_NO_SYMBOL $7846
FORCE_SYMBOL $784E enemyMINY
FORCE_SYMBOL $7853 enemyMINY
COMMENT_LINE $7856 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $7856 we do not need to test the shot itself for validity!
COMMENT_LINE $7856 yTest
COMMENT_LINE $7861 bugs are also bigger in y dimensions
COMMENT_LINE $7861 but they move so slow - this probably does not
COMMENT_LINE $7861 matter
COMMENT_LINE $7861 anyway - have to test!
COMMENT_LINE $7861 TODO
FORCE_SYMBOL $7861 shotYRadius
COMMENT_LINE $7868 ;;;; y done
COMMENT_LINE $7868 xTest
COMMENT $7868 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $7868
COMMENT_LINE $786A test center
FORCE_SYMBOL $786A tmp1
FORCE_SYMBOL $786D BUG_HIT_X_OFFSET
COMMENT $7872 enemy is on left side of shot
COMMENT_LINE $7876 in b 0 based enemy pos
COMMENT $787B enemy is on right side of shot
COMMENT_LINE $787F ..........
COMMENT_LINE $787F if only scoop shots are left - we can not hit with "own" cannon
COMMENT $787F a zero shot cannot hit! (TST)
FORCE_SYMBOL $787F SHOT_RADIUS
FORCE_SYMBOL $7885 notHit630
FORCE_SYMBOL $7888 backJump
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
COMMENT_LINE $0000 ---
FORCE_SYMBOL $788B BEHAVIOUR
FORCE_NO_SYMBOL $788D
COMMENT_LINE $7893 center shot is zero - check if a scoopy might hit!
FORCE_SYMBOL $7893 tmp1
FORCE_SYMBOL $789D tmp1
COMMENT $78A7 notHitShotIsZero
FORCE_SYMBOL $78A7 notHit630
FORCE_SYMBOL $78AA tmp_isSupershot
COMMENT $78AD (tst)
FORCE_SYMBOL $78AD explosionSound
COMMENT $78B2 next game round, play an explosion
FORCE_SYMBOL $78B2 explosionSound
FORCE_SYMBOL $78B5 SHOT_RADIUS
FORCE_SYMBOL $78B7 SHOT_RADIUS4
FORCE_SYMBOL $78BB SHOT_RADIUS3
FORCE_SYMBOL $78BF SHOT_RADIUS2
FORCE_SYMBOL $78C3 SHOT_RADIUS6
COMMENT_LINE $78C9 five shot is also a "1" time shot
FORCE_SYMBOL $78C9 SHOT_RADIUS5
COMMENT $78CF positive is supershot
FORCE_SYMBOL $78CF tmp_isSupershot
COMMENT $78D2 TST
FORCE_SYMBOL $78D2 SCOOP_SHOTS
FORCE_SYMBOL $78D8 SHOT_RADIUS0
FORCE_SYMBOL $78DA SHOT_RADIUS
FORCE_SYMBOL $78DC shotHandleDone_Bug
COMMENT_LINE $78DF ---
COMMENT_LINE $78DF remove 2 points of damage
COMMENT_LINE $78E1 bugs take less damage -> blame vtk!!!
COMMENT_LINE $78E1 suba     bulletDamage
FORCE_SYMBOL $78E1 bulletDamage
FORCE_SYMBOL $78E4 bulletDamage
COMMENT_LINE $78E7 suba #3 ; one is reduced by"ordanary handler
FORCE_SYMBOL $78E9 isNo5Shot
COMMENT_LINE $78EC remove 1 points of damage
COMMENT_LINE $78EE suba     bulletDamage
FORCE_SYMBOL $78EE bulletDamage
COMMENT_LINE $78F1 suba #2 ; one is reduced by"ordanary handler
FORCE_SYMBOL $78F3 isNo5Shot
COMMENT_LINE $78F6 remove 1/2 points of damage
COMMENT_LINE $78F6 lda      BUG_ENEMY_HITPOINTS +u_offset1,s
COMMENT_LINE $78F6 suba     bulletDamage
FORCE_SYMBOL $78F6 bulletDamage
COMMENT_LINE $78FD suba #1 ; one is reduced by"ordanary handler
FORCE_SYMBOL $78FF isNo5Shot
COMMENT $7902 laser = main
FORCE_SYMBOL $7902 laserTmp2
COMMENT $7907 y pos
FORCE_SYMBOL $7907 laserTmp
FORCE_SYMBOL $790A xCheckOnly630
FORCE_NO_SYMBOL $790D
COMMENT $790F laser = right scoop
FORCE_SYMBOL $790F laserTmp2
COMMENT $7914 assume 10 lower
FORCE_NO_SYMBOL $7914
FORCE_NO_SYMBOL $7918
FORCE_SYMBOL $791A laserTmp
COMMENT_LINE $791F ..........
COMMENT_LINE $791F ..........
COMMENT_LINE $791F check if there are scoopies
COMMENT $791F two nibbles
FORCE_SYMBOL $791F SCOOP_SHOTS
FORCE_NO_SYMBOL $7921
COMMENT $7923 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $7927 side shots are lower - test that here...
FORCE_SYMBOL $7927 playerNumberOfBulletsPerShot
COMMENT $792A laser
FORCE_NO_SYMBOL $792A
COMMENT $7930 assume 10 lower
FORCE_NO_SYMBOL $7930
COMMENT $7939 correct b for bug compare
FORCE_SYMBOL $7939 tmp1
COMMENT_LINE $793C in b x pos of enemy - 0 based!
COMMENT_LINE $793C test left
FORCE_SYMBOL $793C BUG_HIT_X_OFFSET
COMMENT $7941 enemy is on left side of left shot
COMMENT_LINE $7945 left HIT!
COMMENT_LINE $7945 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $7945 notHit630
FORCE_SYMBOL $7948 backJump
FORCE_SYMBOL $794B playerNumberOfBulletsPerShot
COMMENT $794E laser
FORCE_NO_SYMBOL $794E
COMMENT $7950 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $7954 :::::::::::::::::::::::::
COMMENT_LINE $7954 remove shot when shield
COMMENT_LINE $7954 remove all scoop shots and do damage for all
COMMENT_LINE $7954 here it means do (scoop shot -1)*damage
FORCE_SYMBOL $7954 SCOOP_SHOTS
FORCE_SYMBOL $795B bulletDamage
FORCE_SYMBOL $7964 SCOOP_SHOTS
COMMENT $7966 set this shot to 0, but keep left
FORCE_NO_SYMBOL $7966
FORCE_SYMBOL $7968 SCOOP_SHOTS
COMMENT_LINE $796E test for radius of shot
FORCE_SYMBOL $796E SHOT_RADIUS
COMMENT $7970 jump out to remove this shot entirely
COMMENT $7974 go to enemy "hit" handling
FORCE_SYMBOL $7974 shotHandleDone_Bug
FORCE_NO_SYMBOL $7977
COMMENT $7979 laser = left scoop
FORCE_SYMBOL $7979 laserTmp2
COMMENT $797E assume 10 lower
FORCE_NO_SYMBOL $797E
FORCE_NO_SYMBOL $7982
FORCE_SYMBOL $7984 laserTmp
COMMENT_LINE $7989 ..........
COMMENT_LINE $7989 ..........
COMMENT_LINE $7989 check if there are scoopies
COMMENT $7989 two nibbles
FORCE_SYMBOL $7989 SCOOP_SHOTS
FORCE_NO_SYMBOL $798B
COMMENT $798D we no there is no left hit possible, because we came from center!
COMMENT_LINE $798F side shots are lower - test that here...
FORCE_SYMBOL $798F playerNumberOfBulletsPerShot
COMMENT $7992 laser
FORCE_NO_SYMBOL $7992
COMMENT $7998 assume 10 lower
FORCE_NO_SYMBOL $7998
COMMENT $799F correct b for bug compare
FORCE_SYMBOL $799F tmp1
COMMENT_LINE $79A2 in b x pos of enemy - 0 based!
COMMENT_LINE $79A2 test right
FORCE_SYMBOL $79A2 BUG_HIT_X_OFFSET
COMMENT $79A7 enemy is on right side of right shot
COMMENT_LINE $79A9 right HIT!
COMMENT_LINE $79A9 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $79A9 notHit630
FORCE_SYMBOL $79AC backJump
FORCE_SYMBOL $79AF playerNumberOfBulletsPerShot
COMMENT $79B2 laser
FORCE_NO_SYMBOL $79B2
COMMENT $79B4 shotHandleDone_noBoss ;noScoopReduceRight\?
FORCE_SYMBOL $79B8 SCOOP_SHOTS
FORCE_NO_SYMBOL $79BA
FORCE_SYMBOL $79BC SCOOP_SHOTS
COMMENT_LINE $79C4 remove shot when shield
COMMENT_LINE $79C4 :::::::::::::::::::::::::
COMMENT_LINE $79C4 remove all scoop shots and do damage for all
COMMENT_LINE $79C4 here it means do (scoop shot -1)*damage
FORCE_SYMBOL $79C4 SCOOP_SHOTS
FORCE_NO_SYMBOL $79C6
FORCE_SYMBOL $79C9 bulletDamage
FORCE_SYMBOL $79D2 SCOOP_SHOTS
COMMENT $79D4 set this shot to 0, but keep left
FORCE_NO_SYMBOL $79D4
COMMENT_LINE $79DA test for radius of shot
FORCE_SYMBOL $79DA SHOT_RADIUS
COMMENT $79DC jump out to remove this shot entirely
COMMENT $79E0 go to enemy "hit" handling
FORCE_SYMBOL $79E0 shotHandleDone_Bug
COMMENT_LINE $79E3 ..........
COMMENT_LINE $79E5 collision detection player shot -> enemy
COMMENT_LINE $79E5 only two shots are tested per game round
COMMENT_LINE $79E5 two shots
COMMENT_LINE $79E5 main must ensure the two to be tested shots are "halfway"
COMMENT_LINE $79E5 in b is still the xcoordinate of the current enemy that is tested for thisshot
COMMENT_LINE $79E5 is there a col detection at all if ALL purpose is negative? -> NO
COMMENT_LINE $79E5 all behaviours with negative all purpose do not call col detect
COMMENT_LINE $79E5 ergo ALL purpuse negtaive serves no purpose anymore!
FORCE_SYMBOL $79E5 test2Shot
FORCE_SYMBOL $79EC playerNumberOfBulletsPerShot
COMMENT $79EF laser
FORCE_NO_SYMBOL $79EF
COMMENT_LINE $0000 "non" shots have ypos = to max ($7f) therefore below test is always met and goes to noHit
COMMENT_LINE $0000 we do not need to test the shot itself for validity!
COMMENT_LINE $0000 yTest
COMMENT_LINE $7A02 bugs are also bigger in y dimensions
COMMENT_LINE $7A02 but they move so slow - this probably does not
COMMENT_LINE $7A02 matter
COMMENT_LINE $7A02 anyway - have to test!
COMMENT_LINE $7A02 TODO
FORCE_SYMBOL $7A02 shotYRadius
COMMENT_LINE $7A09 ;;;; y done
COMMENT_LINE $7A09 xTest
COMMENT $7A09 x coordinate enemy now 0 based in b 0-255
FORCE_NO_SYMBOL $7A09
COMMENT_LINE $7A0B test center
FORCE_SYMBOL $7A0B tmp1
FORCE_SYMBOL $7A0E BUG_HIT_X_OFFSET
COMMENT $7A13 enemy is on left side of shot
COMMENT_LINE $7A17 in b 0 based enemy pos
COMMENT $7A1C enemy is on right side of shot
COMMENT_LINE $7A20 ..........
COMMENT_LINE $7A20 if only scoop shots are left - we can not hit with "own" cannon
COMMENT $7A20 a zero shot cannot hit! (TST)
FORCE_SYMBOL $7A20 SHOT_RADIUS
FORCE_SYMBOL $7A26 notHit633
FORCE_SYMBOL $7A29 backJump
COMMENT_LINE $0000 normal shot did hit
COMMENT_LINE $0000 not scoopy - NORMAL
COMMENT_LINE $0000 ---
FORCE_SYMBOL $7A2C BEHAVIOUR
FORCE_NO_SYMBOL $7A2E
COMMENT_LINE $7A34 center shot is zero - check if a scoopy might hit!
FORCE_SYMBOL $7A34 tmp1
FORCE_SYMBOL $7A3E tmp1
COMMENT $7A48 notHitShotIsZero
FORCE_SYMBOL $7A48 notHit633
FORCE_SYMBOL $7A4B tmp_isSupershot
COMMENT $7A4E (tst)
FORCE_SYMBOL $7A4E explosionSound
COMMENT $7A53 next game round, play an explosion
FORCE_SYMBOL $7A53 explosionSound
FORCE_SYMBOL $7A56 SHOT_RADIUS
FORCE_SYMBOL $7A58 SHOT_RADIUS4
FORCE_SYMBOL $7A5C SHOT_RADIUS3
FORCE_SYMBOL $7A60 SHOT_RADIUS2
FORCE_SYMBOL $7A64 SHOT_RADIUS6
COMMENT_LINE $7A6A five shot is also a "1" time shot
FORCE_SYMBOL $7A6A SHOT_RADIUS5
COMMENT $7A70 positive is supershot
FORCE_SYMBOL $7A70 tmp_isSupershot
COMMENT $7A73 TST
FORCE_SYMBOL $7A73 SCOOP_SHOTS
FORCE_SYMBOL $7A79 SHOT_RADIUS0
FORCE_SYMBOL $7A7B SHOT_RADIUS
FORCE_SYMBOL $7A7D shotHandleDone_Bug
COMMENT_LINE $7A80 ---
COMMENT_LINE $7A80 remove 2 points of damage
COMMENT_LINE $7A82 bugs take less damage -> blame vtk!!!
COMMENT_LINE $7A82 suba     bulletDamage
FORCE_SYMBOL $7A82 bulletDamage
FORCE_SYMBOL $7A85 bulletDamage
COMMENT_LINE $7A88 suba #3 ; one is reduced by"ordanary handler
FORCE_SYMBOL $7A8A isNo5Shot
COMMENT_LINE $7A8D remove 1 points of damage
COMMENT_LINE $7A8F suba     bulletDamage
FORCE_SYMBOL $7A8F bulletDamage
COMMENT_LINE $7A92 suba #2 ; one is reduced by"ordanary handler
FORCE_SYMBOL $7A94 isNo5Shot
COMMENT_LINE $7A97 remove 1/2 points of damage
COMMENT_LINE $7A97 lda      BUG_ENEMY_HITPOINTS +u_offset1,s
COMMENT_LINE $7A97 suba     bulletDamage
FORCE_SYMBOL $7A97 bulletDamage
COMMENT_LINE $7A9E suba #1 ; one is reduced by"ordanary handler
FORCE_SYMBOL $7AA0 isNo5Shot
COMMENT $7AA3 laser = main
FORCE_SYMBOL $7AA3 laserTmp2
COMMENT $7AA8 y pos
FORCE_SYMBOL $7AA8 laserTmp
FORCE_SYMBOL $7AAB xCheckOnly633
FORCE_NO_SYMBOL $7AAE
COMMENT $7AB0 laser = right scoop
FORCE_SYMBOL $7AB0 laserTmp2
COMMENT $7AB5 assume 10 lower
FORCE_NO_SYMBOL $7AB5
FORCE_NO_SYMBOL $7AB9
FORCE_SYMBOL $7ABB laserTmp
COMMENT_LINE $7AC0 ..........
COMMENT_LINE $7AC0 ..........
COMMENT_LINE $7AC0 check if there are scoopies
COMMENT $7AC0 two nibbles
FORCE_SYMBOL $7AC0 SCOOP_SHOTS
FORCE_NO_SYMBOL $7AC2
COMMENT $7AC4 we kno there is no right hit possible, because we came from center!
COMMENT_LINE $7AC8 side shots are lower - test that here...
FORCE_SYMBOL $7AC8 playerNumberOfBulletsPerShot
COMMENT $7ACB laser
FORCE_NO_SYMBOL $7ACB
COMMENT $7AD1 assume 10 lower
FORCE_NO_SYMBOL $7AD1
COMMENT $7ADA correct b for bug compare
FORCE_SYMBOL $7ADA tmp1
COMMENT_LINE $7ADD in b x pos of enemy - 0 based!
COMMENT_LINE $7ADD test left
FORCE_SYMBOL $7ADD BUG_HIT_X_OFFSET
COMMENT $7AE2 enemy is on left side of left shot
COMMENT_LINE $7AE6 left HIT!
COMMENT_LINE $7AE6 i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $7AE6 notHit633
FORCE_SYMBOL $7AE9 backJump
FORCE_SYMBOL $7AEC playerNumberOfBulletsPerShot
COMMENT $7AEF laser
FORCE_NO_SYMBOL $7AEF
COMMENT $7AF1 shotHandleDone_noBoss ;noScoopReduceLeft\?
COMMENT_LINE $7AF5 :::::::::::::::::::::::::
COMMENT_LINE $7AF5 remove shot when shield
COMMENT_LINE $7AF5 remove all scoop shots and do damage for all
COMMENT_LINE $7AF5 here it means do (scoop shot -1)*damage
FORCE_SYMBOL $7AF5 SCOOP_SHOTS
FORCE_SYMBOL $7AFC bulletDamage
FORCE_SYMBOL $7B05 SCOOP_SHOTS
COMMENT $7B07 set this shot to 0, but keep left
FORCE_NO_SYMBOL $7B07
FORCE_SYMBOL $7B09 SCOOP_SHOTS
COMMENT_LINE $7B0F test for radius of shot
FORCE_SYMBOL $7B0F SHOT_RADIUS
COMMENT $7B11 jump out to remove this shot entirely
COMMENT $7B15 go to enemy "hit" handling
FORCE_SYMBOL $7B15 shotHandleDone_Bug
FORCE_NO_SYMBOL $7B18
COMMENT $7B1A laser = left scoop
FORCE_SYMBOL $7B1A laserTmp2
COMMENT $7B1F assume 10 lower
FORCE_NO_SYMBOL $7B1F
FORCE_NO_SYMBOL $7B23
FORCE_SYMBOL $7B25 laserTmp
COMMENT_LINE $7B2A ..........
COMMENT_LINE $7B2A ..........
COMMENT_LINE $7B2A check if there are scoopies
COMMENT $7B2A two nibbles
FORCE_SYMBOL $7B2A SCOOP_SHOTS
FORCE_NO_SYMBOL $7B2C
COMMENT $7B2E we no there is no left hit possible, because we came from center!
COMMENT_LINE $7B30 side shots are lower - test that here...
FORCE_SYMBOL $7B30 playerNumberOfBulletsPerShot
COMMENT $7B33 laser
FORCE_NO_SYMBOL $7B33
COMMENT $7B39 assume 10 lower
FORCE_NO_SYMBOL $7B39
COMMENT $7B40 correct b for bug compare
FORCE_SYMBOL $7B40 tmp1
COMMENT_LINE $7B43 in b x pos of enemy - 0 based!
COMMENT_LINE $7B43 test right
FORCE_SYMBOL $7B43 BUG_HIT_X_OFFSET
COMMENT $7B48 enemy is on right side of right shot
COMMENT_LINE $7B4A right HIT!
COMMENT_LINE $7B4A i Do not even have to test right side - since we know it is left of MINUS_1_RADIUS
FORCE_SYMBOL $7B4A notHit633
FORCE_SYMBOL $7B4D backJump
FORCE_SYMBOL $7B50 playerNumberOfBulletsPerShot
COMMENT $7B53 laser
FORCE_NO_SYMBOL $7B53
COMMENT $7B55 shotHandleDone_noBoss ;noScoopReduceRight\?
FORCE_SYMBOL $7B59 SCOOP_SHOTS
FORCE_NO_SYMBOL $7B5B
FORCE_SYMBOL $7B5D SCOOP_SHOTS
COMMENT_LINE $7B65 remove shot when shield
COMMENT_LINE $7B65 :::::::::::::::::::::::::
COMMENT_LINE $7B65 remove all scoop shots and do damage for all
COMMENT_LINE $7B65 here it means do (scoop shot -1)*damage
FORCE_SYMBOL $7B65 SCOOP_SHOTS
FORCE_NO_SYMBOL $7B67
FORCE_SYMBOL $7B6A bulletDamage
FORCE_SYMBOL $7B73 SCOOP_SHOTS
COMMENT $7B75 set this shot to 0, but keep left
FORCE_NO_SYMBOL $7B75
COMMENT_LINE $7B7B test for radius of shot
FORCE_SYMBOL $7B7B SHOT_RADIUS
COMMENT $7B7D jump out to remove this shot entirely
COMMENT $7B81 go to enemy "hit" handling
FORCE_SYMBOL $7B81 shotHandleDone_Bug
COMMENT_LINE $7B84 ..........
FORCE_SYMBOL $7B84 bulletSpawnAt
FORCE_SYMBOL $7B89 shotCount
FORCE_SYMBOL $7B8C levelMaxEnemyShots
FORCE_SYMBOL $7B99 currentLevelPointer
FORCE_SYMBOL $7B9C LEVEL_SHOT_DELAY_BUG
FORCE_SYMBOL $7BA4 bulletSpawnAt
FORCE_SYMBOL $7BA9 ENEMY_BULLET_SPEED
FORCE_SYMBOL $7BAB isBugShot
COMMENT_LINE $7BAE perhaps randomize bug shot (only level 99)
FORCE_SYMBOL $7BB4 isBugShot
FORCE_NO_SYMBOL $7BB7
FORCE_SYMBOL $7BB9 random_seed
FORCE_NO_SYMBOL $7BBF
FORCE_SYMBOL $7BC1 random_seed
FORCE_NO_SYMBOL $7BC4
FORCE_NO_SYMBOL $7BCB
FORCE_SYMBOL $7BCD isBugShot
FORCE_NO_SYMBOL $7BD2
FORCE_SYMBOL $7BD4 isBugShot
FORCE_NO_SYMBOL $7BD9
FORCE_SYMBOL $7BDB isBugShot
FORCE_SYMBOL $7BDE OBJECT_SCALE
FORCE_SYMBOL $7BE0 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $7BE2
COMMENT_LINE $7BE4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7BE4 enemy is in its waiting position
COMMENT_LINE $7BE4 "wobbled" left and right
COMMENT $7BE4 Store Y in D/A register
FORCE_SYMBOL $7BE4 VIA_port_a
COMMENT $7BE6 Blank low, zero high?
FORCE_NO_SYMBOL $7BE6
FORCE_SYMBOL $7BE8 VIA_cntl
COMMENT $7BEB Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7BEB VIA_port_b
COMMENT $7BED y must be set more than xx cycles on some vectrex
COMMENT $7BEE Disable mux
FORCE_SYMBOL $7BEE VIA_port_b
COMMENT $7BF0 Store X in D/A register
FORCE_SYMBOL $7BF0 VIA_port_a
COMMENT $7BF2 enable timer
FORCE_SYMBOL $7BF2 VIA_t1_cnt_hi
FORCE_SYMBOL $7BF4 OBJECT_SCALE
FORCE_SYMBOL $7BF6 VIA_t1_cnt_lo
COMMENT_LINE $7BF8 "blend in " intensity slower advancein to default
COMMENT_LINE $7BF8 enemy can notbe hit while arriving (but also cannot shoot)
COMMENT_LINE $7BF8 above macro must jmp to noAnimChangeEnemy
COMMENT_LINE $7BF8 because ANIM_COUNT / ANIM POSITION
COMMENT_LINE $7BF8 is reused by Attack pattern
COMMENT_LINE $7BF8 if it woldgo on "normally"
COMMENT_LINE $7BF8 the Pattern data would be corrupted!
COMMENT_LINE $7BFA do animation of enemy
FORCE_SYMBOL $7BFA animDelayCounter
FORCE_SYMBOL $7C04 WAIT_ANIM_TABLE
FORCE_SYMBOL $7C0F WAIT_ANIM_TABLE
FORCE_NO_SYMBOL $7C18
FORCE_SYMBOL $7C1E DEFAULT_ENEMY_INTENSITY
COMMENT_LINE $7C22 intro ofbug done -> initialize bug movement
COMMENT_LINE $7C22 todo
FORCE_SYMBOL $7C22 bugBehaviourGoAbsolut
COMMENT_LINE $7C27 save current position to new position "pointers"
COMMENT_LINE $7C2D generate new target position
FORCE_SYMBOL $7C2D random_seed
FORCE_NO_SYMBOL $7C33
FORCE_SYMBOL $7C35 random_seed
FORCE_SYMBOL $7C38 random_seed
FORCE_NO_SYMBOL $7C3E
FORCE_SYMBOL $7C40 random_seed
COMMENT $7C43 not negative and smaller ($7f-15) y pos
FORCE_NO_SYMBOL $7C43
COMMENT $7C45 that is the target
COMMENT_LINE $7C47 generate deltas to add
COMMENT_LINE $7C47 Y
FORCE_SYMBOL $7C4A tmp16_tmp
FORCE_SYMBOL $7C50 tmp16_tmp
COMMENT $7C54 half it
COMMENT_LINE $7C57 X
FORCE_SYMBOL $7C5A tmp16_tmp
FORCE_SYMBOL $7C60 tmp16_tmp
COMMENT $7C64 half it
FORCE_SYMBOL $7C67 lightningOn
COMMENT $7C6A preload next user stack
FORCE_NO_SYMBOL $7C6D
FORCE_SYMBOL $7C6F VIA_int_flags
COMMENT $7C73 Store intensity in D/A
FORCE_SYMBOL $7C73 VIA_port_a
COMMENT $7C75 mux disabled channel 2
FORCE_NO_SYMBOL $7C75
FORCE_SYMBOL $7C78 VIA_port_b
COMMENT $7C7A mux enabled channel 2
FORCE_SYMBOL $7C7A VIA_port_b
COMMENT $7C7C turn off mux
FORCE_SYMBOL $7C7C VIA_port_b
COMMENT_LINE $7C81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7C81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7C81 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7C85 Store Y in D/A register
FORCE_SYMBOL $7C85 VIA_port_a
COMMENT $7C87 Blank low, zero high?
FORCE_NO_SYMBOL $7C87
FORCE_SYMBOL $7C89 VIA_cntl
COMMENT $7C8C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7C8C VIA_port_b
COMMENT $7C8E y must be set more than xx cycles on some vectrex
COMMENT $7C8F Disable mux
FORCE_SYMBOL $7C8F VIA_port_b
COMMENT $7C91 Store X in D/A register
FORCE_SYMBOL $7C91 VIA_port_a
COMMENT $7C93 enable timer
FORCE_SYMBOL $7C93 VIA_t1_cnt_hi
FORCE_SYMBOL $7C95 back1ShotBug
FORCE_SYMBOL $7C98 shotBehaviourStandardStartBug
COMMENT $7C9B target y, x position in d
COMMENT $7CA2 target y, x position in d
FORCE_NO_SYMBOL $7CAE
FORCE_NO_SYMBOL $7CB9
FORCE_SYMBOL $7CC1 random_seed
FORCE_NO_SYMBOL $7CC7
FORCE_SYMBOL $7CC9 random_seed
FORCE_SYMBOL $7CCC random_seed
FORCE_NO_SYMBOL $7CD2
FORCE_SYMBOL $7CD4 random_seed
COMMENT $7CD7 not negative and smaller ($7f-15) y pos
FORCE_NO_SYMBOL $7CD7
COMMENT $7CD9 that is the target
COMMENT_LINE $7CDB Y
FORCE_SYMBOL $7CDE tmp16_tmp
FORCE_SYMBOL $7CE4 tmp16_tmp
COMMENT $7CE8 half it
COMMENT_LINE $7CEB X
FORCE_SYMBOL $7CEE tmp16_tmp
FORCE_SYMBOL $7CF4 tmp16_tmp
COMMENT $7CF8 half it
COMMENT_LINE $7CFD do animation of enemy
FORCE_SYMBOL $7CFD animDelayCounter
FORCE_SYMBOL $7D07 WAIT_ANIM_TABLE
FORCE_SYMBOL $7D12 WAIT_ANIM_TABLE
FORCE_SYMBOL $7D1A HIT_FLASH_LENGTH
FORCE_SYMBOL $7D1E lightningOn
COMMENT $7D23 preload next user stack
FORCE_NO_SYMBOL $7D26
FORCE_NO_SYMBOL $7D28
FORCE_SYMBOL $7D2A VIA_int_flags
COMMENT $7D2E Store intensity in D/A
FORCE_SYMBOL $7D2E VIA_port_a
COMMENT $7D30 mux disabled channel 2
FORCE_NO_SYMBOL $7D30
FORCE_SYMBOL $7D33 VIA_port_b
COMMENT $7D35 mux enabled channel 2
FORCE_SYMBOL $7D35 VIA_port_b
COMMENT $7D37 turn off mux
FORCE_SYMBOL $7D37 VIA_port_b
FORCE_SYMBOL $7D3B lightningOn
FORCE_SYMBOL $7D40 lightningOn
COMMENT $7D43 preload next user stack
FORCE_SYMBOL $7D46 DEFAULT_ENEMY_INTENSITY
FORCE_NO_SYMBOL $7D48
FORCE_SYMBOL $7D4A VIA_int_flags
COMMENT $7D4E Store intensity in D/A
FORCE_SYMBOL $7D4E VIA_port_a
COMMENT $7D50 mux disabled channel 2
FORCE_NO_SYMBOL $7D50
FORCE_SYMBOL $7D53 VIA_port_b
COMMENT $7D55 mux enabled channel 2
FORCE_SYMBOL $7D55 VIA_port_b
COMMENT $7D57 turn off mux
FORCE_SYMBOL $7D57 VIA_port_b
COMMENT $7D5B preload next user stack
FORCE_NO_SYMBOL $7D5E
FORCE_SYMBOL $7D60 VIA_int_flags
COMMENT_LINE $7D67 ***************************************************************************
COMMENT_LINE $7D67 does all enemy painting in bank 1!
COMMENT_LINE $7D67 switches bank in MOVETO
COMMENT $7D67 Store Y in D/A register
FORCE_SYMBOL $7D67 VIA_port_a
COMMENT $7D69 Blank low, zero high?
FORCE_NO_SYMBOL $7D69
FORCE_SYMBOL $7D6B VIA_cntl
COMMENT $7D6E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7D6E VIA_port_b
COMMENT $7D70 y must be set more than xx cycles on some vectrex
COMMENT $7D71 Disable mux
FORCE_SYMBOL $7D71 VIA_port_b
COMMENT $7D73 Store X in D/A register
FORCE_SYMBOL $7D73 VIA_port_a
COMMENT $7D75 enable timer
FORCE_SYMBOL $7D75 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $7D79
FORCE_NO_SYMBOL $7D7B
FORCE_SYMBOL $7D83 VIA_t1_cnt_lo
COMMENT_LINE $7D85 we are in bank one, so one switch IRQ
COMMENT $7D85 enemyBank1ExplosionBehaviour
FORCE_NO_SYMBOL $7D85
FORCE_SYMBOL $7D88 jmpBankIRQ1Shift
COMMENT $7D8B preload next user stack
COMMENT_LINE $7D90 ***************************************************************************
COMMENT $7D94 Store Y in D/A register
FORCE_SYMBOL $7D94 VIA_port_a
COMMENT $7D96 Blank low, zero high?
FORCE_NO_SYMBOL $7D96
FORCE_SYMBOL $7D98 VIA_cntl
COMMENT $7D9B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7D9B VIA_port_b
COMMENT $7D9D y must be set more than xx cycles on some vectrex
COMMENT $7D9E Disable mux
FORCE_SYMBOL $7D9E VIA_port_b
COMMENT $7DA0 Store X in D/A register
FORCE_SYMBOL $7DA0 VIA_port_a
COMMENT $7DA2 enable timer
FORCE_SYMBOL $7DA2 VIA_t1_cnt_hi
FORCE_SYMBOL $7DA4 back2ShotBug
FORCE_SYMBOL $7DA7 shotBehaviourStandardStartBug
COMMENT_LINE $7DAA back4ShotFailB
COMMENT $7DAC do animation of enemy in bank 1
FORCE_SYMBOL $7DAC WAIT_ANIM_TABLE
COMMENT_LINE $7DAF todo movement of failur objects
COMMENT_LINE $7DAF we are in bank one, so one switch IRQ
COMMENT $7DAF failureBehaviourBank1
FORCE_NO_SYMBOL $7DAF
FORCE_SYMBOL $7DB2 jmpBankIRQ1Shift
COMMENT $7DB5 preload next user stack
COMMENT_LINE $7DBA ***************************************************************************
COMMENT_LINE $7DBA struct   DodgerObject
COMMENT_LINE $7DBA ds       Y_POS,1
COMMENT_LINE $7DBA ds       X_POS,1
COMMENT_LINE $7DBA ds       BEHAVIOUR,2                  ; PC
COMMENT_LINE $7DBA ds       NEXT_ENEMY_OBJECT,2          ; positive = end of list
COMMENT_LINE $7DBA ds       Y_POS16,2                    ; D current position for calculation only , Y is pos, y low is addy
COMMENT_LINE $7DBA ds       X_POS16,2                    ; D current position for calculation only
COMMENT_LINE $7DBA ds       FALLSPEED,2
COMMENT_LINE $7DBA ds       DOCGER_ANIM_COUNT,1
COMMENT_LINE $7DBA ds       DOCGER_ORG_LIST,2
COMMENT_LINE $7DBA end struct
COMMENT $7DBA Store Y in D/A register
FORCE_SYMBOL $7DBA VIA_port_a
COMMENT $7DBC Blank low, zero high?
FORCE_NO_SYMBOL $7DBC
FORCE_SYMBOL $7DBE VIA_cntl
COMMENT $7DC1 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7DC1 VIA_port_b
COMMENT $7DC3 y must be set more than xx cycles on some vectrex
COMMENT $7DC4 Disable mux
FORCE_SYMBOL $7DC4 VIA_port_b
COMMENT $7DC6 Store X in D/A register
FORCE_SYMBOL $7DC6 VIA_port_a
COMMENT $7DC8 enable timer
FORCE_SYMBOL $7DC8 VIA_t1_cnt_hi
COMMENT_LINE $7DCA mine col detect
COMMENT_LINE $7DCA mine positions are allways in the middle of the mine
COMMENT_LINE $7DCA player pos is: x middle y slightly below middle
COMMENT_LINE $7DCA strength wise both are maxed - mines slightly more so
COMMENT_LINE $7DCA player is drawn with scale 9 (for detection we divide by 8)
COMMENT_LINE $7DCA width of player is 255
COMMENT_LINE $7DCA 255 / 8 = 32
COMMENT_LINE $7DCA mines are drawn with "random" scale -> must be compensated!
FORCE_SYMBOL $7DCA dodgerGotKilled
FORCE_NO_SYMBOL $7DD4
FORCE_NO_SYMBOL $7DD8
FORCE_SYMBOL $7DDF tmp2_tmp
FORCE_SYMBOL $7DE4 tmp2_tmp
COMMENT_LINE $7DEB first check if mines are completely out of bounds
COMMENT $7DED branch if y pos is "very much" greater than ship po
COMMENT $7DF1 player pos
FORCE_SYMBOL $7DF1 playerXpos
COMMENT $7DF4 make zero based
FORCE_NO_SYMBOL $7DF4
COMMENT $7DF6 (right side of player) - can not be oob because of positining cant be to low!
FORCE_SYMBOL $7DF6 SHIP_TEST_SIZE
COMMENT_LINE $7DF8 in a player right side!
COMMENT_LINE $7DF8 in b is still the mines x pos
COMMENT_LINE $7DF8 assuming "width" is = scale
COMMENT $7DF8 make zero based
FORCE_NO_SYMBOL $7DF8
FORCE_SYMBOL $7DFA tmp2_tmp
COMMENT $7DFF max out for overflow
FORCE_NO_SYMBOL $7DFF
COMMENT_LINE $7E01 beware overflow!
COMMENT_LINE $7E01 in b is now the left side of the mine
COMMENT_LINE $7E01 if the left side of the mine is further right than the right side of the player -> no hit
COMMENT_LINE $7E01 if a-b>0 -> no hit (playerposRight - mineposLeft)
FORCE_SYMBOL $7E01 tmp1_tmp
FORCE_SYMBOL $7E04 tmp1_tmp
COMMENT $7E0B add size of ship to go to the other edge of player sprite (left edge)
COMMENT_LINE $7E0D in a player left side!
COMMENT $7E10 make zero based
FORCE_NO_SYMBOL $7E10
FORCE_SYMBOL $7E12 tmp2_tmp
COMMENT $7E17 min out for overflow
COMMENT_LINE $7E18 in b is now the right side of the mine
COMMENT_LINE $7E18 if the right side of the mine is further left than the left side of the player -> no hit
COMMENT_LINE $7E18 if b-a>0 -> no hit (mineposRight - playerposLeft )
FORCE_SYMBOL $7E18 tmp1_tmp
FORCE_SYMBOL $7E1B tmp1_tmp
FORCE_SYMBOL $7E23 DodgerDiamond
FORCE_SYMBOL $7E29 gotDiamond
FORCE_SYMBOL $7E2C messagePointer
FORCE_SYMBOL $7E32 messageState
FORCE_NO_SYMBOL $7E35
FORCE_SYMBOL $7E38 playerCashW
FORCE_SYMBOL $7E3B playerCashW
FORCE_NO_SYMBOL $7E3E
COMMENT $7E43 return to
FORCE_SYMBOL $7E43 addScoreDiamondDodgerDone
FORCE_SYMBOL $7E46 player_score
FORCE_SYMBOL $7E4A addScore_d
COMMENT_LINE $7E4F diamonds indiamondstore a worth MORE
FORCE_SYMBOL $7E4F diamondCount
FORCE_NO_SYMBOL $7E52
FORCE_NO_SYMBOL $7E56
FORCE_SYMBOL $7E58 diamondCount
FORCE_SYMBOL $7E5B playSoundFlags
FORCE_NO_SYMBOL $7E5E
COMMENT $7E62 collectDiamondData
FORCE_NO_SYMBOL $7E62
FORCE_SYMBOL $7E65 sfx_pointer_1
COMMENT_LINE $7E6A HIT
FORCE_SYMBOL $7E6C wasHit
FORCE_SYMBOL $7E6F messagePointer
FORCE_SYMBOL $7E75 messageState
FORCE_SYMBOL $7E78 playerExplosionSpace
FORCE_NO_SYMBOL $7E7B
COMMENT $7E7D position
FORCE_SYMBOL $7E7D EX_START_SIZE
FORCE_SYMBOL $7E7F MAX_PLAYER_EXPLOSION_SIZE
COMMENT $7E81 position
FORCE_SYMBOL $7E81 EX_MAX_SIZE
COMMENT $7E83 start at 0
FORCE_SYMBOL $7E83 EX_STEP
COMMENT $7E85 lastExplosionData
FORCE_NO_SYMBOL $7E85
FORCE_SYMBOL $7E88 sfx_pointer_1
FORCE_SYMBOL $7E8B sfx_pointer_2
FORCE_SYMBOL $7E8E sfx_pointer_3
FORCE_SYMBOL $7E93 dodgerGotKilled
FORCE_SYMBOL $7E9D dodgerAccel
FORCE_SYMBOL $7EAC VIA_t1_cnt_lo
FORCE_NO_SYMBOL $7EAE
FORCE_SYMBOL $7EB0 VIA_int_flags
FORCE_SYMBOL $7EB4 Draw_VLp
COMMENT $7EB7 preload next user stack
FORCE_SYMBOL $7EB9 gameScale
FORCE_NO_SYMBOL $7EBC
COMMENT $7EBE /BLANK low and /ZERO low
FORCE_SYMBOL $7EBE VIA_cntl
FORCE_SYMBOL $7EC0 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $7EC2
FORCE_SYMBOL $7EC5 VIA_port_b
COMMENT_LINE $7ED8 this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $7ED8 it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $7ED8 sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT $7ED8 x -> pointer object struture (correction of offset)
FORCE_SYMBOL $7ED8 u_offset1
COMMENT $7EDA is it the first?
FORCE_SYMBOL $7EDA enemylist_objects_head
COMMENT $7EDD no -> jump
COMMENT $7EDF s pointer to next objext
FORCE_SYMBOL $7EDF NEXT_ENEMY_OBJECT
COMMENT $7EE1 the next object will be the first
FORCE_SYMBOL $7EE1 enemylist_objects_head
COMMENT $7EE6 start at list head
FORCE_SYMBOL $7EE6 enemylist_objects_head
COMMENT $7EEA am I the next object of the current investigated list element
FORCE_SYMBOL $7EEA NEXT_ENEMY_OBJECT
COMMENT $7EEC jup -> jump
COMMENT $7EEE otherwise load the next as new current
FORCE_SYMBOL $7EEE NEXT_ENEMY_OBJECT
COMMENT $7EF1 and search further
COMMENT $7EF3 we load "our" next object to s
FORCE_SYMBOL $7EF3 NEXT_ENEMY_OBJECT
COMMENT $7EF5 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $7EF5 NEXT_ENEMY_OBJECT
COMMENT $7EF7 and clean up the empties
FORCE_SYMBOL $7EF7 enemyCount
COMMENT $7EFA set u free, as new free head
FORCE_SYMBOL $7EFA enemylist_empty_head
COMMENT $7EFE load to u the next linked list element
FORCE_SYMBOL $7EFE NEXT_ENEMY_OBJECT
FORCE_SYMBOL $7F01 enemylist_empty_head
COMMENT_LINE $7F04 do a clean ending - which is usually done at the end of "SmartDraw"
FORCE_SYMBOL $7F04 gameScale
FORCE_NO_SYMBOL $7F07
COMMENT $7F09 /BLANK low and /ZERO low
FORCE_SYMBOL $7F09 VIA_cntl
FORCE_SYMBOL $7F0B VIA_t1_cnt_lo
FORCE_NO_SYMBOL $7F0D
FORCE_SYMBOL $7F10 VIA_port_b
FORCE_NO_SYMBOL $7F12
FORCE_SYMBOL $7F14 VIA_int_flags
COMMENT $7F1A pattern, y, x
COMMENT $7F1D pattern, y, x
COMMENT $7F20 pattern, y, x
COMMENT $7F23 pattern, y, x
COMMENT $7F26 pattern, y, x
COMMENT $7F29 pattern, y, x
COMMENT $7F2C pattern, y, x
COMMENT $7F2F pattern, y, x
COMMENT $7F32 pattern, y, x
COMMENT $7F35 pattern, y, x
COMMENT $7F38 pattern, y, x
COMMENT $7F3B pattern, y, x
COMMENT $7F3E pattern, y, x
COMMENT $7F41 pattern, y, x
COMMENT $7F44 endmarker (high bit in pattern not set)
COMMENT_LINE $0000 from player shot
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 called when player shot hits an enemy
COMMENT_LINE $0000 bullet count of shot is reduced by one
COMMENT_LINE $0000 if result is 0 bullets -> shot is removed
COMMENT_LINE $0000 additionally the enemy
COMMENT_LINE $0000 is changed from "enemy" to explosion
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 correct current test shot
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $7F45 tmp_isSupershot
FORCE_SYMBOL $7F48 explosionSound
COMMENT $7F4D next game round, play an explosion
FORCE_SYMBOL $7F4D explosionSound
FORCE_SYMBOL $7F50 SHOT_RADIUS
FORCE_SYMBOL $7F52 SHOT_RADIUS6
FORCE_SYMBOL $7F56 SHOT_RADIUS0
COMMENT $7F58 shot is "empty"
COMMENT_LINE $7F5C :::::::::::::::::::::::::
COMMENT_LINE $7F5C remove shot when shield
COMMENT_LINE $7F5C in swarm, this is NOT working!
FORCE_SYMBOL $7F5F swarmBehaviour
FORCE_SYMBOL $7F68 ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $7F6A TYPE_SHIELD
COMMENT $7F6C remove
COMMENT_LINE $7F70 remove shot when shield
COMMENT_LINE $7F70 :::::::::::::::::::::::::
FORCE_SYMBOL $7F70 SHOT_RADIUS5
FORCE_SYMBOL $7F74 SHOT_RADIUS4
FORCE_SYMBOL $7F7A SHOT_RADIUS3
FORCE_SYMBOL $7F80 SHOT_RADIUS2
COMMENT_LINE $7F88 five shot is also a "1" time shot
COMMENT $7F88 positive is supershot
FORCE_SYMBOL $7F88 tmp_isSupershot
FORCE_SYMBOL $7F8B SCOOP_SHOTS
FORCE_SYMBOL $7F91 SHOT_RADIUS0
FORCE_SYMBOL $7F93 SHOT_RADIUS
FORCE_SYMBOL $7F95 shotHandleDone
FORCE_SYMBOL $7F98 difficulty
FORCE_NO_SYMBOL $7F9B
FORCE_SYMBOL $7FA4 enemyTribble
FORCE_SYMBOL $7FAC laserTmp2
FORCE_SYMBOL $7FB6 laserEnemyPointerLeft
FORCE_SYMBOL $7FBB laserTmp
FORCE_SYMBOL $7FBE laserLowestYLeft
COMMENT $7FC3 jump back to where collission detection started
FORCE_SYMBOL $7FC3 backJump
FORCE_SYMBOL $7FC7 laserTmp
FORCE_SYMBOL $7FCA laserLowestYLeft
FORCE_SYMBOL $7FCD laserEnemyPointerLeft
COMMENT $7FD1 jump back to where collission detection started
FORCE_SYMBOL $7FD1 backJump
COMMENT_LINE $7FD5 ..............
FORCE_SYMBOL $7FD5 laserEnemyPointerRight
FORCE_SYMBOL $7FDA laserTmp
FORCE_SYMBOL $7FDD laserLowestYRight
COMMENT $7FE2 jump back to where collission detection started
FORCE_SYMBOL $7FE2 backJump
FORCE_SYMBOL $7FE6 laserTmp
FORCE_SYMBOL $7FE9 laserLowestYRight
FORCE_SYMBOL $7FEC laserEnemyPointerRight
COMMENT $7FF0 jump back to where collission detection started
FORCE_SYMBOL $7FF0 backJump
COMMENT_LINE $7FF4 ..............
FORCE_SYMBOL $7FF4 laserEnemyPointer
FORCE_SYMBOL $7FF9 laserTmp
FORCE_SYMBOL $7FFC laserLowestY
COMMENT $8001 jump back to where collission detection started
FORCE_SYMBOL $8001 backJump
FORCE_SYMBOL $8005 laserTmp
FORCE_SYMBOL $8008 laserLowestY
FORCE_SYMBOL $800B laserTmp2
COMMENT_LINE $8010 shorten "scoopy" lasers
COMMENT $8010 tst
FORCE_SYMBOL $8010 SCOOP_SHOTS
FORCE_NO_SYMBOL $8012
FORCE_SYMBOL $8016 laserLowestYLeft
FORCE_SYMBOL $801B laserLowestYLeft
FORCE_SYMBOL $801E laserEnemyPointerLeft
FORCE_NO_SYMBOL $8022
FORCE_SYMBOL $8026 laserLowestYRight
FORCE_SYMBOL $802B laserLowestYRight
FORCE_SYMBOL $802E laserEnemyPointerRight
FORCE_SYMBOL $8032 tmp2_tmp_unique
COMMENT $8035 bossFight1shr; boss2gothit
FORCE_SYMBOL $8039 laserEnemyPointer
COMMENT $803D jump back to where collission detection started
FORCE_SYMBOL $803D backJump
COMMENT $8041 negative is lazer
FORCE_SYMBOL $8041 tmp_isSupershot
FORCE_SYMBOL $8044 shotHandleDone
COMMENT_LINE $8047 shot count is now zero -> remove the player shot
COMMENT_LINE $8047 we must keep DS intact in this remove -> use y register instead
COMMENT_LINE $8047 look if there are scoopies
COMMENT_LINE $8047 if so makes this a zero shot, do not remove yet
COMMENT_LINE $8047 otherwise the scoopie shots will also disappear
FORCE_SYMBOL $8047 SCOOP_SHOTS
FORCE_SYMBOL $804B SHOT_RADIUS0
FORCE_SYMBOL $804D SHOT_RADIUS
COMMENT $804F zeroPlayerShotBehaviour
FORCE_NO_SYMBOL $804F
FORCE_SYMBOL $8052 BEHAVIOUR
FORCE_SYMBOL $8054 shotHandleDone
COMMENT $8057 is it the first?
FORCE_SYMBOL $8057 playershotlist_objects_head
COMMENT $805A no -> jump
COMMENT $805C y pointer to next objext
FORCE_SYMBOL $805C NEXT_PLAYERSHOT_OBJECT
COMMENT $805F the next object will be the first
FORCE_SYMBOL $805F playershotlist_objects_head
COMMENT $8063 and clean up the empties
FORCE_SYMBOL $8063 playerShotCount
COMMENT $8066 set u free, as new free head
FORCE_SYMBOL $8066 playershotlist_empty_head
COMMENT $8069 load to u the next linked list element
FORCE_SYMBOL $8069 NEXT_PLAYERSHOT_OBJECT
FORCE_SYMBOL $806B playershotlist_empty_head
COMMENT_LINE $806E correct current test shot
FORCE_SYMBOL $806E testShot
FORCE_NO_SYMBOL $8073
FORCE_SYMBOL $8076 testShot
FORCE_SYMBOL $8079 test2Shot
FORCE_NO_SYMBOL $807E
FORCE_SYMBOL $8081 test2Shot
COMMENT $8086 start at list head
FORCE_SYMBOL $8086 playershotlist_objects_head
COMMENT $808A am I the next object of the current investigated list element
FORCE_SYMBOL $808A NEXT_PLAYERSHOT_OBJECT
COMMENT $808C jup -> jump
COMMENT $808E otherwise load the next as new current
FORCE_SYMBOL $808E NEXT_PLAYERSHOT_OBJECT
COMMENT $8091 and search further
COMMENT $8093 we load "our" next object to d
FORCE_SYMBOL $8093 NEXT_PLAYERSHOT_OBJECT
COMMENT $8095 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $8095 NEXT_PLAYERSHOT_OBJECT
COMMENT $8097 and clean up the empties
FORCE_SYMBOL $8097 playerShotCount
COMMENT $809A set u free, as new free head
FORCE_SYMBOL $809A playershotlist_empty_head
COMMENT $809D load to u the next linked list element
FORCE_SYMBOL $809D NEXT_PLAYERSHOT_OBJECT
FORCE_SYMBOL $809F playershotlist_empty_head
COMMENT_LINE $80A2 correct current test shot
FORCE_SYMBOL $80A2 testShot
FORCE_NO_SYMBOL $80A7
FORCE_SYMBOL $80AA testShot
FORCE_SYMBOL $80AD test2Shot
FORCE_NO_SYMBOL $80B2
FORCE_SYMBOL $80B5 test2Shot
COMMENT_LINE $80BA remove of shot finished
COMMENT_LINE $80BA here decrease bullet count by 1
COMMENT_LINE $80BA :::::::::::::::::::::::::
COMMENT_LINE $80BA remove shot when shield
COMMENT_LINE $80BA ldy      ENEMY_STRUCT+u_offset1,s
COMMENT_LINE $80BA lda      ADDITIONAL_TYPE_INFO,y
COMMENT_LINE $80BA anda     #TYPE_SHIELD
COMMENT_LINE $80BA bne      isNo5Shot                    ; remove
COMMENT_LINE $80BA remove shot when shield
COMMENT_LINE $80BA :::::::::::::::::::::::::
COMMENT_LINE $80BA if normal enemy
COMMENT_LINE $80BA if bug
COMMENT_LINE $80BA else
COMMENT_LINE $80BA if normal enemy is dead
COMMENT_LINE $80BA yes - go on
COMMENT_LINE $80BA else not do damge and reduce more!
COMMENT_LINE $80BA else (boss)
COMMENT_LINE $80BA do all damage at once
FORCE_SYMBOL $80BA SHOT_RADIUS3
FORCE_SYMBOL $80BC SHOT_RADIUS
COMMENT $80BE threePlayerShotBehaviour
FORCE_NO_SYMBOL $80BE
FORCE_SYMBOL $80C1 BEHAVIOUR
COMMENT_LINE $80C5 :::::::::::::::::::::::::
COMMENT_LINE $80C5 remove shot when shield
COMMENT_LINE $80C5 ldy      ENEMY_STRUCT+u_offset1,s
COMMENT_LINE $80C5 lda      ADDITIONAL_TYPE_INFO,y
COMMENT_LINE $80C5 anda     #TYPE_SHIELD
COMMENT_LINE $80C5 lbne     isNo5Shot                    ; remove
COMMENT_LINE $80C5 remove shot when shield
COMMENT_LINE $80C5 :::::::::::::::::::::::::
FORCE_SYMBOL $80C5 SHOT_RADIUS2
FORCE_SYMBOL $80C7 SHOT_RADIUS
COMMENT $80C9 twoPlayerShotBehaviour
FORCE_NO_SYMBOL $80C9
FORCE_SYMBOL $80CC BEHAVIOUR
COMMENT_LINE $80D0 :::::::::::::::::::::::::
COMMENT_LINE $80D0 remove shot when shield
COMMENT_LINE $80D0 ldy      ENEMY_STRUCT+u_offset1,s
COMMENT_LINE $80D0 lda      ADDITIONAL_TYPE_INFO,y
COMMENT_LINE $80D0 anda     #TYPE_SHIELD
COMMENT_LINE $80D0 lbne     isNo5Shot                    ; remove
COMMENT_LINE $80D0 remove shot when shield
COMMENT_LINE $80D0 :::::::::::::::::::::::::
FORCE_SYMBOL $80D0 SHOT_RADIUS1
FORCE_SYMBOL $80D2 SHOT_RADIUS
COMMENT $80D4 onePlayerShotBehaviour
FORCE_NO_SYMBOL $80D4
FORCE_SYMBOL $80D7 BEHAVIOUR
COMMENT_LINE $80D9 everything shot related done -> now explode the enemy
COMMENT_LINE $80D9 perhaps not explode yet
COMMENT_LINE $80D9 look at Hitpoints of enemy
FORCE_SYMBOL $80D9 diverseFlags
FORCE_SYMBOL $80DC BIT_FLAG_IS_BOSSFIGHT_ANY
FORCE_NO_SYMBOL $80E0
FORCE_SYMBOL $80E6 bossHP
FORCE_SYMBOL $80E9 tmp_isSupershot
FORCE_NO_SYMBOL $80F1
FORCE_SYMBOL $80F5 bulletDamage
FORCE_SYMBOL $80FB bossHP
FORCE_SYMBOL $80FE bossWasHit
FORCE_SYMBOL $8101 backJump
FORCE_SYMBOL $8109 higherThanBiggies
FORCE_SYMBOL $810E bulletDamage
COMMENT $811F 15/50 s brightness flash of enemy for being hit and not dead
FORCE_SYMBOL $811F HIT_FLASH_LENGTH
COMMENT $8123 jump back to where collission detection started
FORCE_SYMBOL $8123 backJump
FORCE_SYMBOL $8127 ANGLE8_TABLE
FORCE_SYMBOL $812B ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $812D TYPE_SHIELD
FORCE_SYMBOL $8136 bulletDamage
COMMENT_LINE $8144 do not explode
COMMENT_LINE $8144 this resets the shot delay to zero -> don't bothher
COMMENT_LINE $8144 enemies that are hit have a right to be angry!
COMMENT $8146 15/50 s brightness flash of enemy for being hit and not dead
FORCE_SYMBOL $8146 HIT_FLASH_LENGTH
COMMENT $814A jump back to where collission detection started
FORCE_SYMBOL $814A backJump
COMMENT_LINE $814E if a shield hit occured
COMMENT_LINE $814E ensure next bullet test is done with onther bullet (if possible)
COMMENT_LINE $814E remove current shot from "hit list"
FORCE_SYMBOL $814E testShot
COMMENT_LINE $8154 do not remove shot if difficulty 1 laser
FORCE_SYMBOL $8154 playerNumberOfBulletsPerShot
COMMENT $8157 laser
FORCE_NO_SYMBOL $8157
FORCE_SYMBOL $815B difficulty
FORCE_SYMBOL $8160 NEXT_SHOT_OBJECT
FORCE_SYMBOL $8162 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $8167 playershotlist_objects_head
FORCE_NO_SYMBOL $8167
FORCE_SYMBOL $816A testShot
FORCE_SYMBOL $816F test2Shot
COMMENT $8173 shot wasremoved befor
FORCE_SYMBOL $8175 NEXT_SHOT_OBJECT
FORCE_SYMBOL $8177 OBJECT_LIST_COMPARE_ADDRESS
COMMENT $817C playershotlist_objects_head
FORCE_NO_SYMBOL $817C
FORCE_SYMBOL $817F test2Shot
FORCE_SYMBOL $8186 bulletDamage
COMMENT_LINE $818F do not explode
COMMENT $8191 15/50 s brightness flash of enemy for being hit and not dead
FORCE_SYMBOL $8191 HIT_FLASH_LENGTH
COMMENT $8195 jump back to where collission detection started
FORCE_SYMBOL $8195 backJump
COMMENT_LINE $819F todo possible a big bug explosion?
COMMENT_LINE $819F inc rankDrop
COMMENT $819F do not allow zero as rank drop x pos
FORCE_SYMBOL $819F rankDrop
FORCE_SYMBOL $81A4 rankDrop
FORCE_SYMBOL $81A9 bugBehaviourGoAbsolut
FORCE_SYMBOL $81AF failureBehaviour
FORCE_SYMBOL $81B9 bonusSpawnPosition
FORCE_SYMBOL $81BC bonusHitCount
FORCE_SYMBOL $81BF enemyTribble
FORCE_SYMBOL $81C4 player_score
FORCE_NO_SYMBOL $81C8
FORCE_SYMBOL $81CA multiplyer
FORCE_SYMBOL $81D0 back661
FORCE_SYMBOL $81D3 addScore_b
COMMENT $81D6 next game round, play an explosion
FORCE_SYMBOL $81D6 explosionSound
COMMENT $81DB negative means this enemy is an explosion
FORCE_SYMBOL $81DD enemyExplosionBank1StubBehaviour
COMMENT $81E0 negative means this enemy is an explosion
COMMENT_LINE $81E2 x not = when from scoopy
FORCE_SYMBOL $81E4 WAIT_ANIM_TABLE
COMMENT $81E8 scale
FORCE_NO_SYMBOL $81E8
COMMENT $81EC intensity
FORCE_NO_SYMBOL $81EC
COMMENT_LINE $81F0 failures "behave"like lasers in
COMMENT_LINE $81F0 that the explosion is called AFTER all other enemies
COMMENT_LINE $81F0 makes bankswitching "in between" easier
FORCE_SYMBOL $81F0 laserTag
FORCE_SYMBOL $81F7 backJump
FORCE_SYMBOL $81FD bonusSpawnPosition
FORCE_SYMBOL $8200 bonusHitCount
FORCE_SYMBOL $8203 enemyTribble
FORCE_SYMBOL $8208 player_score
FORCE_NO_SYMBOL $820C
FORCE_SYMBOL $820E multiplyer
FORCE_SYMBOL $8214 back662
FORCE_SYMBOL $8217 addScore_b
COMMENT $821A next game round, play an explosion
FORCE_SYMBOL $821A explosionSound
COMMENT $821F negative means this enemy is an explosion
FORCE_SYMBOL $8221 enemyExplosionBehaviour
COMMENT $8224 negative means this enemy is an explosion
FORCE_SYMBOL $8228 WAIT_ANIM_TABLE
COMMENT $822A load first animation
FORCE_NO_SYMBOL $822A
COMMENT $822E scale
FORCE_NO_SYMBOL $822E
COMMENT $8232 intensity
FORCE_NO_SYMBOL $8232
COMMENT_LINE $8236 failures "behave"like lasers in
COMMENT_LINE $8236 that the explosion is called AFTER all other enemies
COMMENT_LINE $8236 makes bankswitching "in between" easier
FORCE_SYMBOL $8236 laserTag
FORCE_SYMBOL $823D backJump
COMMENT_LINE $8241 todo add enemy SCORE
FORCE_SYMBOL $8241 diverseFlags
FORCE_SYMBOL $8246 diverseFlags
FORCE_SYMBOL $824B moneyMothershipBehaviour
FORCE_SYMBOL $8253 moneySuckerBehaviour
FORCE_SYMBOL $8259 saucerBehaviour
COMMENT_LINE $825F laser big enemy
FORCE_SYMBOL $825F player_score
COMMENT $8263 times 8 == 1600 points a biggy, times 5 = 8000 points max
FORCE_NO_SYMBOL $8263
FORCE_SYMBOL $8265 multiplyer
FORCE_SYMBOL $8268 MULTIPLYER_BITS
FORCE_SYMBOL $826C back663
FORCE_SYMBOL $826F addScore_d
COMMENT $8272 noMoneyMothership
FORCE_SYMBOL $8272 entryFromOtherBigs
COMMENT_LINE $8275 simulate spawn rank marker
COMMENT_LINE $8275 inc rankDrop
FORCE_SYMBOL $8277 rankDrop
FORCE_SYMBOL $827C rankDrop
COMMENT $827F ypos
FORCE_SYMBOL $827F bonusSpawnPosition
FORCE_SYMBOL $8282 rankCollected
FORCE_SYMBOL $8285 COLLECTED_RANK1
FORCE_SYMBOL $8289 COLLECTED_RANK2
FORCE_SYMBOL $828D COLLECTED_RANK3
FORCE_SYMBOL $8291 COLLECTED_RANK4
FORCE_SYMBOL $8295 COLLECTED_RANK5
FORCE_NO_SYMBOL $8299
COMMENT $829B xpos
COMMENT $829E yesExplodeEnemy
FORCE_SYMBOL $829E entryFromOtherBigs
COMMENT $82A3 xpos
COMMENT $82A6 yesExplodeEnemy
FORCE_SYMBOL $82A6 entryFromOtherBigs
COMMENT $82AB xpos
COMMENT $82AE yesExplodeEnemy
FORCE_SYMBOL $82AE entryFromOtherBigs
COMMENT $82B3 xpos
COMMENT $82B6 yesExplodeEnemy
FORCE_SYMBOL $82B6 entryFromOtherBigs
FORCE_NO_SYMBOL $82B9
COMMENT $82BB xpos
COMMENT $82BE yesExplodeEnemy
FORCE_SYMBOL $82BE entryFromOtherBigs
FORCE_NO_SYMBOL $82C1
COMMENT $82C3 xpos
COMMENT $82C6 yesExplodeEnemy
FORCE_SYMBOL $82C6 entryFromOtherBigs
FORCE_SYMBOL $82CB bonusSpawnPosition
COMMENT_LINE $82CE if special unlocked
COMMENT_LINE $82CE all free enemy slots to 42
COMMENT_LINE $82CE lda      achievements
COMMENT_LINE $82CE bita     #A1_SUCKER_ADDITIONAL_SPAWN
FORCE_SYMBOL $82CE inGameSecrets
FORCE_SYMBOL $82D1 SECRET_3_FIFTY
FORCE_SYMBOL $82D5 StringOutputBuffer_6
COMMENT $82D9 CBFC - allow subroutines
FORCE_SYMBOL $82D9 MY_STACK
FORCE_SYMBOL $82DD spawnAll42
FORCE_SYMBOL $82E0 StringOutputBuffer_6
FORCE_NO_SYMBOL $82E4
FORCE_SYMBOL $82E7 suckerAddress
FORCE_SYMBOL $82EA StringOutputBuffer_6
COMMENT $82EE CBFC - allow subroutines
FORCE_SYMBOL $82EE MY_STACK
FORCE_NO_SYMBOL $82F2
COMMENT $82F5 spawnRandomMoney
FORCE_SYMBOL $82F5 jsrBank0X
FORCE_SYMBOL $82F8 StringOutputBuffer_6
COMMENT_LINE $82FC bra yesExplodeEnemyWithoutScoreing
FORCE_SYMBOL $82FC addpointsBiggy
COMMENT_LINE $82FF test if money mothership
COMMENT_LINE $82FF while bonus can be spawned - spawn $200
FORCE_SYMBOL $8301 bonusSpawnPosition
FORCE_SYMBOL $8304 StringOutputBuffer_6
COMMENT $8308 CBFC - allow subroutines
FORCE_SYMBOL $8308 MY_STACK
FORCE_NO_SYMBOL $830C
COMMENT $830F spawnMoney200
FORCE_SYMBOL $830F jsrBank0X
FORCE_SYMBOL $8312 StringOutputBuffer_6
COMMENT_LINE $8316 bra yesExplodeEnemyWithoutScoreing
COMMENT $8316 yesExplodeEnemy
FORCE_SYMBOL $8316 entryFromOtherBigsWithoutScore
COMMENT_LINE $8319 init explosion
FORCE_SYMBOL $8319 enemyTribble
FORCE_SYMBOL $831E player_score
FORCE_NO_SYMBOL $8322
FORCE_SYMBOL $8324 multiplyer
FORCE_SYMBOL $832A back664
FORCE_SYMBOL $832D addScore_b
FORCE_SYMBOL $8330 bonusHitCount
COMMENT $8333 next game round, play an explosion
FORCE_SYMBOL $8333 explosionSound
COMMENT $8338 negative means this enemy is an explosion
COMMENT_LINE $833A check if enemy was in attack pattern
COMMENT_LINE $833A if so reduce pattern
FORCE_SYMBOL $833C enemySingleAttackAbsolutBehaviour
FORCE_SYMBOL $8342 enemySingleAttackRelativeBehaviour
FORCE_SYMBOL $8348 attackPatternCount
COMMENT_LINE $834B init explosion
COMMENT_LINE $834B check if debris bomber
FORCE_SYMBOL $834D ADDITIONAL_TYPE_INFO
FORCE_SYMBOL $834F TYPE_DEBRIS_BOMBER
COMMENT $8353 speed of falling debris = bullet speed
FORCE_SYMBOL $8353 ENEMY_DEBRIS_SPEED
COMMENT $8355 speed of falling debris
FORCE_SYMBOL $8357 enemyDebrisBomberBehaviour
COMMENT $835A negative means this enemy is an explosion
FORCE_SYMBOL $835E laserTag
FORCE_SYMBOL $8363 backJump
FORCE_SYMBOL $8367 debrisBomberEntry
FORCE_SYMBOL $836A enemyExplosionBehaviour
COMMENT $836D negative means this enemy is an explosion
FORCE_SYMBOL $836F bonusSpawnPosition
FORCE_SYMBOL $8376 bonusSpawnPosition
FORCE_SYMBOL $8379 WAIT_ANIM_TABLE
FORCE_SYMBOL $837B enemyTribbleWaitAnim
COMMENT_LINE $8380 tribble handling
COMMENT_LINE $8380 tribble have lasers "go thru"
COMMENT_LINE $8380 no bonus on tribble death
FORCE_SYMBOL $8380 bonusSpawnPosition
FORCE_SYMBOL $8386 backJump
COMMENT $838A CBFC - allow subroutines
FORCE_SYMBOL $838A MY_STACK
FORCE_SYMBOL $838E spawnEnemy
FORCE_SYMBOL $8393 enemyTribble
COMMENT $8397 do complete rest of init
FORCE_SYMBOL $8397 noShieldEnemy
COMMENT $839A 10 seconds live time
FORCE_NO_SYMBOL $839A
FORCE_SYMBOL $839D TRIBBLE_LIFE_TIME
FORCE_SYMBOL $839F TribbleString
FORCE_SYMBOL $83A2 messagePointer
FORCE_SYMBOL $83A8 messageState
FORCE_SYMBOL $83AB spawnEnemy
FORCE_SYMBOL $83B0 enemyTribble
COMMENT $83B4 do complete rest of init
FORCE_SYMBOL $83B4 noShieldEnemy
COMMENT $83B7 10 seconds live time
FORCE_NO_SYMBOL $83B7
FORCE_SYMBOL $83BA TRIBBLE_LIFE_TIME
FORCE_SYMBOL $83BC backJump
FORCE_SYMBOL $83C0 enemyTribbleWaitAnim
FORCE_NO_SYMBOL $83C3
COMMENT $83C7 scale
FORCE_NO_SYMBOL $83C7
COMMENT $83CB intensity
FORCE_NO_SYMBOL $83CB
FORCE_NO_SYMBOL $83D1
COMMENT $83D5 scale
FORCE_NO_SYMBOL $83D5
COMMENT $83D9 intensity
FORCE_NO_SYMBOL $83D9
FORCE_SYMBOL $83DD laserTag
FORCE_SYMBOL $83E2 backJump
FORCE_SYMBOL $83E6 OBJECT_SCALE
FORCE_SYMBOL $83E8 VIA_t1_cnt_lo
FORCE_SYMBOL $83EA lightningOn
COMMENT $83ED preload next user stack
FORCE_NO_SYMBOL $83F0
FORCE_SYMBOL $83F2 VIA_int_flags
COMMENT $83F6 Store intensity in D/A
FORCE_SYMBOL $83F6 VIA_port_a
COMMENT $83F8 mux disabled channel 2
FORCE_NO_SYMBOL $83F8
FORCE_SYMBOL $83FB VIA_port_b
COMMENT $83FD mux enabled channel 2
FORCE_SYMBOL $83FD VIA_port_b
COMMENT $83FF turn off mux
FORCE_SYMBOL $83FF VIA_port_b
COMMENT_LINE $8404 cmpa     #%00000100
COMMENT_LINE $8404 bne      notBoss2Fight
COMMENT_LINE $8404 here boss fight 2
COMMENT_LINE $8404 boss2Fight
COMMENT_LINE $8404 !!!!!!!!!!!!!!!!!!!!!!
COMMENT_LINE $8404 boss fight code for boss 3 + 4 not done!
COMMENT_LINE $8404 todoJumpBoss3
COMMENT_LINE $8404 todoJumpBoss4
COMMENT_LINE $8404 !!!!!!!!!!!!!!!!!!!!!!
FORCE_SYMBOL $8404 tmp2_tmp_unique
COMMENT $8407 here boss fight - and boss 2 got hit!
COMMENT_LINE $840B here if in bossfight 2
COMMENT_LINE $840B for now NOT hit the boss, but hit a
COMMENT_LINE $840B swarm member
COMMENT_LINE $840D no negative weapon damage supported anymore!
COMMENT_LINE $840D tst      bulletDamage
COMMENT_LINE $840D bpl      doWeaponDamage3
COMMENT_LINE $840D ldb      Vec_Loop_Count+1
COMMENT_LINE $840D andb     #1
COMMENT_LINE $840D bne      noWeaponDamage3
COMMENT_LINE $840D adda     bulletDamage
COMMENT_LINE $840D bra      noWeaponDamage3
FORCE_SYMBOL $840D bulletDamage
COMMENT_LINE $8414 do not explode
COMMENT_LINE $8414 this resets the shot delay to zero -> don't bothher
COMMENT_LINE $8414 enemies that are hit have a right to be angry!
COMMENT $8418 15/50 s brightness flash of enemy for being hit and not dead
FORCE_SYMBOL $8418 HIT_FLASH_LENGTH
COMMENT $841C jump back to where collission detection started
FORCE_SYMBOL $841C backJump
COMMENT $8420 next game round, play an explosion
FORCE_SYMBOL $8420 explosionSound
COMMENT_LINE $8423 check if enemy was in attack pattern
COMMENT_LINE $8423 if so reduce pattern
COMMENT_LINE $8423 init explosion
FORCE_SYMBOL $8423 Swarmer
FORCE_NO_SYMBOL $8426
FORCE_SYMBOL $8428 swarmExplosionBehaviour
COMMENT $842B negative means this enemy is an explosion
COMMENT $842F scale
FORCE_NO_SYMBOL $842F
FORCE_SYMBOL $8433 VIA_t1_cnt_lo
COMMENT $8435 intensity
FORCE_NO_SYMBOL $8435
FORCE_SYMBOL $8439 laserTag
FORCE_SYMBOL $843E backJump
FORCE_SYMBOL $8442 OBJECT_SCALE
FORCE_SYMBOL $8444 VIA_t1_cnt_lo
FORCE_SYMBOL $8446 lightningOn
COMMENT $8449 preload next user stack
FORCE_NO_SYMBOL $844C
FORCE_SYMBOL $844E VIA_int_flags
COMMENT $8452 Store intensity in D/A
FORCE_SYMBOL $8452 VIA_port_a
COMMENT $8454 mux disabled channel 2
FORCE_NO_SYMBOL $8454
FORCE_SYMBOL $8457 VIA_port_b
COMMENT $8459 mux enabled channel 2
FORCE_SYMBOL $8459 VIA_port_b
COMMENT $845B turn off mux
FORCE_SYMBOL $845B VIA_port_b
COMMENT_LINE $8460 boss 3 fight todo
COMMENT_LINE $8460 cmpa     #%00000110
COMMENT_LINE $8460 bne      boss4Fight
COMMENT_LINE $8460 boss3Fight
COMMENT_LINE $8460 bra      todoJumpBoss3
COMMENT_LINE $8460 boss4Fight
COMMENT_LINE $8460 bra      todoJumpBoss4
FORCE_SYMBOL $8460 tmp_isSupershot
FORCE_SYMBOL $8463 explosionSound
COMMENT $8468 next game round, play an explosion
FORCE_SYMBOL $8468 explosionSound
FORCE_SYMBOL $846B bossHP
FORCE_SYMBOL $846F bulletDamage
FORCE_SYMBOL $8473 SHOT_RADIUS
FORCE_SYMBOL $8475 SHOT_RADIUS4
FORCE_SYMBOL $8479 SHOT_RADIUS3
FORCE_SYMBOL $847D SHOT_RADIUS2
FORCE_SYMBOL $8481 SHOT_RADIUS6
COMMENT_LINE $8487 five shot is also a "1" time shot
FORCE_SYMBOL $8487 SHOT_RADIUS5
COMMENT $848D positive is supershot
FORCE_SYMBOL $848D tmp_isSupershot
FORCE_SYMBOL $8490 shotHasNoScoopies
COMMENT_LINE $8493 ---
COMMENT_LINE $8493 remove 3 points of damage
COMMENT_LINE $8495 remove 2 points of damage
COMMENT_LINE $8497 remove 1 points of damage
FORCE_SYMBOL $8499 bossHP
FORCE_SYMBOL $849D shotHasNoScoopies
COMMENT_LINE $84A0 bank 3
COMMENT_LINE $84A0 ***************************************************************************
COMMENT_LINE $84A0 ***************************************************************************
COMMENT_LINE $84A0 ***************************************************************************
COMMENT $84A0 list of all single vectorlists in this
COMMENT $84A2 list of all single vectorlists in this
COMMENT $84B0 pattern, y, x
COMMENT $84B3 pattern, y, x
COMMENT $84B6 endmarker (high bit in pattern not set)
COMMENT $84B7 pattern, y, x
COMMENT $84BA pattern, y, x
COMMENT $84BD endmarker (high bit in pattern not set)
COMMENT $84BE pattern, y, x
COMMENT $84C1 endmarker (high bit in pattern not set)
COMMENT $84C2 pattern, y, x
COMMENT $84C5 endmarker (high bit in pattern not set)
COMMENT $84C6 pattern, y, x
COMMENT $84C9 endmarker (high bit in pattern not set)
COMMENT $84CA pattern, y, x
COMMENT $84CD pattern, y, x
COMMENT $84D0 pattern, y, x
COMMENT $84D3 endmarker (high bit in pattern not set)
COMMENT $84D4 pattern, y, x
COMMENT $84D7 pattern, y, x
COMMENT $84DA pattern, y, x
COMMENT $84DD endmarker (high bit in pattern not set)
COMMENT $84DE pattern, y, x
COMMENT $84E1 pattern, y, x
COMMENT $84E4 pattern, y, x
COMMENT $84E7 pattern, y, x
COMMENT $84EA endmarker (high bit in pattern not set)
COMMENT_LINE $84EB bank 3 + bank 0
COMMENT $84EB PC
COMMENT $84EB positive = end of list
COMMENT $84EB D current position for calculation only , Y is pos, y low is addy
COMMENT $84EB D current position for calculation only
COMMENT_LINE $84EB .....................................................
COMMENT_LINE $0000 .....................................................
COMMENT $84EB CBFC ; correct the stack to default address
FORCE_SYMBOL $84EB MY_STACK
COMMENT $84EF ensureScoopiesSafety
FORCE_NO_SYMBOL $84EF
FORCE_SYMBOL $84F2 jsrBank0X
FORCE_SYMBOL $84F5 setUpMainRound
FORCE_SYMBOL $84F8 initNormalBonus
COMMENT_LINE $84FB mightbe moved from here on
COMMENT_LINE $84FB ensure deinit warp
COMMENT_LINE $84FB always save these!
FORCE_SYMBOL $84FB multTimer
FORCE_SYMBOL $84FE oldTimer
FORCE_SYMBOL $8501 multiplyer
FORCE_SYMBOL $8504 oldMultiplyer
FORCE_SYMBOL $850A oldString
FORCE_SYMBOL $8513 inGameSecrets
FORCE_SYMBOL $8516 SECRET_ORDERED_RANKS
COMMENT $851A does not matter, time is not reduced anyway
FORCE_NO_SYMBOL $851A
FORCE_SYMBOL $851D multTimer
FORCE_SYMBOL $8520 multiplyer
COMMENT $8523 keep immunity bits, delete multiplyer
FORCE_SYMBOL $8523 IMUNITY_BITS
COMMENT $8525 set times 5
FORCE_SYMBOL $8525 MULTIPLY_5_OR
FORCE_SYMBOL $8527 multiplyer
COMMENT_LINE $852A lda      #5
COMMENT_LINE $852A sta      multiplyer
FORCE_NO_SYMBOL $8530
COMMENT_LINE $8537 check acchievement!
FORCE_SYMBOL $853A ACHIEVEMENT_FLAG_BYTE4_SPY_RANK3
COMMENT_LINE $853E check secret
FORCE_SYMBOL $853E inGameSecrets
FORCE_SYMBOL $8541 SECRET_3_RATE_SUCKERS
FORCE_SYMBOL $8545 multiplyer
COMMENT $8548 is current multiplyer 5?
FORCE_SYMBOL $8548 MULTIPLY_5_OR
FORCE_SYMBOL $854A MULTIPLY_5_OR
FORCE_NO_SYMBOL $854E
FORCE_SYMBOL $8551 multTimer
FORCE_SYMBOL $8554 multiplyer
COMMENT $8557 keep immunity bits, delete multiplyer
FORCE_SYMBOL $8557 IMUNITY_BITS
COMMENT $8559 set times 2
FORCE_SYMBOL $8559 MULTIPLY_2_OR
FORCE_SYMBOL $855B multiplyer
FORCE_NO_SYMBOL $8564
FORCE_NO_SYMBOL $8569
FORCE_SYMBOL $856B starCount
COMMENT_LINE $856E jsr initStars
COMMENT_LINE $856E l jsr initLevel
COMMENT $856E scale of "LEVEL"
FORCE_SYMBOL $856E tmp1
FORCE_SYMBOL $8571 levelCount
FORCE_SYMBOL $8574 levelCount
FORCE_SYMBOL $8577 levelCountSave
FORCE_SYMBOL $857A bonusCollect
FORCE_SYMBOL $857D bonusCollectSave
COMMENT $8580 ensure letter in air - will be displayed as collected after minestorm!
FORCE_SYMBOL $8580 bonusDisplay
FORCE_SYMBOL $8583 isDiamondRun
FORCE_SYMBOL $8586 random_seed
FORCE_NO_SYMBOL $858C
FORCE_SYMBOL $858E random_seed
FORCE_NO_SYMBOL $8591
FORCE_SYMBOL $8595 isDiamondRun
FORCE_SYMBOL $8598 songLoop
COMMENT_LINE $859B UP TO HERE!
COMMENT $859B ; dodgerIntroMusic
FORCE_NO_SYMBOL $859B
COMMENT $859E PLYINIT
FORCE_NO_SYMBOL $859E
FORCE_SYMBOL $85A1 jsrBank1_fromBank3_T1
COMMENT $85A4 PLYPLAYNOLOOP2 playAKSMusicNoLoop
FORCE_NO_SYMBOL $85A4
FORCE_SYMBOL $85A7 jsrBank1_fromBank3_T1
FORCE_SYMBOL $85AA songOver
COMMENT_LINE $85AF stay till music ends - keep minestrom "small"
FORCE_SYMBOL $85AF drunkTimer
COMMENT $85B4 reverse the drunkt timer reduction of "displayAMainRound"
FORCE_SYMBOL $85B4 drunkTimer
COMMENT_LINE $85B7 otherwise we NEVER get a drunken minestorm!
FORCE_SYMBOL $85B7 displayAMainRound
FORCE_SYMBOL $85BA Intensity_3F
FORCE_SYMBOL $85BD tmp1
FORCE_SYMBOL $85C0 tmp1
FORCE_NO_SYMBOL $85C3
FORCE_SYMBOL $85C7 tmp1
FORCE_NO_SYMBOL $85CA
FORCE_SYMBOL $85CE tmp1
FORCE_NO_SYMBOL $85D1
FORCE_SYMBOL $85D5 tmp1
FORCE_SYMBOL $85D8 tmp1
FORCE_SYMBOL $85DB tmp1
COMMENT $85DE drawMinestormString00
FORCE_NO_SYMBOL $85DE
FORCE_SYMBOL $85E1 jsrBank0X
COMMENT $85E4 and repeat forever
FORCE_SYMBOL $85E6 initDodger
COMMENT_LINE $85E9 lda      #$7f
COMMENT_LINE $85E9 sta      gameScale
COMMENT $85E9 one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $85E9 spawnStar
COMMENT $85EC one "star" spawn costs about 1200 cycles per round
FORCE_SYMBOL $85EC spawnStar
FORCE_NO_SYMBOL $85EF
FORCE_SYMBOL $85F2 Vec_Loop_Count
COMMENT $85F5 removes "DOT" in the middle
FORCE_SYMBOL $85F6 VIA_shift_reg
COMMENT $85F8 Vectrex BIOS recalibration
FORCE_SYMBOL $85F8 Wait_Recal
COMMENT $85FB doymsound100
FORCE_NO_SYMBOL $85FB
FORCE_SYMBOL $85FE jsrBank1_fromBank3_T1
FORCE_SYMBOL $8601 dodgerGotKilled
FORCE_NO_SYMBOL $860C
COMMENT $860E Store intensity in D/A
FORCE_SYMBOL $860E VIA_port_a
COMMENT $8610 mux disabled channel 2
FORCE_NO_SYMBOL $8610
FORCE_SYMBOL $8613 VIA_port_b
COMMENT $8615 mux enabled channel 2
FORCE_SYMBOL $8615 VIA_port_b
COMMENT $8617 turn off mux
FORCE_SYMBOL $8617 VIA_port_b
FORCE_SYMBOL $8619 calibrationZero7
FORCE_SYMBOL $861C PLAYER_YPOS
FORCE_SYMBOL $861E gameScale
FORCE_SYMBOL $8621 VIA_t1_cnt_lo
FORCE_SYMBOL $8623 playerXpos
COMMENT $8626 Store Y in D/A register
FORCE_SYMBOL $8626 VIA_port_a
COMMENT $8628 Blank low, zero high?
FORCE_NO_SYMBOL $8628
FORCE_SYMBOL $862A VIA_cntl
COMMENT $862D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $862D VIA_port_b
COMMENT $862F y must be set more than xx cycles on some vectrex
COMMENT $8630 Disable mux
FORCE_SYMBOL $8630 VIA_port_b
COMMENT $8632 Store X in D/A register
FORCE_SYMBOL $8632 VIA_port_a
COMMENT $8634 enable timer
FORCE_SYMBOL $8634 VIA_t1_cnt_hi
COMMENT_LINE $8636 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $8636 playerExplosionSpace
COMMENT $8639 * If the scale factor for the explosion
FORCE_SYMBOL $8639 EX_START_SIZE
COMMENT $863B * has not surpassed the max value, then
FORCE_SYMBOL $863B EX_MAX_SIZE
FORCE_SYMBOL $8641 doPlayerExplosion
FORCE_SYMBOL $8644 skipBecauseOfDeath
FORCE_SYMBOL $8647 sfx_pointer_3
COMMENT $864C backgrounddata
FORCE_NO_SYMBOL $864C
FORCE_SYMBOL $864F sfx_pointer_3
COMMENT_LINE $8652 ..................... joyport
COMMENT $8652 getButtonState
FORCE_NO_SYMBOL $8652
FORCE_SYMBOL $8655 jsrBank0X
COMMENT_LINE $8658 in a state of current button 1-4
COMMENT_LINE $8658 bit == 0 = pressed
COMMENT_LINE $8658 bit == 1 = not pressed
COMMENT_LINE $8658 a = xxxx 0000
COMMENT_LINE $8658 4321 - buttons
FORCE_NO_SYMBOL $8658
COMMENT $865C showMSHelp
FORCE_NO_SYMBOL $865C
FORCE_SYMBOL $865F jmpBankIRQ0Shift
FORCE_NO_SYMBOL $8662
COMMENT $8664 button 4 not pressed
FORCE_SYMBOL $8666 sfx_pointer_2
COMMENT_LINE $8669 bne noAccelNoiseDodger
COMMENT $8669 noiseOnlyData
FORCE_NO_SYMBOL $8669
FORCE_SYMBOL $866C sfx_pointer_2
FORCE_SYMBOL $866F dodgerAccel
FORCE_NO_SYMBOL $8672
FORCE_SYMBOL $8675 MAX_MINSTORM_SPEED_HI
FORCE_SYMBOL $867B dodgerAccel
FORCE_NO_SYMBOL $8680
COMMENT $8682 button 3 not pressed
FORCE_SYMBOL $8684 sfx_pointer_2
COMMENT_LINE $8687 bne noDeAccelNoiseDodger
COMMENT $8687 noiseOnlyDeAccelData
FORCE_NO_SYMBOL $8687
FORCE_SYMBOL $868A sfx_pointer_2
FORCE_SYMBOL $868D dodgerAccel
FORCE_NO_SYMBOL $8690
FORCE_SYMBOL $8693 dodgerAccel
COMMENT $8696 min speed is one
FORCE_NO_SYMBOL $8696
FORCE_NO_SYMBOL $869B
FORCE_SYMBOL $869E dodgerAccel
FORCE_SYMBOL $86A1 dodgerFinishedIndicator
FORCE_SYMBOL $86A6 multiplyer
FORCE_SYMBOL $86A9 MULTIPLY_5_ALL_AND
FORCE_SYMBOL $86AD tmp1_tmp
FORCE_SYMBOL $86B0 dodgerAccel
FORCE_NO_SYMBOL $86BA
FORCE_SYMBOL $86BF tmp1_tmp
FORCE_SYMBOL $86C6 player_score
FORCE_SYMBOL $86CA addScoreBackDodger1
COMMENT_LINE $86CD only 1/8th score?
FORCE_SYMBOL $86D5 addScore_d
FORCE_SYMBOL $86D8 dodgerAccel
FORCE_SYMBOL $86E1 dodgerProgress
FORCE_SYMBOL $86E8 dodgerProgress
COMMENT_LINE $86EB PLAYER_MOVEMENT_MOVE_BLOCK
COMMENT $86EB JoyDigitalHorizontal00
FORCE_NO_SYMBOL $86EB
FORCE_SYMBOL $86EE jsrBank0X
FORCE_SYMBOL $86F1 drunkTimer
FORCE_SYMBOL $86F6 Vec_Joy_1_X
FORCE_SYMBOL $86FB Vec_Joy_1_X
COMMENT_LINE $86FE ..................... joyport done
COMMENT $86FE Sets the intensity of the
FORCE_SYMBOL $86FE Intensity_5F
COMMENT_LINE $8701 vector beam to $5f
COMMENT $8701 drawPlayerDodger
FORCE_NO_SYMBOL $8701
FORCE_SYMBOL $8704 jsrBank0_fromBank3_Shift
COMMENT $8707 messsaging -> todo
FORCE_SYMBOL $8707 displayScore
COMMENT $870A Sets the intensity of the
FORCE_SYMBOL $870A Intensity_5F
FORCE_SYMBOL $870D dodgerFinishedIndicator
FORCE_SYMBOL $8712 enemyCount
FORCE_SYMBOL $871B dodgerProgress
COMMENT $8722 divide by 32
FORCE_NO_SYMBOL $8723
FORCE_SYMBOL $8725 enemyCount
COMMENT $8728 slowly increas mines falling
FORCE_SYMBOL $872A spawnEnemy
COMMENT_LINE $872F init "asteroid"
FORCE_SYMBOL $872F initAsteroidU
COMMENT_LINE $8732 USING U!!!
FORCE_SYMBOL $8732 precalcMines
COMMENT_LINE $8735 show distance meter
FORCE_NO_SYMBOL $8735
FORCE_SYMBOL $8738 Moveto_d
FORCE_SYMBOL $873B dodgerProgress
FORCE_SYMBOL $873E VIA_t1_cnt_lo
FORCE_NO_SYMBOL $8740
FORCE_SYMBOL $8743 Draw_Line_d
FORCE_SYMBOL $8746 gameScale
FORCE_SYMBOL $8749 VIA_t1_cnt_lo
FORCE_SYMBOL $874B enemylist_objects_head
COMMENT $874E (D = y,x) ; do all objects
COMMENT $8750 just "in star"
FORCE_SYMBOL $8750 in_moveFlag
COMMENT $8753 also calcs player movement "in move"
FORCE_SYMBOL $8753 starlist_objects_head
COMMENT $8757 (D = y,x) ; do all objects
COMMENT $8759 CBFC ; correct the stack to default address
FORCE_SYMBOL $8759 MY_STACK
COMMENT $875D and repeat forever
FORCE_SYMBOL $875D dodgerMain
COMMENT_LINE $8760 ***************************************************************************
COMMENT_LINE $8760 initialize the empty "dodger" object list
COMMENT_LINE $8760 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $8760 enemies
FORCE_SYMBOL $8760 dodgerFinishedIndicator
FORCE_SYMBOL $8763 starCount
FORCE_SYMBOL $8766 initStars
FORCE_SYMBOL $8769 stars_doneDodger
FORCE_SYMBOL $876C STARS_DONE_A
FORCE_SYMBOL $876F MAX_DODGE_OBJECTS
FORCE_SYMBOL $8771 dodgeObject_list
FORCE_SYMBOL $8774 enemylist_empty_head
FORCE_SYMBOL $8777 ENEMY_DONE
FORCE_SYMBOL $877B DodgerObject
FORCE_SYMBOL $877D NEXT_ENEMY_OBJECT
FORCE_NO_SYMBOL $877F
FORCE_SYMBOL $8786 NEXT_ENEMY_OBJECT
FORCE_SYMBOL $8789 enemylist_objects_head
FORCE_SYMBOL $878D dodger_done
FORCE_SYMBOL $8790 ENEMY_DONE_A
FORCE_NO_SYMBOL $8793
FORCE_SYMBOL $8795 dodgerAngle1
FORCE_SYMBOL $8798 dodgerAngle2
FORCE_SYMBOL $879B dodgerAngle3
FORCE_SYMBOL $879E dodgerAngle4
FORCE_NO_SYMBOL $87A1
FORCE_SYMBOL $87A4 dodgerAccel
COMMENT $87A8 that in stars no shots are tested!
FORCE_SYMBOL $87A8 testShot
FORCE_SYMBOL $87AB test2Shot
FORCE_SYMBOL $87AE playershotlist_objects_head
FORCE_SYMBOL $87B1 dodgerProgress
FORCE_SYMBOL $87B4 enemyCount
FORCE_SYMBOL $87B7 dodgerGotKilled
COMMENT_LINE $87BB ROT_MINE1     ;  'DUMB' MINE
COMMENT_LINE $87BB ROT_MINE2   ;  'MAGNETIC' MINE
COMMENT_LINE $87BB ROT_MINE3   ;  'DUMB FIRE-BALL' MINE
COMMENT_LINE $87BB ROT_MINE4   ;  'MAGNETIC FIRE-BALL' MINE
COMMENT_LINE $87BB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $87BB angle in dodgerAngle(s)
FORCE_NO_SYMBOL $87BB
FORCE_NO_SYMBOL $87C2
FORCE_SYMBOL $87C6 dodgerAngle1
FORCE_NO_SYMBOL $87CB
FORCE_SYMBOL $87CD dodgerAngle1
FORCE_SYMBOL $87D0 dodgerAngle1
FORCE_SYMBOL $87D3 MINE1
FORCE_SYMBOL $87D6 ROT_MINE1
FORCE_SYMBOL $87D9 Rot_VL_Mode
FORCE_SYMBOL $87DC dodgerAngle2
FORCE_NO_SYMBOL $87E1
FORCE_SYMBOL $87E3 dodgerAngle2
FORCE_SYMBOL $87E6 dodgerAngle2
FORCE_SYMBOL $87E9 MINE2
FORCE_SYMBOL $87EC ROT_MINE2
FORCE_SYMBOL $87EF Rot_VL_Mode
FORCE_NO_SYMBOL $87F2
FORCE_SYMBOL $87F7 dodgerAngle3
FORCE_NO_SYMBOL $87FC
FORCE_SYMBOL $87FE dodgerAngle3
FORCE_SYMBOL $8801 dodgerAngle3
FORCE_SYMBOL $8804 MINE3
FORCE_SYMBOL $8807 ROT_MINE3
FORCE_SYMBOL $880A Rot_VL_Mode
FORCE_SYMBOL $880D dodgerAngle4
FORCE_NO_SYMBOL $8812
FORCE_SYMBOL $8814 dodgerAngle4
FORCE_SYMBOL $8817 dodgerAngle4
FORCE_SYMBOL $881A MINE4
FORCE_SYMBOL $881D ROT_MINE4
FORCE_SYMBOL $8820 Rot_VL_Mode
FORCE_NO_SYMBOL $8823
COMMENT_LINE $8828 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $8830 dodgerBehaviour
FORCE_SYMBOL $8833 BEHAVIOUR
COMMENT_LINE $8835 random!
FORCE_SYMBOL $8835 random_seed
FORCE_NO_SYMBOL $883B
FORCE_SYMBOL $883D random_seed
FORCE_NO_SYMBOL $8840
FORCE_SYMBOL $8842 mineList
FORCE_SYMBOL $8847 random_seed
FORCE_NO_SYMBOL $884D
FORCE_SYMBOL $884F random_seed
FORCE_NO_SYMBOL $8852
FORCE_SYMBOL $8854 DODGER_SIZE
FORCE_SYMBOL $8856 isDiamondRun
FORCE_SYMBOL $885B random_seed
FORCE_NO_SYMBOL $8861
FORCE_SYMBOL $8863 random_seed
FORCE_NO_SYMBOL $8866
FORCE_SYMBOL $886A DodgerDiamond
FORCE_SYMBOL $886F DODGER_SIZE
FORCE_SYMBOL $8871 DODGER_ORG_LIST
FORCE_NO_SYMBOL $8873
FORCE_SYMBOL $8875 random_seed
FORCE_NO_SYMBOL $887B
FORCE_SYMBOL $887D random_seed
FORCE_SYMBOL $8880 Y_POS
FORCE_SYMBOL $8882 Y_POS16
FORCE_SYMBOL $8884 X_POS16
FORCE_SYMBOL $888A random_seed
FORCE_NO_SYMBOL $8890
FORCE_SYMBOL $8892 random_seed
FORCE_NO_SYMBOL $8895
FORCE_SYMBOL $8897 random_seed
FORCE_NO_SYMBOL $889D
FORCE_SYMBOL $889F random_seed
COMMENT $88A2 min speed
FORCE_NO_SYMBOL $88A2
FORCE_SYMBOL $88A4 DODGER_FALLSPEED
FORCE_NO_SYMBOL $88A7
FORCE_SYMBOL $88A9 dodgerFinishedIndicator
FORCE_SYMBOL $88AC noProgress
COMMENT $88AF 1* 1000 score
COMMENT $88B1 100 cash
COMMENT $88B3 2* 1000 score
COMMENT $88B5 200 cash
COMMENT $88B7 5* 1000 score
COMMENT $88B9 500 cash
COMMENT $88BB 50* 1000 score
COMMENT $88BD 1000 cash
COMMENT $88BF 100* 1000 score
COMMENT $88C1 5000 cash
FORCE_SYMBOL $88C3 Vec_Loop_Count
FORCE_SYMBOL $88C6 dodgeResult
FORCE_NO_SYMBOL $88C9
FORCE_SYMBOL $88CF dodgeResult
FORCE_NO_SYMBOL $88D2
FORCE_SYMBOL $88D8 dodgeResult
FORCE_NO_SYMBOL $88DB
FORCE_SYMBOL $88E1 dodgeResult
FORCE_NO_SYMBOL $88E4
FORCE_SYMBOL $88EA dodgeResult
COMMENT_LINE $88ED for testing
COMMENT_LINE $88ED lda #4
COMMENT_LINE $88ED sta dodgeResult
COMMENT_LINE $88ED clr dodgerGotKilled
FORCE_SYMBOL $88ED dodgerGotKilled
COMMENT_LINE $88F2 returnFromMinorHavoc
FORCE_SYMBOL $88F2 dodgeResult
FORCE_SYMBOL $88F7 resultValues
FORCE_NO_SYMBOL $88FC
FORCE_SYMBOL $88FE Vec_Loop_Count
FORCE_SYMBOL $8901 isDiamondRun
FORCE_NO_SYMBOL $8906
FORCE_SYMBOL $8908 dodgeResult
COMMENT $890D add chash
FORCE_NO_SYMBOL $890D
FORCE_SYMBOL $890F playerCashW
FORCE_SYMBOL $8912 playerCashW
FORCE_SYMBOL $8915 addScore1000
FORCE_SYMBOL $891D oldTimer
FORCE_SYMBOL $8920 multTimer
FORCE_SYMBOL $8923 oldMultiplyer
FORCE_SYMBOL $8926 multiplyer
FORCE_SYMBOL $8929 oldString
FORCE_NO_SYMBOL $8935
FORCE_SYMBOL $8938 sfx_pointer_3
FORCE_SYMBOL $893B sfx_pointer_2
FORCE_SYMBOL $893E sfx_pointer_1
COMMENT $8941 no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $8941 Vec_Music_Flag
COMMENT $8944 shadow regs
FORCE_SYMBOL $8944 Init_Music_Buf
COMMENT $8947 ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $8947 Do_Sound
COMMENT_LINE $894A was killed
FORCE_SYMBOL $894A setUpMainRound
FORCE_SYMBOL $894D initNormalBonus
FORCE_NO_SYMBOL $8950
FORCE_SYMBOL $8952 levelEnemyCount
FORCE_SYMBOL $8955 dodgerFinishedIndicator
FORCE_SYMBOL $895A dodgerGotKilled
COMMENT $895F MineStorm1Data
FORCE_NO_SYMBOL $895F
FORCE_SYMBOL $8962 sfx_pointer_1
FORCE_SYMBOL $8965 drunkTimer
COMMENT $896A reverse the drunkt timer reduction of "displayAMainRound"
FORCE_SYMBOL $896A drunkTimer
COMMENT_LINE $896D otherwise we NEVER get a drunken minestorm!
FORCE_SYMBOL $896D displayAMainRound
FORCE_SYMBOL $8970 Intensity_3F
COMMENT $8973 displayMinestormResult00
FORCE_NO_SYMBOL $8973
FORCE_SYMBOL $8976 jsrBank0X
FORCE_SYMBOL $8979 levelEnemyCount
COMMENT $897E and repeat "forever"
COMMENT_LINE $8980 display results
COMMENT_LINE $8980 reinit game
COMMENT_LINE $8980 go back to game
FORCE_NO_SYMBOL $8980
FORCE_SYMBOL $8982 playerShotSpeed
COMMENT $8988 +10 new since, enemies now start at the bottom
COMMENT $898B y wise a fixed compare is used, since y wise all shots are equal
FORCE_SYMBOL $898B shotYRadius
FORCE_SYMBOL $898E levelCountSave
FORCE_SYMBOL $8991 levelCount
FORCE_SYMBOL $8994 bonusCollectSave
FORCE_SYMBOL $8997 bonusCollect
FORCE_SYMBOL $899A doWarpFailure
FORCE_NO_SYMBOL $899D
FORCE_SYMBOL $89A0 Vec_Text_HW
COMMENT $89A3 leaveDodgerAchievementTest
FORCE_NO_SYMBOL $89A3
FORCE_SYMBOL $89A6 jmpBank0X
FORCE_SYMBOL $89A9 reinitLevelStartFromDodger
COMMENT_LINE $89AC bank 3
COMMENT_LINE $89AC bank 3
COMMENT_LINE $89AC attack patterns in increasing difficulty
COMMENT_LINE $89AC attackRightStupid - kamikaze absolut
COMMENT_LINE $89AC attackLeftStupid - kamikaze absolut
COMMENT_LINE $89AC attackMiddleStupid - kamikaze absolut
COMMENT_LINE $89AC attackLoopingAndFlyRight - fly by
COMMENT_LINE $89AC attackLoopingAndFlyLeft - fly by
COMMENT_LINE $89AC attackDirect2 - attack direct
COMMENT_LINE $89AC attackDropDead
COMMENT_LINE $89AC attackSingleLooping - attack direct fast
COMMENT_LINE $89AC attackMiddleZigZag
COMMENT_LINE $89AC attackDirect4 - attack direct fast
COMMENT_LINE $89AC ****************************************************************************************************
COMMENT_LINE $89AC 4 pointer to "possible" attack patters for this level
COMMENT_LINE $89DC Single attack pattern
COMMENT_LINE $89DC TYPE of pattern, pattern address/data
COMMENT_LINE $89DC SINGLE_ATTACK_RELATIVE_PATTERN  =  0                      ; relative means - it uses the current address of the enemy as start
COMMENT_LINE $89DC SINGLE_ATTACK_TARGET_ENEMY_PATTERN  =  1                  ; TARGET - uses somehow the players coordinate as coordinate info
COMMENT_LINE $89DC SINGLE_ATTACK_ABSOLUT_PATTERN  =  -1                      ; moves from current position to an absolut screen position
COMMENT_LINE $89DC struct SingleAttackPatternLine
COMMENT_LINE $89DC ds SINGLE_ATTACK_PATTERN_TYPE,2
COMMENT_LINE $89DC ds SINGLE_ATTACK_PATTERN_POINTER,2 ; when pointer = 0, than end of list
COMMENT_LINE $89DC end struct
COMMENT_LINE $89DC pointer to 0 subpattern = end of pattern collection
COMMENT_LINE $89DC db speed
COMMENT_LINE $89DC db type
COMMENT_LINE $89DC dw pointer or db y,x pos
COMMENT $89E2 go down move to absolut screen position -128 ,0 bottom middle
COMMENT $89E4 end is delay and go home
COMMENT $89EE go down move to absolut screen position -128 ,0 bottom middle
COMMENT $89F0 end is delay and go home
COMMENT $89FA go down move to absolut screen position -128 ,0 bottom middle
COMMENT $89FC end is delay and go home
COMMENT $8A00 end is delay and go home
COMMENT $8A04 end is delay and go home
COMMENT $8A08 end is delay and go home
COMMENT $8A0C end is delay and go home
COMMENT $8A16 go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A1A go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A1E go down move to absolut screen position -128 ,0 bottom middle
COMMENT_LINE $8A20 db 0, SINGLE_ATTACK_JUMP
COMMENT_LINE $8A20 dw attackMiddleLoopEndless
COMMENT $8A20 end is delay and go home
COMMENT $8A26 go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A36 go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A3A go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A3E go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A40 end is delay and go home
COMMENT $8A4A go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A4C end is delay and go home
COMMENT $8A50 end is delay and go home
COMMENT_LINE $8A54 ........
COMMENT $8A5A go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A74 end is delay and go home
COMMENT $8A78 end is delay and go home
COMMENT_LINE $8A7C ........
COMMENT $8A7E go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A82 go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A86 go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A8A go down move to absolut screen position -128 ,0 bottom middle
COMMENT $8A8C end is delay and go home
COMMENT $8A90 end is delay and go home
COMMENT_LINE $8A94 ........
COMMENT_LINE $8A94 this one lets the attacker fly a looping from the current position
COMMENT_LINE $8A94 and ends at the same position, but head pointing downwards
COMMENT_LINE $8A94 start address is realtive and taken as 0,0
COMMENT_LINE $8A94 internal coordinates are realtive as well
COMMENT $8A9A P_PATTERN_TARGET_RADIUS
COMMENT_LINE $8B2C bank 3
COMMENT_LINE $8B2C ****************************************************************************************************
COMMENT $8B2C after 1 repeat
COMMENT $8B2F after 1 repeat
COMMENT $8B32 after 2 repeat
COMMENT $8B37 after 2 repeat
COMMENT $8B3C after 2 repeat
COMMENT $8B43 after 2 repeat
COMMENT $8B4C after 2 repeat
COMMENT $8B51 after 6 repeat
COMMENT $8B5E after 6 repeat
COMMENT $8B6B after 2 repeat
COMMENT $8B72 after 2 repeat
COMMENT $8B77 after 2 repeat
COMMENT $8B7C after 2 repeat
COMMENT $8B89 after 2 repeat
COMMENT $8B8E after 1 repeat
COMMENT $8B93 after 4 repeat
COMMENT $8BA1 after 6 repeat
COMMENT $8BAE after 1 repeat
COMMENT $8BB3 after 1 repeat
COMMENT $8BB8 after 1 repeat
COMMENT $8BC9 after 1 repeat
COMMENT $8BCE after 1 repeat
COMMENT $8BD5 after 1 repeat
COMMENT $8BD8 after 4 repeat
COMMENT $8BE1 after 2 repeat
COMMENT $8BE6 after 2 repeat
COMMENT $8BE9 after 2 repeat
COMMENT $8BEC after 3 repeat
COMMENT $8BF9 after 3 repeat
COMMENT $8BFC after 3 repeat
COMMENT $8BFF after 3 repeat
COMMENT $8C0A after 3 repeat
COMMENT $8C38 after 3 repeat
COMMENT $8C3F after 3 repeat
COMMENT $8C87 after 3 repeat
COMMENT $8CC8 after 3 repeat
COMMENT $8DCA after 1 repeat
COMMENT_LINE $8DCD bank 3
COMMENT_LINE $8DCD ****************************************************************************************************
COMMENT_LINE $8DCD definition of one flight intro pattern
COMMENT_LINE $8DCD go directly to fly home!
COMMENT_LINE $8DCD db       5                            ; enemies this pattern applies for
COMMENT $8DCD countdown before next enemy appears
COMMENT $8DCE start Delay
COMMENT_LINE $8DCF determined with excel sheet
COMMENT_LINE $8DD7 ****************************************************************************************************
COMMENT_LINE $8DD7 definition of one flight intro pattern
COMMENT $8DD7 countdown before next enemy appears
COMMENT $8DD8 start Delay
COMMENT_LINE $8DD9 determined with excel sheet
COMMENT_LINE $8DD9 adders are 16 bit
COMMENT_LINE $8DD9 + 1 filler to make the length 8
COMMENT_LINE $8DD9 speed = 900
COMMENT $8DD9 starting coordinate,
COMMENT $8DDB y,x adder
COMMENT $8DDF angle times to because of 16bit
COMMENT_LINE $8DE1 line end
COMMENT $8DE7 coordinate to reach etc
COMMENT_LINE $8DE9 line end
COMMENT_LINE $8DF1 line end
COMMENT $8DF1 countdown before next enemy appears
COMMENT $8DF2 start Delay
COMMENT_LINE $8DF3 determined with excel sheet
COMMENT_LINE $8DF3 adders are 16 bit
COMMENT_LINE $8DF3 + 1 filler to make the length 8
COMMENT_LINE $8DF3 speed = 900
COMMENT $8DF3 starting coordinate,
COMMENT $8DF5 y,x adder
COMMENT $8DF9 angle times to because of 16bit
COMMENT_LINE $8DFB line end
COMMENT $8E01 coordinate to reach etc
COMMENT_LINE $8E03 line end
COMMENT_LINE $8E0B line end
COMMENT_LINE $8E0B ****************************************************************************************************
COMMENT $8E0B countdown before next enemy appears
COMMENT $8E0C start Delay
COMMENT_LINE $8E0D line 1
COMMENT_LINE $8E15 line 2
COMMENT_LINE $8E1D line 3
COMMENT_LINE $8E25 line 4
COMMENT_LINE $8E2D line 5
COMMENT_LINE $8E35 ****************************************************************************************************
COMMENT $8E35 countdown before next enemy appears
COMMENT $8E36 start Delay
COMMENT_LINE $8E37 line 1
COMMENT_LINE $8E3F line 2
COMMENT_LINE $8E47 line 3
COMMENT_LINE $8E4F line 4
COMMENT $8E57 countdown before next enemy appears
COMMENT $8E58 start Delay
COMMENT_LINE $8E59 line 1
COMMENT_LINE $8E61 line 2
COMMENT_LINE $8E69 line 3
COMMENT_LINE $8E71 line 4
COMMENT_LINE $8E79 ****************************************************************************************************
COMMENT $8E79 countdown before next enemy appears
COMMENT $8E7A start Delay
COMMENT_LINE $8E7B line 1
COMMENT_LINE $8E83 line 2
COMMENT_LINE $8E8B line 3
COMMENT_LINE $8E93 line 4
COMMENT_LINE $8E9B line 5
COMMENT_LINE $8EA5 ****************************************************************************************************
COMMENT_LINE $8EA5 Kamikaze Intro
COMMENT_LINE $8EA5 swoop left/right
COMMENT_LINE $8EA5 swoop middle
COMMENT_LINE $8EA5 all seperately defined!
COMMENT_LINE $8EA5 ****************************************************************************************************
COMMENT_LINE $8EA5 START
COMMENT_LINE $8EA5 ****************************************************************************************************
COMMENT_LINE $8EA5 db 1 ; enemies this pattern applies for
COMMENT $8EA5 countdown before next enemy appears
COMMENT $8EA6 start Delay
COMMENT_LINE $8EA7 line 1
COMMENT_LINE $8EAF line 2
COMMENT_LINE $8EB7 db 1 ; enemies this pattern applies for
COMMENT $8EB7 countdown before next enemy appears
COMMENT $8EB8 start Delay
COMMENT_LINE $8EB9 line 1
COMMENT_LINE $8EC1 line 2
COMMENT_LINE $8EC9 db 1 ; enemies this pattern applies for
COMMENT $8EC9 countdown before next enemy appears
COMMENT $8ECA start Delay
COMMENT_LINE $8ECB line 1
COMMENT_LINE $8ED3 line 2
COMMENT_LINE $8EDB db 1 ; enemies this pattern applies for
COMMENT $8EDB countdown before next enemy appears
COMMENT $8EDC start Delay
COMMENT_LINE $8EDD line 1
COMMENT_LINE $8EE5 line 2
COMMENT_LINE $8EED db 1 ; enemies this pattern applies for
COMMENT $8EED countdown before next enemy appears
COMMENT $8EEE start Delay
COMMENT_LINE $8EEF line 1
COMMENT_LINE $8EF7 line 2
COMMENT_LINE $8EFF ****************************************************************************************************
COMMENT_LINE $8EFF db 1 ; enemies this pattern applies for
COMMENT $8EFF countdown before next enemy appears
COMMENT $8F00 start Delay
COMMENT_LINE $8F01 line 1
COMMENT_LINE $8F01 line 1
COMMENT_LINE $8F09 line 2
COMMENT_LINE $8F11 db 1 ; enemies this pattern applies for
COMMENT $8F11 countdown before next enemy appears
COMMENT $8F12 start Delay
COMMENT_LINE $8F13 line 1
COMMENT_LINE $8F13 line 1
COMMENT_LINE $8F1B line 2
COMMENT_LINE $8F23 db 1 ; enemies this pattern applies for
COMMENT $8F23 countdown before next enemy appears
COMMENT $8F24 start Delay
COMMENT_LINE $8F25 line 1
COMMENT_LINE $8F25 line 1
COMMENT_LINE $8F2D line 2
COMMENT_LINE $8F35 db 1 ; enemies this pattern applies for
COMMENT $8F35 countdown before next enemy appears
COMMENT $8F36 start Delay
COMMENT_LINE $8F37 line 1
COMMENT_LINE $8F3F line 2
COMMENT_LINE $8F47 db 1 ; enemies this pattern applies for
COMMENT $8F47 countdown before next enemy appears
COMMENT $8F48 start Delay
COMMENT_LINE $8F49 line 1
COMMENT_LINE $8F49 line 1
COMMENT_LINE $8F51 line 2
COMMENT_LINE $8F59 ****************************************************************************************************
COMMENT_LINE $8F59 END
COMMENT_LINE $8F59 ****************************************************************************************************
COMMENT_LINE $8F59 ****************************************************************************************************
COMMENT_LINE $8F59 db 10 ; enemies this pattern applies for
COMMENT $8F59 25 ; countdown before next enemy appears
COMMENT $8F5A start Delay
COMMENT_LINE $8F5B determined with excel sheet
COMMENT_LINE $8F5B adders are 16 bit
COMMENT_LINE $8F5B + 1 filler to make the length 8
COMMENT_LINE $8F5B speed = 900
COMMENT_LINE $8F5B line 1
COMMENT_LINE $8F63 line 2
COMMENT_LINE $8F6B line 3
COMMENT_LINE $8F73 line 4
COMMENT_LINE $8F7B line 5
COMMENT_LINE $8F83 line 6
COMMENT_LINE $8F8B line 7
COMMENT_LINE $8F93 line 9
COMMENT_LINE $8F9B line 10
COMMENT_LINE $8FA3 line 11
COMMENT_LINE $8FAB line 10
COMMENT_LINE $8FBB ****************************************************************************************************
COMMENT $8FBB countdown before next enemy appears
COMMENT $8FBC start Delay
COMMENT_LINE $8FBD line 1
COMMENT_LINE $8FC5 line 2
COMMENT_LINE $8FCD line 3
COMMENT $8FD5 countdown before next enemy appears
COMMENT $8FD6 start Delay
COMMENT_LINE $8FD7 line 1
COMMENT_LINE $8FDF line 2
COMMENT_LINE $8FE7 line 3
COMMENT_LINE $8FEF ****************************************************************************************************
COMMENT_LINE $8FEF db 10 ; enemies this pattern applies for
COMMENT $8FEF 25 ; countdown before next enemy appears
COMMENT $8FF0 start Delay
COMMENT_LINE $8FF1 determined with excel sheet
COMMENT_LINE $8FF1 adders are 16 bit
COMMENT_LINE $8FF1 + 1 filler to make the length 8
COMMENT_LINE $8FF1 speed = 900
COMMENT_LINE $8FF1 line 1
COMMENT_LINE $8FF9 line 2
COMMENT_LINE $9001 line 3
COMMENT_LINE $9009 line 4
COMMENT_LINE $9011 line 5
COMMENT_LINE $9019 line 6
COMMENT_LINE $9021 line 7
COMMENT_LINE $9029 line 9
COMMENT_LINE $9031 line 10
COMMENT_LINE $9039 line 11
COMMENT_LINE $9041 ****************************************************************************************************
COMMENT_LINE $9041 db 5 ; enemies this pattern applies for
COMMENT $9041 countdown before next enemy appears
COMMENT $9042 start Delay
COMMENT_LINE $9043 determined with excel sheet
COMMENT_LINE $9043 adders are 16 bit
COMMENT_LINE $9043 + 1 filler to make the length 8
COMMENT_LINE $9043 speed = 900
COMMENT $9043 starting coordinate,
COMMENT $9045 y,x adder
COMMENT $9049 angle times to because of 16bit
COMMENT_LINE $904B line end
COMMENT $9051 coordinate to reach etc
COMMENT_LINE $9053 line end
COMMENT_LINE $905B ****************************************************************************************************
COMMENT_LINE $905B db 5 ; enemies this pattern applies for
COMMENT $905B countdown before next enemy appears
COMMENT $905C start Delay
COMMENT_LINE $905D line 1
COMMENT_LINE $9065 line 2
COMMENT_LINE $906D line 3
COMMENT_LINE $9075 ****************************************************************************************************
COMMENT $9075 countdown before next enemy appears
COMMENT $9076 start Delay
COMMENT_LINE $9077 determined with excel sheet
COMMENT_LINE $9077 adders are 16 bit
COMMENT_LINE $9077 + 1 filler to make the length 8
COMMENT_LINE $9077 speed = 900
COMMENT_LINE $9077 line 1
COMMENT_LINE $907F line 2
COMMENT_LINE $9087 line 3
COMMENT_LINE $908F line 4
COMMENT_LINE $9097 ****************************************************************************************************
COMMENT $9097 countdown before next enemy appears
COMMENT $9098 start Delay
COMMENT_LINE $9099 line 1
COMMENT_LINE $90A1 line 2
COMMENT_LINE $90A9 line 3
COMMENT_LINE $90B1 line 4
COMMENT_LINE $90B9 line 5
COMMENT_LINE $90C1 line 6
COMMENT_LINE $90C9 line 7
COMMENT_LINE $90D1 line 9
COMMENT_LINE $90D9 ****************************************************************************************************
COMMENT $90D9 countdown before next enemy appears
COMMENT $90DA start Delay
COMMENT_LINE $90DB line 1
COMMENT_LINE $90E3 line 2
COMMENT_LINE $90EB line 3
COMMENT_LINE $90F3 line 4
COMMENT_LINE $90FB line 5
COMMENT_LINE $9103 line 6
COMMENT_LINE $910B line 7
COMMENT_LINE $9113 line 9
COMMENT_LINE $911B ****************************************************************************************************
COMMENT $911B countdown before next enemy appears
COMMENT $911C start Delay
COMMENT_LINE $911D line 1
COMMENT_LINE $9125 line 2
COMMENT_LINE $912D line 3
COMMENT_LINE $9135 line 4
COMMENT_LINE $913D line 5
COMMENT_LINE $9145 line 6
COMMENT_LINE $914D line 7
COMMENT_LINE $9155 line 9
COMMENT_LINE $915D ****************************************************************************************************
COMMENT $915D countdown before next enemy appears
COMMENT $915E start Delay
COMMENT_LINE $915F line 1
COMMENT_LINE $9167 line 2
COMMENT_LINE $916F line 3
COMMENT_LINE $9177 line 4
COMMENT_LINE $917F line 5
COMMENT_LINE $9187 line 6
COMMENT_LINE $918F line 7
COMMENT_LINE $9197 line 9
COMMENT_LINE $919F ****************************************************************************************************
COMMENT $919F countdown before next enemy appears
COMMENT $91A0 start Delay
COMMENT_LINE $91A1 line 1
COMMENT_LINE $91A9 line 2
COMMENT_LINE $91B1 line 3
COMMENT_LINE $91B9 line 4
COMMENT_LINE $91C1 line 5
COMMENT_LINE $91C9 line 6
COMMENT_LINE $91D1 line 7
COMMENT_LINE $91D9 line 9
COMMENT_LINE $91E1 ****************************************************************************************************
COMMENT $91E1 countdown before next enemy appears
COMMENT $91E2 start Delay
COMMENT_LINE $91E3 line 1
COMMENT_LINE $91EB line 2
COMMENT_LINE $91F3 line 3
COMMENT_LINE $91FB line 4
COMMENT $9203 countdown before next enemy appears
COMMENT $9204 start Delay
COMMENT_LINE $9205 line 1
COMMENT_LINE $920D line 2
COMMENT_LINE $9215 line 3
COMMENT_LINE $921D ****************************************************************************************************
COMMENT $921D countdown before next enemy appears
COMMENT $921E start Delay
COMMENT_LINE $921F line 1
COMMENT_LINE $9227 line 2
COMMENT_LINE $922F line 3
COMMENT $9237 countdown before next enemy appears
COMMENT $9238 start Delay
COMMENT_LINE $9239 line 1
COMMENT_LINE $9241 line 2
COMMENT_LINE $9249 line 3
COMMENT_LINE $9251 ****************************************************************************************************
COMMENT $9251 countdown before next enemy appears
COMMENT $9252 start Delay
COMMENT_LINE $9253 line 1
COMMENT_LINE $925B line 2
COMMENT_LINE $9263 line 3
COMMENT $926B countdown before next enemy appears
COMMENT $926C start Delay
COMMENT_LINE $926D line 1
COMMENT_LINE $9275 line 2
COMMENT_LINE $927D line 3
COMMENT $9285 countdown before next enemy appears
COMMENT $9286 start Delay
COMMENT_LINE $9287 line 1
COMMENT_LINE $928F line 2
COMMENT_LINE $9297 line 3
COMMENT_LINE $929F ****************************************************************************************************
COMMENT $929F countdown before next enemy appears
COMMENT $92A0 start Delay
COMMENT $92B1 countdown before next enemy appears
COMMENT $92B2 start Delay
COMMENT_LINE $92C3 ****************************************************************************************************
COMMENT $92C3 countdown before next enemy appears
COMMENT $92C4 start Delay
COMMENT $92D5 countdown before next enemy appears
COMMENT $92D6 start Delay
COMMENT $92E7 countdown before next enemy appears
COMMENT $92E8 start Delay
COMMENT $92F9 countdown before next enemy appears
COMMENT $92FA start Delay
COMMENT $930B countdown before next enemy appears
COMMENT $930C start Delay
COMMENT $931D countdown before next enemy appears
COMMENT $931E start Delay
COMMENT $932F countdown before next enemy appears
COMMENT $9330 start Delay
COMMENT $9341 countdown before next enemy appears
COMMENT $9342 start Delay
COMMENT $9353 countdown before next enemy appears
COMMENT $9354 start Delay
COMMENT $9365 countdown before next enemy appears
COMMENT $9366 start Delay
COMMENT $9377 countdown before next enemy appears
COMMENT $9378 start Delay
COMMENT $9389 countdown before next enemy appears
COMMENT $938A start Delay
COMMENT $939B countdown before next enemy appears
COMMENT $939C start Delay
COMMENT $93AD countdown before next enemy appears
COMMENT $93AE start Delay
COMMENT_LINE $93BF ****************************************************************************************************
COMMENT $93BF countdown before next enemy appears
COMMENT $93C0 start Delay
COMMENT_LINE $93C1 line 1
COMMENT_LINE $93C9 line 2
COMMENT_LINE $93D1 line 3
COMMENT_LINE $93D9 line 4
COMMENT_LINE $93E1 line 5
COMMENT_LINE $93E9 ****************************************************************************************************
COMMENT $93E9 countdown before next enemy appears
COMMENT $93EA start Delay
COMMENT_LINE $93EB line 1
COMMENT_LINE $93F3 line 2
COMMENT_LINE $93FB line 3
COMMENT_LINE $9403 line 4
COMMENT_LINE $940B line 5
COMMENT_LINE $9413 line 6
COMMENT_LINE $941B line 7
COMMENT_LINE $9423 ****************************************************************************************************
COMMENT $9423 countdown before next enemy appears
COMMENT $9424 start Delay
COMMENT_LINE $9425 line 1
COMMENT_LINE $942D line 2
COMMENT_LINE $9435 line 3
COMMENT_LINE $943D line 4
COMMENT_LINE $9445 line 5
COMMENT_LINE $944D line 6
COMMENT_LINE $9455 line 7
COMMENT_LINE $945D ****************************************************************************************************
COMMENT $945D countdown before next enemy appears
COMMENT $945E start Delay
COMMENT_LINE $945F line 1
COMMENT_LINE $9467 line 2
COMMENT_LINE $946F ****************************************************************************************************
COMMENT $946F countdown before next enemy appears
COMMENT $9470 start Delay
COMMENT_LINE $9471 line 1
COMMENT_LINE $9479 line 2
COMMENT_LINE $9481 line 3
COMMENT_LINE $9489 ****************************************************************************************************
COMMENT $9489 countdown before next enemy appears
COMMENT $948A start Delay
COMMENT_LINE $948B line 1
COMMENT_LINE $9493 line 2
COMMENT_LINE $949B line 3
COMMENT_LINE $94A3 line 4
COMMENT_LINE $94AB line 5
COMMENT_LINE $94B3 line 6
COMMENT_LINE $94BB line 7
COMMENT_LINE $94C3 ****************************************************************************************************
COMMENT $94C3 countdown before next enemy appears
COMMENT $94C4 start Delay
COMMENT_LINE $94CD line 2
COMMENT_LINE $94D5 ****************************************************************************************************
COMMENT $94D5 countdown before next enemy appears
COMMENT $94D6 start Delay
COMMENT_LINE $94D7 line 1
COMMENT_LINE $94DF line 2
COMMENT_LINE $94E7 line 3
COMMENT_LINE $94EF line 4
COMMENT_LINE $94F7 line 5
COMMENT_LINE $94FF ****************************************************************************************************
COMMENT $94FF countdown before next enemy appears
COMMENT $9500 start Delay
COMMENT_LINE $9501 line 1
COMMENT_LINE $9509 line 2
COMMENT_LINE $9511 line 3
COMMENT_LINE $9519 line 4
COMMENT_LINE $9521 line 5
COMMENT_LINE $9529 line 6
COMMENT_LINE $9531 ****************************************************************************************************
COMMENT $9531 countdown before next enemy appears
COMMENT $9532 start Delay
COMMENT_LINE $9533 line 1
COMMENT_LINE $9533 db       120 , -120
COMMENT_LINE $9533 dw       0 , 900
COMMENT_LINE $9533 db       ((( 90 +ANGLE_DIF/2)/ANGLE_DIF)*2)%16, 5
COMMENT_LINE $9533 line 2
COMMENT_LINE $953B db       120 , 120
COMMENT_LINE $953B dw       -637 , -637
COMMENT_LINE $953B db       ((( 225 +ANGLE_DIF/2)/ANGLE_DIF)*2)%16, 5
COMMENT_LINE $953B line 2
COMMENT_LINE $9543 line 3
COMMENT_LINE $954B line 4
COMMENT_LINE $9553 line 5
COMMENT_LINE $955B ****************************************************************************************************
COMMENT $955B countdown before next enemy appears
COMMENT $955C start Delay
COMMENT_LINE $955D line 1
COMMENT_LINE $9565 line 2
COMMENT_LINE $956D line 3
COMMENT_LINE $9575 ****************************************************************************************************
COMMENT $9575 countdown before next enemy appears
COMMENT $9576 start Delay
COMMENT_LINE $9577 line 1
COMMENT_LINE $957F line 2
COMMENT $9587 countdown before next enemy appears
COMMENT $9588 start Delay
COMMENT_LINE $9589 line 1
COMMENT_LINE $9591 line 2
COMMENT_LINE $9599 ****************************************************************************************************
COMMENT $9599 countdown before next enemy appears
COMMENT $959A start Delay
COMMENT_LINE $959B line 1
COMMENT_LINE $95A3 line 2
COMMENT $95AB countdown before next enemy appears
COMMENT $95AC start Delay
COMMENT_LINE $95AD line 1
COMMENT_LINE $95B5 line 2
COMMENT_LINE $95BD line 3
COMMENT_LINE $95C5 ****************************************************************************************************
COMMENT $95C5 25 ; countdown before next enemy appears
COMMENT $95C6 start Delay
COMMENT_LINE $95C7 determined with excel sheet
COMMENT_LINE $95C7 adders are 16 bit
COMMENT_LINE $95C7 + 1 filler to make the length 8
COMMENT_LINE $95C7 speed = 900
COMMENT_LINE $95C7 line 1
COMMENT_LINE $95CF line 2
COMMENT_LINE $95D7 line 3
COMMENT_LINE $95DF line 4
COMMENT_LINE $95E7 line 5
COMMENT_LINE $95EF line 6
COMMENT_LINE $95F7 line 7
COMMENT_LINE $95FF line 9
COMMENT_LINE $9607 line 10
COMMENT_LINE $960F line 11
COMMENT_LINE $9617 line 10
COMMENT $9617 the loop y,x must be the same as the one where the loop goes to
COMMENT_LINE $961F ****************************************************************************************************
COMMENT_LINE $961F NOT USED YET
COMMENT_LINE $961F ****************************************************************************************************
COMMENT_LINE $961F ****************************************************************************************************
COMMENT_LINE $961F ****************************************************************************************************
COMMENT_LINE $961F ****************************************************************************************************
COMMENT_LINE $961F ****************************************************************************************************
COMMENT_LINE $961F null terminated list with entry patterns
COMMENT_LINE $961F patterns should be thus not more than
COMMENT_LINE $961F twenty enemies are spawned
COMMENT_LINE $961F (but nothing bad happens either)
COMMENT_LINE $961F struct IntroLine
COMMENT_LINE $961F ds LINE_PATTERN_DEF, 2
COMMENT_LINE $961F ds LINE_PATTERN_INVERS ,1
COMMENT_LINE $961F ds LINE_PATTERN_ENEMY_COUNT ,1
COMMENT_LINE $961F end struct
COMMENT_LINE $961F Level1Intro:                                              ;        empty
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 1 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 0 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 1 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 0 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 1 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 0 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 1 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 0 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 1 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 0 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 1 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 0 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 1 *256+1
COMMENT_LINE $961F dw       entryPatternNineToCenterToThree , 0 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 1 *256+1
COMMENT_LINE $961F dw       entryPatternTenToCenterToTwo , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenToCenterToOne , 0 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 1 *256+1
COMMENT_LINE $961F dw       entryPatternElevenPToCenterToOneP , 0 *256+1
COMMENT_LINE $961F dw       0
COMMENT $961F not inverse
COMMENT $9623 inverse
COMMENT $9627 not inverse
COMMENT $962B inverse
COMMENT $9631 not inverse
COMMENT $9635 inverse
COMMENT $9639 not inverse
COMMENT $963D inverse
COMMENT $9655 not inverse
COMMENT $9659 inverse
COMMENT $965D not inverse
COMMENT $9661 inverse
COMMENT $9667 not inverse
COMMENT $966B inverse
COMMENT $966F not inverse
COMMENT $9673 inverse
COMMENT $9679 not inverse
COMMENT $967D not inverse
COMMENT $9681 inverse
COMMENT $9685 inverse
COMMENT $968B not inverse
COMMENT $968F inverse
COMMENT $9693 not inverse
COMMENT $9697 inverse
COMMENT $969D not inverse
COMMENT $96A1 inverse
COMMENT $96A5 not inverse
COMMENT $96A9 inverse
COMMENT $9729 not inverse
COMMENT $972D inverse
COMMENT $9731 not inverse
COMMENT $9735 inverse
COMMENT $973B not inverse
COMMENT $973F not inverse
COMMENT $9743 inverse
COMMENT $9747 inverse
COMMENT $975F not inverse
COMMENT $9763 not inverse
COMMENT $9767 inverse
COMMENT $976B inverse
COMMENT $9771 not inverse
COMMENT $9775 not inverse
COMMENT $9779 inverse
COMMENT $977D inverse
COMMENT $9783 not inverse
COMMENT $9787 inverse
COMMENT $978D inverse
COMMENT $9791 not inverse
COMMENT $9795 inverse
COMMENT $9799 not inverse
COMMENT $979F not inverse
COMMENT $97A3 inverse
COMMENT $97A7 not inverse
COMMENT $97AB inverse
COMMENT $97C3 inverse
COMMENT $97C7 not inverse
COMMENT $97CB inverse
COMMENT $97CF not inverse
COMMENT $97D3 inverse
COMMENT $97D7 not inverse
COMMENT $97DD not inverse
COMMENT $97E1 inverse
COMMENT $97E5 not inverse
COMMENT $97E9 inverse
COMMENT $97EF not inverse
COMMENT $97F3 inverse
COMMENT $97F7 not inverse
COMMENT $97FB inverse
COMMENT $9801 not inverse
COMMENT $9805 inverse
COMMENT $9809 not inverse
COMMENT $980D inverse
COMMENT $9811 not inverse
COMMENT $9815 inverse
COMMENT $9819 not inverse
COMMENT $981D inverse
COMMENT $9823 not inverse
COMMENT $9827 inverse
COMMENT $982B not inverse
COMMENT $982F inverse
COMMENT $9835 not inverse
COMMENT $9839 inverse
COMMENT $983D not inverse
COMMENT $9841 inverse
COMMENT $9845 not inverse
COMMENT $9849 inverse
COMMENT $984D not inverse
COMMENT $9851 inverse
COMMENT $9855 not inverse
COMMENT $9859 inverse
COMMENT $985D not inverse
COMMENT $9861 inverse
COMMENT $9865 not inverse
COMMENT $9869 inverse
COMMENT $986D not inverse
COMMENT $9871 inverse
COMMENT $9875 not inverse
COMMENT $9879 inverse
COMMENT $987D not inverse
COMMENT $9881 inverse
COMMENT $9887 inverse
COMMENT $988B not inverse
COMMENT $988F inverse
COMMENT $9893 not inverse
COMMENT $9899 inverse
COMMENT $989D not inverse
COMMENT $98A1 inverse
COMMENT $98A5 not inverse
COMMENT $98A9 inverse
COMMENT $98AD not inverse
COMMENT $98B1 inverse
COMMENT $98B5 not inverse
COMMENT $98B9 inverse
COMMENT $98BD not inverse
COMMENT $98C1 inverse
COMMENT $98C5 not inverse
COMMENT $98C9 inverse
COMMENT $98CD not inverse
COMMENT $98D1 inverse
COMMENT $98D5 not inverse
COMMENT $98D9 inverse
COMMENT $98DD not inverse
COMMENT $98E1 inverse
COMMENT $98E5 not inverse
COMMENT $98EB not inverse
COMMENT $98EF inverse
COMMENT $98F3 not inverse
COMMENT $98F7 inverse
COMMENT $98FB not inverse
COMMENT $98FF inverse
COMMENT $9905 inverse
COMMENT $9909 inverse
COMMENT $990D inverse
COMMENT $9911 inverse
COMMENT $9915 inverse
COMMENT $9919 inverse
COMMENT $991D inverse
COMMENT $9921 inverse
COMMENT $9925 inverse
COMMENT $9929 inverse
COMMENT $992D not inverse
COMMENT $9931 inverse
COMMENT $9935 inverse
COMMENT $9939 inverse
COMMENT $993D inverse
COMMENT $9941 inverse
COMMENT $9945 inverse
COMMENT $9949 inverse
COMMENT $994D inverse
COMMENT $9951 inverse
COMMENT $9955 inverse
COMMENT $9959 not inverse
COMMENT $995F inverse
COMMENT $9969 not inverse
COMMENT $996D inverse
COMMENT $9971 not inverse
COMMENT $9975 inverse
COMMENT $9979 not inverse
COMMENT $997D inverse
COMMENT $9981 not inverse
COMMENT $9985 inverse
COMMENT $9989 not inverse
COMMENT $998D inverse
COMMENT $9991 not inverse
COMMENT $9995 inverse
COMMENT $9999 not inverse
COMMENT $999D inverse
COMMENT $99A1 not inverse
COMMENT $99A5 inverse
COMMENT $99A9 not inverse
COMMENT $99AD inverse
COMMENT $99B1 not inverse
COMMENT $99B5 inverse
COMMENT $99BF not inverse
COMMENT $99C3 inverse
COMMENT $99C9 inverse
COMMENT $99CD inverse
COMMENT $99D1 inverse
COMMENT $99D5 inverse
COMMENT $99D9 inverse
COMMENT $99DD inverse
COMMENT $99E1 inverse
COMMENT $99E5 inverse
COMMENT $99E9 inverse
COMMENT $99ED inverse
COMMENT $99F1 not inverse
COMMENT $99F5 inverse
COMMENT $99F9 inverse
COMMENT $99FD inverse
COMMENT $9A01 inverse
COMMENT $9A05 inverse
COMMENT $9A09 inverse
COMMENT $9A0D inverse
COMMENT $9A11 inverse
COMMENT $9A15 inverse
COMMENT $9A19 inverse
COMMENT $9A1D not inverse
COMMENT $9A23 inverse
COMMENT $9A27 inverse
COMMENT $9A2B inverse
COMMENT $9A2F inverse
COMMENT $9A33 inverse
COMMENT $9A37 inverse
COMMENT $9A3B inverse
COMMENT $9A3F inverse
COMMENT $9A43 inverse
COMMENT $9A47 inverse
COMMENT $9A4B inverse
COMMENT $9A4F inverse
COMMENT $9A53 inverse
COMMENT $9A57 inverse
COMMENT $9A5B inverse
COMMENT $9A5F inverse
COMMENT $9A63 inverse
COMMENT $9A67 inverse
COMMENT $9A6B inverse
COMMENT $9A6F inverse
COMMENT $9A73 inverse
COMMENT $9A77 inverse
COMMENT $9A7B inverse
COMMENT $9A7F inverse
COMMENT $9A83 inverse
COMMENT $9A87 inverse
COMMENT $9A8B inverse
COMMENT $9A8F inverse
COMMENT $9A93 inverse
COMMENT $9A97 inverse
COMMENT $9A9B inverse
COMMENT $9A9F inverse
COMMENT $9AA3 inverse
COMMENT $9AA7 inverse
COMMENT $9AAB inverse
COMMENT $9AAF inverse
COMMENT $9AB3 inverse
COMMENT $9AB7 inverse
COMMENT $9ABB inverse
COMMENT $9ABF inverse
COMMENT $9AC3 inverse
COMMENT $9AC9 inverse
COMMENT $9ACD inverse
COMMENT $9AD1 inverse
COMMENT $9AD5 inverse
COMMENT $9AD9 inverse
COMMENT $9ADD inverse
COMMENT $9AE1 inverse
COMMENT $9AE5 inverse
COMMENT $9AE9 inverse
COMMENT $9AED inverse
COMMENT $9AF1 inverse
COMMENT $9AF5 inverse
COMMENT $9AF9 inverse
COMMENT $9AFD inverse
COMMENT $9B01 inverse
COMMENT $9B05 inverse
COMMENT $9B09 inverse
COMMENT $9B0D inverse
COMMENT $9B11 inverse
COMMENT $9B15 inverse
COMMENT $9B1B left
COMMENT $9B1F middle
COMMENT $9B23 right
COMMENT $9B27 left
COMMENT $9B2B middle
COMMENT $9B2F right
COMMENT $9B33 left
COMMENT $9B37 middle
COMMENT $9B3B right
COMMENT $9B3F left
COMMENT $9B43 middle
COMMENT $9B47 right
COMMENT $9B4B left
COMMENT $9B4F middle
COMMENT $9B53 right
COMMENT $9B57 left
COMMENT $9B5B middle
COMMENT $9B5F right
COMMENT $9B63 left
COMMENT $9B67 middle
COMMENT $9B6B right
COMMENT $9B6F left
COMMENT $9B73 middle
COMMENT $9B77 right
COMMENT $9B7D not inverse
COMMENT $9B81 not inverse
COMMENT $9B85 not inverse
COMMENT $9B89 inverse
COMMENT $9B8D not inverse
COMMENT $9B93 not inverse
COMMENT $9B97 not inverse
COMMENT $9B9B not inverse
COMMENT $9B9F not inverse
COMMENT $9BA3 not inverse
COMMENT $9BA7 inverse
COMMENT $9BAB inverse
COMMENT $9BAF inverse
COMMENT $9BB3 inverse
COMMENT $9BB7 inverse
COMMENT $9BBB inverse
COMMENT $9BBF inverse
COMMENT $9BC3 inverse
COMMENT $9BC7 inverse
COMMENT $9BCB inverse
COMMENT $9BCF inverse
COMMENT $9BD3 inverse
COMMENT $9BD7 inverse
COMMENT $9BDB inverse
COMMENT $9BDF inverse
COMMENT $9BE5 not inverse
COMMENT $9BE9 inverse
COMMENT $9BEF not inverse
COMMENT $9BF3 not inverse
COMMENT $9BF7 inverse
COMMENT $9C0F not inverse
COMMENT $9C13 inverse
COMMENT $9C17 not inverse
COMMENT $9C1B inverse
COMMENT $9C1F not inverse
COMMENT $9C23 inverse
COMMENT $9C29 not inverse
COMMENT $9C2D inverse
COMMENT $9C31 not inverse
COMMENT $9C35 inverse
COMMENT $9C3B not inverse
COMMENT $9C3F inverse
COMMENT $9C45 not inverse
COMMENT $9C49 not inverse
COMMENT $9C4D not inverse
COMMENT $9C51 not inverse
COMMENT $9C69 not inverse
COMMENT $9C6D not inverse
COMMENT $9C71 not inverse
COMMENT $9C75 not inverse
COMMENT $9C7B not inverse
COMMENT $9C7F not inverse
COMMENT $9C83 not inverse
COMMENT $9C87 not inverse
COMMENT_LINE $9C9F dw       bigBlock1a , 0 *256+1        ; not inverse
COMMENT $9C9F not inverse
COMMENT $9CA3 not inverse
COMMENT $9CA7 not inverse
COMMENT $9CAB not inverse
COMMENT $9CAF not inverse
COMMENT $9CB3 not inverse
COMMENT $9CB7 not inverse
COMMENT $9CBB not inverse
COMMENT $9CBF not inverse
COMMENT $9CC3 not inverse
COMMENT $9CC7 not inverse
COMMENT $9CCB not inverse
COMMENT_LINE $9CCF dw       bigBlock12 , 0 *256+1        ; not inverse
COMMENT $9CCF not inverse
COMMENT $9CD3 not inverse
COMMENT $9CD9 not inverse
COMMENT $9CDD not inverse
COMMENT $9CE1 not inverse
COMMENT $9CE5 not inverse
COMMENT_LINE $9CEB dummy
COMMENT $9CEB not inverse
COMMENT $9CF1 not inverse
COMMENT $9CF5 not inverse
COMMENT $9CF9 not inverse
COMMENT $9CFD not inverse
COMMENT $9D01 not inverse
COMMENT $9D05 not inverse
COMMENT $9D09 not inverse
COMMENT $9D0D not inverse
COMMENT $9D11 not inverse
COMMENT $9D15 not inverse
COMMENT $9D19 not inverse
COMMENT $9D1D not inverse
COMMENT $9D21 not inverse
COMMENT $9D25 not inverse
COMMENT $9D3D not inverse
COMMENT $9D41 not inverse
COMMENT $9D45 not inverse
COMMENT $9D49 not inverse
COMMENT $9D83 not inverse
COMMENT $9D87 not inverse
COMMENT $9D8B not inverse
COMMENT $9D8F not inverse
COMMENT_LINE $9D95 bank 3
COMMENT_LINE $9DBF ****************************************************************************************************
COMMENT_LINE $9DBF patterns must be so, tha +-16 can be added!
COMMENT_LINE $9E0F 20 positions
COMMENT_LINE $9E9F 20 positions
COMMENT_LINE $9EF9 ****************************************************************************************************
COMMENT_LINE $9EFD ****************************************************************************************************
COMMENT $9EFD so that "enemy count finishes"ok" ; LEVEL_INTRO_PATTERN
COMMENT $9EFF LEVEL_WAITING_PATTERN
COMMENT $9F03 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $9F06 db       6                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $9F06 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $9F07 LEVEL_BULLET_BORDER, 1
COMMENT $9F08 LEVEL_BONUS_BORDER, 1
COMMENT $9F09 perhaps first Bug entry behaviour ("beam in")
COMMENT $9F0B big Bug Count
COMMENT $9F0C bug shot delay
COMMENT_LINE $9F0D ****************************************************************************************************
COMMENT_LINE $9F0D ****************************************************************************************************
COMMENT $9F0D normal
COMMENT $9F0F normal
COMMENT $9F11 biggy
COMMENT $9F13 kamikaze, warp
COMMENT $9F15 shop
COMMENT $9F17 normal
COMMENT $9F19 biggy
COMMENT $9F1B challenge, warp
COMMENT $9F1D normal
COMMENT $9F1F shop
COMMENT $9F21 biggy
COMMENT $9F23 kamikaze, warp
COMMENT $9F25 normal
COMMENT $9F27 normal
COMMENT $9F29 biggy, shop
COMMENT $9F2B challenge, warp
COMMENT $9F2D normal
COMMENT $9F2F normal
COMMENT $9F31 biggy
COMMENT $9F33 shop, kamikaze, warp
COMMENT $9F35 normal
COMMENT $9F37 normal
COMMENT $9F39 biggy
COMMENT $9F3B challenge, warp
COMMENT $9F3D Queen
COMMENT $9F3F normal , shop
COMMENT $9F41 normal
COMMENT $9F43 biggy
COMMENT $9F45 kamikaze, warp
COMMENT $9F47 normal
COMMENT $9F49 shop
COMMENT $9F4B biggy
COMMENT $9F4D challenge, warp
COMMENT $9F4F normal
COMMENT $9F51 normal
COMMENT $9F53 biggy, shop
COMMENT $9F55 kamikaze, warp
COMMENT $9F57 normal
COMMENT $9F59 normal
COMMENT $9F5B biggy
COMMENT $9F5D challenge, warp, shop
COMMENT $9F5F normal
COMMENT $9F61 normal
COMMENT $9F63 biggy
COMMENT $9F65 kamikaze, warp
COMMENT $9F67 normal, shop
COMMENT $9F69 normal
COMMENT $9F6B biggy
COMMENT $9F6D challenge, warp
COMMENT $9F6F normal
COMMENT $9F71 Sinistar
COMMENT $9F73 normal, shop ; all tie fighter swoop in from all sides
COMMENT $9F75 normal, biggy ; vader from both sides
COMMENT $9F77 kamikaze, warp ; 3 vader parallel from above
COMMENT $9F79 normal ; two shields, 3 x wing
COMMENT $9F7B normal; five middle shields all enemy from side
COMMENT $9F7D hard; biggy, shop ; from all sides,
COMMENT $9F7F challenge, warp
COMMENT $9F81 hard; normal; from all sides all enemies
COMMENT $9F83 normal ; shield loop
COMMENT $9F85 biggy
COMMENT $9F87 kamikaze, warp , shop
COMMENT $9F89 normal ; make it a 60 spawner with x ids
COMMENT $9F8B normal
COMMENT $9F8D biggy
COMMENT $9F8F challenge, warp
COMMENT $9F91 hard; normal shop ; from all sides all enemies
COMMENT $9F93 normal
COMMENT $9F95 hard; biggy ; from all sides, dropping debris
COMMENT $9F97 kamikaze, warp
COMMENT $9F99 normal
COMMENT $9F9B normal, shop
COMMENT $9F9D biggy
COMMENT $9F9F challenge, warp
COMMENT $9FA1 normal
COMMENT $9FA3 normal
COMMENT $9FA5 Deathstar
COMMENT $9FA7 biggy, shop
COMMENT $9FA9 kamikaze, warp
COMMENT $9FAB normal
COMMENT $9FAD normal
COMMENT $9FAF biggy
COMMENT $9FB1 challenge, warp , shop
COMMENT $9FB3 normal - tribble
COMMENT $9FB5 normal
COMMENT $9FB7 biggy,
COMMENT $9FB9 kamikaze, warp
COMMENT $9FBB normal , shop
COMMENT $9FBD normal
COMMENT $9FBF biggy - Bug Nirvana
COMMENT $9FC1 challenge, warp
COMMENT $9FC3 normal
COMMENT $9FC5 normal , shop
COMMENT $9FC7 biggy
COMMENT $9FC9 kamikaze, warp
COMMENT $9FCB normal
COMMENT $9FCD normal
COMMENT $9FCF biggy , shop - Bug Nirvana II
COMMENT $9FD1 challenge, warp
COMMENT $9FD3 normal
COMMENT $9FD5 normal
COMMENT $9FD7 biggy - random shots
COMMENT $9FD9 Borg
COMMENT_LINE $9FDD ****************************************************************************************************
COMMENT_LINE $9FDD waiting patterns could be coded in 4 bits (1ß values)
COMMENT_LINE $9FDD attackpattern could be coded in 3 bits (5 vylues)
COMMENT_LINE $9FDD bullet/bonus border could be coded in 4 bits each (eg 16 different values each, with a 4 bit pointer)
COMMENT_LINE $9FDD -> 400 bytes could be saved!
COMMENT_LINE $9FDD ****************************************************************************************************
COMMENT $9FDD introPattern1 ; LEVEL_INTRO_PATTERN
COMMENT $9FDF LEVEL_WAITING_PATTERN
COMMENT $9FE3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $9FE6 db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $9FE6 db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $9FE7 LEVEL_BULLET_BORDER, 1
COMMENT $9FE8 LEVEL_BONUS_BORDER, 1
COMMENT $9FE9 LEVEL_INTRO_PATTERN
COMMENT $9FEB LEVEL_WAITING_PATTERN
COMMENT $9FEF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $9FF2 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $9FF2 db       3                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $9FF2 + LEVEL_TYPE_DONT_SHOOT_WHILE_WAITING
COMMENT $9FF3 LEVEL_BULLET_BORDER, 1
COMMENT $9FF4 LEVEL_BONUS_BORDER, 1
COMMENT $9FF5 LEVEL_INTRO_PATTERN
COMMENT $9FF7 LEVEL_WAITING_PATTERN
COMMENT $9FFB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $9FFE db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $9FFE db       3                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $9FFF LEVEL_BULLET_BORDER, 1
COMMENT $A000 LEVEL_BONUS_BORDER, 1
COMMENT $A003 big Bug Count
COMMENT $A004 bug shot delay
COMMENT $A005 LEVEL_INTRO_PATTERN
COMMENT $A007 LEVEL_WAITING_PATTERN
COMMENT $A00B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A00E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A00E db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A00F LEVEL_BULLET_BORDER, 1
COMMENT $A010 LEVEL_BONUS_BORDER, 1
COMMENT $A011 LEVEL_INTRO_PATTERN
COMMENT $A013 LEVEL_WAITING_PATTERN
COMMENT $A017 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A01A db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A01A db       3                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A01B LEVEL_BULLET_BORDER, 1
COMMENT $A01C LEVEL_BONUS_BORDER, 1
COMMENT $A01D introPattern1 ; LEVEL_INTRO_PATTERN
COMMENT $A01F LEVEL_WAITING_PATTERN
COMMENT $A023 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A026 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A026 db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A027 LEVEL_BULLET_BORDER, 1
COMMENT $A028 LEVEL_BONUS_BORDER, 1
COMMENT $A029 LEVEL_INTRO_PATTERN
COMMENT $A02B LEVEL_WAITING_PATTERN
COMMENT $A02F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A032 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A032 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A033 LEVEL_BULLET_BORDER, 1
COMMENT $A034 LEVEL_BONUS_BORDER, 1
COMMENT $A037 big Bug Count
COMMENT $A038 bug shot delay
COMMENT $A039 LEVEL_INTRO_PATTERN
COMMENT $A03B LEVEL_WAITING_PATTERN
COMMENT $A03F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A042 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A042 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A043 LEVEL_BULLET_BORDER, 1
COMMENT $A044 LEVEL_BONUS_BORDER, 1
COMMENT $A045 LEVEL_INTRO_PATTERN
COMMENT $A047 LEVEL_WAITING_PATTERN
COMMENT $A04B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A04E db       6                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A04E db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A04F LEVEL_BULLET_BORDER, 1
COMMENT $A050 LEVEL_BONUS_BORDER, 1
COMMENT $A051 LEVEL_INTRO_PATTERN
COMMENT $A053 LEVEL_WAITING_PATTERN
COMMENT $A057 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A05A db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A05A db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A05B LEVEL_BULLET_BORDER, 1
COMMENT $A05C LEVEL_BONUS_BORDER, 1
COMMENT $A05D LEVEL_INTRO_PATTERN
COMMENT $A05F LEVEL_WAITING_PATTERN
COMMENT $A063 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A066 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A066 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A067 LEVEL_BULLET_BORDER, 1
COMMENT $A068 LEVEL_BONUS_BORDER, 1
COMMENT $A06B big Bug Count
COMMENT $A06C bug shot delay
COMMENT $A06D LEVEL_INTRO_PATTERN
COMMENT $A06F LEVEL_WAITING_PATTERN
COMMENT $A073 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A076 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A076 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A077 LEVEL_BULLET_BORDER, 1
COMMENT $A078 LEVEL_BONUS_BORDER, 1
COMMENT $A079 LEVEL_INTRO_PATTERN
COMMENT $A07B LEVEL_WAITING_PATTERN
COMMENT $A07F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A082 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A082 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A083 LEVEL_BULLET_BORDER, 1
COMMENT $A084 LEVEL_BONUS_BORDER, 1
COMMENT $A085 LEVEL_INTRO_PATTERN
COMMENT $A087 LEVEL_WAITING_PATTERN
COMMENT $A08B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A08E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A08E db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A08F LEVEL_BULLET_BORDER, 1
COMMENT $A090 LEVEL_BONUS_BORDER, 1
COMMENT $A091 LEVEL_INTRO_PATTERN
COMMENT $A093 LEVEL_WAITING_PATTERN
COMMENT $A097 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A09A db       7                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A09A db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A09B LEVEL_BULLET_BORDER, 1
COMMENT $A09C LEVEL_BONUS_BORDER, 1
COMMENT $A09F big Bug Count
COMMENT $A0A0 bug shot delay
COMMENT $A0A1 LEVEL_INTRO_PATTERN
COMMENT $A0A3 LEVEL_WAITING_PATTERN
COMMENT $A0A7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0AA db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0AA db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0AB LEVEL_BULLET_BORDER, 1
COMMENT $A0AC LEVEL_BONUS_BORDER, 1
COMMENT $A0AD LEVEL_INTRO_PATTERN
COMMENT $A0AF LEVEL_WAITING_PATTERN
COMMENT $A0B3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0B6 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0B6 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0B7 LEVEL_BULLET_BORDER, 1
COMMENT $A0B8 LEVEL_BONUS_BORDER, 1
COMMENT $A0B9 LEVEL_INTRO_PATTERN
COMMENT $A0BB LEVEL_WAITING_PATTERN
COMMENT $A0BF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0C2 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0C2 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0C3 LEVEL_BULLET_BORDER, 1
COMMENT $A0C4 LEVEL_BONUS_BORDER, 1
COMMENT $A0C5 LEVEL_INTRO_PATTERN
COMMENT $A0C7 LEVEL_WAITING_PATTERN
COMMENT $A0CB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0CE db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0CE db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0CF LEVEL_BULLET_BORDER, 1
COMMENT $A0D0 LEVEL_BONUS_BORDER, 1
COMMENT $A0D3 big Bug Count
COMMENT $A0D4 bug shot delay
COMMENT $A0D5 LEVEL_INTRO_PATTERN
COMMENT $A0D7 LEVEL_WAITING_PATTERN
COMMENT $A0DB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0DE db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0DE db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0DF LEVEL_BULLET_BORDER, 1
COMMENT $A0E0 LEVEL_BONUS_BORDER, 1
COMMENT $A0E1 LEVEL_INTRO_PATTERN
COMMENT $A0E3 LEVEL_WAITING_PATTERN
COMMENT $A0E7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0EA db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0EA db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0EB LEVEL_BULLET_BORDER, 1
COMMENT $A0EC LEVEL_BONUS_BORDER, 1
COMMENT $A0ED LEVEL_INTRO_PATTERN
COMMENT $A0EF LEVEL_WAITING_PATTERN
COMMENT $A0F3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A0F6 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A0F6 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A0F7 LEVEL_BULLET_BORDER, 1
COMMENT $A0F8 LEVEL_BONUS_BORDER, 1
COMMENT $A0F9 LEVEL_INTRO_PATTERN
COMMENT $A0FB LEVEL_WAITING_PATTERN
COMMENT $A0FF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A102 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A102 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A103 LEVEL_BULLET_BORDER, 1
COMMENT $A104 LEVEL_BONUS_BORDER, 1
COMMENT $A107 big Bug Count
COMMENT $A108 bug shot delay
COMMENT $A109 LEVEL_INTRO_PATTERN
COMMENT $A10B LEVEL_WAITING_PATTERN
COMMENT $A10F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A112 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A112 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A113 LEVEL_BULLET_BORDER, 1
COMMENT $A114 LEVEL_BONUS_BORDER, 1
COMMENT_LINE $A115 LEVEL_BONUS_BORDER, 1
COMMENT $A115 LEVEL_INTRO_PATTERN
COMMENT $A117 LEVEL_WAITING_PATTERN
COMMENT $A11B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A11E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A11E db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A11F LEVEL_BULLET_BORDER, 1
COMMENT $A120 LEVEL_BONUS_BORDER, 1
COMMENT $A121 LEVEL_INTRO_PATTERN
COMMENT $A123 LEVEL_WAITING_PATTERN
COMMENT $A127 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A12A db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A12A db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A12B LEVEL_BULLET_BORDER, 1
COMMENT $A12C LEVEL_BONUS_BORDER, 1
COMMENT $A12D LEVEL_INTRO_PATTERN
COMMENT $A12F LEVEL_WAITING_PATTERN
COMMENT $A133 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A136 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A136 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A137 LEVEL_BULLET_BORDER, 1
COMMENT $A138 LEVEL_BONUS_BORDER, 1
COMMENT $A13B big Bug Count
COMMENT $A13C bug shot delay
COMMENT $A13D LEVEL_INTRO_PATTERN
COMMENT $A13F LEVEL_WAITING_PATTERN
COMMENT $A143 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A146 db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A146 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A147 LEVEL_BULLET_BORDER, 1
COMMENT $A148 LEVEL_BONUS_BORDER, 1
COMMENT $A149 LEVEL_INTRO_PATTERN
COMMENT $A14B LEVEL_WAITING_PATTERN
COMMENT $A14F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A152 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A152 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A153 LEVEL_BULLET_BORDER, 1
COMMENT $A154 LEVEL_BONUS_BORDER, 1
COMMENT $A155 LEVEL_INTRO_PATTERN
COMMENT $A157 LEVEL_WAITING_PATTERN
COMMENT $A15B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A15E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A15E db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A15F LEVEL_BULLET_BORDER, 1
COMMENT $A160 LEVEL_BONUS_BORDER, 1
COMMENT $A161 LEVEL_INTRO_PATTERN
COMMENT $A163 LEVEL_WAITING_PATTERN
COMMENT $A167 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A16A db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A16A db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A16B LEVEL_BULLET_BORDER, 1
COMMENT $A16C LEVEL_BONUS_BORDER, 1
COMMENT $A16F big Bug Count
COMMENT $A170 bug shot delay
COMMENT $A171 LEVEL_INTRO_PATTERN
COMMENT $A173 LEVEL_WAITING_PATTERN
COMMENT $A177 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A17A db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A17A db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A17B LEVEL_BULLET_BORDER, 1
COMMENT $A17C LEVEL_BONUS_BORDER, 1
COMMENT $A17D LEVEL_INTRO_PATTERN
COMMENT $A17F LEVEL_WAITING_PATTERN
COMMENT $A183 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A186 db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A186 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A187 LEVEL_BULLET_BORDER, 1
COMMENT $A188 LEVEL_BONUS_BORDER, 1
COMMENT $A189 LEVEL_INTRO_PATTERN
COMMENT $A18B LEVEL_WAITING_PATTERN
COMMENT $A18F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A192 db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A192 db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A193 LEVEL_BULLET_BORDER, 1
COMMENT $A194 LEVEL_BONUS_BORDER, 1
COMMENT $A195 LEVEL_INTRO_PATTERN
COMMENT $A197 LEVEL_WAITING_PATTERN
COMMENT $A19B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A19E db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A19E db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A19F LEVEL_BULLET_BORDER, 1
COMMENT $A1A0 LEVEL_BONUS_BORDER, 1
COMMENT $A1A3 big Bug Count
COMMENT $A1A4 bug shot delay
COMMENT $A1A5 LEVEL_INTRO_PATTERN
COMMENT $A1A7 LEVEL_WAITING_PATTERN
COMMENT $A1AB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1AE db       7                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1AE db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1AF LEVEL_BULLET_BORDER, 1
COMMENT $A1B0 LEVEL_BONUS_BORDER, 1
COMMENT $A1B1 LEVEL_INTRO_PATTERN
COMMENT $A1B3 LEVEL_WAITING_PATTERN
COMMENT $A1B7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1BA db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1BA db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1BB LEVEL_BULLET_BORDER, 1
COMMENT $A1BC LEVEL_BONUS_BORDER, 1
COMMENT $A1BD LEVEL_INTRO_PATTERN
COMMENT $A1BF LEVEL_WAITING_PATTERN
COMMENT $A1C3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1C6 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1C6 db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1C7 LEVEL_BULLET_BORDER, 1
COMMENT $A1C8 LEVEL_BONUS_BORDER, 1
COMMENT $A1C9 LEVEL_INTRO_PATTERN
COMMENT $A1CB LEVEL_WAITING_PATTERN
COMMENT $A1CF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1D2 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1D2 db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1D3 LEVEL_BULLET_BORDER, 1
COMMENT $A1D4 LEVEL_BONUS_BORDER, 1
COMMENT $A1D7 big Bug Count
COMMENT $A1D8 bug shot delay
COMMENT $A1D9 LEVEL_INTRO_PATTERN
COMMENT $A1DB LEVEL_WAITING_PATTERN
COMMENT $A1DF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1E2 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1E2 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1E3 LEVEL_BULLET_BORDER, 1
COMMENT $A1E4 LEVEL_BONUS_BORDER, 1
COMMENT $A1E5 LEVEL_INTRO_PATTERN
COMMENT $A1E7 LEVEL_WAITING_PATTERN
COMMENT $A1EB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1EE db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1EE db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1EF LEVEL_BULLET_BORDER, 1
COMMENT $A1F0 LEVEL_BONUS_BORDER, 1
COMMENT $A1F1 number of enemies in case of "LEVEL_APPEAR_AT_WAITING"
COMMENT $A1F3 LEVEL_WAITING_PATTERN
COMMENT $A1F7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A1FA db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A1FA db       10                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A1FB LEVEL_BULLET_BORDER, 1
COMMENT $A1FC LEVEL_BONUS_BORDER, 1
COMMENT $A1FD number of enemies in case of "LEVEL_APPEAR_AT_WAITING"
COMMENT $A1FF LEVEL_WAITING_PATTERN
COMMENT $A203 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A206 db       10                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A206 db       10                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A207 LEVEL_BULLET_BORDER, 1
COMMENT $A208 LEVEL_BONUS_BORDER, 1
COMMENT $A20B big Bug Count
COMMENT $A20C bug shot delay
COMMENT $A20D LEVEL_INTRO_PATTERN
COMMENT $A20F LEVEL_WAITING_PATTERN
COMMENT $A213 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A216 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A216 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A217 LEVEL_BULLET_BORDER, 1
COMMENT $A218 LEVEL_BONUS_BORDER, 1
COMMENT $A219 number of enemies in case of "LEVEL_APPEAR_AT_WAITING"
COMMENT $A21B LEVEL_WAITING_PATTERN
COMMENT $A21F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A222 db       6                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A222 db       10                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A223 LEVEL_BULLET_BORDER, 1
COMMENT $A224 LEVEL_BONUS_BORDER, 1
COMMENT $A225 number of enemies in case of "LEVEL_APPEAR_AT_WAITING"
COMMENT $A227 LEVEL_WAITING_PATTERN
COMMENT $A22B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A22E db       10                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A22E db       10                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A22F LEVEL_BULLET_BORDER, 1
COMMENT $A230 LEVEL_BONUS_BORDER, 1
COMMENT $A231 LEVEL_INTRO_PATTERN
COMMENT $A233 LEVEL_WAITING_PATTERN
COMMENT $A237 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A23A db       10                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A23A db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A23B LEVEL_BULLET_BORDER, 1
COMMENT $A23C LEVEL_BONUS_BORDER, 1
COMMENT $A23F big Bug Count
COMMENT $A240 bug shot delay
COMMENT $A241 LEVEL_INTRO_PATTERN
COMMENT $A243 LEVEL_WAITING_PATTERN
COMMENT $A247 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A24A db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A24A db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A24B LEVEL_BULLET_BORDER, 1
COMMENT $A24C LEVEL_BONUS_BORDER, 1
COMMENT $A24D LEVEL_INTRO_PATTERN
COMMENT $A24F LEVEL_WAITING_PATTERN
COMMENT $A253 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A256 db       10                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A256 db       1                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A257 LEVEL_BULLET_BORDER, 1
COMMENT $A258 LEVEL_BONUS_BORDER, 1
COMMENT $A259 LEVEL_INTRO_PATTERN
COMMENT $A25B LEVEL_WAITING_PATTERN
COMMENT $A25F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A262 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A262 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A263 LEVEL_BULLET_BORDER, 1
COMMENT $A264 LEVEL_BONUS_BORDER, 1
COMMENT $A265 LEVEL_INTRO_PATTERN
COMMENT $A267 LEVEL_WAITING_PATTERN
COMMENT $A26B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A26E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A26E db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A26F LEVEL_BULLET_BORDER, 1
COMMENT $A270 LEVEL_BONUS_BORDER, 1
COMMENT $A273 big Bug Count
COMMENT $A274 bug shot delay
COMMENT $A275 LEVEL_INTRO_PATTERN
COMMENT $A277 LEVEL_WAITING_PATTERN
COMMENT $A27B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A27E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A27E db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A27F LEVEL_BULLET_BORDER, 1
COMMENT $A280 LEVEL_BONUS_BORDER, 1
COMMENT $A281 LEVEL_INTRO_PATTERN
COMMENT $A283 LEVEL_WAITING_PATTERN
COMMENT $A287 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A28A db       10                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A28A db       10                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A28B LEVEL_BULLET_BORDER, 1
COMMENT $A28C LEVEL_BONUS_BORDER, 1
COMMENT $A28D LEVEL_INTRO_PATTERN
COMMENT $A28F LEVEL_WAITING_PATTERN
COMMENT $A293 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A296 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A296 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A297 LEVEL_BULLET_BORDER, 1
COMMENT $A298 LEVEL_BONUS_BORDER, 1
COMMENT $A299 LEVEL_INTRO_PATTERN
COMMENT $A29B LEVEL_WAITING_PATTERN
COMMENT $A29F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2A2 db       6                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2A2 db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2A3 LEVEL_BULLET_BORDER, 1
COMMENT $A2A4 LEVEL_BONUS_BORDER, 1
COMMENT $A2A7 big Bug Count
COMMENT $A2A8 bug shot delay
COMMENT $A2A9 LEVEL_INTRO_PATTERN
COMMENT $A2AB LEVEL_WAITING_PATTERN
COMMENT $A2AF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2B2 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2B2 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2B3 LEVEL_BULLET_BORDER, 1
COMMENT $A2B4 LEVEL_BONUS_BORDER, 1
COMMENT $A2B5 LEVEL_INTRO_PATTERN
COMMENT $A2B7 LEVEL_WAITING_PATTERN
COMMENT $A2BB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2BE db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2BE db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2BF LEVEL_BULLET_BORDER, 1
COMMENT $A2C0 LEVEL_BONUS_BORDER, 1
COMMENT $A2C1 LEVEL_INTRO_PATTERN
COMMENT $A2C3 LEVEL_WAITING_PATTERN
COMMENT $A2C7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2CA db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2CA db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2CB LEVEL_BULLET_BORDER, 1
COMMENT $A2CC LEVEL_BONUS_BORDER, 1
COMMENT $A2CD LEVEL_INTRO_PATTERN
COMMENT $A2CF LEVEL_WAITING_PATTERN
COMMENT $A2D3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2D6 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2D6 db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2D7 LEVEL_BULLET_BORDER, 1
COMMENT $A2D8 LEVEL_BONUS_BORDER, 1
COMMENT $A2DB big Bug Count
COMMENT $A2DC bug shot delay
COMMENT $A2DD LEVEL_INTRO_PATTERN
COMMENT $A2DF LEVEL_WAITING_PATTERN
COMMENT $A2E3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2E6 db       6                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2E6 db       6                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2E7 LEVEL_BULLET_BORDER, 1
COMMENT $A2E8 LEVEL_BONUS_BORDER, 1
COMMENT $A2E9 LEVEL_INTRO_PATTERN
COMMENT $A2EB LEVEL_WAITING_PATTERN
COMMENT $A2EF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2F2 db       3                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2F2 db       3                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2F3 LEVEL_BULLET_BORDER, 1
COMMENT $A2F4 LEVEL_BONUS_BORDER, 1
COMMENT $A2F5 LEVEL_INTRO_PATTERN
COMMENT $A2F7 LEVEL_WAITING_PATTERN
COMMENT $A2FB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A2FE db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A2FE db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A2FF LEVEL_BULLET_BORDER, 1
COMMENT $A300 LEVEL_BONUS_BORDER, 1
COMMENT $A301 LEVEL_INTRO_PATTERN
COMMENT $A303 LEVEL_WAITING_PATTERN
COMMENT $A307 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A30A db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A30A db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A30B LEVEL_BULLET_BORDER, 1
COMMENT $A30C LEVEL_BONUS_BORDER, 1
COMMENT $A30F big Bug Count
COMMENT $A310 bug shot delay
COMMENT $A311 LEVEL_INTRO_PATTERN
COMMENT $A313 LEVEL_WAITING_PATTERN
COMMENT $A317 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A31A db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A31A db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A31B LEVEL_BULLET_BORDER, 1
COMMENT $A31C LEVEL_BONUS_BORDER, 1
COMMENT $A31D LEVEL_INTRO_PATTERN
COMMENT $A31F LEVEL_WAITING_PATTERN
COMMENT $A323 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A326 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A326 db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A327 LEVEL_BULLET_BORDER, 1
COMMENT $A328 LEVEL_BONUS_BORDER, 1
COMMENT $A329 LEVEL_INTRO_PATTERN
COMMENT $A32B LEVEL_WAITING_PATTERN
COMMENT $A32F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A332 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A332 db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A333 LEVEL_BULLET_BORDER, 1
COMMENT $A334 LEVEL_BONUS_BORDER, 1
COMMENT $A335 LEVEL_INTRO_PATTERN
COMMENT $A337 LEVEL_WAITING_PATTERN
COMMENT $A33B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A33E db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A33E db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A33F LEVEL_BULLET_BORDER, 1
COMMENT $A340 LEVEL_BONUS_BORDER, 1
COMMENT $A343 big Bug Count
COMMENT $A344 bug shot delay
COMMENT $A345 LEVEL_INTRO_PATTERN
COMMENT $A347 LEVEL_WAITING_PATTERN
COMMENT $A34B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A34E db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A34E db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A34F LEVEL_BULLET_BORDER, 1
COMMENT $A350 LEVEL_BONUS_BORDER, 1
COMMENT $A351 LEVEL_INTRO_PATTERN
COMMENT $A353 LEVEL_WAITING_PATTERN
COMMENT $A357 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A35A db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A35A db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A35B LEVEL_BULLET_BORDER, 1
COMMENT $A35C LEVEL_BONUS_BORDER, 1
COMMENT $A35D LEVEL_INTRO_PATTERN
COMMENT $A35F LEVEL_WAITING_PATTERN
COMMENT $A363 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A366 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A366 db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A367 LEVEL_BULLET_BORDER, 1
COMMENT $A368 LEVEL_BONUS_BORDER, 1
COMMENT $A369 LEVEL_INTRO_PATTERN
COMMENT $A36B LEVEL_WAITING_PATTERN
COMMENT $A36F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A372 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A372 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A373 LEVEL_BULLET_BORDER, 1
COMMENT $A374 LEVEL_BONUS_BORDER, 1
COMMENT $A377 big Bug Count
COMMENT $A378 bug shot delay
COMMENT $A379 LEVEL_INTRO_PATTERN
COMMENT $A37B LEVEL_WAITING_PATTERN
COMMENT $A37F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A382 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A382 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A383 LEVEL_BULLET_BORDER, 1
COMMENT $A384 LEVEL_BONUS_BORDER, 1
COMMENT $A385 LEVEL_INTRO_PATTERN
COMMENT $A387 LEVEL_WAITING_PATTERN
COMMENT $A38B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A38E db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A38E db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A38F LEVEL_BULLET_BORDER, 1
COMMENT $A390 LEVEL_BONUS_BORDER, 1
COMMENT $A391 LEVEL_INTRO_PATTERN
COMMENT $A393 LEVEL_WAITING_PATTERN
COMMENT $A397 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A39A db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A39A db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A39B LEVEL_BULLET_BORDER, 1
COMMENT $A39C LEVEL_BONUS_BORDER, 1
COMMENT $A39D LEVEL_INTRO_PATTERN
COMMENT $A39F LEVEL_WAITING_PATTERN
COMMENT $A3A3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3A6 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3A6 db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3A7 LEVEL_BULLET_BORDER, 1
COMMENT $A3A8 LEVEL_BONUS_BORDER, 1
COMMENT $A3AB big Bug Count
COMMENT $A3AC bug shot delay
COMMENT $A3AD LEVEL_INTRO_PATTERN
COMMENT $A3AF LEVEL_WAITING_PATTERN
COMMENT $A3B3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3B6 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3B6 db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3B7 LEVEL_BULLET_BORDER, 1
COMMENT $A3B8 LEVEL_BONUS_BORDER, 1
COMMENT $A3B9 LEVEL_INTRO_PATTERN
COMMENT $A3BB LEVEL_WAITING_PATTERN
COMMENT $A3BF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3C2 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3C2 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3C3 LEVEL_BULLET_BORDER, 1
COMMENT $A3C4 LEVEL_BONUS_BORDER, 1
COMMENT $A3C5 LEVEL_INTRO_PATTERN
COMMENT $A3C7 LEVEL_WAITING_PATTERN
COMMENT $A3CB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3CE db       8                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3CE db       8                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3CF LEVEL_BULLET_BORDER, 1
COMMENT $A3D0 LEVEL_BONUS_BORDER, 1
COMMENT $A3D1 LEVEL_INTRO_PATTERN
COMMENT $A3D3 LEVEL_WAITING_PATTERN
COMMENT $A3D7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3DA db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3DA db       7                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3DB LEVEL_BULLET_BORDER, 1
COMMENT $A3DC LEVEL_BONUS_BORDER, 1
COMMENT $A3DF big Bug Count
COMMENT $A3E0 bug shot delay
COMMENT $A3E1 LEVEL_INTRO_PATTERN
COMMENT $A3E3 LEVEL_WAITING_PATTERN
COMMENT $A3E7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3EA db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3EA db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3EB LEVEL_BULLET_BORDER, 1
COMMENT $A3EC LEVEL_BONUS_BORDER, 1
COMMENT $A3ED LEVEL_INTRO_PATTERN
COMMENT $A3EF LEVEL_WAITING_PATTERN
COMMENT $A3F3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A3F6 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A3F6 db       4                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A3F7 LEVEL_BULLET_BORDER, 1
COMMENT $A3F8 LEVEL_BONUS_BORDER, 1
COMMENT $A3F9 LEVEL_INTRO_PATTERN
COMMENT $A3FB LEVEL_WAITING_PATTERN
COMMENT $A3FF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A402 db       8                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A402 db       8                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A403 LEVEL_BULLET_BORDER, 1
COMMENT $A404 LEVEL_BONUS_BORDER, 1
COMMENT $A405 Level83Intro ; LEVEL_INTRO_PATTERN
COMMENT $A407 LEVEL_WAITING_PATTERN
COMMENT $A40B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A40E db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A40E db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A40F LEVEL_BULLET_BORDER, 1
COMMENT $A410 LEVEL_BONUS_BORDER, 1
COMMENT $A413 big Bug Count
COMMENT $A414 bug shot delay
COMMENT $A415 LEVEL_INTRO_PATTERN
COMMENT $A417 LEVEL_WAITING_PATTERN
COMMENT $A41B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A41E db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A41E db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A41F LEVEL_BULLET_BORDER, 1
COMMENT $A420 LEVEL_BONUS_BORDER, 1
COMMENT $A421 LEVEL_INTRO_PATTERN
COMMENT $A423 LEVEL_WAITING_PATTERN
COMMENT $A427 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A42A db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A42A db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A42B LEVEL_BULLET_BORDER, 1
COMMENT $A42C LEVEL_BONUS_BORDER, 1
COMMENT $A42D LEVEL_INTRO_PATTERN
COMMENT $A42F LEVEL_WAITING_PATTERN
COMMENT $A433 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A436 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A436 db       5                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A437 LEVEL_BULLET_BORDER, 1
COMMENT $A438 LEVEL_BONUS_BORDER, 1
COMMENT $A439 Level83Intro ; LEVEL_INTRO_PATTERN
COMMENT $A43B LEVEL_WAITING_PATTERN
COMMENT $A43F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A442 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A442 db       3                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A443 LEVEL_BULLET_BORDER, 1
COMMENT $A444 LEVEL_BONUS_BORDER, 1
COMMENT $A447 big Bug Count
COMMENT $A448 bug shot delay
COMMENT $A449 LEVEL_INTRO_PATTERN
COMMENT $A44B LEVEL_WAITING_PATTERN
COMMENT $A44F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A452 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A452 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A453 LEVEL_BULLET_BORDER, 1
COMMENT $A454 LEVEL_BONUS_BORDER, 1
COMMENT $A455 LEVEL_INTRO_PATTERN
COMMENT $A457 LEVEL_WAITING_PATTERN
COMMENT $A45B LEVEL_ENEMY_DEFINITION
COMMENT $A45D at least two attack patterns, otherwise ion easy there is NONE
COMMENT_LINE $A45E db       6                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A45E db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A45F LEVEL_BULLET_BORDER, 1
COMMENT $A460 LEVEL_BONUS_BORDER, 1
COMMENT $A461 LEVEL_INTRO_PATTERN
COMMENT $A463 LEVEL_WAITING_PATTERN
COMMENT $A467 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A46A db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A46A db       8                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A46B LEVEL_BULLET_BORDER, 1
COMMENT $A46C LEVEL_BONUS_BORDER, 1
COMMENT $A46D LEVEL_INTRO_PATTERN
COMMENT $A46F LEVEL_WAITING_PATTERN
COMMENT $A473 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A476 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A476 db       3                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A477 LEVEL_BULLET_BORDER, 1
COMMENT $A478 LEVEL_BONUS_BORDER, 1
COMMENT $A47B big Bug Count
COMMENT $A47C bug shot delay
COMMENT $A47D LEVEL_INTRO_PATTERN
COMMENT $A47F LEVEL_WAITING_PATTERN
COMMENT $A483 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A486 db       5                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A486 db       2                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A487 LEVEL_BULLET_BORDER, 1
COMMENT $A488 LEVEL_BONUS_BORDER, 1
COMMENT $A489 LEVEL_INTRO_PATTERN
COMMENT $A48B LEVEL_WAITING_PATTERN
COMMENT $A48F LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A492 db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A492 db       8                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A493 LEVEL_BULLET_BORDER, 1
COMMENT $A494 LEVEL_BONUS_BORDER, 1
COMMENT $A495 LEVEL_INTRO_PATTERN
COMMENT $A497 LEVEL_WAITING_PATTERN
COMMENT $A49B LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A49E db       8                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A49E db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A49F LEVEL_BULLET_BORDER, 1
COMMENT $A4A0 LEVEL_BONUS_BORDER, 1
COMMENT $A4A1 LEVEL_INTRO_PATTERN
COMMENT $A4A3 LEVEL_WAITING_PATTERN
COMMENT $A4A7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A4AA db       8                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4AA db       8                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4AB LEVEL_BULLET_BORDER, 1
COMMENT $A4AC LEVEL_BONUS_BORDER, 1
COMMENT $A4AF big Bug Count
COMMENT $A4B0 bug shot delay
COMMENT $A4B1 LEVEL_INTRO_PATTERN
COMMENT $A4B3 LEVEL_WAITING_PATTERN
COMMENT $A4B7 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A4BA db       0                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4BA db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4BB LEVEL_BULLET_BORDER, 1
COMMENT $A4BC LEVEL_BONUS_BORDER, 1
COMMENT $A4BD LEVEL_INTRO_PATTERN
COMMENT $A4BF LEVEL_WAITING_PATTERN
COMMENT $A4C3 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A4C6 db       7                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4C6 db       1                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4C7 LEVEL_BULLET_BORDER, 1
COMMENT $A4C8 LEVEL_BONUS_BORDER, 1
COMMENT $A4C9 LEVEL_INTRO_PATTERN
COMMENT $A4CB LEVEL_WAITING_PATTERN
COMMENT $A4CF LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A4D2 db       1                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4D2 db       9                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4D3 LEVEL_BULLET_BORDER, 1
COMMENT $A4D4 LEVEL_BONUS_BORDER, 1
COMMENT $A4D5 LEVEL_INTRO_PATTERN
COMMENT $A4D7 LEVEL_WAITING_PATTERN
COMMENT $A4DB LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A4DE db       8                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4DE db       8                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4DF LEVEL_BULLET_BORDER, 1
COMMENT $A4E0 LEVEL_BONUS_BORDER, 1
COMMENT $A4E3 big Bug Count
COMMENT $A4E4 bug shot delay
COMMENT $A4E5 LEVEL_INTRO_PATTERN
COMMENT $A4E7 LEVEL_WAITING_PATTERN
COMMENT $A4EB LEVEL_ENEMY_DEFINITION
COMMENT $A4ED LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4EE db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4EF LEVEL_BULLET_BORDER, 1
COMMENT $A4F0 LEVEL_BONUS_BORDER, 1
COMMENT $A4F1 LEVEL_INTRO_PATTERN
COMMENT $A4F3 LEVEL_WAITING_PATTERN
COMMENT $A4F7 LEVEL_ENEMY_DEFINITION
COMMENT $A4F9 LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A4FA db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A4FB LEVEL_BULLET_BORDER, 1
COMMENT $A4FC LEVEL_BONUS_BORDER, 1
COMMENT $A4FD LEVEL_INTRO_PATTERN
COMMENT $A4FF LEVEL_WAITING_PATTERN
COMMENT $A503 LEVEL_ENEMY_DEFINITION
COMMENT_LINE $A506 db       4                            ; LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A506 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A507 LEVEL_BULLET_BORDER, 1
COMMENT $A509 LEVEL_INTRO_PATTERN
COMMENT $A50B LEVEL_WAITING_PATTERN
COMMENT $A50F LEVEL_ENEMY_DEFINITION
COMMENT $A511 LEVEL_MAX_SHOTS_IN_AIR max shots in the air
COMMENT_LINE $A512 db       0                            ; LEVEL_MAX_ATTACK_PATTERNS max Attack Patterns in this level allowed -
COMMENT $A513 LEVEL_BULLET_BORDER, 1
COMMENT $A51A ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A521 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A528 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A52F ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A536 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A53D ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A544 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A54B ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A552 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A559 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A560 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A562 list of all single vectorlists in this
COMMENT $A56C list of all single vectorlists in this
COMMENT $A89F ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8A6 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8AD ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8B4 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8BB ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8C2 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8C9 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8D0 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8D7 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8DE ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8E5 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $A8E7 list of all single vectorlists in this
COMMENT $A8F1 list of all single vectorlists in this
COMMENT $ABA7 shield
COMMENT $ABAE list of all single vectorlists in this
COMMENT $ABB6 list of all single vectorlists in this
COMMENT $AC61 ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $AC68 ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $AC6B list of all single vectorlists in this
COMMENT $AC6D list of all single vectorlists in this
COMMENT $AC6F list of all single vectorlists in this
COMMENT $AC71 list of all single vectorlists in this
COMMENT $AC75 list of all single vectorlists in this
COMMENT $B09C ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B0A3 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B0A5 list of all single vectorlists in this
COMMENT $B0AF list of all single vectorlists in this
COMMENT $B3FF ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B406 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B408 list of all single vectorlists in this
COMMENT $B412 list of all single vectorlists in this
COMMENT_LINE $B521 changed
COMMENT $B56E y is $38
COMMENT $B6BA y is -$38
COMMENT $B777 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B77E ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B785 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B78C ;ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $B78F list of all single vectorlists in this
COMMENT $B799 list of all single vectorlists in this
COMMENT_LINE $B7AB change
COMMENT $B7B0 y is $12
COMMENT $B86F y is -$12
COMMENT $B8C0 y is -$12
COMMENT $B916 CHANGED
COMMENT $B97F y is $12
COMMENT $BA60 ccnnnnnn , cc = number of clones+1 1-4, nnnnn wait bewteen clones 0-63
COMMENT $BB0A list of all single vectorlists in this
COMMENT_LINE $BBE7 macros only: bank 3
COMMENT_LINE $BBE7 SWARM draw routines!
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 Disable mux
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 use registers D, U, X (S) !
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 initialize draw and do first line
COMMENT_LINE $0000 this can be put into moveto
COMMENT $0000 x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $0000 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $0000 end of movement, above values could be set befor, end destroys "b"
COMMENT $0000 mux enabled, set dac to y value
COMMENT $0000 a = zero, b = blank disbaled, zero disabled
COMMENT $0000 mux disabled, set dac to x value
COMMENT $0000 Shift reg mode = 000 free disable, T1 PB7 disabled
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 any line after the first of our drawing
COMMENT_LINE $0000 loading Setup registers
COMMENT_LINE $0000 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $0000 pre load all values, since we must wait before we finish the current drawing
COMMENT $0000 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $0000 mux enabled, set dac to y value (strangly and luckily, timing
COMMENT $0000 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $0000 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $0000 mux disabled, set dac to x value
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 finish last line and deinit our drawing
COMMENT_LINE $0000 nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $0000 otherwise the last vector is not finished correctly
COMMENT $0000 preload scale andcntl value
COMMENT $0000 Shift reg mode = 000 free disable, T1 PB7 enabled
COMMENT_LINE $0000 nop 6 ; may be add one NOP for zeroing!
COMMENT_LINE $0000 ***************************************************************************************
COMMENT_LINE $0000 -----------------------------------------------------------------------------
FORCE_NO_SYMBOL $BBE7
COMMENT $BBE9 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $BBE9 VIA_aux_cntl
FORCE_SYMBOL $BBEB calibrationSwarm
FORCE_NO_SYMBOL $BBEE
COMMENT $BBF1 Store Y in D/A register
FORCE_SYMBOL $BBF1 VIA_port_a
COMMENT $BBF3 Blank low, zero high?
FORCE_NO_SYMBOL $BBF3
FORCE_SYMBOL $BBF5 VIA_cntl
COMMENT $BBF8 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $BBF8 VIA_port_b
COMMENT $BBFA y must be set more than xx cycles on some vectrex
COMMENT $BBFB Disable mux
FORCE_SYMBOL $BBFB VIA_port_b
COMMENT $BBFD Store X in D/A register
FORCE_SYMBOL $BBFD VIA_port_a
COMMENT $BBFF enable timer
FORCE_SYMBOL $BBFF VIA_t1_cnt_hi
COMMENT_LINE $BC01 this can be put into moveto
COMMENT $BC01 x_hi = 0000 0001 (ramp enabled, mux disabled), x_lo = x
COMMENT $BC04 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC07 end of movement, above values could be set befor, end destroys "b"
FORCE_NO_SYMBOL $BC07
FORCE_SYMBOL $BC09 VIA_int_flags
COMMENT $BC0D mux enabled, set dac to y value
FORCE_SYMBOL $BC0D VIA_port_b
COMMENT $BC0F a = zero, b = blank disbaled, zero disabled
FORCE_NO_SYMBOL $BC0F
COMMENT $BC12 mux disabled, set dac to x value
FORCE_SYMBOL $BC12 VIA_port_b
COMMENT $BC14 Shift reg mode = 000 free disable, T1 PB7 disabled
FORCE_SYMBOL $BC14 VIA_aux_cntl
COMMENT_LINE $BC16 loading Setup registers
COMMENT_LINE $BC16 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC16 pre load all values, since we must wait before we finish the current drawing
COMMENT $BC16 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC19 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC19 VIA_port_b
COMMENT $BC1B u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC1E nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC1E mux disabled, set dac to x value
FORCE_SYMBOL $BC1E VIA_port_b
COMMENT_LINE $BC20 loading Setup registers
COMMENT_LINE $BC20 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC20 pre load all values, since we must wait before we finish the current drawing
COMMENT $BC20 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC23 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC23 VIA_port_b
COMMENT $BC25 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC28 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC28 mux disabled, set dac to x value
FORCE_SYMBOL $BC28 VIA_port_b
COMMENT_LINE $BC2A loading Setup registers
COMMENT_LINE $BC2A directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC2A pre load all values, since we must wait before we finish the current drawing
COMMENT $BC2A u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC2D mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC2D VIA_port_b
COMMENT $BC2F u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC32 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC32 mux disabled, set dac to x value
FORCE_SYMBOL $BC32 VIA_port_b
COMMENT_LINE $BC34 loading Setup registers
COMMENT_LINE $BC34 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC34 pre load all values, since we must wait before we finish the current drawing
COMMENT $BC34 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC37 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC37 VIA_port_b
COMMENT $BC39 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC3C nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC3C mux disabled, set dac to x value
FORCE_SYMBOL $BC3C VIA_port_b
COMMENT_LINE $BC3E loading Setup registers
COMMENT_LINE $BC3E directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC3E pre load all values, since we must wait before we finish the current drawing
COMMENT $BC3E u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC41 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC41 VIA_port_b
COMMENT $BC43 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC46 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC46 mux disabled, set dac to x value
FORCE_SYMBOL $BC46 VIA_port_b
COMMENT_LINE $BC48 loading Setup registers
COMMENT_LINE $BC48 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC48 pre load all values, since we must wait before we finish the current drawing
COMMENT $BC48 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC4B mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC4B VIA_port_b
COMMENT $BC4D u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC50 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC50 mux disabled, set dac to x value
FORCE_SYMBOL $BC50 VIA_port_b
COMMENT_LINE $BC52 loading Setup registers
COMMENT_LINE $BC52 directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC52 pre load all values, since we must wait before we finish the current drawing
COMMENT $BC52 u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC55 mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC55 VIA_port_b
COMMENT $BC57 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC5A nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC5A mux disabled, set dac to x value
FORCE_SYMBOL $BC5A VIA_port_b
COMMENT_LINE $BC5C loading Setup registers
COMMENT_LINE $BC5C directly is even faster than 4 puls from stack (12 vs 13 cycles)
COMMENT_LINE $BC5C pre load all values, since we must wait before we finish the current drawing
COMMENT $BC5C u_hi = 1000 0000 (ramp disabled, mux enabled), u_lo = y
COMMENT $BC5F mux enabled, set dac to y value (strangly and luckily, timing
FORCE_SYMBOL $BC5F VIA_port_b
COMMENT $BC61 u_hi = 0000 0001 (ramp enabled, mux disabled), u_lo = x
COMMENT_LINE $BC64 nop 2 ; the more nops inserted here, the "better quality" the vector drawing has
COMMENT $BC64 mux disabled, set dac to x value
FORCE_SYMBOL $BC64 VIA_port_b
FORCE_SYMBOL $BC66 gameScale
FORCE_SYMBOL $BC69 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $BC6D
COMMENT_LINE $BC70 nop      6                           ; here we have to wait for 8 cycles,
COMMENT_LINE $BC70 otherwise the last vector is not finished correctly
COMMENT $BC70 preload scale andcntl value
COMMENT $BC73 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $BC73 VIA_aux_cntl
FORCE_SYMBOL $BC75 VIA_port_b
COMMENT_LINE $BC77 nop 6 ; may be add one NOP for zeroing!
RANGE $0000-$01E2 DP $D0
RANGE $01E2-$01E2 DP $FF
RANGE $01E2-$BE36 DP $D0
RANGE $0000-$000B CHAR_DATA 11
RANGE $000B-$000D DW_DATA 1
RANGE $000D-$0011 DB_DATA 4
RANGE $0011-$001D CHAR_DATA 12
RANGE $001D-$0021 DB_DATA 4
RANGE $0021-$002E CHAR_DATA 13
RANGE $002E-$002F DB_DATA 1
RANGE $002F-$0626 CODE
RANGE $0626-$0628 DW_DATA 1
RANGE $0628-$062A DW_DATA 1
RANGE $062A-$062C DW_DATA 1
RANGE $062C-$062E DW_DATA 1
RANGE $062E-$0630 DW_DATA 1
RANGE $0630-$0632 DW_DATA 1
RANGE $0632-$0634 DW_DATA 1
RANGE $0634-$0636 DW_DATA 1
RANGE $0636-$0638 DW_DATA 1
RANGE $0638-$063A DW_DATA 1
RANGE $063A-$16C9 CODE
RANGE $16C9-$16D1 CHAR_DATA 8
RANGE $16D1-$16D9 CHAR_DATA 8
RANGE $16D9-$16E2 CHAR_DATA 9
RANGE $16E2-$16EB CHAR_DATA 9
RANGE $16EB-$16F3 CHAR_DATA 8
RANGE $16F3-$16FB CHAR_DATA 8
RANGE $16FB-$1702 CHAR_DATA 7
RANGE $1702-$170B CHAR_DATA 9
RANGE $170B-$1710 CHAR_DATA 5
RANGE $1710-$1715 CHAR_DATA 5
RANGE $1715-$171D CHAR_DATA 8
RANGE $171D-$1725 CHAR_DATA 8
RANGE $1725-$172C CHAR_DATA 7
RANGE $172C-$1733 CHAR_DATA 7
RANGE $1733-$1739 CHAR_DATA 6
RANGE $1739-$173F CHAR_DATA 6
RANGE $173F-$1745 CHAR_DATA 6
RANGE $1745-$174D CHAR_DATA 8
RANGE $174D-$1757 CHAR_DATA 10
RANGE $1757-$1760 CHAR_DATA 9
RANGE $1760-$1769 CHAR_DATA 9
RANGE $1769-$176F CHAR_DATA 6
RANGE $176F-$1776 CHAR_DATA 7
RANGE $1776-$177C CHAR_DATA 6
RANGE $177C-$1783 CHAR_DATA 7
RANGE $1783-$178A CHAR_DATA 7
RANGE $178A-$1791 CHAR_DATA 7
RANGE $1791-$1797 CHAR_DATA 6
RANGE $1797-$179F CHAR_DATA 8
RANGE $179F-$17A7 CHAR_DATA 8
RANGE $17A7-$17B0 CHAR_DATA 9
RANGE $17B0-$17B6 CHAR_DATA 6
RANGE $17B6-$17BE CHAR_DATA 8
RANGE $17BE-$17C7 CHAR_DATA 9
RANGE $17C7-$17CD CHAR_DATA 6
RANGE $17CD-$17D7 CHAR_DATA 10
RANGE $17D7-$1A90 CODE
RANGE $1A90-$1A92 DW_DATA 1
RANGE $1A92-$1A93 DB_DATA 1
RANGE $1A93-$1A95 DW_DATA 1
RANGE $1A95-$1A97 DB_DATA 2
RANGE $1A97-$1A99 DW_DATA 1
RANGE $1A99-$1A9B DW_DATA 1
RANGE $1A9B-$1A9D DW_DATA 1
RANGE $1A9D-$1A9F DW_DATA 1
RANGE $1A9F-$1AA1 DW_DATA 1
RANGE $1AA1-$1AA3 DW_DATA 1
RANGE $1AA3-$1AA5 DW_DATA 1
RANGE $1AA5-$1AA7 DW_DATA 1
RANGE $1AA7-$1AA9 DW_DATA 1
RANGE $1AA9-$1AAE DB_DATA 5
RANGE $1AAE-$1AB3 DB_DATA 5
RANGE $1AB3-$1AB8 DB_DATA 5
RANGE $1AB8-$1ABB DB_DATA 3
RANGE $1ABB-$1ABE DB_DATA 3
RANGE $1ABE-$1AC3 DB_DATA 5
RANGE $1AC3-$1AC8 DB_DATA 5
RANGE $1AC8-$1ACB DB_DATA 3
RANGE $1ACB-$1ACE DB_DATA 3
RANGE $1ACE-$1AD3 DB_DATA 5
RANGE $1AD3-$1AD8 DB_DATA 5
RANGE $1AD8-$1ADB DB_DATA 3
RANGE $1ADB-$1ADE DB_DATA 3
RANGE $1ADE-$1AE1 DB_DATA 3
RANGE $1AE1-$1AE6 DB_DATA 5
RANGE $1AE6-$1AEB DB_DATA 5
RANGE $1AEB-$1AEE DB_DATA 3
RANGE $1AEE-$1AF1 DB_DATA 3
RANGE $1AF1-$1AF6 DB_DATA 5
RANGE $1AF6-$1AFB DB_DATA 5
RANGE $1AFB-$1B00 DB_DATA 5
RANGE $1B00-$1B05 DB_DATA 5
RANGE $1B05-$1B0A DB_DATA 5
RANGE $1B0A-$1B0F DB_DATA 5
RANGE $1B0F-$1B14 DB_DATA 5
RANGE $1B14-$1B19 DB_DATA 5
RANGE $1B19-$1B1C DB_DATA 3
RANGE $1B1C-$1B1F DB_DATA 3
RANGE $1B1F-$1B22 DB_DATA 3
RANGE $1B22-$1B25 DB_DATA 3
RANGE $1B25-$1B28 DB_DATA 3
RANGE $1B28-$1B2B DB_DATA 3
RANGE $1B2B-$1B30 DB_DATA 5
RANGE $1B30-$1B33 DB_DATA 3
RANGE $1B33-$1B36 DB_DATA 3
RANGE $1B36-$1B39 DB_DATA 3
RANGE $1B39-$1B3C DB_DATA 3
RANGE $1B3C-$1B3F DB_DATA 3
RANGE $1B3F-$1B44 DB_DATA 5
RANGE $1B44-$1D52 CODE
RANGE $1D52-$1D54 DB_DATA 2
RANGE $1D54-$1D56 DB_DATA 2
RANGE $1D56-$1D58 DB_DATA 2
RANGE $1D58-$1D5A DB_DATA 2
RANGE $1D5A-$1D5C DB_DATA 2
RANGE $1D5C-$1D5E DB_DATA 2
RANGE $1D5E-$1D60 DB_DATA 2
RANGE $1D60-$1D62 DB_DATA 2
RANGE $1D62-$1FB2 CODE
RANGE $1FB2-$1FB4 DW_DATA 1
RANGE $1FB4-$1FB6 DW_DATA 1
RANGE $1FB6-$1FB8 DW_DATA 1
RANGE $1FB8-$1FBA DW_DATA 1
RANGE $1FBA-$1FBC DW_DATA 1
RANGE $1FBC-$1FBE DW_DATA 1
RANGE $1FBE-$1FC0 DW_DATA 1
RANGE $1FC0-$1FC2 DW_DATA 1
RANGE $1FC2-$1FC4 DW_DATA 1
RANGE $1FC4-$1FC6 DW_DATA 1
RANGE $1FC6-$1FC9 DB_DATA 3
RANGE $1FC9-$1FCC DB_DATA 3
RANGE $1FCC-$1FCF DB_DATA 3
RANGE $1FCF-$1FD2 DB_DATA 3
RANGE $1FD2-$1FD5 DB_DATA 3
RANGE $1FD5-$1FD8 DB_DATA 3
RANGE $1FD8-$1FDB DB_DATA 3
RANGE $1FDB-$1FDE DB_DATA 3
RANGE $1FDE-$1FE1 DB_DATA 3
RANGE $1FE1-$1FE4 DB_DATA 3
RANGE $1FE4-$1FE7 DB_DATA 3
RANGE $1FE7-$1FEA DB_DATA 3
RANGE $1FEA-$1FEC DB_DATA 2
RANGE $1FEC-$1FEF DB_DATA 3
RANGE $1FEF-$1FF2 DB_DATA 3
RANGE $1FF2-$1FF5 DB_DATA 3
RANGE $1FF5-$1FF8 DB_DATA 3
RANGE $1FF8-$1FFB DB_DATA 3
RANGE $1FFB-$1FFE DB_DATA 3
RANGE $1FFE-$2001 DB_DATA 3
RANGE $2001-$2004 DB_DATA 3
RANGE $2004-$2007 DB_DATA 3
RANGE $2007-$2009 DB_DATA 2
RANGE $2009-$200C DB_DATA 3
RANGE $200C-$200F DB_DATA 3
RANGE $200F-$2012 DB_DATA 3
RANGE $2012-$2015 DB_DATA 3
RANGE $2015-$2018 DB_DATA 3
RANGE $2018-$201B DB_DATA 3
RANGE $201B-$201E DB_DATA 3
RANGE $201E-$2021 DB_DATA 3
RANGE $2021-$2023 DB_DATA 2
RANGE $2023-$2026 DB_DATA 3
RANGE $2026-$2029 DB_DATA 3
RANGE $2029-$202C DB_DATA 3
RANGE $202C-$202F DB_DATA 3
RANGE $202F-$2032 DB_DATA 3
RANGE $2032-$2035 DB_DATA 3
RANGE $2035-$2037 DB_DATA 2
RANGE $2037-$2038 DB_DATA 1
RANGE $2038-$203A DW_DATA 1
RANGE $203A-$203C DW_DATA 1
RANGE $203C-$203E DW_DATA 1
RANGE $203E-$2040 DW_DATA 1
RANGE $2040-$2041 DB_DATA 1
RANGE $2041-$2043 DW_DATA 1
RANGE $2043-$2045 DW_DATA 1
RANGE $2045-$2047 DW_DATA 1
RANGE $2047-$204B DW_DATA 2
RANGE $204B-$204D DW_DATA 1
RANGE $204D-$204E DB_DATA 1
RANGE $204E-$2054 DW_DATA 3
RANGE $2054-$205C DW_DATA 4
RANGE $205C-$205D DB_DATA 1
RANGE $205D-$2063 DW_DATA 3
RANGE $2063-$2069 DW_DATA 3
RANGE $2069-$206F DW_DATA 3
RANGE $206F-$2070 DB_DATA 1
RANGE $2070-$2078 DW_DATA 4
RANGE $2078-$2080 DW_DATA 4
RANGE $2080-$2082 DW_DATA 1
RANGE $2082-$2084 DB_DATA 2
RANGE $2084-$2086 DW_DATA 1
RANGE $2086-$2088 DW_DATA 1
RANGE $2088-$208A DB_DATA 2
RANGE $208A-$208C DW_DATA 1
RANGE $208C-$208E DW_DATA 1
RANGE $208E-$2090 DB_DATA 2
RANGE $2090-$2092 DW_DATA 1
RANGE $2092-$2094 DW_DATA 1
RANGE $2094-$2096 DB_DATA 2
RANGE $2096-$2098 DW_DATA 1
RANGE $2098-$209A DW_DATA 1
RANGE $209A-$209C DB_DATA 2
RANGE $209C-$209E DW_DATA 1
RANGE $209E-$20A0 DW_DATA 1
RANGE $20A0-$20A2 DB_DATA 2
RANGE $20A2-$20A4 DW_DATA 1
RANGE $20A4-$20A6 DW_DATA 1
RANGE $20A6-$267A CODE
RANGE $267A-$26D5 DB_DATA 91
RANGE $26D5-$2730 DB_DATA 91
RANGE $2730-$278B DB_DATA 91
RANGE $278B-$27E6 DB_DATA 91
RANGE $27E6-$2841 DB_DATA 91
RANGE $2841-$2A88 CODE
RANGE $2A88-$2A8A DW_DATA 1
RANGE $2A8A-$2A8C DW_DATA 1
RANGE $2A8C-$2A8E DW_DATA 1
RANGE $2A8E-$2A90 DW_DATA 1
RANGE $2A90-$2A92 DW_DATA 1
RANGE $2A92-$2A94 DW_DATA 1
RANGE $2A94-$2A96 DW_DATA 1
RANGE $2A96-$2A9B DB_DATA 5
RANGE $2A9B-$2AA0 DB_DATA 5
RANGE $2AA0-$2AA5 DB_DATA 5
RANGE $2AA5-$2AAA DB_DATA 5
RANGE $2AAA-$2AAF DB_DATA 5
RANGE $2AAF-$2AB4 DB_DATA 5
RANGE $2AB4-$2AB9 DB_DATA 5
RANGE $2AB9-$2ABE DB_DATA 5
RANGE $2ABE-$2AC3 DB_DATA 5
RANGE $2AC3-$2AC6 DB_DATA 3
RANGE $2AC6-$2AC9 DB_DATA 3
RANGE $2AC9-$2ACC DB_DATA 3
RANGE $2ACC-$2ACF DB_DATA 3
RANGE $2ACF-$2AD2 DB_DATA 3
RANGE $2AD2-$2AD7 DB_DATA 5
RANGE $2AD7-$2ADC DB_DATA 5
RANGE $2ADC-$2AE1 DB_DATA 5
RANGE $2AE1-$2AE6 DB_DATA 5
RANGE $2AE6-$2AEB DB_DATA 5
RANGE $2AEB-$2AF0 DB_DATA 5
RANGE $2AF0-$2AF3 DB_DATA 3
RANGE $2AF3-$2AF8 DB_DATA 5
RANGE $2AF8-$2AFD DB_DATA 5
RANGE $2AFD-$2B02 DB_DATA 5
RANGE $2B02-$2B07 DB_DATA 5
RANGE $2B07-$2B0C DB_DATA 5
RANGE $2B0C-$2B11 DB_DATA 5
RANGE $2B11-$2B16 DB_DATA 5
RANGE $2B16-$2B1B DB_DATA 5
RANGE $2B1B-$2B20 DB_DATA 5
RANGE $2B20-$2B25 DB_DATA 5
RANGE $2B25-$2B2A DB_DATA 5
RANGE $2B2A-$2B2F DB_DATA 5
RANGE $2B2F-$2B34 DB_DATA 5
RANGE $2B34-$2B37 DB_DATA 3
RANGE $2B37-$2B3A DB_DATA 3
RANGE $2B3A-$2B3D DB_DATA 3
RANGE $2B3D-$2B40 DB_DATA 3
RANGE $2B40-$2B43 DB_DATA 3
RANGE $2B43-$2B48 DB_DATA 5
RANGE $2B48-$2B4D DB_DATA 5
RANGE $2B4D-$2B52 DB_DATA 5
RANGE $2B52-$2B57 DB_DATA 5
RANGE $2B57-$2B5C DB_DATA 5
RANGE $2B5C-$2B61 DB_DATA 5
RANGE $2B61-$2B64 DB_DATA 3
RANGE $2B64-$2B69 DB_DATA 5
RANGE $2B69-$2B6E DB_DATA 5
RANGE $2B6E-$2B73 DB_DATA 5
RANGE $2B73-$2B78 DB_DATA 5
RANGE $2B78-$2B7A DW_DATA 1
RANGE $2B7A-$2B7B DB_DATA 1
RANGE $2B7B-$2B7C DB_DATA 1
RANGE $2B7C-$2B81 DB_DATA 5
RANGE $2B81-$2B8B DB_DATA 10
RANGE $2B8B-$2DCE CODE
RANGE $2DCE-$2DD0 DW_DATA 1
RANGE $2DD0-$2DD1 DB_DATA 1
RANGE $2DD1-$2DD3 DW_DATA 1
RANGE $2DD3-$2DD5 DB_DATA 2
RANGE $2DD5-$2DD7 DW_DATA 1
RANGE $2DD7-$2DD8 DB_DATA 1
RANGE $2DD8-$2DDA DW_DATA 1
RANGE $2DDA-$2DDC DB_DATA 2
RANGE $2DDC-$2DDE DW_DATA 1
RANGE $2DDE-$2DDF DB_DATA 1
RANGE $2DDF-$2DE1 DW_DATA 1
RANGE $2DE1-$2DE3 DB_DATA 2
RANGE $2DE3-$2DE5 DW_DATA 1
RANGE $2DE5-$2DE6 DB_DATA 1
RANGE $2DE6-$2DE8 DW_DATA 1
RANGE $2DE8-$2DEA DB_DATA 2
RANGE $2DEA-$2DEC DW_DATA 1
RANGE $2DEC-$2DED DB_DATA 1
RANGE $2DED-$2DEF DW_DATA 1
RANGE $2DEF-$2DF1 DB_DATA 2
RANGE $2DF1-$2DF3 DW_DATA 1
RANGE $2DF3-$2DF4 DB_DATA 1
RANGE $2DF4-$2DF6 DW_DATA 1
RANGE $2DF6-$2DF8 DB_DATA 2
RANGE $2DF8-$2DFA DW_DATA 1
RANGE $2DFA-$2DFB DB_DATA 1
RANGE $2DFB-$2DFD DW_DATA 1
RANGE $2DFD-$2DFF DB_DATA 2
RANGE $2DFF-$2E01 DW_DATA 1
RANGE $2E01-$2E02 DB_DATA 1
RANGE $2E02-$2E04 DW_DATA 1
RANGE $2E04-$2E06 DB_DATA 2
RANGE $2E06-$2E08 DW_DATA 1
RANGE $2E08-$2E0A DW_DATA 1
RANGE $2E0A-$2E0C DW_DATA 1
RANGE $2E0C-$2E0E DW_DATA 1
RANGE $2E0E-$2E10 DW_DATA 1
RANGE $2E10-$2E12 DW_DATA 1
RANGE $2E12-$2E14 DW_DATA 1
RANGE $2E14-$2E16 DW_DATA 1
RANGE $2E16-$2E18 DW_DATA 1
RANGE $2E18-$2E1A DW_DATA 1
RANGE $2E1A-$2E1C DW_DATA 1
RANGE $2E1C-$2E1E DW_DATA 1
RANGE $2E1E-$2E20 DW_DATA 1
RANGE $2E20-$2E22 DW_DATA 1
RANGE $2E22-$2E27 DB_DATA 5
RANGE $2E27-$2E2C DB_DATA 5
RANGE $2E2C-$2E31 DB_DATA 5
RANGE $2E31-$2E34 DB_DATA 3
RANGE $2E34-$2E37 DB_DATA 3
RANGE $2E37-$2E3A DB_DATA 3
RANGE $2E3A-$2E3D DB_DATA 3
RANGE $2E3D-$2E42 DB_DATA 5
RANGE $2E42-$2E47 DB_DATA 5
RANGE $2E47-$2E4C DB_DATA 5
RANGE $2E4C-$2E4F DB_DATA 3
RANGE $2E4F-$2E52 DB_DATA 3
RANGE $2E52-$2E55 DB_DATA 3
RANGE $2E55-$2E58 DB_DATA 3
RANGE $2E58-$2E5B DB_DATA 3
RANGE $2E5B-$2E5E DB_DATA 3
RANGE $2E5E-$2E63 DB_DATA 5
RANGE $2E63-$2E68 DB_DATA 5
RANGE $2E68-$2E6D DB_DATA 5
RANGE $2E6D-$2E72 DB_DATA 5
RANGE $2E72-$2E77 DB_DATA 5
RANGE $2E77-$2E7A DB_DATA 3
RANGE $2E7A-$2E7D DB_DATA 3
RANGE $2E7D-$2E80 DB_DATA 3
RANGE $2E80-$2E83 DB_DATA 3
RANGE $2E83-$2E86 DB_DATA 3
RANGE $2E86-$2E89 DB_DATA 3
RANGE $2E89-$2E8E DB_DATA 5
RANGE $2E8E-$2E91 DB_DATA 3
RANGE $2E91-$2E94 DB_DATA 3
RANGE $2E94-$2E97 DB_DATA 3
RANGE $2E97-$2E9A DB_DATA 3
RANGE $2E9A-$2E9D DB_DATA 3
RANGE $2E9D-$2EA0 DB_DATA 3
RANGE $2EA0-$2EA5 DB_DATA 5
RANGE $2EA5-$2EAA DB_DATA 5
RANGE $2EAA-$2EAF DB_DATA 5
RANGE $2EAF-$2EB4 DB_DATA 5
RANGE $2EB4-$2EB9 DB_DATA 5
RANGE $2EB9-$2EBC DB_DATA 3
RANGE $2EBC-$2EBF DB_DATA 3
RANGE $2EBF-$2EC2 DB_DATA 3
RANGE $2EC2-$2EC5 DB_DATA 3
RANGE $2EC5-$2EC8 DB_DATA 3
RANGE $2EC8-$2ECB DB_DATA 3
RANGE $2ECB-$2ED0 DB_DATA 5
RANGE $2ED0-$2ED3 DB_DATA 3
RANGE $2ED3-$2ED6 DB_DATA 3
RANGE $2ED6-$2ED9 DB_DATA 3
RANGE $2ED9-$2EDC DB_DATA 3
RANGE $2EDC-$2EDF DB_DATA 3
RANGE $2EDF-$2EE2 DB_DATA 3
RANGE $2EE2-$2EE7 DB_DATA 5
RANGE $2EE7-$2EEC DB_DATA 5
RANGE $2EEC-$2EF1 DB_DATA 5
RANGE $2EF1-$2EF6 DB_DATA 5
RANGE $2EF6-$2EFB DB_DATA 5
RANGE $2EFB-$2EFE DB_DATA 3
RANGE $2EFE-$2F01 DB_DATA 3
RANGE $2F01-$2F04 DB_DATA 3
RANGE $2F04-$2F07 DB_DATA 3
RANGE $2F07-$2F0A DB_DATA 3
RANGE $2F0A-$2F0D DB_DATA 3
RANGE $2F0D-$2F12 DB_DATA 5
RANGE $2F12-$2F15 DB_DATA 3
RANGE $2F15-$2F18 DB_DATA 3
RANGE $2F18-$2F1B DB_DATA 3
RANGE $2F1B-$2F1E DB_DATA 3
RANGE $2F1E-$2F21 DB_DATA 3
RANGE $2F21-$2F24 DB_DATA 3
RANGE $2F24-$2F29 DB_DATA 5
RANGE $2F29-$2F2E DB_DATA 5
RANGE $2F2E-$2F33 DB_DATA 5
RANGE $2F33-$2F38 DB_DATA 5
RANGE $2F38-$2F3D DB_DATA 5
RANGE $2F3D-$2F40 DB_DATA 3
RANGE $2F40-$2F43 DB_DATA 3
RANGE $2F43-$2F46 DB_DATA 3
RANGE $2F46-$2F49 DB_DATA 3
RANGE $2F49-$2F4C DB_DATA 3
RANGE $2F4C-$2F4F DB_DATA 3
RANGE $2F4F-$2F54 DB_DATA 5
RANGE $2F54-$2F57 DB_DATA 3
RANGE $2F57-$2F5A DB_DATA 3
RANGE $2F5A-$2F5D DB_DATA 3
RANGE $2F5D-$2F60 DB_DATA 3
RANGE $2F60-$2F63 DB_DATA 3
RANGE $2F63-$2F66 DB_DATA 3
RANGE $2F66-$2F6B DB_DATA 5
RANGE $2F6B-$2F70 DB_DATA 5
RANGE $2F70-$2F75 DB_DATA 5
RANGE $2F75-$2F7A DB_DATA 5
RANGE $2F7A-$2F7F DB_DATA 5
RANGE $2F7F-$2F82 DB_DATA 3
RANGE $2F82-$2F85 DB_DATA 3
RANGE $2F85-$2F88 DB_DATA 3
RANGE $2F88-$2F8D DB_DATA 5
RANGE $2F8D-$2F92 DB_DATA 5
RANGE $2F92-$2F95 DB_DATA 3
RANGE $2F95-$2F98 DB_DATA 3
RANGE $2F98-$2F9B DB_DATA 3
RANGE $2F9B-$2F9E DB_DATA 3
RANGE $2F9E-$2FA1 DB_DATA 3
RANGE $2FA1-$2FA4 DB_DATA 3
RANGE $2FA4-$2FA9 DB_DATA 5
RANGE $2FA9-$2FAC DB_DATA 3
RANGE $2FAC-$2FAF DB_DATA 3
RANGE $2FAF-$2FB4 DB_DATA 5
RANGE $2FB4-$2FB9 DB_DATA 5
RANGE $2FB9-$2FBE DB_DATA 5
RANGE $2FBE-$2FC3 DB_DATA 5
RANGE $2FC3-$2FC6 DB_DATA 3
RANGE $2FC6-$2FC9 DB_DATA 3
RANGE $2FC9-$2FCC DB_DATA 3
RANGE $2FCC-$2FCF DB_DATA 3
RANGE $2FCF-$2FD2 DB_DATA 3
RANGE $2FD2-$2FD5 DB_DATA 3
RANGE $2FD5-$2FDA DB_DATA 5
RANGE $2FDA-$2FDD DB_DATA 3
RANGE $2FDD-$2FE0 DB_DATA 3
RANGE $2FE0-$2FE3 DB_DATA 3
RANGE $2FE3-$2FE6 DB_DATA 3
RANGE $2FE6-$2FE9 DB_DATA 3
RANGE $2FE9-$2FEC DB_DATA 3
RANGE $2FEC-$2FF1 DB_DATA 5
RANGE $2FF1-$2FF6 DB_DATA 5
RANGE $2FF6-$2FFB DB_DATA 5
RANGE $2FFB-$3000 DB_DATA 5
RANGE $3000-$3005 DB_DATA 5
RANGE $3005-$3008 DB_DATA 3
RANGE $3008-$300B DB_DATA 3
RANGE $300B-$300E DB_DATA 3
RANGE $300E-$3011 DB_DATA 3
RANGE $3011-$3014 DB_DATA 3
RANGE $3014-$3017 DB_DATA 3
RANGE $3017-$301C DB_DATA 5
RANGE $301C-$301F DB_DATA 3
RANGE $301F-$3022 DB_DATA 3
RANGE $3022-$3025 DB_DATA 3
RANGE $3025-$3028 DB_DATA 3
RANGE $3028-$302B DB_DATA 3
RANGE $302B-$302E DB_DATA 3
RANGE $302E-$3033 DB_DATA 5
RANGE $3033-$3038 DB_DATA 5
RANGE $3038-$303D DB_DATA 5
RANGE $303D-$3042 DB_DATA 5
RANGE $3042-$3047 DB_DATA 5
RANGE $3047-$304A DB_DATA 3
RANGE $304A-$304D DB_DATA 3
RANGE $304D-$3050 DB_DATA 3
RANGE $3050-$3053 DB_DATA 3
RANGE $3053-$3058 DB_DATA 5
RANGE $3058-$305D DB_DATA 5
RANGE $305D-$3062 DB_DATA 5
RANGE $3062-$3065 DB_DATA 3
RANGE $3065-$3068 DB_DATA 3
RANGE $3068-$306B DB_DATA 3
RANGE $306B-$306E DB_DATA 3
RANGE $306E-$3071 DB_DATA 3
RANGE $3071-$3074 DB_DATA 3
RANGE $3074-$3079 DB_DATA 5
RANGE $3079-$307E DB_DATA 5
RANGE $307E-$3083 DB_DATA 5
RANGE $3083-$3088 DB_DATA 5
RANGE $3088-$308D DB_DATA 5
RANGE $308D-$3090 DB_DATA 3
RANGE $3090-$3093 DB_DATA 3
RANGE $3093-$3096 DB_DATA 3
RANGE $3096-$3099 DB_DATA 3
RANGE $3099-$309E DB_DATA 5
RANGE $309E-$30A3 DB_DATA 5
RANGE $30A3-$30A8 DB_DATA 5
RANGE $30A8-$30AB DB_DATA 3
RANGE $30AB-$30AE DB_DATA 3
RANGE $30AE-$30B1 DB_DATA 3
RANGE $30B1-$30B4 DB_DATA 3
RANGE $30B4-$30B7 DB_DATA 3
RANGE $30B7-$30BA DB_DATA 3
RANGE $30BA-$30BF DB_DATA 5
RANGE $30BF-$30C4 DB_DATA 5
RANGE $30C4-$30C6 DW_DATA 1
RANGE $30C6-$30C7 DB_DATA 1
RANGE $30C7-$30C9 DW_DATA 1
RANGE $30C9-$30CB DB_DATA 2
RANGE $30CB-$30CD DW_DATA 1
RANGE $30CD-$30CE DB_DATA 1
RANGE $30CE-$30D0 DW_DATA 1
RANGE $30D0-$30D2 DB_DATA 2
RANGE $30D2-$30D4 DW_DATA 1
RANGE $30D4-$30D5 DB_DATA 1
RANGE $30D5-$30D7 DW_DATA 1
RANGE $30D7-$30D9 DB_DATA 2
RANGE $30D9-$30DB DW_DATA 1
RANGE $30DB-$30DC DB_DATA 1
RANGE $30DC-$30DE DW_DATA 1
RANGE $30DE-$30E0 DB_DATA 2
RANGE $30E0-$30E2 DW_DATA 1
RANGE $30E2-$30E4 DW_DATA 1
RANGE $30E4-$30E6 DW_DATA 1
RANGE $30E6-$30E8 DW_DATA 1
RANGE $30E8-$30EA DW_DATA 1
RANGE $30EA-$30EC DW_DATA 1
RANGE $30EC-$30EE DW_DATA 1
RANGE $30EE-$30F0 DW_DATA 1
RANGE $30F0-$30F2 DW_DATA 1
RANGE $30F2-$30F4 DW_DATA 1
RANGE $30F4-$30F6 DW_DATA 1
RANGE $30F6-$30F8 DW_DATA 1
RANGE $30F8-$30FA DW_DATA 1
RANGE $30FA-$30FC DW_DATA 1
RANGE $30FC-$3101 DB_DATA 5
RANGE $3101-$3106 DB_DATA 5
RANGE $3106-$310B DB_DATA 5
RANGE $310B-$310E DB_DATA 3
RANGE $310E-$3111 DB_DATA 3
RANGE $3111-$3114 DB_DATA 3
RANGE $3114-$3117 DB_DATA 3
RANGE $3117-$311A DB_DATA 3
RANGE $311A-$311D DB_DATA 3
RANGE $311D-$3122 DB_DATA 5
RANGE $3122-$3125 DB_DATA 3
RANGE $3125-$3128 DB_DATA 3
RANGE $3128-$312B DB_DATA 3
RANGE $312B-$312E DB_DATA 3
RANGE $312E-$3131 DB_DATA 3
RANGE $3131-$3134 DB_DATA 3
RANGE $3134-$3139 DB_DATA 5
RANGE $3139-$313E DB_DATA 5
RANGE $313E-$3143 DB_DATA 5
RANGE $3143-$3148 DB_DATA 5
RANGE $3148-$314D DB_DATA 5
RANGE $314D-$3150 DB_DATA 3
RANGE $3150-$3153 DB_DATA 3
RANGE $3153-$3156 DB_DATA 3
RANGE $3156-$3159 DB_DATA 3
RANGE $3159-$315C DB_DATA 3
RANGE $315C-$315F DB_DATA 3
RANGE $315F-$3164 DB_DATA 5
RANGE $3164-$3167 DB_DATA 3
RANGE $3167-$316A DB_DATA 3
RANGE $316A-$316D DB_DATA 3
RANGE $316D-$3170 DB_DATA 3
RANGE $3170-$3173 DB_DATA 3
RANGE $3173-$3176 DB_DATA 3
RANGE $3176-$317B DB_DATA 5
RANGE $317B-$3180 DB_DATA 5
RANGE $3180-$3185 DB_DATA 5
RANGE $3185-$318A DB_DATA 5
RANGE $318A-$318F DB_DATA 5
RANGE $318F-$3192 DB_DATA 3
RANGE $3192-$3195 DB_DATA 3
RANGE $3195-$3198 DB_DATA 3
RANGE $3198-$319B DB_DATA 3
RANGE $319B-$319E DB_DATA 3
RANGE $319E-$31A1 DB_DATA 3
RANGE $31A1-$31A6 DB_DATA 5
RANGE $31A6-$31A9 DB_DATA 3
RANGE $31A9-$31AC DB_DATA 3
RANGE $31AC-$31AF DB_DATA 3
RANGE $31AF-$31B2 DB_DATA 3
RANGE $31B2-$31B5 DB_DATA 3
RANGE $31B5-$31B8 DB_DATA 3
RANGE $31B8-$31BD DB_DATA 5
RANGE $31BD-$31C2 DB_DATA 5
RANGE $31C2-$31C7 DB_DATA 5
RANGE $31C7-$31CC DB_DATA 5
RANGE $31CC-$31D1 DB_DATA 5
RANGE $31D1-$31D4 DB_DATA 3
RANGE $31D4-$31D7 DB_DATA 3
RANGE $31D7-$31DA DB_DATA 3
RANGE $31DA-$31DD DB_DATA 3
RANGE $31DD-$31E0 DB_DATA 3
RANGE $31E0-$31E3 DB_DATA 3
RANGE $31E3-$31E8 DB_DATA 5
RANGE $31E8-$31EB DB_DATA 3
RANGE $31EB-$31EE DB_DATA 3
RANGE $31EE-$31F1 DB_DATA 3
RANGE $31F1-$31F4 DB_DATA 3
RANGE $31F4-$31F7 DB_DATA 3
RANGE $31F7-$31FA DB_DATA 3
RANGE $31FA-$31FF DB_DATA 5
RANGE $31FF-$3204 DB_DATA 5
RANGE $3204-$3209 DB_DATA 5
RANGE $3209-$320E DB_DATA 5
RANGE $320E-$3213 DB_DATA 5
RANGE $3213-$3216 DB_DATA 3
RANGE $3216-$3219 DB_DATA 3
RANGE $3219-$321C DB_DATA 3
RANGE $321C-$321F DB_DATA 3
RANGE $321F-$3224 DB_DATA 5
RANGE $3224-$3229 DB_DATA 5
RANGE $3229-$322C DB_DATA 3
RANGE $322C-$322F DB_DATA 3
RANGE $322F-$3234 DB_DATA 5
RANGE $3234-$3239 DB_DATA 5
RANGE $3239-$323C DB_DATA 3
RANGE $323C-$323F DB_DATA 3
RANGE $323F-$3242 DB_DATA 3
RANGE $3242-$3245 DB_DATA 3
RANGE $3245-$324A DB_DATA 5
RANGE $324A-$324F DB_DATA 5
RANGE $324F-$3254 DB_DATA 5
RANGE $3254-$3259 DB_DATA 5
RANGE $3259-$325C DB_DATA 3
RANGE $325C-$325F DB_DATA 3
RANGE $325F-$3262 DB_DATA 3
RANGE $3262-$3265 DB_DATA 3
RANGE $3265-$3268 DB_DATA 3
RANGE $3268-$326B DB_DATA 3
RANGE $326B-$3270 DB_DATA 5
RANGE $3270-$3273 DB_DATA 3
RANGE $3273-$3276 DB_DATA 3
RANGE $3276-$3279 DB_DATA 3
RANGE $3279-$327C DB_DATA 3
RANGE $327C-$327F DB_DATA 3
RANGE $327F-$3282 DB_DATA 3
RANGE $3282-$3287 DB_DATA 5
RANGE $3287-$328C DB_DATA 5
RANGE $328C-$3291 DB_DATA 5
RANGE $3291-$3296 DB_DATA 5
RANGE $3296-$329B DB_DATA 5
RANGE $329B-$329E DB_DATA 3
RANGE $329E-$32A1 DB_DATA 3
RANGE $32A1-$32A4 DB_DATA 3
RANGE $32A4-$32A7 DB_DATA 3
RANGE $32A7-$32AA DB_DATA 3
RANGE $32AA-$32AD DB_DATA 3
RANGE $32AD-$32B2 DB_DATA 5
RANGE $32B2-$32B5 DB_DATA 3
RANGE $32B5-$32B8 DB_DATA 3
RANGE $32B8-$32BB DB_DATA 3
RANGE $32BB-$32BE DB_DATA 3
RANGE $32BE-$32C1 DB_DATA 3
RANGE $32C1-$32C4 DB_DATA 3
RANGE $32C4-$32C9 DB_DATA 5
RANGE $32C9-$32CE DB_DATA 5
RANGE $32CE-$32D3 DB_DATA 5
RANGE $32D3-$32D8 DB_DATA 5
RANGE $32D8-$32DD DB_DATA 5
RANGE $32DD-$32E0 DB_DATA 3
RANGE $32E0-$32E3 DB_DATA 3
RANGE $32E3-$32E6 DB_DATA 3
RANGE $32E6-$32E9 DB_DATA 3
RANGE $32E9-$32EC DB_DATA 3
RANGE $32EC-$32EF DB_DATA 3
RANGE $32EF-$32F4 DB_DATA 5
RANGE $32F4-$32F7 DB_DATA 3
RANGE $32F7-$32FA DB_DATA 3
RANGE $32FA-$32FD DB_DATA 3
RANGE $32FD-$3300 DB_DATA 3
RANGE $3300-$3303 DB_DATA 3
RANGE $3303-$3306 DB_DATA 3
RANGE $3306-$330B DB_DATA 5
RANGE $330B-$3310 DB_DATA 5
RANGE $3310-$3315 DB_DATA 5
RANGE $3315-$331A DB_DATA 5
RANGE $331A-$331F DB_DATA 5
RANGE $331F-$3322 DB_DATA 3
RANGE $3322-$3325 DB_DATA 3
RANGE $3325-$3328 DB_DATA 3
RANGE $3328-$332B DB_DATA 3
RANGE $332B-$332E DB_DATA 3
RANGE $332E-$3331 DB_DATA 3
RANGE $3331-$3336 DB_DATA 5
RANGE $3336-$3339 DB_DATA 3
RANGE $3339-$333C DB_DATA 3
RANGE $333C-$333F DB_DATA 3
RANGE $333F-$3342 DB_DATA 3
RANGE $3342-$3345 DB_DATA 3
RANGE $3345-$3348 DB_DATA 3
RANGE $3348-$334D DB_DATA 5
RANGE $334D-$3352 DB_DATA 5
RANGE $3352-$3357 DB_DATA 5
RANGE $3357-$335C DB_DATA 5
RANGE $335C-$3361 DB_DATA 5
RANGE $3361-$3364 DB_DATA 3
RANGE $3364-$3367 DB_DATA 3
RANGE $3367-$336A DB_DATA 3
RANGE $336A-$336D DB_DATA 3
RANGE $336D-$3370 DB_DATA 3
RANGE $3370-$3373 DB_DATA 3
RANGE $3373-$3378 DB_DATA 5
RANGE $3378-$337B DB_DATA 3
RANGE $337B-$337E DB_DATA 3
RANGE $337E-$3381 DB_DATA 3
RANGE $3381-$3384 DB_DATA 3
RANGE $3384-$3387 DB_DATA 3
RANGE $3387-$338A DB_DATA 3
RANGE $338A-$338F DB_DATA 5
RANGE $338F-$3394 DB_DATA 5
RANGE $3394-$3396 DW_DATA 1
RANGE $3396-$3397 DB_DATA 1
RANGE $3397-$3399 DW_DATA 1
RANGE $3399-$339B DB_DATA 2
RANGE $339B-$339D DW_DATA 1
RANGE $339D-$339F DW_DATA 1
RANGE $339F-$33A1 DW_DATA 1
RANGE $33A1-$33A3 DW_DATA 1
RANGE $33A3-$33A5 DW_DATA 1
RANGE $33A5-$33A7 DW_DATA 1
RANGE $33A7-$33A9 DW_DATA 1
RANGE $33A9-$33AB DW_DATA 1
RANGE $33AB-$33AD DW_DATA 1
RANGE $33AD-$33B2 DB_DATA 5
RANGE $33B2-$33B7 DB_DATA 5
RANGE $33B7-$33BA DB_DATA 3
RANGE $33BA-$33BD DB_DATA 3
RANGE $33BD-$33C0 DB_DATA 3
RANGE $33C0-$33C3 DB_DATA 3
RANGE $33C3-$33C6 DB_DATA 3
RANGE $33C6-$33C9 DB_DATA 3
RANGE $33C9-$33CE DB_DATA 5
RANGE $33CE-$33D1 DB_DATA 3
RANGE $33D1-$33D4 DB_DATA 3
RANGE $33D4-$33D7 DB_DATA 3
RANGE $33D7-$33DA DB_DATA 3
RANGE $33DA-$33DD DB_DATA 3
RANGE $33DD-$33E2 DB_DATA 5
RANGE $33E2-$33E4 DW_DATA 1
RANGE $33E4-$33E5 DB_DATA 1
RANGE $33E5-$33E7 DW_DATA 1
RANGE $33E7-$33EA DB_DATA 3
RANGE $33EA-$33EC DW_DATA 1
RANGE $33EC-$33ED DB_DATA 1
RANGE $33ED-$33EF DW_DATA 1
RANGE $33EF-$33F2 DB_DATA 3
RANGE $33F2-$33F4 DW_DATA 1
RANGE $33F4-$33F6 DW_DATA 1
RANGE $33F6-$33F8 DW_DATA 1
RANGE $33F8-$33FA DW_DATA 1
RANGE $33FA-$33FC DW_DATA 1
RANGE $33FC-$33FE DW_DATA 1
RANGE $33FE-$3400 DW_DATA 1
RANGE $3400-$3402 DW_DATA 1
RANGE $3402-$3404 DW_DATA 1
RANGE $3404-$3406 DW_DATA 1
RANGE $3406-$3408 DW_DATA 1
RANGE $3408-$340A DW_DATA 1
RANGE $340A-$340C DW_DATA 1
RANGE $340C-$340E DW_DATA 1
RANGE $340E-$3413 DB_DATA 5
RANGE $3413-$3418 DB_DATA 5
RANGE $3418-$341D DB_DATA 5
RANGE $341D-$3420 DB_DATA 3
RANGE $3420-$3423 DB_DATA 3
RANGE $3423-$3426 DB_DATA 3
RANGE $3426-$3429 DB_DATA 3
RANGE $3429-$342C DB_DATA 3
RANGE $342C-$342F DB_DATA 3
RANGE $342F-$3434 DB_DATA 5
RANGE $3434-$3437 DB_DATA 3
RANGE $3437-$343A DB_DATA 3
RANGE $343A-$343D DB_DATA 3
RANGE $343D-$3440 DB_DATA 3
RANGE $3440-$3443 DB_DATA 3
RANGE $3443-$3446 DB_DATA 3
RANGE $3446-$344B DB_DATA 5
RANGE $344B-$344E DB_DATA 3
RANGE $344E-$3453 DB_DATA 5
RANGE $3453-$3458 DB_DATA 5
RANGE $3458-$345D DB_DATA 5
RANGE $345D-$3462 DB_DATA 5
RANGE $3462-$3465 DB_DATA 3
RANGE $3465-$3468 DB_DATA 3
RANGE $3468-$346B DB_DATA 3
RANGE $346B-$346E DB_DATA 3
RANGE $346E-$3471 DB_DATA 3
RANGE $3471-$3474 DB_DATA 3
RANGE $3474-$3479 DB_DATA 5
RANGE $3479-$347C DB_DATA 3
RANGE $347C-$347F DB_DATA 3
RANGE $347F-$3482 DB_DATA 3
RANGE $3482-$3485 DB_DATA 3
RANGE $3485-$3488 DB_DATA 3
RANGE $3488-$348B DB_DATA 3
RANGE $348B-$3490 DB_DATA 5
RANGE $3490-$3493 DB_DATA 3
RANGE $3493-$3498 DB_DATA 5
RANGE $3498-$349D DB_DATA 5
RANGE $349D-$34A2 DB_DATA 5
RANGE $34A2-$34A7 DB_DATA 5
RANGE $34A7-$34AA DB_DATA 3
RANGE $34AA-$34AD DB_DATA 3
RANGE $34AD-$34B0 DB_DATA 3
RANGE $34B0-$34B3 DB_DATA 3
RANGE $34B3-$34B6 DB_DATA 3
RANGE $34B6-$34B9 DB_DATA 3
RANGE $34B9-$34BE DB_DATA 5
RANGE $34BE-$34C1 DB_DATA 3
RANGE $34C1-$34C4 DB_DATA 3
RANGE $34C4-$34C7 DB_DATA 3
RANGE $34C7-$34CA DB_DATA 3
RANGE $34CA-$34CD DB_DATA 3
RANGE $34CD-$34D0 DB_DATA 3
RANGE $34D0-$34D5 DB_DATA 5
RANGE $34D5-$34D8 DB_DATA 3
RANGE $34D8-$34DD DB_DATA 5
RANGE $34DD-$34E2 DB_DATA 5
RANGE $34E2-$34E7 DB_DATA 5
RANGE $34E7-$34EC DB_DATA 5
RANGE $34EC-$34EF DB_DATA 3
RANGE $34EF-$34F2 DB_DATA 3
RANGE $34F2-$34F5 DB_DATA 3
RANGE $34F5-$34FA DB_DATA 5
RANGE $34FA-$34FF DB_DATA 5
RANGE $34FF-$3502 DB_DATA 3
RANGE $3502-$3505 DB_DATA 3
RANGE $3505-$3508 DB_DATA 3
RANGE $3508-$350B DB_DATA 3
RANGE $350B-$350E DB_DATA 3
RANGE $350E-$3511 DB_DATA 3
RANGE $3511-$3516 DB_DATA 5
RANGE $3516-$3519 DB_DATA 3
RANGE $3519-$351C DB_DATA 3
RANGE $351C-$351F DB_DATA 3
RANGE $351F-$3524 DB_DATA 5
RANGE $3524-$3529 DB_DATA 5
RANGE $3529-$352E DB_DATA 5
RANGE $352E-$3533 DB_DATA 5
RANGE $3533-$3536 DB_DATA 3
RANGE $3536-$3539 DB_DATA 3
RANGE $3539-$353C DB_DATA 3
RANGE $353C-$353F DB_DATA 3
RANGE $353F-$3542 DB_DATA 3
RANGE $3542-$3545 DB_DATA 3
RANGE $3545-$354A DB_DATA 5
RANGE $354A-$354D DB_DATA 3
RANGE $354D-$3550 DB_DATA 3
RANGE $3550-$3553 DB_DATA 3
RANGE $3553-$3556 DB_DATA 3
RANGE $3556-$3559 DB_DATA 3
RANGE $3559-$355C DB_DATA 3
RANGE $355C-$3561 DB_DATA 5
RANGE $3561-$3564 DB_DATA 3
RANGE $3564-$3569 DB_DATA 5
RANGE $3569-$356E DB_DATA 5
RANGE $356E-$3573 DB_DATA 5
RANGE $3573-$3578 DB_DATA 5
RANGE $3578-$357B DB_DATA 3
RANGE $357B-$357E DB_DATA 3
RANGE $357E-$3581 DB_DATA 3
RANGE $3581-$3584 DB_DATA 3
RANGE $3584-$3587 DB_DATA 3
RANGE $3587-$358A DB_DATA 3
RANGE $358A-$358F DB_DATA 5
RANGE $358F-$3592 DB_DATA 3
RANGE $3592-$3595 DB_DATA 3
RANGE $3595-$3598 DB_DATA 3
RANGE $3598-$359B DB_DATA 3
RANGE $359B-$359E DB_DATA 3
RANGE $359E-$35A1 DB_DATA 3
RANGE $35A1-$35A6 DB_DATA 5
RANGE $35A6-$35A9 DB_DATA 3
RANGE $35A9-$35AE DB_DATA 5
RANGE $35AE-$35B3 DB_DATA 5
RANGE $35B3-$35B8 DB_DATA 5
RANGE $35B8-$35BD DB_DATA 5
RANGE $35BD-$35C0 DB_DATA 3
RANGE $35C0-$35C3 DB_DATA 3
RANGE $35C3-$35C6 DB_DATA 3
RANGE $35C6-$35C9 DB_DATA 3
RANGE $35C9-$35CC DB_DATA 3
RANGE $35CC-$35CF DB_DATA 3
RANGE $35CF-$35D4 DB_DATA 5
RANGE $35D4-$35D7 DB_DATA 3
RANGE $35D7-$35DA DB_DATA 3
RANGE $35DA-$35DD DB_DATA 3
RANGE $35DD-$35E0 DB_DATA 3
RANGE $35E0-$35E3 DB_DATA 3
RANGE $35E3-$35E6 DB_DATA 3
RANGE $35E6-$35EB DB_DATA 5
RANGE $35EB-$35EE DB_DATA 3
RANGE $35EE-$35F3 DB_DATA 5
RANGE $35F3-$35F8 DB_DATA 5
RANGE $35F8-$35FD DB_DATA 5
RANGE $35FD-$3602 DB_DATA 5
RANGE $3602-$3605 DB_DATA 3
RANGE $3605-$3608 DB_DATA 3
RANGE $3608-$360B DB_DATA 3
RANGE $360B-$360E DB_DATA 3
RANGE $360E-$3611 DB_DATA 3
RANGE $3611-$3614 DB_DATA 3
RANGE $3614-$3619 DB_DATA 5
RANGE $3619-$361C DB_DATA 3
RANGE $361C-$361F DB_DATA 3
RANGE $361F-$3622 DB_DATA 3
RANGE $3622-$3625 DB_DATA 3
RANGE $3625-$3628 DB_DATA 3
RANGE $3628-$362B DB_DATA 3
RANGE $362B-$3630 DB_DATA 5
RANGE $3630-$3633 DB_DATA 3
RANGE $3633-$3638 DB_DATA 5
RANGE $3638-$363D DB_DATA 5
RANGE $363D-$3642 DB_DATA 5
RANGE $3642-$3647 DB_DATA 5
RANGE $3647-$364A DB_DATA 3
RANGE $364A-$364D DB_DATA 3
RANGE $364D-$3650 DB_DATA 3
RANGE $3650-$3653 DB_DATA 3
RANGE $3653-$3656 DB_DATA 3
RANGE $3656-$3659 DB_DATA 3
RANGE $3659-$365E DB_DATA 5
RANGE $365E-$3661 DB_DATA 3
RANGE $3661-$3664 DB_DATA 3
RANGE $3664-$3667 DB_DATA 3
RANGE $3667-$366A DB_DATA 3
RANGE $366A-$366D DB_DATA 3
RANGE $366D-$3670 DB_DATA 3
RANGE $3670-$3675 DB_DATA 5
RANGE $3675-$3678 DB_DATA 3
RANGE $3678-$367D DB_DATA 5
RANGE $367D-$3682 DB_DATA 5
RANGE $3682-$3687 DB_DATA 5
RANGE $3687-$368C DB_DATA 5
RANGE $368C-$368F DB_DATA 3
RANGE $368F-$3692 DB_DATA 3
RANGE $3692-$3695 DB_DATA 3
RANGE $3695-$3698 DB_DATA 3
RANGE $3698-$369B DB_DATA 3
RANGE $369B-$369E DB_DATA 3
RANGE $369E-$36A3 DB_DATA 5
RANGE $36A3-$36A6 DB_DATA 3
RANGE $36A6-$36A9 DB_DATA 3
RANGE $36A9-$36AC DB_DATA 3
RANGE $36AC-$36AF DB_DATA 3
RANGE $36AF-$36B2 DB_DATA 3
RANGE $36B2-$36B5 DB_DATA 3
RANGE $36B5-$36BA DB_DATA 5
RANGE $36BA-$36BD DB_DATA 3
RANGE $36BD-$36C2 DB_DATA 5
RANGE $36C2-$36C4 DW_DATA 1
RANGE $36C4-$36C5 DB_DATA 1
RANGE $36C5-$36C7 DW_DATA 1
RANGE $36C7-$36C9 DB_DATA 2
RANGE $36C9-$36CB DW_DATA 1
RANGE $36CB-$36CC DB_DATA 1
RANGE $36CC-$36CE DW_DATA 1
RANGE $36CE-$36D0 DB_DATA 2
RANGE $36D0-$36D2 DW_DATA 1
RANGE $36D2-$36D3 DB_DATA 1
RANGE $36D3-$36D5 DW_DATA 1
RANGE $36D5-$36D7 DB_DATA 2
RANGE $36D7-$36D9 DW_DATA 1
RANGE $36D9-$36DA DB_DATA 1
RANGE $36DA-$36DC DW_DATA 1
RANGE $36DC-$36DE DB_DATA 2
RANGE $36DE-$36E0 DW_DATA 1
RANGE $36E0-$36E1 DB_DATA 1
RANGE $36E1-$36E3 DW_DATA 1
RANGE $36E3-$36E5 DB_DATA 2
RANGE $36E5-$36E7 DW_DATA 1
RANGE $36E7-$36E8 DB_DATA 1
RANGE $36E8-$36EA DW_DATA 1
RANGE $36EA-$36EC DB_DATA 2
RANGE $36EC-$36EE DW_DATA 1
RANGE $36EE-$36F0 DW_DATA 1
RANGE $36F0-$36F2 DW_DATA 1
RANGE $36F2-$36F4 DW_DATA 1
RANGE $36F4-$36F6 DW_DATA 1
RANGE $36F6-$36F8 DW_DATA 1
RANGE $36F8-$36FA DW_DATA 1
RANGE $36FA-$36FC DW_DATA 1
RANGE $36FC-$36FE DW_DATA 1
RANGE $36FE-$3700 DW_DATA 1
RANGE $3700-$3702 DW_DATA 1
RANGE $3702-$3704 DW_DATA 1
RANGE $3704-$3706 DW_DATA 1
RANGE $3706-$3708 DW_DATA 1
RANGE $3708-$370D DB_DATA 5
RANGE $370D-$3712 DB_DATA 5
RANGE $3712-$3717 DB_DATA 5
RANGE $3717-$371A DB_DATA 3
RANGE $371A-$371D DB_DATA 3
RANGE $371D-$3720 DB_DATA 3
RANGE $3720-$3723 DB_DATA 3
RANGE $3723-$3726 DB_DATA 3
RANGE $3726-$3729 DB_DATA 3
RANGE $3729-$372E DB_DATA 5
RANGE $372E-$3731 DB_DATA 3
RANGE $3731-$3734 DB_DATA 3
RANGE $3734-$3737 DB_DATA 3
RANGE $3737-$373C DB_DATA 5
RANGE $373C-$3741 DB_DATA 5
RANGE $3741-$3746 DB_DATA 5
RANGE $3746-$3749 DB_DATA 3
RANGE $3749-$374C DB_DATA 3
RANGE $374C-$3751 DB_DATA 5
RANGE $3751-$3756 DB_DATA 5
RANGE $3756-$375B DB_DATA 5
RANGE $375B-$3760 DB_DATA 5
RANGE $3760-$3763 DB_DATA 3
RANGE $3763-$3766 DB_DATA 3
RANGE $3766-$3769 DB_DATA 3
RANGE $3769-$376C DB_DATA 3
RANGE $376C-$376F DB_DATA 3
RANGE $376F-$3772 DB_DATA 3
RANGE $3772-$3777 DB_DATA 5
RANGE $3777-$377A DB_DATA 3
RANGE $377A-$377D DB_DATA 3
RANGE $377D-$3780 DB_DATA 3
RANGE $3780-$3785 DB_DATA 5
RANGE $3785-$378A DB_DATA 5
RANGE $378A-$378D DB_DATA 3
RANGE $378D-$3790 DB_DATA 3
RANGE $3790-$3793 DB_DATA 3
RANGE $3793-$3798 DB_DATA 5
RANGE $3798-$379D DB_DATA 5
RANGE $379D-$37A2 DB_DATA 5
RANGE $37A2-$37A7 DB_DATA 5
RANGE $37A7-$37AA DB_DATA 3
RANGE $37AA-$37AD DB_DATA 3
RANGE $37AD-$37B0 DB_DATA 3
RANGE $37B0-$37B3 DB_DATA 3
RANGE $37B3-$37B6 DB_DATA 3
RANGE $37B6-$37B9 DB_DATA 3
RANGE $37B9-$37BE DB_DATA 5
RANGE $37BE-$37C1 DB_DATA 3
RANGE $37C1-$37C4 DB_DATA 3
RANGE $37C4-$37C7 DB_DATA 3
RANGE $37C7-$37CA DB_DATA 3
RANGE $37CA-$37CD DB_DATA 3
RANGE $37CD-$37D0 DB_DATA 3
RANGE $37D0-$37D5 DB_DATA 5
RANGE $37D5-$37D8 DB_DATA 3
RANGE $37D8-$37DD DB_DATA 5
RANGE $37DD-$37E2 DB_DATA 5
RANGE $37E2-$37E7 DB_DATA 5
RANGE $37E7-$37EC DB_DATA 5
RANGE $37EC-$37EF DB_DATA 3
RANGE $37EF-$37F2 DB_DATA 3
RANGE $37F2-$37F7 DB_DATA 5
RANGE $37F7-$37FC DB_DATA 5
RANGE $37FC-$37FF DB_DATA 3
RANGE $37FF-$3802 DB_DATA 3
RANGE $3802-$3805 DB_DATA 3
RANGE $3805-$3808 DB_DATA 3
RANGE $3808-$380B DB_DATA 3
RANGE $380B-$380E DB_DATA 3
RANGE $380E-$3813 DB_DATA 5
RANGE $3813-$3816 DB_DATA 3
RANGE $3816-$3819 DB_DATA 3
RANGE $3819-$381C DB_DATA 3
RANGE $381C-$381F DB_DATA 3
RANGE $381F-$3824 DB_DATA 5
RANGE $3824-$3829 DB_DATA 5
RANGE $3829-$382E DB_DATA 5
RANGE $382E-$3833 DB_DATA 5
RANGE $3833-$3836 DB_DATA 3
RANGE $3836-$383B DB_DATA 5
RANGE $383B-$3840 DB_DATA 5
RANGE $3840-$3845 DB_DATA 5
RANGE $3845-$3848 DB_DATA 3
RANGE $3848-$384B DB_DATA 3
RANGE $384B-$384E DB_DATA 3
RANGE $384E-$3851 DB_DATA 3
RANGE $3851-$3854 DB_DATA 3
RANGE $3854-$3857 DB_DATA 3
RANGE $3857-$385C DB_DATA 5
RANGE $385C-$385F DB_DATA 3
RANGE $385F-$3862 DB_DATA 3
RANGE $3862-$3865 DB_DATA 3
RANGE $3865-$3868 DB_DATA 3
RANGE $3868-$386D DB_DATA 5
RANGE $386D-$3872 DB_DATA 5
RANGE $3872-$3877 DB_DATA 5
RANGE $3877-$387C DB_DATA 5
RANGE $387C-$387F DB_DATA 3
RANGE $387F-$3882 DB_DATA 3
RANGE $3882-$3885 DB_DATA 3
RANGE $3885-$3888 DB_DATA 3
RANGE $3888-$388B DB_DATA 3
RANGE $388B-$388E DB_DATA 3
RANGE $388E-$3893 DB_DATA 5
RANGE $3893-$3896 DB_DATA 3
RANGE $3896-$3899 DB_DATA 3
RANGE $3899-$389C DB_DATA 3
RANGE $389C-$389F DB_DATA 3
RANGE $389F-$38A2 DB_DATA 3
RANGE $38A2-$38A5 DB_DATA 3
RANGE $38A5-$38AA DB_DATA 5
RANGE $38AA-$38AD DB_DATA 3
RANGE $38AD-$38B2 DB_DATA 5
RANGE $38B2-$38B7 DB_DATA 5
RANGE $38B7-$38BC DB_DATA 5
RANGE $38BC-$38C1 DB_DATA 5
RANGE $38C1-$38C4 DB_DATA 3
RANGE $38C4-$38C7 DB_DATA 3
RANGE $38C7-$38CA DB_DATA 3
RANGE $38CA-$38CD DB_DATA 3
RANGE $38CD-$38D0 DB_DATA 3
RANGE $38D0-$38D3 DB_DATA 3
RANGE $38D3-$38D8 DB_DATA 5
RANGE $38D8-$38DB DB_DATA 3
RANGE $38DB-$38DE DB_DATA 3
RANGE $38DE-$38E1 DB_DATA 3
RANGE $38E1-$38E4 DB_DATA 3
RANGE $38E4-$38E7 DB_DATA 3
RANGE $38E7-$38EA DB_DATA 3
RANGE $38EA-$38EF DB_DATA 5
RANGE $38EF-$38F2 DB_DATA 3
RANGE $38F2-$38F7 DB_DATA 5
RANGE $38F7-$38FC DB_DATA 5
RANGE $38FC-$3901 DB_DATA 5
RANGE $3901-$3906 DB_DATA 5
RANGE $3906-$3909 DB_DATA 3
RANGE $3909-$390C DB_DATA 3
RANGE $390C-$390F DB_DATA 3
RANGE $390F-$3912 DB_DATA 3
RANGE $3912-$3915 DB_DATA 3
RANGE $3915-$3918 DB_DATA 3
RANGE $3918-$391D DB_DATA 5
RANGE $391D-$3920 DB_DATA 3
RANGE $3920-$3923 DB_DATA 3
RANGE $3923-$3926 DB_DATA 3
RANGE $3926-$3929 DB_DATA 3
RANGE $3929-$392C DB_DATA 3
RANGE $392C-$392F DB_DATA 3
RANGE $392F-$3934 DB_DATA 5
RANGE $3934-$3937 DB_DATA 3
RANGE $3937-$393C DB_DATA 5
RANGE $393C-$3941 DB_DATA 5
RANGE $3941-$3946 DB_DATA 5
RANGE $3946-$394B DB_DATA 5
RANGE $394B-$394E DB_DATA 3
RANGE $394E-$3951 DB_DATA 3
RANGE $3951-$3954 DB_DATA 3
RANGE $3954-$3957 DB_DATA 3
RANGE $3957-$395A DB_DATA 3
RANGE $395A-$395D DB_DATA 3
RANGE $395D-$3962 DB_DATA 5
RANGE $3962-$3965 DB_DATA 3
RANGE $3965-$3968 DB_DATA 3
RANGE $3968-$396B DB_DATA 3
RANGE $396B-$396E DB_DATA 3
RANGE $396E-$3973 DB_DATA 5
RANGE $3973-$3978 DB_DATA 5
RANGE $3978-$397B DB_DATA 3
RANGE $397B-$397E DB_DATA 3
RANGE $397E-$3983 DB_DATA 5
RANGE $3983-$3988 DB_DATA 5
RANGE $3988-$398D DB_DATA 5
RANGE $398D-$3992 DB_DATA 5
RANGE $3992-$3995 DB_DATA 3
RANGE $3995-$3998 DB_DATA 3
RANGE $3998-$399B DB_DATA 3
RANGE $399B-$399E DB_DATA 3
RANGE $399E-$39A1 DB_DATA 3
RANGE $39A1-$39A4 DB_DATA 3
RANGE $39A4-$39A9 DB_DATA 5
RANGE $39A9-$39AC DB_DATA 3
RANGE $39AC-$39AF DB_DATA 3
RANGE $39AF-$39B2 DB_DATA 3
RANGE $39B2-$39B7 DB_DATA 5
RANGE $39B7-$39BC DB_DATA 5
RANGE $39BC-$39C1 DB_DATA 5
RANGE $39C1-$39C4 DB_DATA 3
RANGE $39C4-$39C7 DB_DATA 3
RANGE $39C7-$39CC DB_DATA 5
RANGE $39CC-$39CE DW_DATA 1
RANGE $39CE-$39CF DB_DATA 1
RANGE $39CF-$39D1 DW_DATA 1
RANGE $39D1-$39D3 DB_DATA 2
RANGE $39D3-$39D5 DW_DATA 1
RANGE $39D5-$39D6 DB_DATA 1
RANGE $39D6-$39D8 DW_DATA 1
RANGE $39D8-$39DA DB_DATA 2
RANGE $39DA-$39DC DW_DATA 1
RANGE $39DC-$39DD DB_DATA 1
RANGE $39DD-$39DF DW_DATA 1
RANGE $39DF-$39E1 DB_DATA 2
RANGE $39E1-$39E3 DW_DATA 1
RANGE $39E3-$39E4 DB_DATA 1
RANGE $39E4-$39E6 DW_DATA 1
RANGE $39E6-$39E8 DB_DATA 2
RANGE $39E8-$39EA DW_DATA 1
RANGE $39EA-$39EB DB_DATA 1
RANGE $39EB-$39ED DW_DATA 1
RANGE $39ED-$39EF DB_DATA 2
RANGE $39EF-$39F1 DW_DATA 1
RANGE $39F1-$39F2 DB_DATA 1
RANGE $39F2-$39F4 DW_DATA 1
RANGE $39F4-$39F6 DB_DATA 2
RANGE $39F6-$39F8 DW_DATA 1
RANGE $39F8-$39FA DW_DATA 1
RANGE $39FA-$39FC DW_DATA 1
RANGE $39FC-$39FE DW_DATA 1
RANGE $39FE-$3A00 DW_DATA 1
RANGE $3A00-$3A02 DW_DATA 1
RANGE $3A02-$3A04 DW_DATA 1
RANGE $3A04-$3A06 DW_DATA 1
RANGE $3A06-$3A08 DW_DATA 1
RANGE $3A08-$3A0A DW_DATA 1
RANGE $3A0A-$3A0C DW_DATA 1
RANGE $3A0C-$3A0E DW_DATA 1
RANGE $3A0E-$3A10 DW_DATA 1
RANGE $3A10-$3A12 DW_DATA 1
RANGE $3A12-$3A14 DW_DATA 1
RANGE $3A14-$3A16 DW_DATA 1
RANGE $3A16-$3A18 DW_DATA 1
RANGE $3A18-$3A1A DW_DATA 1
RANGE $3A1A-$3A1F DB_DATA 5
RANGE $3A1F-$3A24 DB_DATA 5
RANGE $3A24-$3A29 DB_DATA 5
RANGE $3A29-$3A2E DB_DATA 5
RANGE $3A2E-$3A31 DB_DATA 3
RANGE $3A31-$3A36 DB_DATA 5
RANGE $3A36-$3A3B DB_DATA 5
RANGE $3A3B-$3A3E DB_DATA 3
RANGE $3A3E-$3A43 DB_DATA 5
RANGE $3A43-$3A48 DB_DATA 5
RANGE $3A48-$3A4B DB_DATA 3
RANGE $3A4B-$3A50 DB_DATA 5
RANGE $3A50-$3A55 DB_DATA 5
RANGE $3A55-$3A5A DB_DATA 5
RANGE $3A5A-$3A5F DB_DATA 5
RANGE $3A5F-$3A64 DB_DATA 5
RANGE $3A64-$3A69 DB_DATA 5
RANGE $3A69-$3A6E DB_DATA 5
RANGE $3A6E-$3A73 DB_DATA 5
RANGE $3A73-$3A78 DB_DATA 5
RANGE $3A78-$3A7D DB_DATA 5
RANGE $3A7D-$3A82 DB_DATA 5
RANGE $3A82-$3A85 DB_DATA 3
RANGE $3A85-$3A88 DB_DATA 3
RANGE $3A88-$3A8B DB_DATA 3
RANGE $3A8B-$3A8E DB_DATA 3
RANGE $3A8E-$3A91 DB_DATA 3
RANGE $3A91-$3A96 DB_DATA 5
RANGE $3A96-$3A9B DB_DATA 5
RANGE $3A9B-$3A9E DB_DATA 3
RANGE $3A9E-$3AA3 DB_DATA 5
RANGE $3AA3-$3AA8 DB_DATA 5
RANGE $3AA8-$3AAD DB_DATA 5
RANGE $3AAD-$3AB2 DB_DATA 5
RANGE $3AB2-$3AB7 DB_DATA 5
RANGE $3AB7-$3ABC DB_DATA 5
RANGE $3ABC-$3AC1 DB_DATA 5
RANGE $3AC1-$3AC6 DB_DATA 5
RANGE $3AC6-$3ACB DB_DATA 5
RANGE $3ACB-$3AD0 DB_DATA 5
RANGE $3AD0-$3AD7 DB_DATA 7
RANGE $3AD7-$3ADC DB_DATA 5
RANGE $3ADC-$3AE1 DB_DATA 5
RANGE $3AE1-$3AE8 DB_DATA 7
RANGE $3AE8-$3AED DB_DATA 5
RANGE $3AED-$3AF2 DB_DATA 5
RANGE $3AF2-$3AF9 DB_DATA 7
RANGE $3AF9-$3AFE DB_DATA 5
RANGE $3AFE-$3B03 DB_DATA 5
RANGE $3B03-$3B0A DB_DATA 7
RANGE $3B0A-$3B0F DB_DATA 5
RANGE $3B0F-$3B14 DB_DATA 5
RANGE $3B14-$3B1B DB_DATA 7
RANGE $3B1B-$3B20 DB_DATA 5
RANGE $3B20-$3B25 DB_DATA 5
RANGE $3B25-$3B2C DB_DATA 7
RANGE $3B2C-$3B31 DB_DATA 5
RANGE $3B31-$3B36 DB_DATA 5
RANGE $3B36-$3B3D DB_DATA 7
RANGE $3B3D-$3B42 DB_DATA 5
RANGE $3B42-$3B47 DB_DATA 5
RANGE $3B47-$3B4E DB_DATA 7
RANGE $3B4E-$3B53 DB_DATA 5
RANGE $3B53-$3B58 DB_DATA 5
RANGE $3B58-$3B5F DB_DATA 7
RANGE $3B5F-$3B64 DB_DATA 5
RANGE $3B64-$3B69 DB_DATA 5
RANGE $3B69-$3B70 DB_DATA 7
RANGE $3B70-$3B75 DB_DATA 5
RANGE $3B75-$3B7A DB_DATA 5
RANGE $3B7A-$3B81 DB_DATA 7
RANGE $3B81-$3B86 DB_DATA 5
RANGE $3B86-$3B8B DB_DATA 5
RANGE $3B8B-$3B92 DB_DATA 7
RANGE $3B92-$3B94 DW_DATA 1
RANGE $3B94-$3B95 DB_DATA 1
RANGE $3B95-$3B97 DW_DATA 1
RANGE $3B97-$3B9A DB_DATA 3
RANGE $3B9A-$3B9C DW_DATA 1
RANGE $3B9C-$3B9E DW_DATA 1
RANGE $3B9E-$3BA0 DW_DATA 1
RANGE $3BA0-$3BA2 DW_DATA 1
RANGE $3BA2-$3BA4 DW_DATA 1
RANGE $3BA4-$3BA6 DW_DATA 1
RANGE $3BA6-$3BA8 DW_DATA 1
RANGE $3BA8-$3BAA DW_DATA 1
RANGE $3BAA-$3BAC DW_DATA 1
RANGE $3BAC-$3BAE DW_DATA 1
RANGE $3BAE-$3BB0 DW_DATA 1
RANGE $3BB0-$3BB2 DW_DATA 1
RANGE $3BB2-$3BB4 DW_DATA 1
RANGE $3BB4-$3BB6 DW_DATA 1
RANGE $3BB6-$3BB8 DW_DATA 1
RANGE $3BB8-$3BBA DW_DATA 1
RANGE $3BBA-$3BBF DB_DATA 5
RANGE $3BBF-$3BC4 DB_DATA 5
RANGE $3BC4-$3BC9 DB_DATA 5
RANGE $3BC9-$3BCC DB_DATA 3
RANGE $3BCC-$3BCF DB_DATA 3
RANGE $3BCF-$3BD2 DB_DATA 3
RANGE $3BD2-$3BD5 DB_DATA 3
RANGE $3BD5-$3BD8 DB_DATA 3
RANGE $3BD8-$3BDB DB_DATA 3
RANGE $3BDB-$3BE0 DB_DATA 5
RANGE $3BE0-$3BE3 DB_DATA 3
RANGE $3BE3-$3BE6 DB_DATA 3
RANGE $3BE6-$3BEB DB_DATA 5
RANGE $3BEB-$3BF0 DB_DATA 5
RANGE $3BF0-$3BF5 DB_DATA 5
RANGE $3BF5-$3BF8 DB_DATA 3
RANGE $3BF8-$3BFB DB_DATA 3
RANGE $3BFB-$3BFE DB_DATA 3
RANGE $3BFE-$3C03 DB_DATA 5
RANGE $3C03-$3C08 DB_DATA 5
RANGE $3C08-$3C0D DB_DATA 5
RANGE $3C0D-$3C12 DB_DATA 5
RANGE $3C12-$3C15 DB_DATA 3
RANGE $3C15-$3C18 DB_DATA 3
RANGE $3C18-$3C1B DB_DATA 3
RANGE $3C1B-$3C1E DB_DATA 3
RANGE $3C1E-$3C21 DB_DATA 3
RANGE $3C21-$3C24 DB_DATA 3
RANGE $3C24-$3C29 DB_DATA 5
RANGE $3C29-$3C2C DB_DATA 3
RANGE $3C2C-$3C2F DB_DATA 3
RANGE $3C2F-$3C34 DB_DATA 5
RANGE $3C34-$3C39 DB_DATA 5
RANGE $3C39-$3C3E DB_DATA 5
RANGE $3C3E-$3C41 DB_DATA 3
RANGE $3C41-$3C44 DB_DATA 3
RANGE $3C44-$3C47 DB_DATA 3
RANGE $3C47-$3C4C DB_DATA 5
RANGE $3C4C-$3C51 DB_DATA 5
RANGE $3C51-$3C56 DB_DATA 5
RANGE $3C56-$3C5B DB_DATA 5
RANGE $3C5B-$3C5E DB_DATA 3
RANGE $3C5E-$3C61 DB_DATA 3
RANGE $3C61-$3C64 DB_DATA 3
RANGE $3C64-$3C67 DB_DATA 3
RANGE $3C67-$3C6A DB_DATA 3
RANGE $3C6A-$3C6D DB_DATA 3
RANGE $3C6D-$3C72 DB_DATA 5
RANGE $3C72-$3C75 DB_DATA 3
RANGE $3C75-$3C78 DB_DATA 3
RANGE $3C78-$3C7D DB_DATA 5
RANGE $3C7D-$3C82 DB_DATA 5
RANGE $3C82-$3C87 DB_DATA 5
RANGE $3C87-$3C8A DB_DATA 3
RANGE $3C8A-$3C8D DB_DATA 3
RANGE $3C8D-$3C90 DB_DATA 3
RANGE $3C90-$3C95 DB_DATA 5
RANGE $3C95-$3C9A DB_DATA 5
RANGE $3C9A-$3C9F DB_DATA 5
RANGE $3C9F-$3CA4 DB_DATA 5
RANGE $3CA4-$3CA7 DB_DATA 3
RANGE $3CA7-$3CAA DB_DATA 3
RANGE $3CAA-$3CAD DB_DATA 3
RANGE $3CAD-$3CB0 DB_DATA 3
RANGE $3CB0-$3CB3 DB_DATA 3
RANGE $3CB3-$3CB6 DB_DATA 3
RANGE $3CB6-$3CBB DB_DATA 5
RANGE $3CBB-$3CBE DB_DATA 3
RANGE $3CBE-$3CC1 DB_DATA 3
RANGE $3CC1-$3CC6 DB_DATA 5
RANGE $3CC6-$3CCB DB_DATA 5
RANGE $3CCB-$3CD0 DB_DATA 5
RANGE $3CD0-$3CD3 DB_DATA 3
RANGE $3CD3-$3CD6 DB_DATA 3
RANGE $3CD6-$3CD9 DB_DATA 3
RANGE $3CD9-$3CDE DB_DATA 5
RANGE $3CDE-$3CE3 DB_DATA 5
RANGE $3CE3-$3CE8 DB_DATA 5
RANGE $3CE8-$3CED DB_DATA 5
RANGE $3CED-$3CF0 DB_DATA 3
RANGE $3CF0-$3CF3 DB_DATA 3
RANGE $3CF3-$3CF6 DB_DATA 3
RANGE $3CF6-$3CF9 DB_DATA 3
RANGE $3CF9-$3CFC DB_DATA 3
RANGE $3CFC-$3CFF DB_DATA 3
RANGE $3CFF-$3D04 DB_DATA 5
RANGE $3D04-$3D07 DB_DATA 3
RANGE $3D07-$3D0A DB_DATA 3
RANGE $3D0A-$3D0F DB_DATA 5
RANGE $3D0F-$3D14 DB_DATA 5
RANGE $3D14-$3D19 DB_DATA 5
RANGE $3D19-$3D1C DB_DATA 3
RANGE $3D1C-$3D1F DB_DATA 3
RANGE $3D1F-$3D22 DB_DATA 3
RANGE $3D22-$3D27 DB_DATA 5
RANGE $3D27-$3D2C DB_DATA 5
RANGE $3D2C-$3D31 DB_DATA 5
RANGE $3D31-$3D36 DB_DATA 5
RANGE $3D36-$3D39 DB_DATA 3
RANGE $3D39-$3D3C DB_DATA 3
RANGE $3D3C-$3D3F DB_DATA 3
RANGE $3D3F-$3D42 DB_DATA 3
RANGE $3D42-$3D45 DB_DATA 3
RANGE $3D45-$3D48 DB_DATA 3
RANGE $3D48-$3D4D DB_DATA 5
RANGE $3D4D-$3D50 DB_DATA 3
RANGE $3D50-$3D53 DB_DATA 3
RANGE $3D53-$3D58 DB_DATA 5
RANGE $3D58-$3D5D DB_DATA 5
RANGE $3D5D-$3D62 DB_DATA 5
RANGE $3D62-$3D65 DB_DATA 3
RANGE $3D65-$3D68 DB_DATA 3
RANGE $3D68-$3D6B DB_DATA 3
RANGE $3D6B-$3D70 DB_DATA 5
RANGE $3D70-$3D75 DB_DATA 5
RANGE $3D75-$3D7A DB_DATA 5
RANGE $3D7A-$3D7F DB_DATA 5
RANGE $3D7F-$3D82 DB_DATA 3
RANGE $3D82-$3D85 DB_DATA 3
RANGE $3D85-$3D88 DB_DATA 3
RANGE $3D88-$3D8B DB_DATA 3
RANGE $3D8B-$3D8E DB_DATA 3
RANGE $3D8E-$3D91 DB_DATA 3
RANGE $3D91-$3D96 DB_DATA 5
RANGE $3D96-$3D99 DB_DATA 3
RANGE $3D99-$3D9C DB_DATA 3
RANGE $3D9C-$3DA1 DB_DATA 5
RANGE $3DA1-$3DA6 DB_DATA 5
RANGE $3DA6-$3DAB DB_DATA 5
RANGE $3DAB-$3DAE DB_DATA 3
RANGE $3DAE-$3DB1 DB_DATA 3
RANGE $3DB1-$3DB4 DB_DATA 3
RANGE $3DB4-$3DB9 DB_DATA 5
RANGE $3DB9-$3DBE DB_DATA 5
RANGE $3DBE-$3DC3 DB_DATA 5
RANGE $3DC3-$3DC8 DB_DATA 5
RANGE $3DC8-$3DCB DB_DATA 3
RANGE $3DCB-$3DCE DB_DATA 3
RANGE $3DCE-$3DD1 DB_DATA 3
RANGE $3DD1-$3DD4 DB_DATA 3
RANGE $3DD4-$3DD7 DB_DATA 3
RANGE $3DD7-$3DDA DB_DATA 3
RANGE $3DDA-$3DDF DB_DATA 5
RANGE $3DDF-$3DE2 DB_DATA 3
RANGE $3DE2-$3DE5 DB_DATA 3
RANGE $3DE5-$3DEA DB_DATA 5
RANGE $3DEA-$3DEF DB_DATA 5
RANGE $3DEF-$3DF4 DB_DATA 5
RANGE $3DF4-$3DF7 DB_DATA 3
RANGE $3DF7-$3DFA DB_DATA 3
RANGE $3DFA-$3DFD DB_DATA 3
RANGE $3DFD-$3E02 DB_DATA 5
RANGE $3E02-$3E07 DB_DATA 5
RANGE $3E07-$3E0C DB_DATA 5
RANGE $3E0C-$3E11 DB_DATA 5
RANGE $3E11-$3E14 DB_DATA 3
RANGE $3E14-$3E17 DB_DATA 3
RANGE $3E17-$3E1A DB_DATA 3
RANGE $3E1A-$3E1D DB_DATA 3
RANGE $3E1D-$3E20 DB_DATA 3
RANGE $3E20-$3E23 DB_DATA 3
RANGE $3E23-$3E28 DB_DATA 5
RANGE $3E28-$3E2B DB_DATA 3
RANGE $3E2B-$3E2E DB_DATA 3
RANGE $3E2E-$3E33 DB_DATA 5
RANGE $3E33-$3E38 DB_DATA 5
RANGE $3E38-$3E3D DB_DATA 5
RANGE $3E3D-$3E40 DB_DATA 3
RANGE $3E40-$3E43 DB_DATA 3
RANGE $3E43-$3E46 DB_DATA 3
RANGE $3E46-$3E4B DB_DATA 5
RANGE $3E4B-$3E50 DB_DATA 5
RANGE $3E50-$3E55 DB_DATA 5
RANGE $3E55-$3E5A DB_DATA 5
RANGE $3E5A-$3E5D DB_DATA 3
RANGE $3E5D-$3E60 DB_DATA 3
RANGE $3E60-$3E63 DB_DATA 3
RANGE $3E63-$3E66 DB_DATA 3
RANGE $3E66-$3E69 DB_DATA 3
RANGE $3E69-$3E6C DB_DATA 3
RANGE $3E6C-$3E71 DB_DATA 5
RANGE $3E71-$3E74 DB_DATA 3
RANGE $3E74-$3E77 DB_DATA 3
RANGE $3E77-$3E7C DB_DATA 5
RANGE $3E7C-$3E81 DB_DATA 5
RANGE $3E81-$3E86 DB_DATA 5
RANGE $3E86-$3E89 DB_DATA 3
RANGE $3E89-$3E8C DB_DATA 3
RANGE $3E8C-$3E8F DB_DATA 3
RANGE $3E8F-$3E94 DB_DATA 5
RANGE $3E94-$3E99 DB_DATA 5
RANGE $3E99-$3E9E DB_DATA 5
RANGE $3E9E-$3EA3 DB_DATA 5
RANGE $3EA3-$3EA6 DB_DATA 3
RANGE $3EA6-$3EA9 DB_DATA 3
RANGE $3EA9-$3EAC DB_DATA 3
RANGE $3EAC-$3EAF DB_DATA 3
RANGE $3EAF-$3EB2 DB_DATA 3
RANGE $3EB2-$3EB5 DB_DATA 3
RANGE $3EB5-$3EBA DB_DATA 5
RANGE $3EBA-$3EBD DB_DATA 3
RANGE $3EBD-$3EC0 DB_DATA 3
RANGE $3EC0-$3EC5 DB_DATA 5
RANGE $3EC5-$3ECA DB_DATA 5
RANGE $3ECA-$3ECF DB_DATA 5
RANGE $3ECF-$3ED2 DB_DATA 3
RANGE $3ED2-$3ED5 DB_DATA 3
RANGE $3ED5-$3ED8 DB_DATA 3
RANGE $3ED8-$3EDD DB_DATA 5
RANGE $3EDD-$3EDF DW_DATA 1
RANGE $3EDF-$3EE0 DB_DATA 1
RANGE $3EE0-$3EE2 DW_DATA 1
RANGE $3EE2-$3EE4 DB_DATA 2
RANGE $3EE4-$3EE6 DW_DATA 1
RANGE $3EE6-$3EE7 DB_DATA 1
RANGE $3EE7-$3EE9 DW_DATA 1
RANGE $3EE9-$3EEB DB_DATA 2
RANGE $3EEB-$3EED DW_DATA 1
RANGE $3EED-$3EEE DB_DATA 1
RANGE $3EEE-$3EF0 DW_DATA 1
RANGE $3EF0-$3EF2 DB_DATA 2
RANGE $3EF2-$3EF4 DW_DATA 1
RANGE $3EF4-$3EF5 DB_DATA 1
RANGE $3EF5-$3EF7 DW_DATA 1
RANGE $3EF7-$3EF9 DB_DATA 2
RANGE $3EF9-$3EFB DW_DATA 1
RANGE $3EFB-$3EFC DB_DATA 1
RANGE $3EFC-$3EFE DW_DATA 1
RANGE $3EFE-$3F00 DB_DATA 2
RANGE $3F00-$3F02 DW_DATA 1
RANGE $3F02-$3F03 DB_DATA 1
RANGE $3F03-$3F05 DW_DATA 1
RANGE $3F05-$3F07 DB_DATA 2
RANGE $3F07-$3F09 DW_DATA 1
RANGE $3F09-$3F0A DB_DATA 1
RANGE $3F0A-$3F0C DW_DATA 1
RANGE $3F0C-$3F0E DB_DATA 2
RANGE $3F0E-$3F10 DW_DATA 1
RANGE $3F10-$3F11 DB_DATA 1
RANGE $3F11-$3F13 DW_DATA 1
RANGE $3F13-$3F15 DB_DATA 2
RANGE $3F15-$3F17 DW_DATA 1
RANGE $3F17-$3F18 DB_DATA 1
RANGE $3F18-$3F1A DW_DATA 1
RANGE $3F1A-$3F1C DB_DATA 2
RANGE $3F1C-$3F1E DW_DATA 1
RANGE $3F1E-$3F1F DB_DATA 1
RANGE $3F1F-$3F21 DW_DATA 1
RANGE $3F21-$3F23 DB_DATA 2
RANGE $3F23-$3F25 DW_DATA 1
RANGE $3F25-$3F27 DW_DATA 1
RANGE $3F27-$3F29 DW_DATA 1
RANGE $3F29-$3F2A DB_DATA 1
RANGE $3F2A-$3F2C DW_DATA 1
RANGE $3F2C-$3F2E DB_DATA 2
RANGE $3F2E-$3F30 DW_DATA 1
RANGE $3F30-$3F31 DB_DATA 1
RANGE $3F31-$3F33 DW_DATA 1
RANGE $3F33-$3F35 DB_DATA 2
RANGE $3F35-$3F37 DW_DATA 1
RANGE $3F37-$3F38 DB_DATA 1
RANGE $3F38-$3F3A DW_DATA 1
RANGE $3F3A-$3F3C DB_DATA 2
RANGE $3F3C-$3F3E DW_DATA 1
RANGE $3F3E-$3F40 DW_DATA 1
RANGE $3F40-$3F42 DW_DATA 1
RANGE $3F42-$3F44 DW_DATA 1
RANGE $3F44-$3F46 DW_DATA 1
RANGE $3F46-$3F48 DW_DATA 1
RANGE $3F48-$3F49 DB_DATA 1
RANGE $3F49-$3F4B DW_DATA 1
RANGE $3F4B-$3F4D DB_DATA 2
RANGE $3F4D-$3F4F DW_DATA 1
RANGE $3F4F-$3F50 DB_DATA 1
RANGE $3F50-$3F52 DW_DATA 1
RANGE $3F52-$3F54 DB_DATA 2
RANGE $3F54-$3F56 DW_DATA 1
RANGE $3F56-$3F57 DB_DATA 1
RANGE $3F57-$3F59 DW_DATA 1
RANGE $3F59-$3F5B DB_DATA 2
RANGE $3F5B-$3F5D DW_DATA 1
RANGE $3F5D-$3F5E DB_DATA 1
RANGE $3F5E-$3F60 DW_DATA 1
RANGE $3F60-$3F62 DB_DATA 2
RANGE $3F62-$3F64 DW_DATA 1
RANGE $3F64-$3F65 DB_DATA 1
RANGE $3F65-$3F67 DW_DATA 1
RANGE $3F67-$3F69 DB_DATA 2
RANGE $3F69-$3F6B DW_DATA 1
RANGE $3F6B-$3F6C DB_DATA 1
RANGE $3F6C-$3F6E DW_DATA 1
RANGE $3F6E-$3F70 DB_DATA 2
RANGE $3F70-$3F72 DW_DATA 1
RANGE $3F72-$3F74 DW_DATA 1
RANGE $3F74-$3F76 DW_DATA 1
RANGE $3F76-$3F78 DW_DATA 1
RANGE $3F78-$3F7A DW_DATA 1
RANGE $3F7A-$3F7F DB_DATA 5
RANGE $3F7F-$3F84 DB_DATA 5
RANGE $3F84-$3F89 DB_DATA 5
RANGE $3F89-$3F8E DB_DATA 5
RANGE $3F8E-$3F93 DB_DATA 5
RANGE $3F93-$3F96 DB_DATA 3
RANGE $3F96-$3F99 DB_DATA 3
RANGE $3F99-$3F9C DB_DATA 3
RANGE $3F9C-$3F9F DB_DATA 3
RANGE $3F9F-$3FA2 DB_DATA 3
RANGE $3FA2-$3FA5 DB_DATA 3
RANGE $3FA5-$3FAA DB_DATA 5
RANGE $3FAA-$3FAD DB_DATA 3
RANGE $3FAD-$3FB0 DB_DATA 3
RANGE $3FB0-$3FB3 DB_DATA 3
RANGE $3FB3-$3FB6 DB_DATA 3
RANGE $3FB6-$3FB9 DB_DATA 3
RANGE $3FB9-$3FBC DB_DATA 3
RANGE $3FBC-$3FC1 DB_DATA 5
RANGE $3FC1-$3FC4 DB_DATA 3
RANGE $3FC4-$3FC7 DB_DATA 3
RANGE $3FC7-$3FCA DB_DATA 3
RANGE $3FCA-$3FCD DB_DATA 3
RANGE $3FCD-$3FD0 DB_DATA 3
RANGE $3FD0-$3FD3 DB_DATA 3
RANGE $3FD3-$3FD8 DB_DATA 5
RANGE $3FD8-$3FDB DB_DATA 3
RANGE $3FDB-$3FDE DB_DATA 3
RANGE $3FDE-$3FE1 DB_DATA 3
RANGE $3FE1-$3FE4 DB_DATA 3
RANGE $3FE4-$3FE7 DB_DATA 3
RANGE $3FE7-$3FEA DB_DATA 3
RANGE $3FEA-$3FEF DB_DATA 5
RANGE $3FEF-$3FF2 DB_DATA 3
RANGE $3FF2-$3FF5 DB_DATA 3
RANGE $3FF5-$3FF8 DB_DATA 3
RANGE $3FF8-$3FFB DB_DATA 3
RANGE $3FFB-$3FFE DB_DATA 3
RANGE $3FFE-$4003 DB_DATA 5
RANGE $4003-$4008 DB_DATA 5
RANGE $4008-$400B DB_DATA 3
RANGE $400B-$400E DB_DATA 3
RANGE $400E-$4011 DB_DATA 3
RANGE $4011-$4014 DB_DATA 3
RANGE $4014-$4017 DB_DATA 3
RANGE $4017-$401A DB_DATA 3
RANGE $401A-$401F DB_DATA 5
RANGE $401F-$4022 DB_DATA 3
RANGE $4022-$4025 DB_DATA 3
RANGE $4025-$402A DB_DATA 5
RANGE $402A-$402F DB_DATA 5
RANGE $402F-$4034 DB_DATA 5
RANGE $4034-$4039 DB_DATA 5
RANGE $4039-$403E DB_DATA 5
RANGE $403E-$4043 DB_DATA 5
RANGE $4043-$4046 DB_DATA 3
RANGE $4046-$4049 DB_DATA 3
RANGE $4049-$404C DB_DATA 3
RANGE $404C-$404F DB_DATA 3
RANGE $404F-$4052 DB_DATA 3
RANGE $4052-$4055 DB_DATA 3
RANGE $4055-$405A DB_DATA 5
RANGE $405A-$405D DB_DATA 3
RANGE $405D-$4060 DB_DATA 3
RANGE $4060-$4063 DB_DATA 3
RANGE $4063-$4066 DB_DATA 3
RANGE $4066-$4069 DB_DATA 3
RANGE $4069-$406C DB_DATA 3
RANGE $406C-$4071 DB_DATA 5
RANGE $4071-$4074 DB_DATA 3
RANGE $4074-$4077 DB_DATA 3
RANGE $4077-$407A DB_DATA 3
RANGE $407A-$407D DB_DATA 3
RANGE $407D-$4080 DB_DATA 3
RANGE $4080-$4083 DB_DATA 3
RANGE $4083-$4088 DB_DATA 5
RANGE $4088-$408B DB_DATA 3
RANGE $408B-$408E DB_DATA 3
RANGE $408E-$4091 DB_DATA 3
RANGE $4091-$4094 DB_DATA 3
RANGE $4094-$4097 DB_DATA 3
RANGE $4097-$409A DB_DATA 3
RANGE $409A-$409F DB_DATA 5
RANGE $409F-$40A2 DB_DATA 3
RANGE $40A2-$40A5 DB_DATA 3
RANGE $40A5-$40A8 DB_DATA 3
RANGE $40A8-$40AB DB_DATA 3
RANGE $40AB-$40AE DB_DATA 3
RANGE $40AE-$40B3 DB_DATA 5
RANGE $40B3-$40B8 DB_DATA 5
RANGE $40B8-$40BB DB_DATA 3
RANGE $40BB-$40BE DB_DATA 3
RANGE $40BE-$40C1 DB_DATA 3
RANGE $40C1-$40C4 DB_DATA 3
RANGE $40C4-$40C7 DB_DATA 3
RANGE $40C7-$40CA DB_DATA 3
RANGE $40CA-$40CF DB_DATA 5
RANGE $40CF-$40D2 DB_DATA 3
RANGE $40D2-$40D5 DB_DATA 3
RANGE $40D5-$40DA DB_DATA 5
RANGE $40DA-$40DF DB_DATA 5
RANGE $40DF-$40E4 DB_DATA 5
RANGE $40E4-$40E9 DB_DATA 5
RANGE $40E9-$40EE DB_DATA 5
RANGE $40EE-$40F3 DB_DATA 5
RANGE $40F3-$40F6 DB_DATA 3
RANGE $40F6-$40F9 DB_DATA 3
RANGE $40F9-$40FC DB_DATA 3
RANGE $40FC-$40FF DB_DATA 3
RANGE $40FF-$4102 DB_DATA 3
RANGE $4102-$4105 DB_DATA 3
RANGE $4105-$410A DB_DATA 5
RANGE $410A-$410D DB_DATA 3
RANGE $410D-$4110 DB_DATA 3
RANGE $4110-$4113 DB_DATA 3
RANGE $4113-$4116 DB_DATA 3
RANGE $4116-$4119 DB_DATA 3
RANGE $4119-$411C DB_DATA 3
RANGE $411C-$4121 DB_DATA 5
RANGE $4121-$4124 DB_DATA 3
RANGE $4124-$4127 DB_DATA 3
RANGE $4127-$412A DB_DATA 3
RANGE $412A-$412D DB_DATA 3
RANGE $412D-$4130 DB_DATA 3
RANGE $4130-$4133 DB_DATA 3
RANGE $4133-$4138 DB_DATA 5
RANGE $4138-$413B DB_DATA 3
RANGE $413B-$413E DB_DATA 3
RANGE $413E-$4141 DB_DATA 3
RANGE $4141-$4144 DB_DATA 3
RANGE $4144-$4147 DB_DATA 3
RANGE $4147-$414A DB_DATA 3
RANGE $414A-$414F DB_DATA 5
RANGE $414F-$4152 DB_DATA 3
RANGE $4152-$4155 DB_DATA 3
RANGE $4155-$4158 DB_DATA 3
RANGE $4158-$415B DB_DATA 3
RANGE $415B-$415E DB_DATA 3
RANGE $415E-$4161 DB_DATA 3
RANGE $4161-$4166 DB_DATA 5
RANGE $4166-$4169 DB_DATA 3
RANGE $4169-$416C DB_DATA 3
RANGE $416C-$416F DB_DATA 3
RANGE $416F-$4172 DB_DATA 3
RANGE $4172-$4175 DB_DATA 3
RANGE $4175-$4178 DB_DATA 3
RANGE $4178-$417D DB_DATA 5
RANGE $417D-$4180 DB_DATA 3
RANGE $4180-$4183 DB_DATA 3
RANGE $4183-$4188 DB_DATA 5
RANGE $4188-$418D DB_DATA 5
RANGE $418D-$4192 DB_DATA 5
RANGE $4192-$4197 DB_DATA 5
RANGE $4197-$419A DB_DATA 3
RANGE $419A-$419D DB_DATA 3
RANGE $419D-$41A0 DB_DATA 3
RANGE $41A0-$41A3 DB_DATA 3
RANGE $41A3-$41A6 DB_DATA 3
RANGE $41A6-$41A9 DB_DATA 3
RANGE $41A9-$41AE DB_DATA 5
RANGE $41AE-$41B3 DB_DATA 5
RANGE $41B3-$41B8 DB_DATA 5
RANGE $41B8-$41BD DB_DATA 5
RANGE $41BD-$41C0 DB_DATA 3
RANGE $41C0-$41C3 DB_DATA 3
RANGE $41C3-$41C6 DB_DATA 3
RANGE $41C6-$41C9 DB_DATA 3
RANGE $41C9-$41CC DB_DATA 3
RANGE $41CC-$41CF DB_DATA 3
RANGE $41CF-$41D4 DB_DATA 5
RANGE $41D4-$41DB DB_DATA 7
RANGE $41DB-$41E0 DB_DATA 5
RANGE $41E0-$41E5 DB_DATA 5
RANGE $41E5-$41EA DB_DATA 5
RANGE $41EA-$41ED DB_DATA 3
RANGE $41ED-$41F0 DB_DATA 3
RANGE $41F0-$41F3 DB_DATA 3
RANGE $41F3-$41F6 DB_DATA 3
RANGE $41F6-$41F9 DB_DATA 3
RANGE $41F9-$41FC DB_DATA 3
RANGE $41FC-$4201 DB_DATA 5
RANGE $4201-$4206 DB_DATA 5
RANGE $4206-$420B DB_DATA 5
RANGE $420B-$4210 DB_DATA 5
RANGE $4210-$4213 DB_DATA 3
RANGE $4213-$4216 DB_DATA 3
RANGE $4216-$4219 DB_DATA 3
RANGE $4219-$421C DB_DATA 3
RANGE $421C-$421F DB_DATA 3
RANGE $421F-$4222 DB_DATA 3
RANGE $4222-$4227 DB_DATA 5
RANGE $4227-$422E DB_DATA 7
RANGE $422E-$4233 DB_DATA 5
RANGE $4233-$4238 DB_DATA 5
RANGE $4238-$423D DB_DATA 5
RANGE $423D-$4240 DB_DATA 3
RANGE $4240-$4243 DB_DATA 3
RANGE $4243-$4246 DB_DATA 3
RANGE $4246-$4249 DB_DATA 3
RANGE $4249-$424C DB_DATA 3
RANGE $424C-$424F DB_DATA 3
RANGE $424F-$4254 DB_DATA 5
RANGE $4254-$4259 DB_DATA 5
RANGE $4259-$425E DB_DATA 5
RANGE $425E-$4263 DB_DATA 5
RANGE $4263-$4266 DB_DATA 3
RANGE $4266-$4269 DB_DATA 3
RANGE $4269-$426C DB_DATA 3
RANGE $426C-$426F DB_DATA 3
RANGE $426F-$4272 DB_DATA 3
RANGE $4272-$4275 DB_DATA 3
RANGE $4275-$427A DB_DATA 5
RANGE $427A-$4281 DB_DATA 7
RANGE $4281-$4286 DB_DATA 5
RANGE $4286-$428B DB_DATA 5
RANGE $428B-$428E DB_DATA 3
RANGE $428E-$4293 DB_DATA 5
RANGE $4293-$4298 DB_DATA 5
RANGE $4298-$429D DB_DATA 5
RANGE $429D-$42A0 DB_DATA 3
RANGE $42A0-$42A3 DB_DATA 3
RANGE $42A3-$42A8 DB_DATA 5
RANGE $42A8-$42AD DB_DATA 5
RANGE $42AD-$42B2 DB_DATA 5
RANGE $42B2-$42B5 DB_DATA 3
RANGE $42B5-$42BA DB_DATA 5
RANGE $42BA-$42BF DB_DATA 5
RANGE $42BF-$42C4 DB_DATA 5
RANGE $42C4-$42C9 DB_DATA 5
RANGE $42C9-$42CE DB_DATA 5
RANGE $42CE-$42D3 DB_DATA 5
RANGE $42D3-$42D6 DB_DATA 3
RANGE $42D6-$42DB DB_DATA 5
RANGE $42DB-$42E0 DB_DATA 5
RANGE $42E0-$42E5 DB_DATA 5
RANGE $42E5-$42E8 DB_DATA 3
RANGE $42E8-$42EB DB_DATA 3
RANGE $42EB-$42EE DB_DATA 3
RANGE $42EE-$42F1 DB_DATA 3
RANGE $42F1-$42F6 DB_DATA 5
RANGE $42F6-$42FB DB_DATA 5
RANGE $42FB-$42FE DB_DATA 3
RANGE $42FE-$4301 DB_DATA 3
RANGE $4301-$4304 DB_DATA 3
RANGE $4304-$4307 DB_DATA 3
RANGE $4307-$430A DB_DATA 3
RANGE $430A-$430D DB_DATA 3
RANGE $430D-$4312 DB_DATA 5
RANGE $4312-$4317 DB_DATA 5
RANGE $4317-$431A DB_DATA 3
RANGE $431A-$431D DB_DATA 3
RANGE $431D-$4320 DB_DATA 3
RANGE $4320-$4323 DB_DATA 3
RANGE $4323-$4328 DB_DATA 5
RANGE $4328-$432D DB_DATA 5
RANGE $432D-$4332 DB_DATA 5
RANGE $4332-$4335 DB_DATA 3
RANGE $4335-$4338 DB_DATA 3
RANGE $4338-$433B DB_DATA 3
RANGE $433B-$433E DB_DATA 3
RANGE $433E-$4341 DB_DATA 3
RANGE $4341-$4346 DB_DATA 5
RANGE $4346-$434B DB_DATA 5
RANGE $434B-$4350 DB_DATA 5
RANGE $4350-$4353 DB_DATA 3
RANGE $4353-$4358 DB_DATA 5
RANGE $4358-$435D DB_DATA 5
RANGE $435D-$4362 DB_DATA 5
RANGE $4362-$4365 DB_DATA 3
RANGE $4365-$4368 DB_DATA 3
RANGE $4368-$436D DB_DATA 5
RANGE $436D-$4372 DB_DATA 5
RANGE $4372-$4377 DB_DATA 5
RANGE $4377-$437A DB_DATA 3
RANGE $437A-$437F DB_DATA 5
RANGE $437F-$4384 DB_DATA 5
RANGE $4384-$4389 DB_DATA 5
RANGE $4389-$438E DB_DATA 5
RANGE $438E-$4393 DB_DATA 5
RANGE $4393-$4398 DB_DATA 5
RANGE $4398-$439B DB_DATA 3
RANGE $439B-$43A0 DB_DATA 5
RANGE $43A0-$43A5 DB_DATA 5
RANGE $43A5-$43AA DB_DATA 5
RANGE $43AA-$43AD DB_DATA 3
RANGE $43AD-$43B0 DB_DATA 3
RANGE $43B0-$43B3 DB_DATA 3
RANGE $43B3-$43B6 DB_DATA 3
RANGE $43B6-$43B9 DB_DATA 3
RANGE $43B9-$43BC DB_DATA 3
RANGE $43BC-$43C1 DB_DATA 5
RANGE $43C1-$43C4 DB_DATA 3
RANGE $43C4-$43C7 DB_DATA 3
RANGE $43C7-$43CA DB_DATA 3
RANGE $43CA-$43CD DB_DATA 3
RANGE $43CD-$43D0 DB_DATA 3
RANGE $43D0-$43D3 DB_DATA 3
RANGE $43D3-$43D8 DB_DATA 5
RANGE $43D8-$43DB DB_DATA 3
RANGE $43DB-$43DE DB_DATA 3
RANGE $43DE-$43E1 DB_DATA 3
RANGE $43E1-$43E4 DB_DATA 3
RANGE $43E4-$43E9 DB_DATA 5
RANGE $43E9-$43EE DB_DATA 5
RANGE $43EE-$43F3 DB_DATA 5
RANGE $43F3-$43F6 DB_DATA 3
RANGE $43F6-$43F9 DB_DATA 3
RANGE $43F9-$43FC DB_DATA 3
RANGE $43FC-$43FF DB_DATA 3
RANGE $43FF-$4402 DB_DATA 3
RANGE $4402-$4407 DB_DATA 5
RANGE $4407-$440C DB_DATA 5
RANGE $440C-$4411 DB_DATA 5
RANGE $4411-$4416 DB_DATA 5
RANGE $4416-$441B DB_DATA 5
RANGE $441B-$4420 DB_DATA 5
RANGE $4420-$4425 DB_DATA 5
RANGE $4425-$442A DB_DATA 5
RANGE $442A-$442F DB_DATA 5
RANGE $442F-$4432 DB_DATA 3
RANGE $4432-$4435 DB_DATA 3
RANGE $4435-$443A DB_DATA 5
RANGE $443A-$443F DB_DATA 5
RANGE $443F-$4444 DB_DATA 5
RANGE $4444-$4447 DB_DATA 3
RANGE $4447-$444A DB_DATA 3
RANGE $444A-$444D DB_DATA 3
RANGE $444D-$4452 DB_DATA 5
RANGE $4452-$4457 DB_DATA 5
RANGE $4457-$445C DB_DATA 5
RANGE $445C-$4461 DB_DATA 5
RANGE $4461-$4466 DB_DATA 5
RANGE $4466-$446B DB_DATA 5
RANGE $446B-$446E DB_DATA 3
RANGE $446E-$4471 DB_DATA 3
RANGE $4471-$4474 DB_DATA 3
RANGE $4474-$4477 DB_DATA 3
RANGE $4477-$447A DB_DATA 3
RANGE $447A-$447D DB_DATA 3
RANGE $447D-$4482 DB_DATA 5
RANGE $4482-$4485 DB_DATA 3
RANGE $4485-$448A DB_DATA 5
RANGE $448A-$448F DB_DATA 5
RANGE $448F-$4494 DB_DATA 5
RANGE $4494-$4497 DB_DATA 3
RANGE $4497-$449C DB_DATA 5
RANGE $449C-$44A1 DB_DATA 5
RANGE $44A1-$44A6 DB_DATA 5
RANGE $44A6-$44AB DB_DATA 5
RANGE $44AB-$44B0 DB_DATA 5
RANGE $44B0-$44B5 DB_DATA 5
RANGE $44B5-$44BA DB_DATA 5
RANGE $44BA-$44BD DB_DATA 3
RANGE $44BD-$44C0 DB_DATA 3
RANGE $44C0-$44C3 DB_DATA 3
RANGE $44C3-$44C6 DB_DATA 3
RANGE $44C6-$44C9 DB_DATA 3
RANGE $44C9-$44CC DB_DATA 3
RANGE $44CC-$44D1 DB_DATA 5
RANGE $44D1-$44D6 DB_DATA 5
RANGE $44D6-$44DB DB_DATA 5
RANGE $44DB-$44E0 DB_DATA 5
RANGE $44E0-$44E5 DB_DATA 5
RANGE $44E5-$44EA DB_DATA 5
RANGE $44EA-$44ED DB_DATA 3
RANGE $44ED-$44F0 DB_DATA 3
RANGE $44F0-$44F3 DB_DATA 3
RANGE $44F3-$44F6 DB_DATA 3
RANGE $44F6-$44FB DB_DATA 5
RANGE $44FB-$4500 DB_DATA 5
RANGE $4500-$4505 DB_DATA 5
RANGE $4505-$450A DB_DATA 5
RANGE $450A-$450F DB_DATA 5
RANGE $450F-$4512 DB_DATA 3
RANGE $4512-$4515 DB_DATA 3
RANGE $4515-$4518 DB_DATA 3
RANGE $4518-$451D DB_DATA 5
RANGE $451D-$4522 DB_DATA 5
RANGE $4522-$4527 DB_DATA 5
RANGE $4527-$4529 DW_DATA 1
RANGE $4529-$452B DW_DATA 1
RANGE $452B-$4530 DB_DATA 5
RANGE $4530-$4535 DB_DATA 5
RANGE $4535-$453A DB_DATA 5
RANGE $453A-$453F DB_DATA 5
RANGE $453F-$4542 DB_DATA 3
RANGE $4542-$4545 DB_DATA 3
RANGE $4545-$4548 DB_DATA 3
RANGE $4548-$454B DB_DATA 3
RANGE $454B-$454E DB_DATA 3
RANGE $454E-$4551 DB_DATA 3
RANGE $4551-$4556 DB_DATA 5
RANGE $4556-$455B DB_DATA 5
RANGE $455B-$4560 DB_DATA 5
RANGE $4560-$4565 DB_DATA 5
RANGE $4565-$456A DB_DATA 5
RANGE $456A-$456F DB_DATA 5
RANGE $456F-$4574 DB_DATA 5
RANGE $4574-$4579 DB_DATA 5
RANGE $4579-$457C DB_DATA 3
RANGE $457C-$4581 DB_DATA 5
RANGE $4581-$4586 DB_DATA 5
RANGE $4586-$458B DB_DATA 5
RANGE $458B-$458E DB_DATA 3
RANGE $458E-$4593 DB_DATA 5
RANGE $4593-$4598 DB_DATA 5
RANGE $4598-$459B DB_DATA 3
RANGE $459B-$459E DB_DATA 3
RANGE $459E-$45A1 DB_DATA 3
RANGE $45A1-$45A4 DB_DATA 3
RANGE $45A4-$45A7 DB_DATA 3
RANGE $45A7-$45AC DB_DATA 5
RANGE $45AC-$45B1 DB_DATA 5
RANGE $45B1-$45B4 DB_DATA 3
RANGE $45B4-$45B7 DB_DATA 3
RANGE $45B7-$45BA DB_DATA 3
RANGE $45BA-$45BF DB_DATA 5
RANGE $45BF-$45C4 DB_DATA 5
RANGE $45C4-$45C7 DB_DATA 3
RANGE $45C7-$45CA DB_DATA 3
RANGE $45CA-$45CD DB_DATA 3
RANGE $45CD-$45D0 DB_DATA 3
RANGE $45D0-$45D3 DB_DATA 3
RANGE $45D3-$45D8 DB_DATA 5
RANGE $45D8-$45DD DB_DATA 5
RANGE $45DD-$45E0 DB_DATA 3
RANGE $45E0-$45E5 DB_DATA 5
RANGE $45E5-$45EA DB_DATA 5
RANGE $45EA-$45EF DB_DATA 5
RANGE $45EF-$45F4 DB_DATA 5
RANGE $45F4-$45F9 DB_DATA 5
RANGE $45F9-$45FB DW_DATA 1
RANGE $45FB-$4600 DB_DATA 5
RANGE $4600-$4605 DB_DATA 5
RANGE $4605-$460A DB_DATA 5
RANGE $460A-$460D DB_DATA 3
RANGE $460D-$4610 DB_DATA 3
RANGE $4610-$4613 DB_DATA 3
RANGE $4613-$4616 DB_DATA 3
RANGE $4616-$461B DB_DATA 5
RANGE $461B-$4620 DB_DATA 5
RANGE $4620-$4625 DB_DATA 5
RANGE $4625-$4627 DW_DATA 1
RANGE $4627-$4628 DB_DATA 1
RANGE $4628-$462A DW_DATA 1
RANGE $462A-$462C DB_DATA 2
RANGE $462C-$462E DW_DATA 1
RANGE $462E-$4630 DW_DATA 1
RANGE $4630-$4632 DW_DATA 1
RANGE $4632-$4634 DW_DATA 1
RANGE $4634-$4636 DW_DATA 1
RANGE $4636-$463B DB_DATA 5
RANGE $463B-$4640 DB_DATA 5
RANGE $4640-$4645 DB_DATA 5
RANGE $4645-$464A DB_DATA 5
RANGE $464A-$464F DB_DATA 5
RANGE $464F-$4654 DB_DATA 5
RANGE $4654-$4659 DB_DATA 5
RANGE $4659-$465E DB_DATA 5
RANGE $465E-$4661 DB_DATA 3
RANGE $4661-$4664 DB_DATA 3
RANGE $4664-$4669 DB_DATA 5
RANGE $4669-$466E DB_DATA 5
RANGE $466E-$4673 DB_DATA 5
RANGE $4673-$4678 DB_DATA 5
RANGE $4678-$467D DB_DATA 5
RANGE $467D-$4682 DB_DATA 5
RANGE $4682-$4687 DB_DATA 5
RANGE $4687-$468C DB_DATA 5
RANGE $468C-$4691 DB_DATA 5
RANGE $4691-$4696 DB_DATA 5
RANGE $4696-$469B DB_DATA 5
RANGE $469B-$46A0 DB_DATA 5
RANGE $46A0-$46A5 DB_DATA 5
RANGE $46A5-$46AA DB_DATA 5
RANGE $46AA-$46AF DB_DATA 5
RANGE $46AF-$46B2 DB_DATA 3
RANGE $46B2-$46B7 DB_DATA 5
RANGE $46B7-$46BC DB_DATA 5
RANGE $46BC-$46C1 DB_DATA 5
RANGE $46C1-$5806 CODE
RANGE $5806-$580E DB_DATA 8
RANGE $580E-$5C03 CODE
RANGE $5C03-$5C13 DB_DATA 16
RANGE $5C13-$5C23 DB_DATA 16
RANGE $5C23-$68DB CODE
RANGE $68DB-$68E9 DW_DATA 7
RANGE $68E9-$7EC9 CODE
RANGE $7EC9-$7ED0 CHAR_DATA 7
RANGE $7ED0-$7ED8 CHAR_DATA 8
RANGE $7ED8-$7F1A CODE
RANGE $7F1A-$7F1D DB_DATA 3
RANGE $7F1D-$7F20 DB_DATA 3
RANGE $7F20-$7F23 DB_DATA 3
RANGE $7F23-$7F26 DB_DATA 3
RANGE $7F26-$7F29 DB_DATA 3
RANGE $7F29-$7F2C DB_DATA 3
RANGE $7F2C-$7F2F DB_DATA 3
RANGE $7F2F-$7F32 DB_DATA 3
RANGE $7F32-$7F35 DB_DATA 3
RANGE $7F35-$7F38 DB_DATA 3
RANGE $7F38-$7F3B DB_DATA 3
RANGE $7F3B-$7F3E DB_DATA 3
RANGE $7F3E-$7F41 DB_DATA 3
RANGE $7F41-$7F44 DB_DATA 3
RANGE $7F44-$7F45 DB_DATA 1
RANGE $7F45-$84A0 CODE
RANGE $84A0-$84A2 DW_DATA 1
RANGE $84A2-$84A4 DW_DATA 1
RANGE $84A4-$84A6 DW_DATA 1
RANGE $84A6-$84A8 DW_DATA 1
RANGE $84A8-$84AA DW_DATA 1
RANGE $84AA-$84AC DW_DATA 1
RANGE $84AC-$84AE DW_DATA 1
RANGE $84AE-$84B0 DW_DATA 1
RANGE $84B0-$84B3 DB_DATA 3
RANGE $84B3-$84B6 DB_DATA 3
RANGE $84B6-$84B7 DB_DATA 1
RANGE $84B7-$84BA DB_DATA 3
RANGE $84BA-$84BD DB_DATA 3
RANGE $84BD-$84BE DB_DATA 1
RANGE $84BE-$84C1 DB_DATA 3
RANGE $84C1-$84C2 DB_DATA 1
RANGE $84C2-$84C5 DB_DATA 3
RANGE $84C5-$84C6 DB_DATA 1
RANGE $84C6-$84C9 DB_DATA 3
RANGE $84C9-$84CA DB_DATA 1
RANGE $84CA-$84CD DB_DATA 3
RANGE $84CD-$84D0 DB_DATA 3
RANGE $84D0-$84D3 DB_DATA 3
RANGE $84D3-$84D4 DB_DATA 1
RANGE $84D4-$84D7 DB_DATA 3
RANGE $84D7-$84DA DB_DATA 3
RANGE $84DA-$84DD DB_DATA 3
RANGE $84DD-$84DE DB_DATA 1
RANGE $84DE-$84E1 DB_DATA 3
RANGE $84E1-$84E4 DB_DATA 3
RANGE $84E4-$84E7 DB_DATA 3
RANGE $84E7-$84EA DB_DATA 3
RANGE $84EA-$84EB DB_DATA 1
RANGE $84EB-$8828 CODE
RANGE $8828-$8830 DW_DATA 4
RANGE $8830-$88AF CODE
RANGE $88AF-$88B1 DW_DATA 1
RANGE $88B1-$88B3 DW_DATA 1
RANGE $88B3-$88B5 DW_DATA 1
RANGE $88B5-$88B7 DW_DATA 1
RANGE $88B7-$88B9 DW_DATA 1
RANGE $88B9-$88BB DW_DATA 1
RANGE $88BB-$88BD DW_DATA 1
RANGE $88BD-$88BF DW_DATA 1
RANGE $88BF-$88C1 DW_DATA 1
RANGE $88C1-$88C3 DW_DATA 1
RANGE $88C3-$89AC CODE
RANGE $89AC-$89AE DW_DATA 1
RANGE $89AE-$89B0 DW_DATA 1
RANGE $89B0-$89B2 DW_DATA 1
RANGE $89B2-$89B4 DW_DATA 1
RANGE $89B4-$89B6 DW_DATA 1
RANGE $89B6-$89B8 DW_DATA 1
RANGE $89B8-$89BA DW_DATA 1
RANGE $89BA-$89BC DW_DATA 1
RANGE $89BC-$89BE DW_DATA 1
RANGE $89BE-$89C0 DW_DATA 1
RANGE $89C0-$89C2 DW_DATA 1
RANGE $89C2-$89C4 DW_DATA 1
RANGE $89C4-$89C6 DW_DATA 1
RANGE $89C6-$89C8 DW_DATA 1
RANGE $89C8-$89CA DW_DATA 1
RANGE $89CA-$89CC DW_DATA 1
RANGE $89CC-$89CE DW_DATA 1
RANGE $89CE-$89D0 DW_DATA 1
RANGE $89D0-$89D2 DW_DATA 1
RANGE $89D2-$89D4 DW_DATA 1
RANGE $89D4-$89D6 DW_DATA 1
RANGE $89D6-$89D8 DW_DATA 1
RANGE $89D8-$89DA DW_DATA 1
RANGE $89DA-$89DC DW_DATA 1
RANGE $89DC-$89E0 DW_DATA 2
RANGE $89E0-$89E2 DB_DATA 2
RANGE $89E2-$89E4 DB_DATA 2
RANGE $89E4-$89E8 DW_DATA 2
RANGE $89E8-$89EC DW_DATA 2
RANGE $89EC-$89EE DB_DATA 2
RANGE $89EE-$89F0 DB_DATA 2
RANGE $89F0-$89F4 DW_DATA 2
RANGE $89F4-$89F8 DW_DATA 2
RANGE $89F8-$89FA DB_DATA 2
RANGE $89FA-$89FC DB_DATA 2
RANGE $89FC-$8A00 DW_DATA 2
RANGE $8A00-$8A04 DB_DATA 4
RANGE $8A04-$8A08 DW_DATA 2
RANGE $8A08-$8A0C DB_DATA 4
RANGE $8A0C-$8A10 DW_DATA 2
RANGE $8A10-$8A14 DW_DATA 2
RANGE $8A14-$8A16 DB_DATA 2
RANGE $8A16-$8A18 DB_DATA 2
RANGE $8A18-$8A1A DB_DATA 2
RANGE $8A1A-$8A1C DB_DATA 2
RANGE $8A1C-$8A1E DB_DATA 2
RANGE $8A1E-$8A20 DB_DATA 2
RANGE $8A20-$8A24 DW_DATA 2
RANGE $8A24-$8A26 DB_DATA 2
RANGE $8A26-$8A28 DB_DATA 2
RANGE $8A28-$8A2C DW_DATA 2
RANGE $8A2C-$8A2E DB_DATA 2
RANGE $8A2E-$8A30 DW_DATA 1
RANGE $8A30-$8A34 DW_DATA 2
RANGE $8A34-$8A36 DB_DATA 2
RANGE $8A36-$8A38 DB_DATA 2
RANGE $8A38-$8A3A DB_DATA 2
RANGE $8A3A-$8A3C DB_DATA 2
RANGE $8A3C-$8A3E DB_DATA 2
RANGE $8A3E-$8A40 DB_DATA 2
RANGE $8A40-$8A44 DW_DATA 2
RANGE $8A44-$8A48 DW_DATA 2
RANGE $8A48-$8A4A DB_DATA 2
RANGE $8A4A-$8A4C DB_DATA 2
RANGE $8A4C-$8A50 DB_DATA 4
RANGE $8A50-$8A54 DW_DATA 2
RANGE $8A54-$8A58 DW_DATA 2
RANGE $8A58-$8A5A DB_DATA 2
RANGE $8A5A-$8A5C DB_DATA 2
RANGE $8A5C-$8A60 DW_DATA 2
RANGE $8A60-$8A64 DW_DATA 2
RANGE $8A64-$8A68 DW_DATA 2
RANGE $8A68-$8A6C DW_DATA 2
RANGE $8A6C-$8A70 DW_DATA 2
RANGE $8A70-$8A74 DW_DATA 2
RANGE $8A74-$8A78 DB_DATA 4
RANGE $8A78-$8A7C DW_DATA 2
RANGE $8A7C-$8A7E DB_DATA 2
RANGE $8A7E-$8A80 DB_DATA 2
RANGE $8A80-$8A82 DB_DATA 2
RANGE $8A82-$8A84 DB_DATA 2
RANGE $8A84-$8A86 DB_DATA 2
RANGE $8A86-$8A88 DB_DATA 2
RANGE $8A88-$8A8A DB_DATA 2
RANGE $8A8A-$8A8C DB_DATA 2
RANGE $8A8C-$8A90 DB_DATA 4
RANGE $8A90-$8A94 DW_DATA 2
RANGE $8A94-$8A96 DB_DATA 2
RANGE $8A96-$8A9A DW_DATA 2
RANGE $8A9A-$8A9C DB_DATA 2
RANGE $8A9C-$8A9E DB_DATA 2
RANGE $8A9E-$8AA2 DW_DATA 2
RANGE $8AA2-$8AA4 DB_DATA 2
RANGE $8AA4-$8AA6 DB_DATA 2
RANGE $8AA6-$8AAA DW_DATA 2
RANGE $8AAA-$8AAC DB_DATA 2
RANGE $8AAC-$8AAE DB_DATA 2
RANGE $8AAE-$8AB2 DW_DATA 2
RANGE $8AB2-$8AB4 DB_DATA 2
RANGE $8AB4-$8AB6 DB_DATA 2
RANGE $8AB6-$8ABA DW_DATA 2
RANGE $8ABA-$8ABC DB_DATA 2
RANGE $8ABC-$8ABE DB_DATA 2
RANGE $8ABE-$8AC2 DW_DATA 2
RANGE $8AC2-$8AC4 DB_DATA 2
RANGE $8AC4-$8AC6 DB_DATA 2
RANGE $8AC6-$8ACA DW_DATA 2
RANGE $8ACA-$8ACC DB_DATA 2
RANGE $8ACC-$8AD4 DW_DATA 4
RANGE $8AD4-$8AD6 DB_DATA 2
RANGE $8AD6-$8ADA DW_DATA 2
RANGE $8ADA-$8ADC DB_DATA 2
RANGE $8ADC-$8ADE DB_DATA 2
RANGE $8ADE-$8AE2 DW_DATA 2
RANGE $8AE2-$8AE4 DB_DATA 2
RANGE $8AE4-$8AE6 DB_DATA 2
RANGE $8AE6-$8AEA DW_DATA 2
RANGE $8AEA-$8AEC DB_DATA 2
RANGE $8AEC-$8AEE DB_DATA 2
RANGE $8AEE-$8AF2 DW_DATA 2
RANGE $8AF2-$8AF4 DB_DATA 2
RANGE $8AF4-$8AF6 DB_DATA 2
RANGE $8AF6-$8AFA DW_DATA 2
RANGE $8AFA-$8AFC DB_DATA 2
RANGE $8AFC-$8AFE DB_DATA 2
RANGE $8AFE-$8B02 DW_DATA 2
RANGE $8B02-$8B04 DB_DATA 2
RANGE $8B04-$8B0C DW_DATA 4
RANGE $8B0C-$8B0E DB_DATA 2
RANGE $8B0E-$8B12 DW_DATA 2
RANGE $8B12-$8B14 DB_DATA 2
RANGE $8B14-$8B1C DW_DATA 4
RANGE $8B1C-$8B1E DB_DATA 2
RANGE $8B1E-$8B22 DW_DATA 2
RANGE $8B22-$8B24 DB_DATA 2
RANGE $8B24-$8B2C DW_DATA 4
RANGE $8B2C-$8B2D DB_DATA 1
RANGE $8B2D-$8B2F DW_DATA 1
RANGE $8B2F-$8B30 DB_DATA 1
RANGE $8B30-$8B32 DW_DATA 1
RANGE $8B32-$8B33 DB_DATA 1
RANGE $8B33-$8B35 DW_DATA 1
RANGE $8B35-$8B37 DW_DATA 1
RANGE $8B37-$8B38 DB_DATA 1
RANGE $8B38-$8B3C DW_DATA 2
RANGE $8B3C-$8B3D DB_DATA 1
RANGE $8B3D-$8B43 DW_DATA 3
RANGE $8B43-$8B44 DB_DATA 1
RANGE $8B44-$8B4C DW_DATA 4
RANGE $8B4C-$8B4D DB_DATA 1
RANGE $8B4D-$8B4F DW_DATA 1
RANGE $8B4F-$8B51 DW_DATA 1
RANGE $8B51-$8B52 DB_DATA 1
RANGE $8B52-$8B5E DW_DATA 6
RANGE $8B5E-$8B5F DB_DATA 1
RANGE $8B5F-$8B6B DW_DATA 6
RANGE $8B6B-$8B6C DB_DATA 1
RANGE $8B6C-$8B72 DW_DATA 3
RANGE $8B72-$8B73 DB_DATA 1
RANGE $8B73-$8B77 DW_DATA 2
RANGE $8B77-$8B78 DB_DATA 1
RANGE $8B78-$8B7C DW_DATA 2
RANGE $8B7C-$8B7D DB_DATA 1
RANGE $8B7D-$8B89 DW_DATA 6
RANGE $8B89-$8B8A DB_DATA 1
RANGE $8B8A-$8B8E DW_DATA 2
RANGE $8B8E-$8B8F DB_DATA 1
RANGE $8B8F-$8B93 DW_DATA 2
RANGE $8B93-$8B94 DB_DATA 1
RANGE $8B94-$8B9C DW_DATA 4
RANGE $8B9C-$8B9D DB_DATA 1
RANGE $8B9D-$8BA1 DW_DATA 2
RANGE $8BA1-$8BA2 DB_DATA 1
RANGE $8BA2-$8BA6 DW_DATA 2
RANGE $8BA6-$8BAA DW_DATA 2
RANGE $8BAA-$8BAE DW_DATA 2
RANGE $8BAE-$8BAF DB_DATA 1
RANGE $8BAF-$8BB3 DW_DATA 2
RANGE $8BB3-$8BB4 DB_DATA 1
RANGE $8BB4-$8BB8 DW_DATA 2
RANGE $8BB8-$8BB9 DB_DATA 1
RANGE $8BB9-$8BBD DW_DATA 2
RANGE $8BBD-$8BC1 DW_DATA 2
RANGE $8BC1-$8BC5 DW_DATA 2
RANGE $8BC5-$8BC9 DW_DATA 2
RANGE $8BC9-$8BCA DB_DATA 1
RANGE $8BCA-$8BCE DW_DATA 2
RANGE $8BCE-$8BCF DB_DATA 1
RANGE $8BCF-$8BD5 DW_DATA 3
RANGE $8BD5-$8BD6 DB_DATA 1
RANGE $8BD6-$8BD8 DW_DATA 1
RANGE $8BD8-$8BD9 DB_DATA 1
RANGE $8BD9-$8BE1 DW_DATA 4
RANGE $8BE1-$8BE2 DB_DATA 1
RANGE $8BE2-$8BE6 DW_DATA 2
RANGE $8BE6-$8BE7 DB_DATA 1
RANGE $8BE7-$8BE9 DW_DATA 1
RANGE $8BE9-$8BEA DB_DATA 1
RANGE $8BEA-$8BEC DW_DATA 1
RANGE $8BEC-$8BED DB_DATA 1
RANGE $8BED-$8BF3 DW_DATA 3
RANGE $8BF3-$8BF9 DW_DATA 3
RANGE $8BF9-$8BFA DB_DATA 1
RANGE $8BFA-$8BFC DW_DATA 1
RANGE $8BFC-$8BFD DB_DATA 1
RANGE $8BFD-$8BFF DW_DATA 1
RANGE $8BFF-$8C00 DB_DATA 1
RANGE $8C00-$8C04 DW_DATA 2
RANGE $8C04-$8C0A DW_DATA 3
RANGE $8C0A-$8C0B DB_DATA 1
RANGE $8C0B-$8C15 DW_DATA 5
RANGE $8C15-$8C1F DW_DATA 5
RANGE $8C1F-$8C29 DW_DATA 5
RANGE $8C29-$8C33 DW_DATA 5
RANGE $8C33-$8C34 DB_DATA 1
RANGE $8C34-$8C38 DW_DATA 2
RANGE $8C38-$8C39 DB_DATA 1
RANGE $8C39-$8C3F DW_DATA 3
RANGE $8C3F-$8C40 DB_DATA 1
RANGE $8C40-$8C46 DW_DATA 3
RANGE $8C46-$8C50 DW_DATA 5
RANGE $8C50-$8C5A DW_DATA 5
RANGE $8C5A-$8C64 DW_DATA 5
RANGE $8C64-$8C6E DW_DATA 5
RANGE $8C6E-$8C6F DB_DATA 1
RANGE $8C6F-$8C75 DW_DATA 3
RANGE $8C75-$8C76 DB_DATA 1
RANGE $8C76-$8C78 DW_DATA 1
RANGE $8C78-$8C79 DB_DATA 1
RANGE $8C79-$8C87 DW_DATA 7
RANGE $8C87-$8C88 DB_DATA 1
RANGE $8C88-$8C92 DW_DATA 5
RANGE $8C92-$8C9C DW_DATA 5
RANGE $8C9C-$8CA6 DW_DATA 5
RANGE $8CA6-$8CB0 DW_DATA 5
RANGE $8CB0-$8CB1 DB_DATA 1
RANGE $8CB1-$8CB5 DW_DATA 2
RANGE $8CB5-$8CB9 DW_DATA 2
RANGE $8CB9-$8CBA DB_DATA 1
RANGE $8CBA-$8CC8 DW_DATA 7
RANGE $8CC8-$8CC9 DB_DATA 1
RANGE $8CC9-$8CCF DW_DATA 3
RANGE $8CCF-$8CD5 DW_DATA 3
RANGE $8CD5-$8CD6 DB_DATA 1
RANGE $8CD6-$8CD8 DW_DATA 1
RANGE $8CD8-$8CD9 DB_DATA 1
RANGE $8CD9-$8CDF DW_DATA 3
RANGE $8CDF-$8CE0 DB_DATA 1
RANGE $8CE0-$8CEA DW_DATA 5
RANGE $8CEA-$8CF4 DW_DATA 5
RANGE $8CF4-$8CF8 DW_DATA 2
RANGE $8CF8-$8D02 DW_DATA 5
RANGE $8D02-$8D0C DW_DATA 5
RANGE $8D0C-$8D16 DW_DATA 5
RANGE $8D16-$8D20 DW_DATA 5
RANGE $8D20-$8D21 DB_DATA 1
RANGE $8D21-$8D29 DW_DATA 4
RANGE $8D29-$8D2A DB_DATA 1
RANGE $8D2A-$8D2C DW_DATA 1
RANGE $8D2C-$8D2D DB_DATA 1
RANGE $8D2D-$8D37 DW_DATA 5
RANGE $8D37-$8D41 DW_DATA 5
RANGE $8D41-$8D45 DW_DATA 2
RANGE $8D45-$8D4F DW_DATA 5
RANGE $8D4F-$8D55 DW_DATA 3
RANGE $8D55-$8D56 DB_DATA 1
RANGE $8D56-$8D58 DW_DATA 1
RANGE $8D58-$8D59 DB_DATA 1
RANGE $8D59-$8D5B DW_DATA 1
RANGE $8D5B-$8D5C DB_DATA 1
RANGE $8D5C-$8D5E DW_DATA 1
RANGE $8D5E-$8D5F DB_DATA 1
RANGE $8D5F-$8D63 DW_DATA 2
RANGE $8D63-$8D64 DB_DATA 1
RANGE $8D64-$8D66 DW_DATA 1
RANGE $8D66-$8D67 DB_DATA 1
RANGE $8D67-$8D71 DW_DATA 5
RANGE $8D71-$8D7B DW_DATA 5
RANGE $8D7B-$8D83 DW_DATA 4
RANGE $8D83-$8D8F DW_DATA 6
RANGE $8D8F-$8D90 DB_DATA 1
RANGE $8D90-$8D9A DW_DATA 5
RANGE $8D9A-$8DA4 DW_DATA 5
RANGE $8DA4-$8DAC DW_DATA 4
RANGE $8DAC-$8DB8 DW_DATA 6
RANGE $8DB8-$8DB9 DB_DATA 1
RANGE $8DB9-$8DBD DW_DATA 2
RANGE $8DBD-$8DBE DB_DATA 1
RANGE $8DBE-$8DC0 DW_DATA 1
RANGE $8DC0-$8DC1 DB_DATA 1
RANGE $8DC1-$8DC3 DW_DATA 1
RANGE $8DC3-$8DC4 DB_DATA 1
RANGE $8DC4-$8DCA DW_DATA 3
RANGE $8DCA-$8DCB DB_DATA 1
RANGE $8DCB-$8DCD DW_DATA 1
RANGE $8DCD-$8DCE DB_DATA 1
RANGE $8DCE-$8DCF DB_DATA 1
RANGE $8DCF-$8DD1 DB_DATA 2
RANGE $8DD1-$8DD5 DW_DATA 2
RANGE $8DD5-$8DD7 DB_DATA 2
RANGE $8DD7-$8DD8 DB_DATA 1
RANGE $8DD8-$8DD9 DB_DATA 1
RANGE $8DD9-$8DDB DB_DATA 2
RANGE $8DDB-$8DDF DW_DATA 2
RANGE $8DDF-$8DE1 DB_DATA 2
RANGE $8DE1-$8DE3 DB_DATA 2
RANGE $8DE3-$8DE7 DW_DATA 2
RANGE $8DE7-$8DE9 DB_DATA 2
RANGE $8DE9-$8DEB DB_DATA 2
RANGE $8DEB-$8DEF DW_DATA 2
RANGE $8DEF-$8DF1 DB_DATA 2
RANGE $8DF1-$8DF2 DB_DATA 1
RANGE $8DF2-$8DF3 DB_DATA 1
RANGE $8DF3-$8DF5 DB_DATA 2
RANGE $8DF5-$8DF9 DW_DATA 2
RANGE $8DF9-$8DFB DB_DATA 2
RANGE $8DFB-$8DFD DB_DATA 2
RANGE $8DFD-$8E01 DW_DATA 2
RANGE $8E01-$8E03 DB_DATA 2
RANGE $8E03-$8E05 DB_DATA 2
RANGE $8E05-$8E09 DW_DATA 2
RANGE $8E09-$8E0B DB_DATA 2
RANGE $8E0B-$8E0C DB_DATA 1
RANGE $8E0C-$8E0D DB_DATA 1
RANGE $8E0D-$8E0F DB_DATA 2
RANGE $8E0F-$8E13 DW_DATA 2
RANGE $8E13-$8E15 DB_DATA 2
RANGE $8E15-$8E17 DB_DATA 2
RANGE $8E17-$8E1B DW_DATA 2
RANGE $8E1B-$8E1D DB_DATA 2
RANGE $8E1D-$8E1F DB_DATA 2
RANGE $8E1F-$8E23 DW_DATA 2
RANGE $8E23-$8E25 DB_DATA 2
RANGE $8E25-$8E27 DB_DATA 2
RANGE $8E27-$8E2B DW_DATA 2
RANGE $8E2B-$8E2D DB_DATA 2
RANGE $8E2D-$8E2F DB_DATA 2
RANGE $8E2F-$8E33 DW_DATA 2
RANGE $8E33-$8E35 DB_DATA 2
RANGE $8E35-$8E36 DB_DATA 1
RANGE $8E36-$8E37 DB_DATA 1
RANGE $8E37-$8E39 DB_DATA 2
RANGE $8E39-$8E3D DW_DATA 2
RANGE $8E3D-$8E3F DB_DATA 2
RANGE $8E3F-$8E41 DB_DATA 2
RANGE $8E41-$8E45 DW_DATA 2
RANGE $8E45-$8E47 DB_DATA 2
RANGE $8E47-$8E49 DB_DATA 2
RANGE $8E49-$8E4D DW_DATA 2
RANGE $8E4D-$8E4F DB_DATA 2
RANGE $8E4F-$8E51 DB_DATA 2
RANGE $8E51-$8E55 DW_DATA 2
RANGE $8E55-$8E57 DB_DATA 2
RANGE $8E57-$8E58 DB_DATA 1
RANGE $8E58-$8E59 DB_DATA 1
RANGE $8E59-$8E5B DB_DATA 2
RANGE $8E5B-$8E5F DW_DATA 2
RANGE $8E5F-$8E61 DB_DATA 2
RANGE $8E61-$8E63 DB_DATA 2
RANGE $8E63-$8E67 DW_DATA 2
RANGE $8E67-$8E69 DB_DATA 2
RANGE $8E69-$8E6B DB_DATA 2
RANGE $8E6B-$8E6F DW_DATA 2
RANGE $8E6F-$8E71 DB_DATA 2
RANGE $8E71-$8E73 DB_DATA 2
RANGE $8E73-$8E77 DW_DATA 2
RANGE $8E77-$8E79 DB_DATA 2
RANGE $8E79-$8E7A DB_DATA 1
RANGE $8E7A-$8E7B DB_DATA 1
RANGE $8E7B-$8E7D DB_DATA 2
RANGE $8E7D-$8E81 DW_DATA 2
RANGE $8E81-$8E83 DB_DATA 2
RANGE $8E83-$8E85 DB_DATA 2
RANGE $8E85-$8E89 DW_DATA 2
RANGE $8E89-$8E8B DB_DATA 2
RANGE $8E8B-$8E8D DB_DATA 2
RANGE $8E8D-$8E91 DW_DATA 2
RANGE $8E91-$8E93 DB_DATA 2
RANGE $8E93-$8E95 DB_DATA 2
RANGE $8E95-$8E99 DW_DATA 2
RANGE $8E99-$8E9B DB_DATA 2
RANGE $8E9B-$8E9D DB_DATA 2
RANGE $8E9D-$8E9F DB_DATA 2
RANGE $8E9F-$8EA3 DW_DATA 2
RANGE $8EA3-$8EA5 DB_DATA 2
RANGE $8EA5-$8EA6 DB_DATA 1
RANGE $8EA6-$8EA7 DB_DATA 1
RANGE $8EA7-$8EA9 DB_DATA 2
RANGE $8EA9-$8EAD DW_DATA 2
RANGE $8EAD-$8EAF DB_DATA 2
RANGE $8EAF-$8EB1 DB_DATA 2
RANGE $8EB1-$8EB5 DW_DATA 2
RANGE $8EB5-$8EB7 DB_DATA 2
RANGE $8EB7-$8EB8 DB_DATA 1
RANGE $8EB8-$8EB9 DB_DATA 1
RANGE $8EB9-$8EBB DB_DATA 2
RANGE $8EBB-$8EBF DW_DATA 2
RANGE $8EBF-$8EC1 DB_DATA 2
RANGE $8EC1-$8EC3 DB_DATA 2
RANGE $8EC3-$8EC7 DW_DATA 2
RANGE $8EC7-$8EC9 DB_DATA 2
RANGE $8EC9-$8ECA DB_DATA 1
RANGE $8ECA-$8ECB DB_DATA 1
RANGE $8ECB-$8ECD DB_DATA 2
RANGE $8ECD-$8ED1 DW_DATA 2
RANGE $8ED1-$8ED3 DB_DATA 2
RANGE $8ED3-$8ED5 DB_DATA 2
RANGE $8ED5-$8ED9 DW_DATA 2
RANGE $8ED9-$8EDB DB_DATA 2
RANGE $8EDB-$8EDC DB_DATA 1
RANGE $8EDC-$8EDD DB_DATA 1
RANGE $8EDD-$8EDF DB_DATA 2
RANGE $8EDF-$8EE3 DW_DATA 2
RANGE $8EE3-$8EE5 DB_DATA 2
RANGE $8EE5-$8EE7 DB_DATA 2
RANGE $8EE7-$8EEB DW_DATA 2
RANGE $8EEB-$8EED DB_DATA 2
RANGE $8EED-$8EEE DB_DATA 1
RANGE $8EEE-$8EEF DB_DATA 1
RANGE $8EEF-$8EF1 DB_DATA 2
RANGE $8EF1-$8EF5 DW_DATA 2
RANGE $8EF5-$8EF7 DB_DATA 2
RANGE $8EF7-$8EF9 DB_DATA 2
RANGE $8EF9-$8EFD DW_DATA 2
RANGE $8EFD-$8EFF DB_DATA 2
RANGE $8EFF-$8F00 DB_DATA 1
RANGE $8F00-$8F01 DB_DATA 1
RANGE $8F01-$8F03 DB_DATA 2
RANGE $8F03-$8F07 DW_DATA 2
RANGE $8F07-$8F09 DB_DATA 2
RANGE $8F09-$8F0B DB_DATA 2
RANGE $8F0B-$8F0F DW_DATA 2
RANGE $8F0F-$8F11 DB_DATA 2
RANGE $8F11-$8F12 DB_DATA 1
RANGE $8F12-$8F13 DB_DATA 1
RANGE $8F13-$8F15 DB_DATA 2
RANGE $8F15-$8F19 DW_DATA 2
RANGE $8F19-$8F1B DB_DATA 2
RANGE $8F1B-$8F1D DB_DATA 2
RANGE $8F1D-$8F21 DW_DATA 2
RANGE $8F21-$8F23 DB_DATA 2
RANGE $8F23-$8F24 DB_DATA 1
RANGE $8F24-$8F25 DB_DATA 1
RANGE $8F25-$8F27 DB_DATA 2
RANGE $8F27-$8F2B DW_DATA 2
RANGE $8F2B-$8F2D DB_DATA 2
RANGE $8F2D-$8F2F DB_DATA 2
RANGE $8F2F-$8F33 DW_DATA 2
RANGE $8F33-$8F35 DB_DATA 2
RANGE $8F35-$8F36 DB_DATA 1
RANGE $8F36-$8F37 DB_DATA 1
RANGE $8F37-$8F39 DB_DATA 2
RANGE $8F39-$8F3D DW_DATA 2
RANGE $8F3D-$8F3F DB_DATA 2
RANGE $8F3F-$8F41 DB_DATA 2
RANGE $8F41-$8F45 DW_DATA 2
RANGE $8F45-$8F47 DB_DATA 2
RANGE $8F47-$8F48 DB_DATA 1
RANGE $8F48-$8F49 DB_DATA 1
RANGE $8F49-$8F4B DB_DATA 2
RANGE $8F4B-$8F4F DW_DATA 2
RANGE $8F4F-$8F51 DB_DATA 2
RANGE $8F51-$8F53 DB_DATA 2
RANGE $8F53-$8F57 DW_DATA 2
RANGE $8F57-$8F59 DB_DATA 2
RANGE $8F59-$8F5A DB_DATA 1
RANGE $8F5A-$8F5B DB_DATA 1
RANGE $8F5B-$8F5D DB_DATA 2
RANGE $8F5D-$8F61 DW_DATA 2
RANGE $8F61-$8F63 DB_DATA 2
RANGE $8F63-$8F65 DB_DATA 2
RANGE $8F65-$8F69 DW_DATA 2
RANGE $8F69-$8F6B DB_DATA 2
RANGE $8F6B-$8F6D DB_DATA 2
RANGE $8F6D-$8F71 DW_DATA 2
RANGE $8F71-$8F73 DB_DATA 2
RANGE $8F73-$8F75 DB_DATA 2
RANGE $8F75-$8F79 DW_DATA 2
RANGE $8F79-$8F7B DB_DATA 2
RANGE $8F7B-$8F7D DB_DATA 2
RANGE $8F7D-$8F81 DW_DATA 2
RANGE $8F81-$8F83 DB_DATA 2
RANGE $8F83-$8F85 DB_DATA 2
RANGE $8F85-$8F89 DW_DATA 2
RANGE $8F89-$8F8B DB_DATA 2
RANGE $8F8B-$8F8D DB_DATA 2
RANGE $8F8D-$8F91 DW_DATA 2
RANGE $8F91-$8F93 DB_DATA 2
RANGE $8F93-$8F95 DB_DATA 2
RANGE $8F95-$8F99 DW_DATA 2
RANGE $8F99-$8F9B DB_DATA 2
RANGE $8F9B-$8F9D DB_DATA 2
RANGE $8F9D-$8FA1 DW_DATA 2
RANGE $8FA1-$8FA3 DB_DATA 2
RANGE $8FA3-$8FA5 DB_DATA 2
RANGE $8FA5-$8FA9 DW_DATA 2
RANGE $8FA9-$8FAB DB_DATA 2
RANGE $8FAB-$8FAD DB_DATA 2
RANGE $8FAD-$8FB1 DW_DATA 2
RANGE $8FB1-$8FB3 DB_DATA 2
RANGE $8FB3-$8FB5 DB_DATA 2
RANGE $8FB5-$8FB9 DW_DATA 2
RANGE $8FB9-$8FBB DB_DATA 2
RANGE $8FBB-$8FBC DB_DATA 1
RANGE $8FBC-$8FBD DB_DATA 1
RANGE $8FBD-$8FBF DB_DATA 2
RANGE $8FBF-$8FC3 DW_DATA 2
RANGE $8FC3-$8FC5 DB_DATA 2
RANGE $8FC5-$8FC7 DB_DATA 2
RANGE $8FC7-$8FCB DW_DATA 2
RANGE $8FCB-$8FCD DB_DATA 2
RANGE $8FCD-$8FCF DB_DATA 2
RANGE $8FCF-$8FD3 DW_DATA 2
RANGE $8FD3-$8FD5 DB_DATA 2
RANGE $8FD5-$8FD6 DB_DATA 1
RANGE $8FD6-$8FD7 DB_DATA 1
RANGE $8FD7-$8FD9 DB_DATA 2
RANGE $8FD9-$8FDD DW_DATA 2
RANGE $8FDD-$8FDF DB_DATA 2
RANGE $8FDF-$8FE1 DB_DATA 2
RANGE $8FE1-$8FE5 DW_DATA 2
RANGE $8FE5-$8FE7 DB_DATA 2
RANGE $8FE7-$8FE9 DB_DATA 2
RANGE $8FE9-$8FED DW_DATA 2
RANGE $8FED-$8FEF DB_DATA 2
RANGE $8FEF-$8FF0 DB_DATA 1
RANGE $8FF0-$8FF1 DB_DATA 1
RANGE $8FF1-$8FF3 DB_DATA 2
RANGE $8FF3-$8FF7 DW_DATA 2
RANGE $8FF7-$8FF9 DB_DATA 2
RANGE $8FF9-$8FFB DB_DATA 2
RANGE $8FFB-$8FFF DW_DATA 2
RANGE $8FFF-$9001 DB_DATA 2
RANGE $9001-$9003 DB_DATA 2
RANGE $9003-$9007 DW_DATA 2
RANGE $9007-$9009 DB_DATA 2
RANGE $9009-$900B DB_DATA 2
RANGE $900B-$900F DW_DATA 2
RANGE $900F-$9011 DB_DATA 2
RANGE $9011-$9013 DB_DATA 2
RANGE $9013-$9017 DW_DATA 2
RANGE $9017-$9019 DB_DATA 2
RANGE $9019-$901B DB_DATA 2
RANGE $901B-$901F DW_DATA 2
RANGE $901F-$9021 DB_DATA 2
RANGE $9021-$9023 DB_DATA 2
RANGE $9023-$9027 DW_DATA 2
RANGE $9027-$9029 DB_DATA 2
RANGE $9029-$902B DB_DATA 2
RANGE $902B-$902F DW_DATA 2
RANGE $902F-$9031 DB_DATA 2
RANGE $9031-$9033 DB_DATA 2
RANGE $9033-$9037 DW_DATA 2
RANGE $9037-$9039 DB_DATA 2
RANGE $9039-$903B DB_DATA 2
RANGE $903B-$903F DW_DATA 2
RANGE $903F-$9041 DB_DATA 2
RANGE $9041-$9042 DB_DATA 1
RANGE $9042-$9043 DB_DATA 1
RANGE $9043-$9045 DB_DATA 2
RANGE $9045-$9049 DW_DATA 2
RANGE $9049-$904B DB_DATA 2
RANGE $904B-$904D DB_DATA 2
RANGE $904D-$9051 DW_DATA 2
RANGE $9051-$9053 DB_DATA 2
RANGE $9053-$9055 DB_DATA 2
RANGE $9055-$9059 DW_DATA 2
RANGE $9059-$905B DB_DATA 2
RANGE $905B-$905C DB_DATA 1
RANGE $905C-$905D DB_DATA 1
RANGE $905D-$905F DB_DATA 2
RANGE $905F-$9063 DW_DATA 2
RANGE $9063-$9065 DB_DATA 2
RANGE $9065-$9067 DB_DATA 2
RANGE $9067-$906B DW_DATA 2
RANGE $906B-$906D DB_DATA 2
RANGE $906D-$906F DB_DATA 2
RANGE $906F-$9073 DW_DATA 2
RANGE $9073-$9075 DB_DATA 2
RANGE $9075-$9076 DB_DATA 1
RANGE $9076-$9077 DB_DATA 1
RANGE $9077-$9079 DB_DATA 2
RANGE $9079-$907D DW_DATA 2
RANGE $907D-$907F DB_DATA 2
RANGE $907F-$9081 DB_DATA 2
RANGE $9081-$9085 DW_DATA 2
RANGE $9085-$9087 DB_DATA 2
RANGE $9087-$9089 DB_DATA 2
RANGE $9089-$908D DW_DATA 2
RANGE $908D-$908F DB_DATA 2
RANGE $908F-$9091 DB_DATA 2
RANGE $9091-$9095 DW_DATA 2
RANGE $9095-$9097 DB_DATA 2
RANGE $9097-$9098 DB_DATA 1
RANGE $9098-$9099 DB_DATA 1
RANGE $9099-$909B DB_DATA 2
RANGE $909B-$909F DW_DATA 2
RANGE $909F-$90A1 DB_DATA 2
RANGE $90A1-$90A3 DB_DATA 2
RANGE $90A3-$90A7 DW_DATA 2
RANGE $90A7-$90A9 DB_DATA 2
RANGE $90A9-$90AB DB_DATA 2
RANGE $90AB-$90AF DW_DATA 2
RANGE $90AF-$90B1 DB_DATA 2
RANGE $90B1-$90B3 DB_DATA 2
RANGE $90B3-$90B7 DW_DATA 2
RANGE $90B7-$90B9 DB_DATA 2
RANGE $90B9-$90BB DB_DATA 2
RANGE $90BB-$90BF DW_DATA 2
RANGE $90BF-$90C1 DB_DATA 2
RANGE $90C1-$90C3 DB_DATA 2
RANGE $90C3-$90C7 DW_DATA 2
RANGE $90C7-$90C9 DB_DATA 2
RANGE $90C9-$90CB DB_DATA 2
RANGE $90CB-$90CF DW_DATA 2
RANGE $90CF-$90D1 DB_DATA 2
RANGE $90D1-$90D3 DB_DATA 2
RANGE $90D3-$90D7 DW_DATA 2
RANGE $90D7-$90D9 DB_DATA 2
RANGE $90D9-$90DA DB_DATA 1
RANGE $90DA-$90DB DB_DATA 1
RANGE $90DB-$90DD DB_DATA 2
RANGE $90DD-$90E1 DW_DATA 2
RANGE $90E1-$90E3 DB_DATA 2
RANGE $90E3-$90E5 DB_DATA 2
RANGE $90E5-$90E9 DW_DATA 2
RANGE $90E9-$90EB DB_DATA 2
RANGE $90EB-$90ED DB_DATA 2
RANGE $90ED-$90F1 DW_DATA 2
RANGE $90F1-$90F3 DB_DATA 2
RANGE $90F3-$90F5 DB_DATA 2
RANGE $90F5-$90F9 DW_DATA 2
RANGE $90F9-$90FB DB_DATA 2
RANGE $90FB-$90FD DB_DATA 2
RANGE $90FD-$9101 DW_DATA 2
RANGE $9101-$9103 DB_DATA 2
RANGE $9103-$9105 DB_DATA 2
RANGE $9105-$9109 DW_DATA 2
RANGE $9109-$910B DB_DATA 2
RANGE $910B-$910D DB_DATA 2
RANGE $910D-$9111 DW_DATA 2
RANGE $9111-$9113 DB_DATA 2
RANGE $9113-$9115 DB_DATA 2
RANGE $9115-$9119 DW_DATA 2
RANGE $9119-$911B DB_DATA 2
RANGE $911B-$911C DB_DATA 1
RANGE $911C-$911D DB_DATA 1
RANGE $911D-$911F DB_DATA 2
RANGE $911F-$9123 DW_DATA 2
RANGE $9123-$9125 DB_DATA 2
RANGE $9125-$9127 DB_DATA 2
RANGE $9127-$912B DW_DATA 2
RANGE $912B-$912D DB_DATA 2
RANGE $912D-$912F DB_DATA 2
RANGE $912F-$9133 DW_DATA 2
RANGE $9133-$9135 DB_DATA 2
RANGE $9135-$9137 DB_DATA 2
RANGE $9137-$913B DW_DATA 2
RANGE $913B-$913D DB_DATA 2
RANGE $913D-$913F DB_DATA 2
RANGE $913F-$9143 DW_DATA 2
RANGE $9143-$9145 DB_DATA 2
RANGE $9145-$9147 DB_DATA 2
RANGE $9147-$914B DW_DATA 2
RANGE $914B-$914D DB_DATA 2
RANGE $914D-$914F DB_DATA 2
RANGE $914F-$9153 DW_DATA 2
RANGE $9153-$9155 DB_DATA 2
RANGE $9155-$9157 DB_DATA 2
RANGE $9157-$915B DW_DATA 2
RANGE $915B-$915D DB_DATA 2
RANGE $915D-$915E DB_DATA 1
RANGE $915E-$915F DB_DATA 1
RANGE $915F-$9161 DB_DATA 2
RANGE $9161-$9165 DW_DATA 2
RANGE $9165-$9167 DB_DATA 2
RANGE $9167-$9169 DB_DATA 2
RANGE $9169-$916D DW_DATA 2
RANGE $916D-$916F DB_DATA 2
RANGE $916F-$9171 DB_DATA 2
RANGE $9171-$9175 DW_DATA 2
RANGE $9175-$9177 DB_DATA 2
RANGE $9177-$9179 DB_DATA 2
RANGE $9179-$917D DW_DATA 2
RANGE $917D-$917F DB_DATA 2
RANGE $917F-$9181 DB_DATA 2
RANGE $9181-$9185 DW_DATA 2
RANGE $9185-$9187 DB_DATA 2
RANGE $9187-$9189 DB_DATA 2
RANGE $9189-$918D DW_DATA 2
RANGE $918D-$918F DB_DATA 2
RANGE $918F-$9191 DB_DATA 2
RANGE $9191-$9195 DW_DATA 2
RANGE $9195-$9197 DB_DATA 2
RANGE $9197-$9199 DB_DATA 2
RANGE $9199-$919D DW_DATA 2
RANGE $919D-$919F DB_DATA 2
RANGE $919F-$91A0 DB_DATA 1
RANGE $91A0-$91A1 DB_DATA 1
RANGE $91A1-$91A3 DB_DATA 2
RANGE $91A3-$91A7 DW_DATA 2
RANGE $91A7-$91A9 DB_DATA 2
RANGE $91A9-$91AB DB_DATA 2
RANGE $91AB-$91AF DW_DATA 2
RANGE $91AF-$91B1 DB_DATA 2
RANGE $91B1-$91B3 DB_DATA 2
RANGE $91B3-$91B7 DW_DATA 2
RANGE $91B7-$91B9 DB_DATA 2
RANGE $91B9-$91BB DB_DATA 2
RANGE $91BB-$91BF DW_DATA 2
RANGE $91BF-$91C1 DB_DATA 2
RANGE $91C1-$91C3 DB_DATA 2
RANGE $91C3-$91C7 DW_DATA 2
RANGE $91C7-$91C9 DB_DATA 2
RANGE $91C9-$91CB DB_DATA 2
RANGE $91CB-$91CF DW_DATA 2
RANGE $91CF-$91D1 DB_DATA 2
RANGE $91D1-$91D3 DB_DATA 2
RANGE $91D3-$91D7 DW_DATA 2
RANGE $91D7-$91D9 DB_DATA 2
RANGE $91D9-$91DB DB_DATA 2
RANGE $91DB-$91DF DW_DATA 2
RANGE $91DF-$91E1 DB_DATA 2
RANGE $91E1-$91E2 DB_DATA 1
RANGE $91E2-$91E3 DB_DATA 1
RANGE $91E3-$91E5 DB_DATA 2
RANGE $91E5-$91E9 DW_DATA 2
RANGE $91E9-$91EB DB_DATA 2
RANGE $91EB-$91ED DB_DATA 2
RANGE $91ED-$91F1 DW_DATA 2
RANGE $91F1-$91F3 DB_DATA 2
RANGE $91F3-$91F5 DB_DATA 2
RANGE $91F5-$91F9 DW_DATA 2
RANGE $91F9-$91FB DB_DATA 2
RANGE $91FB-$91FD DB_DATA 2
RANGE $91FD-$9201 DW_DATA 2
RANGE $9201-$9203 DB_DATA 2
RANGE $9203-$9204 DB_DATA 1
RANGE $9204-$9205 DB_DATA 1
RANGE $9205-$9207 DB_DATA 2
RANGE $9207-$920B DW_DATA 2
RANGE $920B-$920D DB_DATA 2
RANGE $920D-$920F DB_DATA 2
RANGE $920F-$9213 DW_DATA 2
RANGE $9213-$9215 DB_DATA 2
RANGE $9215-$9217 DB_DATA 2
RANGE $9217-$921B DW_DATA 2
RANGE $921B-$921D DB_DATA 2
RANGE $921D-$921E DB_DATA 1
RANGE $921E-$921F DB_DATA 1
RANGE $921F-$9221 DB_DATA 2
RANGE $9221-$9225 DW_DATA 2
RANGE $9225-$9227 DB_DATA 2
RANGE $9227-$9229 DB_DATA 2
RANGE $9229-$922D DW_DATA 2
RANGE $922D-$922F DB_DATA 2
RANGE $922F-$9231 DB_DATA 2
RANGE $9231-$9235 DW_DATA 2
RANGE $9235-$9237 DB_DATA 2
RANGE $9237-$9238 DB_DATA 1
RANGE $9238-$9239 DB_DATA 1
RANGE $9239-$923B DB_DATA 2
RANGE $923B-$923F DW_DATA 2
RANGE $923F-$9241 DB_DATA 2
RANGE $9241-$9243 DB_DATA 2
RANGE $9243-$9247 DW_DATA 2
RANGE $9247-$9249 DB_DATA 2
RANGE $9249-$924B DB_DATA 2
RANGE $924B-$924F DW_DATA 2
RANGE $924F-$9251 DB_DATA 2
RANGE $9251-$9252 DB_DATA 1
RANGE $9252-$9253 DB_DATA 1
RANGE $9253-$9255 DB_DATA 2
RANGE $9255-$9259 DW_DATA 2
RANGE $9259-$925B DB_DATA 2
RANGE $925B-$925D DB_DATA 2
RANGE $925D-$9261 DW_DATA 2
RANGE $9261-$9263 DB_DATA 2
RANGE $9263-$9265 DB_DATA 2
RANGE $9265-$9269 DW_DATA 2
RANGE $9269-$926B DB_DATA 2
RANGE $926B-$926C DB_DATA 1
RANGE $926C-$926D DB_DATA 1
RANGE $926D-$926F DB_DATA 2
RANGE $926F-$9273 DW_DATA 2
RANGE $9273-$9275 DB_DATA 2
RANGE $9275-$9277 DB_DATA 2
RANGE $9277-$927B DW_DATA 2
RANGE $927B-$927D DB_DATA 2
RANGE $927D-$927F DB_DATA 2
RANGE $927F-$9283 DW_DATA 2
RANGE $9283-$9285 DB_DATA 2
RANGE $9285-$9286 DB_DATA 1
RANGE $9286-$9287 DB_DATA 1
RANGE $9287-$9289 DB_DATA 2
RANGE $9289-$928D DW_DATA 2
RANGE $928D-$928F DB_DATA 2
RANGE $928F-$9291 DB_DATA 2
RANGE $9291-$9295 DW_DATA 2
RANGE $9295-$9297 DB_DATA 2
RANGE $9297-$9299 DB_DATA 2
RANGE $9299-$929D DW_DATA 2
RANGE $929D-$929F DB_DATA 2
RANGE $929F-$92A0 DB_DATA 1
RANGE $92A0-$92A1 DB_DATA 1
RANGE $92A1-$92A3 DB_DATA 2
RANGE $92A3-$92A7 DW_DATA 2
RANGE $92A7-$92A9 DB_DATA 2
RANGE $92A9-$92AB DB_DATA 2
RANGE $92AB-$92AF DW_DATA 2
RANGE $92AF-$92B1 DB_DATA 2
RANGE $92B1-$92B2 DB_DATA 1
RANGE $92B2-$92B3 DB_DATA 1
RANGE $92B3-$92B5 DB_DATA 2
RANGE $92B5-$92B9 DW_DATA 2
RANGE $92B9-$92BB DB_DATA 2
RANGE $92BB-$92BD DB_DATA 2
RANGE $92BD-$92C1 DW_DATA 2
RANGE $92C1-$92C3 DB_DATA 2
RANGE $92C3-$92C4 DB_DATA 1
RANGE $92C4-$92C5 DB_DATA 1
RANGE $92C5-$92C7 DB_DATA 2
RANGE $92C7-$92CB DW_DATA 2
RANGE $92CB-$92CD DB_DATA 2
RANGE $92CD-$92CF DB_DATA 2
RANGE $92CF-$92D3 DW_DATA 2
RANGE $92D3-$92D5 DB_DATA 2
RANGE $92D5-$92D6 DB_DATA 1
RANGE $92D6-$92D7 DB_DATA 1
RANGE $92D7-$92D9 DB_DATA 2
RANGE $92D9-$92DD DW_DATA 2
RANGE $92DD-$92DF DB_DATA 2
RANGE $92DF-$92E1 DB_DATA 2
RANGE $92E1-$92E5 DW_DATA 2
RANGE $92E5-$92E7 DB_DATA 2
RANGE $92E7-$92E8 DB_DATA 1
RANGE $92E8-$92E9 DB_DATA 1
RANGE $92E9-$92EB DB_DATA 2
RANGE $92EB-$92EF DW_DATA 2
RANGE $92EF-$92F1 DB_DATA 2
RANGE $92F1-$92F3 DB_DATA 2
RANGE $92F3-$92F7 DW_DATA 2
RANGE $92F7-$92F9 DB_DATA 2
RANGE $92F9-$92FA DB_DATA 1
RANGE $92FA-$92FB DB_DATA 1
RANGE $92FB-$92FD DB_DATA 2
RANGE $92FD-$9301 DW_DATA 2
RANGE $9301-$9303 DB_DATA 2
RANGE $9303-$9305 DB_DATA 2
RANGE $9305-$9309 DW_DATA 2
RANGE $9309-$930B DB_DATA 2
RANGE $930B-$930C DB_DATA 1
RANGE $930C-$930D DB_DATA 1
RANGE $930D-$930F DB_DATA 2
RANGE $930F-$9313 DW_DATA 2
RANGE $9313-$9315 DB_DATA 2
RANGE $9315-$9317 DB_DATA 2
RANGE $9317-$931B DW_DATA 2
RANGE $931B-$931D DB_DATA 2
RANGE $931D-$931E DB_DATA 1
RANGE $931E-$931F DB_DATA 1
RANGE $931F-$9321 DB_DATA 2
RANGE $9321-$9325 DW_DATA 2
RANGE $9325-$9327 DB_DATA 2
RANGE $9327-$9329 DB_DATA 2
RANGE $9329-$932D DW_DATA 2
RANGE $932D-$932F DB_DATA 2
RANGE $932F-$9330 DB_DATA 1
RANGE $9330-$9331 DB_DATA 1
RANGE $9331-$9333 DB_DATA 2
RANGE $9333-$9337 DW_DATA 2
RANGE $9337-$9339 DB_DATA 2
RANGE $9339-$933B DB_DATA 2
RANGE $933B-$933F DW_DATA 2
RANGE $933F-$9341 DB_DATA 2
RANGE $9341-$9342 DB_DATA 1
RANGE $9342-$9343 DB_DATA 1
RANGE $9343-$9345 DB_DATA 2
RANGE $9345-$9349 DW_DATA 2
RANGE $9349-$934B DB_DATA 2
RANGE $934B-$934D DB_DATA 2
RANGE $934D-$9351 DW_DATA 2
RANGE $9351-$9353 DB_DATA 2
RANGE $9353-$9354 DB_DATA 1
RANGE $9354-$9355 DB_DATA 1
RANGE $9355-$9357 DB_DATA 2
RANGE $9357-$935B DW_DATA 2
RANGE $935B-$935D DB_DATA 2
RANGE $935D-$935F DB_DATA 2
RANGE $935F-$9363 DW_DATA 2
RANGE $9363-$9365 DB_DATA 2
RANGE $9365-$9366 DB_DATA 1
RANGE $9366-$9367 DB_DATA 1
RANGE $9367-$9369 DB_DATA 2
RANGE $9369-$936D DW_DATA 2
RANGE $936D-$936F DB_DATA 2
RANGE $936F-$9371 DB_DATA 2
RANGE $9371-$9375 DW_DATA 2
RANGE $9375-$9377 DB_DATA 2
RANGE $9377-$9378 DB_DATA 1
RANGE $9378-$9379 DB_DATA 1
RANGE $9379-$937B DB_DATA 2
RANGE $937B-$937F DW_DATA 2
RANGE $937F-$9381 DB_DATA 2
RANGE $9381-$9383 DB_DATA 2
RANGE $9383-$9387 DW_DATA 2
RANGE $9387-$9389 DB_DATA 2
RANGE $9389-$938A DB_DATA 1
RANGE $938A-$938B DB_DATA 1
RANGE $938B-$938D DB_DATA 2
RANGE $938D-$9391 DW_DATA 2
RANGE $9391-$9393 DB_DATA 2
RANGE $9393-$9395 DB_DATA 2
RANGE $9395-$9399 DW_DATA 2
RANGE $9399-$939B DB_DATA 2
RANGE $939B-$939C DB_DATA 1
RANGE $939C-$939D DB_DATA 1
RANGE $939D-$939F DB_DATA 2
RANGE $939F-$93A3 DW_DATA 2
RANGE $93A3-$93A5 DB_DATA 2
RANGE $93A5-$93A7 DB_DATA 2
RANGE $93A7-$93AB DW_DATA 2
RANGE $93AB-$93AD DB_DATA 2
RANGE $93AD-$93AE DB_DATA 1
RANGE $93AE-$93AF DB_DATA 1
RANGE $93AF-$93B1 DB_DATA 2
RANGE $93B1-$93B5 DW_DATA 2
RANGE $93B5-$93B7 DB_DATA 2
RANGE $93B7-$93B9 DB_DATA 2
RANGE $93B9-$93BD DW_DATA 2
RANGE $93BD-$93BF DB_DATA 2
RANGE $93BF-$93C0 DB_DATA 1
RANGE $93C0-$93C1 DB_DATA 1
RANGE $93C1-$93C3 DB_DATA 2
RANGE $93C3-$93C7 DW_DATA 2
RANGE $93C7-$93C9 DB_DATA 2
RANGE $93C9-$93CB DB_DATA 2
RANGE $93CB-$93CF DW_DATA 2
RANGE $93CF-$93D1 DB_DATA 2
RANGE $93D1-$93D3 DB_DATA 2
RANGE $93D3-$93D7 DW_DATA 2
RANGE $93D7-$93D9 DB_DATA 2
RANGE $93D9-$93DB DB_DATA 2
RANGE $93DB-$93DF DW_DATA 2
RANGE $93DF-$93E1 DB_DATA 2
RANGE $93E1-$93E3 DB_DATA 2
RANGE $93E3-$93E7 DW_DATA 2
RANGE $93E7-$93E9 DB_DATA 2
RANGE $93E9-$93EA DB_DATA 1
RANGE $93EA-$93EB DB_DATA 1
RANGE $93EB-$93ED DB_DATA 2
RANGE $93ED-$93F1 DW_DATA 2
RANGE $93F1-$93F3 DB_DATA 2
RANGE $93F3-$93F5 DB_DATA 2
RANGE $93F5-$93F9 DW_DATA 2
RANGE $93F9-$93FB DB_DATA 2
RANGE $93FB-$93FD DB_DATA 2
RANGE $93FD-$9401 DW_DATA 2
RANGE $9401-$9403 DB_DATA 2
RANGE $9403-$9405 DB_DATA 2
RANGE $9405-$9409 DW_DATA 2
RANGE $9409-$940B DB_DATA 2
RANGE $940B-$940D DB_DATA 2
RANGE $940D-$9411 DW_DATA 2
RANGE $9411-$9413 DB_DATA 2
RANGE $9413-$9415 DB_DATA 2
RANGE $9415-$9419 DW_DATA 2
RANGE $9419-$941B DB_DATA 2
RANGE $941B-$941D DB_DATA 2
RANGE $941D-$9421 DW_DATA 2
RANGE $9421-$9423 DB_DATA 2
RANGE $9423-$9424 DB_DATA 1
RANGE $9424-$9425 DB_DATA 1
RANGE $9425-$9427 DB_DATA 2
RANGE $9427-$942B DW_DATA 2
RANGE $942B-$942D DB_DATA 2
RANGE $942D-$942F DB_DATA 2
RANGE $942F-$9433 DW_DATA 2
RANGE $9433-$9435 DB_DATA 2
RANGE $9435-$9437 DB_DATA 2
RANGE $9437-$943B DW_DATA 2
RANGE $943B-$943D DB_DATA 2
RANGE $943D-$943F DB_DATA 2
RANGE $943F-$9443 DW_DATA 2
RANGE $9443-$9445 DB_DATA 2
RANGE $9445-$9447 DB_DATA 2
RANGE $9447-$944B DW_DATA 2
RANGE $944B-$944D DB_DATA 2
RANGE $944D-$944F DB_DATA 2
RANGE $944F-$9453 DW_DATA 2
RANGE $9453-$9455 DB_DATA 2
RANGE $9455-$9457 DB_DATA 2
RANGE $9457-$945B DW_DATA 2
RANGE $945B-$945D DB_DATA 2
RANGE $945D-$945E DB_DATA 1
RANGE $945E-$945F DB_DATA 1
RANGE $945F-$9461 DB_DATA 2
RANGE $9461-$9465 DW_DATA 2
RANGE $9465-$9467 DB_DATA 2
RANGE $9467-$9469 DB_DATA 2
RANGE $9469-$946D DW_DATA 2
RANGE $946D-$946F DB_DATA 2
RANGE $946F-$9470 DB_DATA 1
RANGE $9470-$9471 DB_DATA 1
RANGE $9471-$9473 DB_DATA 2
RANGE $9473-$9477 DW_DATA 2
RANGE $9477-$9479 DB_DATA 2
RANGE $9479-$947B DB_DATA 2
RANGE $947B-$947F DW_DATA 2
RANGE $947F-$9481 DB_DATA 2
RANGE $9481-$9483 DB_DATA 2
RANGE $9483-$9487 DW_DATA 2
RANGE $9487-$9489 DB_DATA 2
RANGE $9489-$948A DB_DATA 1
RANGE $948A-$948B DB_DATA 1
RANGE $948B-$948D DB_DATA 2
RANGE $948D-$9491 DW_DATA 2
RANGE $9491-$9493 DB_DATA 2
RANGE $9493-$9495 DB_DATA 2
RANGE $9495-$9499 DW_DATA 2
RANGE $9499-$949B DB_DATA 2
RANGE $949B-$949D DB_DATA 2
RANGE $949D-$94A1 DW_DATA 2
RANGE $94A1-$94A3 DB_DATA 2
RANGE $94A3-$94A5 DB_DATA 2
RANGE $94A5-$94A9 DW_DATA 2
RANGE $94A9-$94AB DB_DATA 2
RANGE $94AB-$94AD DB_DATA 2
RANGE $94AD-$94B1 DW_DATA 2
RANGE $94B1-$94B3 DB_DATA 2
RANGE $94B3-$94B5 DB_DATA 2
RANGE $94B5-$94B9 DW_DATA 2
RANGE $94B9-$94BB DB_DATA 2
RANGE $94BB-$94BD DB_DATA 2
RANGE $94BD-$94C1 DW_DATA 2
RANGE $94C1-$94C3 DB_DATA 2
RANGE $94C3-$94C4 DB_DATA 1
RANGE $94C4-$94C5 DB_DATA 1
RANGE $94C5-$94C7 DB_DATA 2
RANGE $94C7-$94CB DW_DATA 2
RANGE $94CB-$94CD DB_DATA 2
RANGE $94CD-$94CF DB_DATA 2
RANGE $94CF-$94D3 DW_DATA 2
RANGE $94D3-$94D5 DB_DATA 2
RANGE $94D5-$94D6 DB_DATA 1
RANGE $94D6-$94D7 DB_DATA 1
RANGE $94D7-$94D9 DB_DATA 2
RANGE $94D9-$94DD DW_DATA 2
RANGE $94DD-$94DF DB_DATA 2
RANGE $94DF-$94E1 DB_DATA 2
RANGE $94E1-$94E5 DW_DATA 2
RANGE $94E5-$94E7 DB_DATA 2
RANGE $94E7-$94E9 DB_DATA 2
RANGE $94E9-$94ED DW_DATA 2
RANGE $94ED-$94EF DB_DATA 2
RANGE $94EF-$94F1 DB_DATA 2
RANGE $94F1-$94F5 DW_DATA 2
RANGE $94F5-$94F7 DB_DATA 2
RANGE $94F7-$94F9 DB_DATA 2
RANGE $94F9-$94FD DW_DATA 2
RANGE $94FD-$94FF DB_DATA 2
RANGE $94FF-$9500 DB_DATA 1
RANGE $9500-$9501 DB_DATA 1
RANGE $9501-$9503 DB_DATA 2
RANGE $9503-$9507 DW_DATA 2
RANGE $9507-$9509 DB_DATA 2
RANGE $9509-$950B DB_DATA 2
RANGE $950B-$950F DW_DATA 2
RANGE $950F-$9511 DB_DATA 2
RANGE $9511-$9513 DB_DATA 2
RANGE $9513-$9517 DW_DATA 2
RANGE $9517-$9519 DB_DATA 2
RANGE $9519-$951B DB_DATA 2
RANGE $951B-$951F DW_DATA 2
RANGE $951F-$9521 DB_DATA 2
RANGE $9521-$9523 DB_DATA 2
RANGE $9523-$9527 DW_DATA 2
RANGE $9527-$9529 DB_DATA 2
RANGE $9529-$952B DB_DATA 2
RANGE $952B-$952F DW_DATA 2
RANGE $952F-$9531 DB_DATA 2
RANGE $9531-$9532 DB_DATA 1
RANGE $9532-$9533 DB_DATA 1
RANGE $9533-$9535 DB_DATA 2
RANGE $9535-$9539 DW_DATA 2
RANGE $9539-$953B DB_DATA 2
RANGE $953B-$953D DB_DATA 2
RANGE $953D-$9541 DW_DATA 2
RANGE $9541-$9543 DB_DATA 2
RANGE $9543-$9545 DB_DATA 2
RANGE $9545-$9549 DW_DATA 2
RANGE $9549-$954B DB_DATA 2
RANGE $954B-$954D DB_DATA 2
RANGE $954D-$9551 DW_DATA 2
RANGE $9551-$9553 DB_DATA 2
RANGE $9553-$9555 DB_DATA 2
RANGE $9555-$9559 DW_DATA 2
RANGE $9559-$955B DB_DATA 2
RANGE $955B-$955C DB_DATA 1
RANGE $955C-$955D DB_DATA 1
RANGE $955D-$955F DB_DATA 2
RANGE $955F-$9563 DW_DATA 2
RANGE $9563-$9565 DB_DATA 2
RANGE $9565-$9567 DB_DATA 2
RANGE $9567-$956B DW_DATA 2
RANGE $956B-$956D DB_DATA 2
RANGE $956D-$956F DB_DATA 2
RANGE $956F-$9573 DW_DATA 2
RANGE $9573-$9575 DB_DATA 2
RANGE $9575-$9576 DB_DATA 1
RANGE $9576-$9577 DB_DATA 1
RANGE $9577-$9579 DB_DATA 2
RANGE $9579-$957D DW_DATA 2
RANGE $957D-$957F DB_DATA 2
RANGE $957F-$9581 DB_DATA 2
RANGE $9581-$9585 DW_DATA 2
RANGE $9585-$9587 DB_DATA 2
RANGE $9587-$9588 DB_DATA 1
RANGE $9588-$9589 DB_DATA 1
RANGE $9589-$958B DB_DATA 2
RANGE $958B-$958F DW_DATA 2
RANGE $958F-$9591 DB_DATA 2
RANGE $9591-$9593 DB_DATA 2
RANGE $9593-$9597 DW_DATA 2
RANGE $9597-$9599 DB_DATA 2
RANGE $9599-$959A DB_DATA 1
RANGE $959A-$959B DB_DATA 1
RANGE $959B-$959D DB_DATA 2
RANGE $959D-$95A1 DW_DATA 2
RANGE $95A1-$95A3 DB_DATA 2
RANGE $95A3-$95A5 DB_DATA 2
RANGE $95A5-$95A9 DW_DATA 2
RANGE $95A9-$95AB DB_DATA 2
RANGE $95AB-$95AC DB_DATA 1
RANGE $95AC-$95AD DB_DATA 1
RANGE $95AD-$95AF DB_DATA 2
RANGE $95AF-$95B3 DW_DATA 2
RANGE $95B3-$95B5 DB_DATA 2
RANGE $95B5-$95B7 DB_DATA 2
RANGE $95B7-$95BB DW_DATA 2
RANGE $95BB-$95BD DB_DATA 2
RANGE $95BD-$95BF DB_DATA 2
RANGE $95BF-$95C3 DW_DATA 2
RANGE $95C3-$95C5 DB_DATA 2
RANGE $95C5-$95C6 DB_DATA 1
RANGE $95C6-$95C7 DB_DATA 1
RANGE $95C7-$95C9 DB_DATA 2
RANGE $95C9-$95CD DW_DATA 2
RANGE $95CD-$95CF DB_DATA 2
RANGE $95CF-$95D1 DB_DATA 2
RANGE $95D1-$95D5 DW_DATA 2
RANGE $95D5-$95D7 DB_DATA 2
RANGE $95D7-$95D9 DB_DATA 2
RANGE $95D9-$95DD DW_DATA 2
RANGE $95DD-$95DF DB_DATA 2
RANGE $95DF-$95E1 DB_DATA 2
RANGE $95E1-$95E5 DW_DATA 2
RANGE $95E5-$95E7 DB_DATA 2
RANGE $95E7-$95E9 DB_DATA 2
RANGE $95E9-$95ED DW_DATA 2
RANGE $95ED-$95EF DB_DATA 2
RANGE $95EF-$95F1 DB_DATA 2
RANGE $95F1-$95F5 DW_DATA 2
RANGE $95F5-$95F7 DB_DATA 2
RANGE $95F7-$95F9 DB_DATA 2
RANGE $95F9-$95FD DW_DATA 2
RANGE $95FD-$95FF DB_DATA 2
RANGE $95FF-$9601 DB_DATA 2
RANGE $9601-$9605 DW_DATA 2
RANGE $9605-$9607 DB_DATA 2
RANGE $9607-$9609 DB_DATA 2
RANGE $9609-$960D DW_DATA 2
RANGE $960D-$960F DB_DATA 2
RANGE $960F-$9611 DB_DATA 2
RANGE $9611-$9615 DW_DATA 2
RANGE $9615-$9617 DB_DATA 2
RANGE $9617-$9619 DB_DATA 2
RANGE $9619-$961D DW_DATA 2
RANGE $961D-$961F DB_DATA 2
RANGE $961F-$9623 DW_DATA 2
RANGE $9623-$9627 DW_DATA 2
RANGE $9627-$962B DW_DATA 2
RANGE $962B-$962F DW_DATA 2
RANGE $962F-$9631 DW_DATA 1
RANGE $9631-$9635 DW_DATA 2
RANGE $9635-$9639 DW_DATA 2
RANGE $9639-$963D DW_DATA 2
RANGE $963D-$9641 DW_DATA 2
RANGE $9641-$9643 DW_DATA 1
RANGE $9643-$9647 DW_DATA 2
RANGE $9647-$964B DW_DATA 2
RANGE $964B-$964F DW_DATA 2
RANGE $964F-$9653 DW_DATA 2
RANGE $9653-$9655 DW_DATA 1
RANGE $9655-$9659 DW_DATA 2
RANGE $9659-$965D DW_DATA 2
RANGE $965D-$9661 DW_DATA 2
RANGE $9661-$9665 DW_DATA 2
RANGE $9665-$9667 DW_DATA 1
RANGE $9667-$966B DW_DATA 2
RANGE $966B-$966F DW_DATA 2
RANGE $966F-$9673 DW_DATA 2
RANGE $9673-$9677 DW_DATA 2
RANGE $9677-$9679 DW_DATA 1
RANGE $9679-$967D DW_DATA 2
RANGE $967D-$9681 DW_DATA 2
RANGE $9681-$9685 DW_DATA 2
RANGE $9685-$9689 DW_DATA 2
RANGE $9689-$968B DW_DATA 1
RANGE $968B-$968F DW_DATA 2
RANGE $968F-$9693 DW_DATA 2
RANGE $9693-$9697 DW_DATA 2
RANGE $9697-$969B DW_DATA 2
RANGE $969B-$969D DW_DATA 1
RANGE $969D-$96A1 DW_DATA 2
RANGE $96A1-$96A5 DW_DATA 2
RANGE $96A5-$96A9 DW_DATA 2
RANGE $96A9-$96AD DW_DATA 2
RANGE $96AD-$96AF DW_DATA 1
RANGE $96AF-$96B3 DW_DATA 2
RANGE $96B3-$96B7 DW_DATA 2
RANGE $96B7-$96BB DW_DATA 2
RANGE $96BB-$96BF DW_DATA 2
RANGE $96BF-$96C3 DW_DATA 2
RANGE $96C3-$96C7 DW_DATA 2
RANGE $96C7-$96CB DW_DATA 2
RANGE $96CB-$96CF DW_DATA 2
RANGE $96CF-$96D3 DW_DATA 2
RANGE $96D3-$96D7 DW_DATA 2
RANGE $96D7-$96DB DW_DATA 2
RANGE $96DB-$96DF DW_DATA 2
RANGE $96DF-$96E3 DW_DATA 2
RANGE $96E3-$96E7 DW_DATA 2
RANGE $96E7-$96EB DW_DATA 2
RANGE $96EB-$96EF DW_DATA 2
RANGE $96EF-$96F3 DW_DATA 2
RANGE $96F3-$96F7 DW_DATA 2
RANGE $96F7-$96FB DW_DATA 2
RANGE $96FB-$96FF DW_DATA 2
RANGE $96FF-$9703 DW_DATA 2
RANGE $9703-$9707 DW_DATA 2
RANGE $9707-$970B DW_DATA 2
RANGE $970B-$970F DW_DATA 2
RANGE $970F-$9713 DW_DATA 2
RANGE $9713-$9717 DW_DATA 2
RANGE $9717-$971B DW_DATA 2
RANGE $971B-$971F DW_DATA 2
RANGE $971F-$9723 DW_DATA 2
RANGE $9723-$9727 DW_DATA 2
RANGE $9727-$9729 DW_DATA 1
RANGE $9729-$972D DW_DATA 2
RANGE $972D-$9731 DW_DATA 2
RANGE $9731-$9735 DW_DATA 2
RANGE $9735-$9739 DW_DATA 2
RANGE $9739-$973B DW_DATA 1
RANGE $973B-$973F DW_DATA 2
RANGE $973F-$9743 DW_DATA 2
RANGE $9743-$9747 DW_DATA 2
RANGE $9747-$974B DW_DATA 2
RANGE $974B-$974D DW_DATA 1
RANGE $974D-$9751 DW_DATA 2
RANGE $9751-$9755 DW_DATA 2
RANGE $9755-$9759 DW_DATA 2
RANGE $9759-$975D DW_DATA 2
RANGE $975D-$975F DW_DATA 1
RANGE $975F-$9763 DW_DATA 2
RANGE $9763-$9767 DW_DATA 2
RANGE $9767-$976B DW_DATA 2
RANGE $976B-$976F DW_DATA 2
RANGE $976F-$9771 DW_DATA 1
RANGE $9771-$9775 DW_DATA 2
RANGE $9775-$9779 DW_DATA 2
RANGE $9779-$977D DW_DATA 2
RANGE $977D-$9781 DW_DATA 2
RANGE $9781-$9783 DW_DATA 1
RANGE $9783-$9787 DW_DATA 2
RANGE $9787-$978B DW_DATA 2
RANGE $978B-$978D DW_DATA 1
RANGE $978D-$9791 DW_DATA 2
RANGE $9791-$9795 DW_DATA 2
RANGE $9795-$9799 DW_DATA 2
RANGE $9799-$979D DW_DATA 2
RANGE $979D-$979F DW_DATA 1
RANGE $979F-$97A3 DW_DATA 2
RANGE $97A3-$97A7 DW_DATA 2
RANGE $97A7-$97AB DW_DATA 2
RANGE $97AB-$97AF DW_DATA 2
RANGE $97AF-$97B1 DW_DATA 1
RANGE $97B1-$97B5 DW_DATA 2
RANGE $97B5-$97B9 DW_DATA 2
RANGE $97B9-$97BD DW_DATA 2
RANGE $97BD-$97C1 DW_DATA 2
RANGE $97C1-$97C3 DW_DATA 1
RANGE $97C3-$97C7 DW_DATA 2
RANGE $97C7-$97CB DW_DATA 2
RANGE $97CB-$97CF DW_DATA 2
RANGE $97CF-$97D3 DW_DATA 2
RANGE $97D3-$97D7 DW_DATA 2
RANGE $97D7-$97DB DW_DATA 2
RANGE $97DB-$97DD DW_DATA 1
RANGE $97DD-$97E1 DW_DATA 2
RANGE $97E1-$97E5 DW_DATA 2
RANGE $97E5-$97E9 DW_DATA 2
RANGE $97E9-$97ED DW_DATA 2
RANGE $97ED-$97EF DW_DATA 1
RANGE $97EF-$97F3 DW_DATA 2
RANGE $97F3-$97F7 DW_DATA 2
RANGE $97F7-$97FB DW_DATA 2
RANGE $97FB-$97FF DW_DATA 2
RANGE $97FF-$9801 DW_DATA 1
RANGE $9801-$9805 DW_DATA 2
RANGE $9805-$9809 DW_DATA 2
RANGE $9809-$980D DW_DATA 2
RANGE $980D-$9811 DW_DATA 2
RANGE $9811-$9815 DW_DATA 2
RANGE $9815-$9819 DW_DATA 2
RANGE $9819-$981D DW_DATA 2
RANGE $981D-$9821 DW_DATA 2
RANGE $9821-$9823 DW_DATA 1
RANGE $9823-$9827 DW_DATA 2
RANGE $9827-$982B DW_DATA 2
RANGE $982B-$982F DW_DATA 2
RANGE $982F-$9833 DW_DATA 2
RANGE $9833-$9835 DW_DATA 1
RANGE $9835-$9839 DW_DATA 2
RANGE $9839-$983D DW_DATA 2
RANGE $983D-$9841 DW_DATA 2
RANGE $9841-$9845 DW_DATA 2
RANGE $9845-$9849 DW_DATA 2
RANGE $9849-$984D DW_DATA 2
RANGE $984D-$9851 DW_DATA 2
RANGE $9851-$9855 DW_DATA 2
RANGE $9855-$9859 DW_DATA 2
RANGE $9859-$985D DW_DATA 2
RANGE $985D-$9861 DW_DATA 2
RANGE $9861-$9865 DW_DATA 2
RANGE $9865-$9869 DW_DATA 2
RANGE $9869-$986D DW_DATA 2
RANGE $986D-$9871 DW_DATA 2
RANGE $9871-$9875 DW_DATA 2
RANGE $9875-$9879 DW_DATA 2
RANGE $9879-$987D DW_DATA 2
RANGE $987D-$9881 DW_DATA 2
RANGE $9881-$9885 DW_DATA 2
RANGE $9885-$9887 DW_DATA 1
RANGE $9887-$988B DW_DATA 2
RANGE $988B-$988F DW_DATA 2
RANGE $988F-$9893 DW_DATA 2
RANGE $9893-$9897 DW_DATA 2
RANGE $9897-$9899 DW_DATA 1
RANGE $9899-$989D DW_DATA 2
RANGE $989D-$98A1 DW_DATA 2
RANGE $98A1-$98A5 DW_DATA 2
RANGE $98A5-$98A9 DW_DATA 2
RANGE $98A9-$98AD DW_DATA 2
RANGE $98AD-$98B1 DW_DATA 2
RANGE $98B1-$98B5 DW_DATA 2
RANGE $98B5-$98B9 DW_DATA 2
RANGE $98B9-$98BD DW_DATA 2
RANGE $98BD-$98C1 DW_DATA 2
RANGE $98C1-$98C5 DW_DATA 2
RANGE $98C5-$98C9 DW_DATA 2
RANGE $98C9-$98CD DW_DATA 2
RANGE $98CD-$98D1 DW_DATA 2
RANGE $98D1-$98D5 DW_DATA 2
RANGE $98D5-$98D9 DW_DATA 2
RANGE $98D9-$98DD DW_DATA 2
RANGE $98DD-$98E1 DW_DATA 2
RANGE $98E1-$98E5 DW_DATA 2
RANGE $98E5-$98E9 DW_DATA 2
RANGE $98E9-$98EB DW_DATA 1
RANGE $98EB-$98EF DW_DATA 2
RANGE $98EF-$98F3 DW_DATA 2
RANGE $98F3-$98F7 DW_DATA 2
RANGE $98F7-$98FB DW_DATA 2
RANGE $98FB-$98FF DW_DATA 2
RANGE $98FF-$9903 DW_DATA 2
RANGE $9903-$9905 DW_DATA 1
RANGE $9905-$9909 DW_DATA 2
RANGE $9909-$990D DW_DATA 2
RANGE $990D-$9911 DW_DATA 2
RANGE $9911-$9915 DW_DATA 2
RANGE $9915-$9919 DW_DATA 2
RANGE $9919-$991D DW_DATA 2
RANGE $991D-$9921 DW_DATA 2
RANGE $9921-$9925 DW_DATA 2
RANGE $9925-$9929 DW_DATA 2
RANGE $9929-$992D DW_DATA 2
RANGE $992D-$9931 DW_DATA 2
RANGE $9931-$9935 DW_DATA 2
RANGE $9935-$9939 DW_DATA 2
RANGE $9939-$993D DW_DATA 2
RANGE $993D-$9941 DW_DATA 2
RANGE $9941-$9945 DW_DATA 2
RANGE $9945-$9949 DW_DATA 2
RANGE $9949-$994D DW_DATA 2
RANGE $994D-$9951 DW_DATA 2
RANGE $9951-$9955 DW_DATA 2
RANGE $9955-$9959 DW_DATA 2
RANGE $9959-$995D DW_DATA 2
RANGE $995D-$995F DW_DATA 1
RANGE $995F-$9963 DW_DATA 2
RANGE $9963-$9965 DW_DATA 1
RANGE $9965-$9969 DW_DATA 2
RANGE $9969-$996D DW_DATA 2
RANGE $996D-$9971 DW_DATA 2
RANGE $9971-$9975 DW_DATA 2
RANGE $9975-$9979 DW_DATA 2
RANGE $9979-$997D DW_DATA 2
RANGE $997D-$9981 DW_DATA 2
RANGE $9981-$9985 DW_DATA 2
RANGE $9985-$9989 DW_DATA 2
RANGE $9989-$998D DW_DATA 2
RANGE $998D-$9991 DW_DATA 2
RANGE $9991-$9995 DW_DATA 2
RANGE $9995-$9999 DW_DATA 2
RANGE $9999-$999D DW_DATA 2
RANGE $999D-$99A1 DW_DATA 2
RANGE $99A1-$99A5 DW_DATA 2
RANGE $99A5-$99A9 DW_DATA 2
RANGE $99A9-$99AD DW_DATA 2
RANGE $99AD-$99B1 DW_DATA 2
RANGE $99B1-$99B5 DW_DATA 2
RANGE $99B5-$99B9 DW_DATA 2
RANGE $99B9-$99BD DW_DATA 2
RANGE $99BD-$99BF DW_DATA 1
RANGE $99BF-$99C3 DW_DATA 2
RANGE $99C3-$99C7 DW_DATA 2
RANGE $99C7-$99C9 DW_DATA 1
RANGE $99C9-$99CD DW_DATA 2
RANGE $99CD-$99D1 DW_DATA 2
RANGE $99D1-$99D5 DW_DATA 2
RANGE $99D5-$99D9 DW_DATA 2
RANGE $99D9-$99DD DW_DATA 2
RANGE $99DD-$99E1 DW_DATA 2
RANGE $99E1-$99E5 DW_DATA 2
RANGE $99E5-$99E9 DW_DATA 2
RANGE $99E9-$99ED DW_DATA 2
RANGE $99ED-$99F1 DW_DATA 2
RANGE $99F1-$99F5 DW_DATA 2
RANGE $99F5-$99F9 DW_DATA 2
RANGE $99F9-$99FD DW_DATA 2
RANGE $99FD-$9A01 DW_DATA 2
RANGE $9A01-$9A05 DW_DATA 2
RANGE $9A05-$9A09 DW_DATA 2
RANGE $9A09-$9A0D DW_DATA 2
RANGE $9A0D-$9A11 DW_DATA 2
RANGE $9A11-$9A15 DW_DATA 2
RANGE $9A15-$9A19 DW_DATA 2
RANGE $9A19-$9A1D DW_DATA 2
RANGE $9A1D-$9A21 DW_DATA 2
RANGE $9A21-$9A23 DW_DATA 1
RANGE $9A23-$9A27 DW_DATA 2
RANGE $9A27-$9A2B DW_DATA 2
RANGE $9A2B-$9A2F DW_DATA 2
RANGE $9A2F-$9A33 DW_DATA 2
RANGE $9A33-$9A37 DW_DATA 2
RANGE $9A37-$9A3B DW_DATA 2
RANGE $9A3B-$9A3F DW_DATA 2
RANGE $9A3F-$9A43 DW_DATA 2
RANGE $9A43-$9A47 DW_DATA 2
RANGE $9A47-$9A4B DW_DATA 2
RANGE $9A4B-$9A4F DW_DATA 2
RANGE $9A4F-$9A53 DW_DATA 2
RANGE $9A53-$9A57 DW_DATA 2
RANGE $9A57-$9A5B DW_DATA 2
RANGE $9A5B-$9A5F DW_DATA 2
RANGE $9A5F-$9A63 DW_DATA 2
RANGE $9A63-$9A67 DW_DATA 2
RANGE $9A67-$9A6B DW_DATA 2
RANGE $9A6B-$9A6F DW_DATA 2
RANGE $9A6F-$9A73 DW_DATA 2
RANGE $9A73-$9A77 DW_DATA 2
RANGE $9A77-$9A7B DW_DATA 2
RANGE $9A7B-$9A7F DW_DATA 2
RANGE $9A7F-$9A83 DW_DATA 2
RANGE $9A83-$9A87 DW_DATA 2
RANGE $9A87-$9A8B DW_DATA 2
RANGE $9A8B-$9A8F DW_DATA 2
RANGE $9A8F-$9A93 DW_DATA 2
RANGE $9A93-$9A97 DW_DATA 2
RANGE $9A97-$9A9B DW_DATA 2
RANGE $9A9B-$9A9F DW_DATA 2
RANGE $9A9F-$9AA3 DW_DATA 2
RANGE $9AA3-$9AA7 DW_DATA 2
RANGE $9AA7-$9AAB DW_DATA 2
RANGE $9AAB-$9AAF DW_DATA 2
RANGE $9AAF-$9AB3 DW_DATA 2
RANGE $9AB3-$9AB7 DW_DATA 2
RANGE $9AB7-$9ABB DW_DATA 2
RANGE $9ABB-$9ABF DW_DATA 2
RANGE $9ABF-$9AC3 DW_DATA 2
RANGE $9AC3-$9AC7 DW_DATA 2
RANGE $9AC7-$9AC9 DW_DATA 1
RANGE $9AC9-$9ACD DW_DATA 2
RANGE $9ACD-$9AD1 DW_DATA 2
RANGE $9AD1-$9AD5 DW_DATA 2
RANGE $9AD5-$9AD9 DW_DATA 2
RANGE $9AD9-$9ADD DW_DATA 2
RANGE $9ADD-$9AE1 DW_DATA 2
RANGE $9AE1-$9AE5 DW_DATA 2
RANGE $9AE5-$9AE9 DW_DATA 2
RANGE $9AE9-$9AED DW_DATA 2
RANGE $9AED-$9AF1 DW_DATA 2
RANGE $9AF1-$9AF5 DW_DATA 2
RANGE $9AF5-$9AF9 DW_DATA 2
RANGE $9AF9-$9AFD DW_DATA 2
RANGE $9AFD-$9B01 DW_DATA 2
RANGE $9B01-$9B05 DW_DATA 2
RANGE $9B05-$9B09 DW_DATA 2
RANGE $9B09-$9B0D DW_DATA 2
RANGE $9B0D-$9B11 DW_DATA 2
RANGE $9B11-$9B15 DW_DATA 2
RANGE $9B15-$9B19 DW_DATA 2
RANGE $9B19-$9B1B DW_DATA 1
RANGE $9B1B-$9B1F DW_DATA 2
RANGE $9B1F-$9B23 DW_DATA 2
RANGE $9B23-$9B27 DW_DATA 2
RANGE $9B27-$9B2B DW_DATA 2
RANGE $9B2B-$9B2F DW_DATA 2
RANGE $9B2F-$9B33 DW_DATA 2
RANGE $9B33-$9B37 DW_DATA 2
RANGE $9B37-$9B3B DW_DATA 2
RANGE $9B3B-$9B3F DW_DATA 2
RANGE $9B3F-$9B43 DW_DATA 2
RANGE $9B43-$9B47 DW_DATA 2
RANGE $9B47-$9B4B DW_DATA 2
RANGE $9B4B-$9B4F DW_DATA 2
RANGE $9B4F-$9B53 DW_DATA 2
RANGE $9B53-$9B57 DW_DATA 2
RANGE $9B57-$9B5B DW_DATA 2
RANGE $9B5B-$9B5F DW_DATA 2
RANGE $9B5F-$9B63 DW_DATA 2
RANGE $9B63-$9B67 DW_DATA 2
RANGE $9B67-$9B6B DW_DATA 2
RANGE $9B6B-$9B6F DW_DATA 2
RANGE $9B6F-$9B73 DW_DATA 2
RANGE $9B73-$9B77 DW_DATA 2
RANGE $9B77-$9B7B DW_DATA 2
RANGE $9B7B-$9B7D DW_DATA 1
RANGE $9B7D-$9B81 DW_DATA 2
RANGE $9B81-$9B85 DW_DATA 2
RANGE $9B85-$9B89 DW_DATA 2
RANGE $9B89-$9B8D DW_DATA 2
RANGE $9B8D-$9B91 DW_DATA 2
RANGE $9B91-$9B93 DW_DATA 1
RANGE $9B93-$9B97 DW_DATA 2
RANGE $9B97-$9B9B DW_DATA 2
RANGE $9B9B-$9B9F DW_DATA 2
RANGE $9B9F-$9BA3 DW_DATA 2
RANGE $9BA3-$9BA7 DW_DATA 2
RANGE $9BA7-$9BAB DW_DATA 2
RANGE $9BAB-$9BAF DW_DATA 2
RANGE $9BAF-$9BB3 DW_DATA 2
RANGE $9BB3-$9BB7 DW_DATA 2
RANGE $9BB7-$9BBB DW_DATA 2
RANGE $9BBB-$9BBF DW_DATA 2
RANGE $9BBF-$9BC3 DW_DATA 2
RANGE $9BC3-$9BC7 DW_DATA 2
RANGE $9BC7-$9BCB DW_DATA 2
RANGE $9BCB-$9BCF DW_DATA 2
RANGE $9BCF-$9BD3 DW_DATA 2
RANGE $9BD3-$9BD7 DW_DATA 2
RANGE $9BD7-$9BDB DW_DATA 2
RANGE $9BDB-$9BDF DW_DATA 2
RANGE $9BDF-$9BE3 DW_DATA 2
RANGE $9BE3-$9BE5 DW_DATA 1
RANGE $9BE5-$9BE9 DW_DATA 2
RANGE $9BE9-$9BED DW_DATA 2
RANGE $9BED-$9BEF DW_DATA 1
RANGE $9BEF-$9BF3 DW_DATA 2
RANGE $9BF3-$9BF7 DW_DATA 2
RANGE $9BF7-$9BFB DW_DATA 2
RANGE $9BFB-$9BFD DW_DATA 1
RANGE $9BFD-$9C01 DW_DATA 2
RANGE $9C01-$9C05 DW_DATA 2
RANGE $9C05-$9C09 DW_DATA 2
RANGE $9C09-$9C0D DW_DATA 2
RANGE $9C0D-$9C0F DW_DATA 1
RANGE $9C0F-$9C13 DW_DATA 2
RANGE $9C13-$9C17 DW_DATA 2
RANGE $9C17-$9C1B DW_DATA 2
RANGE $9C1B-$9C1F DW_DATA 2
RANGE $9C1F-$9C23 DW_DATA 2
RANGE $9C23-$9C27 DW_DATA 2
RANGE $9C27-$9C29 DW_DATA 1
RANGE $9C29-$9C2D DW_DATA 2
RANGE $9C2D-$9C31 DW_DATA 2
RANGE $9C31-$9C35 DW_DATA 2
RANGE $9C35-$9C39 DW_DATA 2
RANGE $9C39-$9C3B DW_DATA 1
RANGE $9C3B-$9C3F DW_DATA 2
RANGE $9C3F-$9C43 DW_DATA 2
RANGE $9C43-$9C45 DW_DATA 1
RANGE $9C45-$9C49 DW_DATA 2
RANGE $9C49-$9C4D DW_DATA 2
RANGE $9C4D-$9C51 DW_DATA 2
RANGE $9C51-$9C55 DW_DATA 2
RANGE $9C55-$9C57 DW_DATA 1
RANGE $9C57-$9C5B DW_DATA 2
RANGE $9C5B-$9C5F DW_DATA 2
RANGE $9C5F-$9C63 DW_DATA 2
RANGE $9C63-$9C67 DW_DATA 2
RANGE $9C67-$9C69 DW_DATA 1
RANGE $9C69-$9C6D DW_DATA 2
RANGE $9C6D-$9C71 DW_DATA 2
RANGE $9C71-$9C75 DW_DATA 2
RANGE $9C75-$9C79 DW_DATA 2
RANGE $9C79-$9C7B DW_DATA 1
RANGE $9C7B-$9C7F DW_DATA 2
RANGE $9C7F-$9C83 DW_DATA 2
RANGE $9C83-$9C87 DW_DATA 2
RANGE $9C87-$9C8B DW_DATA 2
RANGE $9C8B-$9C8D DW_DATA 1
RANGE $9C8D-$9C91 DW_DATA 2
RANGE $9C91-$9C95 DW_DATA 2
RANGE $9C95-$9C99 DW_DATA 2
RANGE $9C99-$9C9D DW_DATA 2
RANGE $9C9D-$9C9F DW_DATA 1
RANGE $9C9F-$9CA3 DW_DATA 2
RANGE $9CA3-$9CA7 DW_DATA 2
RANGE $9CA7-$9CAB DW_DATA 2
RANGE $9CAB-$9CAF DW_DATA 2
RANGE $9CAF-$9CB3 DW_DATA 2
RANGE $9CB3-$9CB7 DW_DATA 2
RANGE $9CB7-$9CBB DW_DATA 2
RANGE $9CBB-$9CBF DW_DATA 2
RANGE $9CBF-$9CC3 DW_DATA 2
RANGE $9CC3-$9CC7 DW_DATA 2
RANGE $9CC7-$9CCB DW_DATA 2
RANGE $9CCB-$9CCF DW_DATA 2
RANGE $9CCF-$9CD3 DW_DATA 2
RANGE $9CD3-$9CD7 DW_DATA 2
RANGE $9CD7-$9CD9 DW_DATA 1
RANGE $9CD9-$9CDD DW_DATA 2
RANGE $9CDD-$9CE1 DW_DATA 2
RANGE $9CE1-$9CE5 DW_DATA 2
RANGE $9CE5-$9CE9 DW_DATA 2
RANGE $9CE9-$9CEB DW_DATA 1
RANGE $9CEB-$9CEF DW_DATA 2
RANGE $9CEF-$9CF1 DW_DATA 1
RANGE $9CF1-$9CF5 DW_DATA 2
RANGE $9CF5-$9CF9 DW_DATA 2
RANGE $9CF9-$9CFD DW_DATA 2
RANGE $9CFD-$9D01 DW_DATA 2
RANGE $9D01-$9D05 DW_DATA 2
RANGE $9D05-$9D09 DW_DATA 2
RANGE $9D09-$9D0D DW_DATA 2
RANGE $9D0D-$9D11 DW_DATA 2
RANGE $9D11-$9D15 DW_DATA 2
RANGE $9D15-$9D19 DW_DATA 2
RANGE $9D19-$9D1D DW_DATA 2
RANGE $9D1D-$9D21 DW_DATA 2
RANGE $9D21-$9D25 DW_DATA 2
RANGE $9D25-$9D29 DW_DATA 2
RANGE $9D29-$9D2B DW_DATA 1
RANGE $9D2B-$9D2F DW_DATA 2
RANGE $9D2F-$9D33 DW_DATA 2
RANGE $9D33-$9D37 DW_DATA 2
RANGE $9D37-$9D3B DW_DATA 2
RANGE $9D3B-$9D3D DW_DATA 1
RANGE $9D3D-$9D41 DW_DATA 2
RANGE $9D41-$9D45 DW_DATA 2
RANGE $9D45-$9D49 DW_DATA 2
RANGE $9D49-$9D4D DW_DATA 2
RANGE $9D4D-$9D4F DW_DATA 1
RANGE $9D4F-$9D53 DW_DATA 2
RANGE $9D53-$9D57 DW_DATA 2
RANGE $9D57-$9D5B DW_DATA 2
RANGE $9D5B-$9D5F DW_DATA 2
RANGE $9D5F-$9D61 DW_DATA 1
RANGE $9D61-$9D65 DW_DATA 2
RANGE $9D65-$9D69 DW_DATA 2
RANGE $9D69-$9D6D DW_DATA 2
RANGE $9D6D-$9D71 DW_DATA 2
RANGE $9D71-$9D75 DW_DATA 2
RANGE $9D75-$9D79 DW_DATA 2
RANGE $9D79-$9D7D DW_DATA 2
RANGE $9D7D-$9D81 DW_DATA 2
RANGE $9D81-$9D83 DW_DATA 1
RANGE $9D83-$9D87 DW_DATA 2
RANGE $9D87-$9D8B DW_DATA 2
RANGE $9D8B-$9D8F DW_DATA 2
RANGE $9D8F-$9D93 DW_DATA 2
RANGE $9D93-$9D95 DW_DATA 1
RANGE $9D95-$9D97 DB_DATA 2
RANGE $9D97-$9D99 DB_DATA 2
RANGE $9D99-$9D9B DB_DATA 2
RANGE $9D9B-$9D9D DB_DATA 2
RANGE $9D9D-$9D9F DB_DATA 2
RANGE $9D9F-$9DA1 DB_DATA 2
RANGE $9DA1-$9DA3 DB_DATA 2
RANGE $9DA3-$9DA5 DB_DATA 2
RANGE $9DA5-$9DA7 DB_DATA 2
RANGE $9DA7-$9DA9 DB_DATA 2
RANGE $9DA9-$9DAB DB_DATA 2
RANGE $9DAB-$9DAD DB_DATA 2
RANGE $9DAD-$9DAF DB_DATA 2
RANGE $9DAF-$9DB1 DB_DATA 2
RANGE $9DB1-$9DB3 DB_DATA 2
RANGE $9DB3-$9DB5 DB_DATA 2
RANGE $9DB5-$9DB7 DB_DATA 2
RANGE $9DB7-$9DB9 DB_DATA 2
RANGE $9DB9-$9DBB DB_DATA 2
RANGE $9DBB-$9DBD DB_DATA 2
RANGE $9DBD-$9DBF DB_DATA 2
RANGE $9DBF-$9DC1 DB_DATA 2
RANGE $9DC1-$9DC3 DB_DATA 2
RANGE $9DC3-$9DC5 DB_DATA 2
RANGE $9DC5-$9DC7 DB_DATA 2
RANGE $9DC7-$9DC9 DB_DATA 2
RANGE $9DC9-$9DCB DB_DATA 2
RANGE $9DCB-$9DCD DB_DATA 2
RANGE $9DCD-$9DCF DB_DATA 2
RANGE $9DCF-$9DD1 DB_DATA 2
RANGE $9DD1-$9DD3 DB_DATA 2
RANGE $9DD3-$9DD5 DB_DATA 2
RANGE $9DD5-$9DD7 DB_DATA 2
RANGE $9DD7-$9DD9 DB_DATA 2
RANGE $9DD9-$9DDB DB_DATA 2
RANGE $9DDB-$9DDD DB_DATA 2
RANGE $9DDD-$9DDF DB_DATA 2
RANGE $9DDF-$9DE1 DB_DATA 2
RANGE $9DE1-$9DE3 DB_DATA 2
RANGE $9DE3-$9DE5 DB_DATA 2
RANGE $9DE5-$9DE7 DB_DATA 2
RANGE $9DE7-$9DE9 DB_DATA 2
RANGE $9DE9-$9DEB DB_DATA 2
RANGE $9DEB-$9DED DB_DATA 2
RANGE $9DED-$9DEF DB_DATA 2
RANGE $9DEF-$9DF1 DB_DATA 2
RANGE $9DF1-$9DF3 DB_DATA 2
RANGE $9DF3-$9DF5 DB_DATA 2
RANGE $9DF5-$9DF7 DB_DATA 2
RANGE $9DF7-$9DF9 DB_DATA 2
RANGE $9DF9-$9DFB DB_DATA 2
RANGE $9DFB-$9DFD DB_DATA 2
RANGE $9DFD-$9DFF DB_DATA 2
RANGE $9DFF-$9E01 DB_DATA 2
RANGE $9E01-$9E03 DB_DATA 2
RANGE $9E03-$9E05 DB_DATA 2
RANGE $9E05-$9E07 DB_DATA 2
RANGE $9E07-$9E09 DB_DATA 2
RANGE $9E09-$9E0B DB_DATA 2
RANGE $9E0B-$9E0D DB_DATA 2
RANGE $9E0D-$9E0F DB_DATA 2
RANGE $9E0F-$9E11 DB_DATA 2
RANGE $9E11-$9E13 DB_DATA 2
RANGE $9E13-$9E15 DB_DATA 2
RANGE $9E15-$9E17 DB_DATA 2
RANGE $9E17-$9E19 DB_DATA 2
RANGE $9E19-$9E1B DB_DATA 2
RANGE $9E1B-$9E1D DB_DATA 2
RANGE $9E1D-$9E1F DB_DATA 2
RANGE $9E1F-$9E21 DB_DATA 2
RANGE $9E21-$9E23 DB_DATA 2
RANGE $9E23-$9E25 DB_DATA 2
RANGE $9E25-$9E27 DB_DATA 2
RANGE $9E27-$9E29 DB_DATA 2
RANGE $9E29-$9E2B DB_DATA 2
RANGE $9E2B-$9E2D DB_DATA 2
RANGE $9E2D-$9E2F DB_DATA 2
RANGE $9E2F-$9E31 DB_DATA 2
RANGE $9E31-$9E33 DB_DATA 2
RANGE $9E33-$9E35 DB_DATA 2
RANGE $9E35-$9E37 DB_DATA 2
RANGE $9E37-$9E39 DB_DATA 2
RANGE $9E39-$9E3B DB_DATA 2
RANGE $9E3B-$9E3D DB_DATA 2
RANGE $9E3D-$9E3F DB_DATA 2
RANGE $9E3F-$9E41 DB_DATA 2
RANGE $9E41-$9E43 DB_DATA 2
RANGE $9E43-$9E45 DB_DATA 2
RANGE $9E45-$9E47 DB_DATA 2
RANGE $9E47-$9E49 DB_DATA 2
RANGE $9E49-$9E4B DB_DATA 2
RANGE $9E4B-$9E4D DB_DATA 2
RANGE $9E4D-$9E4F DB_DATA 2
RANGE $9E4F-$9E51 DB_DATA 2
RANGE $9E51-$9E53 DB_DATA 2
RANGE $9E53-$9E55 DB_DATA 2
RANGE $9E55-$9E57 DB_DATA 2
RANGE $9E57-$9E59 DB_DATA 2
RANGE $9E59-$9E5B DB_DATA 2
RANGE $9E5B-$9E5D DB_DATA 2
RANGE $9E5D-$9E5F DB_DATA 2
RANGE $9E5F-$9E61 DB_DATA 2
RANGE $9E61-$9E63 DB_DATA 2
RANGE $9E63-$9E65 DB_DATA 2
RANGE $9E65-$9E67 DB_DATA 2
RANGE $9E67-$9E69 DB_DATA 2
RANGE $9E69-$9E6B DB_DATA 2
RANGE $9E6B-$9E6D DB_DATA 2
RANGE $9E6D-$9E6F DB_DATA 2
RANGE $9E6F-$9E71 DB_DATA 2
RANGE $9E71-$9E73 DB_DATA 2
RANGE $9E73-$9E75 DB_DATA 2
RANGE $9E75-$9E77 DB_DATA 2
RANGE $9E77-$9E79 DB_DATA 2
RANGE $9E79-$9E7B DB_DATA 2
RANGE $9E7B-$9E7D DB_DATA 2
RANGE $9E7D-$9E7F DB_DATA 2
RANGE $9E7F-$9E81 DB_DATA 2
RANGE $9E81-$9E83 DB_DATA 2
RANGE $9E83-$9E85 DB_DATA 2
RANGE $9E85-$9E87 DB_DATA 2
RANGE $9E87-$9E89 DB_DATA 2
RANGE $9E89-$9E8B DB_DATA 2
RANGE $9E8B-$9E8D DB_DATA 2
RANGE $9E8D-$9E8F DB_DATA 2
RANGE $9E8F-$9E91 DB_DATA 2
RANGE $9E91-$9E93 DB_DATA 2
RANGE $9E93-$9E95 DB_DATA 2
RANGE $9E95-$9E97 DB_DATA 2
RANGE $9E97-$9E99 DB_DATA 2
RANGE $9E99-$9E9B DB_DATA 2
RANGE $9E9B-$9E9D DB_DATA 2
RANGE $9E9D-$9E9F DB_DATA 2
RANGE $9E9F-$9EA1 DB_DATA 2
RANGE $9EA1-$9EA3 DB_DATA 2
RANGE $9EA3-$9EA5 DB_DATA 2
RANGE $9EA5-$9EA7 DB_DATA 2
RANGE $9EA7-$9EA9 DB_DATA 2
RANGE $9EA9-$9EAB DB_DATA 2
RANGE $9EAB-$9EAD DB_DATA 2
RANGE $9EAD-$9EAF DB_DATA 2
RANGE $9EAF-$9EB1 DB_DATA 2
RANGE $9EB1-$9EB3 DB_DATA 2
RANGE $9EB3-$9EB5 DB_DATA 2
RANGE $9EB5-$9EB7 DB_DATA 2
RANGE $9EB7-$9EB9 DB_DATA 2
RANGE $9EB9-$9EBB DB_DATA 2
RANGE $9EBB-$9EBD DB_DATA 2
RANGE $9EBD-$9EBF DB_DATA 2
RANGE $9EBF-$9EC1 DB_DATA 2
RANGE $9EC1-$9EC3 DB_DATA 2
RANGE $9EC3-$9EC5 DB_DATA 2
RANGE $9EC5-$9EC7 DB_DATA 2
RANGE $9EC7-$9EC9 DB_DATA 2
RANGE $9EC9-$9ECB DB_DATA 2
RANGE $9ECB-$9ECD DB_DATA 2
RANGE $9ECD-$9ECF DB_DATA 2
RANGE $9ECF-$9ED1 DB_DATA 2
RANGE $9ED1-$9ED3 DB_DATA 2
RANGE $9ED3-$9ED5 DB_DATA 2
RANGE $9ED5-$9ED7 DB_DATA 2
RANGE $9ED7-$9ED9 DB_DATA 2
RANGE $9ED9-$9EDB DB_DATA 2
RANGE $9EDB-$9EDD DB_DATA 2
RANGE $9EDD-$9EDF DB_DATA 2
RANGE $9EDF-$9EE1 DB_DATA 2
RANGE $9EE1-$9EE3 DB_DATA 2
RANGE $9EE3-$9EE5 DB_DATA 2
RANGE $9EE5-$9EE7 DB_DATA 2
RANGE $9EE7-$9EE9 DB_DATA 2
RANGE $9EE9-$9EEB DB_DATA 2
RANGE $9EEB-$9EED DB_DATA 2
RANGE $9EED-$9EEF DB_DATA 2
RANGE $9EEF-$9EF1 DB_DATA 2
RANGE $9EF1-$9EF3 DB_DATA 2
RANGE $9EF3-$9EF5 DB_DATA 2
RANGE $9EF5-$9EF7 DB_DATA 2
RANGE $9EF7-$9EF9 DB_DATA 2
RANGE $9EF9-$9EFB DW_DATA 1
RANGE $9EFB-$9EFD DW_DATA 1
RANGE $9EFD-$9EFF DW_DATA 1
RANGE $9EFF-$9F01 DW_DATA 1
RANGE $9F01-$9F03 DW_DATA 1
RANGE $9F03-$9F05 DW_DATA 1
RANGE $9F05-$9F06 DB_DATA 1
RANGE $9F06-$9F07 DB_DATA 1
RANGE $9F07-$9F08 DB_DATA 1
RANGE $9F08-$9F09 DB_DATA 1
RANGE $9F09-$9F0B DW_DATA 1
RANGE $9F0B-$9F0C DB_DATA 1
RANGE $9F0C-$9F0D DB_DATA 1
RANGE $9F0D-$9F0F DW_DATA 1
RANGE $9F0F-$9F11 DW_DATA 1
RANGE $9F11-$9F13 DW_DATA 1
RANGE $9F13-$9F15 DW_DATA 1
RANGE $9F15-$9F17 DW_DATA 1
RANGE $9F17-$9F19 DW_DATA 1
RANGE $9F19-$9F1B DW_DATA 1
RANGE $9F1B-$9F1D DW_DATA 1
RANGE $9F1D-$9F1F DW_DATA 1
RANGE $9F1F-$9F21 DW_DATA 1
RANGE $9F21-$9F23 DW_DATA 1
RANGE $9F23-$9F25 DW_DATA 1
RANGE $9F25-$9F27 DW_DATA 1
RANGE $9F27-$9F29 DW_DATA 1
RANGE $9F29-$9F2B DW_DATA 1
RANGE $9F2B-$9F2D DW_DATA 1
RANGE $9F2D-$9F2F DW_DATA 1
RANGE $9F2F-$9F31 DW_DATA 1
RANGE $9F31-$9F33 DW_DATA 1
RANGE $9F33-$9F35 DW_DATA 1
RANGE $9F35-$9F37 DW_DATA 1
RANGE $9F37-$9F39 DW_DATA 1
RANGE $9F39-$9F3B DW_DATA 1
RANGE $9F3B-$9F3D DW_DATA 1
RANGE $9F3D-$9F3F DW_DATA 1
RANGE $9F3F-$9F41 DW_DATA 1
RANGE $9F41-$9F43 DW_DATA 1
RANGE $9F43-$9F45 DW_DATA 1
RANGE $9F45-$9F47 DW_DATA 1
RANGE $9F47-$9F49 DW_DATA 1
RANGE $9F49-$9F4B DW_DATA 1
RANGE $9F4B-$9F4D DW_DATA 1
RANGE $9F4D-$9F4F DW_DATA 1
RANGE $9F4F-$9F51 DW_DATA 1
RANGE $9F51-$9F53 DW_DATA 1
RANGE $9F53-$9F55 DW_DATA 1
RANGE $9F55-$9F57 DW_DATA 1
RANGE $9F57-$9F59 DW_DATA 1
RANGE $9F59-$9F5B DW_DATA 1
RANGE $9F5B-$9F5D DW_DATA 1
RANGE $9F5D-$9F5F DW_DATA 1
RANGE $9F5F-$9F61 DW_DATA 1
RANGE $9F61-$9F63 DW_DATA 1
RANGE $9F63-$9F65 DW_DATA 1
RANGE $9F65-$9F67 DW_DATA 1
RANGE $9F67-$9F69 DW_DATA 1
RANGE $9F69-$9F6B DW_DATA 1
RANGE $9F6B-$9F6D DW_DATA 1
RANGE $9F6D-$9F6F DW_DATA 1
RANGE $9F6F-$9F71 DW_DATA 1
RANGE $9F71-$9F73 DW_DATA 1
RANGE $9F73-$9F75 DW_DATA 1
RANGE $9F75-$9F77 DW_DATA 1
RANGE $9F77-$9F79 DW_DATA 1
RANGE $9F79-$9F7B DW_DATA 1
RANGE $9F7B-$9F7D DW_DATA 1
RANGE $9F7D-$9F7F DW_DATA 1
RANGE $9F7F-$9F81 DW_DATA 1
RANGE $9F81-$9F83 DW_DATA 1
RANGE $9F83-$9F85 DW_DATA 1
RANGE $9F85-$9F87 DW_DATA 1
RANGE $9F87-$9F89 DW_DATA 1
RANGE $9F89-$9F8B DW_DATA 1
RANGE $9F8B-$9F8D DW_DATA 1
RANGE $9F8D-$9F8F DW_DATA 1
RANGE $9F8F-$9F91 DW_DATA 1
RANGE $9F91-$9F93 DW_DATA 1
RANGE $9F93-$9F95 DW_DATA 1
RANGE $9F95-$9F97 DW_DATA 1
RANGE $9F97-$9F99 DW_DATA 1
RANGE $9F99-$9F9B DW_DATA 1
RANGE $9F9B-$9F9D DW_DATA 1
RANGE $9F9D-$9F9F DW_DATA 1
RANGE $9F9F-$9FA1 DW_DATA 1
RANGE $9FA1-$9FA3 DW_DATA 1
RANGE $9FA3-$9FA5 DW_DATA 1
RANGE $9FA5-$9FA7 DW_DATA 1
RANGE $9FA7-$9FA9 DW_DATA 1
RANGE $9FA9-$9FAB DW_DATA 1
RANGE $9FAB-$9FAD DW_DATA 1
RANGE $9FAD-$9FAF DW_DATA 1
RANGE $9FAF-$9FB1 DW_DATA 1
RANGE $9FB1-$9FB3 DW_DATA 1
RANGE $9FB3-$9FB5 DW_DATA 1
RANGE $9FB5-$9FB7 DW_DATA 1
RANGE $9FB7-$9FB9 DW_DATA 1
RANGE $9FB9-$9FBB DW_DATA 1
RANGE $9FBB-$9FBD DW_DATA 1
RANGE $9FBD-$9FBF DW_DATA 1
RANGE $9FBF-$9FC1 DW_DATA 1
RANGE $9FC1-$9FC3 DW_DATA 1
RANGE $9FC3-$9FC5 DW_DATA 1
RANGE $9FC5-$9FC7 DW_DATA 1
RANGE $9FC7-$9FC9 DW_DATA 1
RANGE $9FC9-$9FCB DW_DATA 1
RANGE $9FCB-$9FCD DW_DATA 1
RANGE $9FCD-$9FCF DW_DATA 1
RANGE $9FCF-$9FD1 DW_DATA 1
RANGE $9FD1-$9FD3 DW_DATA 1
RANGE $9FD3-$9FD5 DW_DATA 1
RANGE $9FD5-$9FD7 DW_DATA 1
RANGE $9FD7-$9FD9 DW_DATA 1
RANGE $9FD9-$9FDB DW_DATA 1
RANGE $9FDB-$9FDD DW_DATA 1
RANGE $9FDD-$9FDF DW_DATA 1
RANGE $9FDF-$9FE1 DW_DATA 1
RANGE $9FE1-$9FE3 DW_DATA 1
RANGE $9FE3-$9FE5 DW_DATA 1
RANGE $9FE5-$9FE6 DB_DATA 1
RANGE $9FE6-$9FE7 DB_DATA 1
RANGE $9FE7-$9FE8 DB_DATA 1
RANGE $9FE8-$9FE9 DB_DATA 1
RANGE $9FE9-$9FEB DW_DATA 1
RANGE $9FEB-$9FED DW_DATA 1
RANGE $9FED-$9FEF DW_DATA 1
RANGE $9FEF-$9FF1 DW_DATA 1
RANGE $9FF1-$9FF2 DB_DATA 1
RANGE $9FF2-$9FF3 DB_DATA 1
RANGE $9FF3-$9FF4 DB_DATA 1
RANGE $9FF4-$9FF5 DB_DATA 1
RANGE $9FF5-$9FF7 DW_DATA 1
RANGE $9FF7-$9FF9 DW_DATA 1
RANGE $9FF9-$9FFB DW_DATA 1
RANGE $9FFB-$9FFD DW_DATA 1
RANGE $9FFD-$9FFE DB_DATA 1
RANGE $9FFE-$9FFF DB_DATA 1
RANGE $9FFF-$A000 DB_DATA 1
RANGE $A000-$A001 DB_DATA 1
RANGE $A001-$A003 DW_DATA 1
RANGE $A003-$A004 DB_DATA 1
RANGE $A004-$A005 DB_DATA 1
RANGE $A005-$A007 DW_DATA 1
RANGE $A007-$A009 DW_DATA 1
RANGE $A009-$A00B DW_DATA 1
RANGE $A00B-$A00D DW_DATA 1
RANGE $A00D-$A00E DB_DATA 1
RANGE $A00E-$A00F DB_DATA 1
RANGE $A00F-$A010 DB_DATA 1
RANGE $A010-$A011 DB_DATA 1
RANGE $A011-$A013 DW_DATA 1
RANGE $A013-$A015 DW_DATA 1
RANGE $A015-$A017 DW_DATA 1
RANGE $A017-$A019 DW_DATA 1
RANGE $A019-$A01A DB_DATA 1
RANGE $A01A-$A01B DB_DATA 1
RANGE $A01B-$A01C DB_DATA 1
RANGE $A01C-$A01D DB_DATA 1
RANGE $A01D-$A01F DW_DATA 1
RANGE $A01F-$A021 DW_DATA 1
RANGE $A021-$A023 DW_DATA 1
RANGE $A023-$A025 DW_DATA 1
RANGE $A025-$A026 DB_DATA 1
RANGE $A026-$A027 DB_DATA 1
RANGE $A027-$A028 DB_DATA 1
RANGE $A028-$A029 DB_DATA 1
RANGE $A029-$A02B DW_DATA 1
RANGE $A02B-$A02D DW_DATA 1
RANGE $A02D-$A02F DW_DATA 1
RANGE $A02F-$A031 DW_DATA 1
RANGE $A031-$A032 DB_DATA 1
RANGE $A032-$A033 DB_DATA 1
RANGE $A033-$A034 DB_DATA 1
RANGE $A034-$A035 DB_DATA 1
RANGE $A035-$A037 DW_DATA 1
RANGE $A037-$A038 DB_DATA 1
RANGE $A038-$A039 DB_DATA 1
RANGE $A039-$A03B DW_DATA 1
RANGE $A03B-$A03D DW_DATA 1
RANGE $A03D-$A03F DW_DATA 1
RANGE $A03F-$A041 DW_DATA 1
RANGE $A041-$A042 DB_DATA 1
RANGE $A042-$A043 DB_DATA 1
RANGE $A043-$A044 DB_DATA 1
RANGE $A044-$A045 DB_DATA 1
RANGE $A045-$A047 DW_DATA 1
RANGE $A047-$A049 DW_DATA 1
RANGE $A049-$A04B DW_DATA 1
RANGE $A04B-$A04D DW_DATA 1
RANGE $A04D-$A04E DB_DATA 1
RANGE $A04E-$A04F DB_DATA 1
RANGE $A04F-$A050 DB_DATA 1
RANGE $A050-$A051 DB_DATA 1
RANGE $A051-$A053 DW_DATA 1
RANGE $A053-$A055 DW_DATA 1
RANGE $A055-$A057 DW_DATA 1
RANGE $A057-$A059 DW_DATA 1
RANGE $A059-$A05A DB_DATA 1
RANGE $A05A-$A05B DB_DATA 1
RANGE $A05B-$A05C DB_DATA 1
RANGE $A05C-$A05D DB_DATA 1
RANGE $A05D-$A05F DW_DATA 1
RANGE $A05F-$A061 DW_DATA 1
RANGE $A061-$A063 DW_DATA 1
RANGE $A063-$A065 DW_DATA 1
RANGE $A065-$A066 DB_DATA 1
RANGE $A066-$A067 DB_DATA 1
RANGE $A067-$A068 DB_DATA 1
RANGE $A068-$A069 DB_DATA 1
RANGE $A069-$A06B DW_DATA 1
RANGE $A06B-$A06C DB_DATA 1
RANGE $A06C-$A06D DB_DATA 1
RANGE $A06D-$A06F DW_DATA 1
RANGE $A06F-$A071 DW_DATA 1
RANGE $A071-$A073 DW_DATA 1
RANGE $A073-$A075 DW_DATA 1
RANGE $A075-$A076 DB_DATA 1
RANGE $A076-$A077 DB_DATA 1
RANGE $A077-$A078 DB_DATA 1
RANGE $A078-$A079 DB_DATA 1
RANGE $A079-$A07B DW_DATA 1
RANGE $A07B-$A07D DW_DATA 1
RANGE $A07D-$A07F DW_DATA 1
RANGE $A07F-$A081 DW_DATA 1
RANGE $A081-$A082 DB_DATA 1
RANGE $A082-$A083 DB_DATA 1
RANGE $A083-$A084 DB_DATA 1
RANGE $A084-$A085 DB_DATA 1
RANGE $A085-$A087 DW_DATA 1
RANGE $A087-$A089 DW_DATA 1
RANGE $A089-$A08B DW_DATA 1
RANGE $A08B-$A08D DW_DATA 1
RANGE $A08D-$A08E DB_DATA 1
RANGE $A08E-$A08F DB_DATA 1
RANGE $A08F-$A090 DB_DATA 1
RANGE $A090-$A091 DB_DATA 1
RANGE $A091-$A093 DW_DATA 1
RANGE $A093-$A095 DW_DATA 1
RANGE $A095-$A097 DW_DATA 1
RANGE $A097-$A099 DW_DATA 1
RANGE $A099-$A09A DB_DATA 1
RANGE $A09A-$A09B DB_DATA 1
RANGE $A09B-$A09C DB_DATA 1
RANGE $A09C-$A09D DB_DATA 1
RANGE $A09D-$A09F DW_DATA 1
RANGE $A09F-$A0A0 DB_DATA 1
RANGE $A0A0-$A0A1 DB_DATA 1
RANGE $A0A1-$A0A3 DW_DATA 1
RANGE $A0A3-$A0A5 DW_DATA 1
RANGE $A0A5-$A0A7 DW_DATA 1
RANGE $A0A7-$A0A9 DW_DATA 1
RANGE $A0A9-$A0AA DB_DATA 1
RANGE $A0AA-$A0AB DB_DATA 1
RANGE $A0AB-$A0AC DB_DATA 1
RANGE $A0AC-$A0AD DB_DATA 1
RANGE $A0AD-$A0AF DW_DATA 1
RANGE $A0AF-$A0B1 DW_DATA 1
RANGE $A0B1-$A0B3 DW_DATA 1
RANGE $A0B3-$A0B5 DW_DATA 1
RANGE $A0B5-$A0B6 DB_DATA 1
RANGE $A0B6-$A0B7 DB_DATA 1
RANGE $A0B7-$A0B8 DB_DATA 1
RANGE $A0B8-$A0B9 DB_DATA 1
RANGE $A0B9-$A0BB DW_DATA 1
RANGE $A0BB-$A0BD DW_DATA 1
RANGE $A0BD-$A0BF DW_DATA 1
RANGE $A0BF-$A0C1 DW_DATA 1
RANGE $A0C1-$A0C2 DB_DATA 1
RANGE $A0C2-$A0C3 DB_DATA 1
RANGE $A0C3-$A0C4 DB_DATA 1
RANGE $A0C4-$A0C5 DB_DATA 1
RANGE $A0C5-$A0C7 DW_DATA 1
RANGE $A0C7-$A0C9 DW_DATA 1
RANGE $A0C9-$A0CB DW_DATA 1
RANGE $A0CB-$A0CD DW_DATA 1
RANGE $A0CD-$A0CE DB_DATA 1
RANGE $A0CE-$A0CF DB_DATA 1
RANGE $A0CF-$A0D0 DB_DATA 1
RANGE $A0D0-$A0D1 DB_DATA 1
RANGE $A0D1-$A0D3 DW_DATA 1
RANGE $A0D3-$A0D4 DB_DATA 1
RANGE $A0D4-$A0D5 DB_DATA 1
RANGE $A0D5-$A0D7 DW_DATA 1
RANGE $A0D7-$A0D9 DW_DATA 1
RANGE $A0D9-$A0DB DW_DATA 1
RANGE $A0DB-$A0DD DW_DATA 1
RANGE $A0DD-$A0DE DB_DATA 1
RANGE $A0DE-$A0DF DB_DATA 1
RANGE $A0DF-$A0E0 DB_DATA 1
RANGE $A0E0-$A0E1 DB_DATA 1
RANGE $A0E1-$A0E3 DW_DATA 1
RANGE $A0E3-$A0E5 DW_DATA 1
RANGE $A0E5-$A0E7 DW_DATA 1
RANGE $A0E7-$A0E9 DW_DATA 1
RANGE $A0E9-$A0EA DB_DATA 1
RANGE $A0EA-$A0EB DB_DATA 1
RANGE $A0EB-$A0EC DB_DATA 1
RANGE $A0EC-$A0ED DB_DATA 1
RANGE $A0ED-$A0EF DW_DATA 1
RANGE $A0EF-$A0F1 DW_DATA 1
RANGE $A0F1-$A0F3 DW_DATA 1
RANGE $A0F3-$A0F5 DW_DATA 1
RANGE $A0F5-$A0F6 DB_DATA 1
RANGE $A0F6-$A0F7 DB_DATA 1
RANGE $A0F7-$A0F8 DB_DATA 1
RANGE $A0F8-$A0F9 DB_DATA 1
RANGE $A0F9-$A0FB DW_DATA 1
RANGE $A0FB-$A0FD DW_DATA 1
RANGE $A0FD-$A0FF DW_DATA 1
RANGE $A0FF-$A101 DW_DATA 1
RANGE $A101-$A102 DB_DATA 1
RANGE $A102-$A103 DB_DATA 1
RANGE $A103-$A104 DB_DATA 1
RANGE $A104-$A105 DB_DATA 1
RANGE $A105-$A107 DW_DATA 1
RANGE $A107-$A108 DB_DATA 1
RANGE $A108-$A109 DB_DATA 1
RANGE $A109-$A10B DW_DATA 1
RANGE $A10B-$A10D DW_DATA 1
RANGE $A10D-$A10F DW_DATA 1
RANGE $A10F-$A111 DW_DATA 1
RANGE $A111-$A112 DB_DATA 1
RANGE $A112-$A113 DB_DATA 1
RANGE $A113-$A114 DB_DATA 1
RANGE $A114-$A115 DB_DATA 1
RANGE $A115-$A117 DW_DATA 1
RANGE $A117-$A119 DW_DATA 1
RANGE $A119-$A11B DW_DATA 1
RANGE $A11B-$A11D DW_DATA 1
RANGE $A11D-$A11E DB_DATA 1
RANGE $A11E-$A11F DB_DATA 1
RANGE $A11F-$A120 DB_DATA 1
RANGE $A120-$A121 DB_DATA 1
RANGE $A121-$A123 DW_DATA 1
RANGE $A123-$A125 DW_DATA 1
RANGE $A125-$A127 DW_DATA 1
RANGE $A127-$A129 DW_DATA 1
RANGE $A129-$A12A DB_DATA 1
RANGE $A12A-$A12B DB_DATA 1
RANGE $A12B-$A12C DB_DATA 1
RANGE $A12C-$A12D DB_DATA 1
RANGE $A12D-$A12F DW_DATA 1
RANGE $A12F-$A131 DW_DATA 1
RANGE $A131-$A133 DW_DATA 1
RANGE $A133-$A135 DW_DATA 1
RANGE $A135-$A136 DB_DATA 1
RANGE $A136-$A137 DB_DATA 1
RANGE $A137-$A138 DB_DATA 1
RANGE $A138-$A139 DB_DATA 1
RANGE $A139-$A13B DW_DATA 1
RANGE $A13B-$A13C DB_DATA 1
RANGE $A13C-$A13D DB_DATA 1
RANGE $A13D-$A13F DW_DATA 1
RANGE $A13F-$A141 DW_DATA 1
RANGE $A141-$A143 DW_DATA 1
RANGE $A143-$A145 DW_DATA 1
RANGE $A145-$A146 DB_DATA 1
RANGE $A146-$A147 DB_DATA 1
RANGE $A147-$A148 DB_DATA 1
RANGE $A148-$A149 DB_DATA 1
RANGE $A149-$A14B DW_DATA 1
RANGE $A14B-$A14D DW_DATA 1
RANGE $A14D-$A14F DW_DATA 1
RANGE $A14F-$A151 DW_DATA 1
RANGE $A151-$A152 DB_DATA 1
RANGE $A152-$A153 DB_DATA 1
RANGE $A153-$A154 DB_DATA 1
RANGE $A154-$A155 DB_DATA 1
RANGE $A155-$A157 DW_DATA 1
RANGE $A157-$A159 DW_DATA 1
RANGE $A159-$A15B DW_DATA 1
RANGE $A15B-$A15D DW_DATA 1
RANGE $A15D-$A15E DB_DATA 1
RANGE $A15E-$A15F DB_DATA 1
RANGE $A15F-$A160 DB_DATA 1
RANGE $A160-$A161 DB_DATA 1
RANGE $A161-$A163 DW_DATA 1
RANGE $A163-$A165 DW_DATA 1
RANGE $A165-$A167 DW_DATA 1
RANGE $A167-$A169 DW_DATA 1
RANGE $A169-$A16A DB_DATA 1
RANGE $A16A-$A16B DB_DATA 1
RANGE $A16B-$A16C DB_DATA 1
RANGE $A16C-$A16D DB_DATA 1
RANGE $A16D-$A16F DW_DATA 1
RANGE $A16F-$A170 DB_DATA 1
RANGE $A170-$A171 DB_DATA 1
RANGE $A171-$A173 DW_DATA 1
RANGE $A173-$A175 DW_DATA 1
RANGE $A175-$A177 DW_DATA 1
RANGE $A177-$A179 DW_DATA 1
RANGE $A179-$A17A DB_DATA 1
RANGE $A17A-$A17B DB_DATA 1
RANGE $A17B-$A17C DB_DATA 1
RANGE $A17C-$A17D DB_DATA 1
RANGE $A17D-$A17F DW_DATA 1
RANGE $A17F-$A181 DW_DATA 1
RANGE $A181-$A183 DW_DATA 1
RANGE $A183-$A185 DW_DATA 1
RANGE $A185-$A186 DB_DATA 1
RANGE $A186-$A187 DB_DATA 1
RANGE $A187-$A188 DB_DATA 1
RANGE $A188-$A189 DB_DATA 1
RANGE $A189-$A18B DW_DATA 1
RANGE $A18B-$A18D DW_DATA 1
RANGE $A18D-$A18F DW_DATA 1
RANGE $A18F-$A191 DW_DATA 1
RANGE $A191-$A192 DB_DATA 1
RANGE $A192-$A193 DB_DATA 1
RANGE $A193-$A194 DB_DATA 1
RANGE $A194-$A195 DB_DATA 1
RANGE $A195-$A197 DW_DATA 1
RANGE $A197-$A199 DW_DATA 1
RANGE $A199-$A19B DW_DATA 1
RANGE $A19B-$A19D DW_DATA 1
RANGE $A19D-$A19E DB_DATA 1
RANGE $A19E-$A19F DB_DATA 1
RANGE $A19F-$A1A0 DB_DATA 1
RANGE $A1A0-$A1A1 DB_DATA 1
RANGE $A1A1-$A1A3 DW_DATA 1
RANGE $A1A3-$A1A4 DB_DATA 1
RANGE $A1A4-$A1A5 DB_DATA 1
RANGE $A1A5-$A1A7 DW_DATA 1
RANGE $A1A7-$A1A9 DW_DATA 1
RANGE $A1A9-$A1AB DW_DATA 1
RANGE $A1AB-$A1AD DW_DATA 1
RANGE $A1AD-$A1AE DB_DATA 1
RANGE $A1AE-$A1AF DB_DATA 1
RANGE $A1AF-$A1B0 DB_DATA 1
RANGE $A1B0-$A1B1 DB_DATA 1
RANGE $A1B1-$A1B3 DW_DATA 1
RANGE $A1B3-$A1B5 DW_DATA 1
RANGE $A1B5-$A1B7 DW_DATA 1
RANGE $A1B7-$A1B9 DW_DATA 1
RANGE $A1B9-$A1BA DB_DATA 1
RANGE $A1BA-$A1BB DB_DATA 1
RANGE $A1BB-$A1BC DB_DATA 1
RANGE $A1BC-$A1BD DB_DATA 1
RANGE $A1BD-$A1BF DW_DATA 1
RANGE $A1BF-$A1C1 DW_DATA 1
RANGE $A1C1-$A1C3 DW_DATA 1
RANGE $A1C3-$A1C5 DW_DATA 1
RANGE $A1C5-$A1C6 DB_DATA 1
RANGE $A1C6-$A1C7 DB_DATA 1
RANGE $A1C7-$A1C8 DB_DATA 1
RANGE $A1C8-$A1C9 DB_DATA 1
RANGE $A1C9-$A1CB DW_DATA 1
RANGE $A1CB-$A1CD DW_DATA 1
RANGE $A1CD-$A1CF DW_DATA 1
RANGE $A1CF-$A1D1 DW_DATA 1
RANGE $A1D1-$A1D2 DB_DATA 1
RANGE $A1D2-$A1D3 DB_DATA 1
RANGE $A1D3-$A1D4 DB_DATA 1
RANGE $A1D4-$A1D5 DB_DATA 1
RANGE $A1D5-$A1D7 DW_DATA 1
RANGE $A1D7-$A1D8 DB_DATA 1
RANGE $A1D8-$A1D9 DB_DATA 1
RANGE $A1D9-$A1DB DW_DATA 1
RANGE $A1DB-$A1DD DW_DATA 1
RANGE $A1DD-$A1DF DW_DATA 1
RANGE $A1DF-$A1E1 DW_DATA 1
RANGE $A1E1-$A1E2 DB_DATA 1
RANGE $A1E2-$A1E3 DB_DATA 1
RANGE $A1E3-$A1E4 DB_DATA 1
RANGE $A1E4-$A1E5 DB_DATA 1
RANGE $A1E5-$A1E7 DW_DATA 1
RANGE $A1E7-$A1E9 DW_DATA 1
RANGE $A1E9-$A1EB DW_DATA 1
RANGE $A1EB-$A1ED DW_DATA 1
RANGE $A1ED-$A1EE DB_DATA 1
RANGE $A1EE-$A1EF DB_DATA 1
RANGE $A1EF-$A1F0 DB_DATA 1
RANGE $A1F0-$A1F1 DB_DATA 1
RANGE $A1F1-$A1F3 DW_DATA 1
RANGE $A1F3-$A1F5 DW_DATA 1
RANGE $A1F5-$A1F7 DW_DATA 1
RANGE $A1F7-$A1F9 DW_DATA 1
RANGE $A1F9-$A1FA DB_DATA 1
RANGE $A1FA-$A1FB DB_DATA 1
RANGE $A1FB-$A1FC DB_DATA 1
RANGE $A1FC-$A1FD DB_DATA 1
RANGE $A1FD-$A1FF DW_DATA 1
RANGE $A1FF-$A201 DW_DATA 1
RANGE $A201-$A203 DW_DATA 1
RANGE $A203-$A205 DW_DATA 1
RANGE $A205-$A206 DB_DATA 1
RANGE $A206-$A207 DB_DATA 1
RANGE $A207-$A208 DB_DATA 1
RANGE $A208-$A209 DB_DATA 1
RANGE $A209-$A20B DW_DATA 1
RANGE $A20B-$A20C DB_DATA 1
RANGE $A20C-$A20D DB_DATA 1
RANGE $A20D-$A20F DW_DATA 1
RANGE $A20F-$A211 DW_DATA 1
RANGE $A211-$A213 DW_DATA 1
RANGE $A213-$A215 DW_DATA 1
RANGE $A215-$A216 DB_DATA 1
RANGE $A216-$A217 DB_DATA 1
RANGE $A217-$A218 DB_DATA 1
RANGE $A218-$A219 DB_DATA 1
RANGE $A219-$A21B DW_DATA 1
RANGE $A21B-$A21D DW_DATA 1
RANGE $A21D-$A21F DW_DATA 1
RANGE $A21F-$A221 DW_DATA 1
RANGE $A221-$A222 DB_DATA 1
RANGE $A222-$A223 DB_DATA 1
RANGE $A223-$A224 DB_DATA 1
RANGE $A224-$A225 DB_DATA 1
RANGE $A225-$A227 DW_DATA 1
RANGE $A227-$A229 DW_DATA 1
RANGE $A229-$A22B DW_DATA 1
RANGE $A22B-$A22D DW_DATA 1
RANGE $A22D-$A22E DB_DATA 1
RANGE $A22E-$A22F DB_DATA 1
RANGE $A22F-$A230 DB_DATA 1
RANGE $A230-$A231 DB_DATA 1
RANGE $A231-$A233 DW_DATA 1
RANGE $A233-$A235 DW_DATA 1
RANGE $A235-$A237 DW_DATA 1
RANGE $A237-$A239 DW_DATA 1
RANGE $A239-$A23A DB_DATA 1
RANGE $A23A-$A23B DB_DATA 1
RANGE $A23B-$A23C DB_DATA 1
RANGE $A23C-$A23D DB_DATA 1
RANGE $A23D-$A23F DW_DATA 1
RANGE $A23F-$A240 DB_DATA 1
RANGE $A240-$A241 DB_DATA 1
RANGE $A241-$A243 DW_DATA 1
RANGE $A243-$A245 DW_DATA 1
RANGE $A245-$A247 DW_DATA 1
RANGE $A247-$A249 DW_DATA 1
RANGE $A249-$A24A DB_DATA 1
RANGE $A24A-$A24B DB_DATA 1
RANGE $A24B-$A24C DB_DATA 1
RANGE $A24C-$A24D DB_DATA 1
RANGE $A24D-$A24F DW_DATA 1
RANGE $A24F-$A251 DW_DATA 1
RANGE $A251-$A253 DW_DATA 1
RANGE $A253-$A255 DW_DATA 1
RANGE $A255-$A256 DB_DATA 1
RANGE $A256-$A257 DB_DATA 1
RANGE $A257-$A258 DB_DATA 1
RANGE $A258-$A259 DB_DATA 1
RANGE $A259-$A25B DW_DATA 1
RANGE $A25B-$A25D DW_DATA 1
RANGE $A25D-$A25F DW_DATA 1
RANGE $A25F-$A261 DW_DATA 1
RANGE $A261-$A262 DB_DATA 1
RANGE $A262-$A263 DB_DATA 1
RANGE $A263-$A264 DB_DATA 1
RANGE $A264-$A265 DB_DATA 1
RANGE $A265-$A267 DW_DATA 1
RANGE $A267-$A269 DW_DATA 1
RANGE $A269-$A26B DW_DATA 1
RANGE $A26B-$A26D DW_DATA 1
RANGE $A26D-$A26E DB_DATA 1
RANGE $A26E-$A26F DB_DATA 1
RANGE $A26F-$A270 DB_DATA 1
RANGE $A270-$A271 DB_DATA 1
RANGE $A271-$A273 DW_DATA 1
RANGE $A273-$A274 DB_DATA 1
RANGE $A274-$A275 DB_DATA 1
RANGE $A275-$A277 DW_DATA 1
RANGE $A277-$A279 DW_DATA 1
RANGE $A279-$A27B DW_DATA 1
RANGE $A27B-$A27D DW_DATA 1
RANGE $A27D-$A27E DB_DATA 1
RANGE $A27E-$A27F DB_DATA 1
RANGE $A27F-$A280 DB_DATA 1
RANGE $A280-$A281 DB_DATA 1
RANGE $A281-$A283 DW_DATA 1
RANGE $A283-$A285 DW_DATA 1
RANGE $A285-$A287 DW_DATA 1
RANGE $A287-$A289 DW_DATA 1
RANGE $A289-$A28A DB_DATA 1
RANGE $A28A-$A28B DB_DATA 1
RANGE $A28B-$A28C DB_DATA 1
RANGE $A28C-$A28D DB_DATA 1
RANGE $A28D-$A28F DW_DATA 1
RANGE $A28F-$A291 DW_DATA 1
RANGE $A291-$A293 DW_DATA 1
RANGE $A293-$A295 DW_DATA 1
RANGE $A295-$A296 DB_DATA 1
RANGE $A296-$A297 DB_DATA 1
RANGE $A297-$A298 DB_DATA 1
RANGE $A298-$A299 DB_DATA 1
RANGE $A299-$A29B DW_DATA 1
RANGE $A29B-$A29D DW_DATA 1
RANGE $A29D-$A29F DW_DATA 1
RANGE $A29F-$A2A1 DW_DATA 1
RANGE $A2A1-$A2A2 DB_DATA 1
RANGE $A2A2-$A2A3 DB_DATA 1
RANGE $A2A3-$A2A4 DB_DATA 1
RANGE $A2A4-$A2A5 DB_DATA 1
RANGE $A2A5-$A2A7 DW_DATA 1
RANGE $A2A7-$A2A8 DB_DATA 1
RANGE $A2A8-$A2A9 DB_DATA 1
RANGE $A2A9-$A2AB DW_DATA 1
RANGE $A2AB-$A2AD DW_DATA 1
RANGE $A2AD-$A2AF DW_DATA 1
RANGE $A2AF-$A2B1 DW_DATA 1
RANGE $A2B1-$A2B2 DB_DATA 1
RANGE $A2B2-$A2B3 DB_DATA 1
RANGE $A2B3-$A2B4 DB_DATA 1
RANGE $A2B4-$A2B5 DB_DATA 1
RANGE $A2B5-$A2B7 DW_DATA 1
RANGE $A2B7-$A2B9 DW_DATA 1
RANGE $A2B9-$A2BB DW_DATA 1
RANGE $A2BB-$A2BD DW_DATA 1
RANGE $A2BD-$A2BE DB_DATA 1
RANGE $A2BE-$A2BF DB_DATA 1
RANGE $A2BF-$A2C0 DB_DATA 1
RANGE $A2C0-$A2C1 DB_DATA 1
RANGE $A2C1-$A2C3 DW_DATA 1
RANGE $A2C3-$A2C5 DW_DATA 1
RANGE $A2C5-$A2C7 DW_DATA 1
RANGE $A2C7-$A2C9 DW_DATA 1
RANGE $A2C9-$A2CA DB_DATA 1
RANGE $A2CA-$A2CB DB_DATA 1
RANGE $A2CB-$A2CC DB_DATA 1
RANGE $A2CC-$A2CD DB_DATA 1
RANGE $A2CD-$A2CF DW_DATA 1
RANGE $A2CF-$A2D1 DW_DATA 1
RANGE $A2D1-$A2D3 DW_DATA 1
RANGE $A2D3-$A2D5 DW_DATA 1
RANGE $A2D5-$A2D6 DB_DATA 1
RANGE $A2D6-$A2D7 DB_DATA 1
RANGE $A2D7-$A2D8 DB_DATA 1
RANGE $A2D8-$A2D9 DB_DATA 1
RANGE $A2D9-$A2DB DW_DATA 1
RANGE $A2DB-$A2DC DB_DATA 1
RANGE $A2DC-$A2DD DB_DATA 1
RANGE $A2DD-$A2DF DW_DATA 1
RANGE $A2DF-$A2E1 DW_DATA 1
RANGE $A2E1-$A2E3 DW_DATA 1
RANGE $A2E3-$A2E5 DW_DATA 1
RANGE $A2E5-$A2E6 DB_DATA 1
RANGE $A2E6-$A2E7 DB_DATA 1
RANGE $A2E7-$A2E8 DB_DATA 1
RANGE $A2E8-$A2E9 DB_DATA 1
RANGE $A2E9-$A2EB DW_DATA 1
RANGE $A2EB-$A2ED DW_DATA 1
RANGE $A2ED-$A2EF DW_DATA 1
RANGE $A2EF-$A2F1 DW_DATA 1
RANGE $A2F1-$A2F2 DB_DATA 1
RANGE $A2F2-$A2F3 DB_DATA 1
RANGE $A2F3-$A2F4 DB_DATA 1
RANGE $A2F4-$A2F5 DB_DATA 1
RANGE $A2F5-$A2F7 DW_DATA 1
RANGE $A2F7-$A2F9 DW_DATA 1
RANGE $A2F9-$A2FB DW_DATA 1
RANGE $A2FB-$A2FD DW_DATA 1
RANGE $A2FD-$A2FE DB_DATA 1
RANGE $A2FE-$A2FF DB_DATA 1
RANGE $A2FF-$A300 DB_DATA 1
RANGE $A300-$A301 DB_DATA 1
RANGE $A301-$A303 DW_DATA 1
RANGE $A303-$A305 DW_DATA 1
RANGE $A305-$A307 DW_DATA 1
RANGE $A307-$A309 DW_DATA 1
RANGE $A309-$A30A DB_DATA 1
RANGE $A30A-$A30B DB_DATA 1
RANGE $A30B-$A30C DB_DATA 1
RANGE $A30C-$A30D DB_DATA 1
RANGE $A30D-$A30F DW_DATA 1
RANGE $A30F-$A310 DB_DATA 1
RANGE $A310-$A311 DB_DATA 1
RANGE $A311-$A313 DW_DATA 1
RANGE $A313-$A315 DW_DATA 1
RANGE $A315-$A317 DW_DATA 1
RANGE $A317-$A319 DW_DATA 1
RANGE $A319-$A31A DB_DATA 1
RANGE $A31A-$A31B DB_DATA 1
RANGE $A31B-$A31C DB_DATA 1
RANGE $A31C-$A31D DB_DATA 1
RANGE $A31D-$A31F DW_DATA 1
RANGE $A31F-$A321 DW_DATA 1
RANGE $A321-$A323 DW_DATA 1
RANGE $A323-$A325 DW_DATA 1
RANGE $A325-$A326 DB_DATA 1
RANGE $A326-$A327 DB_DATA 1
RANGE $A327-$A328 DB_DATA 1
RANGE $A328-$A329 DB_DATA 1
RANGE $A329-$A32B DW_DATA 1
RANGE $A32B-$A32D DW_DATA 1
RANGE $A32D-$A32F DW_DATA 1
RANGE $A32F-$A331 DW_DATA 1
RANGE $A331-$A332 DB_DATA 1
RANGE $A332-$A333 DB_DATA 1
RANGE $A333-$A334 DB_DATA 1
RANGE $A334-$A335 DB_DATA 1
RANGE $A335-$A337 DW_DATA 1
RANGE $A337-$A339 DW_DATA 1
RANGE $A339-$A33B DW_DATA 1
RANGE $A33B-$A33D DW_DATA 1
RANGE $A33D-$A33E DB_DATA 1
RANGE $A33E-$A33F DB_DATA 1
RANGE $A33F-$A340 DB_DATA 1
RANGE $A340-$A341 DB_DATA 1
RANGE $A341-$A343 DW_DATA 1
RANGE $A343-$A344 DB_DATA 1
RANGE $A344-$A345 DB_DATA 1
RANGE $A345-$A347 DW_DATA 1
RANGE $A347-$A349 DW_DATA 1
RANGE $A349-$A34B DW_DATA 1
RANGE $A34B-$A34D DW_DATA 1
RANGE $A34D-$A34E DB_DATA 1
RANGE $A34E-$A34F DB_DATA 1
RANGE $A34F-$A350 DB_DATA 1
RANGE $A350-$A351 DB_DATA 1
RANGE $A351-$A353 DW_DATA 1
RANGE $A353-$A355 DW_DATA 1
RANGE $A355-$A357 DW_DATA 1
RANGE $A357-$A359 DW_DATA 1
RANGE $A359-$A35A DB_DATA 1
RANGE $A35A-$A35B DB_DATA 1
RANGE $A35B-$A35C DB_DATA 1
RANGE $A35C-$A35D DB_DATA 1
RANGE $A35D-$A35F DW_DATA 1
RANGE $A35F-$A361 DW_DATA 1
RANGE $A361-$A363 DW_DATA 1
RANGE $A363-$A365 DW_DATA 1
RANGE $A365-$A366 DB_DATA 1
RANGE $A366-$A367 DB_DATA 1
RANGE $A367-$A368 DB_DATA 1
RANGE $A368-$A369 DB_DATA 1
RANGE $A369-$A36B DW_DATA 1
RANGE $A36B-$A36D DW_DATA 1
RANGE $A36D-$A36F DW_DATA 1
RANGE $A36F-$A371 DW_DATA 1
RANGE $A371-$A372 DB_DATA 1
RANGE $A372-$A373 DB_DATA 1
RANGE $A373-$A374 DB_DATA 1
RANGE $A374-$A375 DB_DATA 1
RANGE $A375-$A377 DW_DATA 1
RANGE $A377-$A378 DB_DATA 1
RANGE $A378-$A379 DB_DATA 1
RANGE $A379-$A37B DW_DATA 1
RANGE $A37B-$A37D DW_DATA 1
RANGE $A37D-$A37F DW_DATA 1
RANGE $A37F-$A381 DW_DATA 1
RANGE $A381-$A382 DB_DATA 1
RANGE $A382-$A383 DB_DATA 1
RANGE $A383-$A384 DB_DATA 1
RANGE $A384-$A385 DB_DATA 1
RANGE $A385-$A387 DW_DATA 1
RANGE $A387-$A389 DW_DATA 1
RANGE $A389-$A38B DW_DATA 1
RANGE $A38B-$A38D DW_DATA 1
RANGE $A38D-$A38E DB_DATA 1
RANGE $A38E-$A38F DB_DATA 1
RANGE $A38F-$A390 DB_DATA 1
RANGE $A390-$A391 DB_DATA 1
RANGE $A391-$A393 DW_DATA 1
RANGE $A393-$A395 DW_DATA 1
RANGE $A395-$A397 DW_DATA 1
RANGE $A397-$A399 DW_DATA 1
RANGE $A399-$A39A DB_DATA 1
RANGE $A39A-$A39B DB_DATA 1
RANGE $A39B-$A39C DB_DATA 1
RANGE $A39C-$A39D DB_DATA 1
RANGE $A39D-$A39F DW_DATA 1
RANGE $A39F-$A3A1 DW_DATA 1
RANGE $A3A1-$A3A3 DW_DATA 1
RANGE $A3A3-$A3A5 DW_DATA 1
RANGE $A3A5-$A3A6 DB_DATA 1
RANGE $A3A6-$A3A7 DB_DATA 1
RANGE $A3A7-$A3A8 DB_DATA 1
RANGE $A3A8-$A3A9 DB_DATA 1
RANGE $A3A9-$A3AB DW_DATA 1
RANGE $A3AB-$A3AC DB_DATA 1
RANGE $A3AC-$A3AD DB_DATA 1
RANGE $A3AD-$A3AF DW_DATA 1
RANGE $A3AF-$A3B1 DW_DATA 1
RANGE $A3B1-$A3B3 DW_DATA 1
RANGE $A3B3-$A3B5 DW_DATA 1
RANGE $A3B5-$A3B6 DB_DATA 1
RANGE $A3B6-$A3B7 DB_DATA 1
RANGE $A3B7-$A3B8 DB_DATA 1
RANGE $A3B8-$A3B9 DB_DATA 1
RANGE $A3B9-$A3BB DW_DATA 1
RANGE $A3BB-$A3BD DW_DATA 1
RANGE $A3BD-$A3BF DW_DATA 1
RANGE $A3BF-$A3C1 DW_DATA 1
RANGE $A3C1-$A3C2 DB_DATA 1
RANGE $A3C2-$A3C3 DB_DATA 1
RANGE $A3C3-$A3C4 DB_DATA 1
RANGE $A3C4-$A3C5 DB_DATA 1
RANGE $A3C5-$A3C7 DW_DATA 1
RANGE $A3C7-$A3C9 DW_DATA 1
RANGE $A3C9-$A3CB DW_DATA 1
RANGE $A3CB-$A3CD DW_DATA 1
RANGE $A3CD-$A3CE DB_DATA 1
RANGE $A3CE-$A3CF DB_DATA 1
RANGE $A3CF-$A3D0 DB_DATA 1
RANGE $A3D0-$A3D1 DB_DATA 1
RANGE $A3D1-$A3D3 DW_DATA 1
RANGE $A3D3-$A3D5 DW_DATA 1
RANGE $A3D5-$A3D7 DW_DATA 1
RANGE $A3D7-$A3D9 DW_DATA 1
RANGE $A3D9-$A3DA DB_DATA 1
RANGE $A3DA-$A3DB DB_DATA 1
RANGE $A3DB-$A3DC DB_DATA 1
RANGE $A3DC-$A3DD DB_DATA 1
RANGE $A3DD-$A3DF DW_DATA 1
RANGE $A3DF-$A3E0 DB_DATA 1
RANGE $A3E0-$A3E1 DB_DATA 1
RANGE $A3E1-$A3E3 DW_DATA 1
RANGE $A3E3-$A3E5 DW_DATA 1
RANGE $A3E5-$A3E7 DW_DATA 1
RANGE $A3E7-$A3E9 DW_DATA 1
RANGE $A3E9-$A3EA DB_DATA 1
RANGE $A3EA-$A3EB DB_DATA 1
RANGE $A3EB-$A3EC DB_DATA 1
RANGE $A3EC-$A3ED DB_DATA 1
RANGE $A3ED-$A3EF DW_DATA 1
RANGE $A3EF-$A3F1 DW_DATA 1
RANGE $A3F1-$A3F3 DW_DATA 1
RANGE $A3F3-$A3F5 DW_DATA 1
RANGE $A3F5-$A3F6 DB_DATA 1
RANGE $A3F6-$A3F7 DB_DATA 1
RANGE $A3F7-$A3F8 DB_DATA 1
RANGE $A3F8-$A3F9 DB_DATA 1
RANGE $A3F9-$A3FB DW_DATA 1
RANGE $A3FB-$A3FD DW_DATA 1
RANGE $A3FD-$A3FF DW_DATA 1
RANGE $A3FF-$A401 DW_DATA 1
RANGE $A401-$A402 DB_DATA 1
RANGE $A402-$A403 DB_DATA 1
RANGE $A403-$A404 DB_DATA 1
RANGE $A404-$A405 DB_DATA 1
RANGE $A405-$A407 DW_DATA 1
RANGE $A407-$A409 DW_DATA 1
RANGE $A409-$A40B DW_DATA 1
RANGE $A40B-$A40D DW_DATA 1
RANGE $A40D-$A40E DB_DATA 1
RANGE $A40E-$A40F DB_DATA 1
RANGE $A40F-$A410 DB_DATA 1
RANGE $A410-$A411 DB_DATA 1
RANGE $A411-$A413 DW_DATA 1
RANGE $A413-$A414 DB_DATA 1
RANGE $A414-$A415 DB_DATA 1
RANGE $A415-$A417 DW_DATA 1
RANGE $A417-$A419 DW_DATA 1
RANGE $A419-$A41B DW_DATA 1
RANGE $A41B-$A41D DW_DATA 1
RANGE $A41D-$A41E DB_DATA 1
RANGE $A41E-$A41F DB_DATA 1
RANGE $A41F-$A420 DB_DATA 1
RANGE $A420-$A421 DB_DATA 1
RANGE $A421-$A423 DW_DATA 1
RANGE $A423-$A425 DW_DATA 1
RANGE $A425-$A427 DW_DATA 1
RANGE $A427-$A429 DW_DATA 1
RANGE $A429-$A42A DB_DATA 1
RANGE $A42A-$A42B DB_DATA 1
RANGE $A42B-$A42C DB_DATA 1
RANGE $A42C-$A42D DB_DATA 1
RANGE $A42D-$A42F DW_DATA 1
RANGE $A42F-$A431 DW_DATA 1
RANGE $A431-$A433 DW_DATA 1
RANGE $A433-$A435 DW_DATA 1
RANGE $A435-$A436 DB_DATA 1
RANGE $A436-$A437 DB_DATA 1
RANGE $A437-$A438 DB_DATA 1
RANGE $A438-$A439 DB_DATA 1
RANGE $A439-$A43B DW_DATA 1
RANGE $A43B-$A43D DW_DATA 1
RANGE $A43D-$A43F DW_DATA 1
RANGE $A43F-$A441 DW_DATA 1
RANGE $A441-$A442 DB_DATA 1
RANGE $A442-$A443 DB_DATA 1
RANGE $A443-$A444 DB_DATA 1
RANGE $A444-$A445 DB_DATA 1
RANGE $A445-$A447 DW_DATA 1
RANGE $A447-$A448 DB_DATA 1
RANGE $A448-$A449 DB_DATA 1
RANGE $A449-$A44B DW_DATA 1
RANGE $A44B-$A44D DW_DATA 1
RANGE $A44D-$A44F DW_DATA 1
RANGE $A44F-$A451 DW_DATA 1
RANGE $A451-$A452 DB_DATA 1
RANGE $A452-$A453 DB_DATA 1
RANGE $A453-$A454 DB_DATA 1
RANGE $A454-$A455 DB_DATA 1
RANGE $A455-$A457 DW_DATA 1
RANGE $A457-$A459 DW_DATA 1
RANGE $A459-$A45B DW_DATA 1
RANGE $A45B-$A45D DW_DATA 1
RANGE $A45D-$A45E DB_DATA 1
RANGE $A45E-$A45F DB_DATA 1
RANGE $A45F-$A460 DB_DATA 1
RANGE $A460-$A461 DB_DATA 1
RANGE $A461-$A463 DW_DATA 1
RANGE $A463-$A465 DW_DATA 1
RANGE $A465-$A467 DW_DATA 1
RANGE $A467-$A469 DW_DATA 1
RANGE $A469-$A46A DB_DATA 1
RANGE $A46A-$A46B DB_DATA 1
RANGE $A46B-$A46C DB_DATA 1
RANGE $A46C-$A46D DB_DATA 1
RANGE $A46D-$A46F DW_DATA 1
RANGE $A46F-$A471 DW_DATA 1
RANGE $A471-$A473 DW_DATA 1
RANGE $A473-$A475 DW_DATA 1
RANGE $A475-$A476 DB_DATA 1
RANGE $A476-$A477 DB_DATA 1
RANGE $A477-$A478 DB_DATA 1
RANGE $A478-$A479 DB_DATA 1
RANGE $A479-$A47B DW_DATA 1
RANGE $A47B-$A47C DB_DATA 1
RANGE $A47C-$A47D DB_DATA 1
RANGE $A47D-$A47F DW_DATA 1
RANGE $A47F-$A481 DW_DATA 1
RANGE $A481-$A483 DW_DATA 1
RANGE $A483-$A485 DW_DATA 1
RANGE $A485-$A486 DB_DATA 1
RANGE $A486-$A487 DB_DATA 1
RANGE $A487-$A488 DB_DATA 1
RANGE $A488-$A489 DB_DATA 1
RANGE $A489-$A48B DW_DATA 1
RANGE $A48B-$A48D DW_DATA 1
RANGE $A48D-$A48F DW_DATA 1
RANGE $A48F-$A491 DW_DATA 1
RANGE $A491-$A492 DB_DATA 1
RANGE $A492-$A493 DB_DATA 1
RANGE $A493-$A494 DB_DATA 1
RANGE $A494-$A495 DB_DATA 1
RANGE $A495-$A497 DW_DATA 1
RANGE $A497-$A499 DW_DATA 1
RANGE $A499-$A49B DW_DATA 1
RANGE $A49B-$A49D DW_DATA 1
RANGE $A49D-$A49E DB_DATA 1
RANGE $A49E-$A49F DB_DATA 1
RANGE $A49F-$A4A0 DB_DATA 1
RANGE $A4A0-$A4A1 DB_DATA 1
RANGE $A4A1-$A4A3 DW_DATA 1
RANGE $A4A3-$A4A5 DW_DATA 1
RANGE $A4A5-$A4A7 DW_DATA 1
RANGE $A4A7-$A4A9 DW_DATA 1
RANGE $A4A9-$A4AA DB_DATA 1
RANGE $A4AA-$A4AB DB_DATA 1
RANGE $A4AB-$A4AC DB_DATA 1
RANGE $A4AC-$A4AD DB_DATA 1
RANGE $A4AD-$A4AF DW_DATA 1
RANGE $A4AF-$A4B0 DB_DATA 1
RANGE $A4B0-$A4B1 DB_DATA 1
RANGE $A4B1-$A4B3 DW_DATA 1
RANGE $A4B3-$A4B5 DW_DATA 1
RANGE $A4B5-$A4B7 DW_DATA 1
RANGE $A4B7-$A4B9 DW_DATA 1
RANGE $A4B9-$A4BA DB_DATA 1
RANGE $A4BA-$A4BB DB_DATA 1
RANGE $A4BB-$A4BC DB_DATA 1
RANGE $A4BC-$A4BD DB_DATA 1
RANGE $A4BD-$A4BF DW_DATA 1
RANGE $A4BF-$A4C1 DW_DATA 1
RANGE $A4C1-$A4C3 DW_DATA 1
RANGE $A4C3-$A4C5 DW_DATA 1
RANGE $A4C5-$A4C6 DB_DATA 1
RANGE $A4C6-$A4C7 DB_DATA 1
RANGE $A4C7-$A4C8 DB_DATA 1
RANGE $A4C8-$A4C9 DB_DATA 1
RANGE $A4C9-$A4CB DW_DATA 1
RANGE $A4CB-$A4CD DW_DATA 1
RANGE $A4CD-$A4CF DW_DATA 1
RANGE $A4CF-$A4D1 DW_DATA 1
RANGE $A4D1-$A4D2 DB_DATA 1
RANGE $A4D2-$A4D3 DB_DATA 1
RANGE $A4D3-$A4D4 DB_DATA 1
RANGE $A4D4-$A4D5 DB_DATA 1
RANGE $A4D5-$A4D7 DW_DATA 1
RANGE $A4D7-$A4D9 DW_DATA 1
RANGE $A4D9-$A4DB DW_DATA 1
RANGE $A4DB-$A4DD DW_DATA 1
RANGE $A4DD-$A4DE DB_DATA 1
RANGE $A4DE-$A4DF DB_DATA 1
RANGE $A4DF-$A4E0 DB_DATA 1
RANGE $A4E0-$A4E1 DB_DATA 1
RANGE $A4E1-$A4E3 DW_DATA 1
RANGE $A4E3-$A4E4 DB_DATA 1
RANGE $A4E4-$A4E5 DB_DATA 1
RANGE $A4E5-$A4E7 DW_DATA 1
RANGE $A4E7-$A4E9 DW_DATA 1
RANGE $A4E9-$A4EB DW_DATA 1
RANGE $A4EB-$A4ED DW_DATA 1
RANGE $A4ED-$A4EE DB_DATA 1
RANGE $A4EE-$A4EF DB_DATA 1
RANGE $A4EF-$A4F0 DB_DATA 1
RANGE $A4F0-$A4F1 DB_DATA 1
RANGE $A4F1-$A4F3 DW_DATA 1
RANGE $A4F3-$A4F5 DW_DATA 1
RANGE $A4F5-$A4F7 DW_DATA 1
RANGE $A4F7-$A4F9 DW_DATA 1
RANGE $A4F9-$A4FA DB_DATA 1
RANGE $A4FA-$A4FB DB_DATA 1
RANGE $A4FB-$A4FC DB_DATA 1
RANGE $A4FC-$A4FD DB_DATA 1
RANGE $A4FD-$A4FF DW_DATA 1
RANGE $A4FF-$A501 DW_DATA 1
RANGE $A501-$A503 DW_DATA 1
RANGE $A503-$A505 DW_DATA 1
RANGE $A505-$A506 DB_DATA 1
RANGE $A506-$A507 DB_DATA 1
RANGE $A507-$A508 DB_DATA 1
RANGE $A508-$A509 DB_DATA 1
RANGE $A509-$A50B DW_DATA 1
RANGE $A50B-$A50D DW_DATA 1
RANGE $A50D-$A50F DW_DATA 1
RANGE $A50F-$A511 DW_DATA 1
RANGE $A511-$A512 DB_DATA 1
RANGE $A512-$A513 DB_DATA 1
RANGE $A513-$A514 DB_DATA 1
RANGE $A514-$A515 DB_DATA 1
RANGE $A515-$A517 DW_DATA 1
RANGE $A517-$A518 DB_DATA 1
RANGE $A518-$A51A DW_DATA 1
RANGE $A51A-$A51C DB_DATA 2
RANGE $A51C-$A51E DW_DATA 1
RANGE $A51E-$A51F DB_DATA 1
RANGE $A51F-$A521 DW_DATA 1
RANGE $A521-$A523 DB_DATA 2
RANGE $A523-$A525 DW_DATA 1
RANGE $A525-$A526 DB_DATA 1
RANGE $A526-$A528 DW_DATA 1
RANGE $A528-$A52A DB_DATA 2
RANGE $A52A-$A52C DW_DATA 1
RANGE $A52C-$A52D DB_DATA 1
RANGE $A52D-$A52F DW_DATA 1
RANGE $A52F-$A531 DB_DATA 2
RANGE $A531-$A533 DW_DATA 1
RANGE $A533-$A534 DB_DATA 1
RANGE $A534-$A536 DW_DATA 1
RANGE $A536-$A538 DB_DATA 2
RANGE $A538-$A53A DW_DATA 1
RANGE $A53A-$A53B DB_DATA 1
RANGE $A53B-$A53D DW_DATA 1
RANGE $A53D-$A53F DB_DATA 2
RANGE $A53F-$A541 DW_DATA 1
RANGE $A541-$A542 DB_DATA 1
RANGE $A542-$A544 DW_DATA 1
RANGE $A544-$A546 DB_DATA 2
RANGE $A546-$A548 DW_DATA 1
RANGE $A548-$A549 DB_DATA 1
RANGE $A549-$A54B DW_DATA 1
RANGE $A54B-$A54D DB_DATA 2
RANGE $A54D-$A54F DW_DATA 1
RANGE $A54F-$A550 DB_DATA 1
RANGE $A550-$A552 DW_DATA 1
RANGE $A552-$A554 DB_DATA 2
RANGE $A554-$A556 DW_DATA 1
RANGE $A556-$A557 DB_DATA 1
RANGE $A557-$A559 DW_DATA 1
RANGE $A559-$A55B DB_DATA 2
RANGE $A55B-$A55D DW_DATA 1
RANGE $A55D-$A55E DB_DATA 1
RANGE $A55E-$A560 DW_DATA 1
RANGE $A560-$A562 DB_DATA 2
RANGE $A562-$A564 DW_DATA 1
RANGE $A564-$A566 DW_DATA 1
RANGE $A566-$A568 DW_DATA 1
RANGE $A568-$A56A DW_DATA 1
RANGE $A56A-$A56C DW_DATA 1
RANGE $A56C-$A56E DW_DATA 1
RANGE $A56E-$A570 DW_DATA 1
RANGE $A570-$A572 DW_DATA 1
RANGE $A572-$A574 DW_DATA 1
RANGE $A574-$A576 DW_DATA 1
RANGE $A576-$A578 DW_DATA 1
RANGE $A578-$A57A DW_DATA 1
RANGE $A57A-$A57C DW_DATA 1
RANGE $A57C-$A57E DW_DATA 1
RANGE $A57E-$A583 DB_DATA 5
RANGE $A583-$A588 DB_DATA 5
RANGE $A588-$A58D DB_DATA 5
RANGE $A58D-$A590 DB_DATA 3
RANGE $A590-$A595 DB_DATA 5
RANGE $A595-$A59A DB_DATA 5
RANGE $A59A-$A59F DB_DATA 5
RANGE $A59F-$A5A2 DB_DATA 3
RANGE $A5A2-$A5A5 DB_DATA 3
RANGE $A5A5-$A5A8 DB_DATA 3
RANGE $A5A8-$A5AB DB_DATA 3
RANGE $A5AB-$A5B0 DB_DATA 5
RANGE $A5B0-$A5B5 DB_DATA 5
RANGE $A5B5-$A5B8 DB_DATA 3
RANGE $A5B8-$A5BB DB_DATA 3
RANGE $A5BB-$A5BE DB_DATA 3
RANGE $A5BE-$A5C1 DB_DATA 3
RANGE $A5C1-$A5C4 DB_DATA 3
RANGE $A5C4-$A5C7 DB_DATA 3
RANGE $A5C7-$A5CC DB_DATA 5
RANGE $A5CC-$A5D1 DB_DATA 5
RANGE $A5D1-$A5D6 DB_DATA 5
RANGE $A5D6-$A5DB DB_DATA 5
RANGE $A5DB-$A5DE DB_DATA 3
RANGE $A5DE-$A5E3 DB_DATA 5
RANGE $A5E3-$A5E8 DB_DATA 5
RANGE $A5E8-$A5ED DB_DATA 5
RANGE $A5ED-$A5F0 DB_DATA 3
RANGE $A5F0-$A5F3 DB_DATA 3
RANGE $A5F3-$A5F6 DB_DATA 3
RANGE $A5F6-$A5F9 DB_DATA 3
RANGE $A5F9-$A5FE DB_DATA 5
RANGE $A5FE-$A603 DB_DATA 5
RANGE $A603-$A606 DB_DATA 3
RANGE $A606-$A609 DB_DATA 3
RANGE $A609-$A60C DB_DATA 3
RANGE $A60C-$A60F DB_DATA 3
RANGE $A60F-$A612 DB_DATA 3
RANGE $A612-$A615 DB_DATA 3
RANGE $A615-$A61A DB_DATA 5
RANGE $A61A-$A61F DB_DATA 5
RANGE $A61F-$A624 DB_DATA 5
RANGE $A624-$A629 DB_DATA 5
RANGE $A629-$A62C DB_DATA 3
RANGE $A62C-$A631 DB_DATA 5
RANGE $A631-$A636 DB_DATA 5
RANGE $A636-$A63B DB_DATA 5
RANGE $A63B-$A640 DB_DATA 5
RANGE $A640-$A645 DB_DATA 5
RANGE $A645-$A648 DB_DATA 3
RANGE $A648-$A64B DB_DATA 3
RANGE $A64B-$A650 DB_DATA 5
RANGE $A650-$A655 DB_DATA 5
RANGE $A655-$A658 DB_DATA 3
RANGE $A658-$A65B DB_DATA 3
RANGE $A65B-$A65E DB_DATA 3
RANGE $A65E-$A661 DB_DATA 3
RANGE $A661-$A664 DB_DATA 3
RANGE $A664-$A667 DB_DATA 3
RANGE $A667-$A66C DB_DATA 5
RANGE $A66C-$A671 DB_DATA 5
RANGE $A671-$A676 DB_DATA 5
RANGE $A676-$A67B DB_DATA 5
RANGE $A67B-$A67E DB_DATA 3
RANGE $A67E-$A683 DB_DATA 5
RANGE $A683-$A688 DB_DATA 5
RANGE $A688-$A68D DB_DATA 5
RANGE $A68D-$A692 DB_DATA 5
RANGE $A692-$A697 DB_DATA 5
RANGE $A697-$A69A DB_DATA 3
RANGE $A69A-$A69D DB_DATA 3
RANGE $A69D-$A6A2 DB_DATA 5
RANGE $A6A2-$A6A7 DB_DATA 5
RANGE $A6A7-$A6AA DB_DATA 3
RANGE $A6AA-$A6AD DB_DATA 3
RANGE $A6AD-$A6B0 DB_DATA 3
RANGE $A6B0-$A6B3 DB_DATA 3
RANGE $A6B3-$A6B6 DB_DATA 3
RANGE $A6B6-$A6B9 DB_DATA 3
RANGE $A6B9-$A6BE DB_DATA 5
RANGE $A6BE-$A6C3 DB_DATA 5
RANGE $A6C3-$A6C8 DB_DATA 5
RANGE $A6C8-$A6CD DB_DATA 5
RANGE $A6CD-$A6D0 DB_DATA 3
RANGE $A6D0-$A6D5 DB_DATA 5
RANGE $A6D5-$A6DA DB_DATA 5
RANGE $A6DA-$A6DF DB_DATA 5
RANGE $A6DF-$A6E2 DB_DATA 3
RANGE $A6E2-$A6E5 DB_DATA 3
RANGE $A6E5-$A6E8 DB_DATA 3
RANGE $A6E8-$A6EB DB_DATA 3
RANGE $A6EB-$A6F0 DB_DATA 5
RANGE $A6F0-$A6F5 DB_DATA 5
RANGE $A6F5-$A6F8 DB_DATA 3
RANGE $A6F8-$A6FB DB_DATA 3
RANGE $A6FB-$A6FE DB_DATA 3
RANGE $A6FE-$A701 DB_DATA 3
RANGE $A701-$A704 DB_DATA 3
RANGE $A704-$A707 DB_DATA 3
RANGE $A707-$A70C DB_DATA 5
RANGE $A70C-$A711 DB_DATA 5
RANGE $A711-$A716 DB_DATA 5
RANGE $A716-$A71B DB_DATA 5
RANGE $A71B-$A71E DB_DATA 3
RANGE $A71E-$A723 DB_DATA 5
RANGE $A723-$A728 DB_DATA 5
RANGE $A728-$A72D DB_DATA 5
RANGE $A72D-$A730 DB_DATA 3
RANGE $A730-$A733 DB_DATA 3
RANGE $A733-$A736 DB_DATA 3
RANGE $A736-$A739 DB_DATA 3
RANGE $A739-$A73E DB_DATA 5
RANGE $A73E-$A743 DB_DATA 5
RANGE $A743-$A746 DB_DATA 3
RANGE $A746-$A749 DB_DATA 3
RANGE $A749-$A74C DB_DATA 3
RANGE $A74C-$A74F DB_DATA 3
RANGE $A74F-$A752 DB_DATA 3
RANGE $A752-$A755 DB_DATA 3
RANGE $A755-$A75A DB_DATA 5
RANGE $A75A-$A75F DB_DATA 5
RANGE $A75F-$A764 DB_DATA 5
RANGE $A764-$A769 DB_DATA 5
RANGE $A769-$A76C DB_DATA 3
RANGE $A76C-$A771 DB_DATA 5
RANGE $A771-$A776 DB_DATA 5
RANGE $A776-$A77B DB_DATA 5
RANGE $A77B-$A77E DB_DATA 3
RANGE $A77E-$A781 DB_DATA 3
RANGE $A781-$A784 DB_DATA 3
RANGE $A784-$A787 DB_DATA 3
RANGE $A787-$A78C DB_DATA 5
RANGE $A78C-$A791 DB_DATA 5
RANGE $A791-$A796 DB_DATA 5
RANGE $A796-$A79B DB_DATA 5
RANGE $A79B-$A79E DB_DATA 3
RANGE $A79E-$A7A1 DB_DATA 3
RANGE $A7A1-$A7A4 DB_DATA 3
RANGE $A7A4-$A7A7 DB_DATA 3
RANGE $A7A7-$A7AC DB_DATA 5
RANGE $A7AC-$A7B1 DB_DATA 5
RANGE $A7B1-$A7B6 DB_DATA 5
RANGE $A7B6-$A7BB DB_DATA 5
RANGE $A7BB-$A7BE DB_DATA 3
RANGE $A7BE-$A7C3 DB_DATA 5
RANGE $A7C3-$A7C8 DB_DATA 5
RANGE $A7C8-$A7CD DB_DATA 5
RANGE $A7CD-$A7D0 DB_DATA 3
RANGE $A7D0-$A7D3 DB_DATA 3
RANGE $A7D3-$A7D6 DB_DATA 3
RANGE $A7D6-$A7D9 DB_DATA 3
RANGE $A7D9-$A7DE DB_DATA 5
RANGE $A7DE-$A7E3 DB_DATA 5
RANGE $A7E3-$A7E8 DB_DATA 5
RANGE $A7E8-$A7ED DB_DATA 5
RANGE $A7ED-$A7F0 DB_DATA 3
RANGE $A7F0-$A7F3 DB_DATA 3
RANGE $A7F3-$A7F6 DB_DATA 3
RANGE $A7F6-$A7F9 DB_DATA 3
RANGE $A7F9-$A7FE DB_DATA 5
RANGE $A7FE-$A803 DB_DATA 5
RANGE $A803-$A808 DB_DATA 5
RANGE $A808-$A80D DB_DATA 5
RANGE $A80D-$A810 DB_DATA 3
RANGE $A810-$A815 DB_DATA 5
RANGE $A815-$A81A DB_DATA 5
RANGE $A81A-$A81F DB_DATA 5
RANGE $A81F-$A822 DB_DATA 3
RANGE $A822-$A825 DB_DATA 3
RANGE $A825-$A828 DB_DATA 3
RANGE $A828-$A82B DB_DATA 3
RANGE $A82B-$A830 DB_DATA 5
RANGE $A830-$A835 DB_DATA 5
RANGE $A835-$A838 DB_DATA 3
RANGE $A838-$A83B DB_DATA 3
RANGE $A83B-$A83E DB_DATA 3
RANGE $A83E-$A841 DB_DATA 3
RANGE $A841-$A844 DB_DATA 3
RANGE $A844-$A847 DB_DATA 3
RANGE $A847-$A84C DB_DATA 5
RANGE $A84C-$A851 DB_DATA 5
RANGE $A851-$A856 DB_DATA 5
RANGE $A856-$A85B DB_DATA 5
RANGE $A85B-$A85E DB_DATA 3
RANGE $A85E-$A863 DB_DATA 5
RANGE $A863-$A868 DB_DATA 5
RANGE $A868-$A86D DB_DATA 5
RANGE $A86D-$A870 DB_DATA 3
RANGE $A870-$A873 DB_DATA 3
RANGE $A873-$A876 DB_DATA 3
RANGE $A876-$A879 DB_DATA 3
RANGE $A879-$A87E DB_DATA 5
RANGE $A87E-$A883 DB_DATA 5
RANGE $A883-$A886 DB_DATA 3
RANGE $A886-$A889 DB_DATA 3
RANGE $A889-$A88C DB_DATA 3
RANGE $A88C-$A88F DB_DATA 3
RANGE $A88F-$A892 DB_DATA 3
RANGE $A892-$A895 DB_DATA 3
RANGE $A895-$A89A DB_DATA 5
RANGE $A89A-$A89C DW_DATA 1
RANGE $A89C-$A89D DB_DATA 1
RANGE $A89D-$A89F DW_DATA 1
RANGE $A89F-$A8A1 DB_DATA 2
RANGE $A8A1-$A8A3 DW_DATA 1
RANGE $A8A3-$A8A4 DB_DATA 1
RANGE $A8A4-$A8A6 DW_DATA 1
RANGE $A8A6-$A8A8 DB_DATA 2
RANGE $A8A8-$A8AA DW_DATA 1
RANGE $A8AA-$A8AB DB_DATA 1
RANGE $A8AB-$A8AD DW_DATA 1
RANGE $A8AD-$A8AF DB_DATA 2
RANGE $A8AF-$A8B1 DW_DATA 1
RANGE $A8B1-$A8B2 DB_DATA 1
RANGE $A8B2-$A8B4 DW_DATA 1
RANGE $A8B4-$A8B6 DB_DATA 2
RANGE $A8B6-$A8B8 DW_DATA 1
RANGE $A8B8-$A8B9 DB_DATA 1
RANGE $A8B9-$A8BB DW_DATA 1
RANGE $A8BB-$A8BD DB_DATA 2
RANGE $A8BD-$A8BF DW_DATA 1
RANGE $A8BF-$A8C0 DB_DATA 1
RANGE $A8C0-$A8C2 DW_DATA 1
RANGE $A8C2-$A8C4 DB_DATA 2
RANGE $A8C4-$A8C6 DW_DATA 1
RANGE $A8C6-$A8C7 DB_DATA 1
RANGE $A8C7-$A8C9 DW_DATA 1
RANGE $A8C9-$A8CB DB_DATA 2
RANGE $A8CB-$A8CD DW_DATA 1
RANGE $A8CD-$A8CE DB_DATA 1
RANGE $A8CE-$A8D0 DW_DATA 1
RANGE $A8D0-$A8D2 DB_DATA 2
RANGE $A8D2-$A8D4 DW_DATA 1
RANGE $A8D4-$A8D5 DB_DATA 1
RANGE $A8D5-$A8D7 DW_DATA 1
RANGE $A8D7-$A8D9 DB_DATA 2
RANGE $A8D9-$A8DB DW_DATA 1
RANGE $A8DB-$A8DC DB_DATA 1
RANGE $A8DC-$A8DE DW_DATA 1
RANGE $A8DE-$A8E0 DB_DATA 2
RANGE $A8E0-$A8E2 DW_DATA 1
RANGE $A8E2-$A8E3 DB_DATA 1
RANGE $A8E3-$A8E5 DW_DATA 1
RANGE $A8E5-$A8E7 DB_DATA 2
RANGE $A8E7-$A8E9 DW_DATA 1
RANGE $A8E9-$A8EB DW_DATA 1
RANGE $A8EB-$A8ED DW_DATA 1
RANGE $A8ED-$A8EF DW_DATA 1
RANGE $A8EF-$A8F1 DW_DATA 1
RANGE $A8F1-$A8F3 DW_DATA 1
RANGE $A8F3-$A8F5 DW_DATA 1
RANGE $A8F5-$A8F7 DW_DATA 1
RANGE $A8F7-$A8F9 DW_DATA 1
RANGE $A8F9-$A8FB DW_DATA 1
RANGE $A8FB-$A8FD DW_DATA 1
RANGE $A8FD-$A8FF DW_DATA 1
RANGE $A8FF-$A901 DW_DATA 1
RANGE $A901-$A903 DW_DATA 1
RANGE $A903-$A908 DB_DATA 5
RANGE $A908-$A90D DB_DATA 5
RANGE $A90D-$A912 DB_DATA 5
RANGE $A912-$A917 DB_DATA 5
RANGE $A917-$A91C DB_DATA 5
RANGE $A91C-$A921 DB_DATA 5
RANGE $A921-$A926 DB_DATA 5
RANGE $A926-$A929 DB_DATA 3
RANGE $A929-$A92C DB_DATA 3
RANGE $A92C-$A92F DB_DATA 3
RANGE $A92F-$A934 DB_DATA 5
RANGE $A934-$A939 DB_DATA 5
RANGE $A939-$A93E DB_DATA 5
RANGE $A93E-$A943 DB_DATA 5
RANGE $A943-$A948 DB_DATA 5
RANGE $A948-$A94D DB_DATA 5
RANGE $A94D-$A952 DB_DATA 5
RANGE $A952-$A957 DB_DATA 5
RANGE $A957-$A95C DB_DATA 5
RANGE $A95C-$A95F DB_DATA 3
RANGE $A95F-$A964 DB_DATA 5
RANGE $A964-$A969 DB_DATA 5
RANGE $A969-$A96C DB_DATA 3
RANGE $A96C-$A96F DB_DATA 3
RANGE $A96F-$A972 DB_DATA 3
RANGE $A972-$A977 DB_DATA 5
RANGE $A977-$A97C DB_DATA 5
RANGE $A97C-$A97F DB_DATA 3
RANGE $A97F-$A984 DB_DATA 5
RANGE $A984-$A989 DB_DATA 5
RANGE $A989-$A98E DB_DATA 5
RANGE $A98E-$A993 DB_DATA 5
RANGE $A993-$A998 DB_DATA 5
RANGE $A998-$A99D DB_DATA 5
RANGE $A99D-$A9A2 DB_DATA 5
RANGE $A9A2-$A9A5 DB_DATA 3
RANGE $A9A5-$A9AA DB_DATA 5
RANGE $A9AA-$A9AF DB_DATA 5
RANGE $A9AF-$A9B2 DB_DATA 3
RANGE $A9B2-$A9B5 DB_DATA 3
RANGE $A9B5-$A9B8 DB_DATA 3
RANGE $A9B8-$A9BD DB_DATA 5
RANGE $A9BD-$A9C2 DB_DATA 5
RANGE $A9C2-$A9C5 DB_DATA 3
RANGE $A9C5-$A9CA DB_DATA 5
RANGE $A9CA-$A9CF DB_DATA 5
RANGE $A9CF-$A9D4 DB_DATA 5
RANGE $A9D4-$A9D9 DB_DATA 5
RANGE $A9D9-$A9DE DB_DATA 5
RANGE $A9DE-$A9E3 DB_DATA 5
RANGE $A9E3-$A9E8 DB_DATA 5
RANGE $A9E8-$A9EB DB_DATA 3
RANGE $A9EB-$A9F0 DB_DATA 5
RANGE $A9F0-$A9F5 DB_DATA 5
RANGE $A9F5-$A9F8 DB_DATA 3
RANGE $A9F8-$A9FB DB_DATA 3
RANGE $A9FB-$A9FE DB_DATA 3
RANGE $A9FE-$AA03 DB_DATA 5
RANGE $AA03-$AA08 DB_DATA 5
RANGE $AA08-$AA0B DB_DATA 3
RANGE $AA0B-$AA10 DB_DATA 5
RANGE $AA10-$AA15 DB_DATA 5
RANGE $AA15-$AA1A DB_DATA 5
RANGE $AA1A-$AA1F DB_DATA 5
RANGE $AA1F-$AA24 DB_DATA 5
RANGE $AA24-$AA29 DB_DATA 5
RANGE $AA29-$AA2E DB_DATA 5
RANGE $AA2E-$AA33 DB_DATA 5
RANGE $AA33-$AA38 DB_DATA 5
RANGE $AA38-$AA3B DB_DATA 3
RANGE $AA3B-$AA3E DB_DATA 3
RANGE $AA3E-$AA41 DB_DATA 3
RANGE $AA41-$AA46 DB_DATA 5
RANGE $AA46-$AA4B DB_DATA 5
RANGE $AA4B-$AA50 DB_DATA 5
RANGE $AA50-$AA55 DB_DATA 5
RANGE $AA55-$AA5A DB_DATA 5
RANGE $AA5A-$AA5F DB_DATA 5
RANGE $AA5F-$AA64 DB_DATA 5
RANGE $AA64-$AA69 DB_DATA 5
RANGE $AA69-$AA6E DB_DATA 5
RANGE $AA6E-$AA71 DB_DATA 3
RANGE $AA71-$AA76 DB_DATA 5
RANGE $AA76-$AA7B DB_DATA 5
RANGE $AA7B-$AA7E DB_DATA 3
RANGE $AA7E-$AA81 DB_DATA 3
RANGE $AA81-$AA84 DB_DATA 3
RANGE $AA84-$AA89 DB_DATA 5
RANGE $AA89-$AA8E DB_DATA 5
RANGE $AA8E-$AA91 DB_DATA 3
RANGE $AA91-$AA96 DB_DATA 5
RANGE $AA96-$AA9B DB_DATA 5
RANGE $AA9B-$AAA0 DB_DATA 5
RANGE $AAA0-$AAA5 DB_DATA 5
RANGE $AAA5-$AAAA DB_DATA 5
RANGE $AAAA-$AAAF DB_DATA 5
RANGE $AAAF-$AAB4 DB_DATA 5
RANGE $AAB4-$AAB7 DB_DATA 3
RANGE $AAB7-$AABC DB_DATA 5
RANGE $AABC-$AAC1 DB_DATA 5
RANGE $AAC1-$AAC4 DB_DATA 3
RANGE $AAC4-$AAC7 DB_DATA 3
RANGE $AAC7-$AACA DB_DATA 3
RANGE $AACA-$AACF DB_DATA 5
RANGE $AACF-$AAD4 DB_DATA 5
RANGE $AAD4-$AAD7 DB_DATA 3
RANGE $AAD7-$AADC DB_DATA 5
RANGE $AADC-$AAE1 DB_DATA 5
RANGE $AAE1-$AAE6 DB_DATA 5
RANGE $AAE6-$AAEB DB_DATA 5
RANGE $AAEB-$AAF0 DB_DATA 5
RANGE $AAF0-$AAF5 DB_DATA 5
RANGE $AAF5-$AAFA DB_DATA 5
RANGE $AAFA-$AAFD DB_DATA 3
RANGE $AAFD-$AB02 DB_DATA 5
RANGE $AB02-$AB07 DB_DATA 5
RANGE $AB07-$AB0A DB_DATA 3
RANGE $AB0A-$AB0D DB_DATA 3
RANGE $AB0D-$AB10 DB_DATA 3
RANGE $AB10-$AB15 DB_DATA 5
RANGE $AB15-$AB1A DB_DATA 5
RANGE $AB1A-$AB1D DB_DATA 3
RANGE $AB1D-$AB22 DB_DATA 5
RANGE $AB22-$AB27 DB_DATA 5
RANGE $AB27-$AB2C DB_DATA 5
RANGE $AB2C-$AB31 DB_DATA 5
RANGE $AB31-$AB36 DB_DATA 5
RANGE $AB36-$AB3B DB_DATA 5
RANGE $AB3B-$AB40 DB_DATA 5
RANGE $AB40-$AB45 DB_DATA 5
RANGE $AB45-$AB4A DB_DATA 5
RANGE $AB4A-$AB4D DB_DATA 3
RANGE $AB4D-$AB50 DB_DATA 3
RANGE $AB50-$AB53 DB_DATA 3
RANGE $AB53-$AB58 DB_DATA 5
RANGE $AB58-$AB5D DB_DATA 5
RANGE $AB5D-$AB62 DB_DATA 5
RANGE $AB62-$AB67 DB_DATA 5
RANGE $AB67-$AB6C DB_DATA 5
RANGE $AB6C-$AB71 DB_DATA 5
RANGE $AB71-$AB76 DB_DATA 5
RANGE $AB76-$AB7B DB_DATA 5
RANGE $AB7B-$AB80 DB_DATA 5
RANGE $AB80-$AB85 DB_DATA 5
RANGE $AB85-$AB8A DB_DATA 5
RANGE $AB8A-$AB8D DB_DATA 3
RANGE $AB8D-$AB90 DB_DATA 3
RANGE $AB90-$AB93 DB_DATA 3
RANGE $AB93-$AB98 DB_DATA 5
RANGE $AB98-$AB9D DB_DATA 5
RANGE $AB9D-$ABA2 DB_DATA 5
RANGE $ABA2-$ABA7 DB_DATA 5
RANGE $ABA7-$ABA9 DW_DATA 1
RANGE $ABA9-$ABAA DB_DATA 1
RANGE $ABAA-$ABAC DW_DATA 1
RANGE $ABAC-$ABAE DB_DATA 2
RANGE $ABAE-$ABB0 DW_DATA 1
RANGE $ABB0-$ABB2 DW_DATA 1
RANGE $ABB2-$ABB4 DW_DATA 1
RANGE $ABB4-$ABB6 DW_DATA 1
RANGE $ABB6-$ABB8 DW_DATA 1
RANGE $ABB8-$ABBA DW_DATA 1
RANGE $ABBA-$ABBC DW_DATA 1
RANGE $ABBC-$ABBE DW_DATA 1
RANGE $ABBE-$ABC0 DW_DATA 1
RANGE $ABC0-$ABC5 DB_DATA 5
RANGE $ABC5-$ABCA DB_DATA 5
RANGE $ABCA-$ABCF DB_DATA 5
RANGE $ABCF-$ABD2 DB_DATA 3
RANGE $ABD2-$ABD5 DB_DATA 3
RANGE $ABD5-$ABD8 DB_DATA 3
RANGE $ABD8-$ABDB DB_DATA 3
RANGE $ABDB-$ABDE DB_DATA 3
RANGE $ABDE-$ABE1 DB_DATA 3
RANGE $ABE1-$ABE6 DB_DATA 5
RANGE $ABE6-$ABE9 DB_DATA 3
RANGE $ABE9-$ABEC DB_DATA 3
RANGE $ABEC-$ABEF DB_DATA 3
RANGE $ABEF-$ABF4 DB_DATA 5
RANGE $ABF4-$ABF9 DB_DATA 5
RANGE $ABF9-$ABFE DB_DATA 5
RANGE $ABFE-$AC03 DB_DATA 5
RANGE $AC03-$AC06 DB_DATA 3
RANGE $AC06-$AC09 DB_DATA 3
RANGE $AC09-$AC0C DB_DATA 3
RANGE $AC0C-$AC0F DB_DATA 3
RANGE $AC0F-$AC12 DB_DATA 3
RANGE $AC12-$AC15 DB_DATA 3
RANGE $AC15-$AC1A DB_DATA 5
RANGE $AC1A-$AC1D DB_DATA 3
RANGE $AC1D-$AC20 DB_DATA 3
RANGE $AC20-$AC23 DB_DATA 3
RANGE $AC23-$AC28 DB_DATA 5
RANGE $AC28-$AC2D DB_DATA 5
RANGE $AC2D-$AC32 DB_DATA 5
RANGE $AC32-$AC37 DB_DATA 5
RANGE $AC37-$AC3A DB_DATA 3
RANGE $AC3A-$AC3D DB_DATA 3
RANGE $AC3D-$AC40 DB_DATA 3
RANGE $AC40-$AC43 DB_DATA 3
RANGE $AC43-$AC46 DB_DATA 3
RANGE $AC46-$AC49 DB_DATA 3
RANGE $AC49-$AC4E DB_DATA 5
RANGE $AC4E-$AC51 DB_DATA 3
RANGE $AC51-$AC54 DB_DATA 3
RANGE $AC54-$AC57 DB_DATA 3
RANGE $AC57-$AC5C DB_DATA 5
RANGE $AC5C-$AC5E DW_DATA 1
RANGE $AC5E-$AC5F DB_DATA 1
RANGE $AC5F-$AC61 DW_DATA 1
RANGE $AC61-$AC63 DB_DATA 2
RANGE $AC63-$AC65 DW_DATA 1
RANGE $AC65-$AC66 DB_DATA 1
RANGE $AC66-$AC68 DW_DATA 1
RANGE $AC68-$AC6B DB_DATA 3
RANGE $AC6B-$AC6D DW_DATA 1
RANGE $AC6D-$AC6F DW_DATA 1
RANGE $AC6F-$AC71 DW_DATA 1
RANGE $AC71-$AC73 DW_DATA 1
RANGE $AC73-$AC75 DW_DATA 1
RANGE $AC75-$AC77 DW_DATA 1
RANGE $AC77-$AC79 DW_DATA 1
RANGE $AC79-$AC7B DW_DATA 1
RANGE $AC7B-$AC7D DW_DATA 1
RANGE $AC7D-$AC7F DW_DATA 1
RANGE $AC7F-$AC81 DW_DATA 1
RANGE $AC81-$AC83 DW_DATA 1
RANGE $AC83-$AC85 DW_DATA 1
RANGE $AC85-$AC87 DW_DATA 1
RANGE $AC87-$AC8C DB_DATA 5
RANGE $AC8C-$AC91 DB_DATA 5
RANGE $AC91-$AC96 DB_DATA 5
RANGE $AC96-$AC9B DB_DATA 5
RANGE $AC9B-$ACA0 DB_DATA 5
RANGE $ACA0-$ACA5 DB_DATA 5
RANGE $ACA5-$ACA8 DB_DATA 3
RANGE $ACA8-$ACAB DB_DATA 3
RANGE $ACAB-$ACAE DB_DATA 3
RANGE $ACAE-$ACB1 DB_DATA 3
RANGE $ACB1-$ACB4 DB_DATA 3
RANGE $ACB4-$ACB7 DB_DATA 3
RANGE $ACB7-$ACBC DB_DATA 5
RANGE $ACBC-$ACC1 DB_DATA 5
RANGE $ACC1-$ACC6 DB_DATA 5
RANGE $ACC6-$ACCB DB_DATA 5
RANGE $ACCB-$ACD0 DB_DATA 5
RANGE $ACD0-$ACD5 DB_DATA 5
RANGE $ACD5-$ACDA DB_DATA 5
RANGE $ACDA-$ACDF DB_DATA 5
RANGE $ACDF-$ACE4 DB_DATA 5
RANGE $ACE4-$ACE9 DB_DATA 5
RANGE $ACE9-$ACEE DB_DATA 5
RANGE $ACEE-$ACF3 DB_DATA 5
RANGE $ACF3-$ACF8 DB_DATA 5
RANGE $ACF8-$ACFD DB_DATA 5
RANGE $ACFD-$AD02 DB_DATA 5
RANGE $AD02-$AD07 DB_DATA 5
RANGE $AD07-$AD0C DB_DATA 5
RANGE $AD0C-$AD0F DB_DATA 3
RANGE $AD0F-$AD12 DB_DATA 3
RANGE $AD12-$AD15 DB_DATA 3
RANGE $AD15-$AD18 DB_DATA 3
RANGE $AD18-$AD1B DB_DATA 3
RANGE $AD1B-$AD1E DB_DATA 3
RANGE $AD1E-$AD23 DB_DATA 5
RANGE $AD23-$AD28 DB_DATA 5
RANGE $AD28-$AD2D DB_DATA 5
RANGE $AD2D-$AD32 DB_DATA 5
RANGE $AD32-$AD37 DB_DATA 5
RANGE $AD37-$AD3C DB_DATA 5
RANGE $AD3C-$AD41 DB_DATA 5
RANGE $AD41-$AD46 DB_DATA 5
RANGE $AD46-$AD4B DB_DATA 5
RANGE $AD4B-$AD50 DB_DATA 5
RANGE $AD50-$AD55 DB_DATA 5
RANGE $AD55-$AD5A DB_DATA 5
RANGE $AD5A-$AD5F DB_DATA 5
RANGE $AD5F-$AD64 DB_DATA 5
RANGE $AD64-$AD69 DB_DATA 5
RANGE $AD69-$AD6E DB_DATA 5
RANGE $AD6E-$AD73 DB_DATA 5
RANGE $AD73-$AD76 DB_DATA 3
RANGE $AD76-$AD79 DB_DATA 3
RANGE $AD79-$AD7C DB_DATA 3
RANGE $AD7C-$AD7F DB_DATA 3
RANGE $AD7F-$AD82 DB_DATA 3
RANGE $AD82-$AD87 DB_DATA 5
RANGE $AD87-$AD8C DB_DATA 5
RANGE $AD8C-$AD91 DB_DATA 5
RANGE $AD91-$AD96 DB_DATA 5
RANGE $AD96-$AD9B DB_DATA 5
RANGE $AD9B-$ADA0 DB_DATA 5
RANGE $ADA0-$ADA5 DB_DATA 5
RANGE $ADA5-$ADAA DB_DATA 5
RANGE $ADAA-$ADAF DB_DATA 5
RANGE $ADAF-$ADB4 DB_DATA 5
RANGE $ADB4-$ADB9 DB_DATA 5
RANGE $ADB9-$ADBE DB_DATA 5
RANGE $ADBE-$ADC3 DB_DATA 5
RANGE $ADC3-$ADC8 DB_DATA 5
RANGE $ADC8-$ADCD DB_DATA 5
RANGE $ADCD-$ADD2 DB_DATA 5
RANGE $ADD2-$ADD7 DB_DATA 5
RANGE $ADD7-$ADDC DB_DATA 5
RANGE $ADDC-$ADDF DB_DATA 3
RANGE $ADDF-$ADE4 DB_DATA 5
RANGE $ADE4-$ADE9 DB_DATA 5
RANGE $ADE9-$ADEC DB_DATA 3
RANGE $ADEC-$ADEF DB_DATA 3
RANGE $ADEF-$ADF4 DB_DATA 5
RANGE $ADF4-$ADF9 DB_DATA 5
RANGE $ADF9-$ADFE DB_DATA 5
RANGE $ADFE-$AE03 DB_DATA 5
RANGE $AE03-$AE08 DB_DATA 5
RANGE $AE08-$AE0D DB_DATA 5
RANGE $AE0D-$AE12 DB_DATA 5
RANGE $AE12-$AE17 DB_DATA 5
RANGE $AE17-$AE1C DB_DATA 5
RANGE $AE1C-$AE21 DB_DATA 5
RANGE $AE21-$AE26 DB_DATA 5
RANGE $AE26-$AE2B DB_DATA 5
RANGE $AE2B-$AE30 DB_DATA 5
RANGE $AE30-$AE35 DB_DATA 5
RANGE $AE35-$AE3A DB_DATA 5
RANGE $AE3A-$AE3F DB_DATA 5
RANGE $AE3F-$AE44 DB_DATA 5
RANGE $AE44-$AE49 DB_DATA 5
RANGE $AE49-$AE4C DB_DATA 3
RANGE $AE4C-$AE4F DB_DATA 3
RANGE $AE4F-$AE52 DB_DATA 3
RANGE $AE52-$AE55 DB_DATA 3
RANGE $AE55-$AE58 DB_DATA 3
RANGE $AE58-$AE5B DB_DATA 3
RANGE $AE5B-$AE60 DB_DATA 5
RANGE $AE60-$AE65 DB_DATA 5
RANGE $AE65-$AE6A DB_DATA 5
RANGE $AE6A-$AE6F DB_DATA 5
RANGE $AE6F-$AE74 DB_DATA 5
RANGE $AE74-$AE79 DB_DATA 5
RANGE $AE79-$AE7E DB_DATA 5
RANGE $AE7E-$AE83 DB_DATA 5
RANGE $AE83-$AE88 DB_DATA 5
RANGE $AE88-$AE8D DB_DATA 5
RANGE $AE8D-$AE92 DB_DATA 5
RANGE $AE92-$AE97 DB_DATA 5
RANGE $AE97-$AE9C DB_DATA 5
RANGE $AE9C-$AEA1 DB_DATA 5
RANGE $AEA1-$AEA6 DB_DATA 5
RANGE $AEA6-$AEAB DB_DATA 5
RANGE $AEAB-$AEB0 DB_DATA 5
RANGE $AEB0-$AEB3 DB_DATA 3
RANGE $AEB3-$AEB6 DB_DATA 3
RANGE $AEB6-$AEB9 DB_DATA 3
RANGE $AEB9-$AEBC DB_DATA 3
RANGE $AEBC-$AEBF DB_DATA 3
RANGE $AEBF-$AEC2 DB_DATA 3
RANGE $AEC2-$AEC7 DB_DATA 5
RANGE $AEC7-$AECA DB_DATA 3
RANGE $AECA-$AECF DB_DATA 5
RANGE $AECF-$AED4 DB_DATA 5
RANGE $AED4-$AED9 DB_DATA 5
RANGE $AED9-$AEDE DB_DATA 5
RANGE $AEDE-$AEE3 DB_DATA 5
RANGE $AEE3-$AEE8 DB_DATA 5
RANGE $AEE8-$AEED DB_DATA 5
RANGE $AEED-$AEF2 DB_DATA 5
RANGE $AEF2-$AEF7 DB_DATA 5
RANGE $AEF7-$AEFC DB_DATA 5
RANGE $AEFC-$AF01 DB_DATA 5
RANGE $AF01-$AF06 DB_DATA 5
RANGE $AF06-$AF0B DB_DATA 5
RANGE $AF0B-$AF10 DB_DATA 5
RANGE $AF10-$AF15 DB_DATA 5
RANGE $AF15-$AF18 DB_DATA 3
RANGE $AF18-$AF1B DB_DATA 3
RANGE $AF1B-$AF1E DB_DATA 3
RANGE $AF1E-$AF21 DB_DATA 3
RANGE $AF21-$AF24 DB_DATA 3
RANGE $AF24-$AF27 DB_DATA 3
RANGE $AF27-$AF2C DB_DATA 5
RANGE $AF2C-$AF2F DB_DATA 3
RANGE $AF2F-$AF34 DB_DATA 5
RANGE $AF34-$AF39 DB_DATA 5
RANGE $AF39-$AF3E DB_DATA 5
RANGE $AF3E-$AF43 DB_DATA 5
RANGE $AF43-$AF48 DB_DATA 5
RANGE $AF48-$AF4D DB_DATA 5
RANGE $AF4D-$AF52 DB_DATA 5
RANGE $AF52-$AF57 DB_DATA 5
RANGE $AF57-$AF5C DB_DATA 5
RANGE $AF5C-$AF61 DB_DATA 5
RANGE $AF61-$AF66 DB_DATA 5
RANGE $AF66-$AF6B DB_DATA 5
RANGE $AF6B-$AF70 DB_DATA 5
RANGE $AF70-$AF75 DB_DATA 5
RANGE $AF75-$AF7A DB_DATA 5
RANGE $AF7A-$AF7D DB_DATA 3
RANGE $AF7D-$AF82 DB_DATA 5
RANGE $AF82-$AF87 DB_DATA 5
RANGE $AF87-$AF8C DB_DATA 5
RANGE $AF8C-$AF91 DB_DATA 5
RANGE $AF91-$AF96 DB_DATA 5
RANGE $AF96-$AF99 DB_DATA 3
RANGE $AF99-$AF9C DB_DATA 3
RANGE $AF9C-$AFA1 DB_DATA 5
RANGE $AFA1-$AFA6 DB_DATA 5
RANGE $AFA6-$AFAB DB_DATA 5
RANGE $AFAB-$AFB0 DB_DATA 5
RANGE $AFB0-$AFB5 DB_DATA 5
RANGE $AFB5-$AFBA DB_DATA 5
RANGE $AFBA-$AFBF DB_DATA 5
RANGE $AFBF-$AFC4 DB_DATA 5
RANGE $AFC4-$AFC9 DB_DATA 5
RANGE $AFC9-$AFCE DB_DATA 5
RANGE $AFCE-$AFD3 DB_DATA 5
RANGE $AFD3-$AFD8 DB_DATA 5
RANGE $AFD8-$AFDD DB_DATA 5
RANGE $AFDD-$AFE2 DB_DATA 5
RANGE $AFE2-$AFE7 DB_DATA 5
RANGE $AFE7-$AFEA DB_DATA 3
RANGE $AFEA-$AFED DB_DATA 3
RANGE $AFED-$AFF0 DB_DATA 3
RANGE $AFF0-$AFF3 DB_DATA 3
RANGE $AFF3-$AFF6 DB_DATA 3
RANGE $AFF6-$AFF9 DB_DATA 3
RANGE $AFF9-$AFFE DB_DATA 5
RANGE $AFFE-$B003 DB_DATA 5
RANGE $B003-$B008 DB_DATA 5
RANGE $B008-$B00D DB_DATA 5
RANGE $B00D-$B012 DB_DATA 5
RANGE $B012-$B017 DB_DATA 5
RANGE $B017-$B01C DB_DATA 5
RANGE $B01C-$B021 DB_DATA 5
RANGE $B021-$B026 DB_DATA 5
RANGE $B026-$B02B DB_DATA 5
RANGE $B02B-$B030 DB_DATA 5
RANGE $B030-$B035 DB_DATA 5
RANGE $B035-$B03A DB_DATA 5
RANGE $B03A-$B03F DB_DATA 5
RANGE $B03F-$B044 DB_DATA 5
RANGE $B044-$B049 DB_DATA 5
RANGE $B049-$B04E DB_DATA 5
RANGE $B04E-$B051 DB_DATA 3
RANGE $B051-$B054 DB_DATA 3
RANGE $B054-$B057 DB_DATA 3
RANGE $B057-$B05A DB_DATA 3
RANGE $B05A-$B05D DB_DATA 3
RANGE $B05D-$B060 DB_DATA 3
RANGE $B060-$B065 DB_DATA 5
RANGE $B065-$B06A DB_DATA 5
RANGE $B06A-$B06F DB_DATA 5
RANGE $B06F-$B074 DB_DATA 5
RANGE $B074-$B079 DB_DATA 5
RANGE $B079-$B07E DB_DATA 5
RANGE $B07E-$B083 DB_DATA 5
RANGE $B083-$B088 DB_DATA 5
RANGE $B088-$B08D DB_DATA 5
RANGE $B08D-$B092 DB_DATA 5
RANGE $B092-$B097 DB_DATA 5
RANGE $B097-$B099 DW_DATA 1
RANGE $B099-$B09A DB_DATA 1
RANGE $B09A-$B09C DW_DATA 1
RANGE $B09C-$B09E DB_DATA 2
RANGE $B09E-$B0A0 DW_DATA 1
RANGE $B0A0-$B0A1 DB_DATA 1
RANGE $B0A1-$B0A3 DW_DATA 1
RANGE $B0A3-$B0A5 DB_DATA 2
RANGE $B0A5-$B0A7 DW_DATA 1
RANGE $B0A7-$B0A9 DW_DATA 1
RANGE $B0A9-$B0AB DW_DATA 1
RANGE $B0AB-$B0AD DW_DATA 1
RANGE $B0AD-$B0AF DW_DATA 1
RANGE $B0AF-$B0B1 DW_DATA 1
RANGE $B0B1-$B0B3 DW_DATA 1
RANGE $B0B3-$B0B5 DW_DATA 1
RANGE $B0B5-$B0B7 DW_DATA 1
RANGE $B0B7-$B0B9 DW_DATA 1
RANGE $B0B9-$B0BB DW_DATA 1
RANGE $B0BB-$B0BD DW_DATA 1
RANGE $B0BD-$B0BF DW_DATA 1
RANGE $B0BF-$B0C1 DW_DATA 1
RANGE $B0C1-$B0C6 DB_DATA 5
RANGE $B0C6-$B0CB DB_DATA 5
RANGE $B0CB-$B0CE DB_DATA 3
RANGE $B0CE-$B0D1 DB_DATA 3
RANGE $B0D1-$B0D4 DB_DATA 3
RANGE $B0D4-$B0D7 DB_DATA 3
RANGE $B0D7-$B0DA DB_DATA 3
RANGE $B0DA-$B0DD DB_DATA 3
RANGE $B0DD-$B0E2 DB_DATA 5
RANGE $B0E2-$B0E5 DB_DATA 3
RANGE $B0E5-$B0E8 DB_DATA 3
RANGE $B0E8-$B0EB DB_DATA 3
RANGE $B0EB-$B0EE DB_DATA 3
RANGE $B0EE-$B0F1 DB_DATA 3
RANGE $B0F1-$B0F4 DB_DATA 3
RANGE $B0F4-$B0F9 DB_DATA 5
RANGE $B0F9-$B0FC DB_DATA 3
RANGE $B0FC-$B0FF DB_DATA 3
RANGE $B0FF-$B102 DB_DATA 3
RANGE $B102-$B105 DB_DATA 3
RANGE $B105-$B108 DB_DATA 3
RANGE $B108-$B10B DB_DATA 3
RANGE $B10B-$B110 DB_DATA 5
RANGE $B110-$B115 DB_DATA 5
RANGE $B115-$B11A DB_DATA 5
RANGE $B11A-$B11F DB_DATA 5
RANGE $B11F-$B122 DB_DATA 3
RANGE $B122-$B125 DB_DATA 3
RANGE $B125-$B128 DB_DATA 3
RANGE $B128-$B12B DB_DATA 3
RANGE $B12B-$B12E DB_DATA 3
RANGE $B12E-$B131 DB_DATA 3
RANGE $B131-$B136 DB_DATA 5
RANGE $B136-$B139 DB_DATA 3
RANGE $B139-$B13C DB_DATA 3
RANGE $B13C-$B13F DB_DATA 3
RANGE $B13F-$B142 DB_DATA 3
RANGE $B142-$B145 DB_DATA 3
RANGE $B145-$B148 DB_DATA 3
RANGE $B148-$B14D DB_DATA 5
RANGE $B14D-$B150 DB_DATA 3
RANGE $B150-$B153 DB_DATA 3
RANGE $B153-$B156 DB_DATA 3
RANGE $B156-$B159 DB_DATA 3
RANGE $B159-$B15C DB_DATA 3
RANGE $B15C-$B15F DB_DATA 3
RANGE $B15F-$B164 DB_DATA 5
RANGE $B164-$B169 DB_DATA 5
RANGE $B169-$B16E DB_DATA 5
RANGE $B16E-$B173 DB_DATA 5
RANGE $B173-$B176 DB_DATA 3
RANGE $B176-$B179 DB_DATA 3
RANGE $B179-$B17C DB_DATA 3
RANGE $B17C-$B17F DB_DATA 3
RANGE $B17F-$B182 DB_DATA 3
RANGE $B182-$B185 DB_DATA 3
RANGE $B185-$B18A DB_DATA 5
RANGE $B18A-$B18D DB_DATA 3
RANGE $B18D-$B190 DB_DATA 3
RANGE $B190-$B193 DB_DATA 3
RANGE $B193-$B196 DB_DATA 3
RANGE $B196-$B199 DB_DATA 3
RANGE $B199-$B19C DB_DATA 3
RANGE $B19C-$B1A1 DB_DATA 5
RANGE $B1A1-$B1A4 DB_DATA 3
RANGE $B1A4-$B1A7 DB_DATA 3
RANGE $B1A7-$B1AA DB_DATA 3
RANGE $B1AA-$B1AD DB_DATA 3
RANGE $B1AD-$B1B0 DB_DATA 3
RANGE $B1B0-$B1B3 DB_DATA 3
RANGE $B1B3-$B1B8 DB_DATA 5
RANGE $B1B8-$B1BD DB_DATA 5
RANGE $B1BD-$B1C2 DB_DATA 5
RANGE $B1C2-$B1C7 DB_DATA 5
RANGE $B1C7-$B1CA DB_DATA 3
RANGE $B1CA-$B1CD DB_DATA 3
RANGE $B1CD-$B1D0 DB_DATA 3
RANGE $B1D0-$B1D3 DB_DATA 3
RANGE $B1D3-$B1D6 DB_DATA 3
RANGE $B1D6-$B1D9 DB_DATA 3
RANGE $B1D9-$B1DE DB_DATA 5
RANGE $B1DE-$B1E1 DB_DATA 3
RANGE $B1E1-$B1E4 DB_DATA 3
RANGE $B1E4-$B1E7 DB_DATA 3
RANGE $B1E7-$B1EA DB_DATA 3
RANGE $B1EA-$B1ED DB_DATA 3
RANGE $B1ED-$B1F0 DB_DATA 3
RANGE $B1F0-$B1F5 DB_DATA 5
RANGE $B1F5-$B1F8 DB_DATA 3
RANGE $B1F8-$B1FB DB_DATA 3
RANGE $B1FB-$B1FE DB_DATA 3
RANGE $B1FE-$B201 DB_DATA 3
RANGE $B201-$B204 DB_DATA 3
RANGE $B204-$B207 DB_DATA 3
RANGE $B207-$B20C DB_DATA 5
RANGE $B20C-$B211 DB_DATA 5
RANGE $B211-$B216 DB_DATA 5
RANGE $B216-$B21B DB_DATA 5
RANGE $B21B-$B21E DB_DATA 3
RANGE $B21E-$B221 DB_DATA 3
RANGE $B221-$B224 DB_DATA 3
RANGE $B224-$B227 DB_DATA 3
RANGE $B227-$B22A DB_DATA 3
RANGE $B22A-$B22D DB_DATA 3
RANGE $B22D-$B232 DB_DATA 5
RANGE $B232-$B235 DB_DATA 3
RANGE $B235-$B238 DB_DATA 3
RANGE $B238-$B23B DB_DATA 3
RANGE $B23B-$B23E DB_DATA 3
RANGE $B23E-$B241 DB_DATA 3
RANGE $B241-$B244 DB_DATA 3
RANGE $B244-$B249 DB_DATA 5
RANGE $B249-$B24C DB_DATA 3
RANGE $B24C-$B24F DB_DATA 3
RANGE $B24F-$B252 DB_DATA 3
RANGE $B252-$B255 DB_DATA 3
RANGE $B255-$B258 DB_DATA 3
RANGE $B258-$B25B DB_DATA 3
RANGE $B25B-$B260 DB_DATA 5
RANGE $B260-$B265 DB_DATA 5
RANGE $B265-$B26A DB_DATA 5
RANGE $B26A-$B26F DB_DATA 5
RANGE $B26F-$B272 DB_DATA 3
RANGE $B272-$B275 DB_DATA 3
RANGE $B275-$B278 DB_DATA 3
RANGE $B278-$B27B DB_DATA 3
RANGE $B27B-$B27E DB_DATA 3
RANGE $B27E-$B281 DB_DATA 3
RANGE $B281-$B286 DB_DATA 5
RANGE $B286-$B289 DB_DATA 3
RANGE $B289-$B28C DB_DATA 3
RANGE $B28C-$B28F DB_DATA 3
RANGE $B28F-$B292 DB_DATA 3
RANGE $B292-$B295 DB_DATA 3
RANGE $B295-$B298 DB_DATA 3
RANGE $B298-$B29D DB_DATA 5
RANGE $B29D-$B2A0 DB_DATA 3
RANGE $B2A0-$B2A3 DB_DATA 3
RANGE $B2A3-$B2A6 DB_DATA 3
RANGE $B2A6-$B2A9 DB_DATA 3
RANGE $B2A9-$B2AC DB_DATA 3
RANGE $B2AC-$B2AF DB_DATA 3
RANGE $B2AF-$B2B4 DB_DATA 5
RANGE $B2B4-$B2B9 DB_DATA 5
RANGE $B2B9-$B2BE DB_DATA 5
RANGE $B2BE-$B2C3 DB_DATA 5
RANGE $B2C3-$B2C6 DB_DATA 3
RANGE $B2C6-$B2C9 DB_DATA 3
RANGE $B2C9-$B2CC DB_DATA 3
RANGE $B2CC-$B2CF DB_DATA 3
RANGE $B2CF-$B2D2 DB_DATA 3
RANGE $B2D2-$B2D5 DB_DATA 3
RANGE $B2D5-$B2DA DB_DATA 5
RANGE $B2DA-$B2DD DB_DATA 3
RANGE $B2DD-$B2E0 DB_DATA 3
RANGE $B2E0-$B2E3 DB_DATA 3
RANGE $B2E3-$B2E6 DB_DATA 3
RANGE $B2E6-$B2E9 DB_DATA 3
RANGE $B2E9-$B2EC DB_DATA 3
RANGE $B2EC-$B2F1 DB_DATA 5
RANGE $B2F1-$B2F4 DB_DATA 3
RANGE $B2F4-$B2F7 DB_DATA 3
RANGE $B2F7-$B2FA DB_DATA 3
RANGE $B2FA-$B2FD DB_DATA 3
RANGE $B2FD-$B300 DB_DATA 3
RANGE $B300-$B303 DB_DATA 3
RANGE $B303-$B308 DB_DATA 5
RANGE $B308-$B30D DB_DATA 5
RANGE $B30D-$B312 DB_DATA 5
RANGE $B312-$B317 DB_DATA 5
RANGE $B317-$B31A DB_DATA 3
RANGE $B31A-$B31D DB_DATA 3
RANGE $B31D-$B320 DB_DATA 3
RANGE $B320-$B323 DB_DATA 3
RANGE $B323-$B326 DB_DATA 3
RANGE $B326-$B329 DB_DATA 3
RANGE $B329-$B32E DB_DATA 5
RANGE $B32E-$B331 DB_DATA 3
RANGE $B331-$B334 DB_DATA 3
RANGE $B334-$B337 DB_DATA 3
RANGE $B337-$B33A DB_DATA 3
RANGE $B33A-$B33D DB_DATA 3
RANGE $B33D-$B340 DB_DATA 3
RANGE $B340-$B345 DB_DATA 5
RANGE $B345-$B348 DB_DATA 3
RANGE $B348-$B34B DB_DATA 3
RANGE $B34B-$B34E DB_DATA 3
RANGE $B34E-$B351 DB_DATA 3
RANGE $B351-$B354 DB_DATA 3
RANGE $B354-$B357 DB_DATA 3
RANGE $B357-$B35C DB_DATA 5
RANGE $B35C-$B361 DB_DATA 5
RANGE $B361-$B366 DB_DATA 5
RANGE $B366-$B369 DB_DATA 3
RANGE $B369-$B36C DB_DATA 3
RANGE $B36C-$B36F DB_DATA 3
RANGE $B36F-$B372 DB_DATA 3
RANGE $B372-$B375 DB_DATA 3
RANGE $B375-$B378 DB_DATA 3
RANGE $B378-$B37D DB_DATA 5
RANGE $B37D-$B380 DB_DATA 3
RANGE $B380-$B383 DB_DATA 3
RANGE $B383-$B386 DB_DATA 3
RANGE $B386-$B389 DB_DATA 3
RANGE $B389-$B38C DB_DATA 3
RANGE $B38C-$B38F DB_DATA 3
RANGE $B38F-$B394 DB_DATA 5
RANGE $B394-$B397 DB_DATA 3
RANGE $B397-$B39A DB_DATA 3
RANGE $B39A-$B39D DB_DATA 3
RANGE $B39D-$B3A0 DB_DATA 3
RANGE $B3A0-$B3A3 DB_DATA 3
RANGE $B3A3-$B3A6 DB_DATA 3
RANGE $B3A6-$B3AB DB_DATA 5
RANGE $B3AB-$B3B0 DB_DATA 5
RANGE $B3B0-$B3B5 DB_DATA 5
RANGE $B3B5-$B3B8 DB_DATA 3
RANGE $B3B8-$B3BB DB_DATA 3
RANGE $B3BB-$B3BE DB_DATA 3
RANGE $B3BE-$B3C1 DB_DATA 3
RANGE $B3C1-$B3C4 DB_DATA 3
RANGE $B3C4-$B3C7 DB_DATA 3
RANGE $B3C7-$B3CC DB_DATA 5
RANGE $B3CC-$B3CF DB_DATA 3
RANGE $B3CF-$B3D2 DB_DATA 3
RANGE $B3D2-$B3D5 DB_DATA 3
RANGE $B3D5-$B3D8 DB_DATA 3
RANGE $B3D8-$B3DB DB_DATA 3
RANGE $B3DB-$B3DE DB_DATA 3
RANGE $B3DE-$B3E3 DB_DATA 5
RANGE $B3E3-$B3E6 DB_DATA 3
RANGE $B3E6-$B3E9 DB_DATA 3
RANGE $B3E9-$B3EC DB_DATA 3
RANGE $B3EC-$B3EF DB_DATA 3
RANGE $B3EF-$B3F2 DB_DATA 3
RANGE $B3F2-$B3F5 DB_DATA 3
RANGE $B3F5-$B3FA DB_DATA 5
RANGE $B3FA-$B3FC DW_DATA 1
RANGE $B3FC-$B3FD DB_DATA 1
RANGE $B3FD-$B3FF DW_DATA 1
RANGE $B3FF-$B401 DB_DATA 2
RANGE $B401-$B403 DW_DATA 1
RANGE $B403-$B404 DB_DATA 1
RANGE $B404-$B406 DW_DATA 1
RANGE $B406-$B408 DB_DATA 2
RANGE $B408-$B40A DW_DATA 1
RANGE $B40A-$B40C DW_DATA 1
RANGE $B40C-$B40E DW_DATA 1
RANGE $B40E-$B410 DW_DATA 1
RANGE $B410-$B412 DW_DATA 1
RANGE $B412-$B414 DW_DATA 1
RANGE $B414-$B416 DW_DATA 1
RANGE $B416-$B418 DW_DATA 1
RANGE $B418-$B41A DW_DATA 1
RANGE $B41A-$B41C DW_DATA 1
RANGE $B41C-$B41E DW_DATA 1
RANGE $B41E-$B420 DW_DATA 1
RANGE $B420-$B422 DW_DATA 1
RANGE $B422-$B424 DW_DATA 1
RANGE $B424-$B429 DB_DATA 5
RANGE $B429-$B42E DB_DATA 5
RANGE $B42E-$B433 DB_DATA 5
RANGE $B433-$B436 DB_DATA 3
RANGE $B436-$B43B DB_DATA 5
RANGE $B43B-$B440 DB_DATA 5
RANGE $B440-$B445 DB_DATA 5
RANGE $B445-$B448 DB_DATA 3
RANGE $B448-$B44D DB_DATA 5
RANGE $B44D-$B452 DB_DATA 5
RANGE $B452-$B455 DB_DATA 3
RANGE $B455-$B458 DB_DATA 3
RANGE $B458-$B45D DB_DATA 5
RANGE $B45D-$B462 DB_DATA 5
RANGE $B462-$B467 DB_DATA 5
RANGE $B467-$B46C DB_DATA 5
RANGE $B46C-$B471 DB_DATA 5
RANGE $B471-$B476 DB_DATA 5
RANGE $B476-$B47B DB_DATA 5
RANGE $B47B-$B480 DB_DATA 5
RANGE $B480-$B485 DB_DATA 5
RANGE $B485-$B48A DB_DATA 5
RANGE $B48A-$B48D DB_DATA 3
RANGE $B48D-$B492 DB_DATA 5
RANGE $B492-$B497 DB_DATA 5
RANGE $B497-$B49C DB_DATA 5
RANGE $B49C-$B49F DB_DATA 3
RANGE $B49F-$B4A2 DB_DATA 3
RANGE $B4A2-$B4A5 DB_DATA 3
RANGE $B4A5-$B4A8 DB_DATA 3
RANGE $B4A8-$B4AB DB_DATA 3
RANGE $B4AB-$B4B0 DB_DATA 5
RANGE $B4B0-$B4B5 DB_DATA 5
RANGE $B4B5-$B4BA DB_DATA 5
RANGE $B4BA-$B4BD DB_DATA 3
RANGE $B4BD-$B4C2 DB_DATA 5
RANGE $B4C2-$B4C7 DB_DATA 5
RANGE $B4C7-$B4CC DB_DATA 5
RANGE $B4CC-$B4D1 DB_DATA 5
RANGE $B4D1-$B4D6 DB_DATA 5
RANGE $B4D6-$B4DB DB_DATA 5
RANGE $B4DB-$B4DE DB_DATA 3
RANGE $B4DE-$B4E3 DB_DATA 5
RANGE $B4E3-$B4E8 DB_DATA 5
RANGE $B4E8-$B4ED DB_DATA 5
RANGE $B4ED-$B4F0 DB_DATA 3
RANGE $B4F0-$B4F5 DB_DATA 5
RANGE $B4F5-$B4FA DB_DATA 5
RANGE $B4FA-$B4FD DB_DATA 3
RANGE $B4FD-$B500 DB_DATA 3
RANGE $B500-$B505 DB_DATA 5
RANGE $B505-$B50A DB_DATA 5
RANGE $B50A-$B50F DB_DATA 5
RANGE $B50F-$B512 DB_DATA 3
RANGE $B512-$B517 DB_DATA 5
RANGE $B517-$B51C DB_DATA 5
RANGE $B51C-$B521 DB_DATA 5
RANGE $B521-$B526 DB_DATA 5
RANGE $B526-$B52B DB_DATA 5
RANGE $B52B-$B530 DB_DATA 5
RANGE $B530-$B533 DB_DATA 3
RANGE $B533-$B538 DB_DATA 5
RANGE $B538-$B53D DB_DATA 5
RANGE $B53D-$B542 DB_DATA 5
RANGE $B542-$B545 DB_DATA 3
RANGE $B545-$B54A DB_DATA 5
RANGE $B54A-$B54F DB_DATA 5
RANGE $B54F-$B552 DB_DATA 3
RANGE $B552-$B555 DB_DATA 3
RANGE $B555-$B55A DB_DATA 5
RANGE $B55A-$B55F DB_DATA 5
RANGE $B55F-$B564 DB_DATA 5
RANGE $B564-$B569 DB_DATA 5
RANGE $B569-$B56E DB_DATA 5
RANGE $B56E-$B573 DB_DATA 5
RANGE $B573-$B578 DB_DATA 5
RANGE $B578-$B57D DB_DATA 5
RANGE $B57D-$B582 DB_DATA 5
RANGE $B582-$B587 DB_DATA 5
RANGE $B587-$B58A DB_DATA 3
RANGE $B58A-$B58F DB_DATA 5
RANGE $B58F-$B594 DB_DATA 5
RANGE $B594-$B599 DB_DATA 5
RANGE $B599-$B59C DB_DATA 3
RANGE $B59C-$B5A1 DB_DATA 5
RANGE $B5A1-$B5A6 DB_DATA 5
RANGE $B5A6-$B5A9 DB_DATA 3
RANGE $B5A9-$B5AC DB_DATA 3
RANGE $B5AC-$B5B1 DB_DATA 5
RANGE $B5B1-$B5B6 DB_DATA 5
RANGE $B5B6-$B5BB DB_DATA 5
RANGE $B5BB-$B5BE DB_DATA 3
RANGE $B5BE-$B5C3 DB_DATA 5
RANGE $B5C3-$B5C8 DB_DATA 5
RANGE $B5C8-$B5CD DB_DATA 5
RANGE $B5CD-$B5D2 DB_DATA 5
RANGE $B5D2-$B5D7 DB_DATA 5
RANGE $B5D7-$B5DC DB_DATA 5
RANGE $B5DC-$B5DF DB_DATA 3
RANGE $B5DF-$B5E4 DB_DATA 5
RANGE $B5E4-$B5E9 DB_DATA 5
RANGE $B5E9-$B5EE DB_DATA 5
RANGE $B5EE-$B5F1 DB_DATA 3
RANGE $B5F1-$B5F4 DB_DATA 3
RANGE $B5F4-$B5F7 DB_DATA 3
RANGE $B5F7-$B5FA DB_DATA 3
RANGE $B5FA-$B5FD DB_DATA 3
RANGE $B5FD-$B602 DB_DATA 5
RANGE $B602-$B607 DB_DATA 5
RANGE $B607-$B60C DB_DATA 5
RANGE $B60C-$B60F DB_DATA 3
RANGE $B60F-$B614 DB_DATA 5
RANGE $B614-$B619 DB_DATA 5
RANGE $B619-$B61E DB_DATA 5
RANGE $B61E-$B623 DB_DATA 5
RANGE $B623-$B628 DB_DATA 5
RANGE $B628-$B62D DB_DATA 5
RANGE $B62D-$B630 DB_DATA 3
RANGE $B630-$B635 DB_DATA 5
RANGE $B635-$B63A DB_DATA 5
RANGE $B63A-$B63F DB_DATA 5
RANGE $B63F-$B642 DB_DATA 3
RANGE $B642-$B647 DB_DATA 5
RANGE $B647-$B64C DB_DATA 5
RANGE $B64C-$B64F DB_DATA 3
RANGE $B64F-$B652 DB_DATA 3
RANGE $B652-$B657 DB_DATA 5
RANGE $B657-$B65C DB_DATA 5
RANGE $B65C-$B661 DB_DATA 5
RANGE $B661-$B664 DB_DATA 3
RANGE $B664-$B669 DB_DATA 5
RANGE $B669-$B66E DB_DATA 5
RANGE $B66E-$B673 DB_DATA 5
RANGE $B673-$B678 DB_DATA 5
RANGE $B678-$B67D DB_DATA 5
RANGE $B67D-$B682 DB_DATA 5
RANGE $B682-$B685 DB_DATA 3
RANGE $B685-$B68A DB_DATA 5
RANGE $B68A-$B68F DB_DATA 5
RANGE $B68F-$B694 DB_DATA 5
RANGE $B694-$B697 DB_DATA 3
RANGE $B697-$B69A DB_DATA 3
RANGE $B69A-$B69D DB_DATA 3
RANGE $B69D-$B6A0 DB_DATA 3
RANGE $B6A0-$B6A3 DB_DATA 3
RANGE $B6A3-$B6A8 DB_DATA 5
RANGE $B6A8-$B6AD DB_DATA 5
RANGE $B6AD-$B6B2 DB_DATA 5
RANGE $B6B2-$B6B5 DB_DATA 3
RANGE $B6B5-$B6BA DB_DATA 5
RANGE $B6BA-$B6BF DB_DATA 5
RANGE $B6BF-$B6C4 DB_DATA 5
RANGE $B6C4-$B6C9 DB_DATA 5
RANGE $B6C9-$B6CE DB_DATA 5
RANGE $B6CE-$B6D3 DB_DATA 5
RANGE $B6D3-$B6D6 DB_DATA 3
RANGE $B6D6-$B6DB DB_DATA 5
RANGE $B6DB-$B6E0 DB_DATA 5
RANGE $B6E0-$B6E5 DB_DATA 5
RANGE $B6E5-$B6E8 DB_DATA 3
RANGE $B6E8-$B6ED DB_DATA 5
RANGE $B6ED-$B6F2 DB_DATA 5
RANGE $B6F2-$B6F5 DB_DATA 3
RANGE $B6F5-$B6F8 DB_DATA 3
RANGE $B6F8-$B6FD DB_DATA 5
RANGE $B6FD-$B702 DB_DATA 5
RANGE $B702-$B707 DB_DATA 5
RANGE $B707-$B70C DB_DATA 5
RANGE $B70C-$B711 DB_DATA 5
RANGE $B711-$B716 DB_DATA 5
RANGE $B716-$B71B DB_DATA 5
RANGE $B71B-$B720 DB_DATA 5
RANGE $B720-$B725 DB_DATA 5
RANGE $B725-$B72A DB_DATA 5
RANGE $B72A-$B72D DB_DATA 3
RANGE $B72D-$B732 DB_DATA 5
RANGE $B732-$B737 DB_DATA 5
RANGE $B737-$B73C DB_DATA 5
RANGE $B73C-$B73F DB_DATA 3
RANGE $B73F-$B744 DB_DATA 5
RANGE $B744-$B749 DB_DATA 5
RANGE $B749-$B74C DB_DATA 3
RANGE $B74C-$B74F DB_DATA 3
RANGE $B74F-$B754 DB_DATA 5
RANGE $B754-$B759 DB_DATA 5
RANGE $B759-$B75E DB_DATA 5
RANGE $B75E-$B763 DB_DATA 5
RANGE $B763-$B768 DB_DATA 5
RANGE $B768-$B76D DB_DATA 5
RANGE $B76D-$B772 DB_DATA 5
RANGE $B772-$B774 DW_DATA 1
RANGE $B774-$B775 DB_DATA 1
RANGE $B775-$B777 DW_DATA 1
RANGE $B777-$B779 DB_DATA 2
RANGE $B779-$B77B DW_DATA 1
RANGE $B77B-$B77C DB_DATA 1
RANGE $B77C-$B77E DW_DATA 1
RANGE $B77E-$B780 DB_DATA 2
RANGE $B780-$B782 DW_DATA 1
RANGE $B782-$B783 DB_DATA 1
RANGE $B783-$B785 DW_DATA 1
RANGE $B785-$B787 DB_DATA 2
RANGE $B787-$B789 DW_DATA 1
RANGE $B789-$B78A DB_DATA 1
RANGE $B78A-$B78C DW_DATA 1
RANGE $B78C-$B78F DB_DATA 3
RANGE $B78F-$B791 DW_DATA 1
RANGE $B791-$B793 DW_DATA 1
RANGE $B793-$B795 DW_DATA 1
RANGE $B795-$B797 DW_DATA 1
RANGE $B797-$B799 DW_DATA 1
RANGE $B799-$B79B DW_DATA 1
RANGE $B79B-$B79D DW_DATA 1
RANGE $B79D-$B79F DW_DATA 1
RANGE $B79F-$B7A1 DW_DATA 1
RANGE $B7A1-$B7A3 DW_DATA 1
RANGE $B7A3-$B7A5 DW_DATA 1
RANGE $B7A5-$B7A7 DW_DATA 1
RANGE $B7A7-$B7A9 DW_DATA 1
RANGE $B7A9-$B7AB DW_DATA 1
RANGE $B7AB-$B7B0 DB_DATA 5
RANGE $B7B0-$B7B5 DB_DATA 5
RANGE $B7B5-$B7BA DB_DATA 5
RANGE $B7BA-$B7BF DB_DATA 5
RANGE $B7BF-$B7C4 DB_DATA 5
RANGE $B7C4-$B7C7 DB_DATA 3
RANGE $B7C7-$B7CA DB_DATA 3
RANGE $B7CA-$B7CD DB_DATA 3
RANGE $B7CD-$B7D0 DB_DATA 3
RANGE $B7D0-$B7D5 DB_DATA 5
RANGE $B7D5-$B7D8 DB_DATA 3
RANGE $B7D8-$B7DB DB_DATA 3
RANGE $B7DB-$B7DE DB_DATA 3
RANGE $B7DE-$B7E1 DB_DATA 3
RANGE $B7E1-$B7E6 DB_DATA 5
RANGE $B7E6-$B7EB DB_DATA 5
RANGE $B7EB-$B7F0 DB_DATA 5
RANGE $B7F0-$B7F5 DB_DATA 5
RANGE $B7F5-$B7FA DB_DATA 5
RANGE $B7FA-$B7FF DB_DATA 5
RANGE $B7FF-$B804 DB_DATA 5
RANGE $B804-$B807 DB_DATA 3
RANGE $B807-$B80A DB_DATA 3
RANGE $B80A-$B80D DB_DATA 3
RANGE $B80D-$B810 DB_DATA 3
RANGE $B810-$B813 DB_DATA 3
RANGE $B813-$B816 DB_DATA 3
RANGE $B816-$B81B DB_DATA 5
RANGE $B81B-$B81E DB_DATA 3
RANGE $B81E-$B821 DB_DATA 3
RANGE $B821-$B824 DB_DATA 3
RANGE $B824-$B827 DB_DATA 3
RANGE $B827-$B82A DB_DATA 3
RANGE $B82A-$B82D DB_DATA 3
RANGE $B82D-$B832 DB_DATA 5
RANGE $B832-$B837 DB_DATA 5
RANGE $B837-$B83C DB_DATA 5
RANGE $B83C-$B841 DB_DATA 5
RANGE $B841-$B846 DB_DATA 5
RANGE $B846-$B849 DB_DATA 3
RANGE $B849-$B84C DB_DATA 3
RANGE $B84C-$B84F DB_DATA 3
RANGE $B84F-$B852 DB_DATA 3
RANGE $B852-$B855 DB_DATA 3
RANGE $B855-$B858 DB_DATA 3
RANGE $B858-$B85D DB_DATA 5
RANGE $B85D-$B860 DB_DATA 3
RANGE $B860-$B863 DB_DATA 3
RANGE $B863-$B866 DB_DATA 3
RANGE $B866-$B869 DB_DATA 3
RANGE $B869-$B86C DB_DATA 3
RANGE $B86C-$B86F DB_DATA 3
RANGE $B86F-$B874 DB_DATA 5
RANGE $B874-$B879 DB_DATA 5
RANGE $B879-$B87E DB_DATA 5
RANGE $B87E-$B883 DB_DATA 5
RANGE $B883-$B888 DB_DATA 5
RANGE $B888-$B88B DB_DATA 3
RANGE $B88B-$B88E DB_DATA 3
RANGE $B88E-$B891 DB_DATA 3
RANGE $B891-$B894 DB_DATA 3
RANGE $B894-$B897 DB_DATA 3
RANGE $B897-$B89A DB_DATA 3
RANGE $B89A-$B89F DB_DATA 5
RANGE $B89F-$B8A2 DB_DATA 3
RANGE $B8A2-$B8A5 DB_DATA 3
RANGE $B8A5-$B8A8 DB_DATA 3
RANGE $B8A8-$B8AB DB_DATA 3
RANGE $B8AB-$B8AE DB_DATA 3
RANGE $B8AE-$B8B1 DB_DATA 3
RANGE $B8B1-$B8B6 DB_DATA 5
RANGE $B8B6-$B8BB DB_DATA 5
RANGE $B8BB-$B8C0 DB_DATA 5
RANGE $B8C0-$B8C5 DB_DATA 5
RANGE $B8C5-$B8CA DB_DATA 5
RANGE $B8CA-$B8CF DB_DATA 5
RANGE $B8CF-$B8D4 DB_DATA 5
RANGE $B8D4-$B8D7 DB_DATA 3
RANGE $B8D7-$B8DA DB_DATA 3
RANGE $B8DA-$B8DD DB_DATA 3
RANGE $B8DD-$B8E0 DB_DATA 3
RANGE $B8E0-$B8E5 DB_DATA 5
RANGE $B8E5-$B8E8 DB_DATA 3
RANGE $B8E8-$B8EB DB_DATA 3
RANGE $B8EB-$B8EE DB_DATA 3
RANGE $B8EE-$B8F1 DB_DATA 3
RANGE $B8F1-$B8F4 DB_DATA 3
RANGE $B8F4-$B8F7 DB_DATA 3
RANGE $B8F7-$B8FC DB_DATA 5
RANGE $B8FC-$B901 DB_DATA 5
RANGE $B901-$B906 DB_DATA 5
RANGE $B906-$B90B DB_DATA 5
RANGE $B90B-$B910 DB_DATA 5
RANGE $B910-$B913 DB_DATA 3
RANGE $B913-$B916 DB_DATA 3
RANGE $B916-$B91B DB_DATA 5
RANGE $B91B-$B920 DB_DATA 5
RANGE $B920-$B923 DB_DATA 3
RANGE $B923-$B926 DB_DATA 3
RANGE $B926-$B92B DB_DATA 5
RANGE $B92B-$B92E DB_DATA 3
RANGE $B92E-$B931 DB_DATA 3
RANGE $B931-$B934 DB_DATA 3
RANGE $B934-$B937 DB_DATA 3
RANGE $B937-$B93A DB_DATA 3
RANGE $B93A-$B93D DB_DATA 3
RANGE $B93D-$B942 DB_DATA 5
RANGE $B942-$B947 DB_DATA 5
RANGE $B947-$B94C DB_DATA 5
RANGE $B94C-$B951 DB_DATA 5
RANGE $B951-$B956 DB_DATA 5
RANGE $B956-$B959 DB_DATA 3
RANGE $B959-$B95C DB_DATA 3
RANGE $B95C-$B95F DB_DATA 3
RANGE $B95F-$B962 DB_DATA 3
RANGE $B962-$B965 DB_DATA 3
RANGE $B965-$B968 DB_DATA 3
RANGE $B968-$B96D DB_DATA 5
RANGE $B96D-$B970 DB_DATA 3
RANGE $B970-$B973 DB_DATA 3
RANGE $B973-$B976 DB_DATA 3
RANGE $B976-$B979 DB_DATA 3
RANGE $B979-$B97C DB_DATA 3
RANGE $B97C-$B97F DB_DATA 3
RANGE $B97F-$B984 DB_DATA 5
RANGE $B984-$B989 DB_DATA 5
RANGE $B989-$B98E DB_DATA 5
RANGE $B98E-$B993 DB_DATA 5
RANGE $B993-$B998 DB_DATA 5
RANGE $B998-$B99B DB_DATA 3
RANGE $B99B-$B99E DB_DATA 3
RANGE $B99E-$B9A1 DB_DATA 3
RANGE $B9A1-$B9A4 DB_DATA 3
RANGE $B9A4-$B9A7 DB_DATA 3
RANGE $B9A7-$B9AA DB_DATA 3
RANGE $B9AA-$B9AF DB_DATA 5
RANGE $B9AF-$B9B2 DB_DATA 3
RANGE $B9B2-$B9B5 DB_DATA 3
RANGE $B9B5-$B9B8 DB_DATA 3
RANGE $B9B8-$B9BB DB_DATA 3
RANGE $B9BB-$B9BE DB_DATA 3
RANGE $B9BE-$B9C1 DB_DATA 3
RANGE $B9C1-$B9C6 DB_DATA 5
RANGE $B9C6-$B9CB DB_DATA 5
RANGE $B9CB-$B9D0 DB_DATA 5
RANGE $B9D0-$B9D5 DB_DATA 5
RANGE $B9D5-$B9DA DB_DATA 5
RANGE $B9DA-$B9DF DB_DATA 5
RANGE $B9DF-$B9E4 DB_DATA 5
RANGE $B9E4-$B9E7 DB_DATA 3
RANGE $B9E7-$B9EA DB_DATA 3
RANGE $B9EA-$B9ED DB_DATA 3
RANGE $B9ED-$B9F0 DB_DATA 3
RANGE $B9F0-$B9F5 DB_DATA 5
RANGE $B9F5-$B9F8 DB_DATA 3
RANGE $B9F8-$B9FB DB_DATA 3
RANGE $B9FB-$B9FE DB_DATA 3
RANGE $B9FE-$BA01 DB_DATA 3
RANGE $BA01-$BA06 DB_DATA 5
RANGE $BA06-$BA0B DB_DATA 5
RANGE $BA0B-$BA0E DB_DATA 3
RANGE $BA0E-$BA13 DB_DATA 5
RANGE $BA13-$BA18 DB_DATA 5
RANGE $BA18-$BA1D DB_DATA 5
RANGE $BA1D-$BA22 DB_DATA 5
RANGE $BA22-$BA27 DB_DATA 5
RANGE $BA27-$BA2C DB_DATA 5
RANGE $BA2C-$BA2F DB_DATA 3
RANGE $BA2F-$BA32 DB_DATA 3
RANGE $BA32-$BA35 DB_DATA 3
RANGE $BA35-$BA38 DB_DATA 3
RANGE $BA38-$BA3D DB_DATA 5
RANGE $BA3D-$BA40 DB_DATA 3
RANGE $BA40-$BA43 DB_DATA 3
RANGE $BA43-$BA46 DB_DATA 3
RANGE $BA46-$BA49 DB_DATA 3
RANGE $BA49-$BA4E DB_DATA 5
RANGE $BA4E-$BA53 DB_DATA 5
RANGE $BA53-$BA56 DB_DATA 3
RANGE $BA56-$BA5B DB_DATA 5
RANGE $BA5B-$BA5D DW_DATA 1
RANGE $BA5D-$BA5E DB_DATA 1
RANGE $BA5E-$BA60 DW_DATA 1
RANGE $BA60-$BA62 DB_DATA 2
RANGE $BA62-$BA64 DW_DATA 1
RANGE $BA64-$BA66 DW_DATA 1
RANGE $BA66-$BA68 DW_DATA 1
RANGE $BA68-$BA6A DW_DATA 1
RANGE $BA6A-$BA6C DW_DATA 1
RANGE $BA6C-$BA6E DW_DATA 1
RANGE $BA6E-$BA70 DW_DATA 1
RANGE $BA70-$BA72 DW_DATA 1
RANGE $BA72-$BA74 DW_DATA 1
RANGE $BA74-$BA76 DW_DATA 1
RANGE $BA76-$BA78 DW_DATA 1
RANGE $BA78-$BA7A DW_DATA 1
RANGE $BA7A-$BA7F DB_DATA 5
RANGE $BA7F-$BA84 DB_DATA 5
RANGE $BA84-$BA89 DB_DATA 5
RANGE $BA89-$BA8C DB_DATA 3
RANGE $BA8C-$BA8F DB_DATA 3
RANGE $BA8F-$BA92 DB_DATA 3
RANGE $BA92-$BA95 DB_DATA 3
RANGE $BA95-$BA98 DB_DATA 3
RANGE $BA98-$BA9B DB_DATA 3
RANGE $BA9B-$BAA0 DB_DATA 5
RANGE $BAA0-$BAA3 DB_DATA 3
RANGE $BAA3-$BAA6 DB_DATA 3
RANGE $BAA6-$BAA9 DB_DATA 3
RANGE $BAA9-$BAAC DB_DATA 3
RANGE $BAAC-$BAAF DB_DATA 3
RANGE $BAAF-$BAB2 DB_DATA 3
RANGE $BAB2-$BAB7 DB_DATA 5
RANGE $BAB7-$BABA DB_DATA 3
RANGE $BABA-$BABD DB_DATA 3
RANGE $BABD-$BAC2 DB_DATA 5
RANGE $BAC2-$BAC7 DB_DATA 5
RANGE $BAC7-$BACC DB_DATA 5
RANGE $BACC-$BAD1 DB_DATA 5
RANGE $BAD1-$BAD4 DB_DATA 3
RANGE $BAD4-$BAD7 DB_DATA 3
RANGE $BAD7-$BADA DB_DATA 3
RANGE $BADA-$BADD DB_DATA 3
RANGE $BADD-$BAE0 DB_DATA 3
RANGE $BAE0-$BAE3 DB_DATA 3
RANGE $BAE3-$BAE8 DB_DATA 5
RANGE $BAE8-$BAEB DB_DATA 3
RANGE $BAEB-$BAEE DB_DATA 3
RANGE $BAEE-$BAF1 DB_DATA 3
RANGE $BAF1-$BAF4 DB_DATA 3
RANGE $BAF4-$BAF7 DB_DATA 3
RANGE $BAF7-$BAFA DB_DATA 3
RANGE $BAFA-$BAFF DB_DATA 5
RANGE $BAFF-$BB02 DB_DATA 3
RANGE $BB02-$BB05 DB_DATA 3
RANGE $BB05-$BB0A DB_DATA 5
RANGE $BB0A-$BB0C DW_DATA 1
RANGE $BB0C-$BB0E DW_DATA 1
RANGE $BB0E-$BB10 DW_DATA 1
RANGE $BB10-$BB12 DW_DATA 1
RANGE $BB12-$BB14 DW_DATA 1
RANGE $BB14-$BB19 DB_DATA 5
RANGE $BB19-$BB1E DB_DATA 5
RANGE $BB1E-$BB23 DB_DATA 5
RANGE $BB23-$BB26 DB_DATA 3
RANGE $BB26-$BB29 DB_DATA 3
RANGE $BB29-$BB2C DB_DATA 3
RANGE $BB2C-$BB2F DB_DATA 3
RANGE $BB2F-$BB32 DB_DATA 3
RANGE $BB32-$BB35 DB_DATA 3
RANGE $BB35-$BB3A DB_DATA 5
RANGE $BB3A-$BB3D DB_DATA 3
RANGE $BB3D-$BB40 DB_DATA 3
RANGE $BB40-$BB43 DB_DATA 3
RANGE $BB43-$BB48 DB_DATA 5
RANGE $BB48-$BB4D DB_DATA 5
RANGE $BB4D-$BB52 DB_DATA 5
RANGE $BB52-$BB57 DB_DATA 5
RANGE $BB57-$BB5A DB_DATA 3
RANGE $BB5A-$BB5D DB_DATA 3
RANGE $BB5D-$BB60 DB_DATA 3
RANGE $BB60-$BB63 DB_DATA 3
RANGE $BB63-$BB66 DB_DATA 3
RANGE $BB66-$BB69 DB_DATA 3
RANGE $BB69-$BB6E DB_DATA 5
RANGE $BB6E-$BB71 DB_DATA 3
RANGE $BB71-$BB74 DB_DATA 3
RANGE $BB74-$BB77 DB_DATA 3
RANGE $BB77-$BB7C DB_DATA 5
RANGE $BB7C-$BB81 DB_DATA 5
RANGE $BB81-$BB86 DB_DATA 5
RANGE $BB86-$BB8B DB_DATA 5
RANGE $BB8B-$BB8E DB_DATA 3
RANGE $BB8E-$BB91 DB_DATA 3
RANGE $BB91-$BB94 DB_DATA 3
RANGE $BB94-$BB97 DB_DATA 3
RANGE $BB97-$BB9A DB_DATA 3
RANGE $BB9A-$BB9D DB_DATA 3
RANGE $BB9D-$BBA2 DB_DATA 5
RANGE $BBA2-$BBA5 DB_DATA 3
RANGE $BBA5-$BBA8 DB_DATA 3
RANGE $BBA8-$BBAB DB_DATA 3
RANGE $BBAB-$BBB0 DB_DATA 5
RANGE $BBB0-$BBB5 DB_DATA 5
RANGE $BBB5-$BBBA DB_DATA 5
RANGE $BBBA-$BBBF DB_DATA 5
RANGE $BBBF-$BBC2 DB_DATA 3
RANGE $BBC2-$BBC5 DB_DATA 3
RANGE $BBC5-$BBC8 DB_DATA 3
RANGE $BBC8-$BBCB DB_DATA 3
RANGE $BBCB-$BBCE DB_DATA 3
RANGE $BBCE-$BBD1 DB_DATA 3
RANGE $BBD1-$BBD6 DB_DATA 5
RANGE $BBD6-$BBD9 DB_DATA 3
RANGE $BBD9-$BBDC DB_DATA 3
RANGE $BBDC-$BBDF DB_DATA 3
RANGE $BBDF-$BBE2 DB_DATA 3
RANGE $BBE2-$BBE7 DB_DATA 5
RANGE $BBE7-$BC78 CODE

